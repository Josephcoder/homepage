{"version":3,"sources":["containers/QuestionBank/QuestionSettings/Courses/Courses.tsx","containers/QuestionBank/QuestionSettings/Courses/AddCourse.tsx","containers/QuestionBank/QuestionSettings/SettingsComponents/SchoolLevelSelect.tsx","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","containers/QuestionBank/QuestionSettings/SchoolLevels/SchoolLevels.tsx","containers/QuestionBank/QuestionSettings/SettingsComponents/EducationCategorySelect.tsx","containers/QuestionBank/QuestionSettings/SchoolLevels/AddSchoolLevel.tsx","containers/QuestionBank/QuestionSettings/EducationCategories/EducationCategories.tsx","containers/QuestionBank/QuestionSettings/EducationCategories/AddEducationCategory.tsx","containers/QuestionBank/QuestionSettings/QuestionTypes/QuestionTypes.tsx","containers/QuestionBank/QuestionSettings/QuestionTypes/AddQuestionType.tsx"],"names":["CoursesAction","Courses","connect","auth","periods","schoolLevels","system","course","loadApplicationPeriods","setSelectedPeriod","loadSchoolLevels","setSelectedEducationCategory","PushPopupAlert","loadCourses","setSelectedCourse","props","useState","loading","setLoading","addNew","setAddNew","search","setSearch","selectedCourse","setSelectedCourseComp","course_selected","deleteCourseFn","a","undefined","course_id","axios","delete","API","APPLICATION","title","theme","PopupAlertTheme","success","warning","console","log","useEffect","school_levels","length","courses","className","onClick","onChange","e","target","value","type","placeholder","searchData","map","item","i","course_name","description","action","View","Update","Delete","backDrop","Themes","default","close","widthSizeClass","ModalSize","extraLarge","displayClose","backDropClose","padding","body","closeModal","state","deleteSelected","chaptersOnly","medium","AddCourse","setCourse_id","setCourse_name","course_code","setCourse_code","setDescription","chapters","setChapters","setSchool_levels","formError","setFormError","openAdd","chapter","addChapter","setAddChapter","submitCourse","preventDefault","element","msg","obj","patch","info","post","response","data","errors","message","danger","onSubmit","disabled","style","minHeight","name","status","id","uuidv4","addNewChapter","filter","itm","SchoolLevelSelect","height","find","school_level_id","x","school_level_name","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","push","toString","substr","stringify","arr","offset","arguments","toLowerCase","TypeError","v4","options","buf","rnds","random","SchoolLevelsAction","EducationCategorySelect","education_categories","setEducationCategories","education_institute_id","education_category_title","AddSchoolLevel","setSchool_level_id","school_level_title","setSchool_level_title","education_category","setEducation_category","submitSchoolLevel","selectedSchoolLevel","education_institute","SchoolLevels","questionTypes","setSelectedSchoolLevel","deleteEducationCategoryFn","school_level","Loading","Modal","EducationCategoryTypeAction","AddEducationCategory","setEducation_institute_id","setEducation_category_title","submitEducationCategory","selectedEducationCategory","EducationCategories","loadEducationCategories","QT_QuestionTypeAction","AddQuestionType","setTitle","setElement","submitQuestionType","selectedQuestionType","put","QBank","questionTypeElements","key","selected","QuestionTypes","loadQuestionTypes","setSelectedQuestionType","deleteQuestionTypeFn","questionType"],"mappings":"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","file":"static/js/9.7de49d8f.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdEdit } from \"react-icons/md\";\nimport { CgDetailsMore } from \"react-icons/cg\";\nimport { HiOutlineDocumentSearch } from \"react-icons/hi\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  applicationPeriodsStoreInterface,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  setSelectedEducationCategory,\n  System,\n  PushPopupAlert,\n  courseStoreInterface,\n  loadCourses,\n  setSelectedCourse,\n} from \"../../../../actions\";\nimport Loading from \"../../../../components/Loading/Loading\";\nimport { StoreState } from \"../../../../reducers\";\nimport Modal, { ModalSize, Themes } from \"../../../../components/Modal/Modal\";\nimport { PopupAlertData } from \"../../../../components/Alert/Popup\";\nimport { IoMdTrash } from \"react-icons/io\";\nimport axios from \"axios\";\nimport { API } from \"../../../../utils/api\";\nimport { PopupAlertTheme } from \"../../../../interfaces/popupAlert\";\nimport { course } from \"../../../../interfaces\";\nimport AddCourse from \"./AddCourse\";\nimport searchData from \"../../../../utils/search\";\n\ninterface CoursePropsInterface {\n  system: System;\n  course: courseStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  setSelectedCourse: (course: course | null) => void;\n}\n\nexport enum CoursesAction {\n  Create = \"Create\",\n  View = \"View\",\n  Delete = \"Delete\",\n  Update = \"Update\",\n}\n\nexport interface S_CourseDetails {\n  action: CoursesAction;\n  selectedCourse: course;\n}\n\nconst _Courses = (props: CoursePropsInterface) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [addNew, setAddNew] = useState<boolean>(false);\n  const [search, setSearch] = useState<string>(\"\");\n  const [selectedCourse, setSelectedCourseComp] =\n    useState<S_CourseDetails | null>(null);\n\n  const closeAddNewModal = (state: boolean) => {\n    props.loadCourses(setLoading);\n    setAddNew(state);\n  };\n\n  const setSelectedCourse = (course_selected: S_CourseDetails | null) => {\n    setSelectedCourseComp(course_selected);\n    if (course_selected !== null) {\n      props.setSelectedCourse(course_selected.selectedCourse);\n    }\n  };\n\n  const deleteCourseFn = async (course: course) => {\n    if (course.course_id !== undefined) {\n      setLoading(true);\n      try {\n        await axios.delete(`${API.APPLICATION}/course/${course.course_id}`);\n        props.loadCourses(setLoading);\n        props.PushPopupAlert({\n          title: `Course removed successfully`,\n          theme: PopupAlertTheme.success,\n        });\n        setSelectedCourse(null);\n        // console.log(\"Deleted: \", res);\n      } catch (error) {\n        props.PushPopupAlert({\n          title: `Acton failed, Try again later!`,\n          theme: PopupAlertTheme.warning,\n        });\n        setLoading(false);\n        setSelectedCourse(null);\n        console.log(\"err: \", error);\n      }\n      // setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (\n      props.schoolLevels.school_levels === null ||\n      props.schoolLevels.school_levels.length === 0\n    ) {\n      props.loadSchoolLevels(setLoading);\n    }\n    if (props.course.courses === null || props.course.courses.length === 0) {\n      props.loadCourses(setLoading);\n    }\n  }, [props, setLoading]);\n  return (\n    <Fragment>\n      <div className=\"mt-1\">\n        <div className=\"flex flex-row justify-between items-center bg-gray-100 py-1\">\n          <div className=\"text-blue-600 font-extrabold text-xl px-2\">\n            List of courses\n          </div>\n          {loading === false && (\n            <div\n              onClick={() => setAddNew(true)}\n              className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\"\n            >\n              Add new\n            </div>\n          )}\n        </div>\n        <div>\n          <input\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setSearch(e.target.value)\n            }\n            type=\"text\"\n            className=\"input-white border border-gray-500 my-2\"\n            placeholder=\"Search\"\n            value={search}\n          />\n        </div>\n        <div className=\"flex flex-col\">\n          {props.course.courses === null || loading === true ? (\n            <Loading />\n          ) : props.course.courses.length === 0 ? (\n            <div className=\"text-gray-400 px-6 py-4 rounded border mt-4 text-xl font-extrabold flex flex-col items-center justify-center bg-gray-100\">\n              <HiOutlineDocumentSearch className=\"text-7xl text-gray-400 animate__animated animate__shakeX\" />\n              <span>No courses available</span>\n            </div>\n          ) : (\n            searchData(props.course.courses, search).map((item, i) => (\n              <div\n                className={`border flex flex-row px-3 py-2 rounded items-center my-1 justify-between`}\n              >\n                <div className=\"flex flex-col\">\n                  <span className=\"text-gray-600 font-extrabold\">\n                    {item.course_name}\n                  </span>\n                  <span className={`text-xs pr-5 text-gray-500`}>\n                    {item.description}\n                  </span>\n                </div>\n                <div className=\"flex flex-row items-center gap-2\">\n                  <div\n                    onClick={() =>\n                      setSelectedCourse({\n                        action: CoursesAction.View,\n                        selectedCourse: item,\n                      })\n                    }\n                    className=\"bg-gray-50 hover:bg-gray-200 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <CgDetailsMore className=\"text-3xl text-gray-700\" />\n                  </div>\n                  <div\n                    onClick={() =>\n                      setSelectedCourse({\n                        action: CoursesAction.Update,\n                        selectedCourse: item,\n                      })\n                    }\n                    className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <MdEdit className=\"text-3xl text-blue-700\" />\n                  </div>\n                  <div\n                    onClick={() =>\n                      setSelectedCourse({\n                        action: CoursesAction.Delete,\n                        selectedCourse: item,\n                      })\n                    }\n                    className=\"bg-gray-100 hover:bg-red-100 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <IoMdTrash className=\"text-3xl text-yellow-700\" />\n                  </div>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n      {(addNew === true ||\n        (selectedCourse !== null &&\n          (selectedCourse.action === CoursesAction.Update ||\n            selectedCourse.action === CoursesAction.View))) && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <div className=\"flex flex-col\">\n                <span className=\"font-extrabold text-2xl text-gray-500\">\n                  {selectedCourse !== null &&\n                  selectedCourse.action === CoursesAction.Update\n                    ? selectedCourse.selectedCourse.course_name\n                    : selectedCourse !== null &&\n                      selectedCourse.action === CoursesAction.View\n                    ? selectedCourse.selectedCourse.course_name\n                    : \"Add new course\"}\n                </span>\n                <span className=\"text-sm text-gray-500 font-normal\">\n                  {selectedCourse !== null &&\n                  selectedCourse.action === CoursesAction.Update\n                    ? \"Update the selected course\"\n                    : selectedCourse !== null &&\n                      selectedCourse.action === CoursesAction.View\n                    ? \"View more details for the selected course\"\n                    : \"Course will be used in different components in the system, make sure what you're creating\"}\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => {\n            setAddNew(false);\n            setSelectedCourse(null);\n          }}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          backDropClose={true}\n          padding={{ title: true, body: true }}\n        >\n          <AddCourse\n            closeModal={closeAddNewModal}\n            courses={props.course}\n            PushPopupAlert={props.PushPopupAlert}\n            selectedCourse={selectedCourse}\n            deleteSelected={setSelectedCourse}\n            schoolLevels={props.schoolLevels}\n            setSelectedCourse={setSelectedCourse}\n            chaptersOnly={false}\n          />\n        </Modal>\n      )}\n      {selectedCourse !== null &&\n        selectedCourse.action === CoursesAction.Delete && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <div className=\"flex flex-col\">\n                  <span className=\"font-extrabold text-2xl text-gray-500\">\n                    {selectedCourse.selectedCourse.course_name}\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => setSelectedCourse(null)}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            backDropClose={true}\n            padding={{ title: true, body: true }}\n          >\n            <div className=\"-mt-6\">\n              <span className=\"text-red-600 font-bold\">\n                Are you sure do you want to delete this course?\n              </span>\n              <div className=\"flex flex-row items-center justify-between mt-2\">\n                <div\n                  onClick={() => setSelectedCourse(null)}\n                  className=\"btn bg-gray-100 text-gray-700 cursor-pointer hover:bg-gray-200\"\n                >\n                  Cancel\n                </div>\n                <div\n                  onClick={() => deleteCourseFn(selectedCourse.selectedCourse)}\n                  className=\"btn bg-red-600 text-white cursor-pointer hover:bg-red-800\"\n                >\n                  Yes, Delete\n                </div>\n              </div>\n            </div>\n          </Modal>\n        )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  periods,\n  schoolLevels,\n  system,\n  course,\n}: StoreState): {\n  auth: Auth;\n  periods: applicationPeriodsStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  system: System;\n  course: courseStoreInterface;\n} => {\n  return {\n    auth: auth,\n    periods: periods,\n    schoolLevels: schoolLevels,\n    system: system,\n    course: course,\n  };\n};\n\nconst Courses = connect(mapStateToProps, {\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  loadSchoolLevels,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n  loadCourses,\n  setSelectedCourse,\n})(_Courses);\n\nexport default Courses;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { IoMdAddCircle } from \"react-icons/io\";\nimport { courseStoreInterface } from \"../../../../actions/course\";\nimport { schoolLevelsStoreInterface } from \"../../../../actions/school_levels\";\nimport { PopupAlertData } from \"../../../../components/Alert/Popup\";\nimport { course, CourseChapter } from \"../../../../interfaces/course\";\nimport { formErrorInterface } from \"../../../../interfaces/form\";\nimport { PopupAlertTheme } from \"../../../../interfaces/popupAlert\";\nimport { API } from \"../../../../utils/api\";\nimport SchoolLevelSelect from \"../SettingsComponents/SchoolLevelSelect\";\nimport { CoursesAction, S_CourseDetails } from \"./Courses\";\nimport { v4 as uuidv4 } from \"uuid\";\n\ninterface AddCourseProps {\n  closeModal: (state: boolean) => void;\n  courses: courseStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  selectedCourse: S_CourseDetails | null;\n  deleteSelected: (selectedDetail: S_CourseDetails) => void;\n  schoolLevels: schoolLevelsStoreInterface;\n  setSelectedCourse: (courseDetail: S_CourseDetails | null) => void;\n  chaptersOnly: boolean;\n}\n\nconst AddCourse = (props: AddCourseProps) => {\n  // States\n  const [course_id, setCourse_id] = useState<string>(\"\");\n  const [course_name, setCourse_name] = useState<string>(\"\");\n  const [course_code, setCourse_code] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [chapters, setChapters] = useState<CourseChapter[]>([]);\n  const [school_levels, setSchool_levels] = useState<string[]>([]);\n  const [formError, setFormError] = useState<formErrorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [addChapter, setAddChapter] = useState<{\n    openAdd: boolean;\n    chapter: string;\n  }>({ openAdd: false, chapter: \"\" });\n  const submitCourse = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // validation\n    if (\n      props.selectedCourse?.action === CoursesAction.Update &&\n      course_id === \"\"\n    ) {\n      return setFormError({\n        element: \"course_id\",\n        msg: \"Please choose Course\",\n      });\n    } else if (course_name === \"\") {\n      return setFormError({\n        element: \"course_name\",\n        msg: \"Please fill the course name\",\n      });\n    } else if (course_code === \"\") {\n      return setFormError({\n        element: \"course_code\",\n        msg: \"Please fill the course code\",\n      });\n    } else if (description === \"\") {\n      return setFormError({\n        element: \"description\",\n        msg: \"Please fill the description\",\n      });\n    } else {\n      setLoading(true);\n      try {\n        // Update current\n        if (\n          props.selectedCourse !== null &&\n          props.selectedCourse.selectedCourse.course_id !== undefined\n        ) {\n          let obj: course = {\n            course_id: course_id,\n            course_name: course_name,\n            course_code: course_code,\n            description: description,\n            school_levels: school_levels,\n            chapters: chapters,\n          };\n          await axios.patch(`${API.APPLICATION}/course`, obj);\n          props.PushPopupAlert({\n            title: `Course updated successfully`,\n            description: `After updating the course, you have access to delete and update it!`,\n            theme: PopupAlertTheme.info,\n          });\n          props.setSelectedCourse({\n            action: props.selectedCourse.action,\n            selectedCourse: obj,\n          });\n          props.closeModal(false);\n          // console.log(\"Result: \", res);\n        } else {\n          // Add new\n          await axios.post(`${API.APPLICATION}/course`, {\n            course_name: course_name,\n            course_code: course_code,\n            description: description,\n            school_levels: school_levels,\n            chapters: chapters,\n          });\n          props.PushPopupAlert({\n            title: `Course added successfully`,\n            description: `After adding the Course, you have access to delete and update it!`,\n            theme: PopupAlertTheme.success,\n          });\n          props.closeModal(false);\n          // console.log(\"Result: \", res);\n        }\n      } catch (error: any) {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.errors !== undefined) {\n              if (error.response.data.errors.length > 0) {\n                props.PushPopupAlert({\n                  title: error.response.data.errors[0].message,\n                  theme: PopupAlertTheme.danger,\n                });\n              } else {\n                props.PushPopupAlert({\n                  title: `Failed to add course! Try again`,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            } else {\n              props.PushPopupAlert({\n                title: `Failed to add course! Try again`,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          } else {\n            props.PushPopupAlert({\n              title: `Failed to add course! Try again`,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n        console.log(\"Err: \", { ...error });\n      }\n      setLoading(false);\n    }\n  };\n\n  const addNewChapter = () => {\n    if (addChapter.chapter === \"\") {\n      return setAddChapter({ openAdd: false, chapter: \"\" });\n    }\n    if (addChapter.openAdd === true) {\n      setAddChapter({ openAdd: true, chapter: \"\" });\n      setChapters([\n        {\n          name: addChapter.chapter,\n          status: 1,\n          id: uuidv4(),\n        },\n        ...chapters,\n      ]);\n    }\n  };\n\n  const removeChapter = (chapter: CourseChapter) => {\n    setChapters(chapters.filter((itm) => itm.id !== chapter.id));\n  };\n\n  useEffect(() => {\n    if (props.selectedCourse !== null) {\n      // console.log(\"Sle: \", props.selectedCourse);\n      if (course_id === \"\") {\n        setCourse_id(props.selectedCourse.selectedCourse.course_id);\n      }\n      if (course_name === \"\") {\n        setCourse_name(props.selectedCourse.selectedCourse.course_name);\n      }\n      if (course_code === \"\") {\n        setCourse_code(props.selectedCourse.selectedCourse.course_code);\n      }\n      if (description === \"\") {\n        setDescription(props.selectedCourse.selectedCourse.description);\n      }\n      if (school_levels.length === 0) {\n        setSchool_levels(props.selectedCourse.selectedCourse.school_levels);\n      }\n      if (chapters.length === 0) {\n        if (props.selectedCourse.selectedCourse.chapters !== undefined) {\n          setChapters(props.selectedCourse.selectedCourse.chapters);\n        }\n      }\n    }\n  }, [\n    props,\n    course_id,\n    course_name,\n    course_code,\n    description,\n    school_levels,\n    chapters,\n  ]);\n  return (\n    <form onSubmit={submitCourse} className=\"-mt-2\">\n      <div className=\"grid md:grid-cols-12 gap-5\">\n        {props.chaptersOnly === false && (\n          <div className=\"col-span-6\">\n            <SchoolLevelSelect\n              schoolLevels={props.schoolLevels}\n              school_levels={school_levels}\n              setSchool_levels={setSchool_levels}\n              loading={loading}\n            />\n          </div>\n        )}\n        <div\n          className={`${\n            props.chaptersOnly === false ? \"col-span-6\" : \"col-span-12\"\n          }`}\n        >\n          {props.chaptersOnly === false && (\n            <div className=\"flex flex-col mb-2\">\n              <span className=\"text-sm text-gray-600 font-bold mb-1\">\n                Course name\n              </span>\n              <input\n                disabled={loading}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setCourse_name(e.target.value);\n                  setFormError(null);\n                }}\n                type=\"text\"\n                value={course_name}\n                className={`input-white border-2 ${\n                  formError !== null && formError.element === \"course_name\"\n                    ? \"border-red-500\"\n                    : \"border-gray-500\"\n                }`}\n              />\n              {formError !== null && formError.element === \"course_name\" && (\n                <span className=\"text-red-600 font-bold text-xs\">\n                  {formError.msg}\n                </span>\n              )}\n            </div>\n          )}\n          {props.chaptersOnly === false && (\n            <div className=\"flex flex-col mb-2\">\n              <span className=\"text-sm text-gray-600 font-bold mb-1\">\n                Course code\n              </span>\n              <input\n                disabled={loading}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setCourse_code(e.target.value);\n                  setFormError(null);\n                }}\n                type=\"text\"\n                value={course_code}\n                className={`input-white border-2 ${\n                  formError !== null && formError.element === \"course_code\"\n                    ? \"border-red-500\"\n                    : \"border-gray-500\"\n                }`}\n              />\n              {formError !== null && formError.element === \"course_code\" && (\n                <span className=\"text-red-600 font-bold text-xs\">\n                  {formError.msg}\n                </span>\n              )}\n            </div>\n          )}\n          {props.chaptersOnly === false && (\n            <div className=\"flex flex-col mb-2\">\n              <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">\n                Description\n              </span>\n              <textarea\n                disabled={loading}\n                onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n                  setDescription(e.target.value);\n                  setFormError(null);\n                }}\n                value={description}\n                className={`input-white border-2 ${\n                  formError !== null && formError.element === \"description\"\n                    ? \"border-red-500\"\n                    : \"border-gray-500\"\n                }`}\n                style={{ minHeight: \"100px\" }}\n              >\n                {description}\n              </textarea>\n              {formError !== null && formError.element === \"description\" && (\n                <span className=\"text-red-600 font-bold text-xs\">\n                  {formError.msg}\n                </span>\n              )}\n            </div>\n          )}\n          <div className=\"flex flex-col mb-2\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-gray-600 font-bold\">Course chapters</span>\n              {addChapter.openAdd === false && (\n                <div\n                  onClick={() => setAddChapter({ openAdd: true, chapter: \"\" })}\n                  className=\"cursor-pointer btn bg-blue-50 text-blue-600 text-sm flex flex-row gap-1 items-center\"\n                >\n                  <IoMdAddCircle className=\"text-2xl\" />\n                  <span>Add chapter</span>\n                </div>\n              )}\n            </div>\n            {/* Add chapter */}\n            <div>\n              {addChapter.openAdd === true && (\n                <div className=\"flex flex-row items-center justify-between gap-2 mt-2\">\n                  <input\n                    onChange={(e) => {\n                      setAddChapter({ openAdd: true, chapter: e.target.value });\n                    }}\n                    value={addChapter.chapter}\n                    type=\"text\"\n                    placeholder=\"Chapter name\"\n                    className=\"input-white border-2 rounded border-gray-500\"\n                  />\n                  <div\n                    onClick={() => loading === false && addNewChapter()}\n                    className={`${\n                      loading === false\n                        ? \"cursor-pointer\"\n                        : \"cursor-not-allowed\"\n                    } btn ${\n                      addChapter.chapter === \"\"\n                        ? loading === true\n                          ? \"bg-gray-200\"\n                          : \"bg-red-600\"\n                        : \"bg-blue-600\"\n                    } text-white text-sm flex flex-row gap-1 items-center`}\n                  >\n                    <span>{addChapter.chapter === \"\" ? \"Close\" : \"Add\"}</span>\n                  </div>\n                </div>\n              )}\n            </div>\n            {chapters.length === 0 ? (\n              <div className=\"rounded bg-gray-50 px-2 py-6 mt-2 flex flex-col text-sm text-gray-400 font-extrabold text-center\">\n                No chapters added\n              </div>\n            ) : (\n              <div>\n                {chapters.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    className={`flex flex-row items-center justify-between border ${\n                      props.selectedCourse !== null &&\n                      props.selectedCourse.selectedCourse.chapters &&\n                      props.selectedCourse.selectedCourse.chapters.filter(\n                        (itm) => itm.id === item.id\n                      ).length === 0\n                        ? \"bg-gray-50 border-gray-200 text-gray-500\"\n                        : \"bg-white border-blue-200 text-blue-600\"\n                    } my-1 pl-2 pr-1 py-1 rounded text-sm font-bold`}\n                  >\n                    <span>{item.name}</span>\n                    {props.chaptersOnly === false && (\n                      <div\n                        onClick={() => loading === false && removeChapter(item)}\n                        className={`btn ${\n                          loading === false\n                            ? \"cursor-pointer\"\n                            : \"cursor-not-allowed\"\n                        } bg-red-100 text-red-700 text-xs`}\n                      >\n                        Remove\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n          {addChapter.chapter === \"\" && (\n            <div className=\"flex flex-row justify-between items-center\">\n              {props.selectedCourse?.action === CoursesAction.View ? (\n                <button\n                  onClick={() =>\n                    props.selectedCourse &&\n                    props.deleteSelected({\n                      action: CoursesAction.Delete,\n                      selectedCourse: props.selectedCourse.selectedCourse,\n                    })\n                  }\n                  type=\"button\"\n                  className=\"btn border border-red-600 text-red-700\"\n                >\n                  Delete\n                </button>\n              ) : (\n                <div></div>\n              )}\n              <button\n                disabled={loading}\n                type=\"submit\"\n                className={`btn bg-blue-600 text-white ${\n                  loading === true\n                    ? \"animate__animated animate__flash animate__infinite\"\n                    : \"\"\n                }`}\n              >\n                {loading === true\n                  ? \"Please wait...\"\n                  : props.selectedCourse !== null\n                  ? \"Update course\"\n                  : \"Add course\"}\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default AddCourse;\n","import React from 'react'\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im'\nimport { schoolLevelsStoreInterface } from '../../../../actions/school_levels'\n\ninterface SchoolLevelSelectProps {\n  schoolLevels: schoolLevelsStoreInterface;\n  school_levels: string[];\n  setSchool_levels: (item: string[]) => void;\n  loading: boolean;\n}\n\nconst SchoolLevelSelect = (props: SchoolLevelSelectProps) => {\n  return (\n    <div className=\"rounded flex flex-col gap-2 overflow-y-auto border pb-3 px-3\" style={{height: '80vh'}}>\n      <div className=\"flex flex-row items-center gap-2\">\n        <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">Choose school level</span><span className=\"text-xs text-gray-500 italic mt-2 mb-1\">(Optional)</span>\n      </div>\n      {props.schoolLevels.school_levels?.map((item, i) => (\n        <div onClick={() => props.loading === false && props.setSchool_levels(props.school_levels.find(itm => itm === item.school_level_id) ? props.school_levels.filter(x => x !== item.school_level_id) :[...props.school_levels, item.school_level_id])} key={i + 1}className={`flex flex-row items-center gap-3 p-3 rounded cursor-pointer ${props.school_levels.find(itm => itm === item.school_level_id) ? \"bg-blue-50 text-blue-600\" : props.loading === true ? \"bg-gray-100 text-gray-400\" : \"bg-gray-100 text-gray-600\"} ${props.loading === true ? \"hover:bg-gray-100 hover:text-gray-400\" : \"hover:bg-blue-100 hover:text-blue-600\"}`}>\n          {props.school_levels.find(itm => itm === item.school_level_id) ?\n          <ImCheckboxChecked className=\"text-3xl\" /> :\n          <ImCheckboxUnchecked className=\"text-3xl\" />}\n          <div className=\"flex flex-col gap-0\">\n            <span className=\"font-extrabold text-lg\">{item.school_level_name}</span>\n            <span className=\"text-xs -mt-1\">{item.description}</span>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default SchoolLevelSelect\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdEdit } from \"react-icons/md\";\nimport { CgDetailsMore } from \"react-icons/cg\";\nimport { HiOutlineDocumentSearch } from \"react-icons/hi\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  applicationPeriodsStoreInterface,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  setSelectedEducationCategory,\n  System,\n  PushPopupAlert,\n} from \"../../../../actions\";\nimport Loading from \"../../../../components/Loading/Loading\";\nimport { StoreState } from \"../../../../reducers\";\nimport Modal, { ModalSize, Themes } from \"../../../../components/Modal/Modal\";\nimport AddQuestionType from \"./AddSchoolLevel\";\nimport { PopupAlertData } from \"../../../../components/Alert/Popup\";\nimport { IoMdTrash } from \"react-icons/io\";\nimport axios from \"axios\";\nimport { API } from \"../../../../utils/api\";\nimport { PopupAlertTheme } from \"../../../../interfaces/popupAlert\";\nimport { school_level } from \"../../../../interfaces/school_level\";\n\ninterface SchoolLevelsPropsInterface {\n  system: System;\n  schoolLevels: schoolLevelsStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n}\n\nexport enum SchoolLevelsAction {\n  Create = \"Create\",\n  View = \"View\",\n  Delete = \"Delete\",\n  Update = \"Update\",\n}\n\nexport interface S_SchoolLevelDetails {\n  action: SchoolLevelsAction;\n  selectedSchoolLevel: school_level;\n}\n\nconst _SchoolLevels = (props: SchoolLevelsPropsInterface) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [addNew, setAddNew] = useState<boolean>(false);\n  const [selectedSchoolLevel, setSelectedSchoolLevel] =\n    useState<S_SchoolLevelDetails | null>(null);\n\n  const closeAddNewModal = (state: boolean) => {\n    setAddNew(state);\n    props.loadSchoolLevels(setLoading);\n  };\n\n  const deleteEducationCategoryFn = async (school_level: school_level) => {\n    if (school_level.school_level_id !== undefined) {\n      setLoading(true);\n      try {\n        await axios.delete(\n          `${API.APPLICATION}/schoollevel/${school_level.school_level_id}`\n        );\n        props.loadSchoolLevels(setLoading);\n        props.PushPopupAlert({\n          title: `School level removed successfully`,\n          theme: PopupAlertTheme.success,\n        });\n        setSelectedSchoolLevel(null);\n        // console.log(\"Deleted: \", res);\n      } catch (error: any) {\n        props.PushPopupAlert({\n          title: `Acton failed, Try again later!`,\n          theme: PopupAlertTheme.warning,\n        });\n        setLoading(false);\n        setSelectedSchoolLevel(null);\n        console.log(\"err: \", { ...error });\n      }\n      // setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (\n      props.schoolLevels.school_levels === null ||\n      props.schoolLevels.school_levels.length === 0\n    ) {\n      props.loadSchoolLevels(setLoading);\n    }\n  }, [props, setLoading]);\n  return (\n    <Fragment>\n      <div className=\"mt-1\">\n        <div className=\"flex flex-row justify-between items-center bg-gray-100 py-1\">\n          <div className=\"text-blue-600 font-extrabold text-xl px-2\">\n            Lists of school levels\n          </div>\n          {loading === false && (\n            <div\n              onClick={() => setAddNew(true)}\n              className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\"\n            >\n              Add new\n            </div>\n          )}\n        </div>\n        <div className=\"flex flex-col\">\n          {props.schoolLevels.school_levels === null || loading === true ? (\n            <Loading />\n          ) : props.schoolLevels.school_levels.length === 0 ? (\n            <div className=\"text-gray-400 px-6 py-4 rounded border mt-4 text-xl font-extrabold flex flex-col items-center justify-center bg-gray-100\">\n              <HiOutlineDocumentSearch className=\"text-7xl text-gray-400 animate__animated animate__shakeX\" />\n              <span>No question types available</span>\n            </div>\n          ) : (\n            props.schoolLevels.school_levels.map((item, i) => (\n              <div\n                className={`border flex flex-row px-3 py-2 rounded items-center my-1 justify-between`}\n              >\n                <div className=\"flex flex-col\">\n                  <span className=\"text-gray-600 font-extrabold\">\n                    {item.school_level_name}\n                  </span>\n                  <span className={`text-xs pr-5 text-gray-500`}>\n                    {item.description}\n                  </span>\n                </div>\n                <div className=\"flex flex-row items-center gap-2\">\n                  <div\n                    onClick={() =>\n                      setSelectedSchoolLevel({\n                        action: SchoolLevelsAction.View,\n                        selectedSchoolLevel: item,\n                      })\n                    }\n                    className=\"bg-gray-50 hover:bg-gray-200 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <CgDetailsMore className=\"text-3xl text-gray-700\" />\n                  </div>\n                  <div\n                    onClick={() =>\n                      setSelectedSchoolLevel({\n                        action: SchoolLevelsAction.Update,\n                        selectedSchoolLevel: item,\n                      })\n                    }\n                    className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <MdEdit className=\"text-3xl text-blue-700\" />\n                  </div>\n                  <div\n                    onClick={() =>\n                      setSelectedSchoolLevel({\n                        action: SchoolLevelsAction.Delete,\n                        selectedSchoolLevel: item,\n                      })\n                    }\n                    className=\"bg-gray-100 hover:bg-red-100 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <IoMdTrash className=\"text-3xl text-yellow-700\" />\n                  </div>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n      {(addNew === true ||\n        (selectedSchoolLevel !== null &&\n          (selectedSchoolLevel.action === SchoolLevelsAction.Update ||\n            selectedSchoolLevel.action === SchoolLevelsAction.View))) && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <div className=\"flex flex-col\">\n                <span className=\"font-extrabold text-2xl text-gray-500\">\n                  {selectedSchoolLevel !== null &&\n                  selectedSchoolLevel.action === SchoolLevelsAction.Update\n                    ? selectedSchoolLevel.selectedSchoolLevel.school_level_name\n                    : selectedSchoolLevel !== null &&\n                      selectedSchoolLevel.action === SchoolLevelsAction.View\n                    ? selectedSchoolLevel.selectedSchoolLevel.school_level_name\n                    : \"Add new school level\"}\n                </span>\n                <span className=\"text-sm text-gray-500 font-normal\">\n                  {selectedSchoolLevel !== null &&\n                  selectedSchoolLevel.action === SchoolLevelsAction.Update\n                    ? \"Update the selected school level\"\n                    : selectedSchoolLevel !== null &&\n                      selectedSchoolLevel.action === SchoolLevelsAction.View\n                    ? \"View more details for the selected school level\"\n                    : \"School level will be used in different components in the system, make sure what you're creating\"}\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => {\n            setAddNew(false);\n            setSelectedSchoolLevel(null);\n          }}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          backDropClose={true}\n          padding={{ title: true, body: true }}\n        >\n          <AddQuestionType\n            closeModal={closeAddNewModal}\n            school_levels={props.schoolLevels}\n            PushPopupAlert={props.PushPopupAlert}\n            selectedSchoolLevel={selectedSchoolLevel}\n            deleteSelected={setSelectedSchoolLevel}\n          />\n        </Modal>\n      )}\n      {selectedSchoolLevel !== null &&\n        selectedSchoolLevel.action === SchoolLevelsAction.Delete && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <div className=\"flex flex-col\">\n                  <span className=\"font-extrabold text-2xl text-gray-500\">\n                    {selectedSchoolLevel.selectedSchoolLevel.school_level_name}\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => setSelectedSchoolLevel(null)}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            backDropClose={true}\n            padding={{ title: true, body: true }}\n          >\n            <div className=\"-mt-6\">\n              <span className=\"text-red-600 font-bold\">\n                Are you sure do you want to delete this school level?\n              </span>\n              <div className=\"flex flex-row items-center justify-between mt-2\">\n                <div\n                  onClick={() => setSelectedSchoolLevel(null)}\n                  className=\"btn bg-gray-100 text-gray-700 cursor-pointer hover:bg-gray-200\"\n                >\n                  Cancel\n                </div>\n                <div\n                  onClick={() =>\n                    deleteEducationCategoryFn(\n                      selectedSchoolLevel.selectedSchoolLevel\n                    )\n                  }\n                  className=\"btn bg-red-600 text-white cursor-pointer hover:bg-red-800\"\n                >\n                  Yes, Delete\n                </div>\n              </div>\n            </div>\n          </Modal>\n        )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  periods,\n  schoolLevels,\n  questionTypes,\n  system,\n}: StoreState): {\n  auth: Auth;\n  periods: applicationPeriodsStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  system: System;\n} => {\n  return {\n    auth: auth,\n    periods: periods,\n    schoolLevels: schoolLevels,\n    system: system,\n  };\n};\n\nconst SchoolLevels = connect(mapStateToProps, {\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  loadSchoolLevels,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n})(_SchoolLevels);\n\nexport default SchoolLevels;\n","import React from 'react'\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im'\nimport { schoolLevelsStoreInterface } from '../../../../actions/school_levels'\n\ninterface EducationCategorySelectProps {\n  schoolLevels: schoolLevelsStoreInterface;\n  education_categories: string[];\n  setEducationCategories: (item: string[]) => void;\n  loading: boolean;\n}\n\nconst EducationCategorySelect = (props: EducationCategorySelectProps) => {\n  return (\n    <div className=\"rounded flex flex-col gap-2 overflow-y-auto border pb-3 px-3\" style={{height: '80vh'}}>\n      <div className=\"flex flex-row items-center gap-2\">\n        <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">Choose school level</span><span className=\"text-xs text-gray-500 italic mt-2 mb-1\">(Optional)</span>\n      </div>\n      {props.schoolLevels.education_categories?.map((item, i) => (\n        <div onClick={() => props.loading === false && props.setEducationCategories(props.education_categories.find(itm => itm === item.education_institute_id) ? props.education_categories.filter(x => x !== item.education_institute_id) :[...props.education_categories, item.education_institute_id])} key={i + 1}className={`flex flex-row items-center gap-3 p-3 rounded cursor-pointer ${props.education_categories.find(itm => itm === item.education_institute_id) ? \"bg-blue-50 text-blue-600\" : props.loading === true ? \"bg-gray-100 text-gray-400\" : \"bg-gray-100 text-gray-600\"} ${props.loading === true ? \"hover:bg-gray-100 hover:text-gray-400\" : \"hover:bg-blue-100 hover:text-blue-600\"}`}>\n          {props.education_categories.find(itm => itm === item.education_institute_id) ?\n          <ImCheckboxChecked className=\"text-3xl\" /> :\n          <ImCheckboxUnchecked className=\"text-3xl\" />}\n          <div className=\"flex flex-col gap-0\">\n            <span className=\"font-extrabold text-lg\">{item.education_category_title}</span>\n            <span className=\"text-xs -mt-1\">{item.description}</span>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default EducationCategorySelect\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { schoolLevelsStoreInterface } from \"../../../../actions/school_levels\";\nimport { PopupAlertData } from \"../../../../components/Alert/Popup\";\nimport { formErrorInterface } from \"../../../../interfaces/form\";\nimport { PopupAlertTheme } from \"../../../../interfaces/popupAlert\";\nimport { API } from \"../../../../utils/api\";\nimport EducationCategorySelect from \"../SettingsComponents/EducationCategorySelect\";\nimport { SchoolLevelsAction, S_SchoolLevelDetails } from \"./SchoolLevels\";\n\ninterface AddSchoolLevelProps {\n  closeModal: (state: boolean) => void;\n  school_levels: schoolLevelsStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  selectedSchoolLevel: S_SchoolLevelDetails | null;\n  deleteSelected: (selectedDetail: S_SchoolLevelDetails) => void;\n}\n\nconst AddSchoolLevel = (props: AddSchoolLevelProps) => {\n  // States\n  const [school_level_id, setSchool_level_id] = useState<string>(\"\");\n  const [school_level_title, setSchool_level_title] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [education_category, setEducation_category] = useState<string[]>([]);\n  const [formError, setFormError] = useState<formErrorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const submitSchoolLevel = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // validation\n    if (\n      props.selectedSchoolLevel?.action === SchoolLevelsAction.Update &&\n      school_level_id === \"\"\n    ) {\n      return setFormError({\n        element: \"school_level_id\",\n        msg: \"Please choose School level\",\n      });\n    } else if (school_level_title === \"\") {\n      return setFormError({\n        element: \"school_level_title\",\n        msg: \"Please fill the school level name\",\n      });\n    } else if (description === \"\") {\n      return setFormError({\n        element: \"description\",\n        msg: \"Please fill the description\",\n      });\n    } else {\n      setLoading(true);\n      try {\n        // Update current\n        if (\n          props.selectedSchoolLevel !== null &&\n          props.selectedSchoolLevel.selectedSchoolLevel.school_level_id !==\n            undefined\n        ) {\n          await axios.patch(`${API.APPLICATION}/schoollevel`, {\n            school_level_id: school_level_id,\n            school_level_name: school_level_title,\n            description: description,\n            education_institute: education_category,\n            courses: [],\n          });\n          props.PushPopupAlert({\n            title: `School level updated successfully`,\n            description: `After updating the School level, you have access to delete and update it!`,\n            theme: PopupAlertTheme.info,\n          });\n          props.closeModal(false);\n          // console.log(\"Result: \", res);\n        } else {\n          // Add new\n          await axios.post(`${API.APPLICATION}/schoollevel`, {\n            school_level_name: school_level_title,\n            description: description,\n            education_institute: education_category,\n            courses: [],\n          });\n          props.PushPopupAlert({\n            title: `School level added successfully`,\n            description: `After adding the School level, you have access to delete and update it!`,\n            theme: PopupAlertTheme.success,\n          });\n          props.closeModal(false);\n          // console.log(\"Result: \", res);\n        }\n      } catch (error: any) {\n        props.PushPopupAlert({\n          title: `Failed to add School level! Try again`,\n          theme: PopupAlertTheme.danger,\n        });\n        console.log(\"Err: \", { ...error });\n      }\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (props.selectedSchoolLevel !== null) {\n      if (school_level_id === \"\") {\n        setSchool_level_id(\n          props.selectedSchoolLevel.selectedSchoolLevel.school_level_id\n        );\n      }\n      if (school_level_title === \"\") {\n        setSchool_level_title(\n          props.selectedSchoolLevel.selectedSchoolLevel.school_level_name\n        );\n      }\n      if (description === \"\") {\n        setDescription(\n          props.selectedSchoolLevel.selectedSchoolLevel.description\n        );\n      }\n      if (education_category.length === 0) {\n        setEducation_category(\n          props.selectedSchoolLevel.selectedSchoolLevel.education_institute\n        );\n      }\n    }\n  }, [\n    props,\n    school_level_id,\n    school_level_title,\n    description,\n    education_category,\n  ]);\n  return (\n    <form onSubmit={submitSchoolLevel} className=\"-mt-2\">\n      <div className=\"grid md:grid-cols-12 gap-5\">\n        <div className=\"col-span-6\">\n          <EducationCategorySelect\n            schoolLevels={props.school_levels}\n            education_categories={education_category}\n            setEducationCategories={setEducation_category}\n            loading={loading}\n          />\n        </div>\n        <div className=\"col-span-6\">\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mb-1\">Title</span>\n            <input\n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setSchool_level_title(e.target.value);\n                setFormError(null);\n              }}\n              type=\"text\"\n              value={school_level_title}\n              className={`input-white border-2 ${\n                formError !== null && formError.element === \"school_level_title\"\n                  ? \"border-red-500\"\n                  : \"border-gray-500\"\n              }`}\n            />\n            {formError !== null &&\n              formError.element === \"school_level_title\" && (\n                <span className=\"text-red-600 font-bold text-xs\">\n                  {formError.msg}\n                </span>\n              )}\n          </div>\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">\n              Description\n            </span>\n            <textarea\n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n                setDescription(e.target.value);\n                setFormError(null);\n              }}\n              value={description}\n              className={`input-white border-2 ${\n                formError !== null && formError.element === \"description\"\n                  ? \"border-red-500\"\n                  : \"border-gray-500\"\n              }`}\n              style={{ minHeight: \"100px\" }}\n            >\n              {description}\n            </textarea>\n            {formError !== null && formError.element === \"description\" && (\n              <span className=\"text-red-600 font-bold text-xs\">\n                {formError.msg}\n              </span>\n            )}\n          </div>\n          <div className=\"flex flex-row justify-between items-center\">\n            {props.selectedSchoolLevel?.action === SchoolLevelsAction.View ? (\n              <button\n                onClick={() =>\n                  props.selectedSchoolLevel &&\n                  props.deleteSelected({\n                    action: SchoolLevelsAction.Delete,\n                    selectedSchoolLevel:\n                      props.selectedSchoolLevel.selectedSchoolLevel,\n                  })\n                }\n                type=\"button\"\n                className=\"btn border border-red-600 text-red-700\"\n              >\n                Delete\n              </button>\n            ) : (\n              <div></div>\n            )}\n            <button\n              disabled={loading}\n              type=\"submit\"\n              className={`btn bg-blue-600 text-white ${\n                loading === true\n                  ? \"animate__animated animate__flash animate__infinite\"\n                  : \"\"\n              }`}\n            >\n              {loading === true\n                ? \"Please wait...\"\n                : props.selectedSchoolLevel !== null\n                ? \"Update\"\n                : \"Add\"}\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default AddSchoolLevel;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdEdit } from \"react-icons/md\";\nimport { CgDetailsMore } from \"react-icons/cg\";\nimport { HiOutlineDocumentSearch } from \"react-icons/hi\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  applicationPeriodsStoreInterface,\n  schoolLevelsStoreInterface,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  loadSchoolLevels,\n  System,\n  PushPopupAlert,\n} from \"../../../../actions\";\nimport Loading from \"../../../../components/Loading/Loading\";\nimport { StoreState } from \"../../../../reducers\";\nimport Modal, { ModalSize, Themes } from \"../../../../components/Modal/Modal\";\nimport { PopupAlertData } from \"../../../../components/Alert/Popup\";\nimport { IoMdTrash } from \"react-icons/io\";\nimport axios from \"axios\";\nimport { API } from \"../../../../utils/api\";\nimport { PopupAlertTheme } from \"../../../../interfaces/popupAlert\";\nimport { education_category } from \"../../../../interfaces/education_category\";\nimport AddEducationCategory from \"./AddEducationCategory\";\n\ninterface EducationCategoryPropsInterface {\n  system: System;\n  schoolLevels: schoolLevelsStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n}\n\nexport enum EducationCategoryTypeAction {\n  Create = \"Create\",\n  View = \"View\",\n  Delete = \"Delete\",\n  Update = \"Update\",\n}\n\nexport interface E_EducationCategoryDetails {\n  action: EducationCategoryTypeAction;\n  selectedEducationCategory: education_category;\n}\n\nconst _EducationCategories = (props: EducationCategoryPropsInterface) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [addNew, setAddNew] = useState<boolean>(false);\n  const [selectedEducationCategory, setSelectedEducationCategory] =\n    useState<E_EducationCategoryDetails | null>(null);\n\n  const closeAddNewModal = (state: boolean) => {\n    setAddNew(state);\n    props.loadEducationCategories(setLoading);\n  };\n\n  const deleteEducationCategoryFn = async (\n    education_category: education_category\n  ) => {\n    if (education_category.education_institute_id !== undefined) {\n      setLoading(true);\n      try {\n        await axios.delete(\n          `${API.APPLICATION}/educationinstitute/${education_category.education_institute_id}`\n        );\n        props.loadEducationCategories(setLoading);\n        props.PushPopupAlert({\n          title: `Education category removed successfully`,\n          theme: PopupAlertTheme.success,\n        });\n        setSelectedEducationCategory(null);\n        // console.log(\"Deleted: \", res);\n      } catch (error) {\n        console.log(\"err: \", error);\n      }\n      // setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (\n      props.schoolLevels.education_categories === null ||\n      props.schoolLevels.education_categories.length === 0\n    ) {\n      props.loadEducationCategories(setLoading);\n    }\n    if (\n      props.schoolLevels.school_levels === null ||\n      props.schoolLevels.school_levels.length === 0\n    ) {\n      props.loadSchoolLevels(setLoading);\n    }\n  }, [props, setLoading]);\n  return (\n    <Fragment>\n      <div className=\"mt-1\">\n        <div className=\"flex flex-row justify-between items-center bg-gray-100 py-1\">\n          <div className=\"text-blue-600 font-extrabold text-xl px-2\">\n            Lists of education categories\n          </div>\n          {loading === false && (\n            <div\n              onClick={() => setAddNew(true)}\n              className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\"\n            >\n              Add new\n            </div>\n          )}\n        </div>\n        <div className=\"flex flex-col\">\n          {props.schoolLevels.education_categories === null ||\n          loading === true ? (\n            <Loading />\n          ) : props.schoolLevels.education_categories.length === 0 ? (\n            <div className=\"text-gray-400 px-6 py-4 rounded border mt-4 text-xl font-extrabold flex flex-col items-center justify-center bg-gray-100\">\n              <HiOutlineDocumentSearch className=\"text-7xl text-gray-400 animate__animated animate__shakeX\" />\n              <span>No education categories available</span>\n            </div>\n          ) : (\n            props.schoolLevels.education_categories.map((item, i) => (\n              <div\n                className={`border flex flex-row px-3 py-2 rounded items-center my-1 justify-between`}\n              >\n                <div className=\"flex flex-col\">\n                  <span className=\"text-gray-600 font-extrabold\">\n                    {item.education_category_title}\n                  </span>\n                  <span className={`text-xs pr-5 text-gray-500`}>\n                    {item.description}\n                  </span>\n                </div>\n                <div className=\"flex flex-row items-center gap-2\">\n                  <div\n                    onClick={() =>\n                      setSelectedEducationCategory({\n                        action: EducationCategoryTypeAction.View,\n                        selectedEducationCategory: item,\n                      })\n                    }\n                    className=\"bg-gray-50 hover:bg-gray-200 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <CgDetailsMore className=\"text-3xl text-gray-700\" />\n                  </div>\n                  <div\n                    onClick={() =>\n                      setSelectedEducationCategory({\n                        action: EducationCategoryTypeAction.Update,\n                        selectedEducationCategory: item,\n                      })\n                    }\n                    className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <MdEdit className=\"text-3xl text-blue-700\" />\n                  </div>\n                  <div\n                    onClick={() =>\n                      setSelectedEducationCategory({\n                        action: EducationCategoryTypeAction.Delete,\n                        selectedEducationCategory: item,\n                      })\n                    }\n                    className=\"bg-gray-100 hover:bg-red-100 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <IoMdTrash className=\"text-3xl text-yellow-700\" />\n                  </div>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n      {(addNew === true ||\n        (selectedEducationCategory !== null &&\n          (selectedEducationCategory.action ===\n            EducationCategoryTypeAction.Update ||\n            selectedEducationCategory.action ===\n              EducationCategoryTypeAction.View))) && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <div className=\"flex flex-col\">\n                <span className=\"font-extrabold text-2xl text-gray-500\">\n                  {selectedEducationCategory !== null &&\n                  selectedEducationCategory.action ===\n                    EducationCategoryTypeAction.Update\n                    ? selectedEducationCategory.selectedEducationCategory\n                        .education_category_title\n                    : selectedEducationCategory !== null &&\n                      selectedEducationCategory.action ===\n                        EducationCategoryTypeAction.View\n                    ? selectedEducationCategory.selectedEducationCategory\n                        .education_category_title\n                    : \"Add new education category\"}\n                </span>\n                <span className=\"text-sm text-gray-500 font-normal\">\n                  {selectedEducationCategory !== null &&\n                  selectedEducationCategory.action ===\n                    EducationCategoryTypeAction.Update\n                    ? \"Update the selected education category\"\n                    : selectedEducationCategory !== null &&\n                      selectedEducationCategory.action ===\n                        EducationCategoryTypeAction.View\n                    ? \"View more details for the selected education category\"\n                    : \"An education category will be used in different components in the system, make sure what you're creating\"}\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => {\n            setAddNew(false);\n            setSelectedEducationCategory(null);\n          }}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          backDropClose={true}\n          padding={{ title: true, body: true }}\n        >\n          <AddEducationCategory\n            closeModal={closeAddNewModal}\n            education_categories={props.schoolLevels}\n            PushPopupAlert={props.PushPopupAlert}\n            selectedEducationCategory={selectedEducationCategory}\n            deleteSelected={setSelectedEducationCategory}\n            schoolLevels={props.schoolLevels}\n          />\n        </Modal>\n      )}\n      {selectedEducationCategory !== null &&\n        selectedEducationCategory.action ===\n          EducationCategoryTypeAction.Delete && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <div className=\"flex flex-col\">\n                  <span className=\"font-extrabold text-2xl text-gray-500\">\n                    {\n                      selectedEducationCategory.selectedEducationCategory\n                        .education_category_title\n                    }\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => setSelectedEducationCategory(null)}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            backDropClose={true}\n            padding={{ title: true, body: true }}\n          >\n            <div className=\"-mt-6\">\n              <span className=\"text-red-600 font-bold\">\n                Are you sure do you want to delete this education category?\n              </span>\n              <div className=\"flex flex-row items-center justify-between mt-2\">\n                <div\n                  onClick={() => setSelectedEducationCategory(null)}\n                  className=\"btn bg-gray-100 text-gray-700 cursor-pointer hover:bg-gray-200\"\n                >\n                  Cancel\n                </div>\n                <div\n                  onClick={() =>\n                    deleteEducationCategoryFn(\n                      selectedEducationCategory.selectedEducationCategory\n                    )\n                  }\n                  className=\"btn bg-red-600 text-white cursor-pointer hover:bg-red-800\"\n                >\n                  Yes, Delete\n                </div>\n              </div>\n            </div>\n          </Modal>\n        )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  periods,\n  schoolLevels,\n  system,\n}: StoreState): {\n  auth: Auth;\n  periods: applicationPeriodsStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  system: System;\n} => {\n  return {\n    auth: auth,\n    periods: periods,\n    schoolLevels: schoolLevels,\n    system: system,\n  };\n};\n\nconst EducationCategories = connect(mapStateToProps, {\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n  loadSchoolLevels,\n})(_EducationCategories);\n\nexport default EducationCategories;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { schoolLevelsStoreInterface } from \"../../../../actions/school_levels\";\nimport { PopupAlertData } from \"../../../../components/Alert/Popup\";\nimport { formErrorInterface } from \"../../../../interfaces/form\";\nimport { PopupAlertTheme } from \"../../../../interfaces/popupAlert\";\nimport { API } from \"../../../../utils/api\";\nimport SchoolLevelSelect from \"../SettingsComponents/SchoolLevelSelect\";\nimport {\n  EducationCategoryTypeAction,\n  E_EducationCategoryDetails,\n} from \"./EducationCategories\";\n\ninterface AddEducationCategoryProps {\n  closeModal: (state: boolean) => void;\n  education_categories: schoolLevelsStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  selectedEducationCategory: E_EducationCategoryDetails | null;\n  deleteSelected: (selectedDetail: E_EducationCategoryDetails) => void;\n  schoolLevels: schoolLevelsStoreInterface;\n}\n\nconst AddEducationCategory = (props: AddEducationCategoryProps) => {\n  // States\n  const [education_institute_id, setEducation_institute_id] =\n    useState<string>(\"\");\n  const [education_category_title, setEducation_category_title] =\n    useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [school_levels, setSchool_levels] = useState<string[]>([]);\n  const [formError, setFormError] = useState<formErrorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const submitEducationCategory = async (\n    e: React.FormEvent<HTMLFormElement>\n  ) => {\n    e.preventDefault();\n    // validation\n    if (\n      props.selectedEducationCategory?.action ===\n        EducationCategoryTypeAction.Update &&\n      education_institute_id === \"\"\n    ) {\n      return setFormError({\n        element: \"education_institute_id\",\n        msg: \"Please choose education category\",\n      });\n    } else if (education_category_title === \"\") {\n      return setFormError({\n        element: \"education_category_title\",\n        msg: \"Please fill the education category title\",\n      });\n    } else if (description === \"\") {\n      return setFormError({\n        element: \"description\",\n        msg: \"Please fill the description\",\n      });\n    } else {\n      setLoading(true);\n      try {\n        // Update current\n        console.log(\"Sel schoo le: \", school_levels);\n        if (\n          props.selectedEducationCategory !== null &&\n          props.selectedEducationCategory.selectedEducationCategory\n            .education_institute_id !== undefined\n        ) {\n          await axios.patch(`${API.APPLICATION}/educationinstitute`, {\n            education_institute_id: education_institute_id,\n            education_category_title: education_category_title,\n            description: description,\n            school_levels: school_levels,\n          });\n          props.PushPopupAlert({\n            title: `Education category updated successfully`,\n            description: `After updating the education category, you have access to delete and update it!`,\n            theme: PopupAlertTheme.info,\n          });\n          props.closeModal(false);\n          // console.log(\"Result: \", res);\n        } else {\n          // Add new\n          await axios.post(`${API.APPLICATION}/educationinstitute`, {\n            education_category_title: education_category_title,\n            description: description,\n            school_levels: school_levels,\n          });\n          props.PushPopupAlert({\n            title: `Education category added successfully`,\n            description: `After adding the Education category, you have access to delete and update it!`,\n            theme: PopupAlertTheme.success,\n          });\n          props.closeModal(false);\n          // console.log(\"Result: \", res);\n        }\n      } catch (error) {\n        props.PushPopupAlert({\n          title: `Failed to add Education category! Try again`,\n          theme: PopupAlertTheme.danger,\n        });\n        console.log(\"Err: \", error);\n      }\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (props.selectedEducationCategory !== null) {\n      if (education_institute_id === \"\") {\n        setEducation_institute_id(\n          props.selectedEducationCategory.selectedEducationCategory\n            .education_institute_id\n        );\n      }\n      if (education_category_title === \"\") {\n        setEducation_category_title(\n          props.selectedEducationCategory.selectedEducationCategory\n            .education_category_title\n        );\n      }\n      if (description === \"\") {\n        setDescription(\n          props.selectedEducationCategory.selectedEducationCategory.description\n        );\n      }\n      if (school_levels.length === 0) {\n        setSchool_levels(\n          props.selectedEducationCategory.selectedEducationCategory\n            .school_levels\n        );\n      }\n    }\n  }, [\n    props,\n    education_institute_id,\n    education_category_title,\n    description,\n    school_levels,\n  ]);\n  return (\n    <form onSubmit={submitEducationCategory} className=\"-mt-2\">\n      <div className=\"grid md:grid-cols-12 gap-5\">\n        <div className=\"col-span-6\">\n          <SchoolLevelSelect\n            schoolLevels={props.schoolLevels}\n            school_levels={school_levels}\n            setSchool_levels={setSchool_levels}\n            loading={loading}\n          />\n        </div>\n        <div className=\"col-span-6\">\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mb-1\">Title</span>\n            <input\n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setEducation_category_title(e.target.value);\n                setFormError(null);\n              }}\n              type=\"text\"\n              value={education_category_title}\n              className={`input-white border-2 ${\n                formError !== null && formError.element === \"title\"\n                  ? \"border-red-500\"\n                  : \"border-gray-500\"\n              }`}\n            />\n            {formError !== null && formError.element === \"title\" && (\n              <span className=\"text-red-600 font-bold text-xs\">\n                {formError.msg}\n              </span>\n            )}\n          </div>\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">\n              Description\n            </span>\n            <textarea\n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n                setDescription(e.target.value);\n                setFormError(null);\n              }}\n              value={description}\n              className={`input-white border-2 ${\n                formError !== null && formError.element === \"description\"\n                  ? \"border-red-500\"\n                  : \"border-gray-500\"\n              }`}\n              style={{ minHeight: \"100px\" }}\n            >\n              {description}\n            </textarea>\n            {formError !== null && formError.element === \"description\" && (\n              <span className=\"text-red-600 font-bold text-xs\">\n                {formError.msg}\n              </span>\n            )}\n          </div>\n          <div className=\"flex flex-row justify-between items-center\">\n            {props.selectedEducationCategory?.action ===\n            EducationCategoryTypeAction.View ? (\n              <button\n                onClick={() =>\n                  props.selectedEducationCategory &&\n                  props.deleteSelected({\n                    action: EducationCategoryTypeAction.Delete,\n                    selectedEducationCategory:\n                      props.selectedEducationCategory.selectedEducationCategory,\n                  })\n                }\n                type=\"button\"\n                className=\"btn border border-red-600 text-red-700\"\n              >\n                Delete\n              </button>\n            ) : (\n              <div></div>\n            )}\n            <button\n              disabled={loading}\n              type=\"submit\"\n              className={`btn bg-blue-600 text-white ${\n                loading === true\n                  ? \"animate__animated animate__flash animate__infinite\"\n                  : \"\"\n              }`}\n            >\n              {loading === true\n                ? \"Please wait...\"\n                : props.selectedEducationCategory !== null\n                ? \"Update\"\n                : \"Add\"}\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default AddEducationCategory;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdEdit } from \"react-icons/md\";\nimport { CgDetailsMore } from \"react-icons/cg\";\nimport { HiOutlineDocumentSearch } from \"react-icons/hi\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  applicationPeriodsStoreInterface,\n  schoolLevelsStoreInterface,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  questionTypesStoreInterface,\n  loadQuestionTypes,\n  System,\n  PushPopupAlert,\n} from \"../../../../actions\";\nimport Loading from \"../../../../components/Loading/Loading\";\nimport { StoreState } from \"../../../../reducers\";\nimport Modal, { ModalSize, Themes } from \"../../../../components/Modal/Modal\";\nimport AddQuestionType from \"./AddQuestionType\";\nimport { PopupAlertData } from \"../../../../components/Alert/Popup\";\nimport { IoMdTrash } from \"react-icons/io\";\nimport { questionType } from \"../../../../interfaces/question\";\nimport axios from \"axios\";\nimport { API } from \"../../../../utils/api\";\nimport { PopupAlertTheme } from \"../../../../interfaces/popupAlert\";\n\ninterface QuestionTypesPropsInterface {\n  system: System;\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nexport enum QT_QuestionTypeAction {\n  Create = \"Create\",\n  View = \"View\",\n  Delete = \"Delete\",\n  Update = \"Update\",\n}\n\nexport interface QT_QuestionTypeDetails {\n  action: QT_QuestionTypeAction;\n  selectedQuestionType: questionType;\n}\n\nconst _QuestionTypes = (props: QuestionTypesPropsInterface) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [addNew, setAddNew] = useState<boolean>(false);\n  const [selectedQuestionType, setSelectedQuestionType] =\n    useState<QT_QuestionTypeDetails | null>(null);\n\n  const closeAddNewModal = (state: boolean) => {\n    setAddNew(state);\n    props.loadQuestionTypes(setLoading);\n  };\n\n  const deleteQuestionTypeFn = async (questionType: questionType) => {\n    if (questionType.id !== undefined) {\n      setLoading(true);\n      try {\n        await axios.delete(`${API.QBank}/question-type/${questionType.id}`);\n        props.loadQuestionTypes(setLoading);\n        props.PushPopupAlert({\n          title: `Question type removed successfully`,\n          theme: PopupAlertTheme.success,\n        });\n        setSelectedQuestionType(null);\n        // console.log(\"Deleted: \", res);\n      } catch (error: any) {\n        console.log(\"err: \", { ...error });\n      }\n      // setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      props.questionTypes.questionTypes.length === 0\n    ) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [props, setLoading]);\n  return (\n    <Fragment>\n      <div className=\"mt-1\">\n        <div className=\"flex flex-row justify-between items-center bg-gray-100 py-1\">\n          <div className=\"text-blue-600 font-extrabold text-xl px-2\">\n            Lists of question types\n          </div>\n          {loading === false && (\n            <div\n              onClick={() => setAddNew(true)}\n              className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\"\n            >\n              Add new\n            </div>\n          )}\n        </div>\n        <div className=\"flex flex-col\">\n          {props.questionTypes.questionTypes === null || loading === true ? (\n            <Loading />\n          ) : props.questionTypes.questionTypes.length === 0 ? (\n            <div className=\"text-gray-400 px-6 py-4 rounded border mt-4 text-xl font-extrabold flex flex-col items-center justify-center bg-gray-100\">\n              <HiOutlineDocumentSearch className=\"text-7xl text-gray-400 animate__animated animate__shakeX\" />\n              <span>No question types available</span>\n            </div>\n          ) : (\n            props.questionTypes.questionTypes.map((item, i) => (\n              <div\n                className={`border flex flex-row px-3 py-2 rounded items-center my-1 justify-between`}\n              >\n                <div className=\"flex flex-col\">\n                  <span className=\"text-gray-600 font-extrabold\">\n                    {item.title}\n                  </span>\n                  <span className={`text-xs pr-5 text-gray-500`}>\n                    {item.description}\n                  </span>\n                </div>\n                <div className=\"flex flex-row items-center gap-2\">\n                  <div\n                    onClick={() =>\n                      setSelectedQuestionType({\n                        action: QT_QuestionTypeAction.View,\n                        selectedQuestionType: item,\n                      })\n                    }\n                    className=\"bg-gray-50 hover:bg-gray-200 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <CgDetailsMore className=\"text-3xl text-gray-700\" />\n                  </div>\n                  <div\n                    onClick={() =>\n                      setSelectedQuestionType({\n                        action: QT_QuestionTypeAction.Update,\n                        selectedQuestionType: item,\n                      })\n                    }\n                    className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <MdEdit className=\"text-3xl text-blue-700\" />\n                  </div>\n                  <div\n                    onClick={() =>\n                      setSelectedQuestionType({\n                        action: QT_QuestionTypeAction.Delete,\n                        selectedQuestionType: item,\n                      })\n                    }\n                    className=\"bg-gray-100 hover:bg-red-100 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <IoMdTrash className=\"text-3xl text-yellow-700\" />\n                  </div>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n      {(addNew === true ||\n        (selectedQuestionType !== null &&\n          (selectedQuestionType.action === QT_QuestionTypeAction.Update ||\n            selectedQuestionType.action === QT_QuestionTypeAction.View))) && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <div className=\"flex flex-col\">\n                <span className=\"font-extrabold text-2xl text-gray-500\">\n                  {selectedQuestionType !== null &&\n                  selectedQuestionType.action === QT_QuestionTypeAction.Update\n                    ? selectedQuestionType.selectedQuestionType.title\n                    : selectedQuestionType !== null &&\n                      selectedQuestionType.action === QT_QuestionTypeAction.View\n                    ? selectedQuestionType.selectedQuestionType.title\n                    : \"Add new question type\"}\n                </span>\n                <span className=\"text-sm text-gray-500 font-normal\">\n                  {selectedQuestionType !== null &&\n                  selectedQuestionType.action === QT_QuestionTypeAction.Update\n                    ? \"Update the selected question type\"\n                    : selectedQuestionType !== null &&\n                      selectedQuestionType.action === QT_QuestionTypeAction.View\n                    ? \"View more details for the selected question type\"\n                    : \"New question type will be visible at the time of question preparation\"}\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => {\n            setAddNew(false);\n            setSelectedQuestionType(null);\n          }}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          backDropClose={true}\n          padding={{ title: true, body: true }}\n        >\n          <AddQuestionType\n            closeModal={closeAddNewModal}\n            questionTypes={props.questionTypes}\n            PushPopupAlert={props.PushPopupAlert}\n            selectedQuestionType={selectedQuestionType}\n            deleteSelected={setSelectedQuestionType}\n          />\n        </Modal>\n      )}\n      {selectedQuestionType !== null &&\n        selectedQuestionType.action === QT_QuestionTypeAction.Delete && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <div className=\"flex flex-col\">\n                  <span className=\"font-extrabold text-2xl text-gray-500\">\n                    {selectedQuestionType.selectedQuestionType.title}\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => setSelectedQuestionType(null)}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            backDropClose={true}\n            padding={{ title: true, body: true }}\n          >\n            <div className=\"-mt-6\">\n              <span className=\"text-red-600 font-bold\">\n                Are you sure do you want to delete this question type?\n              </span>\n              <div className=\"flex flex-row items-center justify-between mt-2\">\n                <div\n                  onClick={() => setSelectedQuestionType(null)}\n                  className=\"btn bg-gray-100 text-gray-700 cursor-pointer hover:bg-gray-200\"\n                >\n                  Cancel\n                </div>\n                <div\n                  onClick={() =>\n                    deleteQuestionTypeFn(\n                      selectedQuestionType.selectedQuestionType\n                    )\n                  }\n                  className=\"btn bg-red-600 text-white cursor-pointer hover:bg-red-800\"\n                >\n                  Yes, Delete\n                </div>\n              </div>\n            </div>\n          </Modal>\n        )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  periods,\n  schoolLevels,\n  questionTypes,\n  system,\n}: StoreState): {\n  auth: Auth;\n  periods: applicationPeriodsStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  questionTypes: questionTypesStoreInterface;\n  system: System;\n} => {\n  return {\n    auth: auth,\n    periods: periods,\n    schoolLevels: schoolLevels,\n    questionTypes: questionTypes,\n    system: system,\n  };\n};\n\nconst QuestionTypes = connect(mapStateToProps, {\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  loadQuestionTypes,\n  PushPopupAlert,\n})(_QuestionTypes);\n\nexport default QuestionTypes;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { questionTypesStoreInterface } from \"../../../../actions/questionTypes\";\nimport { PopupAlertData } from \"../../../../components/Alert/Popup\";\nimport { formErrorInterface } from \"../../../../interfaces/form\";\nimport { PopupAlertTheme } from \"../../../../interfaces/popupAlert\";\nimport { questionTypeElements } from \"../../../../interfaces/question\";\nimport { API } from \"../../../../utils/api\";\nimport { QT_QuestionTypeAction, QT_QuestionTypeDetails } from \"./QuestionTypes\";\n\ninterface AddQuestionTypeProps {\n  closeModal: (state: boolean) => void;\n  questionTypes: questionTypesStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  selectedQuestionType: QT_QuestionTypeDetails | null;\n  deleteSelected: (selectedDetail: QT_QuestionTypeDetails) => void;\n}\n\nconst AddQuestionType = (props: AddQuestionTypeProps) => {\n  // States\n  const [title, setTitle] = useState<string>(\"\");\n  const [element, setElement] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [formError, setFormError] = useState<formErrorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const submitQuestionType = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // validation\n    if (title === \"\") {\n      return setFormError({\n        element: \"title\",\n        msg: \"Please fill the title\",\n      });\n    } else if (element === \"\" || element.length === 0) {\n      return setFormError({\n        element: \"element\",\n        msg: \"Please fill the element\",\n      });\n    } else if (description === \"\") {\n      return setFormError({\n        element: \"description\",\n        msg: \"Please fill the description\",\n      });\n    } else {\n      setLoading(true);\n      try {\n        // Update current\n        if (\n          props.selectedQuestionType !== null &&\n          props.selectedQuestionType.selectedQuestionType.id !== undefined\n        ) {\n          await axios.put(\n            `${API.QBank}/question-type/${props.selectedQuestionType.selectedQuestionType.id}`,\n            {\n              status: 1,\n              title: title,\n              element: element,\n              description: description,\n            }\n          );\n          props.PushPopupAlert({\n            title: `Question type updated successfully`,\n            description: `After updating the question type, you have access to delete and update it!`,\n            theme: PopupAlertTheme.info,\n          });\n          props.closeModal(false);\n          // console.log(\"Result: \", res);\n        } else {\n          // Add new\n          await axios.post(`${API.QBank}/question-type`, {\n            status: 1,\n            title: title,\n            element: element,\n            description: description,\n          });\n          props.PushPopupAlert({\n            title: `Question type added successfully`,\n            description: `After adding the question type, you have access to delete and update it!`,\n            theme: PopupAlertTheme.success,\n          });\n          props.closeModal(false);\n          // console.log(\"Result: \", res);\n        }\n      } catch (error: any) {\n        props.PushPopupAlert({\n          title: `Failed to add question type! Try again`,\n          theme: PopupAlertTheme.danger,\n        });\n        console.log(\"Err: \", { ...error });\n      }\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (props.selectedQuestionType !== null) {\n      if (title === \"\") {\n        setTitle(props.selectedQuestionType.selectedQuestionType.title);\n      }\n      if (element === \"\") {\n        setElement(props.selectedQuestionType.selectedQuestionType.element);\n      }\n      if (description === \"\") {\n        setDescription(\n          props.selectedQuestionType.selectedQuestionType.description\n        );\n      }\n    }\n  }, [props, title, element, description]);\n  return (\n    <form onSubmit={submitQuestionType} className=\"-mt-2\">\n      <div className=\"flex flex-col mb-2\">\n        <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">\n          Element\n        </span>\n        {props.selectedQuestionType !== null ? (\n          <div className=\"bg-blue-100 text-blue-600 font-bold px-3 py-2 rounded\">\n            {\n              questionTypeElements.find(\n                (itm) =>\n                  props.selectedQuestionType &&\n                  itm.key ===\n                    props.selectedQuestionType.selectedQuestionType.element\n              )?.value\n            }\n          </div>\n        ) : (\n          <select\n            disabled={loading}\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n              setElement(e.target.value);\n              setFormError(null);\n            }}\n            className={`input-white border-2 ${\n              formError !== null && formError.element === \"element\"\n                ? \"border-red-500\"\n                : \"border-gray-500\"\n            }`}\n          >\n            <option value=\"\">Choose element</option>\n            {questionTypeElements.map((item, i) => (\n              <>\n                {props.questionTypes.questionTypes &&\n                  props.questionTypes.questionTypes.find(\n                    (itm) => itm.element === item.key\n                  ) === undefined && (\n                    <option\n                      selected={element === item.key ? true : false}\n                      key={i + 1}\n                      value={item.key}\n                    >\n                      {item.value}\n                    </option>\n                  )}\n              </>\n            ))}\n          </select>\n        )}\n        {formError !== null && formError.element === \"element\" && (\n          <span className=\"text-red-600 font-bold text-xs\">\n            {formError.msg}\n          </span>\n        )}\n      </div>\n      <div className=\"flex flex-col mb-2\">\n        <span className=\"text-sm text-gray-600 font-bold mb-1\">Title</span>\n        <input\n          disabled={loading}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setTitle(e.target.value);\n            setFormError(null);\n          }}\n          type=\"text\"\n          value={title}\n          className={`input-white border-2 ${\n            formError !== null && formError.element === \"title\"\n              ? \"border-red-500\"\n              : \"border-gray-500\"\n          }`}\n        />\n        {formError !== null && formError.element === \"title\" && (\n          <span className=\"text-red-600 font-bold text-xs\">\n            {formError.msg}\n          </span>\n        )}\n      </div>\n      <div className=\"flex flex-col mb-2\">\n        <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">\n          Description\n        </span>\n        <textarea\n          disabled={loading}\n          onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n            setDescription(e.target.value);\n            setFormError(null);\n          }}\n          value={description}\n          className={`input-white border-2 ${\n            formError !== null && formError.element === \"description\"\n              ? \"border-red-500\"\n              : \"border-gray-500\"\n          }`}\n          style={{ minHeight: \"100px\" }}\n        >\n          {description}\n        </textarea>\n        {formError !== null && formError.element === \"description\" && (\n          <span className=\"text-red-600 font-bold text-xs\">\n            {formError.msg}\n          </span>\n        )}\n      </div>\n      <div className=\"flex flex-row justify-between items-center\">\n        {props.selectedQuestionType?.action === QT_QuestionTypeAction.View ? (\n          <button\n            onClick={() =>\n              props.selectedQuestionType &&\n              props.deleteSelected({\n                action: QT_QuestionTypeAction.Delete,\n                selectedQuestionType:\n                  props.selectedQuestionType.selectedQuestionType,\n              })\n            }\n            type=\"button\"\n            className=\"btn border border-red-600 text-red-700\"\n          >\n            Delete\n          </button>\n        ) : (\n          <div></div>\n        )}\n        <button\n          disabled={loading}\n          type=\"submit\"\n          className={`btn bg-blue-600 text-white ${\n            loading === true\n              ? \"animate__animated animate__flash animate__infinite\"\n              : \"\"\n          }`}\n        >\n          {loading === true\n            ? \"Please wait...\"\n            : props.selectedQuestionType !== null\n            ? \"Update question type\"\n            : \"Add question type\"}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddQuestionType;\n"],"sourceRoot":""}
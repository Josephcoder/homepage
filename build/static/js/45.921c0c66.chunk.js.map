{"version":3,"sources":["containers/Claimings/Admin/index.tsx"],"names":["ClaimTypesInterface","AdminClaim","connect","auth","application_sessions","system_settings","applicationSessions","getApplicationSessions","PushPopupAlert","props","useState","thisPeriod","setThisPeriod","thisClaimType","setThisClaimType","loading","setLoading","loadingSession","setLoadingSession","loadingClaims","viewClaim","setViewClaim","useEffect","length","status","msg","title","theme","PopupAlertTheme","danger","className","headerTitle","DOCUMENT","APPLICATION","PLACEMENT","columns","columnTitle","alignText","padding","rows","pagination","search","thColor","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","medium","body","footer"],"mappings":"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","file":"static/js/45.921c0c66.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdAdd } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { Auth } from \"../../../actions/auth\";\nimport { getApplicationSessions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport Table from \"../../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ApplicationSessionInterface } from \"../../../shared/interfaces\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport FilterByType from \"../FilterByType\";\n\nexport enum ClaimTypesInterface {\n  DOCUMENT = \"document\",\n  APPLICATION = \"application\",\n  PLACEMENT = \"placement\",\n}\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: ApplicationSessionInterface[];\n  getApplicationSessions: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst Index: React.FC<AppProps> = (props) => {\n  const [thisPeriod, setThisPeriod] = useState<string>(\"\");\n  const [thisClaimType, setThisClaimType] = useState<\n    ClaimTypesInterface | \"ALL\"\n  >(\"ALL\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(false);\n  const [viewClaim, setViewClaim] = useState<boolean>(false);\n  const [claimForm, setClaimForm] = useState<boolean>(false);\n\n  useEffect(() => {\n    setLoading(true);\n    if (!props.application_sessions.length) {\n      props.getApplicationSessions((status: boolean, msg: string) => {\n        setLoadingSession(status);\n        if (msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n  }, [props, thisPeriod, thisPeriod.length]);\n\n  const tableData = (): JSX.Element[] => {\n    return [\n      <tr key={43243} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n      <tr key={43243343} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n      <tr key={4327543} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n    ];\n  };\n\n  if (loading === true || loadingSession === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      {/* SIDE NAVIGATION */}\n      <SideNavigation>\n        {/* FILTER SECTION */}\n        <FilterByType\n          thisClaimType={thisClaimType}\n          setThisClaimType={setThisClaimType}\n        />\n        {/* END FILTER SECTION */}\n      </SideNavigation>\n      {/* END SIDE NAVIGATION */}\n\n      {/* CLAIM TITLE ===================================== */}\n      <ClaimHeaderTitle\n        headerTitle={`${\n          thisClaimType === \"ALL\"\n            ? \"All\"\n            : thisClaimType === ClaimTypesInterface.DOCUMENT\n            ? \"Documents\"\n            : thisClaimType === ClaimTypesInterface.APPLICATION\n            ? \"Applications\"\n            : thisClaimType === ClaimTypesInterface.PLACEMENT && \"Placements\"\n        } Claiming`}\n        loading={loading}\n        loadingSession={loadingSession}\n        thisPeriod={thisPeriod}\n        setThisPeriod={setThisPeriod}\n        setLoadingSession={setLoadingSession}\n        application_sessions={props.application_sessions}\n      />\n      {/* END CLAIM TITLE ===================================== */}\n\n      <section className=\"bg-white w-full p-1\">\n        <Table\n          columns={[\n            { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n            { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n            {\n              columnTitle: \"\",\n              alignText: \"left\",\n              padding: \"p-3\",\n            },\n            {\n              columnTitle: \"\",\n              alignText: \"left\",\n              padding: \"p-3\",\n            },\n            { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n          ]}\n          rows={tableData}\n          pagination={true}\n          search={true}\n          thColor=\"gray\"\n          loading={loadingClaims}\n        />\n      </section>\n\n      {/* modal control */}\n      {viewClaim && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => {\n            setViewClaim(false);\n          }}\n          displayClose={true}\n          backDropClose={false}\n          title={\n            <div className=\"text-gray-900 font-bold text-xl md:ml-1\">\n              Claiming form\n            </div>\n          }\n          widthSizeClass={ModalSize.medium}\n          padding={{ title: true, body: false, footer: false }}\n        >\n          <div className=\"mb-3\">vIEW PART</div>\n        </Modal>\n      )}\n      {/* end modal control */}\n\n      {/* CLAIM FORM  ################ */}\n      {/* {claimForm && (\n        <ClaimForm formState={claimForm} setFormState={setClaimForm} />\n      )} */}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: ApplicationSessionInterface[];\n} => {\n  return {\n    auth: auth,\n    application_sessions: system_settings.applicationSessions,\n  };\n};\n\nexport const AdminClaim = connect(mapStateToProps, {\n  getApplicationSessions,\n  PushPopupAlert,\n})(Index);\n"],"sourceRoot":""}
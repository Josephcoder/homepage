{"version":3,"sources":["containers/AdminDashboard/ClaimDashboard/AllClaimChart.tsx","containers/AdminDashboard/ClaimDashboard/ClaimDashBoardTitle.tsx","containers/AdminDashboard/ClaimDashboard/ClaimDashboard.tsx","containers/SessionSettings/NoSession.tsx","actions/settings.ts","components/Loading/TableLoading.tsx","utils/ExportToExcel.tsx","shared/interfaces.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","containers/SessionSettings/ChooseSession.tsx","containers/AdminDashboard/ChartComponents/VBarChart.tsx","containers/AdminDashboard/DashboardLabelItem.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardLabels.tsx","containers/AdminDashboard/ChartComponents/PieChart.tsx","containers/Admin/Claiming/ClaimingReport.tsx","containers/Claimings/Admin/AdminClaimExamView.tsx","containers/Positions/ViewDocRequirements.tsx","containers/Claimings/Admin/AdminClaimAppView.tsx","containers/Claimings/Admin/AdminClaimDocView.tsx","containers/Claimings/Admin/index.tsx"],"names":["AllClaimChart","props","FC_GetAllClaimChartData","acceptedArray","rejectedArray","activeArray","labelArray","typeKey","ClaimTypes","type","push","count","accepted","rejected","pending","replace","active","labels","className","VBarChart","categoriesLabel","dataLabels","yaxisText","tooltipText","series","name","data","colors","defaultBar","borderRadius","horizontal","columnWidth","endingShape","stacked","React","memo","ClaimDashBoardTitle","reportTitle","education_categories","length","allEducation","loading","loadingApplications","loadingEducation","periodChanged","thisEducation","onClick","setThisEducation","map","education","index","education_institute_id","education_category_title","value","thisPeriod","disabled","onChange","e","setThisPeriod","target","onPeriodChange","application_sessions","session","item","_id","session_plan_name","_ClaimDashboard","setLoadingInstitutes","setState","loadingInstitutes","setLoading","setLoadingSession","loadingSession","setPeriodChanged","setLoadingPosition","loadingPosition","setLoadingApplications","setLoadingClaims","loadingClaims","setLoadingDocuments","loadingDocuments","setLoadingClarifications","loadingClarifications","setLoadingFields","loadingFields","setThisLabel","thisLabel","componentDidMount","schoolLevels","loadEducationCategories","GetAllSessionPlans","status","msg","PushPopupAlert","title","theme","PopupAlertTheme","danger","thisSession","find","is_active","state","isEmptyOrSpaces","documentReducer","documentCategory","getDocumentCategory","documentSubCategory","getDocumentSubCategory","documentFields","getDocumentFields","systemPositions","auth","education_institution_id","FC_GetPositionsByInstitution","console","log","period_id","getAllClaims","getAllApplications","getClaimInstitute","thisClaim","type_key","PlansTypeKeys","DOCUMENT_VALIDATION","APPLICATION","claiming","allApplications","thisApplication","claiming_on_id","thisPosition","position_id","position","displayClaimTitle","result","user","details","filter","validation_status","adminDisplayClaimTitle","position_title","claims","output","all","decision","ClaimDecisionStatus","ACCEPTED","REJECTED","Object","values","forEach","PlansKey","capitalizeFirstLetter","reportClaimType","itm","claim_type","FC_ClaimData","allClaims","arrayNew","n","key","prototype","hasOwnProperty","call","keyClaim","element","dataArray","claim_id","names","user_info","fname","lname","gender","sex","national_id","n_id","phone","phone_number","email","claim_level","level","education_category","claim_session","date","DATE","createdAt","decision_taken_status","claim_title","getClaimDataByTitle","allData","this","NoSession","toLocaleLowerCase","ExamDashboardLabels","icon","FaBookOpen","iconColor","labelsOnRow","PieChart","options","legend","show","horizontalAlign","fontSize","itemMargin","vertical","plotOptions","pie","donut","color","offsetY","fontFamily","formatter","val","total","label","w","globals","seriesTotals","reduce","a","b","width","Component","ClaimDashboard","connect","system_settings","sessionPlan","document","allSessionPlans","GetClaimingTypes","setSelectedClaimType","description","content","undefined","url","API","AUTH","getSystemSettings","callback","dispatch","setAxiosToken","axios","get","res","ActionTypes","GET_SYSTEM_SETTINGS","payload","code_error","errorToText","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","id","task","permitted","GET_TASK_ACCESS","getPositions","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","institution_id","TableLoading","displayCols","colsArray","cols","Math","random","ExportToExcel","fileData","fileName","btnName","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","RoomType","PostRequestStatusInterface","DocumentAttributesInterface","DocValidationStatusInterface","SESSION_PLAN_KEYS","EXAMINATION","MARKS_PUBLICATION","PLACEMENT_TRANSFER","require","addFooters","doc","pageCount","internal","getNumberOfPages","setFont","setFontSize","i","setPage","text","String","pageSize","align","generatePDF","reportSettings","table","callBack","orientation","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","institute","lines","splitTextToSize","subject","pdfInMM","y","subjectTitle","getTextWidth","addPage","period","autoTable","html","startY","margin","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","doneBy","Date","toString","save","returnPromise","then","isPlansActive","plans","today","activePlans","plan","startDate","start_date","endDate","end_date","getTime","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","useState","selectedPlan","setSelectedPlan","search","setSearch","placeholder","allSession","chooseAll","currentSelected","setSelectSession","searchData","type_title","chart","events","dataPointSelection","event","chartContext","config","labelClicked","dataPointIndex","FC_LoadSelected","seriesIndex","bar","enabled","xaxis","rotate","categories","tickPlacement","yaxis","fill","opacity","tooltip","grid","padding","left","right","noData","verticalAlign","setOptions","useEffect","chartClicked","zoom","autoScaleYaxis","height","chartHeight","DashboardLabelItem","FaUsers","countOver","IconDefined","toAnyDigit","displayNumbers","numCols","children","childrenPosition","ClaimTypesEnum","application","exam","marks_publication","placement","defaultReportContent","claimReportContentKeyInterface","ClaimingReport","thisLevel","setThisLevel","downloading","setDownloading","claimToPrint","setClaimToPrint","sortProperty","setSortProperty","isSorted","setIsSorted","sortOrder","setSortOrder","searchInput","setSearchInput","generateReportModal","setGenerateReportModal","setReportTitle","reportContent","setReportContent","selectAll","setSelectAll","formError","setFormError","selectPeriod","setSelectPeriod","claimTypes","objList","setSort","thisProperty","updateClaimToPrint","thisType","whichClaimType","institute_id","isChangeAllowed","FC_FilterClaims","claimType","claimLevel","capitalizeFirstWord","selectedType","selectedClaimType","currentType","levels","ClaimLevels","reportType","querySelectorAll","getElementById","footer","warning","FC_GeneratePDF","colSpan","sortThisArray","product","flag","prop","toLowerCase","indexOf","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","medium","displayClose","findIndex","newArray","isSelectAllNeeded","updateReportContent","currentState","resetReportContent","extraLarge","viewTabs","ViewDocRequirements","viewDoc","setViewDoc","loadingImage","setLoadingImage","isFullscreen","setSetFullscreen","failedToLoadFile","setFailedToLoadFile","isDocumentExist","category_id","sub_category_id","field_id","userDocs","category_subcategory_data","Table","columns","columnTitle","alignText","rows","requirements","subcategory_id","subcategory_title","field_title","pagination","thColor","Modal","body","isFileImage","getFileType","files","Loading","src","AUTH_FILES","alt","onLoad","onDoubleClick","fullScreen","ViewPDF","file_url","class_name","frame_title","setLoadingFile","setLoadingError","FC_AdminApplicationPositionDistinctCategory","documentCategories","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","req","thisRequirements","thisCategory","user_detail_category_id","category","thisSubCategory","user_detail_subcategory_id","subcategory","field","thisField","position_requirement","required","category_title","subcategory_required","includes","evaluateClaim","reAssessApplication","loadingRequest","setLoadingRequest","actionTaken","setActionTaken","responseMsg","setResponseMsg","handleVerify","subClaim","api_body","sub_claim_id","evaluation_comment","evaluated_by","user_id","evaluator_name","evaluator_email","put","CLAIMING","evaluate_claim_res","overrideDecision","success","error","getReasonById","reason_id","claimReasons","patch","comment","application_status","ApplicationStates","Shortlisted","application_id","getPositionById","FC_GetBase64Img","photo","school_level_id","school_level_name","courses","course_name","course_code","course_id","NoResult","NoResultThemes","Dark","DisplayCompetence","competence","previous","Rejected","evaluater","dangerouslySetInnerHTML","__html","reason","override_by","claim","default_claim_resaons","showDate","isClaimEvaluated","last_claim_status","ClaimStatus","PENDING","DELETED","style","resize","window","confirm","verifyDocument","FC_DocValidation","doc_id","APPROVED","validated_by","in_education","disability","expiration_date","api_redux","post","USER","FC_shortListing","candidate_id","setViewImage","viewImage","thisDoc","commet","questionTypes","loadQuestionTypes","marks","setMarks","profile","selectedTab","setSelectedTab","handleMarksAddition","DO_EXAM","answer_sheet_id","AnswersDetails","showAnswers","exam_id","claimShowAnswer","thisExamSheet","thisExam","allAnswers","exam_location","questions","user_answers","course","exam_paper","user_status","used_duration","total_marks","number_of_question_answered","exam_total_marks","exam_start_time","exam_end_time","exam_date","updatedAt","Number","candidateDocuments","AdminClaimGetDocTitle","main","DocCategory","DocSubCategory","DocField","DocTitle","c","sub_category","getApplicationById","Index","setLoadingData","loadingData","setViewClaim","viewClaim","setClaimId","claimId","setClaimType","setCandidateId","candidateId","setDefaultSession","sessions","loadsAllClaims","setSearchClaim","searchClaim","loadsApplications","loadsController","file_id","loadsAlAnswers","answersheet_id","allAnswer","getAllAnswers","getClaimReasons","loadCourses","thisDocs","thisAnswer","getCourseIdBySheetId","getCourseById","getLastClaimDate","claimsLength","SideNavigation","AdminFilterByType","ClaimHeaderTitle","headerTitle","filterClaimsByClaimType","Light","whichClaimStatus","classes","getClaimById","ClaimTypesInterface","DOCUMENT","AdminClaim"],"mappings":"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","file":"static/js/25.8e8a7a9b.chunk.js","sourcesContent":["import React from \"react\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype AllClaimChartProps = {\n  ClaimTypes: {\n    title: string;\n    count: {\n      all: number;\n      accepted: number;\n      rejected: number;\n      pending: number;\n    };\n    type: string | \"all\";\n  }[];\n};\n\nconst AllClaimChart: React.FC<AllClaimChartProps> = (props) => {\n  const FC_GetAllClaimChartData = (): {\n    accepted: number[];\n    rejected: number[];\n    active: number[];\n    labels: string[];\n  } => {\n    let acceptedArray: number[] = [],\n      rejectedArray: number[] = [],\n      activeArray: number[] = [],\n      labelArray: string[] = [];\n\n    for (const typeKey in props.ClaimTypes) {\n      if (props.ClaimTypes[typeKey].type !== \"all\") {\n        acceptedArray.push(props.ClaimTypes[typeKey].count.accepted);\n        rejectedArray.push(props.ClaimTypes[typeKey].count.rejected);\n        activeArray.push(props.ClaimTypes[typeKey].count.pending);\n        labelArray.push(props.ClaimTypes[typeKey].type.replace(/_/g, \" \"));\n      }\n    }\n    return {\n      accepted: acceptedArray,\n      rejected: rejectedArray,\n      active: activeArray,\n      labels: labelArray,\n    };\n  };\n\n  return (\n    <section className=\"my-3 max-w-full bg-white\">\n      <div className=\"flex items-center justify-between px-3\">\n        <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n          Claim chart on country level\n        </span>\n      </div>\n      <div className=\"mb-4 pb-2 px-3\">\n        <VBarChart\n          labels={FC_GetAllClaimChartData().labels}\n          categoriesLabel={FC_GetAllClaimChartData().labels}\n          dataLabels={false}\n          yaxisText=\"(Applicants)\"\n          tooltipText=\"Claims\"\n          series={[\n            {\n              name: \"Pending Claim\",\n              data: FC_GetAllClaimChartData().active,\n            },\n            {\n              name: \"Accepted Claim\",\n              data: FC_GetAllClaimChartData().accepted,\n            },\n            {\n              name: \"Rejected Claim\",\n              data: FC_GetAllClaimChartData().rejected,\n            },\n          ]}\n          colors={[\"#4b5563\", \"#469769\", \"#d97724\"]}\n          defaultBar={{\n            borderRadius: 4,\n            horizontal: false,\n            columnWidth: \"95%\",\n            endingShape: \"rounded\",\n          }}\n          stacked={true}\n        />\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(AllClaimChart);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { MdBrightness1 } from \"react-icons/md\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { education_category } from \"../../../interfaces/education_category\";\n\ntype ClaimDashBoardTitleProps = {\n  reportTitle: string;\n  education_categories: education_category[] | null;\n  loading: boolean;\n  loadingApplications: boolean;\n  loadingEducation: boolean;\n  thisEducation: education_category | null;\n  allEducation: boolean;\n  periodChanged: boolean;\n  setThisEducation: (value: education_category | null) => void;\n  thisPeriod: string;\n  setThisPeriod: (value: string) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst ClaimDashBoardTitle: React.FC<ClaimDashBoardTitleProps> = (props) => {\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.reportTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        {/* EDUCATION CATEGORY sections */}\n        <section>\n          {props.education_categories && props.education_categories.length > 0 && (\n            <div className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n              {props.allEducation && (\n                <div\n                  className={`w-auto ${\n                    props.loading ||\n                    props.loadingApplications ||\n                    props.loadingEducation ||\n                    props.periodChanged\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation === null\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(null)\n                  }\n                >\n                  <section className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>All</span>\n                  </section>\n                </div>\n              )}\n              {props.education_categories.map((education, index) => (\n                <div\n                  key={education.education_institute_id + index}\n                  className={`w-auto ${\n                    props.loading ||\n                    props.loadingApplications ||\n                    props.loadingEducation\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation &&\n                    education.education_institute_id ===\n                      props.thisEducation.education_institute_id\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingApplications &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(education)\n                  }\n                >\n                  <div className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>{education.education_category_title}</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </section>\n        {/* end EDUCATION CATEGORY sections */}\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              props.loadingApplications && \"cursor-wait\"\n            }`}\n            value={props.thisPeriod}\n            disabled={\n              props.loading ||\n              props.loadingApplications ||\n              props.loadingEducation ||\n              props.periodChanged\n            }\n            onChange={(e) => {\n              props.setThisPeriod(e.target.value);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option key={session._id + item} value={session._id}>\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default React.memo(ClaimDashBoardTitle);\n","import React, { Component } from \"react\";\nimport { FaBookOpen } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  loadEducationCategories,\n  setSelectedClaimType,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { FC_GetPositionsByInstitution } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  education_category,\n  PlansTypeKeys,\n  CandidateClaimInterface,\n  ClaimToPrintInterface,\n  ClaimDecisionStatus,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { DATE } from \"../../../utils/functions\";\nimport { reportClaimType } from \"../../Admin/Claiming/ClaimingReport\";\nimport { adminDisplayClaimTitle } from \"../../Claimings/Admin\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport PieChart from \"../ChartComponents/PieChart\";\nimport ExamDashboardLabels from \"../ExamDashboard/ExamDashboardLabels\";\nimport AllClaimChart from \"./AllClaimChart\";\nimport ClaimDashBoardTitle from \"./ClaimDashBoardTitle\";\n\ninterface WaitingListDashboardProps {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  setSelectedClaimType: Function;\n  FC_GetPositionsByInstitution: Function;\n  getAllClaims: Function;\n  GetClaimingTypes: Function;\n  getAllApplications: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface WaitingListDashboardStates {\n  thisPeriod: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  loadingPosition: boolean;\n  loadingApplications: boolean;\n  loadingClaims: boolean;\n  loadingDocuments: boolean;\n  loadingInstitutes: boolean;\n  loadingClarifications: boolean;\n  loadingFields: boolean;\n  thisEducation: education_category | null;\n  thisLabel: PlansTypeKeys | \"all\";\n}\nclass _ClaimDashboard extends Component<\n  WaitingListDashboardProps,\n  WaitingListDashboardStates\n> {\n  constructor(props: WaitingListDashboardProps) {\n    super(props);\n\n    this.state = {\n      thisPeriod: \"\",\n      loading: true,\n      loadingSession: true,\n      periodChanged: false,\n      loadingPosition: true,\n      loadingApplications: true,\n      loadingClaims: true,\n      loadingDocuments: true,\n      loadingInstitutes: true,\n      loadingClarifications: true,\n      loadingFields: true,\n      thisEducation: null,\n      thisLabel: \"all\",\n    };\n  }\n\n  setLoadingInstitutes = (value: boolean) => {\n    this.setState({ loadingInstitutes: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingSession = (value: boolean) => {\n    this.setState({ loadingSession: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setLoadingPosition = (value: boolean) => {\n    this.setState({ loadingPosition: value });\n  };\n\n  setLoadingApplications = (value: boolean) => {\n    this.setState({ loadingApplications: value });\n  };\n\n  setLoadingClaims = (value: boolean) => {\n    this.setState({ loadingClaims: value });\n  };\n  setLoadingDocuments = (value: boolean) => {\n    this.setState({ loadingDocuments: value });\n  };\n\n  setLoadingClarifications = (value: boolean) => {\n    this.setState({ loadingClarifications: value });\n  };\n\n  setLoadingFields = (value: boolean) => {\n    this.setState({ loadingFields: value });\n  };\n\n  setThisEducation = (value: education_category | null) => {\n    this.setState({ thisEducation: value });\n  };\n\n  setThisLabel = (value: PlansTypeKeys | \"all\") => {\n    this.setState({ thisLabel: value });\n  };\n\n  setThisPeriod = (value: string) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  componentDidMount = () => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoadingInstitutes);\n    } else {\n      this.setLoadingInstitutes(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n\n    // LOADING APPLICATION SESSION ====================================\n    if (\n      this.props.application_sessions === null ||\n      this.props.application_sessions.length === 0\n    ) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          if (!status) {\n            this.setLoadingSession(false);\n            this.setLoading(false);\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              let thisSession = data.find((item) => item.is_active === true);\n              this.setThisPeriod(\n                thisSession ? thisSession._id : data[data.length - 1]._id\n              );\n              this.onPeriodChange(\n                thisSession ? thisSession._id : data[data.length - 1]._id\n              );\n            }\n          }\n        }\n      );\n    } else if (this.state.loadingSession) {\n      this.setLoading(false);\n      this.setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (\n      isEmptyOrSpaces(this.state.thisPeriod) &&\n      !this.state.loadingSession &&\n      this.props.application_sessions &&\n      this.props.application_sessions.length > 0\n    ) {\n      let thisSession = this.props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      this.setThisPeriod(\n        thisSession\n          ? thisSession._id\n          : this.props.application_sessions[\n              this.props.application_sessions.length - 1\n            ]._id\n      );\n      this.onPeriodChange(\n        thisSession\n          ? thisSession._id\n          : this.props.application_sessions[\n              this.props.application_sessions.length - 1\n            ]._id\n      );\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (\n      !this.props.documentReducer.documentCategory &&\n      this.state.loadingDocuments\n    ) {\n      this.props.getDocumentCategory();\n      this.setLoadingDocuments(false);\n    } else if (this.state.loadingDocuments) {\n      this.setLoadingDocuments(false);\n    }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (\n      !this.props.documentReducer.documentSubCategory &&\n      this.state.loadingClarifications\n    ) {\n      this.props.getDocumentSubCategory();\n      this.setLoadingClarifications(false);\n    } else if (this.state.loadingClarifications) {\n      this.setLoadingClarifications(false);\n    }\n    // LOADING DOCUMENT FIELDS ==========================\n    if (\n      !this.props.documentReducer.documentFields &&\n      this.state.loadingFields\n    ) {\n      this.props.getDocumentFields();\n      this.setLoadingFields(false);\n    } else if (this.state.loadingFields) {\n      this.setLoadingFields(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n\n    // LOADING POSITIONS ==============================================\n    if (\n      this.props.systemPositions === null &&\n      this.props.auth.education_institution_id\n    ) {\n      this.props.FC_GetPositionsByInstitution(\n        this.props.auth.education_institution_id,\n        (status: boolean, msg: string) => {\n          this.setLoadingPosition(status);\n          console.log({ status: status, msg: msg });\n          if (msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (this.state.loadingPosition) {\n      this.setLoadingPosition(false);\n    }\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && this.setPeriodChanged(false);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n\n    this.props.getAllApplications(period_id, (status: boolean, msg: string) => {\n      !status && this.setLoadingApplications(status);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  getClaimInstitute = (thisClaim: CandidateClaimInterface): string | null => {\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      return null;\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          // return thisApplication.\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            return thisPosition.education_institute_id.education_institute_id;\n          }\n        }\n      }\n    }\n\n    return null;\n  };\n\n  displayClaimTitle = (thisClaim: CandidateClaimInterface): string => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      result =\n        thisClaim.user.details.filter(\n          (item) => item.validation_status !== \"waiting\"\n        ).length > 0\n          ? adminDisplayClaimTitle(\n              this.props.documentReducer,\n              thisClaim.user.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ),\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  ClaimTypes = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: {\n      all: number;\n      accepted: number;\n      rejected: number;\n      pending: number;\n    };\n    type: PlansTypeKeys | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: {\n        all: number;\n        accepted: number;\n        rejected: number;\n        pending: number;\n      };\n      type: PlansTypeKeys | \"all\";\n    }[] = [\n      {\n        title: \"All claim types\",\n        count: {\n          all: claims.length,\n          accepted: claims.filter(\n            (item) => item.decision === ClaimDecisionStatus.ACCEPTED\n          ).length,\n          rejected: claims.filter(\n            (item) => item.decision === ClaimDecisionStatus.REJECTED\n          ).length,\n          pending: claims.filter((item) => item.decision === \"PENDING\").length,\n        },\n        type: \"all\",\n      },\n    ];\n\n    Object.values(PlansTypeKeys).forEach((PlansKey) => {\n      output.push({\n        title: capitalizeFirstLetter(reportClaimType(PlansKey)),\n        count: {\n          all: claims.filter((itm) => itm.claim_type === PlansKey).length,\n          accepted: claims.filter(\n            (itm) =>\n              itm.claim_type === PlansKey &&\n              itm.decision === ClaimDecisionStatus.ACCEPTED\n          ).length,\n          rejected: claims.filter(\n            (itm) =>\n              itm.claim_type === PlansKey &&\n              itm.decision === ClaimDecisionStatus.REJECTED\n          ).length,\n          pending: claims.filter(\n            (itm) => itm.claim_type === PlansKey && itm.decision === \"PENDING\"\n          ).length,\n        },\n        type: PlansKey,\n      });\n    });\n    return output;\n  };\n\n  FC_ClaimData = (\n    allClaims: CandidateClaimInterface[] | null\n  ): ClaimToPrintInterface[] => {\n    if (allClaims === null || allClaims.length <= 0) return [];\n    let arrayNew: ClaimToPrintInterface[] = [];\n    let n: number = 1;\n    // LOOP IN ALL CLAIM ONE BY ONE ###########################\n    for (const key in allClaims) {\n      if (Object.prototype.hasOwnProperty.call(allClaims, key)) {\n        // LOOP IN ALL CLAIM OF ONE FILE ONE BY ONE ===========================\n        for (const keyClaim in allClaims[key].claims) {\n          if (\n            Object.prototype.hasOwnProperty.call(\n              allClaims[key].claims,\n              keyClaim\n            )\n          ) {\n            const element = allClaims[key].claims[keyClaim];\n            let dataArray: ClaimToPrintInterface = {\n              claim_id: n,\n              names:\n                allClaims[key].user.user_info.fname +\n                \" \" +\n                allClaims[key].user.user_info.lname,\n              gender: allClaims[key].user.user_info.sex ? \"Male\" : \"Female\",\n              national_id: allClaims[key].user.n_id,\n              phone: allClaims[key].user.phone_number,\n              email: allClaims[key].user.email,\n              claim_type: allClaims[key].type_key,\n              claim_level: element.level,\n              education_category: this.getClaimInstitute(allClaims[key]),\n              claim_session: this.state.thisPeriod,\n              date: DATE(element.createdAt),\n              decision: element.decision_taken_status\n                ? element.decision_taken_status\n                : \"PENDING\",\n              claim_title: this.displayClaimTitle(allClaims[key]),\n            };\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n      }\n    }\n    return arrayNew;\n  };\n\n  getClaimDataByTitle = (\n    allData: {\n      title: string;\n      count: {\n        all: number;\n        accepted: number;\n        rejected: number;\n        pending: number;\n      };\n      type: PlansTypeKeys | \"all\";\n    }[]\n  ):\n    | {\n        title: string;\n        count: {\n          all: number;\n          accepted: number;\n          rejected: number;\n          pending: number;\n        };\n        type: PlansTypeKeys | \"all\";\n      }\n    | undefined => {\n    return allData.find((item) => item.type === this.state.thisLabel);\n  };\n\n  render() {\n    if (\n      this.props.application_sessions &&\n      this.props.application_sessions.length === 0\n    ) {\n      return <NoSession />;\n    }\n\n    if (\n      this.state.loading ||\n      this.props.application_sessions === null ||\n      this.props.claiming.allClaims === null\n    ) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* HEADER TITLE */}\n        <ClaimDashBoardTitle\n          education_categories={this.props.schoolLevels.education_categories}\n          loading={this.state.loading}\n          loadingApplications={this.state.loadingApplications}\n          loadingEducation={this.state.loadingInstitutes}\n          thisEducation={this.state.thisEducation}\n          setThisEducation={this.setThisEducation}\n          thisPeriod={this.state.thisPeriod}\n          setThisPeriod={this.setThisPeriod}\n          application_sessions={this.props.application_sessions}\n          reportTitle={\"Claim Dashboard\"}\n          allEducation={true}\n          periodChanged={this.state.periodChanged}\n          onPeriodChange={this.onPeriodChange}\n        />\n        {/* END HEADER TITLE */}\n\n        {/* ===================================================================================== */}\n\n        {/* CLAIM ALL STATUS LABELS ======================================= */}\n        <section className=\"my-2\">\n          <div className=\"text-2xl font-semibold text-gray-600\">\n            Claim type:\n            <select\n              className={`bg-white text-gray-600 border-2 border-blue-600 rounded-lg px-2 py-1 focus:outline-none`}\n              value={this.state.thisLabel}\n              onChange={(e) =>\n                this.setThisLabel(e.target.value as PlansTypeKeys | \"all\")\n              }\n            >\n              {this.ClaimTypes(\n                this.FC_ClaimData(this.props.claiming.allClaims)!\n              ).map((item, index: number) => (\n                <option key={item.type + index} value={item.type}>\n                  {capitalizeFirstLetter(item.title.toLocaleLowerCase())}\n                </option>\n              ))}\n            </select>\n          </div>\n          {this.getClaimDataByTitle(\n            this.ClaimTypes(this.FC_ClaimData(this.props.claiming.allClaims)!)\n          ) && (\n            <ExamDashboardLabels\n              dataLabels={[\n                {\n                  title: \"Total claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"blue\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.all,\n                },\n                {\n                  title: \"Accepted Claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"green\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.accepted,\n                },\n                {\n                  title: \"Rejected Claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"yellow\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.rejected,\n                },\n                {\n                  title: \"Pending Claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"gray\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.pending,\n                },\n              ]}\n              labelsOnRow={5}\n            >\n              <div className=\"flex justify-center\">\n                <PieChart\n                  options={{\n                    labels: [\"Accepted\", \"Rejected\", \"Pending\"],\n                    legend: {\n                      show: false,\n                      position: \"bottom\",\n                      horizontalAlign: \"center\",\n                      fontSize: \"16px\",\n                      itemMargin: {\n                        horizontal: 3,\n                        vertical: 0,\n                      },\n                    },\n                    plotOptions: {\n                      pie: {\n                        donut: {\n                          labels: {\n                            show: true,\n                            name: {\n                              show: true,\n                              fontSize: \"16px\",\n                              //   fontFamily: \"Rubik\",\n                              color: \"#2564eb\",\n                              offsetY: -10,\n                            },\n                            value: {\n                              show: true,\n                              fontSize: \"20px\",\n                              fontFamily: \"Helvetica, Arial, sans-serif\",\n                              color: \"#2564eb\",\n                              offsetY: 10,\n                              formatter: function (val) {\n                                return val;\n                              },\n                            },\n                            total: {\n                              show: true,\n                              label: \"Total\",\n                              color: \"#2564eb\",\n                              formatter: function (w) {\n                                return w.globals.seriesTotals.reduce(\n                                  (a: number, b: number) => {\n                                    return a + b;\n                                  },\n                                  0\n                                );\n                              },\n                            },\n                          },\n                        },\n                      },\n                    },\n                    colors: [\"#469769\", \"#d97724\", \"#4b5563\"],\n                  }}\n                  series={[\n                    this.getClaimDataByTitle(\n                      this.ClaimTypes(\n                        this.FC_ClaimData(this.props.claiming.allClaims)!\n                      )\n                    )!.count.accepted,\n                    this.getClaimDataByTitle(\n                      this.ClaimTypes(\n                        this.FC_ClaimData(this.props.claiming.allClaims)!\n                      )\n                    )!.count.rejected,\n                    this.getClaimDataByTitle(\n                      this.ClaimTypes(\n                        this.FC_ClaimData(this.props.claiming.allClaims)!\n                      )\n                    )!.count.pending,\n                  ]}\n                  width={210}\n                />\n              </div>\n            </ExamDashboardLabels>\n          )}\n        </section>\n        {/* CLAIM STATUS ON COUNTRY LEVEL LABELS ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n        <AllClaimChart\n          ClaimTypes={this.ClaimTypes(\n            this.FC_ClaimData(this.props.claiming.allClaims)\n          )}\n        />\n        {/* END EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    schoolLevels,\n  };\n};\n\nexport const ClaimDashboard = connect(mapStateToProps, {\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  setSelectedClaimType,\n  FC_GetPositionsByInstitution,\n  PushPopupAlert,\n})(_ClaimDashboard);\n","import React from \"react\";\nimport { IoWarning } from \"react-icons/io5\";\n// import { MdInfoOutline } from \"react-icons/md\";\nimport { NavLink } from \"react-router-dom\";\n\ntype NoSessionProps = {\n  title?: string;\n  description?: string;\n  content?: any;\n};\n\nconst NoSession: React.FC<NoSessionProps> = ({\n  title = \"No session available\",\n  description = \"Please Wait for the system to publish the sessions or contact the administrator\",\n  content = undefined,\n}) => {\n  return (\n    <div className=\"w-full my-5\">\n      <section className=\"py-10 flex flex-col items-center rounded border border-gray-300 bg-white text-2xl font-medium text-yellow-800 animate__animated animate__pulse\">\n        <div className=\"flex flex-col items-center\">\n          <IoWarning className=\"w-32 h-32\" />\n          {description}\n        </div>\n        {content && content}\n        {false && (\n          <div className=\"text-center group text-sm -mb-3 mt-5\">\n            <NavLink\n              to=\"/apps-page\"\n              className=\"border border-rounded-md bg-gray-100 text-gray-900 rounded border-gray-100 group-hover:bg-gray-50 group-hover:border-gray-400 px-2 py-1\"\n            >\n              Back to App\n            </NavLink>\n          </div>\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default React.memo(NoSession);\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\nconst url = `${API.AUTH}/auth/user/access`;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/system/setting`\n      );\n      console.log(\"=================getSystemSettings===================\");\n      console.log(res);\n      console.log(\"=================getSystemSettings===================\");\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${url}/roleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_GetPositionsByInstitution = (\n  institution_id: string,\n  callback: (status: boolean, msg: string, data?: PositionAPI[]) => void\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(\n        `${API.APPLICATION}/position/instituteposition/${institution_id}`\n      );\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={Math.random()}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={Math.random()}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={Math.random()}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","import { SessionPlanInterface } from \"../interfaces\";\nimport {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  _id?: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active: boolean;\n  disability: boolean;\n  in_education: boolean;\n  residence?: {\n    province_id: string;\n    province_name: string;\n    district_id: string;\n    district_name: string;\n    sector_id: string;\n    sector_name: string;\n  };\n  education_institution_id?: string;\n  education_institution_name?: string;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  _id: string;\n  n_id: string;\n  email: string;\n  phone_number: string;\n  in_education: boolean;\n  disability: boolean;\n  residence: {\n    province_id: string;\n    province_name: string;\n    district_id: string;\n    district_name: string;\n    sector_id: string;\n    sector_name: string;\n  };\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n  user_info: {\n    document_type: string;\n    issue_number: string;\n    date_of_issue: string;\n    date_of_expiry: string;\n    place_of_issue: string;\n    application_number: string;\n    fname: string;\n    lname: string;\n    father_names: string;\n    mother_names: string;\n    sex: string;\n    date_of_birth: string;\n    place_of_birth: string;\n    country_of_birth: string;\n    village_id: string;\n    village: string;\n    cell: string;\n    sector: string;\n    district: string;\n    province: string;\n    civil_status: string;\n    spouse: null;\n    status: string;\n    photo: string;\n  };\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    comment?: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  active?: boolean;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n  assigned_date?: string;\n}\n\nexport enum RoomType {\n  Physical = \"Physical\",\n  Virtual = \"Virtual\",\n  Default = \"Default\",\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: boolean;\n  room_type: RoomType;\n  room_number: number;\n  capacity: number;\n  _id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  _id: string;\n  center_name: string;\n  center_code: number;\n  district_id: string;\n  education_institute_id: string;\n}\n\nexport interface SectorInterface {\n  district_code: number;\n  district_id: string;\n  sector_name: string;\n  sector_code: number;\n  sector_id: string;\n}\n\nexport interface AllDistrictInterface {\n  sectors: string[];\n  centers: string[];\n  district_name: string;\n  district_code: string;\n  province_code: string;\n  province_id: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n  district_id: string;\n}\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  sectors: SectorInterface[];\n  province_code: number;\n  province_id: string;\n  district_name: string;\n  district_code: number;\n  _id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_code: number;\n  _id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  _id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n  school: {\n    _id: string;\n    school_name: string;\n    school_code: string;\n    province_id: string;\n    province_code: string;\n    district_id: {\n      _id: string;\n      district_name: string;\n    };\n    district_code: string;\n    sector_code: string;\n    sector_id: string;\n    school_status: string;\n    status: number;\n    createdAt: string;\n    updatedAt: string;\n  };\n  post_request_session_id: string;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  school_code: number;\n  province_id: string;\n  province_code: number;\n  district_id: string;\n  district_code: number;\n  sector_id: string;\n  sector_code: number;\n  education_category_id: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n  \"expiration_date\" = \"expiration_date\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: SessionPlanInterface;\n  application_status: string;\n  n_id: string;\n  email: string;\n  user_info: {\n    fname: string;\n    lname: string;\n    sex: string;\n  };\n  phone_number: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface LocationSectorTableInterface {\n  province_id: string;\n  province_name: string;\n  province_code: number;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  sub_category_required: boolean;\n  required: boolean;\n  isAnyField: boolean;\n}\n\nexport interface PositionRequirementsQualificationInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  fields: DocumentFieldsInterface[];\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  userInfo: {\n    n_id: string;\n    phone_number: string;\n    email: string;\n    user_info: {\n      document_type: string;\n      issue_number: string;\n      date_of_issue: string;\n      date_of_expiry: string;\n      place_of_issue: string;\n      application_number: string;\n      fname: string;\n      lname: string;\n      father_names: string;\n      mother_names: string;\n      sex: string;\n      date_of_birth: string;\n      place_of_birth: string;\n      country_of_birth: string;\n      village_id: string;\n      village: string;\n      cell: string;\n      sector: string;\n      district: string;\n      province: string;\n      civil_status: string;\n      spouse: null;\n      status: string;\n      photo: string;\n    };\n  };\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected._id === item._id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected._id === item._id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected._id === item._id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan._id !== item._id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null && selectedPlan._id === item._id && (\n                      <div\n                        onClick={() => setSelectedPlan(null)}\n                        className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Close\n                      </div>\n                    )}\n                  </div>\n                </div>\n                {selectedPlan !== null && selectedPlan._id === item._id && (\n                  <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                    <table className=\"w-full\">\n                      <thead className=\"bg-blue-50\">\n                        <tr className=\"text-left\">\n                          <th className=\"px-3 py-3\">#</th>\n                          <th>Plan</th>\n                          <th>Start date</th>\n                          <th>Ending date</th>\n                          <th>Status</th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"text-sm\">\n                        {selectedPlan !== null &&\n                          selectedPlan._id === item._id &&\n                          selectedPlan.plans.length > 0 &&\n                          item.plans.map((plan, i) => (\n                            <tr\n                              key={i + 1}\n                              className={`${\n                                isPlansActive(item.plans).find(\n                                  (itm) => itm.type_key === plan.type_key\n                                ) !== undefined\n                                  ? \"bg-blue-100 text-blue-600 font-bold\"\n                                  : \"\"\n                              } text-left border-b border-blue-50`}\n                            >\n                              <td className=\"px-3 py-1\">{i + 1}</td>\n                              <td>{plan.type_title}</td>\n                              <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                              <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                              <td>{plan.type_status}</td>\n                            </tr>\n                          ))}\n                      </tbody>\n                    </table>\n                  </div>\n                )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ChooseSession);\n","import { ApexOptions } from \"apexcharts\";\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype VBarCharPropstInterface = {\n  labels: string[];\n  categoriesLabel: any;\n  bar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  dataLabels: boolean;\n  yaxisText: string;\n  tooltipText: string;\n  series: {\n    name: string;\n    data: number[];\n  }[];\n  defaultBar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  colors?: any[];\n  title?: {\n    text: string;\n    align: string;\n    margin: number;\n    offestY: number;\n    style: {\n      fontSize: string;\n    };\n  };\n  stacked?: boolean;\n  FC_LoadSelected?: (labelIndex: number, seriesIndex: number) => void;\n  chartHeight?: number;\n};\n\nconst defaultBar = {\n  borderRadius: 4,\n  horizontal: false,\n  columnWidth: \"95%\",\n  endingShape: \"rounded\",\n};\n\nconst VBarChart: React.FC<VBarCharPropstInterface> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [options, setOptions] = useState<ApexOptions>({\n    chart: {\n      events: {\n        dataPointSelection: (event, chartContext, config) => {\n          console.log({\n            labelClicked: config.w.config.labels[config.dataPointIndex],\n            // seriesClicked: config.w.config.series[config.dataPointIndex],\n          });\n          if (props.FC_LoadSelected) {\n            props.FC_LoadSelected(config.dataPointIndex, config.seriesIndex);\n          }\n          // console.log(config.seriesIndex);\n          // console.log(config.dataPointIndex);\n        },\n      },\n      stacked: props.stacked ? props.stacked : false,\n    },\n    plotOptions: {\n      bar: props.defaultBar ? props.defaultBar : defaultBar,\n    },\n    labels: props.labels,\n    dataLabels: {\n      enabled: true,\n    },\n    xaxis: {\n      labels: {\n        rotate: -45,\n      },\n      categories: props.categoriesLabel,\n      tickPlacement: \"on\",\n    },\n    yaxis: {\n      title: {\n        text: props.yaxisText,\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n    tooltip: {\n      y: {\n        formatter: function (val: number) {\n          return val + \" \" + props.tooltipText;\n        },\n      },\n    },\n    grid: {\n      padding: {\n        left: 30, // or whatever value that works\n        right: 30, // or whatever value that works\n      },\n    },\n    noData: {\n      text: \"No data found\",\n      align: \"center\",\n      verticalAlign: \"middle\",\n    },\n  });\n\n  useEffect(() => {\n    if (props.colors && props.colors.length > 0 && loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                chartClicked: config.w.config.labels[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n        colors: props.colors,\n      });\n    } else if (loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                labelClicked: config.w.config.labels[config.dataPointIndex],\n                // seriesClicked: config.w.config.series[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n              // console.log(config.seriesIndex);\n              // console.log(config.dataPointIndex);\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n      });\n    }\n    setLoading(false);\n  }, [loading, options, props]);\n\n  if (loading) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full\">\n      <Chart\n        options={options}\n        series={props.series}\n        type=\"bar\"\n        width=\"100%\"\n        height={props.chartHeight ? props.chartHeight : undefined}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(VBarChart);\n","import React, { FC } from \"react\";\nimport { IconType } from \"react-icons\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { toAnyDigit } from \"../../shared/dataTest\";\nimport { displayNumbers } from \"../../utils/functions\";\n\nexport type DashboardLabelItemInterface = {\n  // TITLE: Application or Exam or Shortlisted ....\n  title: string;\n  // ICON: FaExpand ....\n  icon: IconType;\n  // ICON COLOR: blue, indigo, gray ....\n  iconColor: string;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  count: number;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  countOver?: number;\n};\n\nconst DashboardLabelItem: FC<DashboardLabelItemInterface> = (\n  props = {\n    title: \"\",\n    icon: FaUsers,\n    iconColor: \"indigo\",\n    count: 0,\n    countOver: undefined,\n  }\n) => {\n  const IconDefined = props.icon;\n  return (\n    <div className=\"flex items-center px-6 py-4 bg-white w-full rounded-md space-x-2 mb-2 lg:mb-0 shadow-md\">\n      <div\n        className={`p-3 rounded-full bg-${props.iconColor}-200 bg-opacity-75`}\n      >\n        <IconDefined className={`h-8 w-8 text-${props.iconColor}-600`} />\n      </div>\n      <div>\n        <h1 className=\"text-3xl font-semibold text-gray-700\">\n          {props.count < 1000\n            ? toAnyDigit(props.count)\n            : displayNumbers(props.count)}{\" \"}\n          {props.countOver && \"/ \" + toAnyDigit(props.countOver)}\n        </h1>\n        <span className=\"text-gray-500 text-lg\">{props.title}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DashboardLabelItem);\n","import React from \"react\";\nimport DashboardLabelItem, {\n  DashboardLabelItemInterface,\n} from \"../DashboardLabelItem\";\n\ntype DashboardLabelProps = {\n  dataLabels: DashboardLabelItemInterface[];\n  labelsOnRow?: number;\n  childrenPosition?: \"START\" | \"END\";\n  children?: JSX.Element;\n};\n\nconst ExamDashboardLabels: React.FC<DashboardLabelProps> = (props) => {\n  const numCols: number = props.labelsOnRow\n    ? props.labelsOnRow > 4\n      ? props.labelsOnRow\n      : 4\n    : 4;\n  return (\n    <div\n      className={`grid 2xl:grid-cols-${numCols} xl:grid-cols-${\n        numCols - 1\n      } lg:grid-cols-${numCols - 2} md:grid-cols-${\n        numCols - 3\n      } sm:grid-cols-2 grid-cols-1 gap-4 items-center mx-auto`}\n    >\n      {props.children &&\n        ((props.childrenPosition && props.childrenPosition === \"START\") ||\n          !props.childrenPosition) &&\n        props.children}\n      {props.dataLabels.map((item, index) => (\n        <section key={index + item.title}>\n          <DashboardLabelItem\n            title={item.title}\n            icon={item.icon}\n            iconColor={item.iconColor}\n            count={item.count}\n          />\n        </section>\n      ))}\n      {props.children &&\n        props.childrenPosition &&\n        props.childrenPosition === \"END\" &&\n        props.children}\n    </div>\n  );\n};\n\nexport default React.memo(ExamDashboardLabels);\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype chartType = {\n  options: {\n    labels: string[];\n    legend?: ApexLegend;\n    plotOptions?: ApexPlotOptions;\n    colors?: any[];\n  };\n  series: number[];\n  width?: number;\n};\n\nconst PieChart: React.FC<chartType> = (props) => {\n  return (\n    <div className=\"donut\">\n      <Chart\n        options={props.options}\n        series={props.series}\n        type=\"donut\"\n        width={`${props.width ? props.width : \"380\"}`}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PieChart);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { BiExport, BiSort } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadEducationCategories,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  setSelectedClaimType,\n  GetClaimingTypes,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  claimReportContentInterface,\n  claimReportContentKeyInterface,\n  ClaimToPrintInterface,\n} from \"../../../interfaces/claimings\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\nimport { ClaimTypesEnum, whichClaimType } from \"../../Claimings/Candidate\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport {\n  education_category,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport {\n  capitalizeFirstLetter,\n  capitalizeFirstWord,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport NoSession from \"../../SessionSettings/NoSession\";\n\nexport const reportClaimType = (\n  type: PlansTypeKeys | \"all\"\n): ClaimTypesEnum | \"all\" => {\n  let result: ClaimTypesEnum | \"all\" = \"all\";\n  switch (type) {\n    case PlansTypeKeys.APPLICATION:\n      result = ClaimTypesEnum.application;\n      break;\n    case PlansTypeKeys.DOCUMENT_VALIDATION:\n      result = ClaimTypesEnum.document;\n      break;\n    case PlansTypeKeys.EXAMINATION:\n      result = ClaimTypesEnum.exam;\n      break;\n    case PlansTypeKeys.MARKS_PUBLICATION:\n      result = ClaimTypesEnum.marks_publication;\n      break;\n    case PlansTypeKeys.PLACEMENT_TRANSFER:\n      result = ClaimTypesEnum.placement;\n      break;\n    default:\n      result = \"all\";\n      break;\n  }\n\n  return result;\n};\n\nconst searchData = (\n  objList: ClaimToPrintInterface[],\n  text: string\n): ClaimToPrintInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"names\" ||\n        prop === \"gender\" ||\n        prop === \"national_id\" ||\n        prop === \"phone\" ||\n        prop === \"email\" ||\n        prop === \"claim_title\" ||\n        prop === \"claim_type\" ||\n        prop === \"claim_level\" ||\n        prop === \"education_category\" ||\n        prop === \"claim_session\" ||\n        prop === \"date\" ||\n        prop === \"decision\"\n      ) {\n        if (product[prop]) {\n          flag =\n            product[prop]!.toString()\n              .toLowerCase()\n              .indexOf(text.toLowerCase()) > -1;\n        }\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nconst defaultReportContent: claimReportContentInterface[] = [\n  {\n    key: claimReportContentKeyInterface.names,\n    title: \"Applicant Names\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  { key: claimReportContentKeyInterface.gender, title: \"Gender\", status: true },\n  { key: claimReportContentKeyInterface.phone, title: \"Phone\", status: true },\n  {\n    key: claimReportContentKeyInterface.claim_session,\n    title: \"Claim Session\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.education_category,\n    title: \"Education Institute\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.date,\n    title: \"Claim Date\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.decision,\n    title: \"Decision\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_title,\n    title: \"Claim Title\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_type,\n    title: \"Claim Type\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_level,\n    title: \"Claim Level\",\n    status: true,\n  },\n];\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  // systemPositions: PositionAPI[] | null;\n  // courses: course[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  // loadCourses: Function;\n  // getAllAnswers: Function;\n  setSelectedClaimType: Function;\n  // getPositions: Function;\n  getAllClaims: Function;\n  GetClaimingTypes: Function;\n  // getAllApplications: Function;\n  GetAllSessionPlans: Function;\n  // getDocumentCategory: Function;\n  // getDocumentSubCategory: Function;\n  // getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst _ClaimingReport: React.FC<AppProps> = (props) => {\n  const [thisPeriod, setThisPeriod] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [thisLevel, setThisLevel] = useState<number | \"all\">(\"all\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [periodChanged, setPeriodChanged] = useState<boolean>(false);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(true);\n  const [loadingInstitutes, setLoadingInstitutes] = useState<boolean>(true);\n  const [downloading, setDownloading] = useState<boolean>(false);\n  const [claimToPrint, setClaimToPrint] = useState<\n    ClaimToPrintInterface[] | null\n  >();\n\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [generateReportModal, setGenerateReportModal] = useState<{\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null>(null);\n  const [reportTitle, setReportTitle] = useState<string>(\"\");\n  const [reportContent, setReportContent] =\n    useState<claimReportContentInterface[]>(defaultReportContent);\n  const [selectAll, setSelectAll] = useState<boolean>(true);\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [selectPeriod, setSelectPeriod] = useState<boolean>(false);\n  const [thisEducation, setThisEducation] = useState<\n    education_category | \"all\"\n  >(\"all\");\n\n  useEffect(() => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      props.schoolLevels.education_categories === null ||\n      props.schoolLevels.education_categories.length === 0\n    ) {\n      props.loadEducationCategories(setLoadingInstitutes);\n    } else {\n      setLoadingInstitutes(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n    // LOADING CLAIM TYPES ========================================\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n    // END LOADING CLAIM TYPES ========================================\n    // LOADING APPLICATION SESSION ====================================\n    if (props.application_sessions === null) {\n      props.GetAllSessionPlans((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (\n      thisPeriod === null &&\n      !loadingSession &&\n      props.application_sessions &&\n      props.application_sessions.length > 0\n    ) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setThisPeriod(thisSession ? thisSession : props.application_sessions[0]);\n      // if (props.claiming.allAnswer === null) {\n      //   props.getAllAnswers(\n      //     thisSession\n      //       ? thisSession._id\n      //       : props.application_sessions[0]._id,\n      //     (status: boolean, msg: string) => {\n      //       setLoading(status);\n      //       if (!status && msg.length) {\n      //         props.PushPopupAlert({\n      //           title: msg,\n      //           theme: PopupAlertTheme.danger,\n      //         });\n      //       }\n      //     }\n      //   );\n      // }\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    // if (!props.documentReducer.documentCategory && loadingDocuments) {\n    //   props.getDocumentCategory();\n    //   setLoadingDocuments(false);\n    // } else if (loadingDocuments) {\n    //   setLoadingDocuments(false);\n    // }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    // if (!props.documentReducer.documentSubCategory && loadingClarifications) {\n    //   props.getDocumentSubCategory();\n    //   setLoadingClarifications(false);\n    // } else if (loadingClarifications) {\n    //   setLoadingClarifications(false);\n    // }\n    // LOADING DOCUMENT FIELDS ==========================\n    // if (!props.documentReducer.documentFields && loadingFields) {\n    //   props.getDocumentFields();\n    //   setLoadingFields(false);\n    // } else if (loadingFields) {\n    //   setLoadingFields(false);\n    // }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allClaims === null && thisPeriod !== null) {\n      props.getAllClaims(2, thisPeriod._id, (status: boolean, msg: string) => {\n        !status && setLoadingClaims(status);\n        if (status === false && msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (thisPeriod && loadingClaims) {\n      setLoadingClaims(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    // if (props.claiming.allApplications === null && thisPeriod !== null) {\n    //   props.getAllApplications(\n    //     thisPeriod._id,\n    //     (status: boolean, msg: string) => {\n    //       !status && setLoadingApplications(status);\n    //       if (status === false && msg.length) {\n    //         props.PushPopupAlert({\n    //           title: msg,\n    //           theme: PopupAlertTheme.danger,\n    //         });\n    //       }\n    //     }\n    //   );\n    // } else if (thisPeriod && loadingApplications) {\n    //   setLoadingApplications(false);\n    // }\n\n    // if (props.systemPositions === null) {\n    //   props.getPositions((status: boolean, msg: string) => {\n    //     setLoadingPosition(status);\n    //     console.log({ status: status, msg: msg });\n    //     if (msg.length) {\n    //       props.PushPopupAlert({\n    //         title: msg,\n    //         theme: PopupAlertTheme.danger,\n    //       });\n    //     }\n    //   });\n    // } else if (loadingPosition) {\n    //   setLoadingPosition(false);\n    // }\n\n    // LOADING COURSE ====================================\n    // if (\n    //   props.courses === null ||\n    //   (props.courses.length === 0 && loadingCourses)\n    // ) {\n    //   props.loadCourses(setLoadingCourses);\n    // } else if (loadingCourses) {\n    //   setLoadingCourses(false);\n    // }\n  }, [loadingClaims, loadingSession, props, thisPeriod]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  if (props.application_sessions && props.application_sessions.length === 0) {\n    return <NoSession />;\n  }\n\n  // const displayClaimTitle = (thisClaim: CandidateClaimInterface): string => {\n  //   let result: string = thisClaim.claiming_on_id;\n  //   if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n  //     result =\n  //       thisClaim.user.details.filter(\n  //         (item) => item.validation_status !== \"waiting\"\n  //       ).length > 0\n  //         ? adminDisplayClaimTitle(\n  //             props.documentReducer,\n  //             thisClaim.user.details.filter(\n  //               (item) => item.validation_status !== \"waiting\"\n  //             ),\n  //             thisClaim\n  //           )\n  //         : \"Document not found\";\n  //   }\n  //   if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n  //     if (props.claiming.allApplications) {\n  //       let thisApplication = props.claiming.allApplications.find(\n  //         (item) => item._id === thisClaim.claiming_on_id\n  //       );\n  //       if (\n  //         thisApplication &&\n  //         props.claiming.allApplications &&\n  //         props.systemPositions\n  //       ) {\n  //         let thisPosition = props.systemPositions.find(\n  //           (item) => item.position_id === thisApplication!.position\n  //         );\n  //         if (thisPosition) {\n  //           result = thisPosition.position_title;\n  //         } else {\n  //           result = \"Application not found\";\n  //         }\n  //       }\n  //     }\n  //   }\n\n  //   if (\n  //     thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n  //     props.courses &&\n  //     props.claiming.allAnswer\n  //   ) {\n  //     let thisAnswer = getCourseIdBySheetId(\n  //       props.claiming.allAnswer,\n  //       thisClaim.claiming_on_id\n  //     );\n  //     if (thisAnswer && getCourseById(props.courses, thisAnswer.course)) {\n  //       result =\n  //         \"Exam of \" +\n  //         getCourseById(props.courses, thisAnswer.course)!.course_name;\n  //     } else {\n  //       result = \"Unknown exam\";\n  //     }\n  //   }\n\n  //   return result;\n  // };\n\n  // const getClaimInstitute = (\n  //   thisClaim: CandidateClaimInterface\n  // ): string | null => {\n  //   if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n  //     return null;\n  //   }\n  //   // if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n  //   //   if (props.claiming.allApplications) {\n  //   //     let thisApplication = props.claiming.allApplications.find(\n  //   //       (item) => item._id === thisClaim.claiming_on_id\n  //   //     );\n  //   //     if (\n  //   //       thisApplication &&\n  //   //       props.claiming.allApplications &&\n  //   //       props.systemPositions\n  //   //     ) {\n  //   //       // return thisApplication.\n  //   //       let thisPosition = props.systemPositions.find(\n  //   //         (item) => item.position_id === thisApplication!.position\n  //   //       );\n  //   //       if (thisPosition) {\n  //   //         return thisPosition.education_institute_id.education_institute_id;\n  //   //       }\n  //   //     }\n  //   //   }\n  //   // }\n\n  //   return null;\n  // };\n\n  const onPeriodChange = (period_id: string) => {\n    setPeriodChanged(true);\n    props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && setPeriodChanged(false);\n      if (status === false && msg.length) {\n        props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  const isClaimTypeActive = (\n    selectedType: PlansTypeKeys | \"all\",\n    currentType: PlansTypeKeys | \"all\"\n  ): boolean => {\n    if (currentType === \"all\" && selectedType === \"all\") {\n      return true;\n    } else if (currentType !== \"all\" && selectedType !== \"all\") {\n      if (currentType === selectedType) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n    } else {\n      setSortOrder(\"ASC\");\n    }\n    setSortProperty(thisProperty);\n    setIsSorted(true);\n  };\n\n  const ClaimTypes = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    type: PlansTypeKeys | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: number;\n      type: PlansTypeKeys | \"all\";\n    }[] = [{ title: \"All types\", count: claims.length, type: \"all\" }];\n\n    Object.values(PlansTypeKeys).forEach((PlansKey) => {\n      if (PlansKey !== PlansTypeKeys.MARKS_PUBLICATION) {\n        output.push({\n          title: capitalizeFirstLetter(reportClaimType(PlansKey)),\n          count:\n            claims.length > 0\n              ? claims.filter(\n                  (itm) => itm.claim_type === reportClaimType(PlansKey)\n                ).length\n              : 0,\n          type: PlansKey,\n        });\n      }\n    });\n\n    return output;\n  };\n\n  const ClaimLevels = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    level: number | \"all\";\n  }[] => {\n    let output: {\n        title: string;\n        count: number;\n        level: number | \"all\";\n      }[] = [{ title: \"All levels\", count: claims.length, level: \"all\" }],\n      levels: number[] = [1, 2];\n    for (let i in levels) {\n      output.push({\n        title: \"Level \" + levels[i],\n        count: claims.filter((itm) => itm.claim_level === levels[i]).length,\n        level: levels[i],\n      });\n    }\n    return output;\n  };\n\n  const updateReportContent = (key: claimReportContentKeyInterface) => {\n    let index: number = reportContent.findIndex((item) => item.key === key);\n    let newArray: claimReportContentInterface[] = reportContent;\n    newArray[index].status = !newArray[index].status;\n    setReportContent(newArray);\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      setSelectAll(false);\n    } else {\n      setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    updateClaimToPrint();\n  };\n\n  const updateClaimToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (thisPeriod) {\n      let title = \"Claim Report \" + thisPeriod.session_plan_name;\n      // if (thisLevel!==\"all\") {\n      //   title = \"Claim Report - Level \"+thisLevel + thisPeriod.session_plan_name;\n      // }\n      setReportTitle(title);\n    }\n    // UPDATE CONTENT =============================\n    if (props.claiming.allClaims && props.claiming.claimTypes) {\n      let arrayNew: ClaimToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in props.claiming.allClaims) {\n        if (\n          Object.prototype.hasOwnProperty.call(props.claiming.allClaims, key)\n        ) {\n          for (const keyClaim in props.claiming.allClaims[key].claims) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                props.claiming.allClaims[key].claims,\n                keyClaim\n              )\n            ) {\n              const element = props.claiming.allClaims[key].claims[keyClaim];\n              const thisType = whichClaimType(props.claiming.allClaims[key]);\n              let dataArray: ClaimToPrintInterface = {\n                claim_id: n,\n                names:\n                  props.claiming.allClaims[key].user.user_info.fname +\n                  \" \" +\n                  props.claiming.allClaims[key].user.user_info.lname,\n                gender: props.claiming.allClaims[key].user.user_info.sex\n                  ? \"Male\"\n                  : \"Female\",\n                national_id: props.claiming.allClaims[key].user.n_id!,\n                phone: props.claiming.allClaims[key].user.phone_number,\n                email: props.claiming.allClaims[key].user.email,\n                claim_type: thisType ? thisType : \"\",\n                claim_level: element.level,\n                education_category: \"\",\n                claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n                date: DATE(element.createdAt),\n                decision: element.decision_taken_status\n                  ? element.decision_taken_status\n                  : \"PENDING\",\n                claim_title: props.claiming.allClaims[key].title,\n              };\n              for (const key in reportContent) {\n                if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n                  if (!reportContent[key].status) {\n                    delete dataArray[reportContent[key].key];\n                  }\n                }\n              }\n              arrayNew.push(dataArray);\n              n++;\n            }\n          }\n        }\n      }\n      setClaimToPrint(arrayNew);\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  const FC_ClaimData = (\n    allClaims: CandidateClaimInterface[] | null\n  ): ClaimToPrintInterface[] | null => {\n    if (allClaims === null) return null;\n    let arrayNew: ClaimToPrintInterface[] = [];\n    let n: number = 1;\n    // LOOP IN ALL CLAIM ONE BY ONE ###########################\n    for (const key in allClaims) {\n      if (Object.prototype.hasOwnProperty.call(allClaims, key)) {\n        // LOOP IN ALL CLAIM OF ONE FILE ONE BY ONE ===========================\n        for (const keyClaim in allClaims[key].claims) {\n          if (\n            Object.prototype.hasOwnProperty.call(\n              allClaims[key].claims,\n              keyClaim\n            )\n          ) {\n            const element = allClaims[key].claims[keyClaim];\n            const thisType = whichClaimType(allClaims[key]);\n            let dataArray: ClaimToPrintInterface = {\n              claim_id: n,\n              names:\n                allClaims[key].user.user_info.fname +\n                \" \" +\n                allClaims[key].user.user_info.lname,\n              gender: allClaims[key].user.user_info.sex ? \"Male\" : \"Female\",\n              national_id: allClaims[key].user.n_id!,\n              phone: allClaims[key].user.phone_number,\n              email: allClaims[key].user.email,\n              claim_type: thisType ? thisType : \"\",\n              claim_level: element.level,\n              education_category:\n                allClaims[key].institute_id &&\n                !isEmptyOrSpaces(allClaims[key].institute_id)\n                  ? allClaims[key].institute_id\n                  : null,\n              claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n              date: DATE(element.createdAt),\n              decision: element.decision_taken_status\n                ? element.decision_taken_status\n                : \"PENDING\",\n              claim_title: allClaims[key].title\n                ? allClaims[key].title\n                : \"Undefined\",\n            };\n            // for (const key in reportContent) {\n            //   if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n            //     if (!reportContent[key].status) {\n            //       delete dataArray[reportContent[key].key];\n            //     }\n            //   }\n            // }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n      }\n    }\n    return arrayNew;\n  };\n\n  const resetReportContent = (currentState: boolean) => {\n    let newArray: claimReportContentInterface[] = reportContent;\n    for (const key in newArray) {\n      if (isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    setReportContent(newArray);\n    setSelectAll(!currentState);\n    updateClaimToPrint();\n  };\n\n  const isChangeAllowed = (key: claimReportContentKeyInterface): boolean => {\n    if (\n      key === claimReportContentKeyInterface.names ||\n      key === claimReportContentKeyInterface.decision ||\n      key === claimReportContentKeyInterface.claim_session ||\n      key === claimReportContentKeyInterface.claim_type ||\n      key === claimReportContentKeyInterface.date\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  const FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return;\n    }\n\n    if (thisPeriod) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: props.auth.user.fname + \" \" + props.auth.user.lname,\n        title: \"Claim Report\",\n        subjectTitle: \"Claim type\",\n        subject:\n          props.claiming.selectedClaimType === \"all\"\n            ? \"All Types\"\n            : props.claiming.selectedClaimType,\n        period: thisPeriod.session_plan_name,\n        footer: \"Online Recruitment\",\n        institute:\n          thisEducation === \"all\"\n            ? \"All institute\"\n            : thisEducation.education_category_title,\n      };\n      table && generatePDF(reportSettings, table, setDownloading);\n    }\n  };\n\n  const FC_FilterClaims = (\n    allClaims: ClaimToPrintInterface[],\n    claimType: PlansTypeKeys | \"all\",\n    claimLevel: number | \"all\",\n    institute: education_category | \"all\"\n  ): ClaimToPrintInterface[] => {\n    let result: ClaimToPrintInterface[] = allClaims;\n    if (claimType !== \"all\") {\n      result = result.filter((item) => item.claim_type === claimType);\n    }\n    if (claimLevel !== \"all\") {\n      result = result.filter((item) => item.claim_level === claimLevel);\n    }\n\n    if (institute !== \"all\") {\n      result = result.filter(\n        (item) =>\n          item.education_category === null ||\n          item.education_category === institute.education_institute_id\n      );\n    }\n\n    return result;\n  };\n\n  return (\n    <Fragment>\n      <SideNavigation>\n        <div className=\"flex flex-col mb-4\">\n          <span className=\"text-sm text-gray-600 mb-2\">\n            Education categories:\n          </span>\n          {props.schoolLevels.education_categories === null ||\n          loadingInstitutes ? (\n            <Loading />\n          ) : props.schoolLevels.education_categories.length === 0 ? (\n            <span>No result found</span>\n          ) : (\n            <Fragment>\n              <div\n                onClick={() => setThisEducation(\"all\")}\n                className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                  thisEducation === \"all\"\n                    ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                } font-bold flex flex-row items-center gap-2`}\n              >\n                {thisEducation === \"all\" ? (\n                  <MdRadioButtonChecked />\n                ) : (\n                  <MdRadioButtonUnchecked />\n                )}\n                <span>All</span>\n              </div>\n              {props.schoolLevels.education_categories.map((item, i) => (\n                <div\n                  onClick={() => setThisEducation(item)}\n                  key={i + 1}\n                  className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                    thisEducation !== \"all\" &&\n                    thisEducation.education_institute_id ===\n                      item.education_institute_id\n                      ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                      : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                  } font-bold flex flex-row items-center gap-2`}\n                >\n                  {thisEducation !== \"all\" &&\n                  thisEducation.education_institute_id ===\n                    item.education_institute_id ? (\n                    <MdRadioButtonChecked />\n                  ) : (\n                    <MdRadioButtonUnchecked />\n                  )}\n                  <span>{item.education_category_title}</span>\n                </div>\n              ))}\n            </Fragment>\n          )}\n        </div>\n        <div className=\"\">\n          <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n          <div\n            onClick={() => setSelectPeriod(true)}\n            className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n          >\n            {thisPeriod !== null\n              ? `${capitalizeFirstWord(thisPeriod.session_plan_name)} - ${\n                  thisPeriod.period\n                }`\n              : \"Filter by period\"}\n            <FiEdit className=\"text-3xl text-blue-600\" />\n          </div>\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim types:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimTypes(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() =>\n                    props.setSelectedClaimType(reportClaimType(item.type))\n                  }\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={isClaimTypeActive(\n                      props.claiming.selectedClaimType,\n                      item.type\n                    )}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim level:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimLevels(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() => setThisLevel(item.level)}\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={item.level === thisLevel}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n      </SideNavigation>\n      <section>\n        {/* REPORT TITLE ============================================ */}\n        <div className=\"grid md:grid-cols-12\">\n          <div className=\"col-span-8\">\n            <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n              <span className=\"text-3xl font-bold text-gray-700\">\n                Claim report\n              </span>\n            </div>\n          </div>\n          <div className=\"col-span-4\">\n            <div className=\"float-right mt-2\">\n              {props.claiming.allClaims && props.claiming.allClaims.length > 0 && (\n                <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                  <BiExport className=\"text-2xl text-gray-500\" />\n                  <span className=\"text-gray-500\">Export as</span>\n                  <button\n                    className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                    disabled={loading}\n                    onClick={() => {\n                      updateClaimToPrint();\n                      setGenerateReportModal({\n                        reportType: \"EXCEL\",\n                        status: true,\n                      });\n                    }}\n                  >\n                    EXCEL\n                  </button>\n                  <button\n                    className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                      downloading && \"cursor-wait\"\n                    }`}\n                    onClick={() => FC_GeneratePDF()}\n                    disabled={loading || downloading}\n                  >\n                    PDF\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        {/* END REPORT TITLE ============================================ */}\n        <div className=\"bg-white my-4\">\n          <div className=\"w-full px-2 py-2\">\n            <input\n              onChange={(e) => setSearchInput(e.target.value)}\n              type=\"text\"\n              value={searchInput}\n              placeholder=\"Search...\"\n              className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n              disabled={\n                props.claiming.allClaims === null ||\n                props.claiming.claimTypes === null ||\n                FC_ClaimData(props.claiming.allClaims) === null ||\n                periodChanged\n              }\n            />\n          </div>\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"names\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Applicant names <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"gender\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Gender <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_title\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Title <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_type\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Type <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_level\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Level <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"decision\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Status <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"date\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Date <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.claiming.allClaims === null ||\n              props.claiming.claimTypes === null ||\n              periodChanged ? (\n                <TableLoading cols={10} />\n              ) : FC_ClaimData(props.claiming.allClaims) === null ? (\n                <TableLoading cols={10} />\n              ) : FC_FilterClaims(\n                  FC_ClaimData(props.claiming.allClaims)!,\n                  props.claiming.selectedClaimType,\n                  thisLevel,\n                  thisEducation\n                ).length === 0 ? (\n                <tr>\n                  <td colSpan={10} className=\"px-2 py-2\">\n                    <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                      <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                      <span className=\"text-sm font-bold\">\n                        No result found! Please try to search again\n                      </span>\n                      <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                        <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                          <li\n                            onClick={() => setSelectPeriod(true)}\n                            className=\"underline text-gray-500 cursor-pointer\"\n                          >\n                            Filter by period\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim type\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim Level\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              ) : (\n                sortThisArray(\n                  isSorted,\n                  searchData(\n                    FC_FilterClaims(\n                      FC_ClaimData(props.claiming.allClaims)!,\n                      props.claiming.selectedClaimType,\n                      thisLevel,\n                      thisEducation\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item: ClaimToPrintInterface, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                    } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">{item.names}</td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.gender}</td>\n                    <td className=\"px-2 py-2\">{item.phone}</td>\n                    <td className=\"px-2 py-2\">{item.claim_title}</td>\n                    <td className=\"px-2 py-2\">{item.claim_type}</td>\n                    <td className=\"px-2 py-2\">{\"Level \" + item.claim_level}</td>\n                    <td className=\"px-2 py-2\">\n                      {item.decision}\n                      {/* {capitalizeFirstLetter(item.decision)} */}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.date}</td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </section>\n      {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {generateReportModal !== null && generateReportModal.status === true && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-2xl text-gray-500\">\n                  Generating Report contents\n                </span>\n                <span className=\"text-sm text-blue-600 font-normal\">\n                  Generating {generateReportModal.reportType} Report\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => setGenerateReportModal(null)}\n          backDropClose={false}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-6\">\n            <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n              <div className=\"flex flex-col\">\n                <label>Title</label>\n                <input\n                  type=\"text\"\n                  className={`text-left input-white w-20 inline-block ${\n                    formError && formError.element === \"report_title\"\n                      ? \"border-red-500\"\n                      : \"border-gray-500\"\n                  } border-2`}\n                  placeholder=\"Sub Category Title\"\n                  value={reportTitle}\n                  onChange={(e) => {\n                    setFormError(null);\n                    setReportTitle(e.target.value);\n                  }}\n                  disabled={loading}\n                />\n                {formError && formError.element === \"report_title\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n              <div className=\"flex flex-col mt-2\">\n                <label>Report content</label>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                  {reportContent.map((item, index) => (\n                    <div\n                      key={index}\n                      className={`flex items-center gap-1 ${\n                        isChangeAllowed(item.key)\n                          ? \"cursor-pointer\"\n                          : \"cursor-not-allowed\"\n                      }`}\n                      onClick={() =>\n                        isChangeAllowed(item.key) &&\n                        updateReportContent(item.key)\n                      }\n                      title={\n                        !isChangeAllowed(item.key)\n                          ? \"Required for every report!\"\n                          : \"\"\n                      }\n                    >\n                      {item.status ? (\n                        <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                      ) : (\n                        <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                      )}\n                      <span>{item.title}</span>\n                    </div>\n                  ))}\n                </div>\n                {formError && formError.element === \"report_content\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n            </div>\n            <div className=\"flex justify-between mb-2 mt-4\">\n              <div\n                className={`flex items-center gap-1 cursor-pointer`}\n                onClick={() => resetReportContent(selectAll)}\n              >\n                {selectAll ? (\n                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                ) : (\n                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                )}\n                <span>Select all</span>\n              </div>\n\n              {claimToPrint && !loading && (\n                <ExportToExcel\n                  fileData={claimToPrint}\n                  fileName={reportTitle}\n                  btnName=\"Generate\"\n                />\n              )}\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {selectPeriod && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <MdHistory className=\"text-5xl text-blue-600\" />\n              <span className=\"flex flex-col\">Choose a period</span>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => thisPeriod !== null && setSelectPeriod(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <ChooseSession\n            allSession={props.application_sessions}\n            setSelectSession={(value: SessionPlanInterface | \"all\") => {\n              value !== \"all\" && setThisPeriod(value);\n              value !== \"all\" && onPeriodChange(value._id);\n              value !== \"all\" && setSelectPeriod(false);\n            }}\n            chooseAll={false}\n            currentSelected={thisPeriod ? thisPeriod : \"all\"}\n          />\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    claiming,\n    documentReducer: document,\n    schoolLevels,\n  };\n};\n\nexport const ClaimingReport = connect(mapStateToProps, {\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  setSelectedClaimType,\n  PushPopupAlert,\n})(_ClaimingReport);\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  course,\n} from \"../../../interfaces\";\nimport { ExamAnswerSheetDone } from \"../../../interfaces/exam\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { claimShowAnswer } from \"../Candidate/ExaminationFormView\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport { claimResponseBody } from \"./AdminClaimDocView\";\n\nenum viewTabs {\n  profile = \"Applicant Profile\",\n  exam = \"Exam Details\",\n}\n\ntype AdminClaimExamViewProps = {\n  thisExamSheet: ClaimExamResultsDetails;\n  thisExam: course;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n  evaluateClaim: Function;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimExamView: React.FC<AdminClaimExamViewProps> = (props) => {\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loading, setLoading] = useState(true);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [marks, setMarks] = useState<number>(0);\n  const [selectedTab, setSelectedTab] = useState<viewTabs>(viewTabs.profile);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading || props.questionTypes.questionTypes === null) {\n    return <Loading />;\n  }\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (\n      actionTaken === ClaimDecisionStatus.ACCEPTED &&\n      (marks <= 0 || marks > 100)\n    ) {\n      setFormError({\n        element: \"marks\",\n        msg: \"Invalid marks, marks must be between 1 and 10\",\n      });\n\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim._id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await handleMarksAddition();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const handleMarksAddition = async () => {\n    try {\n      await axios.put(`${API.DO_EXAM}/answersheet/user/marks/update`, {\n        answer_sheet_id: props.thisClaim.claiming_on_id,\n        marks: marks,\n      });\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  // const getAnswersByQuestion = (question_id: string): ClaimGetUserAnswers[] => {\n  //   return props.thisExamSheet.user_answers.filter(\n  //     (item) => item.question === question_id\n  //   );\n  // };\n\n  const claimCandidateAnswers = (): ExamAnswerSheetDone[] => {\n    let result: ExamAnswerSheetDone[] = [\n      {\n        exam_location: props.thisExamSheet.exam_location,\n        questions: props.thisExamSheet.questions,\n        user_answers: props.thisExamSheet.user_answers,\n        user: props.thisExamSheet.user,\n        period: props.thisExamSheet.period,\n        course: props.thisExamSheet.course,\n        exam_paper: props.thisExamSheet.exam_paper,\n        user_status: props.thisExamSheet.user_status,\n        used_duration: props.thisExamSheet.used_duration,\n        total_marks: props.thisExamSheet.total_marks,\n        number_of_question_answered:\n          props.thisExamSheet.number_of_question_answered,\n        // start_time: string,\n        // end_time: string,\n        exam_total_marks: props.thisExamSheet.exam_total_marks,\n        exam_start_time: props.thisExamSheet.exam_start_time,\n        exam_end_time: props.thisExamSheet.exam_end_time,\n        exam_date: props.thisExamSheet.exam_date,\n        status: props.thisExamSheet.status,\n        createdAt: props.thisExamSheet.createdAt,\n        updatedAt: props.thisExamSheet.updatedAt,\n        disability: false,\n        gender: \"\",\n        in_education: false,\n        position: \"\",\n        answer_sheet_id: props.thisExamSheet.answer_sheet_id,\n      },\n    ];\n    // props.thisExamSheet\n\n    return result;\n  };\n\n  return (\n    <section className=\"\">\n      {/* #################### VIEW TABS ################################## */}\n      <div className=\"flex flex-row items-center mx-4\">\n        {Object.values(viewTabs).map((item, i) => (\n          <div\n            key={i}\n            onClick={() => setSelectedTab(item)}\n            className={`animate__animated ${\n              selectedTab === item\n                ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                : \"bg-white border-white text-gray-600\"\n            } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mr-1`}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n      {/* #################### END VIEW TABS ################################## */}\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY POSITION ==================================================== */}\n          {selectedTab === viewTabs.exam && (\n            <section className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full rounded p-2 mb-2\">\n                <AnswersDetails\n                  showAnswers={true}\n                  exam_id={claimShowAnswer(\n                    props.thisExamSheet,\n                    props.thisExam.course_name\n                  )}\n                  allAnswers={claimCandidateAnswers()}\n                  user_id={props.thisExamSheet.user}\n                />\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <section className=\"w-full my-2 animate__animated animate__fadeIn rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Names:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.user.user_info.fname +\n                      \" \" +\n                      props.thisClaim.user.user_info.lname}\n                  </span>\n                </div>\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <div className=\"\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Email:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.user.email}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Phone:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.user.phone_number}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Gender:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.user.user_info.sex === \"M\"\n                    ? \"Male\"\n                    : \"Female\"}\n                </span>\n              </div>\n            </div>\n          )}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-2 pt-3\"\n              key={index + claim._id}\n            >\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-2 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full space-y-1\">\n              {actionTaken === ClaimDecisionStatus.ACCEPTED && (\n                <div className=\"flex items-center justify-end w-full gap-2\">\n                  <span className=\"font-semibold\">Addition marks</span>\n                  <div className=\"px-2\">\n                    <input\n                      placeholder={`Addition marks`}\n                      className={`border border-${\n                        formError && formError.element === \"marks\"\n                          ? \"red\"\n                          : \"gray\"\n                      }-400 rounded px-3 py-1 w-auto focus:outline-none`}\n                      value={marks}\n                      onChange={(e) => {\n                        setMarks(Number(e.target.value));\n                        setFormError(null);\n                      }}\n                      disabled={loadingRequest}\n                    />\n                    {formError && formError.element === \"marks\" && (\n                      <p className=\"text-red-800\">{formError.msg}</p>\n                    )}\n                  </div>\n                </div>\n              )}\n              <div className=\"w-full px-2\">\n                <textarea\n                  placeholder={`Reason of your decision...`}\n                  cols={50}\n                  rows={actionTaken === ClaimDecisionStatus.ACCEPTED ? 2 : 3}\n                  className={`border border-${\n                    formError && formError.element === \"comment\"\n                      ? \"red\"\n                      : \"gray\"\n                  }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                  style={{ resize: \"none\" }}\n                  value={responseMsg}\n                  onChange={(e) => {\n                    setResponseMsg(e.target.value);\n                    setFormError(null);\n                  }}\n                  disabled={loadingRequest}\n                ></textarea>\n                {formError && formError.element === \"comment\" && (\n                  <p className=\"text-red-800\">{formError.msg}</p>\n                )}\n              </div>\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  questionTypes,\n}: StoreState): {\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return {\n    auth,\n    questionTypes,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    loadQuestionTypes,\n    evaluateClaim,\n    PushPopupAlert,\n  })(AdminClaimExamView)\n);\n","import React, { useState } from \"react\";\nimport { CgImage } from \"react-icons/cg\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport Table from \"../../components/Table/Table\";\nimport ViewPDF from \"../../components/ViewPDF/ViewPDF\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { fullScreen, getFileType, isFileImage } from \"../../utils/functions\";\nimport NoSession from \"../SessionSettings/NoSession\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n  userDocs: UserDocumentsInterface[];\n}\n\nconst ViewDocRequirements: React.FC<RequirementProps> = (props) => {\n  const [viewDoc, setViewDoc] = useState<UserDocumentsInterface | null>(null);\n  const [loadingImage, setLoadingImage] = useState<boolean>(false);\n  const [isFullscreen, setSetFullscreen] = useState<boolean>(false);\n  const [failedToLoadFile, setFailedToLoadFile] = useState<boolean>(false);\n\n  const isDocumentExist = (\n    category_id: string,\n    sub_category_id: string,\n    field_id: string\n  ): UserDocumentsInterface | undefined => {\n    if (!isEmptyOrSpaces(category_id)) {\n      let userDocs: UserDocumentsInterface[] = props.userDocs.filter(\n        (item) => item.category_id === category_id\n      );\n\n      if (!isEmptyOrSpaces(sub_category_id)) {\n        userDocs = userDocs.filter(\n          (item) =>\n            item.validation_status === \"approved\" &&\n            item.category_id === category_id &&\n            item.sub_category_id === sub_category_id\n        );\n      }\n\n      if (!isEmptyOrSpaces(field_id)) {\n        return userDocs.find(\n          (item) =>\n            item.validation_status === \"approved\" &&\n            item.category_id === category_id &&\n            item.category_subcategory_data === field_id\n        );\n      }\n    }\n    return undefined;\n  };\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className={`border-b border-gray-200 hover:bg-gray-100 ${\n          !isDocumentExist(\n            item.category_id,\n            item.subcategory_id,\n            item.field_id\n          ) && \"text-yellow-800\"\n        }`}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1})</td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id)\n              ? \"Any \" + item.subcategory_title\n              : item.subcategory_title + \" in \" + item.field_title}\n          </span>\n        </td>\n        <td className={`p-3 text-left text-lg italic`}>\n          {isDocumentExist(item.category_id, item.subcategory_id, item.field_id)\n            ? \"Found\"\n            : \"Not found\"}\n        </td>\n        <td className={`p-3 text-right text-lg italic`}>\n          {isDocumentExist(\n            item.category_id,\n            item.subcategory_id,\n            item.field_id\n          ) && (\n            <button\n              className=\"bg-gray-200 hover:bg-gray-300 rounded font-medium px-2 py-1 focus:outline-none\"\n              onClick={() => {\n                setViewDoc(\n                  isDocumentExist(\n                    item.category_id,\n                    item.subcategory_id,\n                    item.field_id\n                  )!\n                );\n                setLoadingImage(true);\n              }}\n            >\n              View Doc\n            </button>\n          )}\n        </td>\n      </tr>\n    ));\n  };\n  const handleFullScreen = () => {\n    if (isFullscreen) {\n      fullScreen(\"doc-img\", \"CLOSE\");\n      setSetFullscreen(false);\n    } else {\n      setSetFullscreen(true);\n      fullScreen(\"doc-img\", \"OPEN\");\n    }\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n\n      {viewDoc && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={() => {\n            setViewDoc(null);\n            setLoadingImage(false);\n          }}\n          backDropClose={false}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{\n            title: true,\n            body: false,\n            footer: false,\n          }}\n          title=\"Doc view\"\n        >\n          {failedToLoadFile && (\n            <NoSession\n              title=\"Error\"\n              description={\n                isFileImage(getFileType(viewDoc.files))\n                  ? \"Failed to load image\"\n                  : \"Failed to load pdf\"\n              }\n            />\n          )}\n          {loadingImage && !failedToLoadFile && <Loading />}\n          {viewDoc.files && viewDoc.files.length > 0 ? (\n            isFileImage(getFileType(viewDoc.files)) ? (\n              <div className=\"relative\">\n                <img\n                  src={API.AUTH_FILES + viewDoc.files}\n                  alt=\"\"\n                  className={`w-full md:w-auto h-auto md:max-h-screen mx-auto ${\n                    loadingImage && \"hidden\"\n                  }`}\n                  id=\"doc-img\"\n                  onLoad={() => setLoadingImage(false)}\n                  onDoubleClick={() => handleFullScreen()}\n                />\n              </div>\n            ) : (\n              <ViewPDF\n                file_url={API.AUTH_FILES + viewDoc.files}\n                class_name={`w-full h-screen md:max-h-screen mx-auto ${\n                  loadingImage && \"hidden\"\n                }`}\n                frame_title={\"application PDF file view\"}\n                setLoadingFile={setLoadingImage}\n                setLoadingError={setFailedToLoadFile}\n              />\n            )\n          ) : (\n            <div className=\"text-center text-red-400 py-8 animate__animated animate__fadeIn\">\n              <CgImage className=\"mx-auto w-40 h-40\" />\n              <span className=\"font-semibold text-4xl\">No Files Provided</span>\n            </div>\n          )}\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(ViewDocRequirements);\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert, reAssessApplication } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  PositionAPI,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { DATE, FC_GetBase64Img, showDate } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewDocRequirements from \"../../Positions/ViewDocRequirements\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport { claimResponseBody } from \"./AdminClaimDocView\";\nimport DisplayCompetence from \"../../Positions/DisplayCompetence\";\n\nexport const FC_AdminApplicationPositionDistinctCategory = (\n  thisPosition: PositionAPI,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.position_requirement[field]._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.position_requirement[field]._id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\ntype AdminClaimAppViewProps = {\n  thisApplication: allClaimApplicationInterface;\n  thisPosition: PositionAPI;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  systemPositions: PositionAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  reAssessApplication: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimAppView: React.FC<AdminClaimAppViewProps> = (props) => {\n  const [viewPosition, setViewPosition] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim._id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      console.log(\"=================claimResponseBody===================\");\n      console.log({ subClaim, api_body });\n      console.log(\"=================claimResponseBody===================\");\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log(\"====================================\");\n          console.log({ evaluate_claim_res: res });\n          console.log(\"====================================\");\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await overrideDecision();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  const overrideDecision = async () => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/apply/tolerateappl/${props.thisClaim.claiming_on_id}`,\n        {\n          user_id: props.auth.user.user_id,\n          email: props.thisClaim.user.email,\n          phone_number: props.thisClaim.user.phone_number,\n          comment: responseMsg,\n          application_status: ApplicationStates.Shortlisted,\n        }\n      );\n\n      res.data &&\n        props.reAssessApplication({\n          application_id: props.thisClaim.claiming_on_id,\n          application_status: ApplicationStates.Shortlisted,\n        });\n    } catch (error) {\n      console.error({ code_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      // errorToText(error);\n    }\n    setLoadingRequest(false);\n  };\n\n  const getPositionById = (position_id: string): PositionAPI | undefined => {\n    let result = props.systemPositions.find(\n      (item) => item.position_id === position_id\n    );\n\n    return result;\n  };\n\n  return (\n    <section>\n      <div className=\"w-full py-1 divide-y-2 space-y-4\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY PROFILE ==================================================== */}\n          <div className=\"flex items-start mb-4 -mt-2 pb-3 px-4 bg-white\">\n            <div className=\"w-auto\">\n              <img\n                src={FC_GetBase64Img(props.thisClaim.user.user_info.photo)}\n                className=\"w-auto object-center object-cover h-32 rounded-lg\"\n                alt=\"\"\n              />\n            </div>\n            <section className=\"w-full\">\n              <div className=\"flex items-center\">\n                <div className=\"flex items-center gap-2 px-3\">\n                  <span className={`italic text-gray-600`}>Applicant:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.user.user_info.fname +\n                      \" \" +\n                      props.thisClaim.user.user_info.lname}\n                  </span>\n                </div>\n                {false && (\n                  <button\n                    type=\"button\"\n                    className=\"bg-gray-200 hover:bg-gray-300 text-gray-700 group-hover:text-gray-800 py-1 px-2 mr-1 rounded text-sm\"\n                    onClick={() => setViewPosition(!viewPosition)}\n                  >\n                    {viewPosition ? \"Hide\" : \"More\"}\n                  </button>\n                )}\n              </div>\n              <div className=\"flex items-center gap-2 px-3\">\n                <span className={`italic text-gray-600`}>NID:</span>\n                <span className=\"text-gray-800 font-bold text-xl\">\n                  {props.thisClaim.user.n_id}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 px-3\">\n                <span className={`italic text-gray-600`}>Sex:</span>\n                <span className=\"text-gray-800 font-bold text-xl\">\n                  {props.thisClaim.user.user_info.sex}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 px-3\">\n                <span className={`italic text-gray-600`}>Phone:</span>\n                <span className=\"text-gray-800 font-bold text-xl\">\n                  {props.thisClaim.user.phone_number}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 px-3\">\n                <span className={`italic text-gray-600`}>Email:</span>\n                <span className=\"text-gray-800 font-bold text-xl\">\n                  {props.thisClaim.user.email}\n                </span>\n              </div>\n            </section>\n          </div>\n          {/* DISPLAY POSITION ==================================================== */}\n          <section className=\"w-full mb-4 bg-white px-4 py-2 rounded\">\n            <div className=\"bg-white w-full\">\n              <div className=\"text-gray-800 text-2xl font-bold\">\n                Position Details\n              </div>\n              <div className=\"flex items-center\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Name:</span>\n                  <span className=\"text-gray-800 font-bold text-2xl\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .position_title\n                      : \"Position not found\"}\n                  </span>\n                </div>\n              </div>\n              {/* <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Desc:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .description\n                    : \"\"}\n                </span>\n              </div> */}\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>School level:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .school_level_id.school_level_name\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Institute:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .education_institute_id.education_category_title\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Exams:</span>\n                <span className=\"flex items-center gap-2\">\n                  {getPositionById(props.thisApplication.position) ? (\n                    getPositionById(\n                      props.thisApplication.position\n                    )!.courses.map((item, index) => (\n                      <div\n                        key={index + item.course_id}\n                        className=\"flex items-center gap-1\"\n                      >\n                        <span className=\"font-semibold\">\n                          {item.course_name}\n                        </span>\n                        <span className=\"text-gray-600\">\n                          ({item.course_code})\n                        </span>\n                        {index !==\n                          getPositionById(props.thisApplication.position)!\n                            .courses.length -\n                            1 && \",\"}\n                      </div>\n                    ))\n                  ) : (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"No courses found\"}\n                    />\n                  )}\n                </span>\n              </div>\n\n              <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                Position competences\n              </div>\n\n              <div className=\"my-3\">\n                <DisplayCompetence\n                  competence={\n                    getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .description\n                      : \"\"\n                  }\n                  // displayType=\"text-one\"\n                />\n              </div>\n\n              <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                Position Requirements\n              </div>\n              {getPositionById(props.thisApplication.position) ? (\n                getPositionById(props.thisApplication.position)!.requirements\n                  .length > 0 ? (\n                  FC_AdminApplicationPositionDistinctCategory(\n                    getPositionById(props.thisApplication.position)!,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewDocRequirements\n                          requirements={FC_AdminApplicationPositionDistinctCategory(\n                            getPositionById(props.thisApplication.position)!,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                          userDocs={props.thisClaim.user.details}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )\n              ) : (\n                <NoResult\n                  theme={NoResultThemes.Dark}\n                  value={\"No requirements\"}\n                ></NoResult>\n              )}\n            </div>\n          </section>\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {/* {selectedTab === viewTabs.profile && (\n            <div className=\"flex items-center\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Position name:</span>\n                <span className=\"text-gray-800 font-bold text-2xl\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .position_title\n                    : \"Position not found\"}\n                </span>\n              </div>\n            </div>\n          )} */}\n          <section className=\"px-4 py-2 bg-white rounded\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Status:</span>\n              <span\n                className={`font-bold ${\n                  props.thisClaim.previous\n                    ? props.thisClaim.previous.status ===\n                      ApplicationStates.Rejected\n                    : props.thisApplication.application_status ===\n                      ApplicationStates.Rejected\n                    ? \"text-yellow-900\"\n                    : \"text-blue-600\"\n                } rounded px-3 py-1`}\n              >\n                {props.thisClaim.previous\n                  ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                  : capitalizeFirstLetter(\n                      props.thisApplication.application_status\n                    )}\n              </span>\n            </div>\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Evaluated by:</span>\n              <span className=\"font-semibold\">\n                {props.thisClaim.previous.evaluater.name}\n              </span>\n            </div>\n            {false && (\n              <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                <span className={`italic`}>Session:</span>\n                <span className=\"font-bold text-gray-900 py-1\">\n                  {props.thisApplication.application_session}\n                </span>\n              </div>\n            )}\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Date:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {DATE(props.thisApplication.createdAt)}\n              </span>\n            </div>\n            <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Reason:</span>\n              <span\n                className=\"font-normal\"\n                dangerouslySetInnerHTML={{\n                  __html: props.thisClaim.previous\n                    ? props.thisClaim.previous.reason\n                    : props.thisApplication.override_by.comment,\n                }}\n              ></span>\n            </div>\n          </section>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-4 pt-2 pb-3 rounded bg-white\"\n              key={index + claim._id}\n            >\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span\n                        className=\"font-normal\"\n                        dangerouslySetInnerHTML={{\n                          __html: claim.evaluation_comment,\n                        }}\n                      ></span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  formError && formError.element === \"comment\" ? \"red\" : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={responseMsg}\n                onChange={(e) => {\n                  setResponseMsg(e.target.value);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              ></textarea>\n              {formError && formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    evaluateClaim,\n    reAssessApplication,\n    PushPopupAlert,\n  })(AdminClaimAppView)\n);\n","import React from \"react\";\nimport axios from \"axios\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { adminDisplayClaimTitle } from \".\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { verifyDocument } from \"../../../actions/document\";\nimport { VerifyDocumentInterface } from \"../../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DocValidationStatusInterface,\n  UserDocumentsInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\nexport type claimResponseBody = {\n  sub_claim_id: string;\n  evaluation_comment: string;\n  evaluated_by: string;\n  evaluator_name: string;\n  evaluator_email: string;\n  decision_taken_status: ClaimDecisionStatus;\n};\n\ntype AdminClaimDocViewProps = {\n  thisDoc: UserDocumentsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimReasons: claimReasonInterface[] | null;\n  candidateId: string;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  actionTaken: ClaimDecisionStatus | null;\n  setActionTaken: (value: ClaimDecisionStatus | null) => void;\n  responseMsg: string;\n  setResponseMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX ==================\n  auth: Auth;\n  verifyDocument: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimDocView: React.FC<AdminClaimDocViewProps> = (props) => {\n  const handleVerify = async () => {\n    if (!props.actionTaken) {\n      props.setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(props.responseMsg)) {\n      props.setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      props.setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim._id,\n        evaluation_comment: props.responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: props.actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (props.actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await FC_DocValidation();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          props.setResponseMsg(\"\");\n          props.setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const FC_DocValidation = async () => {\n    const api_body: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user.user_id,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n      },\n      in_education: false,\n      disability: false,\n      expiration_date: \"this.state.expiration_date\",\n    };\n    const api_redux: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user.user_id,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n        date: \"\",\n      },\n      in_education: false,\n      disability: false,\n      expiration_date: \"this.state.expiration_date\",\n    };\n\n    try {\n      const res = await axios.post<VerifyDocumentInterface>(\n        `${API.USER}/docs/validateuserdoc`,\n        api_body\n      );\n      if (res) {\n        props.verifyDocument(api_redux);\n        await FC_shortListing(props.thisClaim.user.user_id);\n        // setDocumentId(\"null\");\n      }\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const FC_shortListing = async (candidate_id: string) => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/apply/doccheckshortlist/${candidate_id}`\n      );\n      console.log({ res });\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Names:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.thisClaim.user.user_info.fname +\n                  \" \" +\n                  props.thisClaim.user.user_info.lname}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className={`italic text-gray-600`}>Title:</span>\n            <span className=\"text-gray-800 font-bold text-2xl\">\n              {/* {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main} */}\n              {props.thisClaim.user.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ).length > 0\n                ? adminDisplayClaimTitle(\n                    props.documentCategories,\n                    props.thisClaim.user.details.filter(\n                      (item) => item.validation_status !== \"waiting\"\n                    ),\n                    props.thisClaim\n                  )\n                : \"-\"}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.commet}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-2 pt-3\"\n              key={index + claim._id}\n            >\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!props.actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {props.actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.responseMsg}\n                onChange={(e) => {\n                  props.setResponseMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setResponseMsg(\"\");\n                  props.setActionTaken(null);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    evaluateClaim,\n    verifyDocument,\n    PushPopupAlert,\n  })(AdminClaimDocView)\n);\n","import React, { Component } from \"react\";\nimport { MdArrowBack, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  getClaimReasons,\n  getAllAnswers,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  PlansTypeKeys,\n  ClaimDecisionStatus,\n  ClaimTypesInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport search from \"../../../utils/search\";\nimport { getClaimById, whichClaimStatus, whichClaimType } from \"../Candidate\";\nimport { getCourseById, getCourseIdBySheetId } from \"../Candidate/FormExamList\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport AdminClaimAppView from \"./AdminClaimAppView\";\nimport AdminClaimDocView from \"./AdminClaimDocView\";\nimport AdminClaimExamView from \"./AdminClaimExamView\";\nimport AdminFilterByType, {\n  filterClaimsByClaimType,\n} from \"./AdminFilterByType\";\n\n// export const getUserDocuments = (\n//   userList: UserInterface[],\n//   user_id: String\n// ): { user: UserInterface; document: UserDocumentsInterface[] } | null => {\n//   const thisUser = userList.find((item) => item.user_id === user_id);\n//   if (thisUser) {\n//     const thisDoc = thisUser.details.filter(\n//       (item) => item.validation_status !== \"waiting\"\n//     );\n//     return { user: thisUser, document: thisDoc };\n//   }\n//   return null;\n// };\n\nexport const adminDisplayClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: UserDocumentsInterface[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = candidateDocuments.find(\n      (item) => item.doc_id === thisClaim.claiming_on_id\n    );\n    result = thisDoc\n      ? AdminClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n\n  return result;\n};\n\nexport const AdminClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: UserDocumentsInterface\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id &&\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    DocField = documentCategories.documentFields.filter(\n      (c) => c._id === doc.category_subcategory_data\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const getApplicationById = (\n  allApplications: allClaimApplicationInterface[] | null,\n  systemPositions: PositionAPI[] | null,\n  application_id: String\n): {\n  application: allClaimApplicationInterface;\n  position: PositionAPI;\n} | null => {\n  if (allApplications) {\n    let thisApplication = allApplications.find(\n      (item) => item._id === application_id\n    );\n    if (thisApplication && systemPositions) {\n      let thisPosition = systemPositions.find(\n        (item) => item.position_id === thisApplication!.position\n      );\n      if (thisPosition) {\n        return { application: thisApplication, position: thisPosition };\n      }\n    }\n  }\n  return null;\n};\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  courses: course[] | null;\n  loadCourses: Function;\n  getPositions: Function;\n  getClaimReasons: Function;\n  getAllApplications: Function;\n  getAllClaims: Function;\n  getAllAnswers: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  verifyAllDocument: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingData: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  viewClaim: boolean;\n  periodChanged: boolean;\n  claimId: string | null;\n  claimType: string | null;\n  candidateId: string | null;\n  searchClaim: string;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  actionTaken: ClaimDecisionStatus | null;\n  responseMsg: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingData: false,\n      thisPeriod: null,\n      viewClaim: false,\n      periodChanged: false,\n      claimId: null,\n      claimType: null,\n      candidateId: null,\n      searchClaim: \"\",\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      actionTaken: null,\n      responseMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingData = (value: boolean) => {\n    this.setState({ loadingData: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  // ------------------------------\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n  setClaimType = (value: string | null) => {\n    this.setState({ claimType: value });\n  };\n  setCandidateId = (value: string | null) => {\n    this.setState({ candidateId: value });\n  };\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setActionTaken = (value: ClaimDecisionStatus | null) => {\n    this.setState({ actionTaken: value });\n  };\n\n  setResponseMsg = (value: string) => {\n    this.setState({ responseMsg: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setDefaultSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadsAllClaims(thisSession ? thisSession : sessions[0]);\n    }\n  };\n\n  setSearchClaim = (value: string) => {\n    this.setState({ searchClaim: value });\n  };\n\n  loadsAllClaims = (thisSession: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.allClaims === null) {\n      this.props.getAllClaims(\n        2,\n        thisSession._id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsApplications = (application_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allApplications.find(\n        (item) => item._id === application_id\n      )\n    ) {\n      this.props.getAllApplications(\n        application_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsController = (file_id: string, claimType: PlansTypeKeys) => {\n    if (claimType === PlansTypeKeys.APPLICATION)\n      this.loadsApplications(file_id);\n    if (claimType === PlansTypeKeys.EXAMINATION) this.loadsAlAnswers(file_id);\n  };\n\n  loadsAlAnswers = (answersheet_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allAnswer.find(\n        (item) => item.answer_sheet_id === answersheet_id\n      )\n    ) {\n      this.props.getAllAnswers(\n        answersheet_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  componentDidMount = () => {\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              this.setDefaultSession(data);\n            }\n          }\n        }\n      );\n    } else if (this.props.application_sessions.length > 0) {\n      this.setDefaultSession(this.props.application_sessions);\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!this.props.documentReducer.documentSubCategory) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!this.props.documentReducer.documentFields) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    }\n\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n  };\n\n  displayClaimTitle = (\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      let thisDocs = thisClaim.user.details.filter(\n        (item) => item.validation_status !== \"waiting\"\n      );\n      result =\n        thisDocs.length > 0\n          ? adminDisplayClaimTitle(\n              this.props.documentReducer,\n              thisDocs,\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    if (\n      thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.allAnswer\n    ) {\n      let thisAnswer = getCourseIdBySheetId(\n        this.props.claiming.allAnswer,\n        thisClaim.claiming_on_id\n      );\n      if (thisAnswer && getCourseById(this.props.courses, thisAnswer.course)) {\n        result =\n          \"Exam of \" +\n          getCourseById(this.props.courses, thisAnswer.course)!.course_name;\n      } else {\n        result = \"Unknown exam\";\n      }\n    }\n\n    return result;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && this.setPeriodChanged(false);\n      this.setLoadingData(status);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  getLastClaimDate = (claim: CandidateClaimInterface): string => {\n    let result: string = DATE(claim.createdAt);\n    const claimsLength: number = claim.claims.length;\n    result = DATE(claim.claims[claimsLength - 1].createdAt);\n    return result;\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.allClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    console.log(\"=================viewClaim===================\");\n    console.log({\n      allClaims: this.props.claiming.allClaims,\n      viewClaim: this.state.viewClaim,\n      candidateId: this.state.candidateId,\n      claimId: this.state.claimId,\n      // getClaimById: getClaimById(\n      //   this.props.claiming.allClaims,\n      //   this.state.claimId\n      // ),\n      claimTypes: this.props.claiming.claimTypes,\n    });\n    console.log(\"==================viewClaim==================\");\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            {/* FILTER SECTION */}\n            <AdminFilterByType loadingClaims={this.state.loadingData} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loadingData}\n            loadingSession={this.state.loading}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingData}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM CONTENT LIST ===================================== */}\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            {/* FILTER FORM =================================== */}\n            <section className=\"flex flex-col-reverse sm:flex-row items-center gap-2 w-full my-2\">\n              <div className=\"w-full\">\n                <input\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    this.setSearchClaim(e.target.value)\n                  }\n                  type=\"text\"\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Search claim by title or type`}\n                  value={this.state.searchClaim}\n                  disabled={\n                    filterClaimsByClaimType(\n                      this.props.claiming.allClaims,\n                      this.props.claiming.selectedClaimType\n                    ).length > 0\n                      ? false\n                      : true\n                  }\n                />\n              </div>\n            </section>\n            {/* END FILTER FORM =================================== */}\n            <div className=\"w-full overflow-x-auto\">\n              <table className=\"w-full shadow\" id=\"report_content\">\n                <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">#</td>\n                    <td className=\"px-2 py-2\">Applicant names</td>\n                    <td className=\"px-2 py-2\">Claim title</td>\n                    <td className=\"px-2 py-2\">Claim date</td>\n                    {this.props.claiming.selectedClaimType === \"all\" && (\n                      <td className=\"px-2 py-2\">Claim type</td>\n                    )}\n                    <td className=\"px-2 py-2\">Claim level</td>\n                    <td className=\"px-2 py-2\">Claim status</td>\n                    <td className=\"px-2 py-2\"></td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {!this.props.claiming.allClaims ||\n                  !this.props.claiming.claimTypes ||\n                  !this.props.systemPositions ||\n                  this.state.loadingData ? (\n                    <TableLoading\n                      cols={\n                        this.props.claiming.selectedClaimType === \"all\" ? 8 : 7\n                      }\n                    />\n                  ) : search(\n                      filterClaimsByClaimType(\n                        this.props.claiming.allClaims,\n                        this.props.claiming.selectedClaimType\n                      ),\n                      this.state.searchClaim\n                    ).length <= 0 ? (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={Math.random()}\n                    >\n                      <td className=\"px-3 py-1\" colSpan={8}>\n                        <NoResult\n                          theme={NoResultThemes.Light}\n                          value={\"No claim found!\"}\n                        />\n                      </td>\n                    </tr>\n                  ) : (\n                    search(\n                      filterClaimsByClaimType(\n                        this.props.claiming.allClaims,\n                        this.props.claiming.selectedClaimType\n                      ),\n                      this.state.searchClaim\n                    ).map((claim: CandidateClaimInterface, index) => (\n                      <tr\n                        className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                        key={index + claim._id}\n                        onClick={() => {\n                          this.setViewClaim(true);\n                          this.setClaimId(claim._id);\n                          this.setCandidateId(claim.user.user_id);\n                          this.setClaimType(\n                            whichClaimType(claim)\n                              ? whichClaimType(claim)!\n                              : null\n                          );\n                          this.loadsController(\n                            claim.claiming_on_id,\n                            claim.type_key\n                          );\n                        }}\n                      >\n                        <td className=\"px-3 py-1\">{index + 1}</td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {claim.user.user_info.fname +\n                            \" \" +\n                            claim.user.user_info.lname}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {claim.title}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {this.getLastClaimDate(claim)}\n                        </td>\n                        {this.props.claiming.selectedClaimType === \"all\" && (\n                          <td className=\"px-3 py-1 whitespace-nowrap\">\n                            {whichClaimType(claim)\n                              ? capitalizeFirstLetter(whichClaimType(claim)!)\n                              : \"-\"}\n                          </td>\n                        )}\n                        <td className=\"px-3 py-1 whitespace-nowrap italic\">\n                          Level {claim.claim_level}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          <span\n                            className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                              whichClaimStatus(claim).classes\n                            }`}\n                          >\n                            {whichClaimStatus(claim).status}\n                          </span>\n                        </td>\n                        <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                          <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                            View\n                          </button>\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </section>\n        )}\n        {/* END CLAIM CONTENT LIST ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* view claim */}\n        {this.state.viewClaim &&\n          this.state.candidateId &&\n          this.props.claiming.allClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.allClaims, this.state.claimId) &&\n          this.props.claiming.claimTypes && (\n            <section className=\"bg-white w-full my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(true);\n                    this.setLoadingRequest(false);\n                    this.setActionTaken(null);\n                    this.setResponseMsg(\"\");\n                    this.setFormError(null);\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                <div className={`text-gray-600 font-extrabold text-2xl px-2`}>\n                  Viewing claim\n                </div>\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n\n              {this.state.loading && (\n                <div className=\"my-4\">\n                  <Loading />\n                </div>\n              )}\n\n              {!this.state.loading && (\n                <section className=\"bg-gray-200\">\n                  {/* FOR DOCUMENT ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.DOCUMENT.toLocaleLowerCase() && (\n                      <div>\n                        {getClaimById(\n                          this.props.claiming.allClaims!,\n                          this.state.claimId!\n                        )!.user.details.find(\n                          (item) =>\n                            item.doc_id ===\n                            getClaimById(\n                              this.props.claiming.allClaims!,\n                              this.state.claimId!\n                            )!.claiming_on_id\n                        ) ? (\n                          <AdminClaimDocView\n                            thisDoc={\n                              getClaimById(\n                                this.props.claiming.allClaims!,\n                                this.state.claimId!\n                              )!.user.details.find(\n                                (item) =>\n                                  item.doc_id ===\n                                  getClaimById(\n                                    this.props.claiming.allClaims!,\n                                    this.state.claimId!\n                                  )!.claiming_on_id\n                              )!\n                            }\n                            documentCategories={this.props.documentReducer}\n                            thisClaim={\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!\n                            }\n                            claimTypes={this.props.claiming.claimTypes}\n                            viewImage={this.state.viewImage}\n                            setViewImage={this.setViewImage}\n                            loadingRequest={this.state.loadingRequest}\n                            setLoadingRequest={this.setLoadingRequest}\n                            actionTaken={this.state.actionTaken}\n                            setActionTaken={this.setActionTaken}\n                            responseMsg={this.state.responseMsg}\n                            setResponseMsg={this.setResponseMsg}\n                            formError={this.state.formError}\n                            setFormError={this.setFormError}\n                            candidateId={this.state.candidateId}\n                            claimReasons={this.props.claiming.claimReasons}\n                          />\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Document not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n\n                  {/* FOR APPLICATION ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.APPLICATION.toLocaleLowerCase() && (\n                      <div>\n                        {getApplicationById(\n                          this.props.claiming.allApplications,\n                          this.props.systemPositions,\n                          getClaimById(\n                            this.props.claiming.allClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        ) ? (\n                          this.props.systemPositions && (\n                            <AdminClaimAppView\n                              thisApplication={\n                                getApplicationById(\n                                  this.props.claiming.allApplications,\n                                  this.props.systemPositions,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.application\n                              }\n                              thisPosition={\n                                getApplicationById(\n                                  this.props.claiming.allApplications,\n                                  this.props.systemPositions,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.position\n                              }\n                              documentCategories={this.props.documentReducer}\n                              thisClaim={\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!\n                              }\n                              claimTypes={this.props.claiming.claimTypes}\n                              systemPositions={this.props.systemPositions}\n                              claimReasons={this.props.claiming.claimReasons}\n                            />\n                          )\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Application not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n\n                  {/* FOR EXAMINATION ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.EXAMINATION.toLocaleLowerCase() && (\n                      <div>\n                        {this.props.claiming.allAnswer &&\n                        this.props.courses &&\n                        getCourseIdBySheetId(\n                          this.props.claiming.allAnswer,\n                          getClaimById(\n                            this.props.claiming.allClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        ) &&\n                        getCourseById(\n                          this.props.courses,\n                          getCourseIdBySheetId(\n                            this.props.claiming.allAnswer,\n                            getClaimById(\n                              this.props.claiming.allClaims,\n                              this.state.claimId\n                            )!.claiming_on_id\n                          )!.course\n                        ) ? (\n                          <AdminClaimExamView\n                            thisExamSheet={\n                              getCourseIdBySheetId(\n                                this.props.claiming.allAnswer,\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!.claiming_on_id\n                              )!\n                            }\n                            thisExam={\n                              getCourseById(\n                                this.props.courses,\n                                getCourseIdBySheetId(\n                                  this.props.claiming.allAnswer,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.course\n                              )!\n                            }\n                            thisClaim={\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!\n                            }\n                            claimTypes={this.props.claiming.claimTypes}\n                            claimReasons={this.props.claiming.claimReasons}\n                          />\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Exam not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n                </section>\n              )}\n            </section>\n          )}\n        {/* end view claim */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const AdminClaim = connect(mapStateToProps, {\n  getAllClaims,\n  loadCourses,\n  getAllAnswers,\n  getClaimReasons,\n  getAllApplications,\n  GetAllSessionPlans,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  getPositions,\n  PushPopupAlert,\n})(Index);\n"],"sourceRoot":""}
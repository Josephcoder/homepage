{"version":3,"sources":["actions/location.ts","components/Table/Table.tsx","actions/users.ts","actions/schools.ts","containers/UserManagement/UserList.tsx","containers/UserManagement/RoleList.tsx","containers/UserManagement/UserRole.tsx","shared/blank_profile.png","containers/UserManagement/UserAccess.tsx","containers/Locations/ViewDistricts.tsx","containers/Locations/ViewProvince.tsx","containers/Locations/ViewSectors.tsx","containers/Locations/Locations.tsx"],"names":["getAllRoom","callback","dispatch","a","axios","get","API","APPLICATION","res","type","ActionTypes","GET_ALL_ROOM","payload","data","console","log","error","errorToText","FC_CreateProvince","CREATE_PROVINCE","FC_UpdateProvince","UPDATE_PROVINCE","FC_DeleteProvince","DELETE_PROVINCE","FC_CreateDistrict","CREATE_DISTRICT","FC_UpdateDistrict","UPDATE_DISTRICT","FC_DeleteDistrict","DELETE_DISTRICT","FC_CreateSector","CREATE_SECTOR","FC_UpdateSector","UPDATE_SECTOR","FC_DeleteSector","DELETE_SECTOR","FC_CreateCenter","CREATE_CENTER","FC_UpdateCenter","UPDATE_CENTER","FC_DeleteCenter","DELETE_CENTER","FC_CreateRoom","CREATE_ROOM","FC_UpdateRoom","UPDATE_ROOM","FC_DeleteRoom","delete_room","DELETE_ROOM","Table","props","table","tr","tableId","length","result","characters","charactersLength","i","charAt","Math","floor","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","pagination","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","map","style","display","className","tableSize","search","searchBG","placeholder","onChange","e","filterType","filter","td","rows","cols","toLowerCase","columns","textContent","innerText","indexOf","filterTable","target","value","disabled","loading","Number","tableClass","rounded","id","hideColumns","thColor","column","index","padding","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","documentValidationStatus","userPageLimit","fetchUserAccess","setAxiosToken","AUTH","users_response","FETCH_USERS_ACCESS","users","next","previous","total_users","user_error","blockUserToSystem","user_id","BLOCK_USER_TO_SYSTEM","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","getSchools","GET_SCHOOLS","getSchoolById","schoolId","GET_SCHOOLS_BY_ID","createSchool","schools","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","school_id","PLACEMENT","schoolPosts","FETCH_SCHOOL_POSTS","getSchoolPlacement","GET_SCHOOL_PLACEMENT","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","TYPE","UPDATE_SCHOOL_POST","fetchDistrictPosts","district_id","FETCH_DISTRICT_POSTS","getDistrictPlacement","GET_DISTRICT_PLACEMENT","ModalState","RoleList","searchInput","setSearchInput","roleList","setChooseRole","role","loadindRequest","handleSelectRole","system_user_role_id","capitalizeFirstLetter","UserRole","setRoleId","setState","roleId","setSelectedRole","selectedRole","setProvinceId","provinceId","setDistrictId","districtId","setCenterId","centerId","setRoomId","roomId","setLoadingForm","loadingForm","setSchoolId","setChooseSchool","chooseSchool","setLoading","setInstituteId","instituteId","setFormError","formError","setLoadingRequest","loadingRequest","chooseRole","setDefaultState","default_access","LOAD_province","LOAD_district","district_required","roomList","distinctDistrict","find","item","_id","province_id","room_required","LocationsInArray","room_id","center_id","school_required","schoolList","LOAD_school","componentDidMount","userInfo","state","vvvvv","role_id","element","tableData","access","task","permitted","create","view","update","delete","colSpan","assignRoleToUser","preventDefault","window","confirm","msg","isEmptyOrSpaces","education_institution_required","formData","status","education_institution_id","post","setChangeRole","PushPopupAlert","title","theme","PopupAlertTheme","success","role_error","danger","location","ids","districts","key","Object","prototype","hasOwnProperty","call","keyDistrict","includes","push","distinctCenter","rooms","forEach","distinctRoom","this","Loading","onSubmit","schoolLevels","education_categories","institute","education_institute_id","education_category_title","province","province_name","undefined","district","district_name","school","school_name","center","center_name","room","room_name","Component","connect","getUserById","userId","LocationData","locationTemp","p","d","centers","c","r","room_number","toString","capacity","occupied","UserList","setManageUserId","manageUserId","setLoadingSchool","loadingSchool","setLoadingRequestType","loadingRequestType","setRoomList","setRoomTables","roomTable","setCurrentAccess","currentAccess","setSchoolList","setUserAccess","userAccess","allRoom","loadingUser","user","setManageUser","user_info","fname","lname","email","sex","getRoleById","blockUser","actionType","patch","is_active","info","blockUser_ERROR","restUserAccess","warning","resetedAccess","reseting_user_access","manageUser","src","photo","profile","alt","getInstituteById","NoResult","NoResultThemes","Dark","n_id","phone_number","custome_access","changeRole","UserAccess","locations","roomLocation","_UserAccess","setViewPermission","viewPermission","setLoadindRequest","setCreatePermission","createPermission","setUpdatePermission","updatePermission","setDeletePermission","deletePermission","setLoadind","overrideUserAccess","overideAccess","findCustom","custom","handleCustomization","findIndex","custome_user_access_id","customize_access","to","checked","districtName","setDistrictName","districtCode","setDistrictCode","setError","handleSubmit","actionTypes","thisProvince","province_code","district_code","sectors","setActionTypes","thisDistrict","setThisDistrict","doc_category_error","component","Modal","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","medium","body","footer","provinceTitle","setProvinceTitle","provinceCode","setProvinceCode","updated","setThisProvince","province_error","sectorName","setSectorName","sectorCode","setSectorCode","sector_name","sector_code","sector_id","thisSector","setThisSector","sector_error","handleDelete","sectorId","district_error","sector","Locations","ViewDistricts"],"mappings":"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","file":"static/js/45.94de6e45.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n  SectorInterface,\n} from \"../shared/interfaces\";\nimport { errorToText } from \"../utils/errors\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface getAllRoomActions {\n  type: ActionTypes.GET_ALL_ROOM;\n  payload: RoomLocationInterface[];\n}\n\nexport interface createProvinceActions {\n  type: ActionTypes.CREATE_PROVINCE;\n  payload: RoomLocationInterface;\n}\n\nexport interface updateProvinceActions {\n  type: ActionTypes.UPDATE_PROVINCE;\n  payload: {\n    province_id: string;\n    province_name: string;\n    provice_code: number;\n  };\n}\n\nexport interface deleteProvinceActions {\n  type: ActionTypes.DELETE_PROVINCE;\n  payload: string;\n}\n\n// ============ DISTRICT =================\nexport interface createDistrictActions {\n  type: ActionTypes.CREATE_DISTRICT;\n  payload: { province_id: string; data: DistrictInterface };\n}\n\nexport interface updateDistrictActions {\n  type: ActionTypes.UPDATE_DISTRICT;\n  payload: {\n    province_id: string;\n    district_id: string;\n    district_name: string;\n    district_code: number;\n  };\n}\n\nexport interface deleteDistrictActions {\n  type: ActionTypes.DELETE_DISTRICT;\n  payload: { province_id: string; district_id: string };\n}\n\n// ============ SECTOR =================\nexport interface createSectorActions {\n  type: ActionTypes.CREATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: SectorInterface;\n  };\n}\n\nexport interface updateSectorActions {\n  type: ActionTypes.UPDATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    sector_id: string;\n    sector_name: string;\n    sector_code: number;\n  };\n}\n\nexport interface deleteSectorActions {\n  type: ActionTypes.DELETE_SECTOR;\n  payload: { province_id: string; district_id: string; sector_id: string };\n}\n\n// ============ CENTERS =================\nexport interface createCenterActions {\n  type: ActionTypes.CREATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: CentersInterface;\n  };\n}\n\nexport interface updateCenterActions {\n  type: ActionTypes.UPDATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    examination_center_id: string;\n    center_name: string;\n  };\n}\n\nexport interface deleteCenterActions {\n  type: ActionTypes.DELETE_CENTER;\n  payload: { province_id: string; district_id: string; center_id: string };\n}\n\n// ============ ROOMS =================\nexport interface createRoomActions {\n  type: ActionTypes.CREATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    data: RoomsInterface;\n  };\n}\n\nexport interface updateRoomActions {\n  type: ActionTypes.UPDATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n    room_number: number;\n    capacity: number;\n  };\n}\n\nexport interface deleteRoomActions {\n  type: ActionTypes.DELETE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n  };\n}\n\nexport type RoomActionType =\n  | getAllRoomActions\n  | createProvinceActions\n  | updateProvinceActions\n  | deleteProvinceActions\n  | createDistrictActions\n  | updateDistrictActions\n  | deleteDistrictActions\n  | createSectorActions\n  | updateSectorActions\n  | deleteSectorActions\n  | createCenterActions\n  | updateCenterActions\n  | deleteCenterActions\n  | createRoomActions\n  | updateRoomActions\n  | deleteRoomActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getAllRoom = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<RoomLocationInterface[]>(\n        `${API.APPLICATION}/roomlocation`\n      );\n      dispatch<getAllRoomActions>({\n        type: ActionTypes.GET_ALL_ROOM,\n        payload: res.data,\n      });\n      console.log(\"====================================\");\n      console.log({ res: res.data });\n      console.log(\"====================================\");\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.error(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const FC_CreateProvince = (data: RoomLocationInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createProvinceActions>({\n      type: ActionTypes.CREATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateProvince = (data: {\n  province_id: string;\n  province_name: string;\n  provice_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateProvinceActions>({\n      type: ActionTypes.UPDATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteProvince = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteProvinceActions>({\n      type: ActionTypes.DELETE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\n// DISTRICT =================\nexport const FC_CreateDistrict = (data: {\n  province_id: string;\n  data: DistrictInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createDistrictActions>({\n      type: ActionTypes.CREATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateDistrict = (data: {\n  province_id: string;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateDistrictActions>({\n      type: ActionTypes.UPDATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteDistrict = (data: {\n  province_id: string;\n  district_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteDistrictActions>({\n      type: ActionTypes.DELETE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\n// SECTOR =================\nexport const FC_CreateSector = (data: {\n  province_id: string;\n  district_id: string;\n  data: SectorInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createSectorActions>({\n      type: ActionTypes.CREATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateSectorActions>({\n      type: ActionTypes.UPDATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteSectorActions>({\n      type: ActionTypes.DELETE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\n// CENTERS =================\nexport const FC_CreateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  data: CentersInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createCenterActions>({\n      type: ActionTypes.CREATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  examination_center_id: string;\n  center_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateCenterActions>({\n      type: ActionTypes.UPDATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteCenter = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteCenterActions>({\n      type: ActionTypes.DELETE_CENTER,\n      payload: data,\n    });\n  };\n};\n\n// ROOM =================\nexport const FC_CreateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  data: RoomsInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createRoomActions>({\n      type: ActionTypes.CREATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n  room_number: number;\n  capacity: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateRoomActions>({\n      type: ActionTypes.UPDATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n}) => {\n  console.log({ delete_room: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteRoomActions>({\n      type: ActionTypes.DELETE_ROOM,\n      payload: data,\n    });\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = (props) => {\n  const startPage = 1;\n  const tableId =\n    !props.tableId || props.tableId === \"myTable\" ? FC_makeID() : props.tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    props.pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId!)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < props.columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${props.tableSize} overflow-x-auto`}>\n      {/* search box  */}\n      {props.search && (\n        <div className={`${props.searchBG} w-full mb-2`}>\n          {props.search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={props.loading}\n              />\n\n              {props.pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={props.loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"overflow-x-auto w-full\">\n        <table\n          className={\n            props.tableClass\n              ? props.tableClass\n              : `w-full shadow ${\n                  props.rounded && \"sm:rounded-lg\"\n                } table-auto order-table`\n          }\n          id={tableId}\n        >\n          {!props.hideColumns && (\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n              <tr\n                className={`text-left tracking-wide bg-${props.thColor}-100 border-b-2 border-${props.thColor}-500 text-${props.thColor}-600`}\n              >\n                {props.columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className={`${column.padding} text-${\n                      column.alignText\n                    } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                    onClick={() =>\n                      column.isSortAllowed && sortThisColumn(tableId, index)\n                    }\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      {column.columnTitle}\n                      {column.isSortAllowed && <BiSort />}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n            {props.rows()}\n          </tbody>\n        </table>\n        {props.pagination && (\n          <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n            <div>\n              <span className=\"text-xs xs:text-sm text-gray-900\">\n                Showing 1 to {pageSize} of {totalItems - 1} Entries\n              </span>\n            </div>\n            <div>\n              <nav className=\"inline-flex shadow-sm\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                      currentPage !== 1 && \"bg-white\"\n                    }`}\n                    aria-label=\"Previous\"\n                    disabled={currentPage === 1 || props.loading}\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                  >\n                    <MdNavigateBefore className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <div>\n                  {pages &&\n                    pages.map((page, pageIndex) => (\n                      <button\n                        key={pageIndex}\n                        className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                          page !== currentPage\n                            ? \"bg-white\"\n                            : \"bg-gray-100 cursor-default\"\n                        }`}\n                        disabled={page === currentPage || props.loading}\n                        onClick={() => setCurrentPage(page)}\n                      >\n                        {page}\n                      </button>\n                    ))}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                      currentPage !== totalPages && \"bg-white\"\n                    }`}\n                    aria-label=\"Next\"\n                    disabled={currentPage === totalPages || props.loading}\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                  >\n                    <MdNavigateNext className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\n\nexport const userPageLimit: number = 30;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserAccessInterface;\n}\n\nexport interface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: { id: string; page: number };\n}\n\nexport interface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: { data: AssignRoleToUserActionInterface; page: number };\n}\n\nexport interface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: { data: CustomeAccessInterface; page: number };\n}\n\nexport interface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: { user_id: string; page: number };\n}\n\nexport type fetchUserAccessInterface = {\n  users: UserInterface[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport type UserAccessInterface = {\n  users: { data: UserInterface[]; page: number }[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n  in_education: boolean;\n  disability: boolean;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const fetchUserAccess = (page: number, callback?: Function) => {\n  callback && callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${API.AUTH}/users?page=${page}&limit=${userPageLimit}`\n      );\n      console.log({ users_response: res });\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: {\n          users: [{ data: res.data.users!, page: page }],\n          next: res.data.next,\n          previous: res.data.previous,\n          total_users: res.data.total_users,\n        },\n      });\n      callback && callback(false, \"\", res.data.users);\n    } catch (error) {\n      console.error({ user_error: error });\n      callback && callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const blockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const customizeUserAccess = (\n  data: CustomeAccessInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: { user_id: data, page },\n    });\n  };\n};\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { data_school } from \"../shared/dataTest\";\nimport {\n  MySchoolInterface,\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\nimport { placedCandidateInterface } from \"../interfaces/marks_publication\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolByIdAction {\n  type: ActionTypes.GET_SCHOOLS_BY_ID;\n  payload: MySchoolInterface;\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\n// School Placements interfaces\nexport interface GetSchoolPlacementAction {\n  type: ActionTypes.GET_SCHOOL_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetDistrictPlacementAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetSessionPlacementAction {\n  type: ActionTypes.GET_SESSION_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolByIdAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | GetSchoolPlacementAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction\n  | GetDistrictPlacementAction\n  | GetSessionPlacementAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolById = (schoolId: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<MySchoolInterface>(\n        `${API.APPLICATION}/schools/${schoolId}`\n      );\n      dispatch<GetSchoolByIdAction>({\n        type: ActionTypes.GET_SCHOOLS_BY_ID,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolsInfo = () => {\n  return async (dispatch: Dispatch) => {\n    setAxiosToken();\n    // const response = await axios.get<AccessRoleType[]>(url);\n\n    dispatch<GetSchoolsInfoAction>({\n      type: ActionTypes.GET_SCHOOLS_INFO,\n      payload: data_school,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log({ schoolPosts: res.data });\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolPlacement = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/school/${school_id}`\n      );\n\n      console.log({ getSchoolPlacement: res.data });\n\n      dispatch<GetSchoolPlacementAction>({\n        type: ActionTypes.GET_SCHOOL_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ fetchDistrictPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacement = (\n  district_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSessionPlacement = (session_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/session/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getSessionPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetSessionPlacementAction>({\n        type: ActionTypes.GET_SESSION_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdLock, MdLocationOn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert, schoolLevelsStoreInterface } from \"../../actions\";\nimport { getAllRoom } from \"../../actions/location\";\nimport { getSchools } from \"../../actions/schools\";\nimport {\n  blockUserToSystem,\n  unBlockUserToSystem,\n  resetUserAccess,\n} from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  getRoleById,\n  capitalizeFirstLetter,\n  getInstituteById,\n} from \"../../shared/dataTest\";\nimport {\n  RoomLocationInterface,\n  LocationRoomTableInterface,\n  DistrictInterface,\n  SystemUserRoleInterface,\n  UserInterface,\n  AccessTaskInterface,\n  SchoolsInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { distinctDistrict } from \"../Locations/Locations\";\nimport { UserAccess } from \"./UserAccess\";\nimport UserRole from \"./UserRole\";\nimport profile from \"../../shared/blank_profile.png\"; // with im\n\nexport const getUserById = (users: UserInterface[], userId: string) => {\n  return users.find((item) => item.user_id === userId);\n};\n\nexport enum ModalState {\n  View_User = \"View User Info\",\n  Add_Access = \"Add Access To User\",\n  Update_Access = \"Update User Access\",\n  Close_Modal = \"Close Modal\",\n}\n\n// Tobe replaced with Emmy's function\nexport const LocationsInArray = (\n  LocationData: RoomLocationInterface[]\n): LocationRoomTableInterface[] | [] => {\n  let locationTemp: LocationRoomTableInterface[] = [];\n  for (let p in LocationData) {\n    let districts = LocationData[p].districts;\n    for (let d in districts) {\n      let centers = districts[d].centers;\n      for (let c in centers) {\n        let rooms = centers[c].rooms;\n        for (let r in rooms) {\n          locationTemp.push({\n            province_id: LocationData[p]._id,\n            province_name: LocationData[p].province_name,\n            district_id: districts[d]._id,\n            district_name: districts[d].district_name,\n            center_id: centers[c]._id,\n            center_name: centers[c].center_name,\n            room_id: rooms[r]._id,\n            room_name: rooms[r].room_number.toString(),\n            capacity: rooms[r].capacity,\n            occupied: rooms[r].occupied,\n          });\n        }\n      }\n    }\n  }\n  return locationTemp;\n};\n\ninterface AppProps {\n  users: UserInterface[];\n  roleList: SystemUserRoleInterface[];\n  userTypes: \"all\" | \"active\" | \"blocked\";\n  loadingUser: boolean;\n  schoolLevels: schoolLevelsStoreInterface;\n  setLoadingUser: (value: boolean) => void;\n  manageUser: UserInterface | null;\n  setManageUser: (value: UserInterface | null) => void;\n  changeRole: boolean;\n  setChangeRole: (value: boolean) => void;\n  currentPage: number;\n\n  // REDUX =================\n  allRoom: RoomLocationInterface[];\n  getAllRoom: Function;\n  schools: SchoolsInterface[];\n  getSchools: Function;\n  blockUserToSystem: Function;\n  unBlockUserToSystem: Function;\n  resetUserAccess: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppStates {\n  manageUserId: string;\n  loadingRequest: boolean;\n  loading: boolean;\n  loadingSchool: boolean;\n  loadingRequestType: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null;\n  schoolList: SchoolsInterface[] | null;\n  roomList: RoomLocationInterface[] | null;\n  roomTable: LocationRoomTableInterface[] | null;\n  userAccess: AccessTaskInterface[] | null;\n  currentAccess: AccessTaskInterface | null;\n}\n\nclass UserList extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      manageUserId: \"\",\n      loadingRequest: false,\n      loading: true,\n      loadingSchool: true,\n      loadingRequestType: null,\n      schoolList: null,\n      roomList: null,\n      roomTable: null,\n      userAccess: null,\n      currentAccess: null,\n    };\n  }\n\n  setManageUserId = (value: string) => {\n    this.setState({ manageUserId: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoadingSchool = (value: boolean) => {\n    this.setState({ loadingSchool: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingRequestType = (\n    value: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null\n  ) => {\n    this.setState({ loadingRequestType: value });\n  };\n\n  setRoomList = (value: RoomLocationInterface[] | null) => {\n    this.setState({ roomList: value });\n  };\n\n  setRoomTables = (value: LocationRoomTableInterface[] | null) => {\n    this.setState({ roomTable: value });\n  };\n\n  setCurrentAccess = (value: AccessTaskInterface | null) => {\n    this.setState({ currentAccess: value });\n  };\n\n  setSchoolList = (value: SchoolsInterface[] | null) => {\n    this.setState({ schoolList: value });\n  };\n\n  setUserAccess = (value: AccessTaskInterface[] | null) => {\n    this.setState({ userAccess: value });\n  };\n\n  componentDidMount = () => {\n    if (this.props.schools.length === 0) {\n      this.props.getSchools(\n        (status: boolean, msg: string, data?: SchoolsInterface[]) => {\n          this.setLoadingSchool(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              this.setLoadingSchool(false);\n              this.setSchoolList(data);\n            }\n          }\n        }\n      );\n    } else {\n      this.setSchoolList(this.props.schools);\n      this.setLoadingSchool(false);\n    }\n\n    if (this.props.allRoom.length === 0) {\n      this.props.getAllRoom(\n        (status: boolean, msg: string, data?: RoomLocationInterface[]) => {\n          this.setLoading(status);\n          if (!status && msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data.length > 0) {\n            this.setRoomList(data);\n            this.setRoomTables(LocationsInArray(data));\n          }\n        }\n      );\n    } else if (this.state.loading) {\n      this.setRoomList(this.props.allRoom);\n      this.setRoomTables(LocationsInArray(this.props.allRoom));\n      this.setLoading(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.props.loadingUser ||\n      this.state.loading ||\n      this.state.loadingSchool\n    ) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            <Loading />\n          </td>\n        </tr>,\n      ];\n    }\n\n    let data: UserInterface[] = this.props.users;\n    if (data.length <= 0) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((user: UserInterface, index: number) => (\n      <tr\n        key={index + Math.random()}\n        className=\"border-b border-gray-200 hover:bg-gray-100 group cursor-pointer\"\n        onClick={() => {\n          this.props.setManageUser(user);\n          this.setManageUserId(user.user_id);\n        }}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {user.user_info &&\n              user.user_info.fname + \" \" + user.user_info.lname}\n          </span>\n        </td>\n        <td className=\"p-3 text-left\">{user.email}</td>\n        {/* <td className=\"p-3 text-left\">{user.phone_number}</td> */}\n        <td className=\"p-3 text-left\">\n          {user.user_info && user.user_info.sex === \"M\" ? \"Male\" : \"Female\"}\n        </td>\n        <td className=\"p-3 text-left text-blue-700 text-base font-medium\">\n          {user.default_access &&\n            user.default_access.system_user_role_id &&\n            user.default_access.system_user_role_id && (\n              <span\n                className={`px-2 py-1 font-semibold rounded text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100`}\n              >\n                {getRoleById(\n                  this.props.roleList,\n                  user.default_access.system_user_role_id\n                )?.role &&\n                  capitalizeFirstLetter(\n                    getRoleById(\n                      this.props.roleList,\n                      user.default_access.system_user_role_id\n                    )?.role\n                  )}\n              </span>\n            )}\n        </td>\n        {/* {userTypes === \"all\" && (\n          <td>\n            {user.is_active ? (\n              <span className={`px-2 py-1 font-semibold text-green-700`}>\n                Active\n              </span>\n            ) : (\n              <span className={`px-2 py-1 font-semibold text-red-700`}>\n                Blocked\n              </span>\n            )}\n          </td>\n        )} */}\n        <td className=\"px-3 text-center\">\n          <button\n            className=\"btn bg-gray-200 group-hover:bg-blue-700 group-hover:text-white focus:outline-none\"\n            title=\"Manage User Access\"\n            onClick={() => {\n              this.props.setManageUser(user);\n              this.setManageUserId(user.user_id);\n            }}\n          >\n            Manage\n          </button>\n        </td>\n      </tr>\n    ));\n  };\n\n  blockUser = async (user_id: string, actionType: boolean) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(true);\n\n    if (\n      !window.confirm(\n        `Are sure you want to ${actionType ? \"block\" : \"activate\"} this user?`\n      )\n    ) {\n      return this.setLoadingRequest(false);\n    }\n\n    try {\n      const res = await axios.patch(`${API.AUTH}/users/disactive/${user_id}`, {\n        is_active: !actionType,\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ blockUserToSystem: res });\n        console.log(\"====================================\");\n        actionType\n          ? this.props.blockUserToSystem(user_id, this.props.currentPage)\n          : this.props.unBlockUserToSystem(user_id, this.props.currentPage);\n\n        this.props.PushPopupAlert({\n          title: `User has been ${actionType ? \"blocked\" : \"activated\"}!`,\n          theme: PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ blockUser_ERROR: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    user_id = \"\";\n  };\n\n  restUserAccess = async (user_id: string) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    if (!window.confirm(`Are sure you want to reset to default access?`)) {\n      return this.setLoadingRequest(false);\n    }\n\n    this.setLoadingRequest(true);\n    this.setLoadingRequestType(\"RESET\");\n\n    try {\n      const res = await axios.delete(`${API.AUTH}/custaccess/user/${user_id}`);\n      res && this.props.resetUserAccess(user_id, this.props.currentPage);\n      let resetedAccess: UserInterface | undefined = this.props.users.find(\n        (user) => user.user_id === user_id\n      );\n      if (resetedAccess) {\n        resetedAccess.default_access &&\n          this.setUserAccess(resetedAccess.default_access.access);\n        this.props.PushPopupAlert({\n          title: `Resetting User Access complete successfully`,\n          theme: PopupAlertTheme.info,\n        });\n        this.setCurrentAccess(null);\n      }\n    } catch (error) {\n      console.error({ reseting_user_access: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    this.setLoadingRequestType(null);\n    user_id = \"\";\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  render() {\n    return (\n      <div>\n        {!this.props.manageUser && (\n          <div className=\"grid md:grid-cols-5 gap-2 mb-5\">\n            <div className={`md:col-span-5 rounded`}>\n              <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n                <div className=\"flex flex-col md:flex-row gap-1 items-center mx-1.5\">\n                  {/* <span className=\"text-lg\">All User</span>\n                  <MdChevronRight className=\"w-7 h-7\" />\n                  <span className=\"text-lg underline\">All User</span> */}\n                </div>\n              </div>\n              {this.props.users && (\n                <Table\n                  columns={[\n                    { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Names\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Email\", alignText: \"left\", padding: \"p-3\" },\n                    {\n                      columnTitle: \"Gender\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Role\", alignText: \"left\", padding: \"p-3\" },\n                    // { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  thColor=\"gray\"\n                  loading={\n                    this.props.loadingUser ||\n                    this.state.loading ||\n                    this.state.loadingSchool\n                  }\n                />\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* -------------------------------------------------------- */}\n\n        {this.props.manageUser && (\n          <div className=\"bg-gray-100 h-100\">\n            {/* header */}\n            <div className=\"bg-white border-b border-t px-4 py-2 flex flex-col md:flex-row items-center gap-x-14\">\n              {this.props.users.find(\n                (user) => user.user_id === this.state.manageUserId\n              ) ? (\n                <div\n                  key={\n                    this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.user_id + Math.random()\n                  }\n                  className=\"flex flex-col md:flex-row md:items-start items-center w-full gap-3\"\n                >\n                  <img\n                    src={\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.user_info.photo !== \"pic\"\n                        ? this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.user_info.photo\n                        : profile\n                    }\n                    alt=\"\"\n                    className=\"rounded-full w-32 h-32\"\n                  />\n                  <div className=\"flex flex-col gap-1 items-start w-full\">\n                    <span className=\"text-2xl font-semibold\">\n                      {this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.user_info.fname +\n                        \" \" +\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.user_info.lname}\n                    </span>\n                    <div className=\"flex items-center\">\n                      <MdLock className=\"w-5 h-5\" />\n                      <span className=\"text-lg font-medium\">\n                        {this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access &&\n                          getRoleById(\n                            this.props.roleList,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access!.system_user_role_id\n                          ).role}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">Level:</span>\n                      <span className=\"text-base font-medium\">\n                        {this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access &&\n                        getRoleById(\n                          this.props.roleList,\n                          this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access!.system_user_role_id\n                        ).district_required\n                          ? \"District\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).school_required\n                          ? \"School\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).room_required\n                          ? \"Room\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).education_institution_required\n                          ? \"Institute\"\n                          : \"-\"}\n                      </span>\n                    </div>\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.default_access &&\n                    getRoleById(\n                      this.props.roleList,\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access!.system_user_role_id\n                    ).education_institution_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">Institute:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access &&\n                          this.props.schoolLevels.education_categories &&\n                          getInstituteById(\n                            this.props.schoolLevels.education_categories,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access!.education_institution_id\n                          )\n                            ? getInstituteById(\n                                this.props.schoolLevels.education_categories,\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.education_institution_id\n                              )!.education_category_title\n                            : \"Unknown Institute\"}\n                        </span>\n                      </div>\n                    ) : this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).district_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">District:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access &&\n                            this.state.roomList &&\n                            distinctDistrict(this.state.roomList).find(\n                              (item) =>\n                                item.district_id ===\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.district_id\n                            ) &&\n                            distinctDistrict(this.state.roomList).find(\n                              (item) =>\n                                item.district_id ===\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.district_id\n                            )!.district_name}\n                        </span>\n                      </div>\n                    ) : this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).school_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">School:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.state.schoolList &&\n                          this.state.schoolList.find(\n                            (school) =>\n                              school._id ===\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access?.school_id\n                          )\n                            ? this.state.schoolList.find(\n                                (school) =>\n                                  school._id ===\n                                  this.props.users.find(\n                                    (user) =>\n                                      user.user_id === this.state.manageUserId\n                                  )!.default_access?.school_id\n                              )!.school_name\n                            : \"Unknown school\"}\n                        </span>\n                      </div>\n                    ) : (\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).room_required && (\n                        <div className=\"flex items-center gap-1\">\n                          {/* <span className=\"text-gray-500\">Room:</span> */}\n                          <MdLocationOn className=\"text-gray-500\" />\n                          {this.state.roomTable && (\n                            <span className=\"text-base font-medium\">\n                              {this.state.roomTable.find(\n                                (room) =>\n                                  room.room_id ===\n                                  this.props.users.find(\n                                    (user) =>\n                                      user.user_id === this.state.manageUserId\n                                  )!.default_access?.room_id\n                              )?.district_name +\n                                \" - \" +\n                                this.state.roomTable.find(\n                                  (room) =>\n                                    room.room_id ===\n                                    this.props.users.find(\n                                      (user) =>\n                                        user.user_id === this.state.manageUserId\n                                    )!.default_access?.room_id\n                                )?.center_name +\n                                \" - Room \" +\n                                this.state.roomTable.find(\n                                  (room) =>\n                                    room.room_id ===\n                                    this.props.users.find(\n                                      (user) =>\n                                        user.user_id === this.state.manageUserId\n                                    )!.default_access?.room_id\n                                )?.room_name}\n                            </span>\n                          )}\n                        </div>\n                      )\n                    )}\n                  </div>\n                </div>\n              ) : (\n                <NoResult\n                  theme={NoResultThemes.Dark}\n                  value={\"User info not found\"}\n                />\n              )}\n              {this.props.users.find(\n                (user) => user.user_id === this.state.manageUserId\n              ) && (\n                <div\n                  key={\n                    this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.user_id + Math.random()\n                  }\n                  className=\"flex flex-col w-full\"\n                >\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">NID:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.n_id\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Email:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.email\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Phone:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.phone_number\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Status:</span>\n                    <span className=\"text-base font-medium\">\n                      {this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.is_active === false\n                        ? \"Blocked\"\n                        : \"Active\"}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.custome_access && (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-50 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"cursor-wait bg-gray-400\"\n                            : \"bg-gray-600\"\n                        }`}\n                        onClick={() =>\n                          this.restUserAccess(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Reseting...\"\n                            : \"Reset Access\"}\n                        </span>\n                      </button>\n                    )}\n                    {!this.props.changeRole && (\n                      <button\n                        className=\"bg-yellow-300 hover:bg-yellow-400 px-2 py-1 font-semibold text-black inline-flex items-center rounded\"\n                        onClick={() => this.props.setChangeRole(true)}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>Change Role</span>\n                      </button>\n                    )}\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.is_active ? (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-red-500\"\n                            : \"bg-red-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Activate\"}\n                        </span>\n                      </button>\n                    ) : (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-yellow-500\"\n                            : \"bg-yellow-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Re-Activate\"}\n                        </span>\n                      </button>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n            {/* end header */}\n\n            {/* content */}\n            {this.props.manageUser &&\n            this.state.roomList &&\n            this.props.changeRole ? (\n              <UserRole\n                userInfo={this.props.manageUser}\n                roleList={this.props.roleList}\n                district={this.distinctDistrict(this.state.roomList)}\n                schoolList={this.state.schoolList}\n                roomList={this.state.roomList}\n                setChangeRole={this.props.setChangeRole}\n                currentPage={this.props.currentPage}\n              />\n            ) : (\n              <UserAccess\n                userInfo={getUserById(\n                  this.props.users,\n                  this.state.manageUserId\n                )}\n                manageUserId={this.state.manageUserId}\n                setUserAccess={this.setUserAccess}\n                userAccess={this.state.userAccess}\n                setCurrentAccess={this.setCurrentAccess}\n                currentAccess={this.state.currentAccess}\n                currentPage={this.props.currentPage}\n              />\n            )}\n            {/* end content */}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n  schools,\n  locations,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n  schools: SchoolsInterface[];\n  allRoom: RoomLocationInterface[];\n} => {\n  return {\n    schoolLevels,\n    schools: schools.schools,\n    allRoom: locations.roomLocation,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  blockUserToSystem,\n  unBlockUserToSystem,\n  resetUserAccess,\n  getSchools,\n  getAllRoom,\n  PushPopupAlert,\n})(UserList);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { SystemUserRoleInterface } from \"../../shared/interfaces\";\nimport search from \"../../utils/search\";\n\n// const searchRole = (\n//   objList: SystemUserRoleInterface[],\n//   text: string\n// ): SystemUserRoleInterface[] => {\n//   return objList.filter(\n//     (product) => product.role.toLocaleLowerCase() === text.toLocaleLowerCase()\n//   );\n// };\n\ntype RoleListProps = {\n  setChooseRole: (value: boolean) => void;\n  roleList: SystemUserRoleInterface[];\n  handleSelectRole: (role_id: string, TYPE?: \"SELECT\" | \"DEFAULT\") => void;\n  loadindRequest: boolean;\n};\n\nconst RoleList: React.FC<RoleListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section className=\"border-2 rounded border-gray-400\">\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={props.roleList.length > 0 ? false : true}\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseRole(false);\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {search(props.roleList, searchInput).length > 0 ? (\n          search(props.roleList, searchInput).map((role, index) => (\n            <section key={index + role.role}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseRole(false);\n                    !props.loadindRequest &&\n                      props.handleSelectRole(role.system_user_role_id);\n                  }}\n                >\n                  <p className=\"text-sm font-medium text-black\">\n                    {capitalizeFirstLetter(role.role)}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                >\n                  Choose\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No role available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default RoleList;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdHighlightOff } from \"react-icons/md\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { schoolLevelsStoreInterface, PushPopupAlert } from \"../../actions\";\nimport { assignRoleToUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  UserInterface,\n  SystemUserRoleInterface,\n  DistrictInterface,\n  SchoolsInterface,\n  RoomLocationInterface,\n  AssignRoleToUserActionInterface,\n  LocationRoomTableInterface,\n  RoleToUserInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport RoleList from \"./RoleList\";\nimport { LocationsInArray } from \"./UserList\";\n\ninterface AppProps {\n  currentPage: number;\n  userInfo: UserInterface;\n  roleList: SystemUserRoleInterface[];\n  district: DistrictInterface[];\n  assignRoleToUserAccess: Function;\n  schoolList: SchoolsInterface[] | null;\n  roomList: RoomLocationInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  setChangeRole: (value: boolean) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingForm: boolean;\n  loadingRequest: boolean;\n  roleId: string;\n  provinceId: string;\n  districtId: string;\n  schoolId: string;\n  roomId: string;\n  instituteId: string;\n  centerId: string;\n  selectedRole: SystemUserRoleInterface | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  chooseRole: boolean;\n  chooseSchool: boolean;\n}\n\nclass UserRole extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: true,\n      loadingRequest: false,\n      roleId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      schoolId: \"\",\n      roomId: \"\",\n      instituteId: \"\",\n      centerId: \"\",\n      selectedRole: null,\n      formError: null,\n      chooseRole: false,\n      chooseSchool: false,\n    };\n  }\n\n  setRoleId = (value: string) => {\n    this.setState({ roleId: value });\n  };\n\n  setSelectedRole = (value: SystemUserRoleInterface | null) => {\n    this.setState({ selectedRole: value });\n  };\n\n  setProvinceId = (value: string) => {\n    this.setState({ provinceId: value });\n  };\n\n  setDistrictId = (value: string) => {\n    this.setState({ districtId: value });\n  };\n\n  setCenterId = (value: string) => {\n    this.setState({ centerId: value });\n  };\n\n  setRoomId = (value: string) => {\n    this.setState({ roomId: value });\n  };\n\n  setLoadingForm = (value: boolean) => {\n    this.setState({ loadingForm: value });\n  };\n\n  setSchoolId = (value: string) => {\n    this.setState({ schoolId: value });\n  };\n\n  setChooseSchool = (value: boolean) => {\n    this.setState({ chooseSchool: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setInstituteId = (value: string) => {\n    this.setState({ instituteId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n  setChooseRole = (value: boolean) => {\n    this.setState({ chooseRole: value });\n  };\n\n  setDefaultState = (\n    default_access: RoleToUserInterface,\n    role: SystemUserRoleInterface\n  ) => {\n    // SET DEFAULT PROVINCE && DISTRICT ID =======================\n    let LOAD_province: LocationRoomTableInterface | undefined;\n    let LOAD_district: DistrictInterface | undefined;\n    if (role.district_required && this.props.roomList) {\n      LOAD_district = this.distinctDistrict(this.props.roomList).find(\n        (item) => item._id === default_access!.district_id\n      );\n      LOAD_district && this.setProvinceId(LOAD_district.province_id);\n      LOAD_district && this.setDistrictId(default_access!.district_id);\n      this.setLoadingForm(false);\n    } else if (role.room_required && this.props.roomList) {\n      // SET DEFAULT PROVINCE && DISTRICT && ROOM ID =======================\n\n      LOAD_province = LocationsInArray(this.props.roomList).find(\n        (item) => item.room_id === default_access!.room_id\n      );\n      LOAD_province && this.setProvinceId(LOAD_province.province_id);\n      LOAD_province && this.setDistrictId(LOAD_province.district_id);\n      LOAD_province && this.setCenterId(LOAD_province.center_id);\n      this.setRoomId(default_access.room_id);\n      this.setLoadingForm(false);\n    } else if (\n      role.school_required &&\n      this.props.roomList &&\n      this.props.schoolList\n    ) {\n      // SET DEFAULT PROVINCE && DISTRICT && SCHOOL ID =======================\n      let LOAD_school: SchoolsInterface | undefined =\n        this.props.schoolList.find(\n          (item) => item._id === default_access!.school_id\n        );\n      if (LOAD_school) {\n        LOAD_province = LocationsInArray(this.props.roomList).find(\n          (item) => item.district_id === LOAD_school?.district_id\n        );\n        LOAD_province && this.setProvinceId(LOAD_province.province_id);\n        LOAD_province && this.setDistrictId(LOAD_province.district_id);\n        this.setSchoolId(default_access.school_id);\n        this.setLoadingForm(false);\n      } else {\n        this.setLoadingForm(false);\n      }\n    } else {\n      this.setLoadingForm(false);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.roleList.length) {\n      if (this.props.userInfo.default_access && this.state.loadingForm) {\n        // SET DEFAULT ROLE ID =======================\n        if (!this.state.roleId.length) {\n          let result = this.props.roleList.find(\n            (role) =>\n              role.system_user_role_id ===\n              this.props.userInfo.default_access!.system_user_role_id\n          );\n          if (result) {\n            this.setRoleId(\n              this.props.userInfo.default_access.system_user_role_id\n            );\n            this.setSelectedRole(result);\n            this.setDefaultState(this.props.userInfo.default_access, result);\n          }\n        }\n\n        console.log(\"====================================\");\n        console.log({ vvvvv: this.props.userInfo.default_access });\n        console.log(\"====================================\");\n      }\n\n      if (this.state.selectedRole && this.props.userInfo.default_access) {\n        this.setDefaultState(\n          this.props.userInfo.default_access,\n          this.state.selectedRole\n        );\n      }\n\n      this.setLoading(false);\n    }\n  };\n\n  handleSelectRole = (\n    role_id: string,\n    TYPE: \"SELECT\" | \"DEFAULT\" = \"SELECT\"\n  ) => {\n    if (this.props.roleList) {\n      let result = this.props.roleList.find(\n        (role) => role.system_user_role_id === role_id\n      );\n      if (result) {\n        this.setRoleId(role_id);\n        this.setSelectedRole(result);\n        this.state.formError &&\n          this.state.formError.element === \"role_id\" &&\n          this.setFormError(null);\n\n        if (TYPE === \"SELECT\") {\n          this.setProvinceId(\"\");\n          this.setDistrictId(\"\");\n          this.setSchoolId(\"\");\n          this.setCenterId(\"\");\n          this.setRoomId(\"\");\n          this.setInstituteId(\"\");\n        }\n      }\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.state.roleId.length > 0 &&\n      this.state.selectedRole === null &&\n      this.props.roleList\n    ) {\n      this.handleSelectRole(this.state.roleId, \"DEFAULT\");\n    }\n    if (this.state.selectedRole) {\n      return this.state.selectedRole.access.map((access, i) => (\n        <tr\n          key={i + access.id + Math.random()}\n          className={`text-left border-b border-gray-200 hover:bg-gray-100`}\n        >\n          <td className=\"px-2 py-1\">\n            <label className=\"inline-flex items-center\">\n              <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n                {access.task}\n              </span>\n            </label>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.create ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.create ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n              {access.permitted.view ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.update ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.update ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.delete ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.delete ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n        </tr>\n      ));\n    }\n    const optionB = [\n      <tr key=\"55re\">\n        <td colSpan={5} className=\"text-center px-2 py-2\">\n          No Default Access Available on this Role.\n        </td>\n      </tr>,\n    ];\n    return optionB;\n  };\n\n  assignRoleToUser = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!window.confirm(`Are sure you want to change user role?`)) {\n      return false;\n    }\n\n    if (!this.state.selectedRole) {\n      return this.setFormError({\n        element: \"role_id\",\n        msg: \"User role is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.provinceId)\n    ) {\n      return this.setFormError({\n        element: \"province_id\",\n        msg: \"Province is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.education_institution_required === true &&\n      isEmptyOrSpaces(this.state.instituteId)\n    ) {\n      return this.setFormError({\n        element: \"institute_id\",\n        msg: \"Institute is required on this role!\",\n      });\n    }\n\n    if (\n      (this.state.selectedRole.room_required === true ||\n        this.state.selectedRole.district_required === true) &&\n      isEmptyOrSpaces(this.state.districtId)\n    ) {\n      return this.setFormError({\n        element: \"district_id\",\n        msg: \"District is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.school_required === true &&\n      isEmptyOrSpaces(this.state.schoolId)\n    ) {\n      return this.setFormError({\n        element: \"school_id\",\n        msg: \"School is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.centerId)\n    ) {\n      return this.setFormError({\n        element: \"center_id\",\n        msg: \"Center is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.roomId)\n    ) {\n      return this.setFormError({\n        element: \"room_id\",\n        msg: \"Room is required!\",\n      });\n    }\n    this.setLoadingRequest(true);\n    let formData: AssignRoleToUserActionInterface = {\n      user_id: this.props.userInfo.user_id,\n      data: {\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: this.state.selectedRole.access,\n        school_id: this.state.selectedRole.school_required\n          ? this.state.schoolId\n          : \"\",\n        district_id: this.state.selectedRole.district_required\n          ? this.state.districtId\n          : \"\",\n        room_id: this.state.selectedRole.room_required ? this.state.roomId : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      },\n    };\n\n    try {\n      const res = await axios.post(`${API.AUTH}/addroletouser`, {\n        user_id: this.props.userInfo.user_id,\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: true,\n        school_id:\n          this.state.selectedRole.school_required === true\n            ? this.state.schoolId\n            : \"\",\n        district_id:\n          this.state.selectedRole.district_required === true\n            ? this.state.districtId\n            : \"\",\n        room_id:\n          this.state.selectedRole.room_required === true\n            ? this.state.roomId\n            : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ assignRoleToUser: res });\n        console.log(\"====================================\");\n        this.props.assignRoleToUserAccess(formData, this.props.currentPage);\n        this.setLoadingRequest(false);\n        this.props.setChangeRole(false);\n        this.props.PushPopupAlert({\n          title: \"Assigning Role to User completed successfully\",\n          theme: PopupAlertTheme.success,\n        });\n      }\n    } catch (error) {\n      console.log({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  distinctCenter = (\n    rooms: RoomLocationInterface[],\n    district_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (\n        !ids.includes(element.center_id) &&\n        element.district_id === district_id\n      ) {\n        ids.push(element.center_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  distinctRoom = (\n    rooms: RoomLocationInterface[],\n    center_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (!ids.includes(element.room_id) && element.center_id === center_id) {\n        ids.push(element.room_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  render() {\n    if (\n      this.state.loading === true ||\n      this.state.loadingForm ||\n      this.props.userInfo.default_access === null ||\n      this.state.roleId.length === 0 ||\n      this.state.selectedRole === null\n    ) {\n      return (\n        <div className=\"text-center py-7 font-bold text-3xl text-gray-400 animate-pulse\">\n          Loading...\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 py-2 md:py-4 px-2 md:px-0\">\n        {/* left panel */}\n        <div className=\"col-span-1 bg-white w-full overflow-x-auto border rounded\">\n          <div className=\"px-6 md:px-12 py-5 bg-white mx-auto rounded-2xl w-100\">\n            <h3 className=\"font-semibold text-2xl text-gray-800 mb-4\">\n              Change User Role\n            </h3>\n            {this.state.loadingForm ? (\n              <Loading />\n            ) : (\n              <form onSubmit={(e) => this.assignRoleToUser(e)}>\n                <div className=\"space-y-5\">\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-gray-700 tracking-wide\">\n                      User Role\n                    </label>\n\n                    {!this.state.chooseRole && (\n                      <div\n                        className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                          this.state.formError &&\n                          this.state.formError.element === \"role_id\"\n                            ? \"border-red-500\"\n                            : \"border-gray-400\"\n                        }`}\n                        onClick={() => {\n                          !this.state.loadingRequest &&\n                            this.setChooseRole(true);\n                          !this.state.loadingRequest && this.setFormError(null);\n                        }}\n                      >\n                        {this.state.selectedRole\n                          ? this.state.selectedRole.role\n                          : \"Select role\"}\n                      </div>\n                    )}\n\n                    {this.state.chooseRole && (\n                      <RoleList\n                        setChooseRole={this.setChooseRole}\n                        handleSelectRole={this.handleSelectRole}\n                        roleList={this.props.roleList}\n                        loadindRequest={this.state.loadingRequest}\n                      />\n                    )}\n\n                    {this.state.formError &&\n                      this.state.formError.element === \"role_id\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.education_institution_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Institute\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"institute_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setInstituteId(e.target.value);\n                            this.setProvinceId(\"\");\n                            this.setDistrictId(\"\");\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                            this.state.formError &&\n                              this.state.formError.element === \"institute_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.instituteId}\n                        >\n                          <option value=\"\">Select institute</option>\n                          {this.props.schoolLevels.education_categories &&\n                          this.props.schoolLevels.education_categories.length >\n                            0 ? (\n                            this.props.schoolLevels.education_categories.map(\n                              (institute) => (\n                                <option\n                                  value={institute.education_institute_id}\n                                  key={\n                                    institute.education_institute_id +\n                                    Math.random()\n                                  }\n                                >\n                                  {institute.education_category_title}\n                                </option>\n                              )\n                            )\n                          ) : (\n                            <option value=\"\" disabled>\n                              No institute available\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"institute_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Province\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"province_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setProvinceId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"province_id\" &&\n                              this.setFormError(null);\n                            this.setDistrictId(\"\");\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.provinceId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select province</option>\n                          {this.props.roomList &&\n                            this.props.roomList.map((province) => (\n                              <option\n                                key={province._id + Math.random()}\n                                value={province._id}\n                              >\n                                {province.province_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"province_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    (this.state.selectedRole.district_required ||\n                      this.state.selectedRole.room_required) && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          District\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"district_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setDistrictId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"district_id\" &&\n                              this.setFormError(null);\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.districtId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select district</option>\n                          {this.props.roomList &&\n                          this.distinctDistrict(\n                            this.props.roomList,\n                            !isEmptyOrSpaces(this.state.provinceId)\n                              ? this.state.provinceId\n                              : undefined\n                          ).length > 0 ? (\n                            this.distinctDistrict(\n                              this.props.roomList,\n                              !isEmptyOrSpaces(this.state.provinceId)\n                                ? this.state.provinceId\n                                : undefined\n                            ).map((district) => (\n                              <option\n                                key={district._id + Math.random()}\n                                value={district._id}\n                              >\n                                {district.district_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No district found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"district_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.school_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          School\n                        </label>\n                        {/* {!this.state.chooseSchool && (\n                          <div\n                            className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                              this.state.formError &&\n                              this.state.formError.element === \"school_id\"\n                                ? \"border-red-500\"\n                                : \"border-gray-400\"\n                            }`}\n                            onClick={() => {\n                              !this.state.loadingRequest &&\n                                this.setChooseSchool(true);\n                              !this.state.loadingRequest &&\n                                this.setFormError(null);\n                            }}\n                          >\n                            {this.state.schoolId\n                              ? this.state.schoolId\n                              : \"Select school\"}\n                          </div>\n                        )}\n\n                        {this.state.chooseSchool && (\n                          <ChooseSchoolById\n                            allSchool={this.props.schoolList}\n                            setSelectSchool={(school_id: string) => {\n                              this.setSchoolId(school_id);\n                              this.state.formError &&\n                                this.state.formError.element === \"school_id\" &&\n                                this.setFormError(null);\n                              this.setCenterId(\"\");\n                              this.setRoomId(\"\");\n                            }}\n                            currentSelected={this.state.schoolId}\n                            setChooseSchool={this.setChooseSchool}\n                          />\n                        )} */}\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"school_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setSchoolId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"school_id\" &&\n                              this.setFormError(null);\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.schoolId}\n                        >\n                          <option value=\"\">Selected school</option>\n                          {this.props.schoolList &&\n                            this.props.schoolList.map((school) => (\n                              <option\n                                value={school._id}\n                                key={school._id + Math.random()}\n                              >\n                                {school.school_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"school_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Center\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"center_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setCenterId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"center_id\" &&\n                              this.setFormError(null);\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.centerId}\n                        >\n                          <option value=\"\">Select center</option>\n                          {this.state.districtId &&\n                          this.state.districtId.length > 0 &&\n                          this.props.roomList &&\n                          this.distinctCenter(\n                            this.props.roomList,\n                            this.state.districtId\n                          ).length > 0 ? (\n                            this.distinctCenter(\n                              this.props.roomList,\n                              this.state.districtId\n                            ).map((center, index) => (\n                              <option\n                                value={center.center_id}\n                                key={center.center_id + index + Math.random()}\n                              >\n                                {center.center_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No center found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"center_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Room\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"room_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setRoomId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"room_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.roomId}\n                        >\n                          <option value=\"\">Select room</option>\n                          {!isEmptyOrSpaces(this.state.centerId) &&\n                          this.props.roomList &&\n                          this.distinctRoom(\n                            this.props.roomList,\n                            this.state.centerId\n                          ).length > 0 ? (\n                            this.distinctRoom(\n                              this.props.roomList,\n                              this.state.centerId\n                            ).map((room, index) => (\n                              <option\n                                value={room.room_id}\n                                key={room.room_id + index + Math.random()}\n                                className={`${\n                                  room.room_name === \"0\" ? \"hidden\" : \"block\"\n                                }`}\n                              >\n                                {room.room_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No room found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"room_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  <div className=\"flex justify-between 2xl:justify-start gap-2\">\n                    <button\n                      className=\"btn bg-gray-500 text-gray-50 focus:outline-none\"\n                      onClick={() => {\n                        this.props.setChangeRole(false);\n                        this.setFormError(null);\n                        this.setProvinceId(\"\");\n                        this.setDistrictId(\"\");\n                        this.setSchoolId(\"\");\n                        this.setCenterId(\"\");\n                        this.setRoomId(\"\");\n                      }}\n                      disabled={this.state.loadingRequest}\n                    >\n                      Back\n                    </button>\n                    <button\n                      className=\"btn btn-blue focus:outline-none\"\n                      // onClick={() => assignRoleToUser()}\n                      disabled={this.state.loadingRequest}\n                    >\n                      {this.state.loadingRequest ? \"Loading...\" : \"Save Change\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n          </div>\n        </div>\n        {/* end left panel */}\n\n        {/* ------------------------------------------------------------ */}\n\n        {/* right panel */}\n        <div className=\"cols-span-1 md:col-span-2 bg-white w-full border rounded text-center p-2 hidden md:block\">\n          <div className=\"my-4\">\n            <span className=\"text-gray-600 font-semibold text-2xl\">\n              {this.state.selectedRole?.role}'s Default Access\n            </span>\n          </div>\n          {!this.state.loading && (\n            <div className=\"overflow-x-auto w-full\">\n              <Table\n                columns={[\n                  {\n                    columnTitle: \"Access Name\",\n                    alignText: \"left\",\n                    padding: \"p-3\",\n                  },\n                  { columnTitle: \"Create\", alignText: \"left\" },\n                  { columnTitle: \"View\", alignText: \"left\" },\n                  { columnTitle: \"Update\", alignText: \"left\" },\n                  { columnTitle: \"Delete\", alignText: \"left\" },\n                ]}\n                rows={this.tableData}\n                pagination={false}\n                search={false}\n                searchBG=\"bg-gray-50\"\n                thColor=\"gray\"\n                tableId=\"defaultAccess\"\n              />\n            </div>\n          )}\n        </div>\n        {/* end right panel */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return { schoolLevels };\n};\n\nexport default connect(mapStateToProps, {\n  assignRoleToUserAccess,\n  PushPopupAlert,\n})(UserRole);\n","export default __webpack_public_path__ + \"static/media/blank_profile.c3f94521.png\";","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { BiRightArrowAlt } from \"react-icons/bi\";\nimport {\n  MdDelete,\n  MdEdit,\n  MdHighlightOff,\n  MdRemoveRedEye,\n  MdSettings,\n} from \"react-icons/md\";\nimport { SiAddthis } from \"react-icons/si\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { customizeUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport {\n  UserInterface,\n  AccessTaskInterface,\n  CustomeAccessInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\n\ninterface AppProps {\n  userInfo: UserInterface | undefined;\n  manageUserId: string;\n  setUserAccess: (value: AccessTaskInterface[] | null) => void;\n  userAccess: AccessTaskInterface[] | null;\n  setCurrentAccess: (value: AccessTaskInterface | null) => void;\n  currentAccess: AccessTaskInterface | null;\n  currentPage: number;\n\n  // REDUX ==============\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  customizeUserAccess: Function;\n}\n\ninterface AppStates {\n  loading: boolean;\n  loadindRequest: boolean;\n  // currentAccess:AccessTaskInterface | null;\n  // userAccess:AccessTaskInterface[] | null;\n  createPermission: boolean;\n  viewPermission: boolean;\n  updatePermission: boolean;\n  deletePermission: boolean;\n}\n\nclass _UserAccess extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadindRequest: false,\n      // currentAccess:null,\n      // userAccess:null,\n      createPermission: false,\n      viewPermission: false,\n      updatePermission: false,\n      deletePermission: false,\n    };\n  }\n\n  setViewPermission = (value: boolean) => {\n    this.setState({ viewPermission: value });\n  };\n\n  setLoadindRequest = (value: boolean) => {\n    this.setState({ loadindRequest: value });\n  };\n\n  setCreatePermission = (value: boolean) => {\n    this.setState({ createPermission: value });\n  };\n\n  setUpdatePermission = (value: boolean) => {\n    this.setState({ updatePermission: value });\n  };\n\n  setDeletePermission = (value: boolean) => {\n    this.setState({ deletePermission: value });\n  };\n\n  setLoadind = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  overrideUserAccess = (\n    default_access: AccessTaskInterface[],\n    custome_access: AccessTaskInterface[]\n  ) => {\n    if (default_access && custome_access && custome_access.length > 0) {\n      let overideAccess: AccessTaskInterface[] = [];\n      for (const key in default_access) {\n        if (Object.prototype.hasOwnProperty.call(default_access, key)) {\n          const findCustom = custome_access.find(\n            (custom) => custom.id === default_access[key].id\n          );\n          if (findCustom) {\n            overideAccess.push(findCustom);\n          } else {\n            overideAccess.push(default_access[key]);\n          }\n        }\n      }\n      this.props.setUserAccess(overideAccess);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.userInfo && this.props.userInfo.custome_access) {\n      this.props.userInfo.default_access &&\n        this.overrideUserAccess(\n          this.props.userInfo.default_access.access,\n          this.props.userInfo.custome_access.access\n        );\n      this.setLoadind(false);\n    } else {\n      this.props.userInfo &&\n        this.props.userInfo.default_access &&\n        this.props.setUserAccess(this.props.userInfo.default_access.access);\n      this.setLoadind(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (!this.props.userAccess)\n      return [\n        <tr key={Math.random()}>\n          <td>No data</td>\n        </tr>,\n      ];\n    return this.props.userAccess.map((access: AccessTaskInterface, i) => (\n      <tr\n        key={i + access.id + Math.random()}\n        className={`text-left border-b border-gray-200 cursor-pointer hover:bg-gray-100 ${\n          this.props.currentAccess &&\n          this.props.currentAccess.id === access.id &&\n          \"bg-gray-200 border my-3 hover:bg-gray-100\"\n        }`}\n        onClick={() =>\n          this.props.currentAccess && this.props.currentAccess.id === access.id\n            ? (this.props.setCurrentAccess(null),\n              this.setCreatePermission(false),\n              this.setViewPermission(false),\n              this.setUpdatePermission(false),\n              this.setDeletePermission(false))\n            : (this.props.setCurrentAccess(access),\n              this.setCreatePermission(access.permitted.create),\n              this.setViewPermission(access.permitted.view),\n              this.setUpdatePermission(access.permitted.update),\n              this.setDeletePermission(access.permitted.delete))\n        }\n      >\n        <td className=\"px-2 py-1\">\n          <label className=\"inline-flex items-center\">\n            {/* <input\n              type=\"radio\"\n              name=\"taskAccess\"\n              value={access.id}\n              className=\"form-radio h-4 w-4 text-gray-600\"\n              onChange={() => {\n                currentAccess\n                  ? this.setState({ currentAccess: null })\n                  : this.setState({ currentAccess: access });\n              }}\n              checked={currentAccess ? true : false}\n            /> */}\n            <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n              {access.task}\n            </span>\n          </label>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.create ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.create ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.view ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.update ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.update ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.delete ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.delete ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  handleCustomization = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.props.userInfo) {\n      this.setLoadindRequest(true);\n      let task: [] | CustomeAccessInterface | null = null;\n      task = this.props.userInfo.custome_access;\n      let index = -1;\n\n      try {\n        if (task && this.props.currentAccess) {\n          index = task.access.findIndex(\n            (access) => access.id === this.props.currentAccess!.id\n          );\n          if (index >= 0) {\n            task.access[index].permitted.create = this.state.createPermission;\n            task.access[index].permitted.view = this.state.viewPermission;\n            task.access[index].permitted.update = this.state.updatePermission;\n            task.access[index].permitted.delete = this.state.deletePermission;\n          } else {\n            task.access.push({\n              id: this.props.currentAccess.id,\n              task: this.props.currentAccess.task,\n              key: this.props.currentAccess.key,\n              permitted: {\n                create: this.state.createPermission,\n                view: this.state.viewPermission,\n                update: this.state.updatePermission,\n                delete: this.state.deletePermission,\n              },\n            });\n          }\n        } else if (this.props.currentAccess) {\n          task = {\n            access: [\n              {\n                id: this.props.currentAccess.id,\n                task: this.props.currentAccess.task,\n                key: this.props.currentAccess.key,\n                permitted: {\n                  create: this.state.createPermission,\n                  view: this.state.viewPermission,\n                  update: this.state.updatePermission,\n                  delete: this.state.deletePermission,\n                },\n              },\n            ],\n            user_id: this.props.userInfo.user_id,\n            custome_user_access_id: \"\",\n          };\n        }\n\n        if (task) {\n          let res;\n          if (this.props.userInfo.custome_access !== null) {\n            res = await axios.patch<{ data: CustomeAccessInterface }>(\n              `${API.AUTH}/custaccess`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          } else {\n            res = await axios.post<{ data: CustomeAccessInterface }>(\n              `${API.AUTH}/custaccess`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          }\n\n          if (res) {\n            task.custome_user_access_id = res.data.data.custome_user_access_id;\n\n            this.props.customizeUserAccess(task, this.props.currentPage);\n            task &&\n              this.props.userInfo.default_access &&\n              this.overrideUserAccess(\n                this.props.userInfo.default_access.access,\n                task.access\n              );\n            this.props.PushPopupAlert({\n              title: `Resetting User Access complete successfully`,\n              theme: PopupAlertTheme.info,\n            });\n\n            task = null;\n            this.props.setCurrentAccess(null);\n            this.setCreatePermission(false);\n            this.setViewPermission(false);\n            this.setUpdatePermission(false);\n            this.setDeletePermission(false);\n          }\n        }\n      } catch (error) {\n        console.error({ customize_access: error });\n        this.props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      this.setLoadindRequest(false);\n    }\n  };\n\n  render() {\n    if (this.props.userInfo === undefined) {\n      return <Redirect to=\"/users\" />;\n    }\n\n    if (this.state.loading || this.props.userInfo === null) {\n      return (\n        <div className=\"text-center py-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading User Access...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mx-1 my-2\">\n          <div\n            className={`col-span-1 md:col-span-3 bg-white w-full overflow-x-auto border rounded text-center p-2 ${\n              this.props.currentAccess ? \"hidden md:block\" : \"\"\n            }`}\n          >\n            <span className=\"text-gray-600 mt-2 font-semibold text-2xl\">\n              Settings\n            </span>\n            {!this.state.loading && (\n              <div className=\"overflow-x-auto w-full\">\n                <Table\n                  columns={[\n                    {\n                      columnTitle: \"Access Name\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Create\", alignText: \"left\" },\n                    { columnTitle: \"View\", alignText: \"left\" },\n                    { columnTitle: \"Update\", alignText: \"left\" },\n                    { columnTitle: \"Delete\", alignText: \"left\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  searchBG=\"bg-gray-50\"\n                  thColor=\"gray\"\n                />\n              </div>\n            )}\n          </div>\n          <div className={`col-span-1 md:col-span-2`}>\n            {!this.props.currentAccess ? (\n              <div className=\"w-full hidden md:flex flex-col items-center text-gray-600 gap-1 py-3\">\n                <MdSettings className=\"w-20 h-20\" />\n                <span className=\"text-8 md:text-12\">\n                  Choose Access to Customize\n                </span>\n              </div>\n            ) : (\n              <div className={``}>\n                <h1 className=\"text-2xl md:text-3xl font-semibold text-center my-2 text-gray-900\">\n                  Customize User Access\n                </h1>\n                <div className=\"flex justify-center mb-3\">\n                  <h2 className=\"text-2xl font-semibold text-center text-gray-600 flex flex-row items-center\">\n                    <BiRightArrowAlt className=\"w-7 h-7\" />\n                    {this.props.currentAccess.task}\n                  </h2>\n                </div>\n\n                <div className=\"flex flex-col px-2 md:px-1\">\n                  <form\n                    className=\"flex flex-col items-center\"\n                    onSubmit={(e) => this.handleCustomization(e)}\n                  >\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <SiAddthis className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Create</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to create\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setCreatePermission(!this.state.createPermission)\n                        }\n                        checked={this.state.createPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdRemoveRedEye className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">View</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-4\">\n                          This permission gives the user the ability to view\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setViewPermission(!this.state.viewPermission)\n                        }\n                        checked={this.state.viewPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdEdit className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Update</h3>\n                        <span className=\"text-gray-600 text-sm\">\n                          This permission gives the user the ability to update\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setUpdatePermission(!this.state.updatePermission)\n                        }\n                        checked={this.state.updatePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdDelete className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Delete</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to delete\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setDeletePermission(!this.state.deletePermission)\n                        }\n                        checked={this.state.deletePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n\n                    <div className=\"flex items-center justify-center w-full py-3 gap-2\">\n                      {/* <button className=\"btn btn-secondary bg-red-600\">Back</button> */}\n                      <button\n                        className=\"btn bg-gray-500 hover:bg-gray-700 focus:outline-none text-white\"\n                        disabled={this.state.loadindRequest}\n                        onClick={() => {\n                          this.props.setCurrentAccess(null);\n                          this.setCreatePermission(false);\n                          this.setViewPermission(false);\n                          this.setUpdatePermission(false);\n                          this.setDeletePermission(false);\n                        }}\n                      >\n                        Cancel\n                      </button>\n                      <button\n                        className=\"btn btn-blue\"\n                        disabled={this.state.loadindRequest}\n                      >\n                        {!this.state.loadindRequest\n                          ? \"Save Change\"\n                          : \"Processing..\"}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const UserAccess = connect(null, {\n  customizeUserAccess,\n  PushPopupAlert,\n})(_UserAccess);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  FC_CreateDistrict,\n  FC_DeleteDistrict,\n  FC_UpdateDistrict,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisProvince: RoomLocationInterface;\n  thisDistrict: DistrictInterface | null;\n  loadingRequest: boolean;\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisDistrict: React.Dispatch<\n    React.SetStateAction<DistrictInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateDistrict: Function;\n  FC_UpdateDistrict: Function;\n  FC_DeleteDistrict: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewDistrict: React.FC<AppProps> = (props) => {\n  const [districtName, setDistrictName] = useState<string>(\"\");\n  const [districtCode, setDistrictCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(districtName)) {\n      return setError({\n        element: \"district_name\",\n        msg: \"District name is required\",\n      });\n    }\n\n    if (districtCode <= 0) {\n      return setError({\n        element: \"district_code\",\n        msg: \"Invalid district code, code must be greater than 0\",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_DISTRICT\") {\n        res = await axios.post<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/district`,\n          {\n            province_id: props.thisProvince._id,\n            province_code: props.thisProvince.province_code,\n            district_name: districtName,\n            district_code: districtCode,\n            centers: [],\n          }\n        );\n        if (res.data) {\n          console.log({\n            province_id: props.thisProvince._id,\n            data: res.data.data,\n            res,\n          });\n          props.FC_CreateDistrict({\n            province_id: props.thisProvince._id,\n            data: {\n              centers: res.data.data.centers,\n              sectors: res.data.data.sectors,\n              province_code: res.data.data.province_code,\n              province_id: res.data.data.province_id,\n              district_code: res.data.data.district_code,\n              district_name: res.data.data.district_name,\n              district_id: res.data.data._id,\n            },\n          });\n          props.PushPopupAlert({\n            title: \"New district created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setDistrictName(\"\");\n          setDistrictCode(0);\n        }\n      } else if (\n        props.thisDistrict &&\n        props.actionTypes === \"UPDATE_DISTRICT\"\n      ) {\n        const centers: string[] = props.thisDistrict.centers.map(\n          (center) => center._id\n        );\n        res = await axios.patch<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/district`,\n          {\n            district_id: props.thisDistrict._id,\n            province_code: props.thisProvince.province_code,\n            district_name: districtName,\n            district_code: districtCode,\n            centers,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateDistrict({\n            province_id: props.thisProvince._id,\n            district_id: props.thisDistrict._id,\n            district_name: districtName,\n          });\n          props.PushPopupAlert({\n            title: \"District updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setDistrictName(\"\");\n          props.setThisDistrict(null);\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  // const handleDelete = async (districtId: string) => {\n  //   try {\n  //     const res = await axios.delete<DistrictInterface>(\n  //       `${API.APPLICATION}/district/${districtId}`\n  //     );\n\n  //     if (res.data) {\n  //       props.FC_DeleteDistrict({\n  //         province_id: props.thisProvince._id,\n  //         district_id: districtId,\n  //       });\n  //       props.PushPopupAlert({\n  //         title: \"District deleted successfully\",\n  //         theme: PopupAlertTheme.success,\n  //       });\n  //       props.setLoadingRequest(false);\n  //       props.setActionTypes(null);\n  //     }\n  //   } catch (error) {\n  //     console.log({ district_error: error });\n  //     props.PushPopupAlert({\n  //       title: errorToText(error),\n  //       theme: PopupAlertTheme.danger,\n  //     });\n  //     props.setLoadingRequest(false);\n  //   }\n  // };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.thisProvince.districts.length > 0 ? (\n        <div className=\"rounded border border-gray-100 shadow-sm animate__animated animate__fadeIn\">\n          <table className=\"w-full z-0\">\n            <thead className=\"bg-gray-50\">\n              <tr className=\"text-left\">\n                <th className=\"px-3 py-3\">#</th>\n                <th>District name</th>\n                <th>District code</th>\n                <th>Sectors</th>\n                {/* <th>Status</th> */}\n              </tr>\n            </thead>\n            <tbody className=\"text-base\">\n              {props.thisProvince.districts.map((district, index) => (\n                <tr\n                  key={index + district._id}\n                  className={`text-left border-b border-gray-50`}\n                >\n                  <td className=\"px-3 py-1\">{index + 1}</td>\n                  <td>{district.district_name}</td>\n                  <td>{district.district_code}</td>\n                  <td>\n                    {district.sectors && district.sectors.length > 0\n                      ? district.sectors.length + \" Sector(s)\"\n                      : \"\"}\n                  </td>\n                  {/* <td>\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        title={\n                          props.thisDistrict &&\n                          props.thisDistrict._id === district._id\n                            ? \"Close Centers\"\n                            : \"View Centers\"\n                        }\n                        className={`${\n                          props.thisDistrict &&\n                          props.thisDistrict._id === district._id\n                            ? \"bg-gray-500 hover:bg-gray-600\"\n                            : \"bg-gray-400 hover:bg-gray-500\"\n                        } p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none`}\n                        onClick={() =>\n                          !props.thisDistrict ||\n                          props.thisDistrict._id !== district._id\n                            ? props.setThisDistrict(district)\n                            : props.setThisDistrict(null)\n                        }\n                      >\n                        {props.thisDistrict &&\n                        props.thisDistrict._id === district._id ? (\n                          <IoMdEyeOff className=\"text-white w-4 h-4\" />\n                        ) : (\n                          <IoMdEye className=\"text-white w-4 h-4\" />\n                        )}\n                      </button>\n                      <button\n                        title=\"Update district\"\n                        className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => {\n                          props.setThisDistrict(district);\n                          setDistrictName(district.district_name);\n                          setDistrictCode(district.district_code);\n                          props.setActionTypes(\"UPDATE_DISTRICT\");\n                        }}\n                        disabled={\n                          props.loadingRequest || props.actionTypes !== null\n                        }\n                      >\n                        <MdCreate className=\"text-white w-4 h-4\" />\n                      </button>\n                      <button\n                        title=\"Delete Sub-Category\"\n                        className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => handleDelete(district._id)}\n                        disabled={props.loadingRequest}\n                      >\n                        <MdClear className=\"text-white w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td> */}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value={\"No district found!\"}\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_DISTRICT\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add district\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_DISTRICT\" ||\n          props.actionTypes === \"UPDATE_DISTRICT\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setDistrictName(\"\");\n              setDistrictCode(10);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  {/* <p className=\"text-base text-gray-500 font-medium\">\n                    You are{\" \"}\n                    {actionType === \"CREATE_SUB\" || \"CREATE_CAT\"\n                      ? \"creating\"\n                      : \"updating\"}\n                  </p> */}\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_DISTRICT\"\n                      ? \"CREATING NEW DISTRICT\"\n                      : props.actionTypes === \"UPDATE_DISTRICT\" &&\n                        \"UPDATING EXISTING DISTRICT\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-5 mb-4\">\n              <div className=\"py-2 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>District name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"district_name\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"district_name\" &&\n                        setError(null);\n                      setDistrictName(e.target.value);\n                    }}\n                    value={districtName}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"district_name\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>District code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"district_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"district_code\" &&\n                        setError(null);\n                      setDistrictCode(Number(e.target.value));\n                    }}\n                    value={districtCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"district_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setDistrictName(\"\");\n                    setDistrictCode(10);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default connect(null, {\n  FC_CreateDistrict,\n  FC_UpdateDistrict,\n  FC_DeleteDistrict,\n  PushPopupAlert,\n})(ViewDistrict);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { IoMdEye, IoMdEyeOff } from \"react-icons/io\";\nimport {\n  FC_CreateProvince,\n  FC_DeleteProvince,\n  FC_UpdateProvince,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisProvince: RoomLocationInterface | null;\n  thisDistrict: DistrictInterface | null;\n  loadingRequest: boolean;\n  locations: RoomLocationInterface[];\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisProvince: React.Dispatch<\n    React.SetStateAction<RoomLocationInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateProvince: Function;\n  FC_UpdateProvince: Function;\n  FC_DeleteProvince: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewProvince: React.FC<AppProps> = (props) => {\n  const [provinceTitle, setProvinceTitle] = useState<string>(\"\");\n  const [provinceCode, setProvinceCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(provinceTitle)) {\n      return setError({\n        element: \"province_title\",\n        msg: \"Title of Province is required\",\n      });\n    }\n\n    if (provinceCode <= 0) {\n      return setError({\n        element: \"province_code\",\n        msg: \"Code of Province is required\",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_PROVINCE\") {\n        res = await axios.post<{ data: RoomLocationInterface }>(\n          `${API.APPLICATION}/province`,\n          {\n            province_name: provinceTitle,\n            province_code: provinceCode,\n            districts: [],\n          }\n        );\n\n        if (res.data) {\n          props.FC_CreateProvince(res.data.data);\n          props.PushPopupAlert({\n            title: \"New Province created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setProvinceTitle(\"\");\n        }\n      } else if (\n        props.thisProvince &&\n        props.actionTypes === \"UPDATE_PROVINCE\"\n      ) {\n        const districts: string[] = props.thisProvince.districts.map(\n          (district) => district._id\n        );\n        res = await axios.patch<{ updated: RoomLocationInterface }>(\n          `${API.APPLICATION}/province`,\n          {\n            province_id: props.thisProvince._id,\n            province_name: provinceTitle,\n            province_code: provinceCode,\n            districts,\n          }\n        );\n        if (res.data) {\n          console.log({ res: res.data.updated });\n          props.FC_UpdateProvince(res.data.updated);\n          props.PushPopupAlert({\n            title: \"Province updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setProvinceTitle(\"\");\n          props.setThisProvince(null);\n        }\n      }\n    } catch (error) {\n      console.error({ province_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  // const handleDelete = async (provinceId: string) => {\n  //   try {\n  //     const res = await axios.delete<RoomLocationInterface>(\n  //       `${API.APPLICATION}/province/${provinceId}`\n  //     );\n\n  //     if (res.data) {\n  //       console.log({ res });\n  //       props.FC_DeleteProvince(provinceId);\n  //       props.PushPopupAlert({\n  //         title: \"Province deleted successfully\",\n  //         theme: PopupAlertTheme.success,\n  //       });\n  //       props.setLoadingRequest(false);\n  //       props.setActionTypes(null);\n  //     }\n  //   } catch (error) {\n  //     console.log({ province_error: error });\n  //     props.PushPopupAlert({\n  //       title: errorToText(error),\n  //       theme: PopupAlertTheme.danger,\n  //     });\n  //     props.setLoadingRequest(false);\n  //   }\n  // };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.locations.length > 0 ? (\n        props.locations.map((province, index) => (\n          <div\n            key={index + province._id}\n            className=\"flex justify-between items-center p-2 mb-3 rounded border border-gray-100 shadow\"\n          >\n            <div className=\"flex items-center\">\n              <div className=\"ml-2\">\n                <div className=\"text-xl font-semibold text-gray-600\">\n                  {province.province_name}\n                </div>\n                <div className=\"text-sm font-light text-gray-500\">\n                  {province.districts.length > 0\n                    ? province.districts.length + \"District(s)\"\n                    : null}\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <button\n                title={\n                  props.thisProvince &&\n                  props.thisProvince._id === province._id &&\n                  props.actionTypes !== \"UPDATE_PROVINCE\"\n                    ? \"Close Districts\"\n                    : \"View Districts\"\n                }\n                className={`${\n                  props.thisProvince &&\n                  props.thisProvince._id === province._id &&\n                  props.actionTypes !== \"UPDATE_PROVINCE\"\n                    ? \"bg-gray-500 hover:bg-gray-600\"\n                    : \"bg-gray-400 hover:bg-gray-500\"\n                } p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none`}\n                onClick={() => {\n                  !props.thisProvince || props.thisProvince._id !== province._id\n                    ? props.setThisProvince(province)\n                    : props.setThisProvince(null);\n                  setProvinceTitle(\"\");\n                  props.setActionTypes(null);\n                }}\n              >\n                {props.thisProvince &&\n                props.thisProvince._id === province._id &&\n                props.actionTypes !== \"UPDATE_PROVINCE\" ? (\n                  <IoMdEyeOff className=\"text-white w-4 h-4\" />\n                ) : (\n                  <IoMdEye className=\"text-white w-4 h-4\" />\n                )}\n              </button>\n              {/* <button\n                title=\"Update Province\"\n                className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                onClick={() => {\n                  props.setThisProvince(province);\n                  setProvinceTitle(province.province_name);\n                  setProvinceCode(province.province_code);\n                  props.setActionTypes(\"UPDATE_PROVINCE\");\n                }}\n                disabled={props.loadingRequest || props.actionTypes !== null}\n              >\n                <MdCreate className=\"text-white w-4 h-4\" />\n              </button>\n              <button\n                title=\"Delete Sub-Category\"\n                className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                onClick={() => handleDelete(province._id)}\n                disabled={props.loadingRequest || props.actionTypes !== null}\n              >\n                <MdClear className=\"text-white w-4 h-4\" />\n              </button> */}\n            </div>\n          </div>\n        ))\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value=\"No province found!\"\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_PROVINCE\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add province\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_PROVINCE\" ||\n          props.actionTypes === \"UPDATE_PROVINCE\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setProvinceTitle(\"\");\n              setProvinceCode(0);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_PROVINCE\"\n                      ? \"CREATING NEW PROVINCE\"\n                      : props.actionTypes === \"UPDATE_PROVINCE\" &&\n                        \"UPDATING EXISTING PROVINCE\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-5 mb-4\">\n              <div className=\"py-2 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>Province name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"province_title\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"province_title\" &&\n                        setError(null);\n                      setProvinceTitle(e.target.value);\n                    }}\n                    value={provinceTitle}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"province_title\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>Province code {props.loadingRequest && \"TRUE\"}</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"province_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"province_code\" &&\n                        setError(null);\n                      setProvinceCode(Number(e.target.value));\n                    }}\n                    value={provinceCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"province_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setProvinceTitle(\"\");\n                    setProvinceCode(0);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default connect(null, {\n  FC_CreateProvince,\n  FC_UpdateProvince,\n  FC_DeleteProvince,\n  PushPopupAlert,\n})(ViewProvince);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { MdClear, MdCreate } from \"react-icons/md\";\nimport {\n  FC_CreateSector,\n  FC_DeleteSector,\n  FC_UpdateSector,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { DistrictInterface, SectorInterface } from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisDistrict: DistrictInterface;\n  thisSector: SectorInterface | null;\n  loadingRequest: boolean;\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisSector: React.Dispatch<React.SetStateAction<SectorInterface | null>>;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateSector: Function;\n  FC_UpdateSector: Function;\n  FC_DeleteSector: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewSectors: React.FC<AppProps> = (props) => {\n  const [sectorName, setSectorName] = useState<string>(\"\");\n  const [sectorCode, setSectorCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(sectorName)) {\n      return setError({\n        element: \"sector_name\",\n        msg: \"Sector name is required\",\n      });\n    }\n\n    if (sectorCode <= 0) {\n      return setError({\n        element: \"sector_code\",\n        msg: \"Invalid sector code, must be \",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_SECTOR\") {\n        res = await axios.post<{ data: SectorInterface }>(\n          `${API.APPLICATION}/sector`,\n          {\n            district_id: props.thisDistrict._id,\n            district_code: props.thisDistrict.district_code,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          }\n        );\n        if (res.data) {\n          console.log({\n            district_id: props.thisDistrict._id,\n            data: res.data.data,\n            res,\n          });\n          props.FC_CreateSector({\n            province_id: props.thisDistrict.province_id,\n            district_id: props.thisDistrict._id,\n            data: {\n              district_id: res.data.data.district_id,\n              district_code: res.data.data.district_code,\n              sector_name: res.data.data.sector_name,\n              sector_code: res.data.data.sector_code,\n              sector_id: res.data.data.sector_id,\n            },\n          });\n          props.PushPopupAlert({\n            title: \"New sector created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setSectorName(\"\");\n        }\n      } else if (props.thisSector && props.actionTypes === \"UPDATE_SECTOR\") {\n        res = await axios.patch<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/sector`,\n          {\n            district_id: props.thisSector.district_id,\n            district_code: props.thisDistrict.district_code,\n            sector_id: props.thisSector.sector_id,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateSector({\n            province_id: props.thisDistrict.province_id,\n            district_id: props.thisSector.district_id,\n            sector_id: props.thisSector.sector_id,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          });\n          props.PushPopupAlert({\n            title: \"Sector updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setSectorName(\"\");\n          props.setThisSector(null);\n        }\n      }\n    } catch (error) {\n      console.log({ sector_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const handleDelete = async (sectorId: string) => {\n    try {\n      const res = await axios.delete<SectorInterface>(\n        `${API.APPLICATION}/sector/${sectorId}`\n      );\n\n      if (res.data) {\n        props.FC_DeleteSector({\n          province_id: props.thisDistrict.province_id,\n          district_id: props.thisDistrict._id,\n          sector_id: sectorId,\n        });\n        props.PushPopupAlert({\n          title: \"Sector deleted successfully\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setLoadingRequest(false);\n        props.setActionTypes(null);\n      }\n    } catch (error) {\n      console.log({ district_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.thisDistrict.sectors && props.thisDistrict.sectors.length > 0 ? (\n        <div className=\"rounded border border-gray-100 shadow-sm animate__animated animate__fadeIn\">\n          <table className=\"w-full z-0\">\n            <thead className=\"bg-gray-50\">\n              <tr className=\"text-left\">\n                <th className=\"px-3 py-3\">#</th>\n                <th>Sector name</th>\n                <th>Sector code</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody className=\"text-sm\">\n              {props.thisDistrict.sectors.map((sector, index) => (\n                <tr\n                  key={index + sector.district_id}\n                  className={`text-left border-b border-gray-50`}\n                >\n                  <td className=\"px-3 py-1\">{index + 1}</td>\n                  <td>{sector.sector_name}</td>\n                  <td>{sector.sector_name}</td>\n                  <td>\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        title=\"Update sector\"\n                        className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => {\n                          props.setThisSector(sector);\n                          setSectorName(sector.sector_name);\n                          setSectorCode(sector.sector_code);\n                          props.setActionTypes(\"UPDATE_SECTOR\");\n                        }}\n                        disabled={\n                          props.loadingRequest || props.actionTypes !== null\n                        }\n                      >\n                        <MdCreate className=\"text-white w-4 h-4\" />\n                      </button>\n                      <button\n                        title=\"Delete sector\"\n                        className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => handleDelete(sector.sector_id)}\n                        disabled={props.loadingRequest}\n                      >\n                        <MdClear className=\"text-white w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value={\"No sector found!\"}\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_SECTOR\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add sector\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_SECTOR\" ||\n          props.actionTypes === \"UPDATE_SECTOR\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setSectorName(\"\");\n              setSectorCode(0);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  {/* <p className=\"text-base text-gray-500 font-medium\">\n                    You are{\" \"}\n                    {actionType === \"CREATE_SUB\" || \"CREATE_CAT\"\n                      ? \"creating\"\n                      : \"updating\"}\n                  </p> */}\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_SECTOR\"\n                      ? \"CREATING NEW SECTOR\"\n                      : props.actionTypes === \"UPDATE_SECTOR\" &&\n                        \"UPDATING EXISTING SECTOR\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"w-full px-5 mb-5\">\n              <div className=\"py-3 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>Sector name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"sector_name\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"sector_name\" &&\n                        setError(null);\n                      setSectorName(e.target.value);\n                    }}\n                    value={sectorName}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"sector_name\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>Sector code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"sector_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"sector_code\" &&\n                        setError(null);\n                      setSectorCode(Number(e.target.value));\n                    }}\n                    value={sectorCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"sector_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setSectorName(\"\");\n                    setSectorCode(0);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default connect(null, {\n  FC_CreateSector,\n  FC_UpdateSector,\n  FC_DeleteSector,\n  PushPopupAlert,\n})(ViewSectors);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { AiOutlineFilter } from \"react-icons/ai\";\nimport { BsCaretRightFill } from \"react-icons/bs\";\nimport { connect } from \"react-redux\";\nimport { getAllRoom } from \"../../actions/location\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  DistrictInterface,\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n  SectorInterface,\n} from \"../../shared/interfaces\";\nimport { LocationsInArray } from \"../UserManagement/UserList\";\nimport ViewDistricts from \"./ViewDistricts\";\nimport ViewProvince from \"./ViewProvince\";\nimport ViewSectors from \"./ViewSectors\";\n\nexport const distinctDistrict = (\n  rooms: RoomLocationInterface[],\n  province_id?: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (!ids.includes(element.district_id)) {\n      if (province_id && element.province_id === province_id) {\n        ids.push(element.district_id);\n        result.push(element);\n      } else if (province_id === undefined) {\n        ids.push(element.district_id);\n        result.push(element);\n      }\n    }\n  });\n\n  return result;\n};\n\nexport const distinctCenter = (\n  rooms: RoomLocationInterface[],\n  district_id: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (\n      !ids.includes(element.center_id) &&\n      element.district_id === district_id\n    ) {\n      ids.push(element.center_id);\n      result.push(element);\n    }\n  });\n  return result;\n};\n\nexport const distinctRoom = (\n  rooms: RoomLocationInterface[],\n  center_id: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (!ids.includes(element.room_id) && element.center_id === center_id) {\n      ids.push(element.room_id);\n      result.push(element);\n    }\n  });\n  return result;\n};\n\ninterface AppProps {\n  locations: RoomLocationInterface[];\n  getAllRoom: Function;\n}\n\nconst _Locations: React.FC<AppProps> = (props) => {\n  const [actionTypes, setActionTypes] = useState<\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null\n  >(null);\n  const [thisProvince, setThisProvince] =\n    useState<RoomLocationInterface | null>(null);\n  const [thisDistrict, setThisDistrict] = useState<DistrictInterface | null>(\n    null\n  );\n  const [thisSector, setThisSector] = useState<SectorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!props.locations.length && loading) {\n      props.getAllRoom((status: boolean, msg: string) => {\n        setLoading(status);\n        if (!status && msg.length > 0) {\n          console.log(msg);\n        }\n      });\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading locations...\n      </div>\n    );\n  }\n\n  const displayTitle = () => {\n    if (\n      (!thisSector ||\n        (thisSector &&\n          (actionTypes === \"CREATE_SECTOR\" ||\n            actionTypes === \"UPDATE_SECTOR\"))) &&\n      thisDistrict &&\n      actionTypes !== \"CREATE_DISTRICT\" &&\n      actionTypes !== \"UPDATE_DISTRICT\"\n    ) {\n      return (\n        <div className=\"flex items-center gap-1\">\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisProvince(null);\n            }}\n          >\n            province\n          </span>\n          <span>/</span>\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisDistrict(null);\n            }}\n          >\n            district\n          </span>\n          <span>/</span>\n          <span className=\"text-xl text-gray-800\">\n            {thisDistrict.district_name}\n          </span>\n        </div>\n      );\n    } else if (\n      (!thisDistrict ||\n        (thisDistrict &&\n          (actionTypes === \"CREATE_DISTRICT\" ||\n            actionTypes === \"UPDATE_DISTRICT\"))) &&\n      thisProvince\n    ) {\n      return (\n        <div className=\"flex items-center gap-2\">\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisProvince(null);\n            }}\n          >\n            province\n          </span>\n          <span>/</span>\n          <span className=\"text-xl text-gray-800\">\n            {thisProvince.province_name}\n          </span>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"flex items-center gap-1\">\n        <span className=\"uppercase text-xl font-semibold text-gray-800\">\n          province\n        </span>\n        <span>/</span>\n      </div>\n    );\n  };\n\n  return (\n    <Fragment>\n      <div className=\"w-full my-5\">\n        {/* header title */}\n        <div className=\"flex justify-between p-2 gap-1\">\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-3xl font-bold\">\n              Locations Management\n            </span>\n\n            <div className=\"flex flex-row items-center md:gap-3 gap-2 mt-1\">\n              <AiOutlineFilter className=\"text-xl\" />\n              <div className=\"flex flex-row items-center gap-1\">\n                {thisProvince && (\n                  <span className=\"text-gray-700 text-base font-bold\">\n                    {thisProvince.province_name}\n                  </span>\n                )}\n                {thisDistrict && (\n                  <div className=\"flex flex-row items-center gap-1\">\n                    <BsCaretRightFill />\n                    <span className=\"text-blue-600 text-base font-bold underline\">\n                      {thisDistrict.district_name} district\n                    </span>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        <div className=\"w-full bg-white\">\n          <div className=\"border-b px-2 py-3 flex justify-between\">\n            {displayTitle()}\n\n            {/* CREATE NEW PROVINCE =====================================*/}\n            {/* {(!thisProvince ||\n              (thisProvince &&\n                (actionTypes === \"CREATE_PROVINCE\" ||\n                  actionTypes === \"UPDATE_PROVINCE\"))) && (\n              <button\n                type=\"button\"\n                className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                onClick={() => setActionTypes(\"CREATE_PROVINCE\")}\n                disabled={actionTypes !== null || loadingRequest}\n              >\n                <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                New Province\n              </button>\n            )} */}\n            {/* CREATE NEW DISTRICT =====================================*/}\n            {/* {(!thisDistrict ||\n              (thisDistrict &&\n                (actionTypes === \"CREATE_DISTRICT\" ||\n                  actionTypes === \"UPDATE_DISTRICT\"))) &&\n              thisProvince && (\n                <button\n                  type=\"button\"\n                  className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                  onClick={() => setActionTypes(\"CREATE_DISTRICT\")}\n                  disabled={actionTypes !== null || loadingRequest}\n                >\n                  <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                  New District\n                </button>\n              )} */}\n\n            {/* CREATE NEW SECTOR =====================================*/}\n            {/* {(!thisSector ||\n              (thisSector &&\n                (actionTypes === \"CREATE_SECTOR\" ||\n                  actionTypes === \"UPDATE_SECTOR\"))) &&\n              thisDistrict &&\n              actionTypes !== \"CREATE_DISTRICT\" &&\n              actionTypes !== \"UPDATE_DISTRICT\" && (\n                <button\n                  type=\"button\"\n                  className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                  onClick={() => setActionTypes(\"CREATE_SECTOR\")}\n                  disabled={actionTypes !== null || loadingRequest}\n                >\n                  <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                  New Sector\n                </button>\n              )} */}\n          </div>\n\n          {(!thisProvince ||\n            (thisProvince &&\n              (actionTypes === \"CREATE_PROVINCE\" ||\n                actionTypes === \"UPDATE_PROVINCE\"))) && (\n            <ViewProvince\n              thisProvince={thisProvince}\n              thisDistrict={thisDistrict}\n              loadingRequest={loadingRequest}\n              locations={props.locations}\n              actionTypes={actionTypes}\n              setLoadingRequest={setLoadingRequest}\n              setThisProvince={setThisProvince}\n              setActionTypes={setActionTypes}\n            />\n          )}\n\n          {(!thisDistrict ||\n            (thisDistrict &&\n              (actionTypes === \"CREATE_DISTRICT\" ||\n                actionTypes === \"UPDATE_DISTRICT\"))) &&\n            thisProvince && (\n              <ViewDistricts\n                thisDistrict={thisDistrict}\n                loadingRequest={loadingRequest}\n                actionTypes={actionTypes}\n                setLoadingRequest={setLoadingRequest}\n                setActionTypes={setActionTypes}\n                thisProvince={thisProvince}\n                setThisDistrict={setThisDistrict}\n              />\n            )}\n\n          {(!thisSector ||\n            (thisSector &&\n              (actionTypes === \"CREATE_SECTOR\" ||\n                actionTypes === \"UPDATE_SECTOR\"))) &&\n            thisDistrict &&\n            actionTypes !== \"CREATE_DISTRICT\" &&\n            actionTypes !== \"UPDATE_DISTRICT\" && (\n              <ViewSectors\n                thisDistrict={thisDistrict}\n                thisSector={thisSector}\n                loadingRequest={loadingRequest}\n                actionTypes={actionTypes}\n                setLoadingRequest={setLoadingRequest}\n                setThisSector={setThisSector}\n                setActionTypes={setActionTypes}\n              />\n            )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: RoomLocationInterface[];\n} => {\n  return { locations: locations.roomLocation };\n};\n\nexport const Locations = connect(mapStateToProps, {\n  getAllRoom,\n})(_Locations);\n"],"sourceRoot":""}
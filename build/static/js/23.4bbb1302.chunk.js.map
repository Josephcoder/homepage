{"version":3,"sources":["shared/dataTest.tsx","actions/users.ts","components/Table/Table.tsx","components/Navigation/SideNavigation.tsx","actions/session.ts","actions/document.ts","actions/settings.ts","shared/interfaces.tsx","containers/Claimings/Candidate/ChooseReason.tsx","containers/Claimings/Candidate/ExaminationFormView.tsx","containers/Claimings/Candidate/FormPlacementList.tsx","containers/Claimings/Candidate/ClaimForm.tsx","containers/Claimings/ClaimDocView.tsx","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","components/Loading/TableLoading.tsx","containers/SessionSettings/ChooseSession.tsx","containers/Positions/ViewRequirements.tsx","containers/Claimings/Candidate/FormExamList.tsx","containers/Claimings/Candidate/ApplicationFormView.tsx","containers/SessionSettings/SessionDetails.tsx","containers/Claimings/Admin/AdminFilterByType.tsx","containers/Claimings/ClaimHeaderTitle.tsx","containers/Claimings/Candidate/DocFormView.tsx","containers/Claimings/Candidate/FormApplicationList.tsx","containers/Claimings/Candidate/FormDocumentList.tsx","containers/Claimings/Candidate/index.tsx","containers/Claimings/ClaimApplView.tsx","containers/Claimings/ClaimExamView.tsx","containers/Claimings/ClaimPlacementView.tsx","containers/Claimings/Candidate/FilterByType.tsx","containers/Claimings/Admin/AdminClaimAppView.tsx","containers/Claimings/Admin/AdminClaimExamView.tsx","containers/Claimings/Admin/AdminClaimDocView.tsx","containers/Claimings/Admin/index.tsx","containers/Admin/Claiming/ClaimingReport.tsx"],"names":["data_school","school_id","school_title","district_id","number_of_females","number_of_males","isEmptyOrSpaces","str","match","getRoleById","roles","roleId","filter","role","system_user_role_id","getInstituteById","institutes","instituteId","find","item","education_institute_id","getPositionById","positions","position_id","console","log","data","position","toTwoDigit","value","dec","Math","floor","slice","toString","substr","toAnyDigit","padding","zeroes","Array","join","capitalizeFirstLetter","charAt","toUpperCase","documentValidationStatus","fetchUserAccess","dispatch","a","setAxiosToken","axios","get","API","AUTH","res","users_response","type","ActionTypes","FETCH_USERS_ACCESS","payload","users","error","user_error","blockUserToSystem","BLOCK_USER_TO_SYSTEM","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","verifyAllDocument","VERIFY_ALL_DOCUMENT","Table","table","tr","rows","columns","hideColumns","pagination","search","tableSize","tableClass","tableId","rounded","searchBG","thColor","loading","length","result","characters","charactersLength","i","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","from","keys","map","style","display","className","placeholder","onChange","e","filterType","td","cols","toLowerCase","textContent","innerText","indexOf","filterTable","target","disabled","Number","id","column","index","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","_SideNavigation","props","componentDidMount","PageHasSubNav","componentWillUnmount","state","this","auth","isAuthenticated","navActive","system","navigation","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","SubItemContainer","SubItem","GetPlansTypes","callback","CLAIMING","GET_PLANS_TYPES","plan_types","status","errorToText","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","undefined","is_active","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","getDocumentCategory","docCategory","GET_DOCUMENT_CATEGORY","createDocumentCategory","CREATE_DOCUMENT_CATEGORY","updateDocumentCategory","UPDATE_DOCUMENT_CATEGORY","deleteDocumentCategory","DELETE_DOCUMENT_CATEGORY","getDocumentSubCategory","docSubCategory","GET_DOCUMENT_SUB_CATEGORY","doc_SUB_category_error","createDocumentSubCategory","CREATE_DOCUMENT_SUB_CATEGORY","updateDocumentSubCategory","UPDATE_DOCUMENT_SUB_CATEGORY","deleteDocumentSubCategory","DELETE_DOCUMENT_SUB_CATEGORY","getDocumentFields","docFields","GET_DOCUMENT_FIELDS","createDocumentFields","CREATE_DOCUMENT_FIELDS","updateDocumentFields","reducer","UPDATE_DOCUMENT_FIELDS","deleteDocumentFields","DELETE_DOCUMENT_FIELDS","getCandidatesInInstitute","educatin_type_id","APPLICATION","newArray","element","GET_CANDIDATE_IN_INSTITUTE","verifyDocument","action_verify","VERIFY_DOCUMENT","getSystemSettings","GET_SYSTEM_SETTINGS","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","getApplicationSessions","GET_APPLICATION_SESSIONS","getPositions","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","PostRequestStatusInterface","DocumentAttributesInterface","DocValidationStatusInterface","SESSION_PLAN_KEYS","DOCUMENT_VALIDATION","EXAMINATION","MARKS_PUBLICATION","PLACEMENT_TRANSFER","ChooseReason","setSearchInput","setState","searchInput","setChooseClaimReason","allClaimReasons","claimReason","setClaimReason","reason","userList","PushPopupAlert","thisAnswerSheet","course","setChooseClaimFile","setClaimFileId","answer_sheet_id","setViewThisFile","DATE","createdAt","questions","question","q","language","QuestionLanguage","Eng","description","answer","myPlacement","isClaimAllowed","myClaims","activeSession","session_plan_id","placed","_id","school","school_name","ClaimGetDocTitle","documentCategories","doc","DocCategory","DocSubCategory","DocField","DocTitle","sub_category_id","documentSubCategory","c","user_detail_subcategory_id","category_id","documentCategory","user_detail_category_id","category_subcategory_data","category_subcategory_Data_id","documentFields","category","sub_category","field","main","allClaim","period_id","claimOnId","claiming_on_id","ClaimForm","isDocumentIdValid","documents","doc_id","validated_by","validation_status","msg","alert","PopupAlertTheme","info","claiming","success","warning","isApplicationIdValid","applications","app_id","app","application_id","application_status","ApplicationStates","Rejected","setLoading","setLoadingForm","loadingForm","setFormError","formError","setAlertError","alertError","claimFileId","viewThisFile","chooseClaimFile","chooseClaimReason","setClaimComment","claimComment","isClaimTypeOpen","thisSession","PlansTypeKeys","plans","type_key","isPlanActive","isClaimBtnValid","file_id","claim_type","theme","setFormState","thisClaimType","thisClaimTypeId","formType","displayClaimType","claimType","isClaimsAllowed","thisPeriod","getMyClaims","user","user_id","danger","loadExamAnswers","activeSessionPlan","getMyAnswers","sessionPlan","_isClaimsAllowed","documentReducer","candidateApplications","getMyRejectedApplications","_isApplicationIdValid","candidateDocuments","getMyRejectedDocuments","_isDocumentIdValid","claimReasons","getClaimReasons","getMyPlacement","courses","loadCourses","getDocumentById","getApplicationById","getExamById","exams","getValidation","thisId","old_reason","old_status","old_evaluated_by","comment","override_by","cleanToClose","response","loadUserById","handleSubmit","preventDefault","toLocaleLowerCase","old_evaluator_email","old_evaluator_name","evaluator_email","evaluator_name","email","user_info","fname","lname","default_claim_resaons","post","createClaim","selectClaimType","thisClaim","generateChooseFileTitle","formState","Modal","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","extraLarge","medium","body","footer","onSubmit","Object","values","replace","position_title","myAnswer","getCourseIdBySheetId","getCourseById","course_name","FormDocumentList","FormApplicationList","FormExamList","candidateAnswers","resize","DocFormView","thisDoc","ApplicationFormView","thisApplication","GetClaimingTypes","isReclaimAllowed","claim_level","_thisClaim","claims","level","decision_taken_status","ClaimDecisionStatus","REJECTED","isClaimEvaluated","claim_status","ClaimStatus","EVALUATED","createReClaim","reClaimingMsg","setLoadingRequest","put","setReClaimingMsg","setReClaiming","setViewImage","viewImage","previous","evaluater","name","src","AUTH_FILES","files","alt","claim","showDate","timestampToDate","date_created","timeFR","evaluation_comment","reClaiming","last_claim_status","PENDING","DELETED","loadingRequest","ExportToExcel","fileData","fileName","btnName","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","require","addFooters","pageCount","internal","getNumberOfPages","setFont","setFontSize","setPage","text","String","width","align","generatePDF","reportSettings","callBack","orientation","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","institute","lines","splitTextToSize","subject","pdfInMM","subjectTitle","getTextWidth","addPage","period","autoTable","html","startY","margin","horizontal","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","doneBy","Date","save","returnPromise","then","TableLoading","displayCols","colsArray","push","isPlansActive","today","activePlans","plan","startDate","start_date","endDate","end_date","getTime","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","selectedPlan","setSelectedPlan","setSearch","allSession","chooseAll","currentSelected","setSelectSession","searchData","session_plan_name","itm","type_title","ViewRequirements","requirements","colSpan","subcategory_title","field_title","required","field_id","getFailedExam","allData","allCourses","forEach","total_marks","course_id","sheet_id","FC_ApplicationPositionDistinctCategory","thisPosition","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","req","thisRequirements","thisCategory","thisSubCategory","thisField","position_requirement","category_subcategory_data_id","category_title","subcategory_id","includes","showEvaluator","loadingUsers","setLoadingUsers","school_level_id","school_level_name","education_category_title","course_code","NoResultThemes","Dark","isActivationAllowed","thisPlans","getPlanTypeByKey","allPlanTypes","viewThisSession","thisPlan","planEndDate","planStartDate","CLOSED","SessionDetails","handlePlanActivation","session","newState","window","confirm","key","newData","updatedAt","prototype","hasOwnProperty","call","type_id","allowed_claim_level","history","setViewThisSession","filterClaimsByClaimType","claimList","setSelectedClaimType","getAllClaims","loadingClaimTypes","setLoadingClaimTypes","claimTypes","countClaims","allClaims","Fragment","loadingClaims","selectedClaimType","ClaimHeaderTitle","isLoading","loadingSession","periodChanged","headerTitle","sessions","application_sessions","selectPeriod","setThisPeriod","setLoadingSession","onPeriodChange","getRejectedApplicants","applicationData","objList","product","flag","prop","DocumentTitleData","documentData","documentTemp","company","end_year","names","phone_number","start_year","year","doc_title","getRejectedDocuments","rejected","ClaimTypesEnum","setViewPosition","viewPosition","NoResult","questionTypes","loadQuestionTypes","getAnswersByQuestion","question_id","thisExamSheet","user_answers","thisExam","findQuestionType","questionTypeElementsType","MultipleChoice","SingleMultiple","TrueFalse","indexAnswer","user_marks","SimpleCalculate","Matching","ShortAnswer","Numeric","CalculatedMultipleChoice","userDetails","district_name","loadingRejectedApplications","setLoadingRejectedApplications","loadingRejectedDocuments","setLoadingRejectedDocuments","COMPLETED","document_id","whichClaimType","application","exam","marks_publication","placement","whichClaimStatus","classes","getClaimById","claim_id","displayDocClaimTitle","displayClaimTitle","allCourse","thisAnswer","Index","setViewClaim","viewClaim","setPeriodChanged","setClaimForm","claimForm","setClaimId","claimId","loadClaims","setSession","isDeleteAllowed","thisCLaim","Light","ClaimApplView","ClaimExamView","CandidateClaim","allSessionPlans","viewTabs","FC_AdminApplicationPositionDistinctCategory","subcategory","evaluateClaim","reAssessApplication","actionTaken","setActionTaken","responseMsg","setResponseMsg","profile","selectedTab","setSelectedTab","handleVerify","subClaim","api_body","sub_claim_id","evaluated_by","evaluate_claim_res","ACCEPTED","overrideDecision","getReasonById","reason_id","patch","Shortlisted","systemPositions","FC_DocValidation","APPROVED","in_education","disability","api_redux","date","FC_shortListing","candidate_id","details","adminDisplayClaimTitle","commet","marks","setMarks","Loading","handleMarksAddition","DO_EXAM","sex","AdminClaimGetDocTitle","allApplications","setLoadingData","loadingData","setClaimType","setCandidateId","candidateId","setDefaultSession","loadsAllClaims","loadsApplications","loadsAlAnswers","getAllApplications","allAnswer","getAllAnswers","thisDocs","AdminFilterByType","ClaimTypesInterface","DOCUMENT","AdminClaim","system_settings","reportClaimType","defaultReportContent","claimReportContentKeyInterface","national_id","gender","phone","claim_session","education_category","decision","claim_title","ClaimingReport","schoolLevels","loadEducationCategories","thisLevel","setThisLevel","loadingPosition","setLoadingPosition","loadingApplications","setLoadingApplications","setLoadingClaims","loadingCourses","setLoadingCourses","loadingDocuments","setLoadingDocuments","loadingInstitutes","setLoadingInstitutes","loadingClarifications","setLoadingClarifications","loadingFields","setLoadingFields","downloading","setDownloading","claimToPrint","setClaimToPrint","sortProperty","setSortProperty","isSorted","setIsSorted","sortOrder","setSortOrder","generateReportModal","setGenerateReportModal","reportTitle","setReportTitle","reportContent","setReportContent","selectAll","setSelectAll","setSelectPeriod","thisEducation","setThisEducation","education_categories","getClaimInstitute","setSort","thisProperty","updateClaimToPrint","arrayNew","n","keyClaim","dataArray","n_id","FC_ClaimData","isChangeAllowed","FC_FilterClaims","claimLevel","output","PlansKey","ClaimTypes","selectedType","currentType","levels","ClaimLevels","reportType","querySelectorAll","FC_GeneratePDF","sortThisArray","findIndex","isSelectAllNeeded","updateReportContent","currentState","resetReportContent"],"mappings":"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","file":"static/js/23.4bbb1302.chunk.js","sourcesContent":["import { NumberFormat } from \"xlsx\";\nimport { education_category } from \"../interfaces\";\nimport { PositionAPI } from \"../interfaces/position\";\nimport {\n  AccessTaskInterface,\n  CustomeAccessInterface,\n  PositionInterface,\n  PostSchoolInterface,\n  RoleToUserInterface,\n  SchoolInfoInterface,\n  SchoolLevelInterface,\n  SystemUserRoleInterface,\n} from \"./interfaces\";\n\nexport const data_tasks: AccessTaskInterface[] = [\n  {\n    id: \"11233242\",\n    task: \"Do Exam\",\n    key: \"do_exam\",\n    permitted: {\n      create: false,\n      view: false,\n      update: false,\n      delete: false,\n    },\n  },\n  {\n    id: \"1123382242\",\n    task: \"Do Application\",\n    key: \"do_application\",\n    permitted: {\n      create: false,\n      view: false,\n      update: false,\n      delete: false,\n    },\n  },\n];\n\nexport const data_school: SchoolInfoInterface[] = [\n  {\n    school_id: \"32762426329\",\n    school_title: \"G.S. De Gitega\",\n    district_id: \"234242\",\n    number_of_females: 10,\n    number_of_males: 12,\n  },\n  {\n    school_id: \"32762426329\",\n    school_title: \"G.S. De Gitega\",\n    district_id: \"7322342684\",\n  },\n  {\n    school_id: \"32762426329\",\n    school_title: \"Rucee De Kigali\",\n    district_id: \"234242\",\n    number_of_females: 10,\n    number_of_males: 12,\n  },\n  {\n    school_id: \"32762426329\",\n    school_title: \"G.S. De Gitega\",\n    district_id: \"73232432684\",\n    number_of_females: 10,\n    number_of_males: 12,\n  },\n];\n\nexport const data_school_level: SchoolLevelInterface[] = [\n  {\n    school_level_id: \"324234r2ee432\",\n    school_level_name: \"Ordinary Level\",\n    description: \"Ordinary Level description\",\n    education_institute: [\"6100449ceabcc3b4623752e2\"],\n    courses: [],\n  },\n  {\n    school_level_name: \"A level\",\n    description: \"A level description\",\n    education_institute: [\n      \"6100592f646ddb0771e8fc50\",\n      \"61005941646ddb0771e8fc51\",\n    ],\n    courses: [],\n    school_level_id: \"61005974646ddb0771e8fc52\",\n  },\n  {\n    school_level_name: \"O level\",\n    description: \"O level description\",\n    education_institute: [\"6100592f646ddb0771e8fc50\"],\n    courses: [],\n    school_level_id: \"61005989646ddb0771e8fc53\",\n  },\n  {\n    school_level_name: \"Primary\",\n    description: \"Primary description\",\n    education_institute: [\"6100592f646ddb0771e8fc50\"],\n    courses: [],\n    school_level_id: \"61005999646ddb0771e8fc54\",\n  },\n  {\n    school_level_name: \"Ordinary Level\",\n    description: \"Ordinary Level description\",\n    education_institute: [\"610045218bdc25b50cc8bcbc\"],\n    courses: [],\n    school_level_id: \"61065114ea5d9b48e9677606\",\n  },\n];\n\nexport const data_position: PositionInterface[] = [\n  {\n    courses: [\n      {\n        course_name: \"Physics\",\n        course_code: \"P21\",\n        description: \"description of P21\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"610252c47d84ba2313cf6148\",\n      },\n      {\n        course_name: \"Mathematics\",\n        course_code: \"m211\",\n        description: \"description of m211\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"610252fd7d84ba2313cf6149\",\n      },\n    ],\n    position_title: \"Teaching mathematics\",\n    description: \"Teaching mathematics\",\n    school_level_id: {\n      school_level_name: \"A level\",\n      description: \"A level description\",\n      education_institute: [\n        \"6100592f646ddb0771e8fc50\",\n        \"61005941646ddb0771e8fc51\",\n      ],\n      courses: [],\n      school_level_id: \"61005974646ddb0771e8fc52\",\n    },\n    education_institute_id: {\n      education_category_title: \"REB\",\n      school_levels: [],\n      description: \"REB\",\n      education_institute_id: \"6100592f646ddb0771e8fc50\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n    ],\n    position_id: \"610254047d84ba2313cf614a\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Physics\",\n        course_code: \"P21\",\n        description: \"description of P21\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"610252c47d84ba2313cf6148\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching Physics\",\n    description: \"Teaching Physics\",\n    school_level_id: {\n      school_level_name: \"A level\",\n      description: \"A level description\",\n      education_institute: [\n        \"6100592f646ddb0771e8fc50\",\n        \"61005941646ddb0771e8fc51\",\n      ],\n      courses: [],\n      school_level_id: \"61005974646ddb0771e8fc52\",\n    },\n    education_institute_id: {\n      education_category_title: \"REB\",\n      school_levels: [],\n      description: \"REB\",\n      education_institute_id: \"6100592f646ddb0771e8fc50\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6102ea2975cc702bbd1582e5\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Biology\",\n        course_code: \"b213\",\n        description: \"description of b213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6103a37975cc702bbd1582e6\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching Biology\",\n    description: \"Teaching Biology\",\n    school_level_id: {\n      school_level_name: \"A level\",\n      description: \"A level description\",\n      education_institute: [\n        \"6100592f646ddb0771e8fc50\",\n        \"61005941646ddb0771e8fc51\",\n      ],\n      courses: [],\n      school_level_id: \"61005974646ddb0771e8fc52\",\n    },\n    education_institute_id: {\n      education_category_title: \"REB\",\n      school_levels: [],\n      description: \"REB\",\n      education_institute_id: \"6100592f646ddb0771e8fc50\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"A0\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48eff485d8dd91ed3221\",\n            title: \"A0\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n          {\n            user_detail_subcategory_id: \"6102e84c248f742b674c67af\",\n            title: \"Ikinyarwanda\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6103a54075cc702bbd1582e8\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Biology\",\n        course_code: \"b213\",\n        description: \"description of b213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6103a37975cc702bbd1582e6\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching basic Biology\",\n    description: \"Teaching basic Biology\",\n    school_level_id: {\n      school_level_name: \"O level\",\n      description: \"O level description\",\n      education_institute: [\"6100592f646ddb0771e8fc50\"],\n      courses: [],\n      school_level_id: \"61005989646ddb0771e8fc53\",\n    },\n    education_institute_id: {\n      education_category_title: \"REB\",\n      school_levels: [],\n      description: \"REB\",\n      education_institute_id: \"6100592f646ddb0771e8fc50\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n          {\n            user_detail_subcategory_id: \"6102e84c248f742b674c67af\",\n            title: \"Ikinyarwanda\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6103a6ca75cc702bbd1582e9\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Biology\",\n        course_code: \"b213\",\n        description: \"description of b213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6103a37975cc702bbd1582e6\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching basic Biology\",\n    description: \"Teaching basic Biology\",\n    school_level_id: {\n      school_level_name: \"O level\",\n      description: \"O level description\",\n      education_institute: [\"6100592f646ddb0771e8fc50\"],\n      courses: [],\n      school_level_id: \"61005989646ddb0771e8fc53\",\n    },\n    education_institute_id: {\n      education_category_title: \"WDA\",\n      school_levels: [],\n      description: \"WDA\",\n      education_institute_id: \"61005941646ddb0771e8fc51\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n          {\n            user_detail_subcategory_id: \"6102e84c248f742b674c67af\",\n            title: \"Ikinyarwanda\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6103a78475cc702bbd1582ea\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Biology\",\n        course_code: \"b213\",\n        description: \"description of b213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6103a37975cc702bbd1582e6\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching basic physics\",\n    description: \"Teaching basic physics\",\n    school_level_id: {\n      school_level_name: \"A level\",\n      description: \"A level description\",\n      education_institute: [\n        \"6100592f646ddb0771e8fc50\",\n        \"61005941646ddb0771e8fc51\",\n      ],\n      courses: [],\n      school_level_id: \"61005974646ddb0771e8fc52\",\n    },\n    education_institute_id: {\n      education_category_title: \"WDA\",\n      school_levels: [],\n      description: \"WDA\",\n      education_institute_id: \"61005941646ddb0771e8fc51\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n          {\n            user_detail_subcategory_id: \"6102e84c248f742b674c67af\",\n            title: \"Ikinyarwanda\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6103a7ec75cc702bbd1582eb\",\n  },\n];\n\nexport const data_posts_school: PostSchoolInterface[] = [];\n\nexport const isEmptyOrSpaces = (str: string): boolean => {\n  return str === null || str.match(/^ *$/) !== null;\n};\n\nexport const getUserTitle = (\n  accessRoles: SystemUserRoleInterface[],\n  roleId: string\n): string => {\n  const result = accessRoles.find((e) => e.system_user_role_id === roleId);\n  return result ? result.role : \"\";\n};\n\nexport const getRoleById = (\n  roles: SystemUserRoleInterface[],\n  roleId: string\n): SystemUserRoleInterface => {\n  return roles.filter((role) => role.system_user_role_id === roleId)[0];\n};\n\nexport const getInstituteById = (\n  institutes: education_category[],\n  instituteId: string\n): education_category | undefined => {\n  return institutes.find((item) => item.education_institute_id === instituteId);\n};\n\nexport const getPositionById_old = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI => {\n  console.log({\n    positions,\n    position_id,\n    data: positions.filter(\n      (position) => position.position_id === position_id\n    )[0],\n  });\n  return positions.filter(\n    (position) => position.position_id === position_id\n  )[0];\n};\n\nexport const getPositionById = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI | undefined => {\n  console.log({\n    positions,\n    position_id,\n    data: positions.filter(\n      (position) => position.position_id === position_id\n    )[0],\n  });\n  return positions.find((position) => position.position_id === position_id);\n};\n\nexport const getSchoolById = (\n  schools: SchoolInfoInterface[],\n  school_id: string\n): SchoolInfoInterface => {\n  return schools.filter((school) => school.school_id === school_id)[0];\n};\n\nexport const getPostById = (\n  posts: PostSchoolInterface[],\n  post_id: string\n): PostSchoolInterface => {\n  return posts.filter((post) => post.school_id === post_id)[0];\n};\n\nexport const getPostsBySchoolId = (\n  posts: PostSchoolInterface[],\n  school_id: string\n): PostSchoolInterface[] => {\n  return posts.filter((post) => post.school_id === school_id);\n};\n\nexport const getPostsByIds = (\n  posts: PostSchoolInterface[],\n  school_id: string,\n  position_id: string\n): PostSchoolInterface[] => {\n  return posts.filter(\n    (post) => post.school_id === school_id && post.position_id === position_id\n  );\n};\n\nexport const displayDate = (dateToDisplay: Date): string => {\n  return new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\",\n  }).format(dateToDisplay);\n};\n\nexport const userAccess = (\n  defaultAccess: RoleToUserInterface,\n  customAccess: CustomeAccessInterface\n): RoleToUserInterface => {\n  // const data = defaultAccess.access.map((default,index,customAccess)=>{\n  //   let data_custom = customAccess\n  //   if\n  // })\n  // return customAccess.filter((custom) => custom.id === accecc_id)[0];\n  return defaultAccess;\n};\n\n// export const groupBy = (list: [], keyGetter: Function) => {\n//   const map = new Map();\n//   list.forEach((item) => {\n//     const key = keyGetter(item);\n//     const collection = map.get(key);\n//     if (!collection) {\n//       map.set(key, [item]);\n//     } else {\n//       collection.push(item);\n//     }\n//   });\n//   return map;\n// };\n\nexport const toTwoDigit = (value: number): string => {\n  var dec = value - Math.floor(value);\n  value = value - dec;\n  return (\"0\" + value).slice(-2) + dec.toString().substr(1);\n};\n\nexport const toAnyDigit = (\n  value: NumberFormat,\n  padding: number = 3\n): string => {\n  var zeroes = new Array(padding + 1).join(\"0\");\n  return (zeroes + value).slice(-padding);\n};\n\nexport const choosenSchool = \"611fce914ce2093472232f5f\";\nexport const choosenDistrict = \"610bd1f3334bb2405fa5061e\";\n\nexport const capitalizeFirstLetter = (value: string): string => {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n};\n\nexport const isDateExpiried = (paramDate: string) => {\n  const thisDate = new Date(paramDate);\n  const today = new Date();\n  if (thisDate.getTime() < today.getTime()) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const exportData = [\n  {\n    userId: 1,\n    id: 1,\n    title:\n      \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n    body: \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\",\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: \"qui est esse\",\n    body: \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\",\n  },\n  {\n    userId: 1,\n    id: 3,\n    title: \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n    body: \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\",\n  },\n  {\n    userId: 1,\n    id: 4,\n    title: \"eum et est occaecati\",\n    body: \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\",\n  },\n  {\n    userId: 1,\n    id: 5,\n    title: \"nesciunt quas odio\",\n    body: \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\",\n  },\n  {\n    userId: 1,\n    id: 6,\n    title: \"dolorem eum magni eos aperiam quia\",\n    body: \"ut aspernatur corporis harum nihil quis provident sequi\\nmollitia nobis aliquid molestiae\\nperspiciatis et ea nemo ab reprehenderit accusantium quas\\nvoluptate dolores velit et doloremque molestiae\",\n  },\n  {\n    userId: 1,\n    id: 7,\n    title: \"magnam facilis autem\",\n    body: \"dolore placeat quibusdam ea quo vitae\\nmagni quis enim qui quis quo nemo aut saepe\\nquidem repellat excepturi ut quia\\nsunt ut sequi eos ea sed quas\",\n  },\n  {\n    userId: 1,\n    id: 8,\n    title: \"dolorem dolore est ipsam\",\n    body: \"dignissimos aperiam dolorem qui eum\\nfacilis quibusdam animi sint suscipit qui sint possimus cum\\nquaerat magni maiores excepturi\\nipsam ut commodi dolor voluptatum modi aut vitae\",\n  },\n  {\n    userId: 1,\n    id: 9,\n    title: \"nesciunt iure omnis dolorem tempora et accusantium\",\n    body: \"consectetur animi nesciunt iure dolore\\nenim quia ad\\nveniam autem ut quam aut nobis\\net est aut quod aut provident voluptas autem voluptas\",\n  },\n  {\n    userId: 1,\n    id: 10,\n    title: \"optio molestias id quia eum\",\n    body: \"quo et expedita modi cum officia vel magni\\ndoloribus qui repudiandae\\nvero nisi sit\\nquos veniam quod sed accusamus veritatis error\",\n  },\n  {\n    userId: 2,\n    id: 11,\n    title: \"et ea vero quia laudantium autem\",\n    body: \"delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\\naccusamus in eum beatae sit\\nvel qui neque voluptates ut commodi qui incidunt\\nut animi commodi\",\n  },\n  {\n    userId: 2,\n    id: 12,\n    title: \"in quibusdam tempore odit est dolorem\",\n    body: \"itaque id aut magnam\\npraesentium quia et ea odit et ea voluptas et\\nsapiente quia nihil amet occaecati quia id voluptatem\\nincidunt ea est distinctio odio\",\n  },\n  {\n    userId: 2,\n    id: 13,\n    title: \"dolorum ut in voluptas mollitia et saepe quo animi\",\n    body: \"aut dicta possimus sint mollitia voluptas commodi quo doloremque\\niste corrupti reiciendis voluptatem eius rerum\\nsit cumque quod eligendi laborum minima\\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam\",\n  },\n  {\n    userId: 2,\n    id: 14,\n    title: \"voluptatem eligendi optio\",\n    body: \"fuga et accusamus dolorum perferendis illo voluptas\\nnon doloremque neque facere\\nad qui dolorum molestiae beatae\\nsed aut voluptas totam sit illum\",\n  },\n  {\n    userId: 2,\n    id: 15,\n    title: \"eveniet quod temporibus\",\n    body: \"reprehenderit quos placeat\\nvelit minima officia dolores impedit repudiandae molestiae nam\\nvoluptas recusandae quis delectus\\nofficiis harum fugiat vitae\",\n  },\n  {\n    userId: 2,\n    id: 16,\n    title:\n      \"sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio\",\n    body: \"suscipit nam nisi quo aperiam aut\\nasperiores eos fugit maiores voluptatibus quia\\nvoluptatem quis ullam qui in alias quia est\\nconsequatur magni mollitia accusamus ea nisi voluptate dicta\",\n  },\n  {\n    userId: 2,\n    id: 17,\n    title: \"fugit voluptas sed molestias voluptatem provident\",\n    body: \"eos voluptas et aut odit natus earum\\naspernatur fuga molestiae ullam\\ndeserunt ratione qui eos\\nqui nihil ratione nemo velit ut aut id quo\",\n  },\n  {\n    userId: 2,\n    id: 18,\n    title: \"voluptate et itaque vero tempora molestiae\",\n    body: \"eveniet quo quis\\nlaborum totam consequatur non dolor\\nut et est repudiandae\\nest voluptatem vel debitis et magnam\",\n  },\n  {\n    userId: 2,\n    id: 19,\n    title: \"adipisci placeat illum aut reiciendis qui\",\n    body: \"illum quis cupiditate provident sit magnam\\nea sed aut omnis\\nveniam maiores ullam consequatur atque\\nadipisci quo iste expedita sit quos voluptas\",\n  },\n  {\n    userId: 2,\n    id: 20,\n    title: \"doloribus ad provident suscipit at\",\n    body: \"qui consequuntur ducimus possimus quisquam amet similique\\nsuscipit porro ipsam amet\\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\\nomnis rerum consequatur expedita quidem cumque explicabo\",\n  },\n  {\n    userId: 3,\n    id: 21,\n    title: \"asperiores ea ipsam voluptatibus modi minima quia sint\",\n    body: \"repellat aliquid praesentium dolorem quo\\nsed totam minus non itaque\\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\\ntempora et tenetur expedita sunt\",\n  },\n  {\n    userId: 3,\n    id: 22,\n    title: \"dolor sint quo a velit explicabo quia nam\",\n    body: \"eos qui et ipsum ipsam suscipit aut\\nsed omnis non odio\\nexpedita earum mollitia molestiae aut atque rem suscipit\\nnam impedit esse\",\n  },\n  {\n    userId: 3,\n    id: 23,\n    title: \"maxime id vitae nihil numquam\",\n    body: \"veritatis unde neque eligendi\\nquae quod architecto quo neque vitae\\nest illo sit tempora doloremque fugit quod\\net et vel beatae sequi ullam sed tenetur perspiciatis\",\n  },\n  {\n    userId: 3,\n    id: 24,\n    title: \"autem hic labore sunt dolores incidunt\",\n    body: \"enim et ex nulla\\nomnis voluptas quia qui\\nvoluptatem consequatur numquam aliquam sunt\\ntotam recusandae id dignissimos aut sed asperiores deserunt\",\n  },\n  {\n    userId: 3,\n    id: 25,\n    title: \"rem alias distinctio quo quis\",\n    body: \"ullam consequatur ut\\nomnis quis sit vel consequuntur\\nipsa eligendi ipsum molestiae et omnis error nostrum\\nmolestiae illo tempore quia et distinctio\",\n  },\n  {\n    userId: 3,\n    id: 26,\n    title: \"est et quae odit qui non\",\n    body: \"similique esse doloribus nihil accusamus\\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\\nperspiciatis cum ut laudantium\\nomnis aut molestiae vel vero\",\n  },\n  {\n    userId: 3,\n    id: 27,\n    title: \"quasi id et eos tenetur aut quo autem\",\n    body: \"eum sed dolores ipsam sint possimus debitis occaecati\\ndebitis qui qui et\\nut placeat enim earum aut odit facilis\\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur\",\n  },\n  {\n    userId: 3,\n    id: 28,\n    title: \"delectus ullam et corporis nulla voluptas sequi\",\n    body: \"non et quaerat ex quae ad maiores\\nmaiores recusandae totam aut blanditiis mollitia quas illo\\nut voluptatibus voluptatem\\nsimilique nostrum eum\",\n  },\n  {\n    userId: 3,\n    id: 29,\n    title: \"iusto eius quod necessitatibus culpa ea\",\n    body: \"odit magnam ut saepe sed non qui\\ntempora atque nihil\\naccusamus illum doloribus illo dolor\\neligendi repudiandae odit magni similique sed cum maiores\",\n  },\n  {\n    userId: 3,\n    id: 30,\n    title: \"a quo magni similique perferendis\",\n    body: \"alias dolor cumque\\nimpedit blanditiis non eveniet odio maxime\\nblanditiis amet eius quis tempora quia autem rem\\na provident perspiciatis quia\",\n  },\n  {\n    userId: 4,\n    id: 31,\n    title: \"ullam ut quidem id aut vel consequuntur\",\n    body: \"debitis eius sed quibusdam non quis consectetur vitae\\nimpedit ut qui consequatur sed aut in\\nquidem sit nostrum et maiores adipisci atque\\nquaerat voluptatem adipisci repudiandae\",\n  },\n  {\n    userId: 4,\n    id: 32,\n    title: \"doloremque illum aliquid sunt\",\n    body: \"deserunt eos nobis asperiores et hic\\nest debitis repellat molestiae optio\\nnihil ratione ut eos beatae quibusdam distinctio maiores\\nearum voluptates et aut adipisci ea maiores voluptas maxime\",\n  },\n  {\n    userId: 4,\n    id: 33,\n    title: \"qui explicabo molestiae dolorem\",\n    body: \"rerum ut et numquam laborum odit est sit\\nid qui sint in\\nquasi tenetur tempore aperiam et quaerat qui in\\nrerum officiis sequi cumque quod\",\n  },\n  {\n    userId: 4,\n    id: 34,\n    title: \"magnam ut rerum iure\",\n    body: \"ea velit perferendis earum ut voluptatem voluptate itaque iusto\\ntotam pariatur in\\nnemo voluptatem voluptatem autem magni tempora minima in\\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis\",\n  },\n  {\n    userId: 4,\n    id: 35,\n    title: \"id nihil consequatur molestias animi provident\",\n    body: \"nisi error delectus possimus ut eligendi vitae\\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\\nmodi ducimus quo illum voluptas eligendi\\net nobis quia fugit\",\n  },\n  {\n    userId: 4,\n    id: 36,\n    title: \"fuga nam accusamus voluptas reiciendis itaque\",\n    body: \"ad mollitia et omnis minus architecto odit\\nvoluptas doloremque maxime aut non ipsa qui alias veniam\\nblanditiis culpa aut quia nihil cumque facere et occaecati\\nqui aspernatur quia eaque ut aperiam inventore\",\n  },\n  {\n    userId: 4,\n    id: 37,\n    title: \"provident vel ut sit ratione est\",\n    body: \"debitis et eaque non officia sed nesciunt pariatur vel\\nvoluptatem iste vero et ea\\nnumquam aut expedita ipsum nulla in\\nvoluptates omnis consequatur aut enim officiis in quam qui\",\n  },\n  {\n    userId: 4,\n    id: 38,\n    title: \"explicabo et eos deleniti nostrum ab id repellendus\",\n    body: \"animi esse sit aut sit nesciunt assumenda eum voluptas\\nquia voluptatibus provident quia necessitatibus ea\\nrerum repudiandae quia voluptatem delectus fugit aut id quia\\nratione optio eos iusto veniam iure\",\n  },\n  {\n    userId: 4,\n    id: 39,\n    title: \"eos dolorem iste accusantium est eaque quam\",\n    body: \"corporis rerum ducimus vel eum accusantium\\nmaxime aspernatur a porro possimus iste omnis\\nest in deleniti asperiores fuga aut\\nvoluptas sapiente vel dolore minus voluptatem incidunt ex\",\n  },\n  {\n    userId: 4,\n    id: 40,\n    title: \"enim quo cumque\",\n    body: \"ut voluptatum aliquid illo tenetur nemo sequi quo facilis\\nipsum rem optio mollitia quas\\nvoluptatem eum voluptas qui\\nunde omnis voluptatem iure quasi maxime voluptas nam\",\n  },\n  {\n    userId: 5,\n    id: 41,\n    title: \"non est facere\",\n    body: \"molestias id nostrum\\nexcepturi molestiae dolore omnis repellendus quaerat saepe\\nconsectetur iste quaerat tenetur asperiores accusamus ex ut\\nnam quidem est ducimus sunt debitis saepe\",\n  },\n  {\n    userId: 5,\n    id: 42,\n    title:\n      \"commodi ullam sint et excepturi error explicabo praesentium voluptas\",\n    body: \"odio fugit voluptatum ducimus earum autem est incidunt voluptatem\\nodit reiciendis aliquam sunt sequi nulla dolorem\\nnon facere repellendus voluptates quia\\nratione harum vitae ut\",\n  },\n  {\n    userId: 5,\n    id: 43,\n    title:\n      \"eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis\",\n    body: \"similique fugit est\\nillum et dolorum harum et voluptate eaque quidem\\nexercitationem quos nam commodi possimus cum odio nihil nulla\\ndolorum exercitationem magnam ex et a et distinctio debitis\",\n  },\n  {\n    userId: 5,\n    id: 44,\n    title: \"optio dolor molestias sit\",\n    body: \"temporibus est consectetur dolore\\net libero debitis vel velit laboriosam quia\\nipsum quibusdam qui itaque fuga rem aut\\nea et iure quam sed maxime ut distinctio quae\",\n  },\n  {\n    userId: 5,\n    id: 45,\n    title: \"ut numquam possimus omnis eius suscipit laudantium iure\",\n    body: \"est natus reiciendis nihil possimus aut provident\\nex et dolor\\nrepellat pariatur est\\nnobis rerum repellendus dolorem autem\",\n  },\n  {\n    userId: 5,\n    id: 46,\n    title: \"aut quo modi neque nostrum ducimus\",\n    body: \"voluptatem quisquam iste\\nvoluptatibus natus officiis facilis dolorem\\nquis quas ipsam\\nvel et voluptatum in aliquid\",\n  },\n  {\n    userId: 5,\n    id: 47,\n    title: \"quibusdam cumque rem aut deserunt\",\n    body: \"voluptatem assumenda ut qui ut cupiditate aut impedit veniam\\noccaecati nemo illum voluptatem laudantium\\nmolestiae beatae rerum ea iure soluta nostrum\\neligendi et voluptate\",\n  },\n  {\n    userId: 5,\n    id: 48,\n    title: \"ut voluptatem illum ea doloribus itaque eos\",\n    body: \"voluptates quo voluptatem facilis iure occaecati\\nvel assumenda rerum officia et\\nillum perspiciatis ab deleniti\\nlaudantium repellat ad ut et autem reprehenderit\",\n  },\n  {\n    userId: 5,\n    id: 49,\n    title: \"laborum non sunt aut ut assumenda perspiciatis voluptas\",\n    body: \"inventore ab sint\\nnatus fugit id nulla sequi architecto nihil quaerat\\neos tenetur in in eum veritatis non\\nquibusdam officiis aspernatur cumque aut commodi aut\",\n  },\n  {\n    userId: 5,\n    id: 50,\n    title:\n      \"repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem\",\n    body: \"error suscipit maxime adipisci consequuntur recusandae\\nvoluptas eligendi et est et voluptates\\nquia distinctio ab amet quaerat molestiae et vitae\\nadipisci impedit sequi nesciunt quis consectetur\",\n  },\n  {\n    userId: 6,\n    id: 51,\n    title: \"soluta aliquam aperiam consequatur illo quis voluptas\",\n    body: \"sunt dolores aut doloribus\\ndolore doloribus voluptates tempora et\\ndoloremque et quo\\ncum asperiores sit consectetur dolorem\",\n  },\n  {\n    userId: 6,\n    id: 52,\n    title: \"qui enim et consequuntur quia animi quis voluptate quibusdam\",\n    body: \"iusto est quibusdam fuga quas quaerat molestias\\na enim ut sit accusamus enim\\ntemporibus iusto accusantium provident architecto\\nsoluta esse reprehenderit qui laborum\",\n  },\n  {\n    userId: 6,\n    id: 53,\n    title: \"ut quo aut ducimus alias\",\n    body: \"minima harum praesentium eum rerum illo dolore\\nquasi exercitationem rerum nam\\nporro quis neque quo\\nconsequatur minus dolor quidem veritatis sunt non explicabo similique\",\n  },\n  {\n    userId: 6,\n    id: 54,\n    title: \"sit asperiores ipsam eveniet odio non quia\",\n    body: \"totam corporis dignissimos\\nvitae dolorem ut occaecati accusamus\\nex velit deserunt\\net exercitationem vero incidunt corrupti mollitia\",\n  },\n  {\n    userId: 6,\n    id: 55,\n    title: \"sit vel voluptatem et non libero\",\n    body: \"debitis excepturi ea perferendis harum libero optio\\neos accusamus cum fuga ut sapiente repudiandae\\net ut incidunt omnis molestiae\\nnihil ut eum odit\",\n  },\n  {\n    userId: 6,\n    id: 56,\n    title: \"qui et at rerum necessitatibus\",\n    body: \"aut est omnis dolores\\nneque rerum quod ea rerum velit pariatur beatae excepturi\\net provident voluptas corrupti\\ncorporis harum reprehenderit dolores eligendi\",\n  },\n  {\n    userId: 6,\n    id: 57,\n    title: \"sed ab est est\",\n    body: \"at pariatur consequuntur earum quidem\\nquo est laudantium soluta voluptatem\\nqui ullam et est\\net cum voluptas voluptatum repellat est\",\n  },\n  {\n    userId: 6,\n    id: 58,\n    title: \"voluptatum itaque dolores nisi et quasi\",\n    body: \"veniam voluptatum quae adipisci id\\net id quia eos ad et dolorem\\naliquam quo nisi sunt eos impedit error\\nad similique veniam\",\n  },\n  {\n    userId: 6,\n    id: 59,\n    title: \"qui commodi dolor at maiores et quis id accusantium\",\n    body: \"perspiciatis et quam ea autem temporibus non voluptatibus qui\\nbeatae a earum officia nesciunt dolores suscipit voluptas et\\nanimi doloribus cum rerum quas et magni\\net hic ut ut commodi expedita sunt\",\n  },\n  {\n    userId: 6,\n    id: 60,\n    title:\n      \"consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere\",\n    body: \"asperiores sunt ab assumenda cumque modi velit\\nqui esse omnis\\nvoluptate et fuga perferendis voluptas\\nillo ratione amet aut et omnis\",\n  },\n  {\n    userId: 7,\n    id: 61,\n    title: \"voluptatem doloribus consectetur est ut ducimus\",\n    body: \"ab nemo optio odio\\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\\nvero blanditiis debitis in nesciunt doloribus dicta dolores\\nmagnam minus velit\",\n  },\n  {\n    userId: 7,\n    id: 62,\n    title: \"beatae enim quia vel\",\n    body: \"enim aspernatur illo distinctio quae praesentium\\nbeatae alias amet delectus qui voluptate distinctio\\nodit sint accusantium autem omnis\\nquo molestiae omnis ea eveniet optio\",\n  },\n  {\n    userId: 7,\n    id: 63,\n    title:\n      \"voluptas blanditiis repellendus animi ducimus error sapiente et suscipit\",\n    body: \"enim adipisci aspernatur nemo\\nnumquam omnis facere dolorem dolor ex quis temporibus incidunt\\nab delectus culpa quo reprehenderit blanditiis asperiores\\naccusantium ut quam in voluptatibus voluptas ipsam dicta\",\n  },\n  {\n    userId: 7,\n    id: 64,\n    title: \"et fugit quas eum in in aperiam quod\",\n    body: \"id velit blanditiis\\neum ea voluptatem\\nmolestiae sint occaecati est eos perspiciatis\\nincidunt a error provident eaque aut aut qui\",\n  },\n  {\n    userId: 7,\n    id: 65,\n    title: \"consequatur id enim sunt et et\",\n    body: \"voluptatibus ex esse\\nsint explicabo est aliquid cumque adipisci fuga repellat labore\\nmolestiae corrupti ex saepe at asperiores et perferendis\\nnatus id esse incidunt pariatur\",\n  },\n  {\n    userId: 7,\n    id: 66,\n    title: \"repudiandae ea animi iusto\",\n    body: \"officia veritatis tenetur vero qui itaque\\nsint non ratione\\nsed et ut asperiores iusto eos molestiae nostrum\\nveritatis quibusdam et nemo iusto saepe\",\n  },\n  {\n    userId: 7,\n    id: 67,\n    title: \"aliquid eos sed fuga est maxime repellendus\",\n    body: \"reprehenderit id nostrum\\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\\net fugiat amet\\nnon sapiente et consequatur necessitatibus molestiae\",\n  },\n  {\n    userId: 7,\n    id: 68,\n    title: \"odio quis facere architecto reiciendis optio\",\n    body: \"magnam molestiae perferendis quisquam\\nqui cum reiciendis\\nquaerat animi amet hic inventore\\nea quia deleniti quidem saepe porro velit\",\n  },\n  {\n    userId: 7,\n    id: 69,\n    title: \"fugiat quod pariatur odit minima\",\n    body: \"officiis error culpa consequatur modi asperiores et\\ndolorum assumenda voluptas et vel qui aut vel rerum\\nvoluptatum quisquam perspiciatis quia rerum consequatur totam quas\\nsequi commodi repudiandae asperiores et saepe a\",\n  },\n  {\n    userId: 7,\n    id: 70,\n    title: \"voluptatem laborum magni\",\n    body: \"sunt repellendus quae\\nest asperiores aut deleniti esse accusamus repellendus quia aut\\nquia dolorem unde\\neum tempora esse dolore\",\n  },\n  {\n    userId: 8,\n    id: 71,\n    title: \"et iusto veniam et illum aut fuga\",\n    body: \"occaecati a doloribus\\niste saepe consectetur placeat eum voluptate dolorem et\\nqui quo quia voluptas\\nrerum ut id enim velit est perferendis\",\n  },\n  {\n    userId: 8,\n    id: 72,\n    title: \"sint hic doloribus consequatur eos non id\",\n    body: \"quam occaecati qui deleniti consectetur\\nconsequatur aut facere quas exercitationem aliquam hic voluptas\\nneque id sunt ut aut accusamus\\nsunt consectetur expedita inventore velit\",\n  },\n  {\n    userId: 8,\n    id: 73,\n    title: \"consequuntur deleniti eos quia temporibus ab aliquid at\",\n    body: \"voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\\naut eum minima consequatur\\ntempore cumque quae est et\\net in consequuntur voluptatem voluptates aut\",\n  },\n  {\n    userId: 8,\n    id: 74,\n    title: \"enim unde ratione doloribus quas enim ut sit sapiente\",\n    body: \"odit qui et et necessitatibus sint veniam\\nmollitia amet doloremque molestiae commodi similique magnam et quam\\nblanditiis est itaque\\nquo et tenetur ratione occaecati molestiae tempora\",\n  },\n  {\n    userId: 8,\n    id: 75,\n    title: \"dignissimos eum dolor ut enim et delectus in\",\n    body: \"commodi non non omnis et voluptas sit\\nautem aut nobis magnam et sapiente voluptatem\\net laborum repellat qui delectus facilis temporibus\\nrerum amet et nemo voluptate expedita adipisci error dolorem\",\n  },\n  {\n    userId: 8,\n    id: 76,\n    title: \"doloremque officiis ad et non perferendis\",\n    body: \"ut animi facere\\ntotam iusto tempore\\nmolestiae eum aut et dolorem aperiam\\nquaerat recusandae totam odio\",\n  },\n  {\n    userId: 8,\n    id: 77,\n    title: \"necessitatibus quasi exercitationem odio\",\n    body: \"modi ut in nulla repudiandae dolorum nostrum eos\\naut consequatur omnis\\nut incidunt est omnis iste et quam\\nvoluptates sapiente aliquam asperiores nobis amet corrupti repudiandae provident\",\n  },\n  {\n    userId: 8,\n    id: 78,\n    title: \"quam voluptatibus rerum veritatis\",\n    body: \"nobis facilis odit tempore cupiditate quia\\nassumenda doloribus rerum qui ea\\nillum et qui totam\\naut veniam repellendus\",\n  },\n  {\n    userId: 8,\n    id: 79,\n    title: \"pariatur consequatur quia magnam autem omnis non amet\",\n    body: \"libero accusantium et et facere incidunt sit dolorem\\nnon excepturi qui quia sed laudantium\\nquisquam molestiae ducimus est\\nofficiis esse molestiae iste et quos\",\n  },\n  {\n    userId: 8,\n    id: 80,\n    title: \"labore in ex et explicabo corporis aut quas\",\n    body: \"ex quod dolorem ea eum iure qui provident amet\\nquia qui facere excepturi et repudiandae\\nasperiores molestias provident\\nminus incidunt vero fugit rerum sint sunt excepturi provident\",\n  },\n  {\n    userId: 9,\n    id: 81,\n    title: \"tempora rem veritatis voluptas quo dolores vero\",\n    body: \"facere qui nesciunt est voluptatum voluptatem nisi\\nsequi eligendi necessitatibus ea at rerum itaque\\nharum non ratione velit laboriosam quis consequuntur\\nex officiis minima doloremque voluptas ut aut\",\n  },\n  {\n    userId: 9,\n    id: 82,\n    title: \"laudantium voluptate suscipit sunt enim enim\",\n    body: \"ut libero sit aut totam inventore sunt\\nporro sint qui sunt molestiae\\nconsequatur cupiditate qui iste ducimus adipisci\\ndolor enim assumenda soluta laboriosam amet iste delectus hic\",\n  },\n  {\n    userId: 9,\n    id: 83,\n    title: \"odit et voluptates doloribus alias odio et\",\n    body: \"est molestiae facilis quis tempora numquam nihil qui\\nvoluptate sapiente consequatur est qui\\nnecessitatibus autem aut ipsa aperiam modi dolore numquam\\nreprehenderit eius rem quibusdam\",\n  },\n  {\n    userId: 9,\n    id: 84,\n    title:\n      \"optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut\",\n    body: \"sint molestiae magni a et quos\\neaque et quasi\\nut rerum debitis similique veniam\\nrecusandae dignissimos dolor incidunt consequatur odio\",\n  },\n  {\n    userId: 9,\n    id: 85,\n    title: \"dolore veritatis porro provident adipisci blanditiis et sunt\",\n    body: \"similique sed nisi voluptas iusto omnis\\nmollitia et quo\\nassumenda suscipit officia magnam sint sed tempora\\nenim provident pariatur praesentium atque animi amet ratione\",\n  },\n  {\n    userId: 9,\n    id: 86,\n    title: \"placeat quia et porro iste\",\n    body: \"quasi excepturi consequatur iste autem temporibus sed molestiae beatae\\net quaerat et esse ut\\nvoluptatem occaecati et vel explicabo autem\\nasperiores pariatur deserunt optio\",\n  },\n  {\n    userId: 9,\n    id: 87,\n    title: \"nostrum quis quasi placeat\",\n    body: \"eos et molestiae\\nnesciunt ut a\\ndolores perspiciatis repellendus repellat aliquid\\nmagnam sint rem ipsum est\",\n  },\n  {\n    userId: 9,\n    id: 88,\n    title: \"sapiente omnis fugit eos\",\n    body: \"consequatur omnis est praesentium\\nducimus non iste\\nneque hic deserunt\\nvoluptatibus veniam cum et rerum sed\",\n  },\n  {\n    userId: 9,\n    id: 89,\n    title: \"sint soluta et vel magnam aut ut sed qui\",\n    body: \"repellat aut aperiam totam temporibus autem et\\narchitecto magnam ut\\nconsequatur qui cupiditate rerum quia soluta dignissimos nihil iure\\ntempore quas est\",\n  },\n  {\n    userId: 9,\n    id: 90,\n    title: \"ad iusto omnis odit dolor voluptatibus\",\n    body: \"minus omnis soluta quia\\nqui sed adipisci voluptates illum ipsam voluptatem\\neligendi officia ut in\\neos soluta similique molestias praesentium blanditiis\",\n  },\n  {\n    userId: 10,\n    id: 91,\n    title: \"aut amet sed\",\n    body: \"libero voluptate eveniet aperiam sed\\nsunt placeat suscipit molestias\\nsimilique fugit nam natus\\nexpedita consequatur consequatur dolores quia eos et placeat\",\n  },\n  {\n    userId: 10,\n    id: 92,\n    title: \"ratione ex tenetur perferendis\",\n    body: \"aut et excepturi dicta laudantium sint rerum nihil\\nlaudantium et at\\na neque minima officia et similique libero et\\ncommodi voluptate qui\",\n  },\n  {\n    userId: 10,\n    id: 93,\n    title: \"beatae soluta recusandae\",\n    body: \"dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\\nvoluptatem quis enim recusandae ut sed sunt\\nnostrum est odit totam\\nsit error sed sunt eveniet provident qui nulla\",\n  },\n  {\n    userId: 10,\n    id: 94,\n    title: \"qui qui voluptates illo iste minima\",\n    body: \"aspernatur expedita soluta quo ab ut similique\\nexpedita dolores amet\\nsed temporibus distinctio magnam saepe deleniti\\nomnis facilis nam ipsum natus sint similique omnis\",\n  },\n  {\n    userId: 10,\n    id: 95,\n    title: \"id minus libero illum nam ad officiis\",\n    body: \"earum voluptatem facere provident blanditiis velit laboriosam\\npariatur accusamus odio saepe\\ncumque dolor qui a dicta ab doloribus consequatur omnis\\ncorporis cupiditate eaque assumenda ad nesciunt\",\n  },\n  {\n    userId: 10,\n    id: 96,\n    title: \"quaerat velit veniam amet cupiditate aut numquam ut sequi\",\n    body: \"in non odio excepturi sint eum\\nlabore voluptates vitae quia qui et\\ninventore itaque rerum\\nveniam non exercitationem delectus aut\",\n  },\n  {\n    userId: 10,\n    id: 97,\n    title: \"quas fugiat ut perspiciatis vero provident\",\n    body: \"eum non blanditiis soluta porro quibusdam voluptas\\nvel voluptatem qui placeat dolores qui velit aut\\nvel inventore aut cumque culpa explicabo aliquid at\\nperspiciatis est et voluptatem dignissimos dolor itaque sit nam\",\n  },\n  {\n    userId: 10,\n    id: 98,\n    title: \"laboriosam dolor voluptates\",\n    body: \"doloremque ex facilis sit sint culpa\\nsoluta assumenda eligendi non ut eius\\nsequi ducimus vel quasi\\nveritatis est dolores\",\n  },\n  {\n    userId: 10,\n    id: 99,\n    title: \"temporibus sit alias delectus eligendi possimus magni\",\n    body: \"quo deleniti praesentium dicta non quod\\naut est molestias\\nmolestias et officia quis nihil\\nitaque dolorem quia\",\n  },\n  {\n    userId: 10,\n    id: 100,\n    title: \"at nam consequatur ea labore ea harum\",\n    body: \"cupiditate quo est a modi nesciunt soluta\\nipsa voluptas error itaque dicta in\\nautem qui minus magnam et distinctio eum\\naccusamus ratione error aut\",\n  },\n];\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\ninterface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserInterface[];\n}\n\ninterface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: string;\n}\n\ninterface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: AssignRoleToUserActionInterface;\n}\n\ninterface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: CustomeAccessInterface;\n}\n\ninterface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: string;\n}\n\ntype fetchUserAccessInterface = {\n  users: UserInterface[];\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n  in_education: boolean;\n  disability: boolean;\n}\n\ninterface VerifyAllDocumentAction {\n  type: ActionTypes.VERIFY_ALL_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction\n  | VerifyAllDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const fetchUserAccess = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${API.AUTH}/users?page=1&limit=500`\n      );\n      console.log({ users_response: res });\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: res.data.users,\n      });\n    } catch (error) {\n      console.error({ user_error: error });\n    }\n  };\n};\n\nexport const blockUserToSystem = (data: string) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface\n) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: data,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const customizeUserAccess = (data: CustomeAccessInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const verifyAllDocument = (data: VerifyDocumentInterface) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyAllDocumentAction>({\n      type: ActionTypes.VERIFY_ALL_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = ({\n  rows,\n  columns,\n  hideColumns = false,\n  pagination = false,\n  search = false,\n  tableSize = \"w-full\",\n  tableClass,\n  tableId = \"myTable\",\n  rounded = false,\n  searchBG = \"bg-gray-200\",\n  thColor = \"blue\",\n  loading = false,\n}) => {\n  const startPage = 1;\n  tableId = tableId === \"myTable\" ? FC_makeID() : tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${tableSize}`}>\n      {/* search box  */}\n      {search && (\n        <div className={`${searchBG} w-full mb-2`}>\n          {search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={loading}\n              />\n\n              {pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <table\n        className={\n          tableClass\n            ? tableClass\n            : `w-full shadow ${\n                rounded && \"sm:rounded-lg\"\n              } table-auto order-table`\n        }\n        id={tableId}\n      >\n        {!hideColumns && (\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n            <tr\n              className={`text-left tracking-wide bg-${thColor}-100 border-b-2 border-${thColor}-500 text-${thColor}-600`}\n            >\n              {columns.map((column, index) => (\n                <th\n                  key={index}\n                  className={`${column.padding} text-${\n                    column.alignText\n                  } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                  onClick={() =>\n                    column.isSortAllowed && sortThisColumn(tableId, index)\n                  }\n                >\n                  <div className=\"flex items-center gap-1\">\n                    {column.columnTitle}\n                    {column.isSortAllowed && <BiSort />}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n        )}\n        <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n          {rows()}\n        </tbody>\n      </table>\n      {pagination && (\n        <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n          <div>\n            <span className=\"text-xs xs:text-sm text-gray-900\">\n              Showing 1 to {pageSize} of {totalItems - 1} Entries\n            </span>\n          </div>\n          <div>\n            <nav className=\"inline-flex shadow-sm\">\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                    currentPage !== 1 && \"bg-white\"\n                  }`}\n                  aria-label=\"Previous\"\n                  disabled={currentPage === 1 || loading}\n                  onClick={() => setCurrentPage(currentPage - 1)}\n                >\n                  <MdNavigateBefore className=\"h-5 w-5\" />\n                </button>\n              </div>\n              <div>\n                {pages &&\n                  pages.map((page, pageIndex) => (\n                    <button\n                      key={pageIndex}\n                      className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                        page !== currentPage\n                          ? \"bg-white\"\n                          : \"bg-gray-100 cursor-default\"\n                      }`}\n                      disabled={page === currentPage || loading}\n                      onClick={() => setCurrentPage(page)}\n                    >\n                      {page}\n                    </button>\n                  ))}\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                    currentPage !== totalPages && \"bg-white\"\n                  }`}\n                  aria-label=\"Next\"\n                  disabled={currentPage === totalPages || loading}\n                  onClick={() => setCurrentPage(currentPage + 1)}\n                >\n                  <MdNavigateNext className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </nav>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PlansTypeInterface, SessionPlanInterface } from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  CandidatesInterface,\n  DocumentCategoryInterface,\n  DocumentFieldsInterface,\n  DocumentSubCategoryInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { VerifyDocumentInterface } from \"./users\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CATEGORY\nexport interface GetDocumentCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface[];\n}\n\nexport interface CreateDocumentCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface UpdateDocumentCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface DeleteDocumentCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_CATEGORY;\n  payload: string;\n}\n\n// SUB CATEGORY\nexport interface GetDocumentSubCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface[];\n}\n\nexport interface CreateDocumentSubCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface UpdateDocumentSubCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface DeleteDocumentSubCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY;\n  payload: string;\n}\n\n// FIELDS\nexport interface GetDocumentFieldsAction {\n  type: ActionTypes.GET_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface[];\n}\n\nexport interface CreateDocumentFieldsAction {\n  type: ActionTypes.CREATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface UpdateDocumentFieldsAction {\n  type: ActionTypes.UPDATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface DeleteDocumentFieldsAction {\n  type: ActionTypes.DELETE_DOCUMENT_FIELDS;\n  payload: string;\n}\n\n// DOCUMENT CHECKING\nexport interface GetCandidatesInInstituteAtion {\n  type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE;\n  payload: CandidatesInterface[];\n}\n\nexport interface VerifyDocumentAction {\n  type: ActionTypes.VERIFY_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type DocumentCategoryActionType =\n  | GetDocumentCategoryAction\n  | CreateDocumentCategoryAction\n  | UpdateDocumentCategoryAction\n  | DeleteDocumentCategoryAction\n  | GetDocumentSubCategoryAction\n  | CreateDocumentSubCategoryAction\n  | UpdateDocumentSubCategoryAction\n  | DeleteDocumentSubCategoryAction\n  | GetDocumentFieldsAction\n  | CreateDocumentFieldsAction\n  | UpdateDocumentFieldsAction\n  | DeleteDocumentFieldsAction\n  | GetCandidatesInInstituteAtion\n  | VerifyDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CATEGORY\n\nexport const getDocumentCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get(`${API.AUTH}/detailcategory`);\n      console.log({ docCategory: res });\n      dispatch<GetDocumentCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_CATEGORY,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n    }\n  };\n};\n\nexport const createDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// SUB CATEGORY\nexport const getDocumentSubCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentSubCategoryInterface[]>(\n        `${API.AUTH}/detailsubcategory`\n      );\n      console.log({ docSubCategory: res });\n      dispatch<GetDocumentSubCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentSubCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentSubCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentSubCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentSubCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// FIELDS\nexport const getDocumentFields = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentFieldsInterface[]>(\n        `${API.AUTH}/categorysubcatedata`\n      );\n      console.log({ docFields: res });\n      dispatch<GetDocumentFieldsAction>({\n        type: ActionTypes.GET_DOCUMENT_FIELDS,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentFields = (data: DocumentFieldsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentFieldsAction>({\n      type: ActionTypes.CREATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentFields = (data: DocumentFieldsInterface) => {\n  console.log({ reducer: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentFieldsAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentFields = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentFieldsAction>({\n      type: ActionTypes.DELETE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\n// CANDIDATE IN EDUCATION CATEGORY\nexport const getCandidatesInInstitute = (\n  educatin_type_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\", null);\n    try {\n      setAxiosToken();\n      const res = await axios.get<CandidatesInterface[]>(\n        `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}`\n      );\n      const newArray: CandidatesInterface[] = res.data.filter((element) => {\n        return element !== null && element !== undefined;\n      });\n      console.log({ getCandidatesInInstitute: res, newArray });\n      dispatch<GetCandidatesInInstituteAtion>({\n        type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE,\n        payload: newArray,\n        // payload: response.data,\n      });\n      callback(false, \"\", newArray);\n    } catch (error) {\n      console.log({ getCandidatesInInstitute: error });\n      callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const verifyDocument = (data: VerifyDocumentInterface) => {\n  console.log({ action_verify: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyDocumentAction>({\n      type: ActionTypes.VERIFY_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  ApplicationSessionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// APPLICATION SETTINGS ===================================\nexport interface GetApplicationSessionAction {\n  type: ActionTypes.GET_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface[];\n}\n\nexport interface CreateApplicationSessionAction {\n  type: ActionTypes.CREATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface UpdateApplicationSessionAction {\n  type: ActionTypes.UPDATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface DisableApplicationSessionAction {\n  type: ActionTypes.DISABLE_APPLICATION_SESSION;\n  payload: {\n    application_session_id: string;\n    status: boolean;\n  };\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetApplicationSessionAction\n  | CreateApplicationSessionAction\n  | UpdateApplicationSessionAction\n  | DisableApplicationSessionAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ PERIODS =======================\n\nexport const getApplicationSessions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<ApplicationSessionInterface[]>(\n        `${API.APPLICATION}/applicationsesion`\n      );\n      dispatch<GetApplicationSessionAction>({\n        type: ActionTypes.GET_APPLICATION_SESSIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createAplicationSession = (data: ApplicationSessionInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateApplicationSessionAction>({\n      type: ActionTypes.CREATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateAplicationSession = (data: ApplicationSessionInterface) => {\n  console.log({ check: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateApplicationSessionAction>({\n      type: ActionTypes.UPDATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const disableApplicationSession = (data: {\n  application_session_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableApplicationSessionAction>({\n      type: ActionTypes.DISABLE_APPLICATION_SESSION,\n      payload: data,\n    });\n  };\n};\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active?: boolean;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  in_education?: boolean;\n  disability?: boolean;\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: string;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  _id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  _id: string;\n  center_name: string;\n  center_code: number;\n  district_id: string;\n}\n\nexport interface SectorInterface {\n  district_code: number;\n  district_id: string;\n  sector_name: string;\n  sector_code: number;\n  sector_id: string;\n}\n\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  sectors: SectorInterface[];\n  province_code: number;\n  province_id: string;\n  district_name: string;\n  district_code: number;\n  _id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_code: number;\n  _id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  requested_post_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  school_code: number;\n  province_id: string;\n  province_code: number;\n  district_id: string;\n  district_code: number;\n  sector_id: string;\n  sector_code: number;\n  education_category_id: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: string;\n  application_status: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  district: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface LocationSectorTableInterface {\n  province_id: string;\n  province_name: string;\n  province_code: number;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import React, { Component } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { claimReasonInterface } from \"../../../interfaces\";\nimport search from \"../../../utils/search\";\n\nexport const claimReasonsData = [\n  { key: 1, reason: \"Not placed (Sinahawe umwanya)\" },\n  {\n    key: 2,\n    reason:\n      \"Not placed with higher marks (Sinahawe umwanya kandi hari abo ndusha twakoze bimwe bawuhawe)\",\n  },\n  {\n    key: 3,\n    reason:\n      \"Want to change district of placement (Nifuza guhindurirwa akarere nahawemo umwanya)\",\n  },\n  {\n    key: 4,\n    reason: \"Rejected offer by mistake (Nibeshye nanga umwanya nahawe)\",\n  },\n  {\n    key: 0,\n    reason: \"None of the above (nta na kimwe muri ibyo byavuzwe haruguru)\",\n  },\n];\n\ntype ChooseReasonProps = {\n  claimReason: claimReasonInterface | null;\n  setClaimReason: (value: claimReasonInterface | null) => void;\n  setChooseClaimReason: (value: boolean) => void;\n  allClaimReasons: claimReasonInterface[];\n};\n\ntype ChooseReasonState = {\n  searchInput: string;\n};\n\nclass ChooseReason extends Component<ChooseReasonProps, ChooseReasonState> {\n  constructor(props: ChooseReasonProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* SEARCH PART */}\n        <div className=\"flex items-center w-full my-1\">\n          <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            value={this.state.searchInput}\n          />\n          <button\n            className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n            type=\"button\"\n            onClick={() => this.props.setChooseClaimReason(false)}\n          >\n            Cancel\n          </button>\n        </div>\n        {/* END SEARCH PART ///////////////// */}\n\n        <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n          {search(this.props.allClaimReasons, this.state.searchInput).map(\n            (item: claimReasonInterface, index) => (\n              <section key={index.toString() + item.id}>\n                <div\n                  className={`my-1 py-1 w-full px-2 hover:bg-gray-100 cursor-pointer ${\n                    this.props.claimReason &&\n                    this.props.claimReason.id === item.id &&\n                    \"border-l-2 border-blue-600\"\n                  }`}\n                  onClick={() => {\n                    this.props.setChooseClaimReason(false);\n                    this.props.setClaimReason(item);\n                  }}\n                >\n                  <p className=\"text-base text-black\">{item.reason}</p>\n                </div>\n              </section>\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChooseReason;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { fetchUserAccess } from \"../../../actions/users\";\nimport {\n  claimApplicationsPositionInterface,\n  ClaimExamResultsDetails,\n  QuestionLanguage,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\ntype ExaminationFormViewProps = {\n  thisAnswerSheet: ClaimExamResultsDetails;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  fetchUserAccess: Function;\n  PushPopupAlert: Function;\n};\n\nconst ExaminationFormView: React.FC<ExaminationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisAnswerSheet.course}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisAnswerSheet.answer_sheet_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisAnswerSheet.createdAt)}\n            </span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">Questions</div>\n          {props.thisAnswerSheet.questions.map((item, index) => (\n            <div\n              key={index + item.id}\n              className=\"rounded border my-1 p-1 divide-y\"\n            >\n              <div className=\"flex flex-col gap-1 text-base text-gray-600\">\n                <span className={`font-semibold`}>\n                  {item.question.find(\n                    (q) => q.language === QuestionLanguage.Eng\n                  )\n                    ? item.question.find(\n                        (q) => q.language === QuestionLanguage.Eng\n                      )!.title\n                    : item.question[0].title}\n                  :\n                </span>\n                <span className=\"\">\n                  {item.question.find(\n                    (q) => q.language === QuestionLanguage.Eng\n                  )\n                    ? item.question.find(\n                        (q) => q.language === QuestionLanguage.Eng\n                      )!.description\n                    : item.question[0].description}\n                </span>\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-medium\">Right answer</span>\n                  <span className=\"\">\n                    {item.question.find(\n                      (q) => q.language === QuestionLanguage.Eng\n                    )\n                      ? item.question.find(\n                          (q) => q.language === QuestionLanguage.Eng\n                        )!.description\n                      : item.question[0].answer}\n                  </span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return {\n    userList: users,\n  };\n};\n\nexport default connect(mapStateToProps, { PushPopupAlert, fetchUserAccess })(\n  ExaminationFormView\n);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormPlacementListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  myPlacement: candidatePlacementInterface | null;\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n\n  // REDUX //////////////////////\n};\n\nconst FormPlacementList: React.FC<FormPlacementListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            props.myPlacement === null ||\n            isClaimAllowed(\n              props.myClaims,\n              props.activeSession.session_plan_id,\n              props.myPlacement.placed._id\n            )\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.myPlacement ? (\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            props.myPlacement.placed._id\n          ) && (\n            <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(props.myPlacement!.placed._id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  Placed on {props.myPlacement.placed.school.school_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(props.myPlacement!.placed._id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          )\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No placement to claim on!\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\n// const mapStateToProps = ({\n//   course,\n// }: StoreState): {\n//   courses: course[] | null;\n// } => {\n//   return {\n//     courses: course.courses,\n//   };\n// };\nexport default connect(null, {})(FormPlacementList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { getActiveSessionPlan } from \"../../../actions/session\";\nimport { getApplicationSessions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  course,\n  PlansInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { isPlanActive } from \"../../SessionSettings/SessionDetails\";\nimport ApplicationFormView from \"./ApplicationFormView\";\nimport ChooseReason from \"./ChooseReason\";\nimport DocFormView from \"./DocFormView\";\nimport ExaminationFormView from \"./ExaminationFormView\";\nimport FormApplicationList from \"./FormApplicationList\";\nimport FormDocumentList from \"./FormDocumentList\";\nimport FormExamList, {\n  getCourseById,\n  getCourseIdBySheetId,\n} from \"./FormExamList\";\nimport FormPlacementList from \"./FormPlacementList\";\n\nexport const ClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: DocumentClaimUser\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data &&\n    doc.category_subcategory_data.category_subcategory_Data_id.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    console.log({ doc });\n    DocField = documentCategories.documentFields.filter(\n      (c) =>\n        c._id === doc.category_subcategory_data?.category_subcategory_Data_id\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const isClaimAllowed = (\n  allClaim: CandidateClaimInterface[],\n  period_id: string,\n  claimOnId: string\n): boolean => {\n  if (\n    allClaim.find(\n      (item) =>\n        item.period_id === period_id && item.claiming_on_id === claimOnId\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\ntype ClaimFormProps = {\n  // FOR SHORTCUT BUTTONS CALL\n  claim_type?: PlansTypeKeys;\n  file_id?: string;\n  // REQUIRED PROPS\n  formState: boolean;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getMyPlacement: Function;\n  getClaimReasons: Function;\n  getActiveSessionPlan: Function;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  chooseClaimReason: boolean;\n  claimReason: claimReasonInterface | null;\n  myPlacement: candidatePlacementInterface | null;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n  activeSession: SessionPlanInterface | null;\n};\n\nclass ClaimForm extends Component<ClaimFormProps, ClaimFormState> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      activeSession: null,\n      myPlacement: this.props.claiming.myPlacement,\n      chooseClaimReason: false,\n      claimReason: null,\n    };\n  }\n\n  isDocumentIdValid = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let doc = documents.find((item) => item.doc_id === doc_id);\n    if (doc) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (doc.validated_by.validation_status !== \"rejected\") {\n        return {\n          status: false,\n          msg: \"Only rejected document are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.state.activeSession &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.state.activeSession.session_plan_id,\n          doc_id\n        )\n      ) {\n        return {\n          status: false,\n          msg: \"This document already in claiming list!\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.success };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid document id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Documents, please try again\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  isApplicationIdValid = (\n    applications: claimApplicationsInterface[],\n    app_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let app = applications.find((item) => item.application_id === app_id);\n    console.log(\"====================================\");\n    console.log({ app, app_id });\n    console.log(\"====================================\");\n    if (app) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (app.application_status !== ApplicationStates.Rejected) {\n        return {\n          status: false,\n          msg: \"Only rejected application are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.state.activeSession &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.state.activeSession.session_plan_id,\n          app.application_id\n        )\n      ) {\n        return {\n          status: false,\n          msg: \"This application already in claiming list!\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid application id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Application, please try again!\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setChooseClaimReason = (data: boolean) => {\n    this.setState({ chooseClaimReason: data });\n  };\n\n  setClaimReason = (value: claimReasonInterface | null) => {\n    this.setState({ claimReason: value });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  isClaimTypeOpen = (\n    thisSession: SessionPlanInterface,\n    thisType: PlansTypeKeys\n  ): boolean => {\n    let data: PlansInterface | undefined;\n    if (thisType === PlansTypeKeys.APPLICATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.PLACEMENT_TRANSFER) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  isClaimBtnValid = (thisSession: SessionPlanInterface) => {\n    if (this.props.file_id || this.props.claim_type) {\n      // CHECK IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n      if (!this.props.claim_type) {\n        this.props.PushPopupAlert({\n          title: \"Claim type is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.props.file_id) {\n        this.props.PushPopupAlert({\n          title: \"Claim file is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.isClaimTypeOpen(thisSession, this.props.claim_type)) {\n        // IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n        // CHECK IF CLAIM TYPE IS OPEN ================\n        this.props.PushPopupAlert({\n          title: \"Claim type is closed!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      }\n    }\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  isClaimsAllowed = (\n    thisPeriod: SessionPlanInterface\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      this.props.claiming.myClaims === null &&\n      this.props.file_id &&\n      this.props.claim_type\n    ) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string, data?: CandidateClaimInterface[]) => {\n          // !status && setLoadingClaims(status);\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data) {\n            let claim = data.find(\n              (item) =>\n                item.claiming_on_id === this.props.file_id &&\n                item.period_id === thisPeriod.session_plan_id\n            );\n            if (claim) {\n              return {\n                status: false,\n                msg: `You have already claimed on this ${this.displayClaimType(\n                  this.props.claim_type!\n                )}`,\n                alert: PopupAlertTheme.info,\n              };\n            }\n          }\n        }\n      );\n    } else if (\n      this.props.claiming.myClaims &&\n      this.props.file_id &&\n      this.props.claim_type\n    ) {\n      let claim = this.props.claiming.myClaims.find(\n        (item) =>\n          item.claiming_on_id === this.props.file_id &&\n          item.period_id === thisPeriod.session_plan_id\n      );\n      if (claim) {\n        return {\n          status: false,\n          msg: `You have already claimed on this ${this.displayClaimType(\n            this.props.claim_type!\n          )}`,\n          alert: PopupAlertTheme.info,\n        };\n      }\n    }\n\n    return {\n      status: true,\n      msg: \"\",\n      alert: PopupAlertTheme.success,\n    };\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.sessionPlan.activeSessionPlan === null ||\n      this.props.sessionPlan.activeSessionPlan === \"none\"\n    ) {\n      this.props.getActiveSessionPlan(\n        (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data === \"none\") {\n            this.props.PushPopupAlert({\n              title: \"No session active session\",\n              theme: PopupAlertTheme.danger,\n            });\n            this.props.setFormState(false);\n            this.setState({\n              claimFileId: \"\",\n              thisClaimType: null,\n              thisClaimTypeId: \"\",\n              claimComment: \"\",\n              chooseClaimFile: false,\n              formType: \"DEFAULT\",\n              viewThisFile: \"\",\n              formError: null,\n            });\n          } else if (data) {\n            let _isClaimsAllowed = this.isClaimsAllowed(data);\n            if (!_isClaimsAllowed.status) {\n              this.props.PushPopupAlert({\n                title: _isClaimsAllowed.msg,\n                theme: _isClaimsAllowed.alert,\n              });\n              this.props.setFormState(false);\n            }\n            this.setState({ activeSession: data });\n            this.loadExamAnswers(data, this.props.auth.user.user_id);\n            this.isClaimBtnValid(data);\n          }\n        }\n      );\n    } else {\n      this.setState({\n        activeSession: this.props.sessionPlan.activeSessionPlan,\n      });\n      this.isClaimBtnValid(this.props.sessionPlan.activeSessionPlan);\n      let _isClaimsAllowed = this.isClaimsAllowed(\n        this.props.sessionPlan.activeSessionPlan\n      );\n      if (!_isClaimsAllowed.status) {\n        this.props.PushPopupAlert({\n          title: _isClaimsAllowed.msg,\n          theme: _isClaimsAllowed.alert,\n        });\n        this.props.setFormState(false);\n      }\n      this.loadExamAnswers(\n        this.props.sessionPlan.activeSessionPlan,\n        this.props.auth.user.user_id\n      );\n      this.setLoading(false);\n    }\n\n    if (this.props.documentReducer.documentCategory === null) {\n      this.props.getDocumentCategory();\n    }\n    if (this.props.documentReducer.documentSubCategory === null) {\n      this.props.getDocumentSubCategory();\n    }\n    if (this.props.documentReducer.documentFields === null) {\n      this.props.getDocumentFields();\n    }\n\n    if (this.props.claiming.candidateApplications === null) {\n      this.props.getMyRejectedApplications(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string, data?: claimApplicationsInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              // PROPS VALIDATION PROCESS ###############\n              if (\n                this.props.claim_type &&\n                this.props.file_id &&\n                this.state.formType === \"DEFAULT\"\n              ) {\n                if (this.props.claim_type === PlansTypeKeys.APPLICATION) {\n                  let _isApplicationIdValid = this.isApplicationIdValid(\n                    data,\n                    this.props.file_id\n                  );\n                  if (!_isApplicationIdValid.status) {\n                    this.props.PushPopupAlert({\n                      title: _isApplicationIdValid.msg,\n                      theme: _isApplicationIdValid.alert,\n                    });\n                    this.props.setFormState(false);\n                  } else {\n                    this.setState({\n                      thisClaimType: this.props.claim_type,\n                      claimFileId: this.props.file_id,\n                      formType: \"PROPS\",\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    if (this.props.claiming.candidateDocuments === null) {\n      this.props.getMyRejectedDocuments(\n        (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              // PROPS VALIDATION PROCESS ###############\n              if (\n                this.props.claim_type &&\n                this.props.file_id &&\n                this.state.formType === \"DEFAULT\"\n              ) {\n                if (\n                  this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n                ) {\n                  let _isDocumentIdValid = this.isDocumentIdValid(\n                    data,\n                    this.props.file_id\n                  );\n                  if (!_isDocumentIdValid.status) {\n                    this.props.PushPopupAlert({\n                      title: _isDocumentIdValid.msg,\n                      theme: _isDocumentIdValid.alert,\n                    });\n                    // setAlertError(_isDocumentIdValid.msg);\n                    this.props.setFormState(false);\n                  } else {\n                    this.setState({\n                      thisClaimType: this.props.claim_type,\n                      claimFileId: this.props.file_id,\n                      formType: \"PROPS\",\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (this.props.claiming.myPlacement === null) {\n      this.props.getMyPlacement(\n        this.props.auth.user.user_id,\n        (\n          status: boolean,\n          msg: string,\n          data?: candidatePlacementInterface | null\n        ) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n          if (data) {\n            this.setState({ myPlacement: data });\n          }\n        }\n      );\n    }\n\n    // PROPS VALIDATION PROCESS ###############\n    if (\n      this.props.claim_type &&\n      this.props.file_id &&\n      this.state.formType === \"DEFAULT\"\n    ) {\n      this.setState({ thisClaimType: this.props.claim_type });\n      if (\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION &&\n        this.props.claiming.candidateDocuments\n      ) {\n        let _isDocumentIdValid = this.isDocumentIdValid(\n          this.props.claiming.candidateDocuments,\n          this.props.file_id\n        );\n        if (!_isDocumentIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isDocumentIdValid.msg,\n            theme: _isDocumentIdValid.alert,\n          });\n          // setAlertError(_isDocumentIdValid.msg);\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n      if (\n        this.props.claim_type === PlansTypeKeys.APPLICATION &&\n        this.props.claiming.candidateApplications\n      ) {\n        let _isApplicationIdValid = this.isApplicationIdValid(\n          this.props.claiming.candidateApplications,\n          this.props.file_id\n        );\n        if (!_isApplicationIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isApplicationIdValid.msg,\n            theme: _isApplicationIdValid.alert,\n          });\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getExamById = (\n    exams: ClaimExamResultsDetails[],\n    answer_sheet_id: string\n  ): ClaimExamResultsDetails | undefined => {\n    return exams.find((item) => item.answer_sheet_id === answer_sheet_id);\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  cleanToClose = (response?: boolean) => {\n    if (this.state.formType === \"PROPS\" && response) {\n      this.props.setFormState(false, response);\n    } else {\n      this.props.setFormState(false);\n    }\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  loadUserById = async (user_id: string, callback: Function) => {\n    if (isEmptyOrSpaces(user_id)) {\n      return this.props.PushPopupAlert({\n        title: \"No user id provided\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface>(\n        `${API.AUTH}/users/${user_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ loadUserById: res });\n      console.log(\"====================================\");\n      if (res) {\n        callback(res.data);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (!this.state.claimReason) {\n      return this.setFormError({\n        element: \"claim_reason\",\n        msg: `Please select the reason of your claim!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.state.activeSession) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n\n    this.setLoadingForm(true);\n    let old_evaluator_email: string = \"info@system.com\";\n    let old_evaluator_name: string = \"System\";\n    let evaluator_email: string = \"\";\n    let evaluator_name: string = \"\";\n\n    if (this.state.thisClaimType !== PlansTypeKeys.EXAMINATION) {\n      await this.loadUserById(\n        this.getValidation(this.state.claimFileId).old_evaluated_by,\n        (data: UserInterface) => {\n          old_evaluator_email = data.email;\n          old_evaluator_name =\n            data.user_info.fname + \" \" + data.user_info.lname;\n        }\n      );\n    }\n\n    try {\n      console.log(\"====================================\");\n      console.log({\n        claiming_on_id: this.state.claimFileId,\n        type_key: this.state.thisClaimType,\n        user: this.props.auth.user.user_id,\n        period_id: this.state.activeSession.session_plan_id,\n        default_claim_resaons: this.state.claimReason.id,\n        reason: this.state.claimComment,\n        old_reason:\n          this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n          this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n            ? \"System\"\n            : this.getValidation(this.state.claimFileId).old_reason,\n        old_status:\n          this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n          this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n            ? \"Failed\"\n            : this.getValidation(this.state.claimFileId).old_status,\n        old_evaluated_by:\n          this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n          this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n            ? \"\"\n            : this.getValidation(this.state.claimFileId).old_evaluated_by,\n        old_evaluator_email,\n        old_evaluator_name,\n        evaluator_email,\n        evaluator_name,\n      });\n      console.log(\"====================================\");\n\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.state.activeSession.session_plan_id,\n          default_claim_resaons: this.state.claimReason.id,\n          reason: this.state.claimComment,\n          old_reason:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"System\"\n              : this.getValidation(this.state.claimFileId).old_reason,\n          old_status:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Failed\"\n              : this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"\"\n              : this.getValidation(this.state.claimFileId).old_evaluated_by,\n          old_evaluator_email,\n          old_evaluator_name,\n          evaluator_email,\n          evaluator_name,\n        }\n      );\n      console.log({ createClaim: res.data });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose(true);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingForm(false);\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  render() {\n    if (\n      this.state.loading ||\n      this.state.activeSession === null ||\n      (this.props.claiming.myClaims === null &&\n        this.props.file_id &&\n        this.props.claim_type)\n    ) {\n      return null;\n    }\n\n    return (\n      <div className=\"pb-3\">\n        {this.props.formState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length <= 0 &&\n                this.cleanToClose();\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length > 0 &&\n                this.setViewThisFile(\"\");\n            }}\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-900 font-bold text-xl md:ml-1\">\n                {this.state.viewThisFile.length <= 0 && \"Claiming form\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType ===\n                    PlansTypeKeys.DOCUMENT_VALIDATION &&\n                  \"Viewing document\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                  \"Viewing application\"}\n              </div>\n            }\n            widthSizeClass={\n              this.state.viewThisFile.length > 0\n                ? ModalSize.extraLarge\n                : ModalSize.medium\n            }\n            padding={{ title: true, body: false, footer: false }}\n          >\n            {/* CLAIM FORM ============================================== */}\n            {this.state.viewThisFile.length <= 0 && (\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"px-6 pb-3\">\n                  {this.state.alertError && (\n                    <div\n                      className=\"alert-warning cursor-pointer\"\n                      onClick={() => this.setAlertError(null)}\n                    >\n                      {this.state.alertError}\n                    </div>\n                  )}\n                  <div className=\"text-base text-gray-700 sm:text-lg\">\n                    {/* SELECT CLAIM TYPE ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Claim type</label>\n                      <select\n                        className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                          this.state.formType === \"PROPS\" &&\n                          \"cursor-not-allowed\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_type\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                          this.selectClaimType(e.target.value);\n                          this.setClaimFileId(\"\");\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_type\" &&\n                            this.setFormError(null);\n                        }}\n                        value={\n                          this.state.thisClaimType\n                            ? this.state.thisClaimType\n                            : \"\"\n                        }\n                        disabled={\n                          this.state.loadingForm ||\n                          this.state.formType === \"PROPS\"\n                        }\n                      >\n                        <option value=\"\">Choose claim type</option>\n                        {Object.values(PlansTypeKeys).map((item, index) => (\n                          <option\n                            value={item}\n                            key={index + item}\n                            className={`${\n                              item === PlansTypeKeys.MARKS_PUBLICATION ||\n                              item === PlansTypeKeys.PLACEMENT_TRANSFER\n                                ? \"hidden\"\n                                : \"block\"\n                            }`}\n                          >\n                            {capitalizeFirstLetter(\n                              item.toLocaleLowerCase().replace(/_/g, \" \")\n                            )}\n                          </option>\n                        ))}\n                      </select>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_type\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT CLAIM TYPE ============================================== */}\n\n                    {/* SELECT FILE TO CLAIM ON ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>\n                        {this.generateChooseFileTitle(this.state.thisClaimType)}\n                      </label>\n                      <div\n                        className={`text-left bg-white border-2 ${\n                          this.state.formType !== \"PROPS\"\n                            ? \"border-gray-700\"\n                            : \"border-gray-400 text-gray-500\"\n                        } rounded w-full ${\n                          this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_file\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.state.thisClaimType &&\n                          !this.state.chooseClaimFile &&\n                          this.state.formType !== \"PROPS\"\n                            ? \"cursor-pointer\"\n                            : !this.state.chooseClaimFile &&\n                              \"cursor-not-allowed\"\n                        }`}\n                        title={\n                          !this.state.thisClaimType\n                            ? \"Choose claim type first!\"\n                            : \"\"\n                        }\n                        onClick={() => {\n                          this.state.formType === \"DEFAULT\" &&\n                            this.state.thisClaimType &&\n                            !this.state.chooseClaimFile &&\n                            this.setChooseClaimFile(true);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_file\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                        {this.state.claimFileId.length > 0 &&\n                        !this.state.chooseClaimFile ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.DOCUMENT_VALIDATION &&\n                              this.props.claiming.candidateDocuments &&\n                              ClaimGetDocTitle(\n                                this.props.documentReducer,\n                                this.getDocumentById(\n                                  this.props.claiming.candidateDocuments,\n                                  this.state.claimFileId\n                                )\n                              ).main}\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.APPLICATION &&\n                              this.props.claiming.candidateApplications &&\n                              this.getApplicationById(\n                                this.props.claiming.candidateApplications,\n                                this.state.claimFileId\n                              ).position.position_title}\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.EXAMINATION &&\n                              this.props.courses &&\n                              this.props.claiming.myAnswer &&\n                              getCourseIdBySheetId(\n                                this.props.claiming.myAnswer,\n                                this.state.claimFileId\n                              ) &&\n                              getCourseById(\n                                this.props.courses,\n                                getCourseIdBySheetId(\n                                  this.props.claiming.myAnswer,\n                                  this.state.claimFileId\n                                )!.course\n                              ) &&\n                              getCourseById(\n                                this.props.courses,\n                                getCourseIdBySheetId(\n                                  this.props.claiming.myAnswer,\n                                  this.state.claimFileId\n                                )!.course\n                              )!.course_name}\n\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.PLACEMENT_TRANSFER &&\n                              this.state.myPlacement &&\n                              !isEmptyOrSpaces(this.state.claimFileId) &&\n                              \"Placed on \" +\n                                this.state.myPlacement.placed.school\n                                  .school_name}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimFile && (\n                            <p className=\"my-1 mx-2\">\n                              Select Claim{\" \"}\n                              {this.state.thisClaimType &&\n                                this.state.thisClaimType\n                                  .toLocaleLowerCase()\n                                  .replace(/_/g, \" \")}\n                            </p>\n                          )\n                        )}\n                        {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                        {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormDocumentList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateDocuments={\n                                this.props.claiming.candidateDocuments\n                              }\n                              documentCategories={this.props.documentReducer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF REJECTED APPLICATION ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormApplicationList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateApplications={\n                                this.props.claiming.candidateApplications\n                              }\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF FAILED EXAM ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.EXAMINATION &&\n                          this.props.claiming.myAnswer &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormExamList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateAnswers={this.props.claiming.myAnswer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF FAILED EXAM ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* PENDING PLACMENT ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.PLACEMENT_TRANSFER &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormPlacementList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                              myPlacement={this.state.myPlacement}\n                            />\n                          )}\n                        {/* END LISTING OF FAILED EXAM ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_file\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                    {/* CLAIM REASONS ========================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Choose reason of your claim</label>\n                      <div\n                        className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                          this.state.chooseClaimReason ? \"h-64\" : \"h-auto\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_reason\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.props.claiming.claimReasons === null\n                            ? \"cursor-wait\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title=\"Choose the reason for your claim!\"\n                        onClick={() => {\n                          !this.state.chooseClaimReason &&\n                            this.setState({ chooseClaimReason: true });\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_reason\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING SELECTED REASON ============================ */}\n                        {this.state.claimReason &&\n                        !this.state.chooseClaimReason ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.claimReason.reason}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimReason && (\n                            <p className=\"my-1 mx-2\">Select reason</p>\n                          )\n                        )}\n                        {/* END DISPLAYING SELECTED REASON ============================ */}\n\n                        {/* LISTING OF CLAIM REASONS ============================ */}\n                        {this.state.chooseClaimReason &&\n                          this.props.claiming.claimReasons && (\n                            <ChooseReason\n                              setChooseClaimReason={this.setChooseClaimReason}\n                              setClaimReason={this.setClaimReason}\n                              claimReason={this.state.claimReason}\n                              allClaimReasons={this.props.claiming.claimReasons}\n                            />\n                          )}\n                        {/* END LISTING OF CLAIM REASONS ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_reason\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM REASONS ========================================== */}\n\n                    {/* CLAIM COMMENT ============================================== */}\n                    <div className=\"flex flex-col\">\n                      <label>Comment</label>\n                      <textarea\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_comment\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder={`Claim comment`}\n                        style={{ resize: \"none\" }}\n                        value={this.state.claimComment}\n                        onChange={(e) => {\n                          this.setClaimComment(e.target.value);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_comment\" &&\n                            this.setFormError(null);\n                        }}\n                        rows={3}\n                        disabled={this.state.loadingForm}\n                      ></textarea>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM COMMENT ============================================== */}\n                  </div>\n\n                  <div className=\"pt-3 flex justify-between\">\n                    <button\n                      onClick={() => this.cleanToClose()}\n                      className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-not-allowed\"\n                      }`}\n                      type=\"button\"\n                      disabled={this.state.loadingForm}\n                    >\n                      Exit\n                    </button>\n                    <button\n                      className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-wait\"\n                      }`}\n                      type=\"submit\"\n                      disabled={this.state.loadingForm}\n                    >\n                      {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n            {/* END CLAIM FORM ============================================== */}\n\n            {/* CLAIM DOCUMENT VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateDocuments &&\n              this.state.thisClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION && (\n                <DocFormView\n                  thisDoc={this.getDocumentById(\n                    this.props.claiming.candidateDocuments,\n                    this.state.viewThisFile\n                  )}\n                  setViewThisFile={this.setViewThisFile}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                />\n              )}\n            {/* END CLAIM DOCUMENT VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM APPLICATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateApplications &&\n              this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n                <ApplicationFormView\n                  thisApplication={this.getApplicationById(\n                    this.props.claiming.candidateApplications,\n                    this.state.viewThisFile\n                  )}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                />\n              )}\n            {/* END CLAIM APPLICATION VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM EXAMINATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.myAnswer &&\n              this.state.thisClaimType === PlansTypeKeys.EXAMINATION &&\n              this.getExamById(\n                this.props.claiming.myAnswer,\n                this.state.viewThisFile\n              ) && (\n                <ExaminationFormView\n                  thisAnswerSheet={\n                    this.getExamById(\n                      this.props.claiming.myAnswer,\n                      this.state.viewThisFile\n                    )!\n                  }\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                  // thisAnswerSheet={undefined}\n                  // setViewThisFile={undefined}\n                  // setChooseClaimFile={undefined}\n                  // setClaimFileId={undefined}\n                />\n              )}\n            {/* END CLAIM EXAMINATION VIEW ============================================== */}\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  sessionPlan,\n  course,\n}: StoreState): {\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    sessionPlan,\n    documentReducer: document,\n    claiming,\n    courses: course.courses,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getActiveSessionPlan,\n  loadCourses,\n  getMyClaims,\n  getClaimReasons,\n  getMyAnswers,\n  getMyPlacement,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  getApplicationSessions,\n  PushPopupAlert,\n})(ClaimForm);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim, DocumentClaimUser } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate, timestampToDate } from \"../../utils/functions\";\nimport { ClaimGetDocTitle } from \"./Candidate/ClaimForm\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisDoc: DocumentClaimUser;\n  // setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Title:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisDoc.validation_status === \"rejected\"\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected.session_plan_id === item.session_plan_id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected.session_plan_id ===\n                      item.session_plan_id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected.session_plan_id ===\n                            item.session_plan_id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan.session_plan_id !==\n                        item.session_plan_id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null &&\n                      selectedPlan.session_plan_id === item.session_plan_id && (\n                        <div\n                          onClick={() => setSelectedPlan(null)}\n                          className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                        >\n                          Close\n                        </div>\n                      )}\n                  </div>\n                </div>\n                {selectedPlan !== null &&\n                  selectedPlan.session_plan_id === item.session_plan_id && (\n                    <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                      <table className=\"w-full\">\n                        <thead className=\"bg-blue-50\">\n                          <tr className=\"text-left\">\n                            <th className=\"px-3 py-3\">#</th>\n                            <th>Plan</th>\n                            <th>Start date</th>\n                            <th>Ending date</th>\n                            <th>Status</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"text-sm\">\n                          {selectedPlan !== null &&\n                            selectedPlan.session_plan_id ===\n                              item.session_plan_id &&\n                            selectedPlan.plans.length > 0 &&\n                            item.plans.map((plan, i) => (\n                              <tr\n                                key={i + 1}\n                                className={`${\n                                  isPlansActive(item.plans).find(\n                                    (itm) => itm.type_key === plan.type_key\n                                  ) !== undefined\n                                    ? \"bg-blue-100 text-blue-600 font-bold\"\n                                    : \"\"\n                                } text-left border-b border-blue-50`}\n                              >\n                                <td className=\"px-3 py-1\">{i + 1}</td>\n                                <td>{plan.type_title}</td>\n                                <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                                <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                                <td>{plan.type_status}</td>\n                              </tr>\n                            ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChooseSession;\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title + \" in \" + item.field_title}</span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default ViewRequirements;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { search } from \"../../../utils/functions\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getFailedExam = (\n  allData: ClaimExamResultsDetails[],\n  allCourses: course[]\n): ClaimExamResultsDetails[] => {\n  let result: ClaimExamResultsDetails[] = [];\n  allData.forEach((element) => {\n    if (element.total_marks <= 50) {\n      let data = element;\n      data.course_name = getCourseById(allCourses, element.course)\n        ? getCourseById(allCourses, element.course)!.course_name\n        : \"Unknown exam\";\n      result.push(data);\n    }\n  });\n\n  return result;\n};\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormExamListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateAnswers: ClaimExamResultsDetails[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n\n  // REDUX //////////////////////\n  courses: course[] | null;\n};\n\nconst FormExamList: React.FC<FormExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            !props.courses ||\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.courses &&\n        getFailedExam(props.candidateAnswers, props.courses).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.answer_sheet_id\n          )\n        ).length > 0 ? (\n          search(\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ),\n            searchInput\n          ).map((item: ClaimExamResultsDetails, index: number) => (\n            <div\n              className=\"group flex items-center justify-between my-1 hover:bg-gray-100\"\n              key={index + item.answer_sheet_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.answer_sheet_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.course_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.answer_sheet_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No failed exam available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  course,\n}: StoreState): {\n  courses: course[] | null;\n} => {\n  return {\n    courses: course.courses,\n  };\n};\nexport default connect(mapStateToProps, {})(FormExamList);\n","import React, { useEffect, useState } from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { fetchUserAccess } from \"../../../actions/users\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  claimApplicationsInterface,\n  claimApplicationsPositionInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\ntype ApplicationFormViewProps = {\n  thisApplication: claimApplicationsInterface;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  userList: UserInterface[];\n  fetchUserAccess: Function;\n  PushPopupAlert: Function;\n};\n\nconst ApplicationFormView: React.FC<ApplicationFormViewProps> = (props) => {\n  const [loadingUsers, setLoadingUsers] = useState(true);\n\n  useEffect(() => {\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n  }, [loadingUsers, props]);\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisApplication.application_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisApplication.application_status ===\n                ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } py-1`}\n            >\n              {capitalizeFirstLetter(props.thisApplication.application_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : (\n                showEvaluator(\n                  props.userList,\n                  props.thisApplication.override_by.user_id\n                )\n              )}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-semibold text-gray-900\">\n              {props.thisApplication.override_by.comment}\n            </span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Details\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisApplication.position.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisApplication.position.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !==\n                    props.thisApplication.position.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisApplication.position.requirements.length > 0 ? (\n            FC_ApplicationPositionDistinctCategory(\n              props.thisApplication.position,\n              props.documentCategories\n            ).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_ApplicationPositionDistinctCategory(\n                      props.thisApplication.position,\n                      props.documentCategories\n                    ).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return {\n    userList: users,\n  };\n};\n\nexport default connect(mapStateToProps, { PushPopupAlert, fetchUserAccess })(\n  ApplicationFormView\n);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { updateSessionPlan } from \"../../actions/session\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport {\n  allPlanTypes,\n  PlansInterface,\n  PlansTypeInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { DATE, errorToText } from \"../../utils/functions\";\n\nexport const isActivationAllowed = (thisPlans: PlansInterface): boolean => {\n  let today: Date = new Date(),\n    end_date = new Date(thisPlans.end_date);\n  if (end_date.getTime() >= today.getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport const getPlanTypeByKey = (\n  type_key: PlansTypeKeys\n): PlansTypeInterface | undefined => {\n  return allPlanTypes.find((item) => item.type_key === type_key);\n};\n\nexport const isPlanActive = (\n  viewThisSession: SessionPlanInterface,\n  thisPlan: PlansInterface\n): \"OPEN\" | \"CLOSED\" | \"WAITING\" => {\n  if (viewThisSession.is_active) {\n    let today = new Date(),\n      planEndDate = new Date(thisPlan.end_date),\n      planStartDate = new Date(thisPlan.start_date);\n    if (\n      planEndDate.getTime() >= today.getTime() &&\n      planStartDate.getTime() <= today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"OPEN\";\n    } else if (\n      planStartDate.getTime() > today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"WAITING\";\n    }\n  }\n  return \"CLOSED\";\n};\n\ntype SessionDetailsProps = {\n  viewThisSession: SessionPlanInterface;\n  setViewThisSession: (data: SessionPlanInterface) => void;\n\n  // REDUX ----------------\n  updateSessionPlan: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype SessionDetailsState = {\n  loadingRequest: string;\n};\n\nexport class SessionDetails extends Component<\n  SessionDetailsProps,\n  SessionDetailsState\n> {\n  constructor(props: SessionDetailsProps) {\n    super(props);\n\n    this.state = {\n      loadingRequest: \"\",\n    };\n  }\n\n  handlePlanActivation = async (\n    session: SessionPlanInterface,\n    thisPlan: PlansInterface\n  ) => {\n    const newState: \"open\" | \"close\" = session.is_active ? \"close\" : \"open\";\n\n    if (!window.confirm(`Are you sure you want to ${newState} this plan?`)) {\n      return true;\n    }\n\n    if (!isActivationAllowed(thisPlan)) {\n      this.props.PushPopupAlert({\n        title: `Opening/Closing plan which has been expired is not allowed!`,\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    let newData: SessionPlanInterface = {\n      session_plan_name: session.session_plan_name,\n      period: session.period,\n      is_active: session.is_active,\n      plans: [],\n      createdAt: session.createdAt,\n      updatedAt: session.updatedAt,\n      session_plan_id: session.session_plan_id,\n    };\n    for (const key in session.plans) {\n      if (Object.prototype.hasOwnProperty.call(session.plans, key)) {\n        const element = session.plans[key];\n        if (thisPlan.type_key === element.type_key) {\n          if (thisPlan.type_status === SessionPlanTypeStatus.OPEN) {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.CLOSED,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          } else {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.OPEN,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          }\n        } else {\n          newData.plans.push(element);\n        }\n      }\n    }\n\n    console.log(\"====================================\");\n    console.log({ newData });\n    console.log(\"====================================\");\n\n    this.setState({ loadingRequest: thisPlan.type_key });\n    try {\n      const res = await axios.put<SessionPlanInterface>(\n        `${API.CLAIMING}/session/${session.session_plan_id}`,\n        newData\n      );\n      this.props.updateSessionPlan(res.data);\n      this.props.setViewThisSession(res.data);\n      this.props.PushPopupAlert({\n        title: `Session ${newState}d successfully`,\n        theme: PopupAlertTheme.info,\n      });\n      this.setState({ loadingRequest: \"\" });\n      console.log(\"updateSessionPlan: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.warning,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <table className=\"w-full bg-white shadow p-5\" id=\"session_content\">\n        <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n          <tr>\n            <td className=\"p-2\">#</td>\n            <td className=\"p-2\">Plan Type</td>\n            <td className=\"p-2\">Start Date</td>\n            <td className=\"p-2\">End date</td>\n            {this.props.viewThisSession.is_active && (\n              <td className=\"p-2\" colSpan={2}>\n                Status\n              </td>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {/* WHILE DATA FOUND ====================== */}\n          {this.props.viewThisSession.plans.map((item, index) => (\n            <tr\n              key={index + item._id}\n              className={`border-b border-gray-200 hover:bg-gray-100`}\n            >\n              <td className=\"p-2 text-left whitespace-nowrap\">{index + 1}</td>\n              <td className=\"p-2 text-left\">\n                <span className=\"text-lg\">\n                  {getPlanTypeByKey(item.type_key) &&\n                    capitalizeFirstLetter(\n                      getPlanTypeByKey(item.type_key)!.type_title\n                    )}\n                </span>\n              </td>\n              <td className=\"p-2 text-left\">{DATE(item.start_date)}</td>\n              <td className=\"p-2 text-left\">{DATE(item.end_date)}</td>\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isPlanActive(this.props.viewThisSession, item) === \"OPEN\" ? (\n                    <span className={`px-2 py-1 font-semibold text-green-700`}>\n                      Open\n                    </span>\n                  ) : isPlanActive(this.props.viewThisSession, item) ===\n                    \"WAITING\" ? (\n                    <span className={`px-2 py-1 font-semibold text-gray-700`}>\n                      Waiting\n                    </span>\n                  ) : (\n                    <span className={`px-2 py-1 font-semibold text-red-700`}>\n                      Closed\n                    </span>\n                  )}\n                </td>\n              )}\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isActivationAllowed(item) && (\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <div\n                        className={`relative ${\n                          this.state.loadingRequest.length > 0\n                            ? \"cursor-not-allowed\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title={\n                          item.type_status === SessionPlanTypeStatus.OPEN\n                            ? \"Deactivating session\"\n                            : \"Activating session\"\n                        }\n                        onClick={() =>\n                          this.state.loadingRequest.length <= 0 &&\n                          this.handlePlanActivation(\n                            this.props.viewThisSession,\n                            item\n                          )\n                        }\n                      >\n                        <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                        <span\n                          className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                            item.type_status === SessionPlanTypeStatus.CLOSED\n                              ? \"bg-red-500\"\n                              : \"bg-green-500 transform translate-x-full\"\n                          }`}\n                        ></span>\n                      </div>\n                      {this.state.loadingRequest === item.type_key && (\n                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                      )}\n                    </div>\n                  )}\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default connect(null, {\n  updateSessionPlan,\n  PushPopupAlert,\n})(SessionDetails);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  GetClaimingTypes,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\nexport const filterClaimsByClaimType = (\n  claimList: CandidateClaimInterface[],\n  claimType: PlansTypeKeys | \"all\"\n): CandidateClaimInterface[] => {\n  if (claimType === \"all\") {\n    return claimList;\n  }\n\n  return claimList.filter((item) => item.type_key === claimType);\n};\n\ntype AdminFilterByTypeProps = {\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getAllClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst AdminFilterByType: React.FC<AdminFilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n          setLoading(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n      setLoading(false);\n    }\n  }, [loadingClaimTypes, props]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.allClaims && thisType === \"all\") {\n      result = claiming.allClaims.filter(\n        (item) => item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n    if (claiming.allClaims && thisType !== \"all\") {\n      result = claiming.allClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && props.claiming.claimTypes && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default connect(mapStateToProps, {\n  GetClaimingTypes,\n  setSelectedClaimType,\n  getAllClaims,\n  PushPopupAlert,\n})(AdminFilterByType);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { SessionPlanInterface } from \"../../interfaces\";\n\ntype ClaimHeaderTitleProps = {\n  headerTitle: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  setThisPeriod: (state: SessionPlanInterface | null) => void;\n  setLoadingSession: (state: boolean) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst selectPeriod = (\n  sessions: SessionPlanInterface[],\n  period_id: string,\n  setThisPeriod: (state: SessionPlanInterface | null) => void\n) => {\n  setThisPeriod(\n    sessions.filter((item) => item.session_plan_id === period_id)[0]\n  );\n};\n\nconst ClaimHeaderTitle: React.FC<ClaimHeaderTitleProps> = (props) => {\n  const isLoading = (): boolean => {\n    if (props.loading || props.loadingSession || props.periodChanged) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.headerTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              isLoading() ? \"cursor-wait\" : \"cursor-default\"\n            }`}\n            value={props.thisPeriod ? props.thisPeriod.session_plan_id : \"\"}\n            disabled={isLoading()}\n            onChange={(e) => {\n              selectPeriod(\n                props.application_sessions,\n                e.target.value,\n                props.setThisPeriod\n              );\n              props.setLoadingSession(true);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option\n                key={session.session_plan_id + item}\n                value={session.session_plan_id}\n              >\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default ClaimHeaderTitle;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { fetchUserAccess } from \"../../../actions/users\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { ClaimGetDocTitle } from \"./ClaimForm\";\n\ntype DocFormViewProps = {\n  thisDoc: DocumentClaimUser;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  userList: UserInterface[];\n  fetchUserAccess: Function;\n  PushPopupAlert: Function;\n};\n\nconst DocFormView: React.FC<DocFormViewProps> = (props) => {\n  const [loadingUsers, setLoadingUsers] = useState(true);\n\n  useEffect(() => {\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n  }, [loadingUsers, props]);\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-xl\">\n              {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisDoc.doc_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              ################\n              {/* {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )} */}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n          <div className=\"w-full my-1\">\n            <img\n              src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n              alt=\"doc file\"\n              className={`w-full`}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return {\n    userList: users,\n  };\n};\n\nexport default connect(mapStateToProps, { PushPopupAlert, fetchUserAccess })(\n  DocFormView\n);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getRejectedApplicants = (\n  applicationData: claimApplicationsInterface[]\n): claimApplicationsInterface[] => {\n  return applicationData.filter(\n    (item) => item.application_status === ApplicationStates.Rejected\n  );\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormApplicationListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateApplications: claimApplicationsInterface[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n};\n\nconst FormApplicationList: React.FC<FormApplicationListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateApplications, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {getRejectedApplicants(props.candidateApplications).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.application_id\n          )\n        ).length > 0 ? (\n          searchApplication(\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ),\n            searchInput\n          ).map((item, index) => (\n            <div\n              className=\"group flex items-center justify-between my-1 hover:bg-gray-100\"\n              key={index + item.application_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.application_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.position.position_title}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.application_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormApplicationList;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { ClaimGetDocTitle, isClaimAllowed } from \"./ClaimForm\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { CategorySubcategoryData } from \"../../../interfaces/candidatesInterfaces\";\nimport {\n  CandidateClaimInterface,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\n\nexport interface DocumentTitleInterface {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  doc_title: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport const DocumentTitleData = (\n  documentData: DocumentClaimUser[],\n  documentCategories: DocumentReducerInterface\n): DocumentTitleInterface[] | [] => {\n  let documentTemp: DocumentTitleInterface[] = [];\n  for (let i in documentData) {\n    documentTemp.push({\n      category_id: documentData[i].category_id,\n      company: documentData[i].company,\n      description: documentData[i].description,\n      email: documentData[i].email,\n      end_year: documentData[i].end_year,\n      files: documentData[i].files,\n      names: documentData[i].names,\n      phone_number: documentData[i].phone_number,\n      school: documentData[i].school,\n      school_id: documentData[i].school_id,\n      start_year: documentData[i].start_year,\n      sub_category_id: documentData[i].sub_category_id,\n      title: documentData[i].title,\n      year: documentData[i].year,\n      validation_status: documentData[i].validation_status,\n      validated_by: documentData[i].validated_by,\n      doc_id: documentData[i].doc_id,\n      doc_title: ClaimGetDocTitle(documentCategories, documentData[i]).main,\n      category_subcategory_data: documentData[i].category_subcategory_data,\n    });\n  }\n  return documentTemp;\n};\n\nconst getRejectedDocuments = (\n  documentData: DocumentClaimUser[]\n): DocumentClaimUser[] => {\n  console.log({\n    rejected: documentData.filter(\n      (item) => item.validation_status === \"rejected\"\n    ),\n  });\n  return documentData.filter((item) => item.validation_status === \"rejected\");\n};\n\nexport const searchDocuments = (\n  objList: DocumentTitleInterface[],\n  text: any\n): DocumentTitleInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter(\n    (product) =>\n      product.doc_title.toString().toLowerCase().indexOf(text.toLowerCase()) >\n      -1\n  );\n};\n\ntype FormDocumentListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateDocuments: DocumentClaimUser[];\n  documentCategories: DocumentReducerInterface;\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n};\n\nconst FormDocumentList: React.FC<FormDocumentListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.candidateDocuments.filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.doc_id\n          )\n        ).length > 0 ? (\n          searchDocuments(\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ),\n            searchInput\n          ).map((doc, index) => (\n            <section key={index + doc.doc_id}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseClaimFile(false);\n                    props.setClaimFileId(doc.doc_id);\n                  }}\n                >\n                  <p className=\"text-base font-medium text-black\">\n                    {ClaimGetDocTitle(props.documentCategories, doc).main}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => {\n                    props.viewThisFile === doc.doc_id\n                      ? props.setViewThisFile(\"\")\n                      : props.setViewThisFile(doc.doc_id);\n                  }}\n                >\n                  {props.viewThisFile === doc.doc_id ? \"Close\" : \"View\"}\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormDocumentList;\n","import React, { Component } from \"react\";\nimport { MdAdd, MdArrowBack, MdDelete } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  DocumentClaimUser,\n  getMyClaims,\n  getMyPlacement,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { filterClaimsByClaimType } from \"../Admin/AdminFilterByType\";\nimport ClaimApplView from \"../ClaimApplView\";\nimport ClaimDocView, { isClaimEvaluated } from \"../ClaimDocView\";\nimport ClaimExamView from \"../ClaimExamView\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport ClaimPlacementView from \"../ClaimPlacementView\";\nimport ClaimForm, { ClaimGetDocTitle } from \"./ClaimForm\";\nimport FilterByType from \"./FilterByType\";\nimport { getCourseById, getCourseIdBySheetId } from \"./FormExamList\";\n\nexport enum ClaimTypesEnum {\n  application = \"application\",\n  document = \"document\",\n  exam = \"exam\",\n  marks_publication = \"marks publication\",\n  placement = \"placement\",\n}\n\nexport const getDocumentById = (\n  candidateDocuments: DocumentClaimUser[],\n  document_id: string\n): DocumentClaimUser | null => {\n  let result: DocumentClaimUser | undefined = candidateDocuments.find(\n    (item) => item.doc_id === document_id\n  );\n  return result ? result : null;\n};\n\nexport const whichClaimType = (\n  thisClaim: CandidateClaimInterface\n): ClaimTypesEnum | undefined => {\n  if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n    return ClaimTypesEnum.application;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    return ClaimTypesEnum.document;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.EXAMINATION) {\n    return ClaimTypesEnum.exam;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.MARKS_PUBLICATION) {\n    return ClaimTypesEnum.marks_publication;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    return ClaimTypesEnum.placement;\n  }\n};\n\nexport const whichClaimStatus = (\n  thisClaim: CandidateClaimInterface\n): {\n  classes: string;\n  status: string;\n} => {\n  let classes: string, status: string;\n  switch (thisClaim.last_claim_status) {\n    case ClaimStatus.COMPLETED:\n      classes = \"text-blue-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.COMPLETED.toLocaleLowerCase());\n      break;\n    case ClaimStatus.EVALUATED:\n      classes = \"text-green-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.EVALUATED.toLocaleLowerCase());\n      break;\n\n    case ClaimStatus.DELETED:\n      classes = \"text-red-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.DELETED.toLocaleLowerCase());\n      break;\n\n    default:\n      classes = \"text-yellow-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.PENDING.toLocaleLowerCase());\n      break;\n  }\n\n  return { classes, status };\n};\n\nexport const getClaimById = (\n  claimList: CandidateClaimInterface[],\n  claim_id: string\n): CandidateClaimInterface | null => {\n  let result: CandidateClaimInterface | undefined = claimList.find(\n    (item) => item._id === claim_id\n  );\n  return result ? result : null;\n};\n\nexport const getApplicationById = (\n  candidateApplications: claimApplicationsInterface[],\n  application_id: string\n): claimApplicationsInterface | null => {\n  let result: claimApplicationsInterface | undefined =\n    candidateApplications.find(\n      (item) => item.application_id === application_id\n    );\n  return result ? result : null;\n};\n\nexport const displayDocClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: DocumentClaimUser[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = getDocumentById(candidateDocuments, thisClaim.claiming_on_id);\n    result = thisDoc\n      ? ClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  return result;\n};\n\nexport const displayClaimTitle = (\n  claiming: ClaimingReducerType,\n  documentReducer: DocumentReducerInterface,\n  allCourse: course[] | null,\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = thisClaim.claiming_on_id;\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n    claiming.candidateDocuments\n  ) {\n    result = displayDocClaimTitle(\n      documentReducer,\n      claiming.candidateDocuments,\n      thisClaim\n    );\n  }\n  if (\n    thisClaim.type_key === PlansTypeKeys.APPLICATION &&\n    claiming.candidateApplications\n  ) {\n    let thisApplication = getApplicationById(\n      claiming.candidateApplications,\n      thisClaim.claiming_on_id\n    );\n    if (thisApplication) {\n      result = thisApplication.position.position_title;\n    } else {\n      result = \"Application not found\";\n    }\n  }\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n    allCourse &&\n    claiming.myAnswer\n  ) {\n    let thisAnswer = getCourseIdBySheetId(\n      claiming.myAnswer,\n      thisClaim.claiming_on_id\n    );\n    if (thisAnswer && getCourseById(allCourse, thisAnswer.course)) {\n      result = getCourseById(allCourse, thisAnswer.course)!.course_name;\n    } else {\n      result = \"Exam not found\";\n    }\n  }\n\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    result = claiming.myPlacement\n      ? \"Placed on \" + claiming.myPlacement.placed.school.school_name\n      : \"Placement not found\";\n  }\n\n  return result;\n};\n\n// -------------------------------------------------------------------------\n\ntype AppProps = {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  courses: course[] | null;\n  documentReducer: DocumentReducerInterface;\n  getMyPlacement: Function;\n  getMyClaims: Function;\n  loadCourses: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingSession: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  periodChanged: boolean;\n  viewClaim: boolean;\n  claimId: string | null;\n  claimForm: boolean;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  reClaiming: boolean;\n  reClaimingMsg: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingSession: true,\n      thisPeriod: null,\n      periodChanged: false,\n      viewClaim: false,\n      claimId: null,\n      claimForm: false,\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      reClaiming: false,\n      reClaimingMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingSession = (value: boolean) => {\n    this.setState({ loadingSession: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setClaimForm = (value: boolean) => {\n    this.setState({ claimForm: value });\n  };\n\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setReClaiming = (value: boolean) => {\n    this.setState({ reClaiming: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setReClaimingMsg = (value: string) => {\n    this.setState({ reClaimingMsg: value });\n  };\n\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  loadClaims = (thisPeriod: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.myClaims === null && thisPeriod !== null) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && this.setLoading(status);\n          if (status === false && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && this.state.loading) {\n      this.setLoading(false);\n    }\n  };\n\n  setSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null && sessions.length > 0) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadClaims(thisSession ? thisSession : sessions[0]);\n    }\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          if (!status) {\n            this.setLoadingSession(false);\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              // SETTING ACTIVE SESSION ==========================\n              if (this.state.thisPeriod === null) {\n                this.setSession(data);\n              }\n            }\n          }\n        }\n      );\n    } else {\n      this.setSession(this.props.application_sessions);\n      this.setLoadingSession(false);\n    }\n\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n    if (!this.props.documentReducer.documentSubCategory && this.state.loading) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (!this.props.documentReducer.documentFields && this.state.loading) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.myPlacement === null) {\n      this.props.getMyPlacement(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        }\n      );\n    }\n  };\n\n  isDeleteAllowed = (thisCLaim: CandidateClaimInterface): boolean => {\n    if (!isClaimEvaluated(thisCLaim, 1)) {\n      return true;\n    }\n    return false;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getMyClaims(\n      this.props.auth.user.user_id,\n      period_id,\n      (status: boolean, msg: string) => {\n        this.setLoadingRequest(status);\n        !status && this.setPeriodChanged(false);\n        if (status === false && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    if (\n      this.state.loading === true ||\n      this.props.application_sessions === null ||\n      this.props.claiming.myClaims === null\n    ) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            <button\n              className=\"btn mb-3 border-2 border-blue-500 hover:bg-blue-500 hover:text-white flex items-center flex-1 font-bold w-full focus:outline-none\"\n              onClick={() => this.setClaimForm(true)}\n              disabled={\n                this.state.viewClaim ||\n                this.state.loading ||\n                this.state.loadingRequest\n              }\n            >\n              <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n              <span>Claiming</span>\n            </button>\n\n            {/* FILTER SECTION */}\n            <FilterByType loadingClaims={this.state.loadingRequest} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* ------------------------------------------------------------------- */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loading}\n            loadingSession={this.state.loadingSession}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingSession}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td className=\"px-2 py-2\">Claim title</td>\n                  {this.props.claiming.selectedClaimType === \"all\" && (\n                    <td className=\"px-2 py-2\">Claim type</td>\n                  )}\n                  <td className=\"px-2 py-2\">Claim status</td>\n                  <td className=\"px-2 py-2\"></td>\n                </tr>\n              </thead>\n              <tbody>\n                {filterClaimsByClaimType(\n                  this.props.claiming.myClaims,\n                  this.props.claiming.selectedClaimType\n                ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={4}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"No claim found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : (\n                  filterClaimsByClaimType(\n                    this.props.claiming.myClaims,\n                    this.props.claiming.selectedClaimType\n                  ).map((claim, index) => (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={index + claim._id}\n                      onClick={() => {\n                        this.setViewClaim(true);\n                        this.setClaimId(claim._id);\n                      }}\n                    >\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {index + 1}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {displayClaimTitle(\n                          this.props.claiming,\n                          this.props.documentReducer,\n                          this.props.courses,\n                          claim\n                        )}\n                      </td>\n                      {this.props.claiming.selectedClaimType === \"all\" && (\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {whichClaimType(claim)\n                            ? capitalizeFirstLetter(whichClaimType(claim)!)\n                            : \"-\"}\n                        </td>\n                      )}\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        <span\n                          className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                            whichClaimStatus(claim).classes\n                          }`}\n                        >\n                          {whichClaimStatus(claim).status}\n                        </span>\n                      </td>\n                      <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                        <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                          View\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </section>\n        )}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {this.state.viewClaim &&\n          this.props.claiming.myClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.myClaims, this.state.claimId) && (\n            <section className=\"bg-white w-full p-1 my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(false);\n                    this.setLoadingRequest(false);\n                    this.setFormError(null);\n                    this.setReClaiming(false);\n                    this.setReClaimingMsg(\"\");\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                {this.isDeleteAllowed(\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!\n                ) && (\n                  <button\n                    className={`bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                      this.state.loadingRequest\n                        ? \"cursor-not-allowed\"\n                        : \"cursor-pointer\"\n                    } animate__animated animate__fadeIn hidden`}\n                    disabled={this.state.loadingRequest}\n                    // onClick={() => {\n                    //   this.handleDelete();\n                    // }}\n                  >\n                    <MdDelete className=\"w-7 h-7\" />\n                  </button>\n                )}\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n\n              <section className=\"my-2\">\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n                this.props.claiming.candidateDocuments &&\n                getDocumentById(\n                  this.props.claiming.candidateDocuments,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimDocView\n                    thisDoc={\n                      getDocumentById(\n                        this.props.claiming.candidateDocuments,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewImage={this.state.viewImage}\n                    setViewImage={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.DOCUMENT_VALIDATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Document not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n\n                {/* ############################################################### */}\n\n                {/* VIEWING CLAIM OF AN APPLICATION ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.APPLICATION &&\n                this.props.claiming.candidateApplications &&\n                getApplicationById(\n                  this.props.claiming.candidateApplications,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimApplView\n                    thisApplication={\n                      getApplicationById(\n                        this.props.claiming.candidateApplications,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.APPLICATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Application not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN APPLICATION ===================== */}\n\n                {/* VIEWING CLAIM OF AN EXAM ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.EXAMINATION &&\n                this.props.claiming.myAnswer &&\n                this.props.courses &&\n                getCourseIdBySheetId(\n                  this.props.claiming.myAnswer,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) &&\n                getCourseById(\n                  this.props.courses,\n                  getCourseIdBySheetId(\n                    this.props.claiming.myAnswer,\n                    getClaimById(\n                      this.props.claiming.myClaims,\n                      this.state.claimId\n                    )!.claiming_on_id\n                  )!.course\n                ) ? (\n                  <ClaimExamView\n                    thisExam={\n                      getCourseById(\n                        this.props.courses,\n                        getCourseIdBySheetId(\n                          this.props.claiming.myAnswer,\n                          getClaimById(\n                            this.props.claiming.myClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        )!.course\n                      )!\n                    }\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    thisExamSheet={\n                      getCourseIdBySheetId(\n                        this.props.claiming.myAnswer,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.EXAMINATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Exam not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN EXAM ===================== */}\n\n                {/* ----------------------------------------------------------- */}\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.PLACEMENT_TRANSFER &&\n                this.props.claiming.myPlacement ? (\n                  <ClaimPlacementView\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    myPlacement={this.props.claiming.myPlacement}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.DOCUMENT_VALIDATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Document not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n              </section>\n            </section>\n          )}\n        {/* end view claim */}\n\n        {/* ----------------------------------------------------------------------- */}\n        {/* CLAIM FORM  ################ */}\n        {this.state.claimForm && (\n          <ClaimForm\n            formState={this.state.claimForm}\n            setFormState={this.setClaimForm}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    claiming,\n    application_sessions: sessionPlan.allSessionPlans,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const CandidateClaim = connect(mapStateToProps, {\n  getMyClaims,\n  GetAllSessionPlans,\n  loadCourses,\n  getMyPlacement,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(Index);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport {\n  DATE,\n  errorToText,\n  showDate,\n  timestampToDate,\n} from \"../../utils/functions\";\nimport ViewRequirements from \"../Positions/ViewRequirements\";\nimport { FC_ApplicationPositionDistinctCategory } from \"./Candidate/ApplicationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisApplication: claimApplicationsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous.status === ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisClaim.previous.status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous.reason}\n            </span>\n          </div>\n\n          {/* DISPLAY POSITION ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {props.thisApplication.position.description}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.school_level_id\n                        .school_level_name\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.education_institute_id\n                        .education_category_title\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {props.thisApplication.position.courses.map(\n                      (item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            props.thisApplication.position.courses.length - 1 &&\n                            \",\"}\n                        </div>\n                      )\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {props.thisApplication.position.requirements.length > 0 ? (\n                  FC_ApplicationPositionDistinctCategory(\n                    props.thisApplication.position,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewRequirements\n                          requirements={FC_ApplicationPositionDistinctCategory(\n                            props.thisApplication.position,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { ImInfo, ImRadioChecked, ImRadioUnchecked } from \"react-icons/im\";\nimport { MdSwapHoriz } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport {\n  CalculatedMultipleChoiceInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  ClaimGetUserAnswers,\n  ClaimStatus,\n  course,\n  matchingAnswerInterface,\n  multipleChoiceAnswerInterface,\n  questionTypeElementsType,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate, timestampToDate } from \"../../utils/functions\";\nimport { findQuestionType } from \"../DoExam/utils/utils\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisExam: course;\n  thisExamSheet: ClaimExamResultsDetails;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [loading, props]);\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getAnswersByQuestion = (question_id: string): ClaimGetUserAnswers[] => {\n    return props.thisExamSheet.user_answers.filter(\n      (item) => item.question === question_id\n    );\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              Exam of {props.thisExam.course_name}{\" \"}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n\n          {/* DISPLAY EXAM SHEET ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"bg-white w-full rounded p-2 mb-2\">\n              <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                Questions\n              </div>\n              {props.thisExamSheet.questions.map((item, index) => (\n                <div\n                  key={index + item.id}\n                  className=\"rounded border my-2 p-1 shadow divide-y\"\n                >\n                  {/* SINGLE & MULTIPLE && TRUE+FALSE QUESTIONS ===================================== */}\n                  {findQuestionType(\n                    item.type,\n                    props.questionTypes.questionTypes\n                  ) &&\n                    (findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    )! === questionTypeElementsType.MultipleChoice ||\n                      findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! === questionTypeElementsType.SingleMultiple ||\n                      findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! === questionTypeElementsType.TrueFalse) && (\n                      <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                        <span className={`font-semibold`}>\n                          {item.question[0].title}:\n                        </span>\n                        <span className=\"\">{item.question[0].description}</span>\n                        <div className=\"grid grid-cols-2 gap-4 mt-2 mb-1 pt-2 divide-x border bg-gray-50\">\n                          <div className=\"px-4\">\n                            <p className=\"text-md font-medium\">\n                              Expected answer :\n                            </p>\n                            <ul className=\"text-sm w-full my-2\">\n                              {item.question[0].answer.map(\n                                (\n                                  question: multipleChoiceAnswerInterface,\n                                  index\n                                ) => (\n                                  <li\n                                    className={`mb-1 flex items-center`}\n                                    key={index + question.id}\n                                  >\n                                    {question.status ? (\n                                      <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                    ) : (\n                                      <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                    )}\n                                    {question.value}\n                                  </li>\n                                )\n                              )}\n                            </ul>\n                          </div>\n\n                          <div className=\"px-4\">\n                            <p className=\"text-md font-medium\">\n                              Given answers :\n                            </p>\n                            <ul className=\"text-sm w-full my-2\">\n                              {getAnswersByQuestion(item.question_id).length >\n                              0 ? (\n                                getAnswersByQuestion(\n                                  item.question_id\n                                )[0].answer.map(\n                                  (\n                                    answer: multipleChoiceAnswerInterface,\n                                    indexAnswer\n                                  ) => (\n                                    <li\n                                      className=\"mb-3 flex items-center\"\n                                      key={indexAnswer}\n                                    >\n                                      {answer.status ? (\n                                        <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                      ) : (\n                                        <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                      )}\n                                      {answer.value}\n                                    </li>\n                                  )\n                                )\n                              ) : (\n                                <li className=\"mb-3 flex items-center\">\n                                  <ImInfo className=\"h-6 w-6 mr-2\" />\n                                  No Answer provided\n                                </li>\n                              )}\n                            </ul>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center px-4 mb-2\">\n                          <p className=\"text-md font-medium\">Marks :</p>\n                          <span>\n                            {getAnswersByQuestion(item.question_id) &&\n                            getAnswersByQuestion(item.question_id).length > 0\n                              ? getAnswersByQuestion(item.question_id)[0]\n                                  .user_marks\n                              : \"\"}\n                          </span>\n                        </div>\n                      </div>\n                    )}\n\n                  {/* Simple Calculate QUESTIONS ===================================== */}\n                  {findQuestionType(\n                    item.type,\n                    props.questionTypes.questionTypes\n                  ) &&\n                    findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    )! === questionTypeElementsType.SimpleCalculate && (\n                      <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                        <span className={`font-semibold`}>\n                          {item.question[0].title}:\n                        </span>\n                        <span className=\"\">{item.question[0].description}</span>\n                        <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                          <div className=\"px-4 flex items-center gap-2\">\n                            <p className=\"text-md font-medium\">\n                              Expected answer :\n                            </p>\n                            <span>\n                              Between {item.question[0].answer[0].value[0]} + \"\n                              and \"+{item.question[0].answer[0].value[1]}\n                            </span>\n                          </div>\n\n                          <div className=\"px-4 flex items-center gap-2\">\n                            <p className=\"text-md font-medium\">\n                              Given answers :\n                            </p>\n                            {getAnswersByQuestion(item.question_id).length >\n                            0 ? (\n                              getAnswersByQuestion(\n                                item.question_id\n                              )[0].answer.map(\n                                (\n                                  answer: multipleChoiceAnswerInterface,\n                                  indexAnswer\n                                ) => (\n                                  <span key={indexAnswer}>{answer.value}</span>\n                                )\n                              )\n                            ) : (\n                              <span>No Answer provided</span>\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"flex items-center px-4 mb-2\">\n                          <p className=\"text-md font-medium\">Marks :</p>\n                          <span>\n                            {getAnswersByQuestion(item.question_id) &&\n                            getAnswersByQuestion(item.question_id).length > 0\n                              ? getAnswersByQuestion(item.question_id)[0]\n                                  .user_marks\n                              : \"\"}\n                          </span>\n                        </div>\n                      </div>\n                    )}\n\n                  {/* MATCHING QUESTIONS ===================================== */}\n                  {findQuestionType(\n                    item.type,\n                    props.questionTypes.questionTypes\n                  ) &&\n                    findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    )! === questionTypeElementsType.Matching && (\n                      <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                        <span className={`font-semibold`}>\n                          {item.question[0].title}:\n                        </span>\n                        <span className=\"\">{item.question[0].description}</span>\n                        <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                          <div className=\"grid grid-cols-2 gap-4 mt-2 mb-1 pt-2 divide-x border bg-gray-50\">\n                            <div className=\"px-4\">\n                              <p className=\"text-md font-medium\">\n                                Expected answer :\n                              </p>\n                              <ul className=\"text-sm w-full my-2\">\n                                {item.question[0].answer.map(\n                                  (\n                                    question: matchingAnswerInterface,\n                                    index\n                                  ) => (\n                                    <li\n                                      className={`mb-1 flex items-center gap-2 text-lg`}\n                                      key={index + question.id}\n                                    >\n                                      {question.value}\n                                      <MdSwapHoriz className=\"\" />\n                                      {question.status}\n                                    </li>\n                                  )\n                                )}\n                              </ul>\n                            </div>\n\n                            <div className=\"px-4\">\n                              <p className=\"text-md font-medium\">\n                                Given answers :\n                              </p>\n                              <ul className=\"text-sm w-full my-2\">\n                                {getAnswersByQuestion(item.question_id).length >\n                                0 ? (\n                                  getAnswersByQuestion(\n                                    item.question_id\n                                  )[0].answer.map(\n                                    (\n                                      answer: multipleChoiceAnswerInterface,\n                                      indexAnswer\n                                    ) => (\n                                      <li\n                                        className=\"mb-3 flex items-center\"\n                                        key={indexAnswer}\n                                      >\n                                        {answer.status ? (\n                                          <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                        ) : (\n                                          <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                        )}\n                                        {answer.value}\n                                      </li>\n                                    )\n                                  )\n                                ) : (\n                                  <li className=\"mb-3 flex items-center\">\n                                    <ImInfo className=\"h-6 w-6 mr-2\" />\n                                    No Answer provided\n                                  </li>\n                                )}\n                              </ul>\n                            </div>\n                          </div>\n                          <div className=\"flex items-center px-4 mb-2\">\n                            <p className=\"text-md font-medium\">Marks :</p>\n                            <span>\n                              {getAnswersByQuestion(item.question_id) &&\n                              getAnswersByQuestion(item.question_id).length > 0\n                                ? getAnswersByQuestion(item.question_id)[0]\n                                    .user_marks\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n\n                  {/* Short Answer QUESTIONS ===================================== */}\n                  {findQuestionType(\n                    item.type,\n                    props.questionTypes.questionTypes\n                  ) &&\n                    findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    )! === questionTypeElementsType.ShortAnswer && (\n                      <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                        <span className={`font-semibold`}>\n                          {item.question[0].title}:\n                        </span>\n                        <span className=\"\">{item.question[0].description}</span>\n\n                        <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                          <div className=\"px-4 flex items-center gap-2\">\n                            <p className=\"text-md font-medium\">\n                              Expected answer :\n                            </p>\n                            <span>\n                              {capitalizeFirstLetter(\n                                item.question[0].answer[0].value\n                              )}\n                            </span>\n                          </div>\n\n                          <div className=\"px-4 flex items-center gap-2\">\n                            <p className=\"text-md font-medium\">\n                              Given answers :\n                            </p>\n                            {getAnswersByQuestion(item.question_id).length >\n                            0 ? (\n                              getAnswersByQuestion(\n                                item.question_id\n                              )[0].answer.map(\n                                (\n                                  answer: multipleChoiceAnswerInterface,\n                                  indexAnswer\n                                ) => (\n                                  <span key={indexAnswer}>{answer.value}</span>\n                                )\n                              )\n                            ) : (\n                              <span>No Answer provided</span>\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"flex items-center px-4 mb-2\">\n                          <p className=\"text-md font-medium\">Marks :</p>\n                          <span>\n                            {getAnswersByQuestion(item.question_id) &&\n                            getAnswersByQuestion(item.question_id).length > 0\n                              ? getAnswersByQuestion(item.question_id)[0]\n                                  .user_marks\n                              : \"\"}\n                          </span>\n                        </div>\n                      </div>\n                    )}\n\n                  {/* Numeric QUESTIONS ===================================== */}\n                  {findQuestionType(\n                    item.type,\n                    props.questionTypes.questionTypes\n                  ) &&\n                    findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    )! === questionTypeElementsType.Numeric && (\n                      <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                        <span className={`font-semibold`}>\n                          {item.question[0].title}:\n                        </span>\n                        <span className=\"\">{item.question[0].description}</span>\n                        <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                          <div className=\"px-4 flex items-center gap-2\">\n                            <p className=\"text-md font-medium\">\n                              Expected answer :\n                            </p>\n                            <span>{item.question[0].answer[0].value[0]}</span>\n                          </div>\n\n                          <div className=\"px-4 flex items-center gap-2\">\n                            <p className=\"text-md font-medium\">\n                              Given answers :\n                            </p>\n                            {getAnswersByQuestion(item.question_id).length >\n                            0 ? (\n                              getAnswersByQuestion(\n                                item.question_id\n                              )[0].answer.map(\n                                (\n                                  answer: multipleChoiceAnswerInterface,\n                                  indexAnswer\n                                ) => (\n                                  <span key={indexAnswer}>{answer.value}</span>\n                                )\n                              )\n                            ) : (\n                              <span>No Answer provided</span>\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"flex items-center px-4 mb-2\">\n                          <p className=\"text-md font-medium\">Marks :</p>\n                          <span>\n                            {getAnswersByQuestion(item.question_id) &&\n                            getAnswersByQuestion(item.question_id).length > 0\n                              ? getAnswersByQuestion(item.question_id)[0]\n                                  .user_marks\n                              : \"\"}\n                          </span>\n                        </div>\n                      </div>\n                    )}\n\n                  {/* Calculated Multiple Choice QUESTIONS ===================================== */}\n                  {findQuestionType(\n                    item.type,\n                    props.questionTypes.questionTypes\n                  ) &&\n                    findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    )! ===\n                      questionTypeElementsType.CalculatedMultipleChoice && (\n                      <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                        <span className={`font-semibold`}>\n                          {item.question[0].title}:\n                        </span>\n                        <span className=\"\">{item.question[0].description}</span>\n                        <div className=\"grid grid-cols-2 gap-4 mt-2 mb-1 pt-2 divide-x border bg-gray-50\">\n                          <div className=\"px-4\">\n                            <p className=\"text-md font-medium\">\n                              Expected answer :\n                            </p>\n                            <ul className=\"text-sm w-full my-2\">\n                              {item.question[0].answer.map(\n                                (\n                                  question: CalculatedMultipleChoiceInterface,\n                                  index\n                                ) => (\n                                  <li\n                                    className={`mb-1 flex items-center`}\n                                    key={index + question.id}\n                                  >\n                                    {question.status ? (\n                                      <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                    ) : (\n                                      <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                    )}\n                                    {question.value}\n                                  </li>\n                                )\n                              )}\n                            </ul>\n                          </div>\n\n                          <div className=\"px-4\">\n                            <p className=\"text-md font-medium\">\n                              Given answers :\n                            </p>\n                            <ul className=\"text-sm w-full my-2\">\n                              {getAnswersByQuestion(item.question_id).length >\n                              0 ? (\n                                getAnswersByQuestion(\n                                  item.question_id\n                                )[0].answer.map(\n                                  (\n                                    answer: multipleChoiceAnswerInterface,\n                                    indexAnswer\n                                  ) => (\n                                    <li\n                                      className=\"mb-3 flex items-center\"\n                                      key={indexAnswer}\n                                    >\n                                      {answer.status ? (\n                                        <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                      ) : (\n                                        <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                      )}\n                                      {answer.value}\n                                    </li>\n                                  )\n                                )\n                              ) : (\n                                <li className=\"mb-3 flex items-center\">\n                                  <ImInfo className=\"h-6 w-6 mr-2\" />\n                                  No Answer provided\n                                </li>\n                              )}\n                            </ul>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center px-4 mb-2\">\n                          <p className=\"text-md font-medium\">Marks :</p>\n                          <span>\n                            {getAnswersByQuestion(item.question_id) &&\n                            getAnswersByQuestion(item.question_id).length > 0\n                              ? getAnswersByQuestion(item.question_id)[0]\n                                  .user_marks\n                              : \"\"}\n                          </span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n              ))}\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {loading ? (\n                          <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n                        ) : (\n                          props.thisClaim.userDetails.user_info.fname +\n                          \" \" +\n                          props.thisClaim.userDetails.user_info.lname\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  questionTypes,\n}: StoreState): {\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return { questionTypes: questionTypes };\n};\n\nexport default connect(mapStateToProps, {\n  loadQuestionTypes,\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { candidatePlacementInterface } from \"../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate, timestampToDate } from \"../../utils/functions\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimPlacementViewProps = {\n  myPlacement: candidatePlacementInterface;\n  thisClaim: CandidateClaimInterface;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimPlacementView: React.FC<ClaimPlacementViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>School:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div>\n          {/* <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Position:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div> */}\n          <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>District:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.district_id.district_name}\n              </span>\n            </div>\n          </div>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimPlacementView);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ClaimStatus, PlansTypeKeys } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\ntype FilterByTypeProps = {\n  // thisClaimType: ClaimTypesInterface | \"ALL\";\n  // setThisClaimType: React.Dispatch<\n  //   React.SetStateAction<ClaimTypesInterface | \"ALL\">\n  // >;\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst FilterByType: React.FC<FilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRejectedApplications, setLoadingRejectedApplications] =\n    useState<boolean>(true);\n  const [loadingRejectedDocuments, setLoadingRejectedDocuments] =\n    useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.candidateApplications === null) {\n      props.getMyRejectedApplications(\n        props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          if (status === false) {\n            if (msg.length > 0) {\n              props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            setLoadingRejectedApplications(false);\n          }\n        }\n      );\n    } else if (loadingRejectedApplications) {\n      setLoadingRejectedApplications(false);\n    }\n\n    if (props.claiming.candidateDocuments === null) {\n      console.log(\"filterrrrrrrrrrrrrrrrrrrr loadingRejectedDocuments\");\n      props.getMyRejectedDocuments((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingRejectedDocuments(false);\n        }\n      });\n    } else if (loadingRejectedDocuments) {\n      setLoadingRejectedDocuments(false);\n    }\n\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n    }\n\n    if (\n      !loadingRejectedApplications &&\n      !loadingRejectedDocuments &&\n      !loadingClaimTypes &&\n      loading\n    ) {\n      setLoading(false);\n    }\n  }, [\n    loading,\n    loadingClaimTypes,\n    loadingRejectedApplications,\n    loadingRejectedDocuments,\n    props,\n  ]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.myClaims && thisType === \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n    if (claiming.myClaims && thisType !== \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {/* PLACEMENT TRANSFER ================================= */}\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n          {/* <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.APPLICATION)}\n              active={props.thisClaimType === ClaimTypesInterface.APPLICATION}\n              count={countClaims(props.claiming).applications}\n            />\n          </div>\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.PLACEMENT);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.PLACEMENT)}\n              active={props.thisClaimType === ClaimTypesInterface.PLACEMENT}\n              count={countClaims(props.claiming).placement}\n            />\n          </div> */}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default connect(mapStateToProps, {\n  GetClaimingTypes,\n  setSelectedClaimType,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  PushPopupAlert,\n})(FilterByType);\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert, reAssessApplication } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  PositionAPI,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { DATE, showDate } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\nexport const FC_AdminApplicationPositionDistinctCategory = (\n  thisPosition: PositionAPI,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.position_requirement[field]._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.position_requirement[field]._id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nenum viewTabs {\n  profile = \"Applicant Profile\",\n  application = \"Application Details\",\n}\n\ntype AdminClaimAppViewProps = {\n  thisApplication: allClaimApplicationInterface;\n  thisPosition: PositionAPI;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  systemPositions: PositionAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  reAssessApplication: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimAppView: React.FC<AdminClaimAppViewProps> = (props) => {\n  const [viewPosition, setViewPosition] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [selectedTab, setSelectedTab] = useState<viewTabs>(viewTabs.profile);\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: {\n        sub_claim_id: string;\n        evaluation_comment: string;\n        evaluated_by: string;\n        decision_taken_status: ClaimDecisionStatus;\n      } = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await overrideDecision();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  const overrideDecision = async () => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/tolerateappl/${props.thisClaim.claiming_on_id}`,\n        {\n          user_id: props.auth.user.user_id,\n          comment: responseMsg,\n          application_status: ApplicationStates.Shortlisted,\n        }\n      );\n\n      res.data &&\n        props.reAssessApplication({\n          application_id: props.thisClaim.claiming_on_id,\n          application_status: ApplicationStates.Shortlisted,\n        });\n    } catch (error) {\n      console.error({ code_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      // errorToText(error);\n    }\n    setLoadingRequest(false);\n  };\n\n  const getPositionById = (position_id: string): PositionAPI | undefined => {\n    let result = props.systemPositions.find(\n      (item) => item.position_id === position_id\n    );\n\n    return result;\n  };\n\n  return (\n    <section className=\"\">\n      {/* #################### VIEW TABS ################################## */}\n      <div className=\"flex flex-row items-center mx-4\">\n        {Object.values(viewTabs).map((item, i) => (\n          <div\n            key={i}\n            onClick={() => setSelectedTab(item)}\n            className={`animate__animated ${\n              selectedTab === item\n                ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                : \"bg-white border-white text-gray-600\"\n            } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mr-1`}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n      {/* #################### END VIEW TABS ################################## */}\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY POSITION ==================================================== */}\n          {selectedTab === viewTabs.application && (\n            <section className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center\">\n                  <div className=\"flex items-center gap-2\">\n                    <span className={`italic text-gray-600`}>Name:</span>\n                    <span className=\"text-gray-800 font-bold text-2xl\">\n                      {getPositionById(props.thisApplication.position)\n                        ? getPositionById(props.thisApplication.position)!\n                            .position_title\n                        : \"Position not found\"}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .description\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .school_level_id.school_level_name\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .education_institute_id.education_category_title\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {getPositionById(props.thisApplication.position) ? (\n                      getPositionById(\n                        props.thisApplication.position\n                      )!.courses.map((item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            getPositionById(props.thisApplication.position)!\n                              .courses.length -\n                              1 && \",\"}\n                        </div>\n                      ))\n                    ) : (\n                      <NoResult\n                        theme={NoResultThemes.Dark}\n                        value={\"No courses found\"}\n                      />\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {getPositionById(props.thisApplication.position) ? (\n                  getPositionById(props.thisApplication.position)!.requirements\n                    .length > 0 ? (\n                    FC_AdminApplicationPositionDistinctCategory(\n                      getPositionById(props.thisApplication.position)!,\n                      props.documentCategories\n                    ).DistinctCategoriesTemp.map((item, index) => (\n                      <div\n                        className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                        key={index + item.category_id}\n                      >\n                        <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                          <MdTurnedIn />\n                          <span>{item.category_title}</span>\n                        </div>\n                        <div className=\"border bg-white mt-1\">\n                          <ViewRequirements\n                            requirements={FC_AdminApplicationPositionDistinctCategory(\n                              getPositionById(props.thisApplication.position)!,\n                              props.documentCategories\n                            ).PositionsTemp.filter(\n                              (req) => req.category_id === item.category_id\n                            )}\n                          />\n                        </div>\n                      </div>\n                    ))\n                  ) : (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"No requirements\"}\n                    ></NoResult>\n                  )\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <section className=\"w-full my-2 animate__animated animate__fadeIn rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Names:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.previous.evaluater.name}\n                  </span>\n                </div>\n                {false && (\n                  <button\n                    type=\"button\"\n                    className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                    onClick={() => setViewPosition(!viewPosition)}\n                  >\n                    {viewPosition ? \"Hide\" : \"More\"}\n                  </button>\n                )}\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <div className=\"flex items-center\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Position name:</span>\n                <span className=\"text-gray-800 font-bold text-2xl\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .position_title\n                    : \"Position not found\"}\n                </span>\n              </div>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous\n                  ? props.thisClaim.previous.status ===\n                    ApplicationStates.Rejected\n                  : props.thisApplication.application_status ===\n                    ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(\n                    props.thisApplication.application_status\n                  )}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {props.thisApplication.application_session}\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisApplication.override_by.comment}\n            </span>\n          </div>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 mb-5 mt-3\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  formError && formError.element === \"comment\" ? \"red\" : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={responseMsg}\n                onChange={(e) => {\n                  setResponseMsg(e.target.value);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              ></textarea>\n              {formError && formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  evaluateClaim,\n  reAssessApplication,\n  PushPopupAlert,\n})(AdminClaimAppView);\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { ImRadioChecked, ImRadioUnchecked, ImInfo } from \"react-icons/im\";\nimport { MdCancel, MdInfoOutline, MdSwapHoriz } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  CalculatedMultipleChoiceInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  ClaimGetUserAnswers,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  course,\n  matchingAnswerInterface,\n  multipleChoiceAnswerInterface,\n  questionTypeElementsType,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { findQuestionType } from \"../../DoExam/utils/utils\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\nenum viewTabs {\n  profile = \"Applicant Profile\",\n  exam = \"Exam Details\",\n}\n\ntype AdminClaimExamViewProps = {\n  thisExamSheet: ClaimExamResultsDetails;\n  thisExam: course;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n  evaluateClaim: Function;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimExamView: React.FC<AdminClaimExamViewProps> = (props) => {\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loading, setLoading] = useState(true);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [marks, setMarks] = useState<number>(0);\n  const [selectedTab, setSelectedTab] = useState<viewTabs>(viewTabs.profile);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading || props.questionTypes.questionTypes === null) {\n    return <Loading />;\n  }\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (\n      actionTaken === ClaimDecisionStatus.ACCEPTED &&\n      (marks <= 0 || marks > 100)\n    ) {\n      setFormError({\n        element: \"marks\",\n        msg: \"Invalid marks, marks must be between 1 and 10\",\n      });\n\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: {\n        sub_claim_id: string;\n        evaluation_comment: string;\n        evaluated_by: string;\n        evaluator_name: string;\n        evaluator_email: string;\n        decision_taken_status: ClaimDecisionStatus;\n      } = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await handleMarksAddition();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const handleMarksAddition = async () => {\n    try {\n      await axios.put(`${API.DO_EXAM}/answersheet/user/marks/update`, {\n        answer_sheet_id: props.thisClaim.claiming_on_id,\n        marks: marks,\n      });\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  const getAnswersByQuestion = (question_id: string): ClaimGetUserAnswers[] => {\n    return props.thisExamSheet.user_answers.filter(\n      (item) => item.question === question_id\n    );\n  };\n\n  return (\n    <section className=\"\">\n      {/* #################### VIEW TABS ################################## */}\n      <div className=\"flex flex-row items-center mx-4\">\n        {Object.values(viewTabs).map((item, i) => (\n          <div\n            key={i}\n            onClick={() => setSelectedTab(item)}\n            className={`animate__animated ${\n              selectedTab === item\n                ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                : \"bg-white border-white text-gray-600\"\n            } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mr-1`}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n      {/* #################### END VIEW TABS ################################## */}\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY POSITION ==================================================== */}\n          {selectedTab === viewTabs.exam && (\n            <section className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full rounded p-2 mb-2\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Questions\n                </div>\n                {props.thisExamSheet.questions.map((item, index) => (\n                  <div\n                    key={index + item.id}\n                    className=\"rounded border my-2 p-1 shadow divide-y\"\n                  >\n                    {/* SINGLE & MULTIPLE && TRUE+FALSE QUESTIONS ===================================== */}\n                    {findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    ) &&\n                      (findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! === questionTypeElementsType.MultipleChoice ||\n                        findQuestionType(\n                          item.type,\n                          props.questionTypes.questionTypes\n                        )! === questionTypeElementsType.SingleMultiple ||\n                        findQuestionType(\n                          item.type,\n                          props.questionTypes.questionTypes\n                        )! === questionTypeElementsType.TrueFalse) && (\n                        <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                          <span className={`font-semibold`}>\n                            {item.question[0].title}:\n                          </span>\n                          <span className=\"\">\n                            {item.question[0].description}\n                          </span>\n                          <div className=\"grid grid-cols-2 gap-4 mt-2 mb-1 pt-2 divide-x border bg-gray-50\">\n                            <div className=\"px-4\">\n                              <p className=\"text-md font-medium\">\n                                Expected answer :\n                              </p>\n                              <ul className=\"text-sm w-full my-2\">\n                                {item.question[0].answer.map(\n                                  (\n                                    question: multipleChoiceAnswerInterface,\n                                    index\n                                  ) => (\n                                    <li\n                                      className={`mb-1 flex items-center`}\n                                      key={index + question.id}\n                                    >\n                                      {question.status ? (\n                                        <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                      ) : (\n                                        <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                      )}\n                                      {question.value}\n                                    </li>\n                                  )\n                                )}\n                              </ul>\n                            </div>\n\n                            <div className=\"px-4\">\n                              <p className=\"text-md font-medium\">\n                                Given answers :\n                              </p>\n                              <ul className=\"text-sm w-full my-2\">\n                                {getAnswersByQuestion(item.question_id).length >\n                                0 ? (\n                                  getAnswersByQuestion(\n                                    item.question_id\n                                  )[0].answer.map(\n                                    (\n                                      answer: multipleChoiceAnswerInterface,\n                                      indexAnswer\n                                    ) => (\n                                      <li\n                                        className=\"mb-3 flex items-center\"\n                                        key={indexAnswer}\n                                      >\n                                        {answer.status ? (\n                                          <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                        ) : (\n                                          <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                        )}\n                                        {answer.value}\n                                      </li>\n                                    )\n                                  )\n                                ) : (\n                                  <li className=\"mb-3 flex items-center\">\n                                    <ImInfo className=\"h-6 w-6 mr-2\" />\n                                    No Answer provided\n                                  </li>\n                                )}\n                              </ul>\n                            </div>\n                          </div>\n                          <div className=\"flex items-center px-4 mb-2\">\n                            <p className=\"text-md font-medium\">Marks :</p>\n                            <span>\n                              {getAnswersByQuestion(item.question_id) &&\n                              getAnswersByQuestion(item.question_id).length > 0\n                                ? getAnswersByQuestion(item.question_id)[0]\n                                    .user_marks\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      )}\n\n                    {/* Simple Calculate QUESTIONS ===================================== */}\n                    {findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    ) &&\n                      findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! === questionTypeElementsType.SimpleCalculate && (\n                        <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                          <span className={`font-semibold`}>\n                            {item.question[0].title}:\n                          </span>\n                          <span className=\"\">\n                            {item.question[0].description}\n                          </span>\n                          <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                            <div className=\"px-4 flex items-center gap-2\">\n                              <p className=\"text-md font-medium\">\n                                Expected answer :\n                              </p>\n                              <span>\n                                Between {item.question[0].answer[0].value[0]} +\n                                \" and \"+{item.question[0].answer[0].value[1]}\n                              </span>\n                            </div>\n\n                            <div className=\"px-4 flex items-center gap-2\">\n                              <p className=\"text-md font-medium\">\n                                Given answers :\n                              </p>\n                              {getAnswersByQuestion(item.question_id).length >\n                              0 ? (\n                                getAnswersByQuestion(\n                                  item.question_id\n                                )[0].answer.map(\n                                  (\n                                    answer: multipleChoiceAnswerInterface,\n                                    indexAnswer\n                                  ) => (\n                                    <span key={indexAnswer}>\n                                      {answer.value}\n                                    </span>\n                                  )\n                                )\n                              ) : (\n                                <span>No Answer provided</span>\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"flex items-center px-4 mb-2\">\n                            <p className=\"text-md font-medium\">Marks :</p>\n                            <span>\n                              {getAnswersByQuestion(item.question_id) &&\n                              getAnswersByQuestion(item.question_id).length > 0\n                                ? getAnswersByQuestion(item.question_id)[0]\n                                    .user_marks\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      )}\n\n                    {/* MATCHING QUESTIONS ===================================== */}\n                    {findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    ) &&\n                      findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! === questionTypeElementsType.Matching && (\n                        <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                          <span className={`font-semibold`}>\n                            {item.question[0].title}:\n                          </span>\n                          <span className=\"\">\n                            {item.question[0].description}\n                          </span>\n                          <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                            <div className=\"grid grid-cols-2 gap-4 mt-2 mb-1 pt-2 divide-x border bg-gray-50\">\n                              <div className=\"px-4\">\n                                <p className=\"text-md font-medium\">\n                                  Expected answer :\n                                </p>\n                                <ul className=\"text-sm w-full my-2\">\n                                  {item.question[0].answer.map(\n                                    (\n                                      question: matchingAnswerInterface,\n                                      index\n                                    ) => (\n                                      <li\n                                        className={`mb-1 flex items-center gap-2 text-lg`}\n                                        key={index + question.id}\n                                      >\n                                        {question.value}\n                                        <MdSwapHoriz className=\"\" />\n                                        {question.status}\n                                      </li>\n                                    )\n                                  )}\n                                </ul>\n                              </div>\n\n                              <div className=\"px-4\">\n                                <p className=\"text-md font-medium\">\n                                  Given answers :\n                                </p>\n                                <ul className=\"text-sm w-full my-2\">\n                                  {getAnswersByQuestion(item.question_id)\n                                    .length > 0 ? (\n                                    getAnswersByQuestion(\n                                      item.question_id\n                                    )[0].answer.map(\n                                      (\n                                        answer: multipleChoiceAnswerInterface,\n                                        indexAnswer\n                                      ) => (\n                                        <li\n                                          className=\"mb-3 flex items-center\"\n                                          key={indexAnswer}\n                                        >\n                                          {answer.status ? (\n                                            <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                          ) : (\n                                            <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                          )}\n                                          {answer.value}\n                                        </li>\n                                      )\n                                    )\n                                  ) : (\n                                    <li className=\"mb-3 flex items-center\">\n                                      <ImInfo className=\"h-6 w-6 mr-2\" />\n                                      No Answer provided\n                                    </li>\n                                  )}\n                                </ul>\n                              </div>\n                            </div>\n                            <div className=\"flex items-center px-4 mb-2\">\n                              <p className=\"text-md font-medium\">Marks :</p>\n                              <span>\n                                {getAnswersByQuestion(item.question_id) &&\n                                getAnswersByQuestion(item.question_id).length >\n                                  0\n                                  ? getAnswersByQuestion(item.question_id)[0]\n                                      .user_marks\n                                  : \"\"}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                      )}\n\n                    {/* Short Answer QUESTIONS ===================================== */}\n                    {findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    ) &&\n                      findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! === questionTypeElementsType.ShortAnswer && (\n                        <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                          <span className={`font-semibold`}>\n                            {item.question[0].title}:\n                          </span>\n                          <span className=\"\">\n                            {item.question[0].description}\n                          </span>\n\n                          <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                            <div className=\"px-4 flex items-center gap-2\">\n                              <p className=\"text-md font-medium\">\n                                Expected answer :\n                              </p>\n                              <span>\n                                {capitalizeFirstLetter(\n                                  item.question[0].answer[0].value\n                                )}\n                              </span>\n                            </div>\n\n                            <div className=\"px-4 flex items-center gap-2\">\n                              <p className=\"text-md font-medium\">\n                                Given answers :\n                              </p>\n                              {getAnswersByQuestion(item.question_id).length >\n                              0 ? (\n                                getAnswersByQuestion(\n                                  item.question_id\n                                )[0].answer.map(\n                                  (\n                                    answer: multipleChoiceAnswerInterface,\n                                    indexAnswer\n                                  ) => (\n                                    <span key={indexAnswer}>\n                                      {answer.value}\n                                    </span>\n                                  )\n                                )\n                              ) : (\n                                <span>No Answer provided</span>\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"flex items-center px-4 mb-2\">\n                            <p className=\"text-md font-medium\">Marks :</p>\n                            <span>\n                              {getAnswersByQuestion(item.question_id) &&\n                              getAnswersByQuestion(item.question_id).length > 0\n                                ? getAnswersByQuestion(item.question_id)[0]\n                                    .user_marks\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      )}\n\n                    {/* Numeric QUESTIONS ===================================== */}\n                    {findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    ) &&\n                      findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! === questionTypeElementsType.Numeric && (\n                        <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                          <span className={`font-semibold`}>\n                            {item.question[0].title}:\n                          </span>\n                          <span className=\"\">\n                            {item.question[0].description}\n                          </span>\n                          <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                            <div className=\"px-4 flex items-center gap-2\">\n                              <p className=\"text-md font-medium\">\n                                Expected answer :\n                              </p>\n                              <span>{item.question[0].answer[0].value[0]}</span>\n                            </div>\n\n                            <div className=\"px-4 flex items-center gap-2\">\n                              <p className=\"text-md font-medium\">\n                                Given answers :\n                              </p>\n                              {getAnswersByQuestion(item.question_id).length >\n                              0 ? (\n                                getAnswersByQuestion(\n                                  item.question_id\n                                )[0].answer.map(\n                                  (\n                                    answer: multipleChoiceAnswerInterface,\n                                    indexAnswer\n                                  ) => (\n                                    <span key={indexAnswer}>\n                                      {answer.value}\n                                    </span>\n                                  )\n                                )\n                              ) : (\n                                <span>No Answer provided</span>\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"flex items-center px-4 mb-2\">\n                            <p className=\"text-md font-medium\">Marks :</p>\n                            <span>\n                              {getAnswersByQuestion(item.question_id) &&\n                              getAnswersByQuestion(item.question_id).length > 0\n                                ? getAnswersByQuestion(item.question_id)[0]\n                                    .user_marks\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      )}\n\n                    {/* Calculated Multiple Choice QUESTIONS ===================================== */}\n                    {findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    ) &&\n                      findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! ===\n                        questionTypeElementsType.CalculatedMultipleChoice && (\n                        <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                          <span className={`font-semibold`}>\n                            {item.question[0].title}:\n                          </span>\n                          <span className=\"\">\n                            {item.question[0].description}\n                          </span>\n                          <div className=\"grid grid-cols-2 gap-4 mt-2 mb-1 pt-2 divide-x border bg-gray-50\">\n                            <div className=\"px-4\">\n                              <p className=\"text-md font-medium\">\n                                Expected answer :\n                              </p>\n                              <ul className=\"text-sm w-full my-2\">\n                                {item.question[0].answer.map(\n                                  (\n                                    question: CalculatedMultipleChoiceInterface,\n                                    index\n                                  ) => (\n                                    <li\n                                      className={`mb-1 flex items-center`}\n                                      key={index + question.id}\n                                    >\n                                      {question.status ? (\n                                        <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                      ) : (\n                                        <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                      )}\n                                      {question.value}\n                                    </li>\n                                  )\n                                )}\n                              </ul>\n                            </div>\n\n                            <div className=\"px-4\">\n                              <p className=\"text-md font-medium\">\n                                Given answers :\n                              </p>\n                              <ul className=\"text-sm w-full my-2\">\n                                {getAnswersByQuestion(item.question_id).length >\n                                0 ? (\n                                  getAnswersByQuestion(\n                                    item.question_id\n                                  )[0].answer.map(\n                                    (\n                                      answer: multipleChoiceAnswerInterface,\n                                      indexAnswer\n                                    ) => (\n                                      <li\n                                        className=\"mb-3 flex items-center\"\n                                        key={indexAnswer}\n                                      >\n                                        {answer.status ? (\n                                          <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                        ) : (\n                                          <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                        )}\n                                        {answer.value}\n                                      </li>\n                                    )\n                                  )\n                                ) : (\n                                  <li className=\"mb-3 flex items-center\">\n                                    <ImInfo className=\"h-6 w-6 mr-2\" />\n                                    No Answer provided\n                                  </li>\n                                )}\n                              </ul>\n                            </div>\n                          </div>\n                          <div className=\"flex items-center px-4 mb-2\">\n                            <p className=\"text-md font-medium\">Marks :</p>\n                            <span>\n                              {getAnswersByQuestion(item.question_id) &&\n                              getAnswersByQuestion(item.question_id).length > 0\n                                ? getAnswersByQuestion(item.question_id)[0]\n                                    .user_marks\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      )}\n                  </div>\n                ))}\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <section className=\"w-full my-2 animate__animated animate__fadeIn rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Names:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.userDetails.user_info.fname +\n                      \" \" +\n                      props.thisClaim.userDetails.user_info.lname}\n                  </span>\n                </div>\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <div className=\"\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Email:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.email}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Phone:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.phone_number}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Gender:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.user_info.sex === \"M\"\n                    ? \"Male\"\n                    : \"Female\"}\n                </span>\n              </div>\n            </div>\n          )}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-2 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 mb-5 mt-3\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full space-y-1\">\n              {actionTaken === ClaimDecisionStatus.ACCEPTED && (\n                <div className=\"flex items-center justify-end w-full gap-2\">\n                  <span className=\"font-semibold\">Addition marks</span>\n                  <div className=\"px-2\">\n                    <input\n                      placeholder={`Addition marks`}\n                      className={`border border-${\n                        formError && formError.element === \"marks\"\n                          ? \"red\"\n                          : \"gray\"\n                      }-400 rounded px-3 py-1 w-auto focus:outline-none`}\n                      value={marks}\n                      onChange={(e) => {\n                        setMarks(Number(e.target.value));\n                        setFormError(null);\n                      }}\n                      disabled={loadingRequest}\n                    />\n                    {formError && formError.element === \"marks\" && (\n                      <p className=\"text-red-800\">{formError.msg}</p>\n                    )}\n                  </div>\n                </div>\n              )}\n              <div className=\"w-full px-2\">\n                <textarea\n                  placeholder={`Reason of your decision...`}\n                  cols={50}\n                  rows={actionTaken === ClaimDecisionStatus.ACCEPTED ? 2 : 3}\n                  className={`border border-${\n                    formError && formError.element === \"comment\"\n                      ? \"red\"\n                      : \"gray\"\n                  }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                  style={{ resize: \"none\" }}\n                  value={responseMsg}\n                  onChange={(e) => {\n                    setResponseMsg(e.target.value);\n                    setFormError(null);\n                  }}\n                  disabled={loadingRequest}\n                ></textarea>\n                {formError && formError.element === \"comment\" && (\n                  <p className=\"text-red-800\">{formError.msg}</p>\n                )}\n              </div>\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  questionTypes,\n}: StoreState): {\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return {\n    auth,\n    questionTypes,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadQuestionTypes,\n  evaluateClaim,\n  PushPopupAlert,\n})(AdminClaimExamView);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { adminDisplayClaimTitle } from \".\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { verifyDocument } from \"../../../actions/document\";\nimport { VerifyDocumentInterface } from \"../../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DocValidationStatusInterface,\n  UserDocumentsInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate, timestampToDate } from \"../../../utils/functions\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\ntype AdminClaimDocViewProps = {\n  thisDoc: UserDocumentsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimReasons: claimReasonInterface[] | null;\n  candidateId: string;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  actionTaken: ClaimDecisionStatus | null;\n  setActionTaken: (value: ClaimDecisionStatus | null) => void;\n  responseMsg: string;\n  setResponseMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX ==================\n  auth: Auth;\n  verifyDocument: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimDocView: React.FC<AdminClaimDocViewProps> = (props) => {\n  const handleVerify = async () => {\n    if (!props.actionTaken) {\n      props.setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(props.responseMsg)) {\n      props.setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      props.setLoadingRequest(true);\n      const api_body: {\n        sub_claim_id: string;\n        evaluation_comment: string;\n        evaluated_by: string;\n        evaluator_name: string;\n        evaluator_email: string;\n        decision_taken_status: ClaimDecisionStatus;\n      } = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: props.responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: props.actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (props.actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await FC_DocValidation();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          props.setResponseMsg(\"\");\n          props.setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const FC_DocValidation = async () => {\n    const api_body: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n      },\n      in_education: false,\n      disability: false,\n    };\n    const api_redux: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n        date: \"\",\n      },\n      in_education: false,\n      disability: false,\n    };\n\n    try {\n      const res = await axios.post<VerifyDocumentInterface>(\n        `${API.AUTH}/validateuserdoc`,\n        api_body\n      );\n      if (res) {\n        props.verifyDocument(api_redux);\n        await FC_shortListing(props.thisClaim.user);\n        // setDocumentId(\"null\");\n      }\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const FC_shortListing = async (candidate_id: string) => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/doccheckshortlist/${candidate_id}`\n      );\n      console.log({ res });\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Names:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.thisClaim.userDetails.user_info.fname +\n                  \" \" +\n                  props.thisClaim.userDetails.user_info.lname}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className={`italic text-gray-600`}>Title:</span>\n            <span className=\"text-gray-800 font-bold text-2xl\">\n              {/* {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main} */}\n              {props.thisClaim.userDetails.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ).length > 0\n                ? adminDisplayClaimTitle(\n                    props.documentCategories,\n                    props.thisClaim.userDetails.details.filter(\n                      (item) => item.validation_status !== \"waiting\"\n                    ),\n                    props.thisClaim\n                  )\n                : \"-\"}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.commet}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!props.actionTaken && (\n        <section className=\"flex items-center justify-between\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 mb-5 mt-3\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {props.actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.responseMsg}\n                onChange={(e) => {\n                  props.setResponseMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setResponseMsg(\"\");\n                  props.setActionTaken(null);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  evaluateClaim,\n  verifyDocument,\n  PushPopupAlert,\n})(AdminClaimDocView);\n","import React, { Component } from \"react\";\nimport { MdArrowBack } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  getClaimReasons,\n  getAllAnswers,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { verifyAllDocument, fetchUserAccess } from \"../../../actions/users\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  PlansTypeKeys,\n  ClaimDecisionStatus,\n  ClaimTypesInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../../shared/interfaces\";\nimport { getClaimById, whichClaimStatus, whichClaimType } from \"../Candidate\";\nimport { getCourseById, getCourseIdBySheetId } from \"../Candidate/FormExamList\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport AdminClaimAppView from \"./AdminClaimAppView\";\nimport AdminClaimDocView from \"./AdminClaimDocView\";\nimport AdminClaimExamView from \"./AdminClaimExamView\";\nimport AdminFilterByType, {\n  filterClaimsByClaimType,\n} from \"./AdminFilterByType\";\n\n// export const getUserDocuments = (\n//   userList: UserInterface[],\n//   user_id: String\n// ): { user: UserInterface; document: UserDocumentsInterface[] } | null => {\n//   const thisUser = userList.find((item) => item.user_id === user_id);\n//   if (thisUser) {\n//     const thisDoc = thisUser.details.filter(\n//       (item) => item.validation_status !== \"waiting\"\n//     );\n//     return { user: thisUser, document: thisDoc };\n//   }\n//   return null;\n// };\n\nexport const adminDisplayClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: UserDocumentsInterface[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = candidateDocuments.find(\n      (item) => item.doc_id === thisClaim.claiming_on_id\n    );\n    result = thisDoc\n      ? AdminClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n\n  return result;\n};\n\nexport const AdminClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: UserDocumentsInterface\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id &&\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    DocField = documentCategories.documentFields.filter(\n      (c) => c._id === doc.category_subcategory_data\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const getApplicationById = (\n  allApplications: allClaimApplicationInterface[] | null,\n  systemPositions: PositionAPI[] | null,\n  application_id: String\n): {\n  application: allClaimApplicationInterface;\n  position: PositionAPI;\n} | null => {\n  if (allApplications) {\n    let thisApplication = allApplications.find(\n      (item) => item._id === application_id\n    );\n    if (thisApplication && systemPositions) {\n      let thisPosition = systemPositions.find(\n        (item) => item.position_id === thisApplication!.position\n      );\n      if (thisPosition) {\n        return { application: thisApplication, position: thisPosition };\n      }\n    }\n  }\n  return null;\n};\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  courses: course[] | null;\n  loadCourses: Function;\n  getPositions: Function;\n  getClaimReasons: Function;\n  getAllApplications: Function;\n  getAllClaims: Function;\n  getAllAnswers: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  verifyAllDocument: Function;\n  fetchUserAccess: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingData: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  viewClaim: boolean;\n  periodChanged: boolean;\n  claimId: string | null;\n  claimType: string | null;\n  candidateId: string | null;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  actionTaken: ClaimDecisionStatus | null;\n  responseMsg: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingData: false,\n      thisPeriod: null,\n      viewClaim: false,\n      periodChanged: false,\n      claimId: null,\n      claimType: null,\n      candidateId: null,\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      actionTaken: null,\n      responseMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingData = (value: boolean) => {\n    this.setState({ loadingData: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  // ------------------------------\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n  setClaimType = (value: string | null) => {\n    this.setState({ claimType: value });\n  };\n  setCandidateId = (value: string | null) => {\n    this.setState({ candidateId: value });\n  };\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setActionTaken = (value: ClaimDecisionStatus | null) => {\n    this.setState({ actionTaken: value });\n  };\n  setResponseMsg = (value: string) => {\n    this.setState({ responseMsg: value });\n  };\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setDefaultSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadsAllClaims(thisSession ? thisSession : sessions[0]);\n      this.loadsApplications(thisSession ? thisSession : sessions[0]);\n      this.loadsAlAnswers(thisSession ? thisSession : sessions[0]);\n    }\n  };\n\n  loadsAllClaims = (thisSession: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.allClaims === null) {\n      this.props.getAllClaims(\n        2,\n        thisSession.session_plan_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsApplications = (thisSession: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.allApplications === null) {\n      this.props.getAllApplications(\n        thisSession.session_plan_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsAlAnswers = (thisSession: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.allAnswer === null) {\n      this.props.getAllAnswers(\n        thisSession.session_plan_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  componentDidMount = () => {\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              this.setDefaultSession(data);\n            }\n          }\n        }\n      );\n    } else if (this.props.application_sessions.length > 0) {\n      this.setDefaultSession(this.props.application_sessions);\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!this.props.documentReducer.documentSubCategory) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!this.props.documentReducer.documentFields) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    }\n\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n  };\n\n  displayClaimTitle = (\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      let thisDocs = thisClaim.userDetails.details.filter(\n        (item) => item.validation_status !== \"waiting\"\n      );\n      result =\n        thisDocs.length > 0\n          ? adminDisplayClaimTitle(\n              this.props.documentReducer,\n              thisDocs,\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    if (\n      thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.allAnswer\n    ) {\n      let thisAnswer = getCourseIdBySheetId(\n        this.props.claiming.allAnswer,\n        thisClaim.claiming_on_id\n      );\n      if (thisAnswer && getCourseById(this.props.courses, thisAnswer.course)) {\n        result =\n          \"Exam of \" +\n          getCourseById(this.props.courses, thisAnswer.course)!.course_name;\n      } else {\n        result = \"Unknown exam\";\n      }\n    }\n\n    return result;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && this.setPeriodChanged(false);\n      this.setLoadingData(status);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  render() {\n    if (\n      this.state.loading ||\n      this.props.application_sessions === null ||\n      this.props.claiming.allClaims === null ||\n      this.props.claiming.allApplications === null ||\n      this.props.systemPositions === null\n    ) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            {/* FILTER SECTION */}\n            <AdminFilterByType loadingClaims={this.state.loadingData} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loadingData}\n            loadingSession={this.state.loading}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingData}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM CONTENT LIST ===================================== */}\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td className=\"px-2 py-2\">Applicant names</td>\n                  <td className=\"px-2 py-2\">Claim title</td>\n                  {this.props.claiming.selectedClaimType === \"all\" && (\n                    <td className=\"px-2 py-2\">Claim type</td>\n                  )}\n                  <td className=\"px-2 py-2\">Claim status</td>\n                  <td className=\"px-2 py-2\"></td>\n                </tr>\n              </thead>\n              <tbody>\n                {!this.props.claiming.allClaims ||\n                !this.props.claiming.claimTypes ||\n                this.state.loadingData ? (\n                  <TableLoading\n                    cols={\n                      this.props.claiming.selectedClaimType === \"all\" ? 6 : 5\n                    }\n                  />\n                ) : filterClaimsByClaimType(\n                    this.props.claiming.allClaims,\n                    this.props.claiming.selectedClaimType\n                  ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={6}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"No claim found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : (\n                  filterClaimsByClaimType(\n                    this.props.claiming.allClaims,\n                    this.props.claiming.selectedClaimType\n                  ).map((claim, index) => (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={index + claim._id}\n                      onClick={() => {\n                        this.setViewClaim(true);\n                        this.setClaimId(claim._id);\n                        this.setCandidateId(claim.user);\n                        this.setClaimType(\n                          whichClaimType(claim) ? whichClaimType(claim)! : null\n                        );\n                      }}\n                    >\n                      <td className=\"px-3 py-1\">{index + 1}</td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {claim.userDetails.user_info.fname +\n                          \" \" +\n                          claim.userDetails.user_info.lname}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {this.displayClaimTitle(claim)}\n                      </td>\n                      {this.props.claiming.selectedClaimType === \"all\" && (\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {whichClaimType(claim)\n                            ? capitalizeFirstLetter(whichClaimType(claim)!)\n                            : \"-\"}\n                        </td>\n                      )}\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        <span\n                          className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                            whichClaimStatus(claim).classes\n                          }`}\n                        >\n                          {whichClaimStatus(claim).status}\n                        </span>\n                      </td>\n                      <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                        <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                          View\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </section>\n        )}\n        {/* END CLAIM CONTENT LIST ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* view claim */}\n        {this.state.viewClaim &&\n          this.state.candidateId &&\n          this.props.claiming.allClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.allClaims, this.state.claimId) &&\n          this.props.claiming.claimTypes && (\n            <section className=\"bg-white w-full p-1 my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(true);\n                    this.setLoadingRequest(false);\n                    this.setActionTaken(null);\n                    this.setResponseMsg(\"\");\n                    this.setFormError(null);\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                <div className={`text-gray-600 font-extrabold text-2xl px-2`}>\n                  Viewing claim\n                </div>\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n\n              <section className=\"my-2\">\n                {/* FOR DOCUMENT ========================== */}\n                {this.state.claimType &&\n                  this.state.claimType.toLocaleLowerCase() ===\n                    ClaimTypesInterface.DOCUMENT.toLocaleLowerCase() && (\n                    <div>\n                      {getClaimById(\n                        this.props.claiming.allClaims!,\n                        this.state.claimId!\n                      )!.userDetails.details.find(\n                        (item) =>\n                          item.doc_id ===\n                          getClaimById(\n                            this.props.claiming.allClaims!,\n                            this.state.claimId!\n                          )!.claiming_on_id\n                      ) ? (\n                        <AdminClaimDocView\n                          thisDoc={\n                            getClaimById(\n                              this.props.claiming.allClaims!,\n                              this.state.claimId!\n                            )!.userDetails.details.find(\n                              (item) =>\n                                item.doc_id ===\n                                getClaimById(\n                                  this.props.claiming.allClaims!,\n                                  this.state.claimId!\n                                )!.claiming_on_id\n                            )!\n                          }\n                          documentCategories={this.props.documentReducer}\n                          thisClaim={\n                            getClaimById(\n                              this.props.claiming.allClaims,\n                              this.state.claimId\n                            )!\n                          }\n                          claimTypes={this.props.claiming.claimTypes}\n                          viewImage={this.state.viewImage}\n                          setViewImage={this.setViewImage}\n                          loadingRequest={this.state.loadingRequest}\n                          setLoadingRequest={this.setLoadingRequest}\n                          actionTaken={this.state.actionTaken}\n                          setActionTaken={this.setActionTaken}\n                          responseMsg={this.state.responseMsg}\n                          setResponseMsg={this.setResponseMsg}\n                          formError={this.state.formError}\n                          setFormError={this.setFormError}\n                          candidateId={this.state.candidateId}\n                          claimReasons={this.props.claiming.claimReasons}\n                        />\n                      ) : (\n                        <NoResult\n                          theme={NoResultThemes.Dark}\n                          value={\"Document not found\"}\n                        />\n                      )}\n                    </div>\n                  )}\n\n                {/* FOR APPLICATION ========================== */}\n                {this.state.claimType &&\n                  this.state.claimType.toLocaleLowerCase() ===\n                    ClaimTypesInterface.APPLICATION.toLocaleLowerCase() && (\n                    <div>\n                      {getApplicationById(\n                        this.props.claiming.allApplications,\n                        this.props.systemPositions,\n                        getClaimById(\n                          this.props.claiming.allClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      ) ? (\n                        this.props.systemPositions && (\n                          <AdminClaimAppView\n                            thisApplication={\n                              getApplicationById(\n                                this.props.claiming.allApplications,\n                                this.props.systemPositions,\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!.claiming_on_id\n                              )!.application\n                            }\n                            thisPosition={\n                              getApplicationById(\n                                this.props.claiming.allApplications,\n                                this.props.systemPositions,\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!.claiming_on_id\n                              )!.position\n                            }\n                            documentCategories={this.props.documentReducer}\n                            thisClaim={\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!\n                            }\n                            claimTypes={this.props.claiming.claimTypes}\n                            systemPositions={this.props.systemPositions}\n                            claimReasons={this.props.claiming.claimReasons}\n                          />\n                        )\n                      ) : (\n                        <NoResult\n                          theme={NoResultThemes.Dark}\n                          value={\"Application not found\"}\n                        />\n                      )}\n                    </div>\n                  )}\n\n                {/* FOR EXAMINATION ========================== */}\n                {this.state.claimType &&\n                  this.state.claimType.toLocaleLowerCase() ===\n                    ClaimTypesInterface.EXAMINATION.toLocaleLowerCase() && (\n                    <div>\n                      {this.props.claiming.allAnswer &&\n                      this.props.courses &&\n                      getCourseIdBySheetId(\n                        this.props.claiming.allAnswer,\n                        getClaimById(\n                          this.props.claiming.allClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      ) &&\n                      getCourseById(\n                        this.props.courses,\n                        getCourseIdBySheetId(\n                          this.props.claiming.allAnswer,\n                          getClaimById(\n                            this.props.claiming.allClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        )!.course\n                      ) ? (\n                        <AdminClaimExamView\n                          thisExamSheet={\n                            getCourseIdBySheetId(\n                              this.props.claiming.allAnswer,\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!.claiming_on_id\n                            )!\n                          }\n                          thisExam={\n                            getCourseById(\n                              this.props.courses,\n                              getCourseIdBySheetId(\n                                this.props.claiming.allAnswer,\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!.claiming_on_id\n                              )!.course\n                            )!\n                          }\n                          thisClaim={\n                            getClaimById(\n                              this.props.claiming.allClaims,\n                              this.state.claimId\n                            )!\n                          }\n                          claimTypes={this.props.claiming.claimTypes}\n                          claimReasons={this.props.claiming.claimReasons}\n                        />\n                      ) : (\n                        <NoResult\n                          theme={NoResultThemes.Dark}\n                          value={\"Application not found\"}\n                        />\n                      )}\n                    </div>\n                  )}\n              </section>\n            </section>\n          )}\n        {/* end view claim */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const AdminClaim = connect(mapStateToProps, {\n  getAllClaims,\n  loadCourses,\n  getAllAnswers,\n  getClaimReasons,\n  getAllApplications,\n  GetAllSessionPlans,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  verifyAllDocument,\n  fetchUserAccess,\n  getPositions,\n  PushPopupAlert,\n})(Index);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { BiExport, BiSort } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadCourses,\n  loadEducationCategories,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  setSelectedClaimType,\n  GetClaimingTypes,\n  getAllAnswers,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  claimReportContentInterface,\n  claimReportContentKeyInterface,\n  ClaimToPrintInterface,\n} from \"../../../interfaces/claimings\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { PositionAPI } from \"../../../interfaces/position\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\nimport { adminDisplayClaimTitle } from \"../../Claimings/Admin\";\nimport { ClaimTypesEnum, whichClaimType } from \"../../Claimings/Candidate\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport {\n  education_category,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  course,\n} from \"../../../interfaces\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport {\n  getCourseIdBySheetId,\n  getCourseById,\n} from \"../../Claimings/Candidate/FormExamList\";\n\nexport const reportClaimType = (\n  type: PlansTypeKeys | \"all\"\n): ClaimTypesEnum | \"all\" => {\n  let result: ClaimTypesEnum | \"all\" = \"all\";\n  switch (type) {\n    case PlansTypeKeys.APPLICATION:\n      result = ClaimTypesEnum.application;\n      break;\n    case PlansTypeKeys.DOCUMENT_VALIDATION:\n      result = ClaimTypesEnum.document;\n      break;\n    case PlansTypeKeys.EXAMINATION:\n      result = ClaimTypesEnum.exam;\n      break;\n    case PlansTypeKeys.MARKS_PUBLICATION:\n      result = ClaimTypesEnum.marks_publication;\n      break;\n    case PlansTypeKeys.PLACEMENT_TRANSFER:\n      result = ClaimTypesEnum.placement;\n      break;\n    default:\n      result = \"all\";\n      break;\n  }\n\n  return result;\n};\n\nconst searchData = (\n  objList: ClaimToPrintInterface[],\n  text: string\n): ClaimToPrintInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"names\" ||\n        prop === \"gender\" ||\n        prop === \"national_id\" ||\n        prop === \"phone\" ||\n        prop === \"email\" ||\n        prop === \"claim_title\" ||\n        prop === \"claim_type\" ||\n        prop === \"claim_level\" ||\n        prop === \"education_category\" ||\n        prop === \"claim_session\" ||\n        prop === \"date\" ||\n        prop === \"decision\"\n      ) {\n        if (product[prop]) {\n          flag =\n            product[prop]!.toString()\n              .toLowerCase()\n              .indexOf(text.toLowerCase()) > -1;\n        }\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nconst defaultReportContent: claimReportContentInterface[] = [\n  {\n    key: claimReportContentKeyInterface.names,\n    title: \"Applicant Names\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  { key: claimReportContentKeyInterface.gender, title: \"Gender\", status: true },\n  { key: claimReportContentKeyInterface.phone, title: \"Phone\", status: true },\n  {\n    key: claimReportContentKeyInterface.claim_session,\n    title: \"Claim Session\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.education_category,\n    title: \"Education Institute\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.date,\n    title: \"Claim Date\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.decision,\n    title: \"Decision\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_title,\n    title: \"Claim Title\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_type,\n    title: \"Claim Type\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_level,\n    title: \"Claim Level\",\n    status: true,\n  },\n];\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  courses: course[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadCourses: Function;\n  getAllAnswers: Function;\n  setSelectedClaimType: Function;\n  getPositions: Function;\n  getAllClaims: Function;\n  GetClaimingTypes: Function;\n  getAllApplications: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst _ClaimingReport: React.FC<AppProps> = (props) => {\n  const [thisPeriod, setThisPeriod] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [thisLevel, setThisLevel] = useState<number | \"all\">(\"all\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [periodChanged, setPeriodChanged] = useState<boolean>(false);\n  const [loadingPosition, setLoadingPosition] = useState<boolean>(true);\n  const [loadingApplications, setLoadingApplications] = useState<boolean>(true);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(true);\n  const [loadingCourses, setLoadingCourses] = useState<boolean>(true);\n  const [loadingDocuments, setLoadingDocuments] = useState<boolean>(true);\n  const [loadingInstitutes, setLoadingInstitutes] = useState<boolean>(true);\n  const [loadingClarifications, setLoadingClarifications] =\n    useState<boolean>(true);\n  const [loadingFields, setLoadingFields] = useState<boolean>(true);\n  const [downloading, setDownloading] = useState<boolean>(false);\n  const [claimToPrint, setClaimToPrint] = useState<\n    ClaimToPrintInterface[] | null\n  >();\n\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [generateReportModal, setGenerateReportModal] = useState<{\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null>(null);\n  const [reportTitle, setReportTitle] = useState<string>(\"\");\n  const [reportContent, setReportContent] =\n    useState<claimReportContentInterface[]>(defaultReportContent);\n  const [selectAll, setSelectAll] = useState<boolean>(true);\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [selectPeriod, setSelectPeriod] = useState<boolean>(false);\n  const [thisEducation, setThisEducation] = useState<\n    education_category | \"all\"\n  >(\"all\");\n\n  useEffect(() => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      props.schoolLevels.education_categories === null ||\n      props.schoolLevels.education_categories.length === 0\n    ) {\n      props.loadEducationCategories(setLoadingInstitutes);\n    } else {\n      setLoadingInstitutes(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n    // LOADING CLAIM TYPES ========================================\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n    // END LOADING CLAIM TYPES ========================================\n    // LOADING APPLICATION SESSION ====================================\n    if (props.application_sessions === null) {\n      props.GetAllSessionPlans((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (\n      thisPeriod === null &&\n      !loadingSession &&\n      props.application_sessions &&\n      props.application_sessions.length > 0\n    ) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setThisPeriod(thisSession ? thisSession : props.application_sessions[0]);\n      if (props.claiming.allAnswer === null) {\n        props.getAllAnswers(\n          thisSession\n            ? thisSession.session_plan_id\n            : props.application_sessions[0].session_plan_id,\n          (status: boolean, msg: string) => {\n            setLoading(status);\n            if (!status && msg.length) {\n              props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        );\n      }\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!props.documentReducer.documentCategory && loadingDocuments) {\n      props.getDocumentCategory();\n      setLoadingDocuments(false);\n    } else if (loadingDocuments) {\n      setLoadingDocuments(false);\n    }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!props.documentReducer.documentSubCategory && loadingClarifications) {\n      props.getDocumentSubCategory();\n      setLoadingClarifications(false);\n    } else if (loadingClarifications) {\n      setLoadingClarifications(false);\n    }\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!props.documentReducer.documentFields && loadingFields) {\n      props.getDocumentFields();\n      setLoadingFields(false);\n    } else if (loadingFields) {\n      setLoadingFields(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allClaims === null && thisPeriod !== null) {\n      props.getAllClaims(\n        2,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingClaims(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingClaims) {\n      setLoadingClaims(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allApplications === null && thisPeriod !== null) {\n      props.getAllApplications(\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingApplications(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingApplications) {\n      setLoadingApplications(false);\n    }\n\n    if (props.systemPositions === null) {\n      props.getPositions((status: boolean, msg: string) => {\n        setLoadingPosition(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (loadingPosition) {\n      setLoadingPosition(false);\n    }\n\n    // LOADING COURSE ====================================\n    if (\n      props.courses === null ||\n      (props.courses.length === 0 && loadingCourses)\n    ) {\n      props.loadCourses(setLoadingCourses);\n    } else if (loadingCourses) {\n      setLoadingCourses(false);\n    }\n  }, [\n    loadingApplications,\n    loadingClaims,\n    loadingClarifications,\n    loadingCourses,\n    loadingDocuments,\n    loadingFields,\n    loadingPosition,\n    loadingSession,\n    props,\n    thisPeriod,\n  ]);\n\n  if (\n    loading === true ||\n    props.courses === null ||\n    props.systemPositions === null\n  ) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  const displayClaimTitle = (thisClaim: CandidateClaimInterface): string => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      result =\n        thisClaim.userDetails.details.filter(\n          (item) => item.validation_status !== \"waiting\"\n        ).length > 0\n          ? adminDisplayClaimTitle(\n              props.documentReducer,\n              thisClaim.userDetails.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ),\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (props.claiming.allApplications) {\n        let thisApplication = props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          props.claiming.allApplications &&\n          props.systemPositions\n        ) {\n          let thisPosition = props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    if (\n      thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n      props.courses &&\n      props.claiming.allAnswer\n    ) {\n      let thisAnswer = getCourseIdBySheetId(\n        props.claiming.allAnswer,\n        thisClaim.claiming_on_id\n      );\n      if (thisAnswer && getCourseById(props.courses, thisAnswer.course)) {\n        result =\n          \"Exam of \" +\n          getCourseById(props.courses, thisAnswer.course)!.course_name;\n      } else {\n        result = \"Unknown exam\";\n      }\n    }\n\n    return result;\n  };\n\n  const getClaimInstitute = (\n    thisClaim: CandidateClaimInterface\n  ): string | null => {\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      return null;\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (props.claiming.allApplications) {\n        let thisApplication = props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          props.claiming.allApplications &&\n          props.systemPositions\n        ) {\n          // return thisApplication.\n          let thisPosition = props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            return thisPosition.education_institute_id.education_institute_id;\n          }\n        }\n      }\n    }\n\n    return null;\n  };\n\n  const onPeriodChange = (period_id: string) => {\n    setPeriodChanged(true);\n    props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && setPeriodChanged(false);\n      if (status === false && msg.length) {\n        props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  const isClaimTypeActive = (\n    selectedType: PlansTypeKeys | \"all\",\n    currentType: PlansTypeKeys | \"all\"\n  ): boolean => {\n    if (currentType === \"all\" && selectedType === \"all\") {\n      return true;\n    } else if (currentType !== \"all\" && selectedType !== \"all\") {\n      if (currentType === selectedType) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n    } else {\n      setSortOrder(\"ASC\");\n    }\n    setSortProperty(thisProperty);\n    setIsSorted(true);\n  };\n\n  const ClaimTypes = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    type: PlansTypeKeys | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: number;\n      type: PlansTypeKeys | \"all\";\n    }[] = [{ title: \"All types\", count: claims.length, type: \"all\" }];\n\n    Object.values(PlansTypeKeys).forEach((PlansKey) => {\n      if (PlansKey !== PlansTypeKeys.MARKS_PUBLICATION) {\n        output.push({\n          title: capitalizeFirstLetter(reportClaimType(PlansKey)),\n          count:\n            claims.length > 0\n              ? claims.filter(\n                  (itm) => itm.claim_type === reportClaimType(PlansKey)\n                ).length\n              : 0,\n          type: PlansKey,\n        });\n      }\n    });\n\n    return output;\n  };\n\n  const ClaimLevels = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    level: number | \"all\";\n  }[] => {\n    let output: {\n        title: string;\n        count: number;\n        level: number | \"all\";\n      }[] = [{ title: \"All levels\", count: claims.length, level: \"all\" }],\n      levels: number[] = [1, 2];\n    for (let i in levels) {\n      output.push({\n        title: \"Level \" + levels[i],\n        count: claims.filter((itm) => itm.claim_level === levels[i]).length,\n        level: levels[i],\n      });\n    }\n    return output;\n  };\n\n  const updateReportContent = (key: claimReportContentKeyInterface) => {\n    let index: number = reportContent.findIndex((item) => item.key === key);\n    let newArray: claimReportContentInterface[] = reportContent;\n    newArray[index].status = !newArray[index].status;\n    setReportContent(newArray);\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      setSelectAll(false);\n    } else {\n      setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    updateClaimToPrint();\n  };\n\n  const updateClaimToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (thisPeriod) {\n      let title = \"Claim Report \" + thisPeriod.session_plan_name;\n      // if (thisLevel!==\"all\") {\n      //   title = \"Claim Report - Level \"+thisLevel + thisPeriod.session_plan_name;\n      // }\n      setReportTitle(title);\n    }\n    // UPDATE CONTENT =============================\n    if (props.claiming.allClaims && props.claiming.claimTypes) {\n      let arrayNew: ClaimToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in props.claiming.allClaims) {\n        if (\n          Object.prototype.hasOwnProperty.call(props.claiming.allClaims, key)\n        ) {\n          for (const keyClaim in props.claiming.allClaims[key].claims) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                props.claiming.allClaims[key].claims,\n                keyClaim\n              )\n            ) {\n              const element = props.claiming.allClaims[key].claims[keyClaim];\n              const thisType = whichClaimType(props.claiming.allClaims[key]);\n              let dataArray: ClaimToPrintInterface = {\n                claim_id: n,\n                names:\n                  props.claiming.allClaims[key].userDetails.user_info.fname +\n                  \" \" +\n                  props.claiming.allClaims[key].userDetails.user_info.lname,\n                gender: props.claiming.allClaims[key].userDetails.user_info.sex\n                  ? \"Male\"\n                  : \"Female\",\n                national_id: props.claiming.allClaims[key].userDetails.n_id!,\n                phone: props.claiming.allClaims[key].userDetails.phone_number,\n                email: props.claiming.allClaims[key].userDetails.email,\n                claim_type: thisType ? thisType : \"\",\n                claim_level: element.level,\n                education_category: \"\",\n                claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n                date: DATE(element.createdAt),\n                decision: element.decision_taken_status\n                  ? element.decision_taken_status\n                  : \"PENDING\",\n                claim_title: displayClaimTitle(props.claiming.allClaims[key]),\n              };\n              for (const key in reportContent) {\n                if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n                  if (!reportContent[key].status) {\n                    delete dataArray[reportContent[key].key];\n                  }\n                }\n              }\n              arrayNew.push(dataArray);\n              n++;\n            }\n          }\n        }\n      }\n      setClaimToPrint(arrayNew);\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  const FC_ClaimData = (\n    allClaims: CandidateClaimInterface[] | null\n  ): ClaimToPrintInterface[] | null => {\n    if (allClaims === null) return null;\n    let arrayNew: ClaimToPrintInterface[] = [];\n    let n: number = 1;\n    // LOOP IN ALL CLAIM ONE BY ONE ###########################\n    for (const key in allClaims) {\n      if (Object.prototype.hasOwnProperty.call(allClaims, key)) {\n        // LOOP IN ALL CLAIM OF ONE FILE ONE BY ONE ===========================\n        for (const keyClaim in allClaims[key].claims) {\n          if (\n            Object.prototype.hasOwnProperty.call(\n              allClaims[key].claims,\n              keyClaim\n            )\n          ) {\n            const element = allClaims[key].claims[keyClaim];\n            const thisType = whichClaimType(allClaims[key]);\n            let dataArray: ClaimToPrintInterface = {\n              claim_id: n,\n              names:\n                allClaims[key].userDetails.user_info.fname +\n                \" \" +\n                allClaims[key].userDetails.user_info.lname,\n              gender: allClaims[key].userDetails.user_info.sex\n                ? \"Male\"\n                : \"Female\",\n              national_id: allClaims[key].userDetails.n_id!,\n              phone: allClaims[key].userDetails.phone_number,\n              email: allClaims[key].userDetails.email,\n              claim_type: thisType ? thisType : \"\",\n              claim_level: element.level,\n              education_category: getClaimInstitute(allClaims[key]),\n              claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n              date: DATE(element.createdAt),\n              decision: element.decision_taken_status\n                ? element.decision_taken_status\n                : \"PENDING\",\n              claim_title: displayClaimTitle(allClaims[key]),\n            };\n            // for (const key in reportContent) {\n            //   if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n            //     if (!reportContent[key].status) {\n            //       delete dataArray[reportContent[key].key];\n            //     }\n            //   }\n            // }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n      }\n    }\n    return arrayNew;\n  };\n\n  const resetReportContent = (currentState: boolean) => {\n    let newArray: claimReportContentInterface[] = reportContent;\n    for (const key in newArray) {\n      if (isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    setReportContent(newArray);\n    setSelectAll(!currentState);\n    updateClaimToPrint();\n  };\n\n  const isChangeAllowed = (key: claimReportContentKeyInterface): boolean => {\n    if (\n      key === claimReportContentKeyInterface.names ||\n      key === claimReportContentKeyInterface.decision ||\n      key === claimReportContentKeyInterface.claim_session ||\n      key === claimReportContentKeyInterface.claim_type ||\n      key === claimReportContentKeyInterface.date\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  const FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return;\n    }\n\n    if (thisPeriod) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: props.auth.user.fname + \" \" + props.auth.user.lname,\n        title: \"Claim Report\",\n        subjectTitle: \"Claim type\",\n        subject:\n          props.claiming.selectedClaimType === \"all\"\n            ? \"All Types\"\n            : props.claiming.selectedClaimType,\n        period: thisPeriod.session_plan_name,\n        footer: \"Online Recruitment\",\n        institute:\n          thisEducation === \"all\"\n            ? \"All institute\"\n            : thisEducation.education_category_title,\n      };\n      table && generatePDF(reportSettings, table, setDownloading);\n    }\n  };\n\n  const FC_FilterClaims = (\n    allClaims: ClaimToPrintInterface[],\n    claimType: PlansTypeKeys | \"all\",\n    claimLevel: number | \"all\",\n    institute: education_category | \"all\"\n  ): ClaimToPrintInterface[] => {\n    let result: ClaimToPrintInterface[] = allClaims;\n    if (claimType !== \"all\") {\n      result = result.filter((item) => item.claim_type === claimType);\n    }\n    if (claimLevel !== \"all\") {\n      result = result.filter((item) => item.claim_level === claimLevel);\n    }\n\n    if (institute !== \"all\") {\n      result = result.filter(\n        (item) =>\n          item.education_category === null ||\n          item.education_category === institute.education_institute_id\n      );\n    }\n\n    return result;\n  };\n\n  return (\n    <Fragment>\n      <SideNavigation>\n        <div className=\"flex flex-col mb-4\">\n          <span className=\"text-sm text-gray-600 mb-2\">\n            Education categories:\n          </span>\n          {props.schoolLevels.education_categories === null ||\n          loadingInstitutes ? (\n            <Loading />\n          ) : props.schoolLevels.education_categories.length === 0 ? (\n            <span>No result found</span>\n          ) : (\n            <Fragment>\n              <div\n                onClick={() => setThisEducation(\"all\")}\n                className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                  thisEducation === \"all\"\n                    ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                } font-bold flex flex-row items-center gap-2`}\n              >\n                {thisEducation === \"all\" ? (\n                  <MdRadioButtonChecked />\n                ) : (\n                  <MdRadioButtonUnchecked />\n                )}\n                <span>All</span>\n              </div>\n              {props.schoolLevels.education_categories.map((item, i) => (\n                <div\n                  onClick={() => setThisEducation(item)}\n                  key={i + 1}\n                  className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                    thisEducation !== \"all\" &&\n                    thisEducation.education_institute_id ===\n                      item.education_institute_id\n                      ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                      : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                  } font-bold flex flex-row items-center gap-2`}\n                >\n                  {thisEducation !== \"all\" &&\n                  thisEducation.education_institute_id ===\n                    item.education_institute_id ? (\n                    <MdRadioButtonChecked />\n                  ) : (\n                    <MdRadioButtonUnchecked />\n                  )}\n                  <span>{item.education_category_title}</span>\n                </div>\n              ))}\n            </Fragment>\n          )}\n        </div>\n        <div className=\"\">\n          <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n          <div\n            onClick={() => setSelectPeriod(true)}\n            className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n          >\n            {thisPeriod !== null\n              ? `${thisPeriod.session_plan_name} - ${thisPeriod.period}`\n              : \"Filter by period\"}\n            <FiEdit className=\"text-3xl text-blue-600\" />\n          </div>\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim types:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimTypes(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() =>\n                    props.setSelectedClaimType(reportClaimType(item.type))\n                  }\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={isClaimTypeActive(\n                      props.claiming.selectedClaimType,\n                      item.type\n                    )}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim level:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimLevels(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() => setThisLevel(item.level)}\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={item.level === thisLevel}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n      </SideNavigation>\n      <section>\n        {/* REPORT TITLE ============================================ */}\n        <div className=\"grid md:grid-cols-12\">\n          <div className=\"col-span-8\">\n            <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n              <span className=\"text-3xl font-bold text-gray-700\">\n                Claim report\n              </span>\n            </div>\n          </div>\n          <div className=\"col-span-4\">\n            <div className=\"float-right mt-2\">\n              {props.claiming.allClaims && props.claiming.allClaims.length > 0 && (\n                <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                  <BiExport className=\"text-2xl text-gray-500\" />\n                  <span className=\"text-gray-500\">Export as</span>\n                  <button\n                    className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                    disabled={loading}\n                    onClick={() => {\n                      updateClaimToPrint();\n                      setGenerateReportModal({\n                        reportType: \"EXCEL\",\n                        status: true,\n                      });\n                    }}\n                  >\n                    EXCEL\n                  </button>\n                  <button\n                    className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                      downloading && \"cursor-wait\"\n                    }`}\n                    onClick={() => FC_GeneratePDF()}\n                    disabled={loading || downloading}\n                  >\n                    PDF\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        {/* END REPORT TITLE ============================================ */}\n        <div className=\"bg-white my-4\">\n          <div className=\"w-full px-2 py-2\">\n            <input\n              onChange={(e) => setSearchInput(e.target.value)}\n              type=\"text\"\n              value={searchInput}\n              placeholder=\"Search...\"\n              className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n              disabled={\n                props.claiming.allClaims === null ||\n                props.claiming.claimTypes === null ||\n                FC_ClaimData(props.claiming.allClaims) === null ||\n                periodChanged\n              }\n            />\n          </div>\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"names\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Applicant names <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"gender\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Gender <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_title\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Title <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_type\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Type <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_level\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Level <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"decision\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Status <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"date\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Date <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.claiming.allClaims === null ||\n              props.claiming.claimTypes === null ||\n              periodChanged ? (\n                <TableLoading cols={10} />\n              ) : FC_ClaimData(props.claiming.allClaims) === null ? (\n                <TableLoading cols={10} />\n              ) : FC_FilterClaims(\n                  FC_ClaimData(props.claiming.allClaims)!,\n                  props.claiming.selectedClaimType,\n                  thisLevel,\n                  thisEducation\n                ).length === 0 ? (\n                <tr>\n                  <td colSpan={10} className=\"px-2 py-2\">\n                    <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                      <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                      <span className=\"text-sm font-bold\">\n                        No result found! Please try to search again\n                      </span>\n                      <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                        <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                          <li\n                            onClick={() => setSelectPeriod(true)}\n                            className=\"underline text-gray-500 cursor-pointer\"\n                          >\n                            Filter by period\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim type\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim Level\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              ) : (\n                sortThisArray(\n                  isSorted,\n                  searchData(\n                    FC_FilterClaims(\n                      FC_ClaimData(props.claiming.allClaims)!,\n                      props.claiming.selectedClaimType,\n                      thisLevel,\n                      thisEducation\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                    } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">{item.names}</td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.gender}</td>\n                    <td className=\"px-2 py-2\">{item.phone}</td>\n                    <td className=\"px-2 py-2\">{item.claim_title}</td>\n                    <td className=\"px-2 py-2\">{item.claim_type}</td>\n                    <td className=\"px-2 py-2\">{\"Level \" + item.claim_level}</td>\n                    <td className=\"px-2 py-2\">\n                      {item.decision}\n                      {/* {capitalizeFirstLetter(item.decision)} */}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.date}</td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </section>\n      {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {generateReportModal !== null && generateReportModal.status === true && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-2xl text-gray-500\">\n                  Generating Report contents\n                </span>\n                <span className=\"text-sm text-blue-600 font-normal\">\n                  Generating {generateReportModal.reportType} Report\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => setGenerateReportModal(null)}\n          backDropClose={false}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-6\">\n            <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n              <div className=\"flex flex-col\">\n                <label>Title</label>\n                <input\n                  type=\"text\"\n                  className={`text-left input-white w-20 inline-block ${\n                    formError && formError.element === \"report_title\"\n                      ? \"border-red-500\"\n                      : \"border-gray-500\"\n                  } border-2`}\n                  placeholder=\"Sub Category Title\"\n                  value={reportTitle}\n                  onChange={(e) => {\n                    setFormError(null);\n                    setReportTitle(e.target.value);\n                  }}\n                  disabled={loading}\n                />\n                {formError && formError.element === \"report_title\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n              <div className=\"flex flex-col mt-2\">\n                <label>Report content</label>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                  {reportContent.map((item, index) => (\n                    <div\n                      key={index}\n                      className={`flex items-center gap-1 ${\n                        isChangeAllowed(item.key)\n                          ? \"cursor-pointer\"\n                          : \"cursor-not-allowed\"\n                      }`}\n                      onClick={() =>\n                        isChangeAllowed(item.key) &&\n                        updateReportContent(item.key)\n                      }\n                      title={\n                        !isChangeAllowed(item.key)\n                          ? \"Required for every report!\"\n                          : \"\"\n                      }\n                    >\n                      {item.status ? (\n                        <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                      ) : (\n                        <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                      )}\n                      <span>{item.title}</span>\n                    </div>\n                  ))}\n                </div>\n                {formError && formError.element === \"report_content\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n            </div>\n            <div className=\"flex justify-between mb-2 mt-4\">\n              <div\n                className={`flex items-center gap-1 cursor-pointer`}\n                onClick={() => resetReportContent(selectAll)}\n              >\n                {selectAll ? (\n                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                ) : (\n                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                )}\n                <span>Select all</span>\n              </div>\n\n              {claimToPrint && !loading && (\n                <ExportToExcel\n                  fileData={claimToPrint}\n                  fileName={reportTitle}\n                  btnName=\"Generate\"\n                />\n              )}\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {selectPeriod && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <MdHistory className=\"text-5xl text-blue-600\" />\n              <span className=\"flex flex-col\">Choose a period</span>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => thisPeriod !== null && setSelectPeriod(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <ChooseSession\n            allSession={props.application_sessions}\n            setSelectSession={(value: SessionPlanInterface | \"all\") => {\n              value !== \"all\" && setThisPeriod(value);\n              value !== \"all\" && onPeriodChange(value.session_plan_id);\n              value !== \"all\" && setSelectPeriod(false);\n            }}\n            chooseAll={false}\n            currentSelected={thisPeriod ? thisPeriod : \"all\"}\n          />\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  courses: course[] | null;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    courses: course.courses,\n    documentReducer: document,\n    schoolLevels,\n  };\n};\n\nexport const ClaimingReport = connect(mapStateToProps, {\n  getAllClaims,\n  getAllAnswers,\n  GetClaimingTypes,\n  loadCourses,\n  getAllApplications,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  setSelectedClaimType,\n  getPositions,\n  PushPopupAlert,\n})(_ClaimingReport);\n"],"sourceRoot":""}
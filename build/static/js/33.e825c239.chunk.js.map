{"version":3,"sources":["containers/SessionSettings/NoSession.tsx","actions/settings.ts","components/Loading/TableLoading.tsx","shared/interfaces.tsx","interfaces/document_validation.tsx","components/ClaimReportTools/ClaimEvaluationHistory.tsx","components/ClaimReportTools/ClaimReportAnalytic.tsx","containers/Claimings/Admin/ClaimReport.tsx","containers/Claimings/Admin/AdminClaimExamView.tsx","containers/Claimings/Admin/ClaimFileView.tsx","containers/Claimings/Admin/AdminClaimAppView.tsx","containers/Claimings/Admin/AdminClaimDocView.tsx","containers/Claimings/Admin/index.tsx"],"names":["NoSession","title","description","content","undefined","className","React","memo","url","API","AUTH","getSystemSettings","callback","dispatch","a","setAxiosToken","axios","get","res","console","log","type","ActionTypes","GET_SYSTEM_SETTINGS","payload","data","code_error","errorToText","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","map","id","task","key","permitted","GET_TASK_ACCESS","getPositions","APPLICATION","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","FC_GetPositionsByInstitution","institution_id","TableLoading","props","displayCols","colsArray","index","cols","push","element","Math","random","RoomType","PostRequestStatusInterface","DocumentAttributesInterface","DocValidationStatusInterface","SESSION_PLAN_KEYS","DOCUMENT_VALIDATION","EXAMINATION","MARKS_PUBLICATION","PLACEMENT_TRANSFER","GetDocTitle","documentCategories","doc","DocCategory","DocSubCategory","DocField","DocTitle","sub_category_id","length","documentSubCategory","find","c","user_detail_subcategory_id","category_id","documentCategory","user_detail_category_id","category_subcategory_data","documentFields","thisDocField","_id","category","sub_category","field","main","DocumentInArray","docCategories","DocumentsData","dataType","documentsTemp","details","d","candidate_detail","files","validation_status","user_id","n_id","fname","user_info","lname","phone_number","district","email","main_doc_title","start_year","end_year","school","details_email","names","details_phone_number","company","year","doc_id","validated_by","doc_history_status","get_in_date","approved","exams","isDocumentValidationOpen","plans","checkSession","item","type_key","today","moment","startData","start_date","endData","end_date","diff","type_status","SESSION_PLAN_STATUS","OPEN","getDocByDocId","userList","user","countDocumentByStatus","userDocs","docStatus","filter","countFileByCandidateId","filterType","filterValue","filterStatus","result","ClaimEvaluationHistory","GetEvaluationHistory","setState","loading","post","CLAIMING","claim_level","period_id","evaluators","componentDidMount","state","this","Loading","colSpan","sort","b","evaluated","i","name","Component","ClaimReportAnalytic","setLoading","status","options","chart","width","labels","general_main_data","completedClaimCounts","evaluatedClaimCounts","pendingClaimCounts","deletedClaimCounts","responsive","breakpoint","legend","position","series","selected_claim_type","general_summary","pending","validated","theme","mode","palette","monochrome","enabled","color","shadeTo","shadeIntensity","height","plotOptions","bar","borderRadius","horizontal","barHeight","dataLabels","xaxis","categories","summary_details","position_title","total","_ClaimReport","GetClaims","level","session_id","GetSummaryFilter","test","itm","ClaimStatus","PENDING","EVALUATED","GetSummary","res_data","claims","selected_level","claim_status","GetSummaryCounts","getMainSummary","schoolLevels","selectedEducationCategory","education_categories","education_institute_id","auth","education_institution_id","setSelectedEducationCategory","session_plan","selected_institution","error","success","PlansTypeKeys","view_type","capitalizeFirstLetter","toString","onChange","e","selected_type","target","value","parseInt","displayNumbers","onClick","institution","ClaimReport","connect","system","positions","loadAllPositionsByInstitute","viewTabs","FooterInitial","comment","close","ClaimFileView","setSetFullscreen","isFullscreen","handleFullScreen","fullScreen","failedToLoadFile","loadingImage","actionTaken","isFileImage","getFileType","src","AUTH_FILES","alt","onLoad","onError","onDoubleClick","ViewPDF","file_url","class_name","frame_title","setLoadingFile","setLoadingError","zoomInOut","setDocId","socket","evaluateClaim","reAssessApplication","PushPopupAlert","FC_CompleteClaim","position_id","useState","loadingRequest","setLoadingRequest","setActionTaken","formError","setFormError","responseMsg","setResponseMsg","viewThisDocument","setViewThisDocument","handleVerify","msg","isEmptyOrSpaces","subClaim","thisClaim","api_body","sub_claim_id","evaluation_comment","evaluated_by","decision_taken_status","evaluator_name","evaluator_email","put","evaluate_claim_res","claim_id","actionType","emit","Events","CLAIMING_CHANGE_SERVER","ClaimDecisionStatus","ACCEPTED","overrideDecision","PopupAlertTheme","danger","this_claim","getReasonById","reason_id","claimReasons","patch","claiming_on_id","application_status","ApplicationStates","Shortlisted","application_id","DATA_ThisPosition","thisApplication","systemPositions","DATA_Documents","commet","date","FC_DocumentInArray","Data_ThisDocument","Modal","backDrop","Themes","default","backDropClose","widthSizeClass","ModalSize","maxWidth","displayClose","padding","body","footer","FC_GetBase64Img","photo","sex","PositionDetails","positionDetails","cancel","apply","showRegister","hideTools","NoResult","NoResultThemes","Dark","claim","default_claim_resaons","reason","showDate","createdAt","isClaimEvaluated","REJECTED","toLocaleLowerCase","FC_Access","UserAccessList","CLAIM_VALIDATION_2","view","evaluater","dangerouslySetInnerHTML","__html","last_claim_status","DELETED","placeholder","rows","style","resize","disabled","window","confirm","verifyDocument","FC_DocValidation","APPROVED","in_education","disability","expiration_date","api_redux","USER","adminDisplayClaimTitle","setViewImage","viewImage","previous","thisDoc","questionTypes","loadQuestionTypes","marks","setMarks","profile","selectedTab","setSelectedTab","useEffect","handleMarksAddition","DO_EXAM","answer_sheet_id","Object","values","exam","AnswersDetails","showAnswers","exam_id","claimShowAnswer","thisExamSheet","thisExam","course_name","allAnswers","exam_location","questions","user_answers","period","course","exam_paper","user_status","used_duration","total_marks","number_of_question_answered","exam_total_marks","exam_start_time","exam_end_time","exam_date","updatedAt","gender","Number","candidateDocuments","AdminClaimGetDocTitle","getApplicationById","allApplications","thisPosition","application","Index","setLoadingData","loadingData","setPeriodChanged","periodChanged","setThisPeriod","thisPeriod","setViewClaim","viewClaim","setClaimId","claimId","setClaimType","claimType","setCandidateId","candidateId","setDefaultSession","sessions","thisSession","is_active","setSearchClaim","searchClaim","loadsAllClaims","claim_type","getAllClaims","loadsApplications","claiming","getAllApplications","loadsController","file_id","loadsAlAnswers","answersheet_id","allAnswer","getAllAnswers","application_sessions","GetAllSessionPlans","documentReducer","getDocumentCategory","getDocumentSubCategory","getDocumentFields","getClaimReasons","courses","loadCourses","CLAIM_VALIDATION","on","CLAIMING_CHANGE_CLIENT","opened_claims","openedClaim","orginal","componentWillUnmount","off","FC_SocketServeAction","displayClaimTitle","thisDocs","thisAnswer","getCourseIdBySheetId","getCourseById","onPeriodChange","getLastClaimDate","DATE","claimsLength","DATA_TITLES","DAT_ClaimByStatus","FindClaimsNumber","filterByStatus","choose_claim_type","selected_title","show_titles_filter","search_title","view_claim_report","allClaims","to","DATA_ALL_CLAIM","includes","DATA_ClaimByType","filterClaimsByClaimType","selectedClaimType","DATA_BY_TITLE","SideNavigation","AdminFilterByType","loadingClaims","ClaimHeaderTitle","headerTitle","loadingSession","setLoadingSession","claimTypes","searchData","Light","institute_id","n_eduction","sector","province","whichClaimType","whichClaimStatus","classes","getClaimById","ClaimTypesInterface","DOCUMENT","extraLarge","AdminClaim","system_settings","sessionPlan","document","allSessionPlans"],"mappings":"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","file":"static/js/33.e825c239.chunk.js","sourcesContent":["import React from \"react\";\nimport { IoWarning } from \"react-icons/io5\";\n// import { MdInfoOutline } from \"react-icons/md\";\nimport { NavLink } from \"react-router-dom\";\n\ntype NoSessionProps = {\n  title?: string;\n  description?: string;\n  content?: any;\n};\n\nconst NoSession: React.FC<NoSessionProps> = ({\n  title = \"No session available\",\n  description = \"Please Wait for the system to publish the sessions or contact the administrator\",\n  content = undefined,\n}) => {\n  return (\n    <div className=\"w-full my-5\">\n      <section className=\"py-10 flex flex-col items-center rounded border border-gray-300 bg-white text-2xl font-medium text-yellow-800 animate__animated animate__pulse\">\n        <div className=\"flex flex-col items-center\">\n          <IoWarning className=\"w-32 h-32\" />\n          {description}\n        </div>\n        {content && content}\n        {false && (\n          <div className=\"text-center group text-sm -mb-3 mt-5\">\n            <NavLink\n              to=\"/apps-page\"\n              className=\"border border-rounded-md bg-gray-100 text-gray-900 rounded border-gray-100 group-hover:bg-gray-50 group-hover:border-gray-400 px-2 py-1\"\n            >\n              Back to App\n            </NavLink>\n          </div>\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default React.memo(NoSession);\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\nconst url = `${API.AUTH}/auth/user/access`;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/system/setting`\n      );\n      console.log(\"=================getSystemSettings===================\");\n      console.log(res);\n      console.log(\"=================getSystemSettings===================\");\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${url}/roleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_GetPositionsByInstitution = (\n  institution_id: string,\n  callback: (status: boolean, msg: string, data?: PositionAPI[]) => void\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(\n        `${API.APPLICATION}/position/instituteposition/${institution_id}`\n      );\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={Math.random()}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={Math.random()}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={Math.random()}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import { SessionPlanInterface } from \"../interfaces\";\nimport {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  _id?: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active: boolean;\n  disability: boolean;\n  in_education: boolean;\n  residence?: {\n    province_id: string;\n    province_name: string;\n    district_id: string;\n    district_name: string;\n    sector_id: string;\n    sector_name: string;\n  };\n  education_institution_id?: string;\n  education_institution_name?: string;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  _id: string;\n  n_id: string;\n  email: string;\n  phone_number: string;\n  in_education: boolean;\n  disability: boolean;\n  residence: {\n    province_id: string;\n    province_name: string;\n    district_id: string;\n    district_name: string;\n    sector_id: string;\n    sector_name: string;\n  };\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n  user_info: {\n    document_type: string;\n    issue_number: string;\n    date_of_issue: string;\n    date_of_expiry: string;\n    place_of_issue: string;\n    application_number: string;\n    fname: string;\n    lname: string;\n    father_names: string;\n    mother_names: string;\n    sex: string;\n    date_of_birth: string;\n    place_of_birth: string;\n    country_of_birth: string;\n    village_id: string;\n    village: string;\n    cell: string;\n    sector: string;\n    district: string;\n    province: string;\n    civil_status: string;\n    spouse: null;\n    status: string;\n    photo: string;\n  };\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    comment?: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  active?: boolean;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n  assigned_date?: string;\n}\n\nexport enum RoomType {\n  Physical = \"Physical\",\n  Virtual = \"Virtual\",\n  Default = \"Default\",\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: boolean;\n  room_type: RoomType;\n  room_number: number;\n  capacity: number;\n  _id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  _id: string;\n  center_name: string;\n  center_code: number;\n  district_id: string;\n  education_institute_id: string;\n}\n\nexport interface SectorInterface {\n  district_code: number;\n  district_id: string;\n  sector_name: string;\n  sector_code: number;\n  sector_id: string;\n}\n\nexport interface AllDistrictInterface {\n  sectors: string[];\n  centers: string[];\n  district_name: string;\n  district_code: string;\n  province_code: string;\n  province_id: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n  district_id: string;\n}\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  sectors: SectorInterface[];\n  province_code: number;\n  province_id: string;\n  district_name: string;\n  district_code: number;\n  _id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_code: number;\n  _id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  _id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n  school: {\n    _id: string;\n    school_name: string;\n    school_code: string;\n    province_id: string;\n    province_code: string;\n    district_id: {\n      _id: string;\n      district_name: string;\n    };\n    district_code: string;\n    sector_code: string;\n    sector_id: string;\n    school_status: string;\n    status: number;\n    createdAt: string;\n    updatedAt: string;\n  };\n  post_request_session_id: string;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  school_code: number;\n  province_id: string;\n  province_code: number;\n  district_id: string;\n  district_code: number;\n  sector_id: string;\n  sector_code: number;\n  education_category_id: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n  \"expiration_date\" = \"expiration_date\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: SessionPlanInterface;\n  application_status: string;\n  n_id: string;\n  email: string;\n  user_info: {\n    fname: string;\n    lname: string;\n    sex: string;\n  };\n  phone_number: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface LocationSectorTableInterface {\n  province_id: string;\n  province_name: string;\n  province_code: number;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  sub_category_required: boolean;\n  required: boolean;\n  isAnyField: boolean;\n}\n\nexport interface PositionRequirementsQualificationInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  fields: DocumentFieldsInterface[];\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  userInfo: {\n    n_id: string;\n    phone_number: string;\n    email: string;\n    user_info: {\n      document_type: string;\n      issue_number: string;\n      date_of_issue: string;\n      date_of_expiry: string;\n      place_of_issue: string;\n      application_number: string;\n      fname: string;\n      lname: string;\n      father_names: string;\n      mother_names: string;\n      sex: string;\n      date_of_birth: string;\n      place_of_birth: string;\n      country_of_birth: string;\n      village_id: string;\n      village: string;\n      cell: string;\n      sector: string;\n      district: string;\n      province: string;\n      civil_status: string;\n      spouse: null;\n      status: string;\n      photo: string;\n    };\n  };\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import moment from \"moment\";\nimport { ApplicationSession } from \"../actions/auth\";\nimport { DocumentReducerInterface } from \"../reducers/document\";\nimport { isEmptyOrSpaces } from \"../shared/dataTest\";\nimport {\n  ApplicationExamsInterface,\n  CandidatesInterface,\n  CandidateDetailsInterface,\n  LocationRoomTableInterface,\n  UserDocumentsInterface,\n} from \"../shared/interfaces\";\nimport { SESSION_PLAN_KEYS, SESSION_PLAN_STATUS } from \"./application\";\n\nexport const GetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: CandidateDetailsInterface | UserDocumentsInterface\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id &&\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.find(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )\n      ? documentCategories.documentSubCategory.find(\n          (c) => c.user_detail_subcategory_id === doc.sub_category_id\n        )!.title\n      : \"Unknown qualification\";\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.find(\n      (c) => c.user_detail_category_id === doc.category_id\n    )\n      ? documentCategories.documentCategory.find(\n          (c) => c.user_detail_category_id === doc.category_id\n        )!.title\n      : \"Unknown category\";\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    let thisDocField = documentCategories.documentFields.find(\n      (c) => c._id === doc.category_subcategory_data\n    );\n    DocField = thisDocField ? thisDocField.title : \"Unknown filed\";\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\nexport interface TableCandidatesInterface {\n  // DATA FROM MAIN PROPERTY\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n\n  // NEW DATA GENERATED BAISED ON DETAILS PROPERTY\n  main_doc_title: string;\n  // DATA FROM DETAILS PROPERTY\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  details_email: string;\n  names: string;\n  details_phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n  // DATA FROM EXAMS PROPERTY\n  exams: ApplicationExamsInterface[];\n}\n\n// Tobe replaced with Emmy's function\nexport const DocumentInArray = (\n  docCategories: DocumentReducerInterface,\n  DocumentsData: CandidatesInterface[],\n  dataType: \"all\" | \"default\" = \"default\"\n): TableCandidatesInterface[] | [] => {\n  let documentsTemp: TableCandidatesInterface[] = [];\n  for (let c in DocumentsData) {\n    let details = DocumentsData[c].details;\n    for (let d in details) {\n      let candidate_detail: CandidateDetailsInterface =\n        DocumentsData[c].details[d];\n      if (\n        candidate_detail.files !== null &&\n        candidate_detail.files.length > 0 &&\n        dataType === \"default\" &&\n        candidate_detail.validation_status === \"waiting\"\n      ) {\n        documentsTemp.push({\n          // DATA FROM MAIN PROPERTY\n          user_id: DocumentsData[c]._id,\n          n_id: DocumentsData[c].n_id,\n          fname: DocumentsData[c].user_info.fname,\n          lname: DocumentsData[c].user_info.lname,\n          phone_number: DocumentsData[c].phone_number,\n          district: DocumentsData[c].user_info.district,\n          email: DocumentsData[c].email,\n          // NEW DATA GENERATED BAISED ON DETAILS PROPERTY\n          // main_doc_title: GetDocTitle(\n          //   documentCategories,\n          //   candidate_detail\n          // ).main,\n          main_doc_title: GetDocTitle(docCategories, candidate_detail).main,\n          // DATA FROM DETAILS PROPERTY\n          category_id: candidate_detail.category_id,\n          sub_category_id: candidate_detail.sub_category_id,\n          category_subcategory_data: candidate_detail.category_subcategory_data,\n          title: candidate_detail.title,\n          description: candidate_detail.description,\n          files: candidate_detail.files,\n          start_year: candidate_detail.start_year,\n          end_year: candidate_detail.end_year,\n          school: candidate_detail.school,\n          details_email: candidate_detail.email,\n          names: candidate_detail.names,\n          details_phone_number: candidate_detail.phone_number,\n          company: candidate_detail.company,\n          year: candidate_detail.year,\n          doc_id: candidate_detail.doc_id,\n          validation_status: candidate_detail.validation_status,\n          validated_by: candidate_detail.validated_by,\n          doc_history_status: candidate_detail.doc_history_status,\n          get_in_date: candidate_detail.get_in_date,\n          approved: candidate_detail.approved,\n          // DATA FROM EXAMS PROPERTY\n          exams: DocumentsData[c].exams,\n        });\n      } else if (\n        candidate_detail.files !== null &&\n        candidate_detail.files.length > 0 &&\n        dataType === \"all\"\n      ) {\n        documentsTemp.push({\n          // DATA FROM MAIN PROPERTY\n          user_id: DocumentsData[c]._id,\n          names:\n            DocumentsData[c].user_info.fname +\n            \" \" +\n            DocumentsData[c].user_info.lname,\n          n_id: DocumentsData[c].n_id,\n          fname: DocumentsData[c].user_info.fname,\n          lname: DocumentsData[c].user_info.lname,\n          phone_number: DocumentsData[c].phone_number,\n          district: DocumentsData[c].user_info.district,\n          email: DocumentsData[c].email,\n          main_doc_title: GetDocTitle(docCategories, candidate_detail).main,\n          // DATA FROM DETAILS PROPERTY\n          category_id: candidate_detail.category_id,\n          sub_category_id: candidate_detail.sub_category_id,\n          category_subcategory_data: candidate_detail.category_subcategory_data,\n          title: candidate_detail.title,\n          description: candidate_detail.description,\n          files: candidate_detail.files,\n          start_year: candidate_detail.start_year,\n          end_year: candidate_detail.end_year,\n          school: candidate_detail.school,\n          details_email: candidate_detail.email,\n          // names: candidate_detail.names,\n          details_phone_number: candidate_detail.phone_number,\n          company: candidate_detail.company,\n          year: candidate_detail.year,\n          doc_id: candidate_detail.doc_id,\n          validation_status: candidate_detail.validation_status,\n          validated_by: candidate_detail.validated_by,\n          doc_history_status: candidate_detail.doc_history_status,\n          get_in_date: candidate_detail.get_in_date,\n          approved: candidate_detail.approved,\n          // DATA FROM EXAMS PROPERTY\n          exams: DocumentsData[c].exams,\n        });\n      }\n    }\n  }\n  return documentsTemp;\n};\n\nexport const isDocumentValidationOpen = (\n  data: ApplicationSession | null\n): boolean => {\n  if (data && data.plans) {\n    let checkSession = data.plans.find(\n      (item) => item.type_key === SESSION_PLAN_KEYS.DOCUMENT_VALIDATION\n    );\n    if (checkSession) {\n      let today = moment(),\n        startData = moment(checkSession.start_date),\n        endData = moment(checkSession.end_date);\n      if (\n        startData.diff(today, \"days\") <= 0 &&\n        endData.diff(today, \"days\") >= 0 &&\n        checkSession.type_status === SESSION_PLAN_STATUS.OPEN\n      ) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const FC_documentFilterByDistrict = (\n  candidatesInInstitute: CandidatesInterface[] | null,\n  roomTables: LocationRoomTableInterface[],\n  filterValue: string\n): CandidatesInterface[] => {\n  let centersIdInDistrict: string[] = [];\n  let districtData: LocationRoomTableInterface[] =\n      filterValue === \"all\"\n        ? roomTables\n        : roomTables.filter((d) => d.district_id === filterValue),\n    l: number = districtData.length,\n    i: number;\n\n  // GETTING ALL CENTERS IN SELECTED DISTRICT ================================\n  for (i = 0; i < l; i++) {\n    if (centersIdInDistrict.includes(districtData[i].center_id)) continue;\n    centersIdInDistrict.push(districtData[i].center_id);\n  }\n  // END GETTING CENTERS IN SELECTED DISTRICT ===================================\n\n  // GETTING LIST OF CANDIDATES IN DISTRICT =========================\n  let data: CandidatesInterface[] = [];\n\n  // GET ALL CANDIDATE(WITH DIPLICATION BCAUSE OF APPLICATIONS) WITH DETAILS PROPERTIES =====================================\n  let list_details: CandidatesInterface[] = candidatesInInstitute\n    ? candidatesInInstitute.filter((candidate) => candidate.details.length > 0)\n    : [];\n\n  // GET ALL CANDIDATE(WITH DIPLICATION BCAUSE OF APPLICATIONS) WITH FILES IN DETAILS PROPERTIES =====================================\n  let list_files: CandidatesInterface[] = list_details.filter((candidate) =>\n    candidate.details.filter((item) => item.files !== \"\")\n  );\n\n  // GET ALL CANDIDATE(REMOVE DIPLICATION CAUSED BY APPLICATIONS) WITH DETAILS PROPERTIES =====================================\n  let mailList: string[] = [];\n  let list_distinct: CandidatesInterface[] = [];\n  for (let i = 0; i < list_files.length; i++) {\n    if (mailList.includes(list_files[i].email)) continue;\n    mailList.push(list_files[i].email);\n    list_distinct.push(list_files[i]);\n  }\n\n  let result = data; // restaring list\n  for (let i = 0; i < list_distinct.length; i++) {\n    for (let j = 0; j < list_distinct[i].exams.length; j++) {\n      if (centersIdInDistrict.includes(list_distinct[i].exams[j].center_id)) {\n        data.push(list_distinct[i]);\n        // action = false;\n      }\n      // ======================================\n      let dataMailList: string[] = [];\n      let _data: CandidatesInterface[] = [];\n      for (let i = 0; i < data.length; i++) {\n        if (dataMailList.includes(data[i].email)) continue;\n        dataMailList.push(data[i].email);\n        _data.push(data[i]);\n      }\n      result = _data;\n      // ======================================\n    }\n  }\n  return result;\n};\n\nexport const FC_documentFilterByCenter = (\n  generalResult: CandidatesInterface[],\n  filterValue: string\n): CandidatesInterface[] => {\n  if (filterValue === \"all\") return generalResult;\n  // GETTING LIST OF CANDIDATES IN DISTRICT =========================\n  let data: CandidatesInterface[] = [];\n\n  let result = generalResult; // restaring list\n  for (let i = 0; i < result.length; i++) {\n    for (let j = 0; j < result[i].exams.length; j++) {\n      if (result[i].exams[j].center_id === filterValue) {\n        data.push(result[i]);\n        // action = false;\n\n        // ======================================\n        let mailList: string[] = [];\n        let _data: CandidatesInterface[] = [];\n        for (let i = 0; i < data.length; i++) {\n          if (mailList.includes(data[i].email)) continue;\n          mailList.push(data[i].email);\n          _data.push(data[i]);\n        }\n        data = _data;\n        // ======================================\n      }\n    }\n  }\n\n  return (result = data);\n};\n\nexport const FC_documentFilterByRoom = (\n  generalResult: CandidatesInterface[],\n  filterValue: string\n): CandidatesInterface[] => {\n  if (filterValue === \"all\") return generalResult;\n  // GETTING LIST OF CANDIDATES IN DISTRICT =========================\n  let data: CandidatesInterface[] = [];\n  console.log({ generalResult });\n\n  let result = generalResult; // restaring list\n  for (let i = 0; i < result.length; i++) {\n    for (let j = 0; j < result[i].exams.length; j++) {\n      if (result[i].exams[j].room_id === filterValue) {\n        data.push(result[i]);\n        // action = false;\n\n        // ======================================\n        let mailList: string[] = [];\n        let _data: CandidatesInterface[] = [];\n        for (let i = 0; i < data.length; i++) {\n          if (mailList.includes(data[i].email)) continue;\n          mailList.push(data[i].email);\n          _data.push(data[i]);\n        }\n        data = _data;\n        // ======================================\n      }\n    }\n  }\n\n  return (result = data);\n};\n\nexport const getDocByDocId = (\n  userList: CandidatesInterface[],\n  user_id: string,\n  doc_id: string\n): {\n  user: CandidatesInterface | undefined;\n  doc: CandidateDetailsInterface | undefined;\n} => {\n  let user: CandidatesInterface | undefined = userList.find(\n    (user) => user._id === user_id\n  );\n  let doc: CandidateDetailsInterface | undefined;\n  if (user) {\n    doc = user.details.find((doc) => doc.doc_id === doc_id);\n  }\n\n  return { user, doc };\n};\n\nexport const countDocumentByStatus = (\n  userDocs: CandidateDetailsInterface[],\n  docStatus: \"waiting\" | \"approved\" | \"rejected\"\n): number => {\n  let result: CandidateDetailsInterface[] = userDocs;\n  result = userDocs.filter(\n    (details) => details.validation_status === docStatus && details.files\n  );\n  return result.length;\n};\n\nexport const getDocumentFileByIndex = (\n  documentList: TableCandidatesInterface[],\n  thisIndex: number,\n  setViewDoc: (state: boolean) => void,\n  setDocumentId: (state: string) => void,\n  setCandidateId: (state: string) => void,\n  setDocument_index: (state: number | null) => void,\n  setLoadingImage: (state: boolean) => void\n) => {\n  let n: number = 0,\n    found: boolean;\n  if (documentList.length <= 0) {\n    setViewDoc(false);\n    setDocumentId(\"\");\n    setCandidateId(\"\");\n    setDocument_index(null);\n    setLoadingImage(false);\n    return false;\n  } else if (documentList.length - 1 < thisIndex) {\n    n = 0;\n    found = false;\n    while (!found && documentList.length - 1 >= n) {\n      if (\n        documentList[n] !== undefined &&\n        !isEmptyOrSpaces(documentList[n].files) &&\n        !found\n      ) {\n        setViewDoc(true);\n        setDocumentId(documentList[n].doc_id);\n        setCandidateId(documentList[n].user_id);\n        setDocument_index(n);\n        setLoadingImage(true);\n        found = true;\n      }\n      n++;\n    }\n    if (found) {\n      return true;\n    } else {\n      setViewDoc(false);\n      setDocumentId(\"\");\n      setCandidateId(\"\");\n      setDocument_index(null);\n      setLoadingImage(false);\n      return true;\n    }\n  } else {\n    // result = documentList[thisIndex];\n    if (\n      documentList[thisIndex] !== undefined &&\n      !isEmptyOrSpaces(documentList[thisIndex].files)\n    ) {\n      setViewDoc(true);\n      setDocumentId(documentList[thisIndex].doc_id);\n      setCandidateId(documentList[thisIndex].user_id);\n      setDocument_index(thisIndex);\n      setLoadingImage(true);\n      return true;\n    } else {\n      n = 0;\n      found = false;\n      while (!found && documentList.length - 1 >= n) {\n        if (\n          documentList[n] !== undefined &&\n          !isEmptyOrSpaces(documentList[n].files) &&\n          !found\n        ) {\n          setViewDoc(true);\n          setDocumentId(documentList[n].doc_id);\n          setCandidateId(documentList[n].user_id);\n          setDocument_index(n);\n          setLoadingImage(true);\n          found = true;\n        }\n        n++;\n      }\n      if (found) {\n        return true;\n      } else {\n        setViewDoc(false);\n        setDocumentId(\"\");\n        setCandidateId(\"\");\n        setDocument_index(null);\n        setLoadingImage(false);\n        return true;\n      }\n    }\n  }\n};\n\nexport const getCandidateFileByIndex = (\n  thisCandidate: CandidatesInterface,\n  thisIndex: number,\n  setViewDoc: (state: boolean) => void,\n  setDocumentId: (state: string) => void,\n  setCandidateId: (state: string) => void,\n  setDocument_index: (state: number | null) => void,\n  setLoadingImage: (state: boolean) => void\n) => {\n  if (thisCandidate.details.length <= 0) {\n    setViewDoc(false);\n    setDocumentId(\"\");\n    setCandidateId(\"\");\n    setDocument_index(null);\n    setLoadingImage(false);\n    return false;\n  } else {\n    let filesList = thisCandidate.details.filter(\n      (details) => details.validation_status === \"waiting\" && details.files\n    );\n    if (filesList.length <= 0) {\n      setViewDoc(false);\n      setDocumentId(\"\");\n      setCandidateId(\"\");\n      setDocument_index(null);\n      setLoadingImage(false);\n      return false;\n    } else if (filesList.length - 1 < thisIndex) {\n      setViewDoc(true);\n      setDocumentId(filesList[0].doc_id);\n      setCandidateId(thisCandidate._id);\n      setDocument_index(0);\n      setLoadingImage(true);\n      return true;\n    } else {\n      setViewDoc(true);\n      setDocumentId(filesList[thisIndex].doc_id);\n      setCandidateId(thisCandidate._id);\n      setDocument_index(thisIndex);\n      setLoadingImage(true);\n      return true;\n    }\n  }\n};\n\nexport const countFileByCandidateId = (\n  userDocs: CandidateDetailsInterface[],\n  filterType: \"docCategory\" | \"docSubCategory\" | \"docStatus\",\n  filterValue: string,\n  filterStatus: \"waiting\" | \"approved\" | \"rejected\" = \"waiting\"\n): number => {\n  let result: CandidateDetailsInterface[] = userDocs;\n  if (filterType === \"docCategory\") {\n    result = userDocs.filter(\n      (details) =>\n        details.category_id === filterValue &&\n        details.files &&\n        details.files.length > 0 &&\n        details.validation_status === filterStatus\n    );\n  } else if (filterType === \"docSubCategory\") {\n    result = userDocs.filter(\n      (details) =>\n        details.sub_category_id === filterValue &&\n        details.files &&\n        details.files.length > 0 &&\n        details.validation_status === filterStatus\n    );\n  }\n  return result.length;\n};\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { API } from \"../../utils/api\";\nimport Loading from \"../Loading/Loading\";\n\ninterface ClaimEvaluationHistoryProps {\n  claim_level: number;\n}\ninterface ClaimEvaluationHistoryState {\n  loading: boolean;\n  evaluators: EvaluatorInterface[] | null;\n}\n\ninterface EvaluatorInterface {\n  email: string;\n  evaluated: number;\n  name: string;\n}\n\nclass ClaimEvaluationHistory extends Component<\n  ClaimEvaluationHistoryProps,\n  ClaimEvaluationHistoryState\n> {\n  constructor(props: ClaimEvaluationHistoryProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      evaluators: null,\n    };\n  }\n  GetEvaluationHistory = async () => {\n    this.setState({\n      loading: true,\n    });\n    try {\n      const res = await axios.post<EvaluatorInterface[]>(\n        `${API.CLAIMING}/user/evaluator/${this.props.claim_level}`,\n        {\n          period_id: \"62a5ea76b038313901018796\",\n        }\n      );\n      if (res.data) {\n        this.setState({\n          evaluators: res.data,\n          loading: false,\n        });\n      }\n    } catch (error: any) {\n      this.setState({ loading: false });\n      console.log(\"Result: \", { ...error });\n    }\n  };\n  componentDidMount = () => {\n    this.GetEvaluationHistory();\n  };\n  render() {\n    if (this.state.loading === true || this.state.evaluators === null) {\n      return (\n        <div className=\"bg-white rounded p-5 mt-5\">\n          <Loading />\n          <div className=\"-mt-5 ml-5\">Loading data, please wait...</div>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <div>\n          <table className=\"w-full\">\n            <thead className=\"bg-blue-100\">\n              <tr>\n                <th className=\"px-3 py-2 text-center\">#</th>\n                <th className=\"px-3 py-2 text-left\">Names</th>\n                <th className=\"px-3 py-2 text-left\">Email</th>\n                <th className=\"px-3 py-2 text-center\">Counts</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.evaluators.length === 0 ? (\n                <tr>\n                  <td\n                    colSpan={4}\n                    className=\"bg-gray-200 p-5 text-center font-light text-3xl\"\n                  >\n                    No result found!\n                  </td>\n                </tr>\n              ) : (\n                this.state.evaluators\n                  .sort((a, b) =>\n                    a.evaluated < b.evaluated\n                      ? 1\n                      : b.evaluated < a.evaluated\n                      ? -1\n                      : 0\n                  )\n                  .map((item, i) => (\n                    <tr\n                      key={i + 1}\n                      className={`${i % 2 !== 0 ? \"bg-gray-100\" : \"\"}`}\n                    >\n                      <td className=\"px-3 py-1 text-center\">{i + 1}</td>\n                      <td className=\"px-3 py-1 text-left\">{item.name}</td>\n                      <td className=\"px-3 py-1 text-left\">{item.email}</td>\n                      <td className=\"px-3 py-1 text-center\">\n                        {item.evaluated}\n                      </td>\n                    </tr>\n                  ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ClaimEvaluationHistory;\n","import { ApexOptions } from \"apexcharts\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { GetGeneralSummaryInterface } from \"../../containers/Claimings/Admin/ClaimReport\";\nimport { education_category, PlansTypeKeys } from \"../../interfaces\";\nimport { API } from \"../../utils/api\";\nimport Loading from \"../Loading/Loading\";\n\ninterface GeneralSummaryPie {\n  series: number[];\n  options: ApexOptions;\n}\n\ninterface ClaimReportAnalyticProps {\n  general_summary: {\n    pending: number;\n    validated: number;\n    total: number;\n  };\n  summary_details: {\n    position_title: string;\n    total: number;\n    pending: number;\n    validated: number;\n  }[];\n  claim_level: number;\n  institution: education_category;\n  general_main_data: GetGeneralSummaryInterface;\n  selected_claim_type: PlansTypeKeys;\n}\n\ninterface ClaimReportAnalyticState {\n  loading: boolean;\n}\n\nexport class ClaimReportAnalytic extends Component<\n  ClaimReportAnalyticProps,\n  ClaimReportAnalyticState\n> {\n  constructor(props: ClaimReportAnalyticProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n    };\n  }\n  setLoading = (status: boolean) => this.setState({ loading: status });\n  render() {\n    return (\n      <div className=\"animate__animated animate__fadeIn\">\n        <div className=\"flex flex-row items-center gap-4 h-64\">\n          <div className=\"bg-gray-100 rounded p-4 border border-blue-600 h-full\">\n            <div>\n              <div className=\"font-extrabold text-xl\">General summary</div>\n            </div>\n            <div id=\"chart\">\n              <ReactApexChart\n                options={{\n                  chart: {\n                    width: 380,\n                    type: \"donut\",\n                  },\n                  labels: [\n                    `Total Completed claims (${this.props.general_main_data.completedClaimCounts})`,\n                    `Total evaluated claims (${this.props.general_main_data.evaluatedClaimCounts})`,\n                    `Total pending claims (${this.props.general_main_data.pendingClaimCounts})`,\n                    `Total Canceled claims (${this.props.general_main_data.deletedClaimCounts})`,\n                  ],\n                  responsive: [\n                    {\n                      breakpoint: 480,\n                      options: {\n                        chart: {\n                          width: 200,\n                        },\n                        legend: {\n                          position: \"bottom\",\n                        },\n                      },\n                    },\n                  ],\n                }}\n                series={[\n                  this.props.general_main_data.completedClaimCounts,\n                  this.props.general_main_data.evaluatedClaimCounts,\n                  this.props.general_main_data.pendingClaimCounts,\n                  this.props.general_main_data.deletedClaimCounts,\n                ]}\n                type=\"donut\"\n                width={400}\n              />\n            </div>\n          </div>\n          <div className=\"bg-gray-100 rounded p-4 border border-blue-600 h-full\">\n            <div>\n              <div className=\"font-extrabold text-xl\">\n                {this.props.selected_claim_type}\n              </div>\n              <div className=\"font-extrabold text-sm text-blue-600\">\n                Claim level:{\" \"}\n                {this.props.claim_level === 1\n                  ? \"Level one\"\n                  : \"Public Service Commission\"}\n              </div>\n            </div>\n            <div id=\"chart\">\n              <ReactApexChart\n                options={{\n                  chart: {\n                    width: 380,\n                    type: \"pie\",\n                  },\n                  labels: [\n                    `Total pending claims (${this.props.general_summary.pending})`,\n                    `Total evaluated claims (${this.props.general_summary.validated})`,\n                  ],\n                  responsive: [\n                    {\n                      breakpoint: 480,\n                      options: {\n                        chart: {\n                          width: 200,\n                        },\n                        legend: {\n                          position: \"bottom\",\n                        },\n                      },\n                    },\n                  ],\n                }}\n                series={[\n                  this.props.general_summary.pending,\n                  this.props.general_summary.validated,\n                ]}\n                type=\"pie\"\n                width={400}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"animate__animated animate__fadeIn rounded border border-blue-600 pt-3 pr-2 mt-4\">\n          <div id=\"chart\" className=\"h-auto\">\n            <ReactApexChart\n              options={{\n                theme: {\n                  mode: \"light\",\n                  palette: \"palette1\",\n                  monochrome: {\n                    enabled: false,\n                    color: \"#255aee\",\n                    shadeTo: \"light\",\n                    shadeIntensity: 0.65,\n                  },\n                },\n                chart: {\n                  type: \"bar\",\n                  height: \"auto\",\n                },\n                plotOptions: {\n                  bar: {\n                    borderRadius: 2,\n                    horizontal: true,\n                    barHeight: \"100px\",\n                  },\n                },\n                dataLabels: {\n                  enabled: true,\n                },\n                xaxis: {\n                  categories: this.props.summary_details.map(\n                    (item) => item.position_title\n                  ),\n                },\n              }}\n              series={[\n                {\n                  name: \"Total claims\",\n                  data: this.props.summary_details.map((item) => item.total),\n                },\n                {\n                  name: \"Pending claims\",\n                  data: this.props.summary_details.map((item) => item.pending),\n                },\n                {\n                  name: \"Validated claims\",\n                  data: this.props.summary_details.map(\n                    (item) => item.validated\n                  ),\n                },\n              ]}\n              type=\"bar\"\n              height={this.props.summary_details.length > 60 ? 5000 : 3000}\n            />\n          </div>\n          {console.log(\"Length: \", this.props.summary_details.length)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ClaimReportAnalytic;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  positionsStoreInterface,\n  schoolLevelsStoreInterface,\n  System,\n  setSelectedEducationCategory,\n  loadAllPositionsByInstitute,\n} from \"../../../actions\";\nimport ClaimEvaluationHistory from \"../../../components/ClaimReportTools/ClaimEvaluationHistory\";\nimport ClaimReportAnalytic from \"../../../components/ClaimReportTools/ClaimReportAnalytic\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  ClaimStatus,\n  education_category,\n  PlansTypeKeys,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { displayNumbers } from \"../../../utils/functions\";\n\nexport interface GetGeneralSummaryInterface {\n  allClaimCounts: number;\n  completedClaimCounts: number;\n  deletedClaimCounts: number;\n  evaluatedClaimCounts: number;\n  pendingClaimCounts: number;\n}\n\ninterface GetClaimsReportInterface {\n  _id: string;\n  previous: {\n    evaluater: {\n      email: string;\n      name: string;\n    };\n    reason: string;\n    status: string;\n  };\n  title: string;\n  last_claim_status: ClaimStatus;\n  claiming_on_id: string;\n  type_key: PlansTypeKeys;\n  default_claim_resaons: string;\n  user: string;\n  period_id: string;\n  claim_level: number;\n  claims: [\n    {\n      claim_status: ClaimStatus;\n      _id: string;\n      level: number;\n      reason: string;\n      date_created: string;\n      createdAt: string;\n      updatedAt: string;\n    }\n  ];\n  createdAt: string;\n  updatedAt: string;\n  __v: 0;\n}\n\ninterface PositionSummaryInterface {\n  position_title: string;\n  total: number;\n  status: ClaimStatus;\n}\n\ninterface ClaimReportProps {\n  auth: Auth;\n  system: System;\n  positions: positionsStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  setSelectedEducationCategory: (data: education_category) => void;\n  loadAllPositionsByInstitute: (\n    institution_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n}\ninterface ClaimReportState {\n  error: string;\n  success: string;\n  loading: boolean;\n  data: GetClaimsReportInterface[] | null;\n  selected_level: number;\n  selected_claim_type: PlansTypeKeys;\n  view_type: \"Table\" | \"Analytical\" | \"History\";\n  general_main_data: GetGeneralSummaryInterface | null;\n}\n\nclass _ClaimReport extends Component<ClaimReportProps, ClaimReportState> {\n  constructor(props: ClaimReportProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      error: \"\",\n      success: \"\",\n      data: null,\n      selected_level: 1,\n      selected_claim_type: PlansTypeKeys.APPLICATION,\n      view_type: \"Table\",\n      general_main_data: null,\n    };\n  }\n  setLoading = (status: boolean) => this.setState({ loading: status });\n  GetClaims = async (level: number, session_id: string) => {\n    this.setLoading(true);\n    try {\n      const res = await axios.post<GetClaimsReportInterface[]>(\n        `${API.CLAIMING}/user/level/${level}`,\n        {\n          period_id: session_id,\n        }\n      );\n      if (res.data) {\n        this.setState({\n          data: res.data,\n        });\n      }\n      console.log(\"Response: \", res.data);\n      this.setLoading(false);\n    } catch (error: any) {\n      console.log(\"Error: \", { ...error });\n      this.setLoading(false);\n    }\n  };\n\n  GetSummaryFilter = (data: PositionSummaryInterface[]) => {\n    let response: {\n      position_title: string;\n      total: number;\n      pending: number;\n      validated: number;\n    }[] = [];\n    for (const item of data) {\n      const test = response.find(\n        (itm) => itm.position_title === item.position_title\n      );\n      if (test !== undefined) {\n        response = response.filter(\n          (itm) => itm.position_title !== test.position_title\n        );\n        response.push({\n          position_title: test.position_title,\n          total: test.total + 1,\n          pending:\n            item.status === ClaimStatus.PENDING\n              ? test.pending + 1\n              : test.pending,\n          validated:\n            item.status === ClaimStatus.EVALUATED\n              ? test.validated + 1\n              : test.validated,\n        });\n      } else {\n        response.push({\n          position_title: item.position_title,\n          total: item.total,\n          pending: item.status === ClaimStatus.PENDING ? 1 : 0,\n          validated: item.status === ClaimStatus.EVALUATED ? 1 : 0,\n        });\n      }\n    }\n    return response;\n  };\n\n  GetSummary = (\n    data: GetClaimsReportInterface[]\n  ): {\n    position_title: string;\n    total: number;\n    pending: number;\n    validated: number;\n  }[] => {\n    let response: PositionSummaryInterface[] = [];\n    const res_data = data.filter(\n      (itm) => itm.type_key === this.state.selected_claim_type\n    );\n    for (const item of res_data) {\n      response.push({\n        position_title: item.title,\n        total: 1,\n        status: item.claims.filter(\n          (itm) => itm.level === this.state.selected_level\n        )[0].claim_status,\n      });\n    }\n    return this.GetSummaryFilter(response).sort((a, b) =>\n      a.pending < b.pending ? 1 : b.pending < a.pending ? -1 : 0\n    );\n  };\n\n  GetSummaryCounts = (\n    data: {\n      position_title: string;\n      total: number;\n      pending: number;\n      validated: number;\n    }[]\n  ): {\n    pending: number;\n    validated: number;\n    total: number;\n  } => {\n    let res: {\n      pending: number;\n      validated: number;\n      total: number;\n    } = {\n      pending: 0,\n      validated: 0,\n      total: 0,\n    };\n    let pending: number = 0;\n    let validated: number = 0;\n    let total: number = 0;\n    for (const item of data) {\n      pending = pending + item.pending;\n      validated = validated + item.validated;\n      total = total + item.total;\n    }\n    res = {\n      pending: pending,\n      validated: validated,\n      total: total,\n    };\n    return res;\n  };\n\n  componentDidMount = () => {\n    if (this.state.general_main_data === null) {\n      this.getMainSummary(this.state.selected_level);\n    }\n    if (this.props.schoolLevels.selectedEducationCategory === null) {\n      if (this.props.schoolLevels.education_categories !== null) {\n        const test = this.props.schoolLevels.education_categories.find(\n          (itm) =>\n            itm.education_institute_id ===\n            this.props.auth.education_institution_id\n        );\n        if (test !== undefined) {\n          this.props.setSelectedEducationCategory(test);\n          if (test.session_plan !== null) {\n            this.GetClaims(this.state.selected_level, test.session_plan._id);\n          }\n        }\n      }\n    } else {\n      if (\n        this.props.schoolLevels.selectedEducationCategory.session_plan !== null\n      ) {\n        this.GetClaims(\n          this.state.selected_level,\n          this.props.schoolLevels.selectedEducationCategory.session_plan._id\n        );\n      }\n    }\n  };\n\n  getMainSummary = async (claim_level: number) => {\n    const selected_institution =\n      this.props.schoolLevels.education_categories?.find(\n        (itm) =>\n          itm.education_institute_id ===\n          this.props.auth.education_institution_id\n      );\n    if (\n      selected_institution?.session_plan !== null &&\n      selected_institution?.session_plan !== undefined\n    ) {\n      this.setLoading(true);\n      try {\n        const res = await axios.post<GetGeneralSummaryInterface>(\n          `${API.CLAIMING}/user/count/${claim_level}`,\n          {\n            period_id: selected_institution.session_plan._id,\n          }\n        );\n        this.setState({ loading: false, general_main_data: res.data });\n        console.log(\"Res: \", res.data);\n      } catch (error: any) {\n        this.setState({ loading: false });\n        console.log(\"Err: \", { ...error });\n      }\n    }\n  };\n\n  render() {\n    const selected_institution =\n      this.props.schoolLevels.education_categories?.find(\n        (itm) =>\n          itm.education_institute_id ===\n          this.props.auth.education_institution_id\n      );\n    if (selected_institution === undefined) {\n      return (\n        <div>\n          <div className=\"rounded-xl border-2 border-gray-600 flex flex-col items-center justify-center p-7 text-center w-full mt-5 bg-white\">\n            <span className=\"font-extrabold text-3xl text-gray-600\">\n              Your institute is not yet defined\n            </span>\n            <span>\n              If you have an institute assigned to you, please refresh your page\n              or wait a moment... your page...\n              {/* You are not allowed to view shortlisting report because you have\n              no access for this report. please contact your administrator */}\n            </span>\n          </div>\n        </div>\n      );\n    }\n    if (\n      this.state.loading === true ||\n      this.props.schoolLevels.selectedEducationCategory === null ||\n      this.state.data === null ||\n      this.state.general_main_data === null\n    ) {\n      return (\n        <div className=\"bg-white rounded p-5 mt-5\">\n          <Loading />\n          <div className=\"-mt-5 ml-5\">Loading report, please wait...</div>\n        </div>\n      );\n    }\n    if (this.state.error !== \"\") {\n      <div onClick={() => this.setState({ error: \"\" })}>\n        <div className=\"cursor-pointer rounded-xl border-2 border-yellow-600 flex flex-col items-center justify-center p-7 text-center w-full mt-5 bg-yellow-100\">\n          <span className=\"font-extrabold text-3xl text-yellow-800\">\n            Error occurred!\n          </span>\n          <span>{this.state.error}</span>\n        </div>\n      </div>;\n    }\n    return (\n      <div>\n        <div className=\"mt-4 bg-white rounded\">\n          <div className=\"p-4 flex flex-row items-center gap-3 justify-between\">\n            <div>\n              <div className=\"text-3xl font-extrabold\">\n                Claiming report (\n                <span className=\"text-blue-600 lowercase\">\n                  {capitalizeFirstLetter(\n                    this.state.selected_claim_type.toString()\n                  )}\n                </span>\n                )\n              </div>\n              <div className=\"flex flex-row items-center gap-2 ml-2\">\n                <div className=\"flex flex-col\">\n                  <span className=\"text-sm font-bold\">Choose claim type</span>\n                  <select\n                    onChange={(e) => {\n                      this.setState({ loading: true });\n                      const selected_type = e.target.value as PlansTypeKeys;\n                      this.setState({\n                        selected_claim_type: selected_type,\n                      });\n                      this.setState({ loading: false });\n                    }}\n                    value={this.state.selected_claim_type}\n                    className=\"px-3 py-2 rounded border border-gray-500\"\n                  >\n                    <option value={PlansTypeKeys.APPLICATION}>\n                      Applications\n                    </option>\n                    <option value={PlansTypeKeys.DOCUMENT_VALIDATION}>\n                      Document validation\n                    </option>\n                    <option value={PlansTypeKeys.EXAMINATION}>\n                      Examinations\n                    </option>\n                  </select>\n                </div>\n                <div className=\"flex flex-col\">\n                  <span className=\"text-sm font-bold\">Choose claim level</span>\n                  <select\n                    value={this.state.selected_level}\n                    onChange={(e) => {\n                      if (selected_institution.session_plan !== null) {\n                        const selected_level = parseInt(e.target.value);\n                        this.setState({\n                          selected_level: selected_level,\n                        });\n                        this.setLoading(true);\n                        this.GetClaims(\n                          selected_level,\n                          selected_institution.session_plan._id\n                        );\n                      }\n                    }}\n                    className=\"px-3 py-2 rounded border border-gray-500\"\n                  >\n                    <option value={1}>Level 1</option>\n                    <option value={2}>Public Service Commission Level</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex flex-row items-center gap-3\">\n              <div className=\"flex flex-col rounded bg-blue-100 p-2 text-right animate__animated animate__zoomIn\">\n                <span className=\"text-3xl font-extrabold\">\n                  {displayNumbers(\n                    this.GetSummaryCounts(this.GetSummary(this.state.data))\n                      .total\n                  )}\n                </span>\n                <span className=\"font-normal text-sm text-blue-900\">\n                  Total claims\n                </span>\n              </div>\n              <div className=\"flex flex-col rounded bg-blue-100 p-2 text-right animate__animated animate__zoomIn\">\n                <span className=\"text-3xl font-extrabold\">\n                  {displayNumbers(\n                    this.GetSummaryCounts(this.GetSummary(this.state.data))\n                      .pending\n                  )}\n                </span>\n                <span className=\"font-normal text-sm text-blue-900\">\n                  Waiting claims\n                </span>\n              </div>\n              <div className=\"flex flex-col rounded bg-green-100 p-2 text-right animate__animated animate__zoomIn\">\n                <span className=\"text-3xl font-extrabold text-green-900\">\n                  {displayNumbers(\n                    this.GetSummaryCounts(this.GetSummary(this.state.data))\n                      .validated\n                  )}\n                </span>\n                <span className=\"font-normal text-sm text-green-900\">\n                  Validated claims\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"border-t border-gray-400 p-4\">\n            <div className=\"flex flex-row items-center rounded mb-3\">\n              <div\n                onClick={() => this.setState({ view_type: \"Table\" })}\n                className={`px-3 py-2 ${\n                  this.state.view_type === \"Table\"\n                    ? \"bg-white font-bold text-blue-800 border-b-4 border-blue-600 rounded-t-md animate__animated animate__fadeIn\"\n                    : \"bg-white font-light  border-b-4 border-gray-200 hover:bg-blue-100 hover:text-blue-800 hover:border-blue-600\"\n                } cursor-pointer`}\n              >\n                Table view\n              </div>\n              <div\n                onClick={() => this.setState({ view_type: \"Analytical\" })}\n                className={`px-3 py-2 ${\n                  this.state.view_type === \"Analytical\"\n                    ? \"bg-white font-bold text-blue-800 border-b-4 border-blue-600 rounded-t-md animate__animated animate__fadeIn\"\n                    : \"bg-white font-light  border-b-4 border-gray-200 hover:bg-blue-100 hover:text-blue-800 hover:border-blue-600\"\n                } cursor-pointer`}\n              >\n                Analytical view\n              </div>\n              <div\n                onClick={() => this.setState({ view_type: \"History\" })}\n                className={`px-3 py-2 ${\n                  this.state.view_type === \"History\"\n                    ? \"bg-white font-bold text-blue-800 border-b-4 border-blue-600 rounded-t-md animate__animated animate__fadeIn\"\n                    : \"bg-white font-light  border-b-4 border-gray-200 hover:bg-blue-100 hover:text-blue-800 hover:border-blue-600\"\n                } cursor-pointer`}\n              >\n                Evaluation History\n              </div>\n            </div>\n            {this.state.view_type === \"Table\" ? (\n              <table className=\"w-full animate__animated animate__fadeIn\">\n                <thead className=\"bg-blue-100 \">\n                  <tr className=\"\">\n                    <th className=\"px-3 py-1 text-center\">#</th>\n                    <th className=\"px-3 py-1 text-left\">Position</th>\n                    <th className=\"px-3 py-1 text-center\">Total claims</th>\n                    <th className=\"px-3 py-1 text-center\">Waiting claims</th>\n                    <th className=\"px-3 py-1 text-center\">Validated claims</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.GetSummary(this.state.data).length === 0 ? (\n                    <tr>\n                      <td\n                        colSpan={5}\n                        className=\"text-center p-3 text-3xl font-light bg-gray-100 border border-gray-500 rounded\"\n                      >\n                        No result found!\n                      </td>\n                    </tr>\n                  ) : (\n                    this.GetSummary(this.state.data).map((item, i) => (\n                      <tr\n                        key={i + 1}\n                        className={`${\n                          i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                        } ${\n                          item.total === item.validated\n                            ? \"text-green-900 font-light\"\n                            : item.validated === 0\n                            ? \"text-yellow-900 font-bold\"\n                            : \"text-black font-light\"\n                        }`}\n                      >\n                        <td className=\"px-3 py-1 text-center\">{i + 1}</td>\n                        <td className=\"px-3 py-1 text-left\">\n                          {item.position_title}\n                        </td>\n                        <td className=\"px-3 py-1 text-center\">\n                          {displayNumbers(item.total)}\n                        </td>\n                        <td className=\"px-3 py-1 text-center\">\n                          {displayNumbers(item.pending)}\n                        </td>\n                        <td className=\"px-3 py-1 text-center\">\n                          {displayNumbers(item.validated)}\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            ) : this.state.view_type === \"Analytical\" ? (\n              <ClaimReportAnalytic\n                general_summary={this.GetSummaryCounts(\n                  this.GetSummary(this.state.data)\n                )}\n                summary_details={this.GetSummary(this.state.data)}\n                claim_level={this.state.selected_level}\n                institution={selected_institution}\n                general_main_data={this.state.general_main_data}\n                selected_claim_type={this.state.selected_claim_type}\n              />\n            ) : (\n              <ClaimEvaluationHistory claim_level={this.state.selected_level} />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n  positions,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  system: System;\n  positions: positionsStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    system: system,\n    positions: positions,\n    schoolLevels,\n  };\n};\n\nexport const ClaimReport = connect(mapStateToProps, {\n  setSelectedEducationCategory,\n  loadAllPositionsByInstitute,\n})(_ClaimReport);\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { FC_ClaimValidationSocketDataType } from \".\";\nimport {\n  Auth,\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n  Socket,\n} from \"../../../actions\";\nimport { evaluateClaim, FC_CompleteClaim } from \"../../../actions/claiming\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  course,\n  Events,\n} from \"../../../interfaces\";\nimport { ExamAnswerSheetDone } from \"../../../interfaces/exam\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { claimShowAnswer } from \"../Candidate/ExaminationFormView\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport { claimResponseBody } from \"./AdminClaimDocView\";\n\nenum viewTabs {\n  profile = \"Applicant Profile\",\n  exam = \"Exam Details\",\n}\n\ntype AdminClaimExamViewProps = {\n  thisExamSheet: ClaimExamResultsDetails;\n  thisExam: course;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n  evaluateClaim: Function;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: Function;\n  FC_CompleteClaim: Function;\n  socket: Socket;\n};\n\nconst AdminClaimExamView: React.FC<AdminClaimExamViewProps> = (props) => {\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loading, setLoading] = useState(true);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [marks, setMarks] = useState<number>(0);\n  const [selectedTab, setSelectedTab] = useState<viewTabs>(viewTabs.profile);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading || props.questionTypes.questionTypes === null) {\n    return <Loading />;\n  }\n\n  const FC_SocketServeAction = (data: FC_ClaimValidationSocketDataType) => {\n    props.socket.socket.emit(Events.CLAIMING_CHANGE_SERVER, data);\n  };\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (\n      actionTaken === ClaimDecisionStatus.ACCEPTED &&\n      (marks <= 0 || marks > 100)\n    ) {\n      setFormError({\n        element: \"marks\",\n        msg: \"Invalid marks, marks must be between 1 and 10\",\n      });\n\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim._id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          FC_SocketServeAction({\n            claim_id: res.data._id,\n            actionType: \"validated\",\n          });\n          // COMPLETE CLAIM ON LEVEL 2 =======================\n          FC_CompleteClaim(props.thisClaim);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await handleMarksAddition();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const FC_CompleteClaim = (this_claim: CandidateClaimInterface) => {\n    if (this_claim.claim_level === 2) {\n      props.FC_CompleteClaim((status: boolean, msg: string) => {\n        setLoadingRequest(status);\n        if (!isEmptyOrSpaces(msg)) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    }\n  };\n\n  const handleMarksAddition = async () => {\n    try {\n      await axios.put(`${API.DO_EXAM}/answersheet/user/marks/update`, {\n        answer_sheet_id: props.thisClaim.claiming_on_id,\n        marks: marks,\n      });\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  // const getAnswersByQuestion = (question_id: string): ClaimGetUserAnswers[] => {\n  //   return props.thisExamSheet.user_answers.filter(\n  //     (item) => item.question === question_id\n  //   );\n  // };\n\n  const claimCandidateAnswers = (): ExamAnswerSheetDone[] => {\n    let result: ExamAnswerSheetDone[] = [\n      {\n        exam_location: props.thisExamSheet.exam_location,\n        questions: props.thisExamSheet.questions,\n        user_answers: props.thisExamSheet.user_answers,\n        user: props.thisExamSheet.user,\n        period: props.thisExamSheet.period,\n        course: props.thisExamSheet.course,\n        exam_paper: props.thisExamSheet.exam_paper,\n        user_status: props.thisExamSheet.user_status,\n        used_duration: props.thisExamSheet.used_duration,\n        total_marks: props.thisExamSheet.total_marks,\n        number_of_question_answered:\n          props.thisExamSheet.number_of_question_answered,\n        // start_time: string,\n        // end_time: string,\n        exam_total_marks: props.thisExamSheet.exam_total_marks,\n        exam_start_time: props.thisExamSheet.exam_start_time,\n        exam_end_time: props.thisExamSheet.exam_end_time,\n        exam_date: props.thisExamSheet.exam_date,\n        status: props.thisExamSheet.status,\n        createdAt: props.thisExamSheet.createdAt,\n        updatedAt: props.thisExamSheet.updatedAt,\n        disability: false,\n        gender: \"\",\n        in_education: false,\n        position: \"\",\n        answer_sheet_id: props.thisExamSheet.answer_sheet_id,\n      },\n    ];\n    // props.thisExamSheet\n\n    return result;\n  };\n\n  return (\n    <section className=\"\">\n      {/* #################### VIEW TABS ################################## */}\n      <div className=\"flex flex-row items-center mx-4\">\n        {Object.values(viewTabs).map((item, i) => (\n          <div\n            key={i}\n            onClick={() => setSelectedTab(item)}\n            className={`animate__animated ${\n              selectedTab === item\n                ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                : \"bg-white border-white text-gray-600\"\n            } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mr-1`}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n      {/* #################### END VIEW TABS ################################## */}\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY POSITION ==================================================== */}\n          {selectedTab === viewTabs.exam && (\n            <section className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full rounded p-2 mb-2\">\n                <AnswersDetails\n                  showAnswers={true}\n                  exam_id={claimShowAnswer(\n                    props.thisExamSheet,\n                    props.thisExam.course_name\n                  )}\n                  allAnswers={claimCandidateAnswers()}\n                  user_id={props.thisExamSheet.user}\n                />\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <section className=\"w-full my-2 animate__animated animate__fadeIn rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Names:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.user.user_info.fname +\n                      \" \" +\n                      props.thisClaim.user.user_info.lname}\n                  </span>\n                </div>\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <div className=\"\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Email:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.user.email}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Phone:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.user.phone_number}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Gender:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.user.user_info.sex === \"M\"\n                    ? \"Male\"\n                    : \"Female\"}\n                </span>\n              </div>\n            </div>\n          )}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-2 pt-3\"\n              key={index + claim._id}\n            >\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-2 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div> */}\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full space-y-1\">\n              {actionTaken === ClaimDecisionStatus.ACCEPTED && (\n                <div className=\"flex items-center justify-end w-full gap-2\">\n                  <span className=\"font-semibold\">Addition marks</span>\n                  <div className=\"px-2\">\n                    <input\n                      placeholder={`Addition marks`}\n                      className={`border border-${\n                        formError && formError.element === \"marks\"\n                          ? \"red\"\n                          : \"gray\"\n                      }-400 rounded px-3 py-1 w-auto focus:outline-none`}\n                      value={marks}\n                      onChange={(e) => {\n                        setMarks(Number(e.target.value));\n                        setFormError(null);\n                      }}\n                      disabled={loadingRequest}\n                    />\n                    {formError && formError.element === \"marks\" && (\n                      <p className=\"text-red-800\">{formError.msg}</p>\n                    )}\n                  </div>\n                </div>\n              )}\n              <div className=\"w-full px-2\">\n                <textarea\n                  placeholder={`Reason of your decision...`}\n                  cols={50}\n                  rows={actionTaken === ClaimDecisionStatus.ACCEPTED ? 2 : 3}\n                  className={`border border-${\n                    formError && formError.element === \"comment\"\n                      ? \"red\"\n                      : \"gray\"\n                  }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                  style={{ resize: \"none\" }}\n                  value={responseMsg}\n                  onChange={(e) => {\n                    setResponseMsg(e.target.value);\n                    setFormError(null);\n                  }}\n                  disabled={loadingRequest}\n                ></textarea>\n                {formError && formError.element === \"comment\" && (\n                  <p className=\"text-red-800\">{formError.msg}</p>\n                )}\n              </div>\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  questionTypes,\n  socket,\n}: StoreState): {\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n  socket: Socket;\n} => {\n  return {\n    auth,\n    questionTypes,\n    socket,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    loadQuestionTypes,\n    evaluateClaim,\n    PushPopupAlert,\n    FC_CompleteClaim,\n  })(AdminClaimExamView)\n);\n","import React from \"react\";\nimport { AiOutlineFullscreen } from \"react-icons/ai\";\nimport { BiZoomIn, BiZoomOut } from \"react-icons/bi\";\nimport { CgImage } from \"react-icons/cg\";\nimport { ImFolderOpen } from \"react-icons/im\";\nimport { MdClose } from \"react-icons/md\";\nimport ViewPDF from \"../../../components/ViewPDF/ViewPDF\";\nimport { TableCandidatesInterface } from \"../../../interfaces/document_validation\";\nimport { API } from \"../../../utils/api\";\nimport {\n  fullScreen,\n  getFileType,\n  isFileImage,\n  zoomInOut,\n} from \"../../../utils/functions\";\nimport NoSession from \"../../SessionSettings/NoSession\";\n\ninterface FooterInitialPropInterface {\n  doc: TableCandidatesInterface;\n  setDocId: (data: string) => void;\n  close: (value: string) => void;\n}\n\nconst FooterInitial: React.FC<FooterInitialPropInterface> = (\n  props\n): JSX.Element => {\n  return (\n    <div className=\"w-full flex md:flex-col flex-col justify-between items-start gap-2\">\n      {/* left part */}\n      <div className=\"flex items-center gap-4 w-full\">\n        {/* doc title & status */}\n        <section className=\"p-3 w-full\">\n          {/* --------------------------------- */}\n          <div className=\"flex items-center gap-2 border-b-2 my-2 py-1\">\n            <ImFolderOpen className=\"text-blue-600 text-xl\" />\n            <h2 className=\"uppercase tracking-wide text-xl font-semibold text-gray-700\">\n              Document Decision Re-Override\n            </h2>\n          </div>\n          <div className=\"flex flex-row items-start justify-left gap-2 mb-2\">\n            <span className=\"text-gray-500 italic mt-1\">Doc Title: </span>\n            <span className=\"font-bold text-2xl\">\n              {props.doc.main_doc_title}\n            </span>\n          </div>\n          <div className=\"flex flex-row items-center justify-left gap-2 mb-2\">\n            <span className=\"text-gray-500 italic\">Names: </span>\n            <span className=\"font-medium text-lg\">\n              {props.doc.fname + \" \" + props.doc.lname}\n            </span>\n          </div>\n          <section className=\"animate__animated animate__fadeIn\">\n            <div className=\"flex flex-row items-center justify-left gap-2 mb-2\">\n              <span className=\"text-gray-500 italic\">National ID: </span>\n              <span className=\"font-medium text-lg\">{props.doc.n_id}</span>\n            </div>\n            <div className=\"flex flex-row items-center justify-left gap-2 mb-2\">\n              <span className=\"text-gray-500 italic\">Phone: </span>\n              <span className=\"font-medium text-lg\">\n                {props.doc.phone_number}\n              </span>\n            </div>\n            <div className=\"flex flex-row items-center justify-left gap-2 mb-2\">\n              <span className=\"text-gray-500 italic\">Email: </span>\n              <span className=\"font-medium text-lg\">{props.doc.email}</span>\n            </div>\n            {/* status */}\n            <div className=\"flex items-center gap-1\">\n              <span className=\"text-gray-500 italic\">Status:</span>\n              <span\n                className={`text-${\n                  props.doc.validation_status === \"waiting\"\n                    ? \"yellow\"\n                    : props.doc.validation_status === \"approved\"\n                    ? \"blue\"\n                    : \"red\"\n                }-700 font-medium text-lg`}\n              >\n                {props.doc.validation_status === \"waiting\"\n                  ? \"Pending\"\n                  : props.doc.validation_status === \"approved\"\n                  ? \"Approved\"\n                  : \"Rejected\"}\n              </span>\n            </div>\n            {/* end status */}\n\n            {/* comment */}\n            {props.doc.validated_by && (\n              <div className=\"w-full\">\n                <span className=\"text-gray-500 italic\">Reason:</span>\n                <p className={`text-gray-700 font-medium text-base`}>\n                  {props.doc.validated_by?.comment}\n                </p>\n              </div>\n            )}\n            {/* end comment */}\n          </section>\n\n          <div className=\"my-5 flex justify-end\">\n            <button\n              className=\"bg-gray-700 px-4 py-2 rounded font-semibold text-white inline-flex items-center space-x-2 focus:outline-none\"\n              onClick={() => props.close(\"\")}\n            >\n              <MdClose className=\"w-5 h-5\" />\n              <span>Close</span>\n            </button>\n          </div>\n        </section>\n        {/* end doc title & status */}\n      </div>\n      {/* end left part */}\n    </div>\n  );\n};\n\ninterface AppProps {\n  doc: TableCandidatesInterface;\n  setDocId: (data: string) => void;\n  close: (value: string) => void;\n}\n\ninterface AppStates {\n  isFullscreen: boolean;\n  failedToLoadFile: boolean;\n  loadingImage: boolean;\n  actionTaken: null | \"approval\" | \"rejection\";\n}\n\nclass ClaimFileView extends React.Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      isFullscreen: false,\n      failedToLoadFile: false,\n      loadingImage: true,\n      actionTaken: null,\n    };\n  }\n\n  setSetFullscreen = (value: boolean) => {\n    this.setState({ isFullscreen: value });\n  };\n\n  handleFullScreen = () => {\n    if (this.state.isFullscreen) {\n      // alert(\"closing\");\n      fullScreen(\"doc-img\", \"CLOSE\");\n      this.setSetFullscreen(false);\n    } else {\n      // alert(\"opening\");\n      this.setSetFullscreen(true);\n      fullScreen(\"doc-img\", \"OPEN\");\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"bg-gray-50 h-full md:h-screen grid grid-cols-1 md:grid-cols-3\">\n        {/* image content */}\n        {this.props.doc.files.length > 0 && this.state.loadingImage && (\n          <div className=\"col-span-2 max-h-full md:max-h-screen overflow-y-auto relative group\">\n            <div className=\"relative\">\n              {this.state.failedToLoadFile === false ? (\n                <div className=\"w-full mx-auto mt-5 px-4\">\n                  <div className=\"animate-pulse flex space-x-4\">\n                    <div className=\"flex-1 space-y-4 py-4\">\n                      <div className=\"bg-gray-300 rounded h-72 flex items-center justify-center\">\n                        <h1 className=\"text-5xl text-gray-500 font-bold\">\n                          Loading{\" \"}\n                          {isFileImage(getFileType(this.props.doc.files))\n                            ? \"image\"\n                            : \"pdf\"}\n                          ...\n                        </h1>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"px-3\">\n                  <NoSession\n                    title=\"Error\"\n                    description={\n                      isFileImage(getFileType(this.props.doc.files))\n                        ? \"Failed to load image\"\n                        : \"Failed to load pdf\"\n                    }\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n        <div\n          className={`col-span-2 h-auto md:max-h-screen overflow-y-auto relative bg-gray-200 group ${\n            this.state.loadingImage && \"hidden\"\n          }`}\n        >\n          {/* DISPLAY IMAGE OF PDF =================================== */}\n          {this.props.doc.files.length > 0 ? (\n            isFileImage(getFileType(this.props.doc.files)) ? (\n              <div className=\"relative\">\n                <img\n                  src={API.AUTH_FILES + this.props.doc.files}\n                  alt=\"\"\n                  className={`w-full md:w-auto h-auto md:max-h-screen mx-auto ${\n                    this.state.loadingImage && \"hidden\"\n                  }`}\n                  id=\"doc-img\"\n                  onLoad={() => this.setState({ loadingImage: false })}\n                  onError={() => this.setState({ failedToLoadFile: true })}\n                  onDoubleClick={() => this.handleFullScreen()}\n                />\n              </div>\n            ) : (\n              <ViewPDF\n                file_url={API.AUTH_FILES + this.props.doc.files}\n                class_name={`w-full h-screen md:max-h-screen mx-auto ${\n                  this.state.loadingImage && \"hidden\"\n                }`}\n                frame_title={\"application PDF file view\"}\n                setLoadingFile={(e: boolean) =>\n                  this.setState({ loadingImage: e })\n                }\n                setLoadingError={(e: boolean) =>\n                  this.setState({ failedToLoadFile: e })\n                }\n              />\n            )\n          ) : (\n            <div className=\"text-center text-red-400 py-8 animate__animated animate__fadeIn\">\n              <CgImage className=\"mx-auto w-40 h-40\" />\n              <span className=\"font-semibold text-4xl\">No Files Provided</span>\n            </div>\n          )}\n          {/* END DISPLAY IMAGE OF PDF =================================== */}\n\n          {/* ------------------------------------------------------------ */}\n\n          {/* FILE VIEW CONTROLLERS =================================== */}\n          <div\n            className={`flex items-center justify-between absolute top-0 ${\n              isFileImage(getFileType(this.props.doc.files))\n                ? \"w-full\"\n                : \"w-max\"\n            } px-2 py-2`}\n          >\n            {this.props.doc.files.length > 0 &&\n              isFileImage(getFileType(this.props.doc.files)) && (\n                <div className=\"flex items-center gap-2 opacity-0 group-hover:opacity-100\">\n                  <button\n                    className=\"flex items-center bg-gray-100 justify-center h-10 w-10 rounded-full shadow-md opacity-4 cursor-pointer hover:bg-blue-50\"\n                    onClick={() => zoomInOut(\"doc-img\", \"IN\")}\n                  >\n                    <BiZoomIn className=\"h-6 w-6 text-gray-500\" />\n                  </button>\n                  <button\n                    className=\"flex items-center bg-gray-100 justify-center h-10 w-10 rounded-full shadow-md opacity-4 cursor-pointer hover:bg-blue-50\"\n                    onClick={() => zoomInOut(\"doc-img\", \"OUT\")}\n                  >\n                    <BiZoomOut className=\"h-6 w-6 text-gray-500\" />\n                  </button>\n                  <div\n                    className=\"flex items-center bg-gray-100 justify-center h-10 w-10 rounded-full shadow-md opacity-4 cursor-pointer hover:bg-blue-50\"\n                    onClick={() => fullScreen(\"doc-img\", \"OPEN\")}\n                  >\n                    <AiOutlineFullscreen className=\"h-6 w-6 text-gray-500\" />\n                  </div>\n                </div>\n              )}\n          </div>\n          {/* END FILE VIEW CONTROLLERS =================================== */}\n        </div>\n\n        {/* footer */}\n        <div>\n          {this.props.doc.files && (\n            <FooterInitial\n              doc={this.props.doc}\n              setDocId={this.props.setDocId}\n              close={this.props.close}\n            />\n          )}\n        </div>\n        {/* end footer */}\n      </div>\n    );\n  }\n}\n\nexport default ClaimFileView;\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdArrowBack, MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  FC_Access,\n  PushPopupAlert,\n  reAssessApplication,\n  Socket,\n} from \"../../../actions\";\nimport { evaluateClaim, FC_CompleteClaim } from \"../../../actions/claiming\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimCandidateDetailInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  Events,\n  PositionAPI,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { DATE, FC_GetBase64Img, showDate } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport { claimResponseBody } from \"./AdminClaimDocView\";\nimport PositionDetails from \"../../CandidateApplication/ApplicationComponents/PositionDetails\";\nimport {\n  GetDocTitle,\n  TableCandidatesInterface,\n} from \"../../../interfaces/document_validation\";\nimport { UserDocumentsInterface } from \"../../../shared/interfaces\";\nimport { IoDocumentOutline } from \"react-icons/io5\";\nimport ClaimFileView from \"./ClaimFileView\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { UserAccessList } from \"../../../utils/auth_access\";\nimport { FC_ClaimValidationSocketDataType } from \".\";\n\nexport const FC_AdminApplicationPositionDistinctCategory = (\n  thisPosition: PositionAPI,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.position_requirement[field]._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.position_requirement[field]._id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\ntype AdminClaimAppViewProps = {\n  thisApplication: allClaimApplicationInterface;\n  thisPosition: PositionAPI;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  systemPositions: PositionAPI[];\n  claimReasons: claimReasonInterface[] | null;\n  close: () => void;\n\n  // REDUX ==================\n  auth: Auth;\n  reAssessApplication: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n  FC_CompleteClaim: Function;\n  socket: Socket;\n};\n\nconst AdminClaimAppView: React.FC<AdminClaimAppViewProps> = (props) => {\n  const [viewPosition, setViewPosition] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [viewThisDocument, setViewThisDocument] = useState<string>(\"\");\n\n  const FC_SocketServeAction = (data: FC_ClaimValidationSocketDataType) => {\n    props.socket.socket.emit(Events.CLAIMING_CHANGE_SERVER, data);\n  };\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim._id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      console.log(\"=================claimResponseBody===================\");\n      console.log({ subClaim, api_body });\n      console.log(\"=================claimResponseBody===================\");\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log(\"====================================\");\n          console.log({ evaluate_claim_res: res });\n          console.log(\"====================================\");\n          props.evaluateClaim(res.data);\n          FC_SocketServeAction({\n            claim_id: res.data._id,\n            actionType: \"validated\",\n          });\n          // COMPLETE CLAIM ON LEVEL 2 =======================\n          FC_CompleteClaim(props.thisClaim);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await overrideDecision();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n          props.close();\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const FC_CompleteClaim = (this_claim: CandidateClaimInterface) => {\n    if (this_claim.claim_level === 2) {\n      props.FC_CompleteClaim((status: boolean, msg: string) => {\n        setLoadingRequest(status);\n        if (!isEmptyOrSpaces(msg)) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  const overrideDecision = async () => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/apply/tolerateappl/${props.thisClaim.claiming_on_id}`,\n        {\n          user_id: props.auth.user.user_id,\n          email: props.thisClaim.user.email,\n          phone_number: props.thisClaim.user.phone_number,\n          comment: responseMsg,\n          application_status: ApplicationStates.Shortlisted,\n        }\n      );\n\n      res.data &&\n        props.reAssessApplication({\n          application_id: props.thisClaim.claiming_on_id,\n          application_status: ApplicationStates.Shortlisted,\n        });\n    } catch (error) {\n      console.error({ code_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      // errorToText(error);\n    }\n    setLoadingRequest(false);\n  };\n\n  const getPositionById = (position_id: string): PositionAPI | undefined => {\n    let result = props.systemPositions.find(\n      (item) => item.position_id === position_id\n    );\n\n    return result;\n  };\n\n  const FC_DocumentInArray = (\n    docCategories: DocumentReducerInterface,\n    DocumentsData: ClaimCandidateDetailInterface\n  ): TableCandidatesInterface[] | [] => {\n    let documentsTemp: TableCandidatesInterface[] = [];\n    let details = DocumentsData.details;\n    for (let d in details) {\n      let candidate_detail: UserDocumentsInterface = DocumentsData.details[d];\n      if (\n        candidate_detail.files !== null &&\n        !isEmptyOrSpaces(candidate_detail.files)\n      ) {\n        documentsTemp.push({\n          // DATA FROM MAIN PROPERTY\n          user_id: DocumentsData._id,\n          n_id: DocumentsData.n_id ? DocumentsData.n_id : \"\",\n          fname: DocumentsData.user_info.fname,\n          lname: DocumentsData.user_info.lname,\n          phone_number: DocumentsData.phone_number,\n          district: DocumentsData.user_info.district,\n          email: DocumentsData.email,\n          // NEW DATA GENERATED BAISED ON DETAILS PROPERTY\n          main_doc_title: GetDocTitle(docCategories, candidate_detail).main,\n          // DATA FROM DETAILS PROPERTY\n          category_id: candidate_detail.category_id,\n          sub_category_id: candidate_detail.sub_category_id,\n          category_subcategory_data: candidate_detail.category_subcategory_data,\n          title: candidate_detail.title,\n          description: candidate_detail.description,\n          files: candidate_detail.files,\n          start_year: candidate_detail.start_year,\n          end_year: candidate_detail.end_year,\n          school: candidate_detail.school.title,\n          details_email: candidate_detail.email,\n          names: candidate_detail.names,\n          details_phone_number: candidate_detail.phone_number,\n          company: candidate_detail.company,\n          year: candidate_detail.year,\n          doc_id: candidate_detail.doc_id,\n          validation_status: candidate_detail.validation_status,\n          validated_by: candidate_detail.validated_by\n            ? {\n                user_id: candidate_detail.validated_by.user_id,\n                comment: candidate_detail.validated_by.comment\n                  ? candidate_detail.validated_by.comment\n                  : candidate_detail.validated_by.commet,\n                validation_status:\n                  candidate_detail.validated_by.validation_status,\n                date: candidate_detail.validated_by.date,\n              }\n            : null,\n          doc_history_status: \"\",\n          get_in_date: \"\",\n          approved: candidate_detail.approved,\n          // DATA FROM EXAMS PROPERTY\n          exams: [],\n        });\n      }\n    }\n    return documentsTemp;\n  };\n\n  const DATA_ThisPosition = getPositionById(props.thisApplication.position);\n\n  const DATA_Documents = FC_DocumentInArray(\n    props.documentCategories,\n    props.thisClaim.user\n  );\n\n  const Data_ThisDocument = DATA_Documents\n    ? DATA_Documents.find((item) => item.doc_id === viewThisDocument)\n    : undefined;\n\n  if (Data_ThisDocument) {\n    return (\n      <Modal\n        backDrop={true}\n        theme={Themes.default}\n        close={() => setViewThisDocument(\"\")}\n        backDropClose={true}\n        widthSizeClass={ModalSize.maxWidth}\n        displayClose={false}\n        padding={{\n          title: undefined,\n          body: undefined,\n          footer: undefined,\n        }}\n      >\n        <ClaimFileView\n          doc={Data_ThisDocument}\n          setDocId={(value: string) => setViewThisDocument(value)}\n          close={setViewThisDocument}\n        />\n      </Modal>\n    );\n  }\n\n  return (\n    <section>\n      <div className=\"w-full py-1 divide-y-2 space-y-4\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY PROFILE ==================================================== */}\n          <div className=\"flex items-start mb-4 -mt-2 pb-3 px-4 bg-white\">\n            <div className=\"w-auto\">\n              <img\n                src={FC_GetBase64Img(props.thisClaim.user.user_info.photo)}\n                className=\"w-auto object-center object-cover h-32 rounded-lg\"\n                alt=\"\"\n              />\n            </div>\n            <section className=\"w-full\">\n              <div className=\"flex items-center\">\n                <div className=\"flex items-center gap-2 px-3\">\n                  <span className={`italic text-gray-600`}>Applicant:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.user.user_info.fname +\n                      \" \" +\n                      props.thisClaim.user.user_info.lname}\n                  </span>\n                </div>\n                {false && (\n                  <button\n                    type=\"button\"\n                    className=\"bg-gray-200 hover:bg-gray-300 text-gray-700 group-hover:text-gray-800 py-1 px-2 mr-1 rounded text-sm\"\n                    onClick={() => setViewPosition(!viewPosition)}\n                  >\n                    {viewPosition ? \"Hide\" : \"More\"}\n                  </button>\n                )}\n              </div>\n              <div className=\"flex items-center gap-2 px-3\">\n                <span className={`italic text-gray-600`}>NID:</span>\n                <span className=\"text-gray-800 font-bold text-xl\">\n                  {props.thisClaim.user.n_id}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 px-3\">\n                <span className={`italic text-gray-600`}>Sex:</span>\n                <span className=\"text-gray-800 font-bold text-xl\">\n                  {props.thisClaim.user.user_info.sex}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 px-3\">\n                <span className={`italic text-gray-600`}>Phone:</span>\n                <span className=\"text-gray-800 font-bold text-xl\">\n                  {props.thisClaim.user.phone_number}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 px-3\">\n                <span className={`italic text-gray-600`}>Email:</span>\n                <span className=\"text-gray-800 font-bold text-xl\">\n                  {props.thisClaim.user.email}\n                </span>\n              </div>\n            </section>\n          </div>\n          {/* DISPLAY POSITION ==================================================== */}\n          <section className=\"w-full mb-4 bg-white px-4 py-2 rounded\">\n            <h2 className=\"mx-4 text-blue-800 font-bold text-3xl\">\n              {DATA_ThisPosition\n                ? DATA_ThisPosition!.position_title\n                : \"Position not found\"}\n            </h2>\n            {DATA_ThisPosition ? (\n              <PositionDetails\n                positionDetails={DATA_ThisPosition}\n                cancel={() => {}}\n                apply={() => {}}\n                auth={props.auth}\n                showRegister={() => {}}\n                hideTools={true}\n              />\n            ) : (\n              <NoResult\n                theme={NoResultThemes.Dark}\n                value={\"Position not found!\"}\n              />\n            )}\n          </section>\n          {/* END DISPLAY POSITION ==================================================== */}\n\n          {/* -------------------------------------------------------------------------------- */}\n\n          {/* DISPLAY DOCUMENTS ==================================================== */}\n          <section className=\"bg-white rounded w-full px-4 py-2 my-3\">\n            <div className=\"\">\n              <div className=\"font-light text-4xl\">User documents</div>\n              <div>List of all documents</div>\n            </div>\n\n            <table className=\"w-full rounded shadow\">\n              {DATA_Documents !== null && DATA_Documents.length !== 0 && (\n                <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">#</td>\n                    <td className=\"px-2 py-2\">User Document</td>\n                    <td className=\"px-2 py-2\">Status</td>\n                    <td className=\"px-2 py-2\"></td>\n                  </tr>\n                </thead>\n              )}\n              <tbody>\n                {DATA_Documents && DATA_Documents.length === 0 && (\n                  <tr className=\"border-b border-gray-200\">\n                    <td colSpan={4}>\n                      <div className=\"m-3 flex items-center justify-center p-4 rounded bg-gray-100 text-center text-2xl font-light\">\n                        No documents found for this user!\n                      </div>\n                    </td>\n                  </tr>\n                )}\n                {DATA_Documents &&\n                  DATA_Documents.length > 0 &&\n                  DATA_Documents.map((doc, index) => (\n                    <tr\n                      key={doc.doc_id + index + Math.random()}\n                      className=\"border-b border-gray-200 cursor-pointer group hover:bg-gray-100\"\n                      onClick={() => setViewThisDocument(doc.doc_id)}\n                    >\n                      <td className=\"p-3 text-left whitespace-nowrap\">\n                        {index + 1}\n                      </td>\n                      <td className=\"py-3 px-3 text-left font-medium text-lg\">\n                        {doc.main_doc_title}\n                      </td>\n                      <td className=\"py-3 px-2 text-left\">\n                        <span\n                          className={`text-sm font-medium py-1 px-2 rounded align-middle ${\n                            doc.validation_status === \"approved\"\n                              ? \"bg-green-100 text-green-800\"\n                              : doc.validation_status === \"waiting\"\n                              ? \"bg-gray-200 text-black\"\n                              : \"bg-red-100 text-red-800\"\n                          }`}\n                        >\n                          {capitalizeFirstLetter(doc.validation_status)}\n                        </span>\n                      </td>\n                      <td className=\"text-right\">\n                        <button\n                          className=\"bg-blue-100 group-hover:bg-blue-600 text-blue-700 group-hover:text-white font-bold py-1 px-1 inline-flex rounded focus:outline-none\"\n                          title=\"View documents\"\n                        >\n                          <IoDocumentOutline className=\"w-5 h-5\" />\n                          View doc\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </section>\n          {/* END DISPLAY DOCUMENTS ==================================================== */}\n\n          {false && (\n            <section className=\"px-4 py-2 bg-white rounded\">\n              <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                <span className={`italic`}>Status:</span>\n                <span\n                  className={`font-bold ${\n                    props.thisClaim.previous\n                      ? props.thisClaim.previous.status ===\n                        ApplicationStates.Rejected\n                      : props.thisApplication.application_status ===\n                        ApplicationStates.Rejected\n                      ? \"text-yellow-900\"\n                      : \"text-blue-600\"\n                  } rounded px-3 py-1`}\n                >\n                  {props.thisClaim.previous\n                    ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                    : capitalizeFirstLetter(\n                        props.thisApplication.application_status\n                      )}\n                </span>\n              </div>\n              {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Evaluated by:</span>\n              <span className=\"font-semibold\">\n                {props.thisClaim.previous.evaluater.name}\n              </span>\n            </div> */}\n              {false && (\n                <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                  <span className={`italic`}>Session:</span>\n                  <span className=\"font-bold text-gray-900 py-1\">\n                    {props.thisApplication.application_session}\n                  </span>\n                </div>\n              )}\n              <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                <span className={`italic`}>Date:</span>\n                <span className=\"font-bold text-gray-900 py-1\">\n                  {DATE(props.thisApplication.createdAt)}\n                </span>\n              </div>\n              <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                <span className={`italic`}>Reason:</span>\n                <span\n                  className=\"font-normal\"\n                  dangerouslySetInnerHTML={{\n                    __html: props.thisClaim.previous\n                      ? props.thisClaim.previous.reason\n                      : props.thisApplication.override_by.comment,\n                  }}\n                ></span>\n              </div>\n            </section>\n          )}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-4 pt-2 pb-3 rounded bg-white\"\n              key={index + claim._id}\n            >\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    {FC_Access(props.auth, UserAccessList.CLAIM_VALIDATION_2)\n                      .view && (\n                      <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                        <span className={`italic`}>Evaluated by:</span>\n                        <span className=\"font-semibold\">\n                          {claim.evaluater.name}\n                        </span>\n                      </div>\n                    )}\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span\n                        className=\"font-normal\"\n                        dangerouslySetInnerHTML={{\n                          __html: claim.evaluation_comment,\n                        }}\n                      ></span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-gray-900 rounded inline-flex items-center space-x-2 focus:outline-none bg-gray-100 hover:bg-gray-300`}\n                onClick={() => {\n                  props.close();\n                }}\n              >\n                <MdArrowBack className=\"w-5 h-5\" />\n                <span>Back to list</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  formError && formError.element === \"comment\" ? \"red\" : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={responseMsg}\n                onChange={(e) => {\n                  setResponseMsg(e.target.value);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              ></textarea>\n              {formError && formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  socket,\n}: StoreState): {\n  auth: Auth;\n  socket: Socket;\n} => {\n  return {\n    auth: auth,\n    socket,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    evaluateClaim,\n    reAssessApplication,\n    PushPopupAlert,\n    FC_CompleteClaim,\n  })(AdminClaimAppView)\n);\n","import React from \"react\";\nimport axios from \"axios\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { adminDisplayClaimTitle, FC_ClaimValidationSocketDataType } from \".\";\nimport { Auth, FC_Access, PushPopupAlert, Socket } from \"../../../actions\";\nimport { evaluateClaim, FC_CompleteClaim } from \"../../../actions/claiming\";\nimport { verifyDocument } from \"../../../actions/document\";\nimport { VerifyDocumentInterface } from \"../../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  Events,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DocValidationStatusInterface,\n  UserDocumentsInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport {\n  FC_GetBase64Img,\n  getFileType,\n  isFileImage,\n  showDate,\n} from \"../../../utils/functions\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport ViewPDF from \"../../../components/ViewPDF/ViewPDF\";\nimport { UserAccessList } from \"../../../utils/auth_access\";\n\nexport type claimResponseBody = {\n  sub_claim_id: string;\n  evaluation_comment: string;\n  evaluated_by: string;\n  evaluator_name: string;\n  evaluator_email: string;\n  decision_taken_status: ClaimDecisionStatus;\n};\n\ntype AdminClaimDocViewProps = {\n  thisDoc: UserDocumentsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimReasons: claimReasonInterface[] | null;\n  candidateId: string;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  actionTaken: ClaimDecisionStatus | null;\n  setActionTaken: (value: ClaimDecisionStatus | null) => void;\n  responseMsg: string;\n  setResponseMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX ==================\n  auth: Auth;\n  verifyDocument: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n  FC_CompleteClaim: Function;\n  socket: Socket;\n};\n\nconst AdminClaimDocView: React.FC<AdminClaimDocViewProps> = (props) => {\n  const FC_SocketServeAction = (data: FC_ClaimValidationSocketDataType) => {\n    props.socket.socket.emit(Events.CLAIMING_CHANGE_SERVER, data);\n  };\n\n  const handleVerify = async () => {\n    if (!props.actionTaken) {\n      props.setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(props.responseMsg)) {\n      props.setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      props.setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim._id,\n        evaluation_comment: props.responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: props.actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          FC_SocketServeAction({\n            claim_id: res.data._id,\n            actionType: \"validated\",\n          });\n          // COMPLETE CLAIM ON LEVEL 2 =======================\n          FC_CompleteClaim(props.thisClaim);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (props.actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await FC_DocValidation();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          props.setResponseMsg(\"\");\n          props.setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const FC_CompleteClaim = (this_claim: CandidateClaimInterface) => {\n    if (this_claim.claim_level === 2) {\n      props.FC_CompleteClaim((status: boolean, msg: string) => {\n        props.setLoadingRequest(status);\n        if (!isEmptyOrSpaces(msg)) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    }\n  };\n\n  const FC_DocValidation = async () => {\n    const api_body: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user._id,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n      },\n      in_education: false,\n      disability: false,\n      expiration_date: \"this.state.expiration_date\",\n    };\n    const api_redux: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user._id,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n        date: \"\",\n      },\n      in_education: false,\n      disability: false,\n      expiration_date: \"this.state.expiration_date\",\n    };\n\n    try {\n      const res = await axios.post<VerifyDocumentInterface>(\n        `${API.USER}/docs/validateuserdoc`,\n        api_body\n      );\n      if (res) {\n        props.verifyDocument(api_redux);\n        // await FC_shortListing(props.thisClaim.user._id);\n        // setDocumentId(\"null\");\n      }\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const FC_shortListing = async (candidate_id: string) => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/apply/doccheckshortlist/${candidate_id}`,\n        {\n          email: props.thisClaim.user.email,\n          phone_number: props.thisClaim.user.phone_number,\n        }\n      );\n      console.log({ res });\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full py-1 divide-y-2 space-y-2\">\n        {/* DISPLAY PROFILE ==================================================== */}\n        <div className=\"flex items-start mb-4 -mt-2 pb-3 px-4 bg-white rounded\">\n          <div className=\"w-auto\">\n            <img\n              src={FC_GetBase64Img(props.thisClaim.user.user_info.photo)}\n              className=\"w-auto object-center object-cover h-32 rounded-lg\"\n              alt=\"\"\n            />\n          </div>\n          <section className=\"w-full\">\n            <div className=\"flex items-center\">\n              <div className=\"flex items-center gap-2 px-3\">\n                <span className={`italic text-gray-600`}>Applicant:</span>\n                <span className=\"text-gray-800 font-bold text-xl\">\n                  {props.thisClaim.user.user_info.fname +\n                    \" \" +\n                    props.thisClaim.user.user_info.lname}\n                </span>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-2 px-3\">\n              <span className={`italic text-gray-600`}>NID:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.thisClaim.user.n_id}\n              </span>\n            </div>\n            <div className=\"flex items-center gap-2 px-3\">\n              <span className={`italic text-gray-600`}>Sex:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.thisClaim.user.user_info.sex}\n              </span>\n            </div>\n            <div className=\"flex items-center gap-2 px-3\">\n              <span className={`italic text-gray-600`}>Phone:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.thisClaim.user.phone_number}\n              </span>\n            </div>\n            <div className=\"flex items-center gap-2 px-3\">\n              <span className={`italic text-gray-600`}>Email:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.thisClaim.user.email}\n              </span>\n            </div>\n          </section>\n        </div>\n\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col bg-white rounded mb-4 pb-3 px-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Title:</span>\n              <span className=\"text-gray-800 font-bold text-2xl\">\n                {/* {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main} */}\n                {props.thisClaim.user.details.filter(\n                  (item) => item.validation_status !== \"waiting\"\n                ).length > 0\n                  ? adminDisplayClaimTitle(\n                      props.documentCategories,\n                      props.thisClaim.user.details.filter(\n                        (item) => item.validation_status !== \"waiting\"\n                      ),\n                      props.thisClaim\n                    )\n                  : \"-\"}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 mt-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.commet}\n            </span>\n          </div>\n          {/* {props.thisClaim.previous &&\n            FC_Access(props.auth, UserAccessList.CLAIM_VALIDATION_2).view && (\n              <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                <span className={`italic`}>Evaluated by:</span>\n                <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n                  {props.thisClaim.previous.evaluater.name}\n                </span>\n              </div>\n            )} */}\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              {isFileImage(getFileType(props.thisDoc.files)) ? (\n                <img\n                  src={API.AUTH_FILES + props.thisDoc.files}\n                  alt=\"Applicant document\"\n                  className={`w-full md:w-auto h-auto md:max-h-screen mx-auto`}\n                  id=\"doc-img\"\n                />\n              ) : (\n                <ViewPDF\n                  file_url={API.AUTH_FILES + props.thisDoc.files}\n                  class_name={`w-full h-screen md:max-h-screen mx-auto`}\n                  frame_title={\"application PDF file view\"}\n                />\n              )}\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 && (\n          <div className=\"bg-white rounded mb-4 pb-3 px-4\">\n            {props.thisClaim.claims.map((claim, index) => (\n              <section className=\"flex flex-col pt-3\" key={index + claim._id}>\n                <div className=\"text-gray-700 italic font-bold\">\n                  Claim Comment (level {index + 1})\n                </div>\n                {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n                <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                  <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                    <MdInfoOutline />\n                    {getReasonById(props.thisClaim.default_claim_resaons)\n                      ? getReasonById(props.thisClaim.default_claim_resaons)!\n                          .reason\n                      : \"\"}\n                  </div>\n                  <p>{claim.reason}</p>\n                  <span className=\"text-gray-500 text-xs\">\n                    {showDate(claim.createdAt)}\n                  </span>\n                </div>\n                {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n                {isClaimEvaluated(props.thisClaim, claim.level) && (\n                  <section className=\"mt-4\">\n                    <span className=\"text-gray-700 italic font-semibold\">\n                      Response (level {index + 1})\n                    </span>\n                    <div className=\"border-t-2\">\n                      <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                        <span className={`italic`}>Status:</span>\n                        <span\n                          className={`font-bold ${\n                            claim.decision_taken_status ===\n                            ClaimDecisionStatus.REJECTED\n                              ? \"text-yellow-900\"\n                              : \"text-blue-600\"\n                          } rounded px-3 py-1`}\n                        >\n                          {capitalizeFirstLetter(\n                            claim.decision_taken_status.toLocaleLowerCase()\n                          )}\n                        </span>\n                      </div>\n                      {FC_Access(props.auth, UserAccessList.CLAIM_VALIDATION_2)\n                        .view && (\n                        <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                          <span className={`italic`}>Evaluated by:</span>\n                          <span className=\"font-semibold\">\n                            {claim.evaluater.name}\n                          </span>\n                        </div>\n                      )}\n                      <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                        <span className={`italic`}>Reason:</span>\n                        <span className=\"font-normal\">\n                          {claim.evaluation_comment}\n                        </span>\n                      </div>\n                    </div>\n                  </section>\n                )}\n              </section>\n            ))}\n          </div>\n        )}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!props.actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {props.actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.responseMsg}\n                onChange={(e) => {\n                  props.setResponseMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setResponseMsg(\"\");\n                  props.setActionTaken(null);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  socket,\n}: StoreState): {\n  auth: Auth;\n  socket: Socket;\n} => {\n  return {\n    auth: auth,\n    socket,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    evaluateClaim,\n    verifyDocument,\n    PushPopupAlert,\n    FC_CompleteClaim,\n  })(AdminClaimDocView)\n);\n","import React, { Component, Fragment } from \"react\";\nimport { MdArrowBack, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  FC_Access,\n  loadCourses,\n  PushPopupAlert,\n  Socket,\n} from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  getClaimReasons,\n  getAllAnswers,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  PlansTypeKeys,\n  ClaimDecisionStatus,\n  ClaimTypesInterface,\n  course,\n  ClaimStatus,\n  CandidateClaimTableInterface,\n  Events,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { getClaimById, whichClaimStatus, whichClaimType } from \"../Candidate\";\nimport { getCourseById, getCourseIdBySheetId } from \"../Candidate/FormExamList\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport AdminClaimAppView from \"./AdminClaimAppView\";\nimport AdminClaimDocView from \"./AdminClaimDocView\";\nimport AdminClaimExamView from \"./AdminClaimExamView\";\nimport AdminFilterByType, {\n  filterClaimsByClaimType,\n} from \"./AdminFilterByType\";\nimport searchData from \"../../../utils/search\";\nimport { ClaimReport } from \"./ClaimReport\";\nimport { IoBriefcase } from \"react-icons/io5\";\nimport { NavLink } from \"react-router-dom\";\nimport { IoIosDocument } from \"react-icons/io\";\nimport { HiOutlineDesktopComputer } from \"react-icons/hi\";\nimport { FaUserTie } from \"react-icons/fa\";\nimport { UserAccessList } from \"../../../utils/auth_access\";\n\nexport type FC_ClaimValidationSocketDataType = {\n  claim_id: string;\n  actionType: \"opened\" | \"closed\" | \"validated\";\n};\n\n// export const getUserDocuments = (\n//   userList: UserInterface[],\n//   user_id: String\n// ): { user: UserInterface; document: UserDocumentsInterface[] } | null => {\n//   const thisUser = userList.find((item) => item.user_id === user_id);\n//   if (thisUser) {\n//     const thisDoc = thisUser.details.filter(\n//       (item) => item.validation_status !== \"waiting\"\n//     );\n//     return { user: thisUser, document: thisDoc };\n//   }\n//   return null;\n// };\n\nexport const adminDisplayClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: UserDocumentsInterface[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = candidateDocuments.find(\n      (item) => item.doc_id === thisClaim.claiming_on_id\n    );\n    result = thisDoc\n      ? AdminClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n\n  return result;\n};\n\nexport const AdminClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: UserDocumentsInterface\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id &&\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    DocField = documentCategories.documentFields.filter(\n      (c) => c._id === doc.category_subcategory_data\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const getApplicationById = (\n  allApplications: allClaimApplicationInterface[] | null,\n  systemPositions: PositionAPI[] | null,\n  application_id: String\n): {\n  application: allClaimApplicationInterface;\n  position: PositionAPI;\n} | null => {\n  if (allApplications) {\n    let thisApplication = allApplications.find(\n      (item) => item._id === application_id\n    );\n    if (thisApplication && systemPositions) {\n      let thisPosition = systemPositions.find(\n        (item) => item.position_id === thisApplication!.position\n      );\n      if (thisPosition) {\n        return { application: thisApplication, position: thisPosition };\n      }\n    }\n  }\n  return null;\n};\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  courses: course[] | null;\n  loadCourses: Function;\n  getPositions: Function;\n  getClaimReasons: Function;\n  getAllApplications: Function;\n  getAllClaims: Function;\n  getAllAnswers: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  verifyAllDocument: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  socket: Socket;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingData: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  viewClaim: boolean;\n  periodChanged: boolean;\n  claimId: string | null;\n  claimType: string | null;\n  candidateId: string | null;\n  searchClaim: string;\n  selected_claim_type: PlansTypeKeys | undefined | null;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  actionTaken: ClaimDecisionStatus | null;\n  responseMsg: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  filterByStatus: \"all\" | ClaimStatus;\n  selected_title: string;\n  show_titles_filter: boolean;\n  search_title: string;\n  view_claim_report: boolean;\n  claim_level: 1 | 2;\n  choose_claim_type: boolean;\n\n  // SOCKET\n  openedClaim: string[];\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingData: false,\n      thisPeriod: null,\n      viewClaim: false,\n      periodChanged: false,\n      claimId: null,\n      claimType: null,\n      candidateId: null,\n      searchClaim: \"\",\n      filterByStatus: ClaimStatus.PENDING,\n      claim_level: 1,\n      selected_claim_type: null,\n      choose_claim_type: false,\n\n      // FOR FORM ================\n      viewImage: true,\n      loadingRequest: false,\n      actionTaken: null,\n      responseMsg: \"\",\n      formError: null,\n      selected_title: \"\",\n      show_titles_filter: false,\n      search_title: \"\",\n      view_claim_report: false,\n\n      // FOR SOCKET ========\n      openedClaim: [],\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingData = (value: boolean) => {\n    this.setState({ loadingData: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  // ------------------------------\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n  setClaimType = (value: string | null) => {\n    this.setState({ claimType: value });\n  };\n  setCandidateId = (value: string | null) => {\n    this.setState({ candidateId: value });\n  };\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setActionTaken = (value: ClaimDecisionStatus | null) => {\n    this.setState({ actionTaken: value });\n  };\n\n  setResponseMsg = (value: string) => {\n    this.setState({ responseMsg: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setDefaultSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      // this.loadsAllClaims(\n      //   thisSession ? thisSession : sessions[0],\n      //   this.state.claim_level,\n      //   this.state.selected_claim_type\n      // );\n    }\n  };\n\n  setSearchClaim = (value: string) => {\n    this.setState({ searchClaim: value });\n  };\n\n  loadsAllClaims = (\n    thisSession: SessionPlanInterface,\n    level: 1 | 2,\n    claim_type: PlansTypeKeys | undefined\n  ) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    console.log(\"====================================\");\n    console.log({ type: this.state.selected_claim_type });\n    console.log(\"====================================\");\n    this.props.getAllClaims(\n      level,\n      thisSession._id,\n      (status: boolean, msg: string) => {\n        this.setLoadingData(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      },\n      claim_type\n    );\n  };\n\n  loadsApplications = (application_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allApplications.find(\n        (item) => item._id === application_id\n      )\n    ) {\n      this.props.getAllApplications(\n        application_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsController = (file_id: string, claimType: PlansTypeKeys) => {\n    if (claimType === PlansTypeKeys.APPLICATION)\n      this.loadsApplications(file_id);\n    if (claimType === PlansTypeKeys.EXAMINATION) this.loadsAlAnswers(file_id);\n  };\n\n  loadsAlAnswers = (answersheet_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allAnswer.find(\n        (item) => item.answer_sheet_id === answersheet_id\n      )\n    ) {\n      this.props.getAllAnswers(\n        answersheet_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  componentDidMount = () => {\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              this.setDefaultSession(data);\n            }\n          }\n        }\n      );\n    } else if (this.props.application_sessions.length > 0) {\n      this.setDefaultSession(this.props.application_sessions);\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!this.props.documentReducer.documentSubCategory) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!this.props.documentReducer.documentFields) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    }\n\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n    if (FC_Access(this.props.auth, UserAccessList.CLAIM_VALIDATION_2).view) {\n      this.setState({ claim_level: 2 });\n    } else if (\n      FC_Access(this.props.auth, UserAccessList.CLAIM_VALIDATION).view\n    ) {\n      this.setState({ claim_level: 1 });\n    }\n\n    // SOCKET CONTROLLER ==========\n    this.props.socket.socket.on(\n      Events.CLAIMING_CHANGE_CLIENT,\n      (data: FC_ClaimValidationSocketDataType) => {\n        console.log(\n          \"=================DOCUMENT_VALIDATION_CLIENT===================\"\n        );\n        console.log({ data });\n        console.log(\n          \"=================DOCUMENT_VALIDATION_CLIENT===================\"\n        );\n\n        // your function or codes here\n        let opened_claims = [...this.state.openedClaim];\n        if (data.actionType === \"opened\") {\n          // if (data.previous !== null) {\n          //   opened_claims = opened_claims.filter(\n          //     (item) => item !== data.previous!\n          //   );\n          // }\n          opened_claims.push(data.claim_id);\n          console.log(\n            \"=================DOCUMENT_VALIDATION_CLIENT===================\"\n          );\n          console.log({\n            data,\n            opened_claims,\n            orginal: this.state.openedClaim,\n          });\n          console.log(\n            \"=================DOCUMENT_VALIDATION_CLIENT===================\"\n          );\n        } else if (data.actionType === \"closed\") {\n          opened_claims = opened_claims.filter(\n            (item) => item !== data.claim_id\n          );\n        } else if (data.actionType === \"validated\") {\n          opened_claims.push(data.claim_id);\n        }\n        this.setState({ openedClaim: opened_claims });\n      }\n    );\n  };\n\n  componentWillUnmount = () => {\n    this.props.socket.socket.off(Events.CLAIMING_CHANGE_CLIENT);\n  };\n\n  FC_SocketServeAction = (data: FC_ClaimValidationSocketDataType) => {\n    this.props.socket.socket.emit(Events.CLAIMING_CHANGE_SERVER, data);\n  };\n\n  displayClaimTitle = (\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      let thisDocs = thisClaim.user.details.filter(\n        (item) => item.validation_status !== \"waiting\"\n      );\n      result =\n        thisDocs.length > 0\n          ? adminDisplayClaimTitle(\n              this.props.documentReducer,\n              thisDocs,\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    if (\n      thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.allAnswer\n    ) {\n      let thisAnswer = getCourseIdBySheetId(\n        this.props.claiming.allAnswer,\n        thisClaim.claiming_on_id\n      );\n      if (thisAnswer && getCourseById(this.props.courses, thisAnswer.course)) {\n        result =\n          \"Exam of \" +\n          getCourseById(this.props.courses, thisAnswer.course)!.course_name;\n      } else {\n        result = \"Unknown exam\";\n      }\n    }\n\n    return result;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getAllClaims(\n      this.state.claim_level,\n      period_id,\n      (status: boolean, msg: string) => {\n        !status && this.setPeriodChanged(false);\n        this.setLoadingData(status);\n        if (status === false && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n  };\n\n  getLastClaimDate = (claim: CandidateClaimInterface): string => {\n    let result: string = DATE(claim.createdAt);\n    const claimsLength: number = claim.claims.length;\n    result = DATE(claim.claims[claimsLength - 1].createdAt);\n    return result;\n  };\n\n  DATA_TITLES = (DAT_ClaimByStatus: CandidateClaimInterface[]): string[] => {\n    let response: string[] = [];\n    for (const item of DAT_ClaimByStatus) {\n      if (response.find((itm) => itm === item.title) === undefined) {\n        response.push(item.title);\n      }\n    }\n    return response;\n  };\n\n  FindClaimsNumber = (\n    title: string,\n    DAT_ClaimByStatus: CandidateClaimInterface[]\n  ): number => {\n    let count = DAT_ClaimByStatus.filter((itm) => itm.title === title).length;\n    return count;\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (\n      this.state.selected_claim_type === null &&\n      this.state.thisPeriod !== null &&\n      (this.props.claiming.allClaims === null ||\n        this.state.choose_claim_type === true)\n    ) {\n      return (\n        <div className=\"min-w-screen h-screen fixed flex justify-center items-center inset-0 z-50\">\n          <div className=\"absolute bg-black opacity-80 inset-0 z-0\"></div>\n          <section className=\"max-w-3xl p-5 relative mx-auto my-auto rounded-md bg-gray-100 w-full group\">\n            <div className=\"w-full flex-col flex md:flex-row items-center justify-center\">\n              <div\n                className=\"bg-white rounded-3xl whitespace-nowrap p-2 shadow-sm m-3 cursor-pointer text-center hover:bg-blue-50 border-2 hover:border-blue-500\"\n                onClick={() => {\n                  this.setState({\n                    selected_claim_type: undefined,\n                    choose_claim_type: false,\n                  });\n                  this.loadsAllClaims(\n                    this.state.thisPeriod!,\n                    this.state.claim_level,\n                    undefined\n                  );\n                }}\n              >\n                <FaUserTie className=\"h-40 text-blue-600 rounded-2xl w-full object-cover\" />\n                <p className=\"mx-4 text-xl font-semibold text-gray-900 -mt-1\">\n                  {this.state.selected_claim_type === PlansTypeKeys.APPLICATION\n                    ? \"Claims For Applications\"\n                    : this.state.selected_claim_type ===\n                      PlansTypeKeys.DOCUMENT_VALIDATION\n                    ? \"Claims For Documents\"\n                    : this.state.selected_claim_type ===\n                      PlansTypeKeys.EXAMINATION\n                    ? \"Claims For Exams\"\n                    : \"All claims\"}\n                </p>\n              </div>\n\n              <div\n                className=\"bg-white rounded-3xl p-2 shadow-sm m-3 cursor-pointer text-center hover:bg-blue-50 border-2 hover:border-blue-500\"\n                onClick={() => {\n                  this.setState({\n                    selected_claim_type: PlansTypeKeys.APPLICATION,\n                    choose_claim_type: false,\n                  });\n                  this.loadsAllClaims(\n                    this.state.thisPeriod!,\n                    this.state.claim_level,\n                    PlansTypeKeys.APPLICATION\n                  );\n                }}\n              >\n                <IoBriefcase className=\"h-40 text-blue-600 rounded-2xl w-full object-cover\" />\n                <p className=\"mx-4 text-xl font-semibold text-gray-900 -mt-1\">\n                  Application\n                </p>\n              </div>\n\n              <div\n                className=\"bg-white rounded-3xl p-2 shadow-sm m-3 cursor-pointer text-center hover:bg-blue-50 border-2 hover:border-blue-500\"\n                onClick={() => {\n                  this.setState({\n                    selected_claim_type: PlansTypeKeys.DOCUMENT_VALIDATION,\n                    choose_claim_type: false,\n                  });\n                  this.loadsAllClaims(\n                    this.state.thisPeriod!,\n                    this.state.claim_level,\n                    PlansTypeKeys.DOCUMENT_VALIDATION\n                  );\n                }}\n              >\n                <IoIosDocument className=\"h-40 text-blue-600 rounded-2xl w-full object-cover\" />\n                <p className=\"mx-4 text-xl font-semibold text-gray-900 -mt-1\">\n                  Documents\n                </p>\n              </div>\n\n              <div\n                className=\"bg-white rounded-3xl p-2 shadow-sm m-3 cursor-pointer text-center hover:bg-blue-50 border-2 hover:border-blue-500\"\n                onClick={() => {\n                  this.setState({\n                    selected_claim_type: PlansTypeKeys.EXAMINATION,\n                    choose_claim_type: false,\n                  });\n                  this.loadsAllClaims(\n                    this.state.thisPeriod!,\n                    this.state.claim_level,\n                    PlansTypeKeys.EXAMINATION\n                  );\n                }}\n              >\n                <HiOutlineDesktopComputer className=\"h-40 text-blue-600 rounded-2xl w-full object-cover\" />\n                <p className=\"mx-4 text-xl font-semibold text-gray-900 -mt-1\">\n                  Examination\n                </p>\n              </div>\n            </div>\n\n            <div className=\"text-center text-sm -mb-3 mt-3\">\n              <NavLink\n                to=\"/apps-page\"\n                className=\"border border-rounded-md rounded bg-gray-100 border-gray-100 group-hover:bg-gray-50 group-hover:border-gray-400 px-2 py-1\"\n              >\n                Back to App\n              </NavLink>\n            </div>\n          </section>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.allClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    const DATA_ALL_CLAIM = this.props.claiming.allClaims.filter(\n      (item) => this.state.openedClaim.includes(item._id) === false\n    );\n    const DATA_ClaimByType = filterClaimsByClaimType(\n      DATA_ALL_CLAIM,\n      this.props.claiming.selectedClaimType\n    );\n\n    const DAT_ClaimByStatus =\n      this.state.filterByStatus !== \"all\"\n        ? DATA_ClaimByType.filter(\n            (item) => item.last_claim_status === this.state.filterByStatus\n          )\n        : DATA_ClaimByType;\n    const DATA_BY_TITLE = DAT_ClaimByStatus.filter(\n      (itm) =>\n        itm.title === this.state.selected_title ||\n        this.state.selected_title === \"\"\n    );\n\n    return (\n      <Fragment>\n        <div>\n          {/* SIDE NAVIGATION */}\n          {!this.state.viewClaim && (\n            <SideNavigation>\n              {/* FILTER SECTION */}\n              <div\n                onClick={() => this.setState({ view_claim_report: true })}\n                className=\"cursor-pointer text-center w-full font-bold px-3 py-2 rounded bg-green-600 text-white hover:bg-green-800\"\n              >\n                View report\n              </div>\n              <div\n                onClick={() =>\n                  this.setState({\n                    choose_claim_type: !this.state.choose_claim_type,\n                    selected_claim_type: null,\n                  })\n                }\n                className=\"cursor-pointer text-center w-full font-bold px-3 py-2 mt-2 rounded bg-gray-500 text-white hover:bg-gray-700\"\n              >\n                Claim type\n              </div>\n\n              <AdminFilterByType\n                loadingClaims={this.state.loadingData}\n                selected_claim_type={this.state.selected_claim_type}\n              />\n              {/* END FILTER SECTION */}\n            </SideNavigation>\n          )}\n          {/* END SIDE NAVIGATION */}\n\n          {/* 00000000000000000000000000000000000 */}\n\n          {/* CLAIM TITLE ===================================== */}\n          {!this.state.viewClaim && (\n            <ClaimHeaderTitle\n              headerTitle={`${\n                this.props.claiming.selectedClaimType === \"all\"\n                  ? \"All\"\n                  : this.props.claiming.selectedClaimType ===\n                    PlansTypeKeys.DOCUMENT_VALIDATION\n                  ? \"Documents\"\n                  : this.props.claiming.selectedClaimType ===\n                    PlansTypeKeys.APPLICATION\n                  ? \"Applications\"\n                  : this.props.claiming.selectedClaimType ===\n                    PlansTypeKeys.EXAMINATION\n                  ? \"Exam\"\n                  : this.props.claiming.selectedClaimType ===\n                    PlansTypeKeys.MARKS_PUBLICATION\n                  ? \"Marks publication\"\n                  : this.props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                  ? \"Placements\"\n                  : \"\"\n              } Claiming`}\n              loading={this.state.loadingData}\n              loadingSession={this.state.loading}\n              thisPeriod={this.state.thisPeriod}\n              setThisPeriod={this.setThisPeriod}\n              setLoadingSession={this.setLoadingData}\n              application_sessions={this.props.application_sessions}\n              onPeriodChange={this.onPeriodChange}\n              periodChanged={this.state.periodChanged}\n            />\n          )}\n          {/* END CLAIM TITLE ===================================== */}\n\n          {/* 00000000000000000000000000000000000 */}\n\n          {/* CLAIM CONTENT LIST ===================================== */}\n          {!this.state.viewClaim && (\n            <section className=\"bg-white w-full p-1\">\n              {/* FILTER FORM =================================== */}\n              <section className=\"flex flex-col sm:flex-row items-center gap-2 w-full my-2\">\n                <div className=\"w-full\">\n                  <input\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                      this.setSearchClaim(e.target.value)\n                    }\n                    type=\"search\"\n                    className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 \"\n                    placeholder={`Search claim by title or type`}\n                    value={this.state.searchClaim}\n                    disabled={\n                      this.state.loadingData ||\n                      (filterClaimsByClaimType(\n                        DATA_ALL_CLAIM,\n                        this.props.claiming.selectedClaimType\n                      ).length > 0\n                        ? false\n                        : true)\n                    }\n                  />\n                </div>\n                <div className=\"w-full\">\n                  <select\n                    className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                    placeholder={`Filter by status`}\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                      this.setState({\n                        filterByStatus: e.target.value as \"all\" | ClaimStatus,\n                      })\n                    }\n                    value={this.state.filterByStatus}\n                    disabled={this.state.loadingData}\n                  >\n                    <option value=\"\" disabled>\n                      Filter by status\n                    </option>\n                    <option value=\"all\">All Status</option>\n                    <option value=\"PENDING\">Pending</option>\n                    <option value=\"EVALUATED\">Evaluated</option>\n                  </select>\n                </div>\n                <div\n                  onClick={() =>\n                    this.state.loadingData === false &&\n                    this.setState({ show_titles_filter: true })\n                  }\n                  className=\"w-full border-2 border-gray-400 rounded px-3 py-2 text-sm cursor-pointer hover:bg-blue-100 hover:border-blue-600\"\n                >\n                  <span>\n                    {this.state.selected_title === \"\"\n                      ? \"Filter by claim type\"\n                      : this.state.selected_title}\n                  </span>\n                </div>\n                {/* <div className=\"flex items-center justify-end gap-2\">\n                  <div\n                    className={`rounded font-semibold px-3 py-2 whitespace-nowrap ${\n                      this.state.claim_level === 1\n                        ? \"cursor-default bg-blue-600 text-white\"\n                        : \"cursor-pointer bg-blue-100 text-blue-600 hover:bg-blue-200 hover:tex-blue-700\"\n                    }`}\n                    onClick={() => {\n                      this.state.loadingData === false &&\n                        this.setState({ claim_level: 1 });\n                      this.state.loadingData === false &&\n                        this.state.thisPeriod &&\n                        this.state.selected_claim_type &&\n                        this.loadsAllClaims(\n                          this.state.thisPeriod,\n                          1,\n                          this.state.selected_claim_type\n                        );\n                    }}\n                  >\n                    Level 1\n                  </div>\n                  <div\n                    className={`rounded font-semibold px-3 py-2 whitespace-nowrap ${\n                      this.state.claim_level === 2\n                        ? \"cursor-default bg-blue-600 text-white\"\n                        : \"cursor-pointer bg-blue-100 text-blue-600 hover:bg-blue-200 hover:tex-blue-700\"\n                    }`}\n                    onClick={() => {\n                      this.state.loadingData === false &&\n                        this.setState({ claim_level: 2 });\n                      this.state.loadingData === false &&\n                        this.state.thisPeriod &&\n                        this.state.selected_claim_type &&\n                        this.loadsAllClaims(\n                          this.state.thisPeriod,\n                          2,\n                          this.state.selected_claim_type\n                        );\n                    }}\n                  >\n                    Level 2\n                  </div>\n                </div> */}\n              </section>\n              {/* END FILTER FORM =================================== */}\n              <div className=\"w-full overflow-x-auto\">\n                <table className=\"w-full shadow\" id=\"report_content\">\n                  <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                    <tr>\n                      <td className=\"px-2 py-2\">#</td>\n                      <td className=\"px-2 py-2\">Applicant names</td>\n                      <td className=\"px-2 py-2\">Claim title</td>\n                      <td className=\"px-2 py-2\">Claim date</td>\n                      {this.props.claiming.selectedClaimType === \"all\" && (\n                        <td className=\"px-2 py-2\">Claim type</td>\n                      )}\n                      <td className=\"px-2 py-2\">Claim level</td>\n                      <td className=\"px-2 py-2\">Claim status</td>\n                      <td className=\"px-2 py-2\"></td>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {!DATA_ALL_CLAIM ||\n                    !this.props.claiming.claimTypes ||\n                    !this.props.systemPositions ||\n                    this.state.loadingData ? (\n                      <TableLoading\n                        cols={\n                          this.props.claiming.selectedClaimType === \"all\"\n                            ? 8\n                            : 7\n                        }\n                      />\n                    ) : searchData(DATA_BY_TITLE, this.state.searchClaim)\n                        .length <= 0 ? (\n                      <tr\n                        className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                        key={Math.random()}\n                      >\n                        <td className=\"px-3 py-1\" colSpan={8}>\n                          <NoResult\n                            theme={NoResultThemes.Light}\n                            value={\"No claim found!\"}\n                          />\n                        </td>\n                      </tr>\n                    ) : (\n                      (\n                        searchData(\n                          DATA_BY_TITLE.map((item) => ({\n                            claiming_on_id: item.claiming_on_id,\n                            type_key: item.type_key,\n                            period_id: item.period_id,\n                            last_claim_status: item.last_claim_status,\n                            default_claim_resaons: item.default_claim_resaons,\n                            claim_level: item.claim_level,\n                            claims: item.claims,\n                            createdAt: item.createdAt,\n                            updatedAt: item.updatedAt,\n                            _id: item._id,\n                            id: item.id,\n                            previous: item.previous,\n                            title: item.title,\n                            user: item.user,\n                            institute_id: item.institute_id,\n                            user_id: item.user._id,\n                            n_eduction: item.user.n_eduction,\n                            disability: item.user.disability,\n                            n_id: item.user.n_id,\n                            phone_number: item.user.phone_number,\n                            email: item.user.email,\n                            fname: item.user.user_info.fname,\n                            lname: item.user.user_info.lname,\n                            sex: item.user.user_info.sex,\n                            photo: item.user.user_info.photo,\n                            sector: item.user.user_info.sector,\n                            district: item.user.user_info.district,\n                            province: item.user.user_info.province,\n                          })),\n                          this.state.searchClaim\n                        ) as CandidateClaimTableInterface[]\n                      ).map((claim: CandidateClaimTableInterface, index) => (\n                        <tr\n                          className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                          key={index + claim._id}\n                          onClick={() => {\n                            this.setViewClaim(true);\n                            this.setClaimId(claim._id);\n                            this.setCandidateId(claim.user._id);\n                            this.setClaimType(\n                              whichClaimType(claim)\n                                ? whichClaimType(claim)!\n                                : null\n                            );\n                            this.loadsController(\n                              claim.claiming_on_id,\n                              claim.type_key\n                            );\n                            this.FC_SocketServeAction({\n                              claim_id: claim._id,\n                              actionType: \"opened\",\n                            });\n                          }}\n                        >\n                          <td className=\"px-3 py-1\">{index + 1}</td>\n                          <td className=\"px-3 py-1 whitespace-nowrap\">\n                            {claim.fname + \" \" + claim.lname}\n                          </td>\n                          <td className=\"px-3 py-1 whitespace-nowrap\">\n                            {claim.title}\n                          </td>\n                          <td className=\"px-3 py-1 whitespace-nowrap\">\n                            {this.getLastClaimDate(claim)}\n                          </td>\n                          {this.props.claiming.selectedClaimType === \"all\" && (\n                            <td className=\"px-3 py-1 whitespace-nowrap\">\n                              {whichClaimType(claim)\n                                ? capitalizeFirstLetter(whichClaimType(claim)!)\n                                : \"-\"}\n                            </td>\n                          )}\n                          <td className=\"px-3 py-1 whitespace-nowrap italic\">\n                            Level {claim.claim_level}\n                          </td>\n                          <td className=\"px-3 py-1 whitespace-nowrap\">\n                            <span\n                              className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                                whichClaimStatus(claim).classes\n                              }`}\n                            >\n                              {whichClaimStatus(claim).status}\n                            </span>\n                          </td>\n                          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                            <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                              View\n                            </button>\n                          </td>\n                        </tr>\n                      ))\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </section>\n          )}\n          {/* END CLAIM CONTENT LIST ===================================== */}\n\n          {/* 00000000000000000000000000000000000 */}\n\n          {/* view claim */}\n          {this.state.viewClaim &&\n            this.state.candidateId &&\n            DATA_ALL_CLAIM &&\n            this.state.claimId &&\n            getClaimById(DATA_ALL_CLAIM, this.state.claimId) &&\n            this.props.claiming.claimTypes && (\n              <section className=\"bg-white w-full my-4\">\n                {/* VIEW CLAIM HEADER =============================== */}\n                <section className=\"flex items-center gap-2 py-2 border-b\">\n                  <button\n                    className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                      this.state.loadingRequest\n                        ? \"cursor-not-allowed\"\n                        : \"cursor-pointer\"\n                    } animate__animated animate__fadeIn`}\n                    disabled={this.state.loadingRequest}\n                    onClick={() => {\n                      this.setViewClaim(false);\n                      this.setViewImage(true);\n                      this.setLoadingRequest(false);\n                      this.setActionTaken(null);\n                      this.setResponseMsg(\"\");\n                      this.setFormError(null);\n                      this.state.claimId &&\n                        this.FC_SocketServeAction({\n                          claim_id: this.state.claimId,\n                          actionType: \"closed\",\n                        });\n                    }}\n                  >\n                    <MdArrowBack className=\"w-7 h-7\" />\n                  </button>\n                  <div className={`text-gray-600 font-extrabold text-2xl px-2`}>\n                    Viewing claim\n                  </div>\n                </section>\n                {/* END VIEW CLAIM HEADER =============================== */}\n\n                {this.state.loading && (\n                  <div className=\"my-4\">\n                    <Loading />\n                  </div>\n                )}\n\n                {!this.state.loading && (\n                  <section className=\"bg-gray-200\">\n                    {/* FOR DOCUMENT ========================== */}\n                    {this.state.claimType &&\n                      this.state.claimType.toLocaleLowerCase() ===\n                        ClaimTypesInterface.DOCUMENT.toLocaleLowerCase() && (\n                        <div>\n                          {getClaimById(\n                            DATA_ALL_CLAIM!,\n                            this.state.claimId!\n                          )!.user.details.find(\n                            (item) =>\n                              item.doc_id ===\n                              getClaimById(\n                                DATA_ALL_CLAIM!,\n                                this.state.claimId!\n                              )!.claiming_on_id\n                          ) ? (\n                            <AdminClaimDocView\n                              thisDoc={\n                                getClaimById(\n                                  DATA_ALL_CLAIM!,\n                                  this.state.claimId!\n                                )!.user.details.find(\n                                  (item) =>\n                                    item.doc_id ===\n                                    getClaimById(\n                                      DATA_ALL_CLAIM!,\n                                      this.state.claimId!\n                                    )!.claiming_on_id\n                                )!\n                              }\n                              documentCategories={this.props.documentReducer}\n                              thisClaim={\n                                getClaimById(\n                                  DATA_ALL_CLAIM,\n                                  this.state.claimId\n                                )!\n                              }\n                              claimTypes={this.props.claiming.claimTypes}\n                              viewImage={this.state.viewImage}\n                              setViewImage={this.setViewImage}\n                              loadingRequest={this.state.loadingRequest}\n                              setLoadingRequest={this.setLoadingRequest}\n                              actionTaken={this.state.actionTaken}\n                              setActionTaken={this.setActionTaken}\n                              responseMsg={this.state.responseMsg}\n                              setResponseMsg={this.setResponseMsg}\n                              formError={this.state.formError}\n                              setFormError={this.setFormError}\n                              candidateId={this.state.candidateId}\n                              claimReasons={this.props.claiming.claimReasons}\n                            />\n                          ) : (\n                            <NoResult\n                              theme={NoResultThemes.Dark}\n                              value={\"Document not found\"}\n                            />\n                          )}\n                        </div>\n                      )}\n\n                    {/* FOR APPLICATION ========================== */}\n                    {this.state.claimType &&\n                      this.state.claimType.toLocaleLowerCase() ===\n                        ClaimTypesInterface.APPLICATION.toLocaleLowerCase() && (\n                        <div>\n                          {getApplicationById(\n                            this.props.claiming.allApplications,\n                            this.props.systemPositions,\n                            getClaimById(DATA_ALL_CLAIM, this.state.claimId)!\n                              .claiming_on_id\n                          ) ? (\n                            this.props.systemPositions && (\n                              <AdminClaimAppView\n                                thisApplication={\n                                  getApplicationById(\n                                    this.props.claiming.allApplications,\n                                    this.props.systemPositions,\n                                    getClaimById(\n                                      DATA_ALL_CLAIM,\n                                      this.state.claimId\n                                    )!.claiming_on_id\n                                  )!.application\n                                }\n                                thisPosition={\n                                  getApplicationById(\n                                    this.props.claiming.allApplications,\n                                    this.props.systemPositions,\n                                    getClaimById(\n                                      DATA_ALL_CLAIM,\n                                      this.state.claimId\n                                    )!.claiming_on_id\n                                  )!.position\n                                }\n                                documentCategories={this.props.documentReducer}\n                                thisClaim={\n                                  getClaimById(\n                                    DATA_ALL_CLAIM,\n                                    this.state.claimId\n                                  )!\n                                }\n                                claimTypes={this.props.claiming.claimTypes}\n                                systemPositions={this.props.systemPositions}\n                                claimReasons={this.props.claiming.claimReasons}\n                                close={() => {\n                                  this.setViewClaim(false);\n                                  this.setViewImage(true);\n                                  this.setLoadingRequest(false);\n                                  this.setActionTaken(null);\n                                  this.setResponseMsg(\"\");\n                                  this.setFormError(null);\n                                  this.state.claimId &&\n                                    this.FC_SocketServeAction({\n                                      claim_id: this.state.claimId,\n                                      actionType: \"closed\",\n                                    });\n                                }}\n                              />\n                            )\n                          ) : (\n                            <NoResult\n                              theme={NoResultThemes.Dark}\n                              value={\"Application not found\"}\n                            />\n                          )}\n                        </div>\n                      )}\n\n                    {/* FOR EXAMINATION ========================== */}\n                    {this.state.claimType &&\n                      this.state.claimType.toLocaleLowerCase() ===\n                        ClaimTypesInterface.EXAMINATION.toLocaleLowerCase() && (\n                        <div>\n                          {this.props.claiming.allAnswer &&\n                          this.props.courses &&\n                          getCourseIdBySheetId(\n                            this.props.claiming.allAnswer,\n                            getClaimById(DATA_ALL_CLAIM, this.state.claimId)!\n                              .claiming_on_id\n                          ) &&\n                          getCourseById(\n                            this.props.courses,\n                            getCourseIdBySheetId(\n                              this.props.claiming.allAnswer,\n                              getClaimById(DATA_ALL_CLAIM, this.state.claimId)!\n                                .claiming_on_id\n                            )!.course\n                          ) ? (\n                            <AdminClaimExamView\n                              thisExamSheet={\n                                getCourseIdBySheetId(\n                                  this.props.claiming.allAnswer,\n                                  getClaimById(\n                                    DATA_ALL_CLAIM,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!\n                              }\n                              thisExam={\n                                getCourseById(\n                                  this.props.courses,\n                                  getCourseIdBySheetId(\n                                    this.props.claiming.allAnswer,\n                                    getClaimById(\n                                      DATA_ALL_CLAIM,\n                                      this.state.claimId\n                                    )!.claiming_on_id\n                                  )!.course\n                                )!\n                              }\n                              thisClaim={\n                                getClaimById(\n                                  DATA_ALL_CLAIM,\n                                  this.state.claimId\n                                )!\n                              }\n                              claimTypes={this.props.claiming.claimTypes}\n                              claimReasons={this.props.claiming.claimReasons}\n                            />\n                          ) : (\n                            <NoResult\n                              theme={NoResultThemes.Dark}\n                              value={\"Exam not found\"}\n                            />\n                          )}\n                        </div>\n                      )}\n                  </section>\n                )}\n              </section>\n            )}\n          {/* end view claim */}\n        </div>\n        {/* Filter by titles */}\n        {this.state.show_titles_filter === true && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ show_titles_filter: false })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{\n              title: true,\n              body: false,\n              footer: undefined,\n            }}\n            title={<div>Filter by claiming type</div>}\n          >\n            <div className=\"min-h-screen\">\n              <div className=\"flex flex-row items-center w-full py-3 bg-gray-100 px-3 gap-2\">\n                <div\n                  onClick={() =>\n                    this.setState({\n                      selected_title: \"\",\n                      show_titles_filter: false,\n                    })\n                  }\n                  className=\"bg-blue-100 font-bold text-center hover:bg-blue-600 text-blue-600 hover:text-white rounded px-3 py-2 cursor-pointer w-24\"\n                >\n                  View all\n                </div>\n                <div className=\"w-full\">\n                  <input\n                    placeholder=\"Search by keywords...\"\n                    value={this.state.search_title}\n                    onChange={(e) =>\n                      this.setState({ search_title: e.target.value })\n                    }\n                    className=\"input-white h-10 text-sm border-2 bg-white border-gray-400 focus:border-gray-500 w-full\"\n                  />\n                </div>\n              </div>\n              <div className=\"p-4\">\n                {(\n                  searchData(\n                    this.DATA_TITLES(DAT_ClaimByStatus).map((title) => ({\n                      title: title,\n                    })),\n                    this.state.search_title.toString()\n                  ) as { title: string }[]\n                ).map((item, i) => (\n                  <div\n                    onClick={() =>\n                      this.setState({\n                        selected_title: item.title,\n                        show_titles_filter: false,\n                      })\n                    }\n                    className={`border rounded group p-1 mb-1 ${\n                      this.state.selected_title === item.title\n                        ? \"mb-1 border-blue-600 bg-blue-100\"\n                        : \"border-gray-200 hover:border-blue-600 hover:bg-blue-100\"\n                    } cursor-pointer`}\n                  >\n                    <div className=\"flex flex-row items-center justify-between gap-2\">\n                      <div className=\"flex flex-row items-center gap-2\">\n                        <div>\n                          <div\n                            className={`flex items-center justify-center p-1 rounded-full border-4 ${\n                              this.state.selected_title === item.title\n                                ? \"bg-blue-200 text-blue-700 border-blue-600\"\n                                : \"border-gray-200 bg-gray-100 group-hover:bg-blue-200 group-hover:text-blue-700 group-hover:border-blue-600\"\n                            } h-10 w-10 font-bold`}\n                          >\n                            {i + 1}\n                          </div>\n                        </div>\n                        <div\n                          className={`${\n                            this.state.selected_title === item.title\n                              ? \"text-blue-700\"\n                              : \"text-gray-500\"\n                          } group-hover:text-blue-600 font-bold`}\n                        >\n                          {item.title}\n                        </div>\n                      </div>\n                      <div className=\"font-bold\">\n                        ({this.FindClaimsNumber(item.title, DAT_ClaimByStatus)})\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </Modal>\n        )}\n        {this.state.view_claim_report === true && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ view_claim_report: false })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{\n              title: true,\n              body: false,\n              footer: undefined,\n            }}\n            title={<div className=\"uppercase\">Claiming report preview</div>}\n          >\n            <ClaimReport />\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n  socket,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n  socket: Socket;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    courses: course.courses,\n    socket,\n  };\n};\n\nexport const AdminClaim = connect(mapStateToProps, {\n  getAllClaims,\n  loadCourses,\n  getAllAnswers,\n  getClaimReasons,\n  getAllApplications,\n  GetAllSessionPlans,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  getPositions,\n  PushPopupAlert,\n})(Index);\n"],"sourceRoot":""}
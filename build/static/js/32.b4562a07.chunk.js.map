{"version":3,"sources":["containers/ProfileDetails/EditProfileDetails.tsx","containers/ProfileDetails/Profile.tsx","containers/ProfileDetails/DocumentDetails.tsx","components/EditUserDocument/EditUserDocument.tsx","components/ChangePassword/ChangePassword.tsx","containers/ProfileDetails/DocumensList.tsx","components/PrintCV/PrintCV.tsx","containers/ProfileDetails/ProfileDetails.tsx","components/Table/Table.tsx","actions/session.ts","actions/document.ts","components/Navigation/SideNavigation.tsx","containers/Claimings/Candidate/FormPlacementList.tsx","containers/Claimings/Candidate/ClaimForm.tsx","containers/Positions/ViewRequirements.tsx","containers/Claimings/Candidate/FormExamList.tsx","containers/Claimings/Candidate/ApplicationFormView.tsx","containers/Claimings/Candidate/ExaminationFormView.tsx","containers/Claimings/Candidate/ChooseReason.tsx","containers/Claimings/Candidate/DocFormView.tsx","containers/Claimings/Candidate/FormApplicationList.tsx","containers/Claimings/Candidate/FormDocumentList.tsx","containers/SessionSettings/ApplicationSession/SessionDetails.tsx","assets/profile.png","components/ClaimForm/ClaimFormComponent.tsx"],"names":["ErrorTarget","Profile","user","changePassword","editProfile","access_name","district_name","school_name","fname","lname","father_names","mother_names","sex","date_of_birth","place_of_birth","country_of_birth","district","email","n_id","phone_number","province","civil_status","village","cell","sector","residence","className","onClick","src","ProfileImage","alt","length","province_name","sector_name","DocumentDetails","doc","category","sub_category","close","categories","sub_categories","Delete","Update","useState","openClaim","setOpenClaim","selectedCat","selectedSubCat","getCat","find","itm","user_detail_category_id","category_id","undefined","sub_category_id","getSubCat","user_detail_subcategory_id","isImage","files","img_type_list","split","img_type","IMAGES_TYPES","includes","Modal","widthSizeClass","ModalSize","extraLarge","backDrop","backDropClose","displayClose","theme","Themes","default","title","padding","body","footer","API","AUTH_FILES","rel","href","target","validation_status","category_subcategory_data","school","DocumentStatus","Approved","doc_id","ClaimFormComponent","claim_type","PlansTypeKeys","DOCUMENT_VALIDATION","file_id","setFormState","description","company","names","start_year","end_year","year","education_category_id","education_category_title","district_id","ErrorType","_EditProfileDetails","props","handleChange","e","setState","state","error","none","msg","currentTarget","name","value","componentDidMount","FC_getLocations","success","locations","all_locations","loading_location","console","log","main__error","openProvinceModal","select_province","openDistrictModal","select_district","openSectorModal","select_sector","updateAccountHandler","preventDefault","validateEmail","loading","FC_UpdateProfile","user_id","auth","province_id","sector_id","status","main_success","districts","provinces","sectors","medium","onSubmit","this","htmlFor","type","placeholder","onChange","disabled","required","readOnly","FormSelectCustom","click","data","province_code","id","district_code","filter","sector_code","React","Component","EditProfileDetails","connect","_EditUserDocument","document","submitHandler","userDocument","fields_access","fields","map","toLowerCase","FC_EditUserDocument","main_error","inputChangeHandler","Alert","AlertInterface","danger","EditUserDocument","_ChangePassword","uppercase","hasUppercase","lowercase","hasLowercase","special","hasSpecialcase","number","hasNumber","PASSWORD_MIN_LENGTH","PASSWORD_MAX_LENGTH","old_password","password_validation","new_password","re_new_password","FC_ChangePassword","ValidationDesign","ChangePassword","DocumentsList","documents","selected_category","selected_sub_category","selectDoc","addNewDoc","documents_list","i","category_itm","sub_category_itm","colorBackground","colorBorder","Waiting","Rejected","PrintCV","documentTypes","style","width","sub_cat_check","EDUCATION_CATEGORY_ID","sub_cat","cat","sub_categories_list","_ProfileDetails","CvRef","FC_GetProfileDetails","User_access","FC_Access","UserAccessList","do_exam","categoryHandler","subCategoryHandler","selectDocHandler","selected_doc","editDocHandler","edit_doc","addNewDocHandler","prevState","create_new_doc","deleteDocHandler","window","confirm","FC_DeleteDocument","updateDocHandler","update_doc","changePasswordHadler","updateProfileHandler","updateProfile","sideNavHandler","side_nav","openCB_Toogle","printCV","createRef","document_types","category_with_counts","count","SideNavigation","active","AddUserDocument","user_access","role","PureComponent","ProfileDetails","Table","table","tr","tableId","result","characters","charactersLength","charAt","Math","floor","random","FC_makeID","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","pagination","tablePagination","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","display","tableSize","search","searchBG","filterType","td","rows","cols","columns","textContent","innerText","indexOf","filterTable","Number","tableClass","rounded","hideColumns","thColor","column","index","alignText","isSortAllowed","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","GetPlansTypes","callback","dispatch","a","setAxiosToken","axios","get","CLAIMING","res","GET_PLANS_TYPES","plan_types","ActionTypes","payload","errorToText","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","is_active","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","createAcademicSession","CREATE_ACADEMIC_SESSION","GetAllAcademicSession","PLACEMENT","GET_ALL_ACADEMIC_SESSION","updateAcademicSession","UPDATE_ACADEMIC_SESSION","academicSessionActivation","ACADEMIC_SESSION_ACTIVATION","deleteAcademicSession","DELETE_ACADEMIC_SESSION","getActiveAcademicSession","GET_ACTIVE_ACADEMIC_SESSION","getDocumentCategory","AUTH","docCategory","GET_DOCUMENT_CATEGORY","createDocumentCategory","CREATE_DOCUMENT_CATEGORY","updateDocumentCategory","UPDATE_DOCUMENT_CATEGORY","deleteDocumentCategory","DELETE_DOCUMENT_CATEGORY","getDocumentSubCategory","docSubCategory","GET_DOCUMENT_SUB_CATEGORY","doc_SUB_category_error","createDocumentSubCategory","CREATE_DOCUMENT_SUB_CATEGORY","updateDocumentSubCategory","UPDATE_DOCUMENT_SUB_CATEGORY","deleteDocumentSubCategory","DELETE_DOCUMENT_SUB_CATEGORY","getDocumentFields","docFields","GET_DOCUMENT_FIELDS","createDocumentFields","CREATE_DOCUMENT_FIELDS","updateDocumentFields","reducer","UPDATE_DOCUMENT_FIELDS","deleteDocumentFields","DELETE_DOCUMENT_FIELDS","distinctCandidates","candidatesData","user_ids","candidate","forEach","push","getCandidatesInInstitute","educatin_type_id","session_id","APPLICATION","GET_CANDIDATE_IN_INSTITUTE","verifyDocument","VERIFY_DOCUMENT","_SideNavigation","PageHasSubNav","componentWillUnmount","isAuthenticated","navActive","system","navigation","children","NavToogle","MainItem","icon","MdBrightness1","IconDefined","searchInput","setSearchInput","myPlacement","isClaimAllowed","myClaims","activeSession","session_plan_id","placed","_id","setChooseClaimFile","setViewThisFile","setClaimFileId","ClaimGetDocTitle","documentCategories","DocCategory","DocSubCategory","DocField","DocTitle","documentSubCategory","c","documentCategory","category_subcategory_Data_id","documentFields","field","main","allClaim","period_id","claimOnId","item","claiming_on_id","ClaimForm","setLoading","setLoadingForm","loadingForm","setFormError","formError","setAlertError","alertError","claimFileId","viewThisFile","chooseClaimFile","setChooseClaimReason","chooseClaimReason","setClaimReason","claimReason","setClaimComment","claimComment","isClaimTypeOpen","thisSession","plans","type_key","isPlanActive","PLACEMENT_TRANSFER","displayClaimType","claimType","EXAMINATION","MARKS_PUBLICATION","loadExamAnswers","activeSessionPlan","getMyAnswers","PushPopupAlert","PopupAlertTheme","application_session","thisClaimType","thisClaimTypeId","formType","documentReducer","claiming","claimReasons","getClaimReasons","getDocumentById","getApplicationById","applications","application_id","getExamById","exams","answer_sheet_id","getValidation","thisId","old_reason","old_status","old_evaluated_by","candidateDocuments","validated_by","comment","candidateApplications","override_by","application_status","cleanToClose","response","loadUserById","isEmptyOrSpaces","getClaimTitle","position","position_title","courses","myAnswer","getCourseIdBySheetId","getCourseById","course","course_name","getClaimInstitute","education_institute_id","handleSubmit","element","toLocaleLowerCase","old_evaluator_email","old_evaluator_name","evaluator_email","evaluator_name","institute_id","user_info","post","default_claim_resaons","reason","createClaim","selectClaimType","thisClaim","getMyRejectedApplications","loadCourses","getMyRejectedDocuments","getMyPlacement","generateChooseFileTitle","formState","Object","values","capitalizeFirstLetter","replace","FormDocumentList","FormApplicationList","FormExamList","candidateAnswers","ChooseReason","allClaimReasons","resize","DocFormView","thisDoc","ApplicationFormView","thisApplication","ExaminationFormView","thisAnswerSheet","getMyClaims","GetClaimingTypes","ViewRequirements","requirements","colSpan","subcategory_title","field_id","field_title","subcategory_required","getFailedExam","allData","allCourses","total_marks","course_id","sheet_id","FC_ApplicationPositionDistinctCategory","thisPosition","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","req","thisRequirements","thisCategory","thisSubCategory","thisField","position_requirement","category_subcategory_data_id","category_title","subcategory_id","DATE","createdAt","ApplicationStates","dangerouslySetInnerHTML","__html","school_level_id","school_level_name","course_code","NoResultThemes","Dark","claimShowAnswer","answer","discription","termes","rules","right_click_enabled","copy_enabled","paste_enabled","stop_candidate_when_comeback","allow_to_leave_browser","period","exam_date","showAnswers","exam_id","toString","getRejectedApplicants","applicationData","objList","text","product","flag","prop","DocumentTitleData","documentData","documentTemp","school_id","doc_title","getRejectedDocuments","rejected","isActivationAllowed","thisPlans","today","Date","end_date","getTime","getPlanTypeByKey","allPlanTypes","viewThisSession","thisPlan","planEndDate","planStartDate","start_date","type_status","SessionPlanTypeStatus","CLOSED","SessionDetails","handlePlanActivation","session","newState","key","warning","newData","session_plan_name","updatedAt","prototype","hasOwnProperty","call","OPEN","type_id","type_title","allowed_claim_level","history","loadingRequest","put","setViewThisSession","info","isDocumentIdValid","alert","isApplicationIdValid","app_id","app","isExamIdValid","exam","_isApplicationIdValid","_isDocumentIdValid","_isExamIdValid","getClaimById","fileId","sessionId","claims","evaluation_comment","decision_taken_status"],"mappings":"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","file":"static/js/32.b4562a07.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  DistrictLocationItem,\n  FC_getLocations,\n  LocationAPI,\n  ProvinceLocationItem,\n  SectorLocationItem,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { validateEmail } from \"../../utils/validation\";\nimport {\n  FC_UpdateProfile,\n  FC_UpdateProfile_Interface,\n} from \"../../actions/auth\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport FormSelectCustom from \"../../components/FormSelectCustom/FormSelectCustom\";\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  close: Function;\n  FC_UpdateProfile: Function;\n}\nenum ErrorTarget {\n  email,\n  phone_number,\n  main__error,\n  main_success,\n  none,\n  province_name,\n  district_name,\n  sector_name,\n}\ninterface AppState {\n  loading: boolean;\n  error: {\n    target: ErrorTarget;\n    msg: string;\n  };\n  all_locations: LocationAPI;\n  phone_number: string;\n  email: string;\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  sector_id: string;\n  sector_name: string;\n  loading_location: boolean;\n  select_province: boolean;\n  select_district: boolean;\n  select_sector: boolean;\n}\n\nclass _EditProfileDetails extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loading_location: false,\n      error: {\n        target: ErrorTarget.none,\n        msg: \"\",\n      },\n      all_locations: {\n        districts: [],\n        provinces: [],\n        sectors: [],\n      },\n      phone_number: this.props.auth.user.phone_number,\n      email: this.props.auth.user.email,\n      province_id: this.props.auth.user.residence?.province_id,\n      province_name: this.props.auth.user.residence?.province_name,\n      district_id: this.props.auth.user.residence?.district_id,\n      district_name: this.props.auth.user.residence?.district_name,\n      sector_id: this.props.auth.user.residence?.sector_id,\n      sector_name: this.props.auth.user.residence?.sector_name,\n      // modals\n      select_province: false,\n      select_district: false,\n      select_sector: false,\n    };\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    this.setState({\n      ...this.state,\n      error: {\n        target: ErrorTarget.none,\n        msg: \"\",\n      },\n      [e.currentTarget.name]: e.target.value,\n    } as Pick<AppState, keyof AppState>);\n  };\n\n  componentDidMount = () => {\n    FC_getLocations((success, locations, msg) => {\n      if (success === true && locations !== null) {\n        this.setState({\n          all_locations: locations,\n          loading_location: false,\n        });\n        console.log({ locations });\n      } else {\n        this.setState({\n          loading_location: false,\n          error: {\n            target: ErrorTarget.main__error,\n            msg: msg,\n          },\n        });\n      }\n    });\n  };\n\n  openProvinceModal = () => {\n    this.setState({\n      select_province: !this.state.select_province,\n    });\n  };\n\n  openDistrictModal = () => {\n    this.setState({\n      select_district: !this.state.select_district,\n    });\n  };\n\n  openSectorModal = () => {\n    this.setState({\n      select_sector: !this.state.select_sector,\n    });\n  };\n\n  updateAccountHandler = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (this.state.email.length <= 4 || !validateEmail(this.state.email)) {\n      return this.setState({\n        error: {\n          target: ErrorTarget.email,\n          msg: \"Please enter a email\",\n        },\n      });\n    }\n\n    // check for errors\n    if (this.state.phone_number.length <= 4) {\n      return this.setState({\n        error: {\n          target: ErrorTarget.phone_number,\n          msg: \"Phone number is required\",\n        },\n      });\n    }\n\n    if (this.state.province_name.length <= 4) {\n      return this.setState({\n        error: {\n          target: ErrorTarget.province_name,\n          msg: \"Please select a province\",\n        },\n      });\n    }\n\n    if (this.state.district_name.length <= 4) {\n      return this.setState({\n        error: {\n          target: ErrorTarget.district_name,\n          msg: \"Please select a district\",\n        },\n      });\n    }\n\n    if (this.state.sector_name.length <= 4) {\n      return this.setState({\n        error: {\n          target: ErrorTarget.sector_name,\n          msg: \"Please select a sector\",\n        },\n      });\n    }\n\n    this.setState({\n      loading: true,\n      error: {\n        target: ErrorTarget.none,\n        msg: \"\",\n      },\n    });\n\n    this.props.FC_UpdateProfile(\n      {\n        email: this.state.email,\n        phone_number: this.state.phone_number,\n        user_id: this.props.auth.user.user_id,\n        residence: {\n          province_id: this.state.province_id,\n          province_name: this.state.province_name,\n          district_id: this.state.district_id,\n          district_name: this.state.district_name,\n          sector_id: this.state.sector_id,\n          sector_name: this.state.sector_name,\n        },\n      } as FC_UpdateProfile_Interface,\n      (status: boolean, msg: string) => {\n        if (status === true) {\n          this.setState({\n            loading: false,\n            error: {\n              target: ErrorTarget.main_success,\n              msg: \"Your profile details updated successfully\",\n            },\n          });\n        } else {\n          this.setState({\n            loading: false,\n            error: {\n              target: ErrorTarget.main__error,\n              msg: msg,\n            },\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <Modal\n          widthSizeClass={ModalSize.medium}\n          backDrop={true}\n          backDropClose={false}\n          close={() => this.props.close()}\n          displayClose={true}\n          theme={Themes.default}\n          title={\n            <label className=\"text-2xl m-0 text-bold text-gray-700\">\n              Edit profile\n            </label>\n          }\n          padding={{ body: true, footer: true, title: true }}\n        >\n          <div className=\"-mt-3\">\n            <div className=\"p-1 rounded-md text-gray-500 text-sm\">\n              You can only update the Email and the phone number, other info are\n              poulled from NIDA database\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-b-md \">\n            <form onSubmit={this.updateAccountHandler}>\n              {this.state.error.target === ErrorTarget.main_success && (\n                <div className=\"p-2 m-2 text-center rounded-md bg-green-200 text-green-700 animate__zoomIn animate__animated\">\n                  {this.state.error.msg}\n                </div>\n              )}\n\n              {this.state.error.target === ErrorTarget.main__error && (\n                <div className=\"p-2 m-2 text-center rounded-md bg-red-200 text-red-700 animate__zoomIn animate__animated\">\n                  {this.state.error.msg}\n                </div>\n              )}\n\n              <div className=\"mt-2\">\n                <div className=\"p-2 \">\n                  <label htmlFor=\"title\" className=\"d-block\">\n                    Email\n                  </label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={this.state.email}\n                    className={`font-bold input-white w-20 inline-block  ${\n                      this.state.error?.target === ErrorTarget.email\n                        ? \"border-red-500 border-2\"\n                        : \"border-gray-500 border-2\"\n                    }`}\n                    placeholder=\"myemail@email.com\"\n                    onChange={this.handleChange}\n                    disabled={this.state.loading}\n                    required\n                  />\n                  {this.state.error?.target === ErrorTarget.email && (\n                    <span className=\"text-red-600\">\n                      {this.state.error?.msg}\n                    </span>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"mt-2\">\n                <div className=\"p-2 \">\n                  <label htmlFor=\"title\" className=\"d-block\">\n                    Phone number\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"phone_number\"\n                    value={this.state.phone_number}\n                    className={`font-bold input-white w-20 inline-block  ${\n                      this.state.error?.target === ErrorTarget.phone_number\n                        ? \"border-red-500 border-2\"\n                        : \"border-gray-500 border-2\"\n                    }`}\n                    placeholder=\"0700000000\"\n                    onChange={this.handleChange}\n                    disabled={this.state.loading}\n                    required\n                  />\n                  {this.state.error?.target === ErrorTarget.phone_number && (\n                    <span className=\"text-red-600\">\n                      {this.state.error?.msg}\n                    </span>\n                  )}\n                </div>\n              </div>\n\n              {this.state.loading_location === true ? (\n                <div className=\"p-5 bg-gray-300 text-center text-xl\">\n                  <span className=\"animate__animated animate__fadeIn animate__infinite\">\n                    Loading...\n                  </span>\n                </div>\n              ) : (\n                <div className=\"p-2 bg-gray-100 rounded\">\n                  <div className=\"\">\n                    <div className=\"text-xl text-gray-700 font-bold mx-2\">\n                      Residence information\n                    </div>\n                    <div className=\"p-2 \">\n                      <label htmlFor=\"title\" className=\"d-block\">\n                        Province\n                      </label>\n                      {this.state.select_province === false ? (\n                        <input\n                          type=\"text\"\n                          readOnly\n                          value={this.state.province_name}\n                          className={`font-bold input-white w-20 inline-block  ${\n                            this.state.error?.target ===\n                            ErrorTarget.province_name\n                              ? \"border-red-500 border-2\"\n                              : \"border-gray-500 border-2\"\n                          }`}\n                          // placeholder=\"Select province\"\n                          onClick={this.openProvinceModal}\n                          // required\n                        />\n                      ) : (\n                        <FormSelectCustom\n                          click={(data: ProvinceLocationItem) => {\n                            this.setState({\n                              select_province: false,\n                              province_name: data.province_name,\n                              province_id: data.province_code,\n                              district_id: \"\",\n                              district_name: \"\",\n                              sector_name: \"\",\n                              sector_id: \"\",\n                              select_sector: false,\n                              select_district: false,\n                            });\n                          }}\n                          data={this.state.all_locations.provinces}\n                          close={() => {\n                            this.setState({\n                              select_province: false,\n                            });\n                          }}\n                          id=\"province_code\"\n                          title=\"province_name\"\n                          loading={this.state.loading_location}\n                        />\n                      )}\n                      {this.state.error?.target ===\n                        ErrorTarget.province_name && (\n                        <span className=\"text-red-600\">\n                          {this.state.error?.msg}\n                        </span>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"p-2 \">\n                    <label htmlFor=\"title\" className=\"d-block\">\n                      District\n                    </label>\n                    {this.state.select_district === false ? (\n                      <input\n                        type=\"text\"\n                        readOnly\n                        value={this.state.district_name}\n                        className={`font-bold input-white w-20 inline-block  ${\n                          this.state.error?.target === ErrorTarget.district_name\n                            ? \"border-red-500 border-2\"\n                            : \"border-gray-500 border-2\"\n                        }`}\n                        placeholder=\"\"\n                        onClick={this.openDistrictModal}\n                        disabled={\n                          this.state.province_name === \"\" ? true : false\n                        }\n                        required\n                      />\n                    ) : (\n                      <FormSelectCustom\n                        click={(data: DistrictLocationItem) => {\n                          this.setState({\n                            select_district: false,\n                            district_name: data.district_name,\n                            district_id: data.district_code,\n                            sector_name: \"\",\n                            sector_id: \"\",\n                            select_sector: false,\n                            select_province: false,\n                          });\n                        }}\n                        data={this.state.all_locations.districts.filter(\n                          (itm) => itm.province_code === this.state.province_id\n                        )}\n                        close={() => {\n                          this.setState({\n                            select_district: false,\n                          });\n                        }}\n                        id=\"district_code\"\n                        title=\"district_name\"\n                        loading={this.state.loading_location}\n                      />\n                    )}\n                    {this.state.error?.target === ErrorTarget.district_name && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n\n                  <div className=\"p-2 \">\n                    <label htmlFor=\"title\" className=\"d-block\">\n                      Sector\n                    </label>\n                    {this.state.select_sector === false ? (\n                      <input\n                        type=\"text\"\n                        readOnly\n                        value={this.state.sector_name}\n                        className={`font-bold input-white w-20 inline-block  ${\n                          this.state.error?.target === ErrorTarget.sector_name\n                            ? \"border-red-500 border-2\"\n                            : \"border-gray-500 border-2\"\n                        }`}\n                        placeholder=\"\"\n                        onClick={this.openSectorModal}\n                        disabled={\n                          this.state.district_name === \"\" ? true : false\n                        }\n                        required\n                      />\n                    ) : (\n                      <FormSelectCustom\n                        click={(data: SectorLocationItem) => {\n                          this.setState({\n                            select_sector: false,\n                            sector_name: data.sector_name,\n                            sector_id: data.sector_code,\n                            select_province: false,\n                            select_district: false,\n                          });\n                        }}\n                        data={this.state.all_locations.sectors.filter(\n                          (itm) => itm.district_code === this.state.district_id\n                        )}\n                        close={() => {\n                          this.setState({\n                            select_sector: false,\n                          });\n                        }}\n                        id=\"sector_code\"\n                        title=\"sector_name\"\n                        loading={this.state.loading_location}\n                      />\n                    )}\n                    {this.state.error?.target === ErrorTarget.sector_name && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n                </div>\n              )}\n\n              <div className=\"p-2\">\n                <button\n                  className=\"py-2 font-bold  px-8 rounded bg-hero text-white inline-block\"\n                  disabled={this.state.loading}\n                  type=\"submit\"\n                >\n                  {this.state.loading === true ? (\n                    <b className=\"animate__animated animate__fadeIn animate__infinite\">\n                      Updating profile...\n                    </b>\n                  ) : (\n                    \"Update profile\"\n                  )}\n                </button>\n              </div>\n            </form>\n          </div>\n        </Modal>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const EditProfileDetails = connect(mapStateToProps, {\n  FC_UpdateProfile,\n})(_EditProfileDetails);\n","import React, { FC, Fragment, ReactElement } from \"react\";\nimport { MdLock, MdModeEdit } from \"react-icons/md\";\nimport ProfileImage from \"../../assets/profile.png\";\nimport { CandidateInterface } from \"../../interfaces\";\ntype ProfileProps = {\n  user: CandidateInterface;\n  changePassword: Function;\n  editProfile: Function;\n  access_name: string;\n  district_name: string;\n  school_name: string;\n};\n\nconst Profile: FC<ProfileProps> = ({\n  user,\n  changePassword,\n  editProfile,\n  access_name,\n  district_name,\n  school_name,\n}): ReactElement => {\n  const {\n    fname,\n    lname,\n    father_names,\n    mother_names,\n    sex,\n    date_of_birth,\n    place_of_birth,\n    country_of_birth,\n    district,\n    email,\n    n_id,\n    phone_number,\n    province,\n    civil_status,\n    // photo,\n    village,\n    cell,\n    sector,\n    residence,\n  } = user;\n  return (\n    <Fragment>\n      <div className=\" bg-blue-200 p-3 h-20 rounded-t z-0 flex flex-col lg:items-center items-end lg:flex-row-reverse\">\n        <button\n          onClick={() => editProfile()}\n          className=\"py-1 px-2 rounded-md bg-blue-500 lg:mb-0 mb-1 text-white hover:bg-blue-600 hover:text-white  mx-1\"\n        >\n          <MdModeEdit className=\"inline-block mr-2\" />\n          Edit profile\n        </button>\n        <button\n          className=\"py-1 px-2 rounded-md bg-blue-500 text-white hover:bg-blue-600 hover:text-white mr-1\"\n          onClick={() => changePassword()}\n        >\n          <MdLock className=\"inline-block mr-2\" />\n          Change password\n        </button>\n      </div>\n      <div className=\"bg-red-3000 h-0 p-3 -mt-5 rounded-t flex items-center z-0\">\n        <img\n          src={ProfileImage}\n          alt=\"Profile\"\n          className=\"w-24 h-24 object-cover  shadow-lg   rounded-md border-2 border-gray-500-- border-blue-400\"\n        />\n        <section className=\"pl-2 pt-8 mt-10\">\n          <h1 className=\" text-2xl font-bold text-gray-600\">\n            {fname} {lname}\n          </h1>\n          <span className=\"inline-block px-2 bg-yellow-300 rounded-full\">\n            {access_name}\n          </span>\n        </section>\n      </div>\n      <div className=\"bg-white p-3 rounded-b -mt-1- pt-12 shadow\">\n        <div className=\"grid lg:grid-cols-2 gap-4 mt-3 border-t pt-2 px-2\">\n          {district_name.length > 0 && (\n            <div className=\"mb-2 flex flex-col border-b py-1\">\n              <i className=\"text-gray-400 \">Email:</i>{\" \"}\n              <b className=\"text-lg\">\n                {access_name} on {district_name} district\n              </b>\n            </div>\n          )}\n\n          {school_name.length > 0 && (\n            <div className=\"mb-2 flex flex-col border-b py-1\">\n              <i className=\"text-gray-400 \">Email:</i>{\" \"}\n              <b className=\"text-lg\">\n                {access_name} of {school_name}\n              </b>\n            </div>\n          )}\n\n          {email.length > 0 && (\n            <div className=\"mb-2 flex flex-col border-b py-1\">\n              <i className=\"text-gray-400 \">Email:</i>{\" \"}\n              <b className=\"text-lg\">{email}</b>\n            </div>\n          )}\n\n          {phone_number.length > 0 && (\n            <div className=\"mb-2 flex flex-col border-b py-1\">\n              <i className=\"text-gray-400 \">Phone number:</i>{\" \"}\n              <b className=\"text-lg\">{phone_number}</b>\n            </div>\n          )}\n        </div>\n        <div className=\"grid lg:grid-cols-2 gap-4 mt-3 pt-2 px-2\">\n          <div className=\"\">\n            <div className=\"hover:bg-blue-100\"></div>\n\n            {n_id.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">NID:</i>{\" \"}\n                <b className=\"text-lg\">{n_id}</b>\n              </div>\n            )}\n\n            {fname.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">First name:</i>{\" \"}\n                <b className=\"text-lg\">{fname}</b>\n              </div>\n            )}\n\n            {lname.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">Last name:</i>{\" \"}\n                <b className=\"text-lg\">{lname}</b>\n              </div>\n            )}\n\n            {father_names.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">Father's name:</i>{\" \"}\n                <b className=\"text-lg\">{father_names}</b>\n              </div>\n            )}\n\n            {mother_names.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">Mother's name:</i>{\" \"}\n                <b className=\"text-lg\">{mother_names}</b>\n              </div>\n            )}\n\n            {sex.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">Sex:</i>{\" \"}\n                <b className=\"text-lg\">{sex}</b>\n              </div>\n            )}\n\n            {date_of_birth.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">DOB:</i>{\" \"}\n                <b className=\"text-lg\">{date_of_birth}</b>\n              </div>\n            )}\n          </div>\n          <div className=\"\">\n            <div className=\"bg-gray-50 p-2 rounded my-2\">\n              {residence?.province_name.length > 0 && (\n                <div className=\"mb-2 flex flex-col border-b py-1\">\n                  <i className=\"text-gray-400 \">Residence Province:</i>{\" \"}\n                  <b className=\"text-lg\">{residence?.province_name}</b>\n                </div>\n              )}\n              {residence?.district_name.length > 0 && (\n                <div className=\"mb-2 flex flex-col border-b py-1\">\n                  <i className=\"text-gray-400 \">Residence District:</i>{\" \"}\n                  <b className=\"text-lg\">{residence?.district_name}</b>\n                </div>\n              )}\n              {residence?.sector_name.length > 0 && (\n                <div className=\"mb-2 flex flex-col border-b py-1\">\n                  <i className=\"text-gray-400 \">Residence Sector:</i>{\" \"}\n                  <b className=\"text-lg\">{residence?.sector_name}</b>\n                </div>\n              )}\n            </div>\n\n            {district.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">District:</i>{\" \"}\n                <b className=\"text-lg\">{district}</b>\n              </div>\n            )}\n\n            {village.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">Village:</i>{\" \"}\n                <b className=\"text-lg\">{village}</b>\n              </div>\n            )}\n\n            {cell.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">cell:</i>{\" \"}\n                <b className=\"text-lg\">{cell}</b>\n              </div>\n            )}\n\n            {sector.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">Sector:</i>{\" \"}\n                <b className=\"text-lg\">{sector}</b>\n              </div>\n            )}\n\n            {province.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">province:</i>{\" \"}\n                <b className=\"text-lg\">{province}</b>\n              </div>\n            )}\n\n            {civil_status.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">Civil status:</i>{\" \"}\n                <b className=\"text-lg\">{civil_status}</b>\n              </div>\n            )}\n\n            {place_of_birth.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">Place of birth:</i>{\" \"}\n                <b className=\"text-lg\">{place_of_birth}</b>\n              </div>\n            )}\n            {country_of_birth.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">Country of birth:</i>{\" \"}\n                <b className=\"text-lg\">{country_of_birth}</b>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\nexport default Profile;\n","import React, { FC, ReactElement, useState } from \"react\";\nimport { MdDelete, MdError, MdModeEdit } from \"react-icons/md\";\nimport ClaimFormComponent from \"../../components/ClaimForm/ClaimFormComponent\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport {\n  DocumentUser,\n  DocumentSubCategories,\n  DocumentsCategories,\n  DocumentStatus,\n  PlansTypeKeys,\n} from \"../../interfaces\";\nimport { API } from \"../../utils/api\";\nimport { IMAGES_TYPES } from \"../../utils/app.config\";\ntype DocumentDetailsProps = {\n  doc: DocumentUser;\n  category: DocumentsCategories | null;\n  sub_category: DocumentSubCategories | null;\n  categories: DocumentsCategories[];\n  sub_categories: DocumentSubCategories[];\n  close: Function;\n  Delete: Function;\n  Update: Function;\n};\n\nconst DocumentDetails: FC<DocumentDetailsProps> = ({\n  doc,\n  category,\n  sub_category,\n  close,\n  categories,\n  sub_categories,\n  Delete,\n  Update,\n}): ReactElement => {\n  const [openClaim, setOpenClaim] = useState(false);\n  //  get selected category\n  let selectedCat = category;\n  let selectedSubCat = sub_category;\n  if (category === null) {\n    let getCat = categories.find(\n      (itm) => itm.user_detail_category_id === doc.category_id\n    );\n    selectedCat = getCat === undefined ? null : getCat;\n  }\n\n  if (\n    sub_category === null &&\n    doc.sub_category_id !== undefined &&\n    doc.sub_category_id.length >= 1\n  ) {\n    let getSubCat = sub_categories.find(\n      (itm) => itm.user_detail_subcategory_id === doc.sub_category_id\n    );\n    selectedSubCat = getSubCat === undefined ? null : getSubCat;\n  }\n  let isImage = false;\n  if (\n    doc.files !== undefined &&\n    doc?.files !== null &&\n    doc?.files?.length > 1\n  ) {\n    let img_type_list = doc.files.split(\".\");\n    let img_type = img_type_list[img_type_list.length - 1];\n\n    if (IMAGES_TYPES.includes(img_type)) {\n      isImage = true;\n    }\n  }\n\n  return (\n    <>\n      <Modal\n        widthSizeClass={ModalSize.extraLarge}\n        backDrop={true}\n        backDropClose={false}\n        close={() => close()}\n        displayClose={true}\n        theme={Themes.default}\n        title={\n          <label className=\"text-xl m-0 text-bold text-gray-700\">\n            {selectedCat?.title}{\" \"}\n            {selectedSubCat !== null && \" - \" + selectedSubCat.title}\n          </label>\n        }\n        padding={{ body: true, footer: true, title: true }}\n      >\n        {doc.files !== undefined &&\n          doc.files !== null &&\n          doc?.files?.length > 1 && (\n            <>\n              {isImage === true ? (\n                <div className=\"bg-gray-900 w-full p-1\">\n                  <img\n                    src={API.AUTH_FILES + doc.files}\n                    alt=\"Document file details\"\n                    className=\"w-full rounded\"\n                  />\n                </div>\n              ) : (\n                <div className=\"p-8 bg-gray-700 text-center\">\n                  <a\n                    className=\"p-2 bg-blue-500 text-white rounded\"\n                    rel=\"noreferrer\"\n                    href={API.AUTH_FILES + doc.files}\n                    target=\"_blank\"\n                  >\n                    Open document\n                  </a>\n                </div>\n              )}\n            </>\n          )}\n        <div className=\"p-3 \">\n          <div className=\"flex\">\n            <div className=\"flex-1\">\n              {doc.validation_status !== undefined &&\n                doc?.files?.length >= 4 && (\n                  <span className=\"text-sm bg-yellow-200 py-0.5 px-2 rounded-full text-yellow-800\">\n                    {doc?.validation_status}\n                  </span>\n                )}\n              <h2 className=\"text-xl mt-1 mb-4 font-bold text-blue-800\">\n                <span className=\"font-thin text-blue-600\">\n                  {\" \"}\n                  {selectedCat?.title}\n                </span>{\" \"}\n                {doc.category_subcategory_data?.title}\n                {doc.title && \" - \" + doc.title}\n              </h2>\n            </div>\n\n            <div className=\"ml-1\">\n              {doc.school === null && doc.category_subcategory_data === null && (\n                <button\n                  onClick={() => Update(doc as DocumentUser)}\n                  className=\"py-1 rounded px-3 text-sm mb-1 block w-full bg-blue-200 hover:bg-blue-300 text-blue-800\"\n                >\n                  <MdModeEdit className=\"inline-block\" />\n                  Edit\n                </button>\n              )}\n            </div>\n            <div className=\"ml-1 \">\n              {doc.validation_status !== DocumentStatus.Approved && (\n                <>\n                  {openClaim === false && (\n                    <button\n                      onClick={() => {\n                        Delete(doc.doc_id);\n                        close();\n                      }}\n                      className=\"py-1 rounded px-3 text-sm mb-1 block w-full bg-red-200 hover:bg-red-300 text-red-800\"\n                    >\n                      <MdDelete className=\"inline-block\" /> Delete\n                    </button>\n                  )}\n\n                  <button\n                    onClick={() => setOpenClaim(!openClaim)}\n                    className=\"py-1 rounded px-3 text-sm mb-1 block w-full bg-gray-200 hover:bg-gray-300 text-gray-800\"\n                  >\n                    <MdError className=\"inline-block\" />{\" \"}\n                    {openClaim === true ? \"Close claim\" : \"Claim\"}\n                  </button>\n                </>\n              )}\n            </div>\n          </div>\n\n          {openClaim === true ? (\n            <div className=\"p-2\">\n              <ClaimFormComponent\n                claim_type={PlansTypeKeys.DOCUMENT_VALIDATION}\n                file_id={doc.doc_id}\n                setFormState={() => setOpenClaim(false)}\n              />\n            </div>\n          ) : (\n            <div className=\"\">\n              {doc.description.length >= 1 && (\n                <div className=\"mb-2 py-1 border-b pb-3 border-gray-200\">\n                  <label className=\"block text-gray-500 text-sm\">\n                    Description:\n                  </label>\n                  <span className=\"\">{doc.description}</span>\n                </div>\n              )}\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                {selectedCat !== null && (\n                  <div className=\"mb-2 py-1 border-b border-gray-200\">\n                    <label className=\"block text-gray-500 text-sm\">\n                      Category:\n                    </label>\n                    <b>{selectedCat.title}</b>\n                  </div>\n                )}\n                {selectedSubCat !== null && (\n                  <div className=\"mb-2 py-1 border-b border-gray-200\">\n                    <label className=\"block text-gray-500 text-sm\">\n                      Sub category:\n                    </label>\n                    <b>{selectedSubCat.title}</b>\n                  </div>\n                )}\n\n                {doc.company !== undefined && doc.company.length >= 1 && (\n                  <div className=\"mb-2 py-1 border-b border-gray-200\">\n                    <label className=\"block text-gray-500 text-sm\">\n                      Company:\n                    </label>\n                    <b>{doc.company}</b>\n                  </div>\n                )}\n                {doc.names !== undefined && doc.names.length >= 1 && (\n                  <div className=\"mb-2 py-1 border-b border-gray-200\">\n                    <label className=\"block text-gray-500 text-sm\">\n                      Names:\n                    </label>\n                    <b>{doc.names}</b>\n                  </div>\n                )}\n                {doc.email !== undefined && doc.email.length >= 1 && (\n                  <div className=\"mb-2 py-1 border-b border-gray-200\">\n                    <label className=\"block text-gray-500 text-sm\">\n                      Email:\n                    </label>\n                    <b>{doc.email}</b>\n                  </div>\n                )}\n                {doc.phone_number !== undefined &&\n                  doc.phone_number.length >= 1 && (\n                    <div className=\"mb-2 py-1 border-b border-gray-200\">\n                      <label className=\"block text-gray-500 text-sm\">\n                        Phone Number:\n                      </label>\n                      <b>{doc.phone_number}</b>\n                    </div>\n                  )}\n                {doc.start_year !== undefined && doc.start_year.length >= 1 && (\n                  <div className=\"mb-2 py-1 border-b border-gray-200\">\n                    <label className=\"block text-gray-500 text-sm\">\n                      Start Year:\n                    </label>\n                    <b>{doc.start_year}</b>\n                  </div>\n                )}\n                {doc.end_year !== undefined && doc.end_year.length >= 1 && (\n                  <div className=\"mb-2 py-1 border-b border-gray-200\">\n                    <label className=\"block text-gray-500 text-sm\">\n                      End Year:\n                    </label>\n                    <b>{doc.end_year}</b>\n                  </div>\n                )}\n                {doc.year !== undefined && doc.year.length >= 1 && (\n                  <div className=\"mb-2 py-1 border-b border-gray-200\">\n                    <label className=\"block text-gray-500 text-sm\">Year:</label>\n                    <b>{doc.year}</b>\n                  </div>\n                )}\n\n                {doc.category_subcategory_data !== undefined &&\n                  doc.category_subcategory_data !== null && (\n                    <div className=\"mb-2 py-1 border-b border-gray-200\">\n                      <b>{doc.category_subcategory_data.title}</b>\n                      <label className=\"block text-gray-500 text-sm\">\n                        {doc.category_subcategory_data.description}\n                      </label>\n                    </div>\n                  )}\n\n                {doc.school !== undefined && doc.school !== null && (\n                  <div className=\"mb-2 py-1 border-b border-gray-200\">\n                    <label className=\"block text-gray-500 text-sm\">\n                      School\n                    </label>\n                    <b>{doc.school.school_name}</b>\n\n                    {doc.school.education_category_id\n                      ?.education_category_title && (\n                      <i className=\"block\">\n                        {\n                          doc.school.education_category_id\n                            ?.education_category_title\n                        }\n                      </i>\n                    )}\n\n                    {doc.school.district_id?.district_name && (\n                      <span className=\"block\">\n                        District: <b>{doc.school.district_id?.district_name}</b>{\" \"}\n                      </span>\n                    )}\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      </Modal>\n    </>\n  );\n};\nexport default DocumentDetails;\n","import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, FC_EditUserDocument } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { DocumentsCategories, DocumentUser } from \"../../interfaces\";\nimport Alert, { AlertInterface } from \"../../components/Alert/Alert\";\nimport Modal, { ModalSize, Themes } from \"../Modal/Modal\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  categories: DocumentsCategories[];\n  document: DocumentUser;\n  close: Function;\n  FC_EditUserDocument: Function;\n}\nenum ErrorType {\n  title,\n  company,\n  description,\n  email,\n  end_year,\n  files,\n  names,\n  phone_number,\n  school,\n  start_year,\n  sub_category_id,\n  main_error,\n  main_success,\n  none,\n  year,\n}\ninterface AppState {\n  loading: boolean;\n  document: DocumentUser;\n  category: DocumentsCategories | null;\n  error: {\n    target: ErrorType;\n    msg: string;\n  };\n  success: boolean;\n  title: string;\n  description: string;\n  company: string;\n  email: string;\n  end_year: string;\n  names: string;\n  phone_number: string;\n  school: string;\n  start_year: string;\n  year: string;\n}\n\nclass _EditUserDocument extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      success: false,\n      category: null,\n      error: {\n        target: ErrorType.none,\n        msg: \"\",\n      },\n      document: this.props.document,\n      title: \"\",\n      description: \"\",\n      email: \"\",\n      end_year: \"\",\n      names: \"\",\n      phone_number: \"\",\n      school: \"\",\n      start_year: \"\",\n      year: \"\",\n      company: \"\",\n    };\n  }\n\n  componentDidMount = () => {\n    if (this.props.categories.length <= 0 || this.props.document === null) {\n      this.setState({\n        error: {\n          target: ErrorType.none,\n          msg: \"The document selected does not have a category\",\n        },\n      });\n    } else {\n      const category = this.props.categories.find(\n        (itm) => itm.user_detail_category_id === this.props.document.category_id\n      );\n      if (category === undefined) {\n        this.setState({\n          error: {\n            target: ErrorType.none,\n            msg: \"The document selected does not have a category\",\n          },\n        });\n      } else {\n        this.setState({\n          category: category,\n          title: this.props.document.title,\n          description: this.props.document.description,\n          email: this.props.document.email,\n          end_year: this.props.document.end_year,\n          names: this.props.document.names,\n          phone_number: this.props.document.phone_number,\n          school: \"\",\n          start_year: this.props.document.start_year,\n          year: this.props.document.year,\n          company: this.props.document.company,\n        });\n      }\n    }\n  };\n\n  submitHandler = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    this.setState({\n      error: {\n        target: ErrorType.none,\n        msg: \"\",\n      },\n    });\n    let userDocument = {\n      ...this.props.document,\n      title: this.state.title,\n      description: this.state.description,\n      email: this.state.email,\n      end_year: this.state.end_year,\n      names: this.state.names,\n      phone_number: this.state.phone_number,\n      start_year: this.state.start_year,\n      year: this.state.year,\n      company: this.state.company,\n    } as DocumentUser;\n\n    const fields_access =\n      this.state.category?.fields === undefined\n        ? []\n        : this.state.category?.fields.map((name) => name.toLowerCase());\n\n    // title\n    if (fields_access.includes(\"title\") === true) {\n      if (this.state.title.length <= 0) {\n        return this.setState({\n          error: {\n            target: ErrorType.title,\n            msg: \"Please add the title\",\n          },\n        });\n      }\n    }\n\n    // description\n    if (fields_access.includes(\"description\") === true) {\n      if (this.state.description.length <= 0) {\n        return this.setState({\n          error: {\n            target: ErrorType.description,\n            msg: \"Please add the description\",\n          },\n        });\n      }\n    }\n\n    // school\n    if (fields_access.includes(\"school\") === true) {\n      if (this.state.school.length <= 0) {\n        return this.setState({\n          error: {\n            target: ErrorType.school,\n            msg: \"Please add the school\",\n          },\n        });\n      }\n    }\n\n    // email\n    if (fields_access.includes(\"email\") === true) {\n      if (this.state.email.length <= 0) {\n        return this.setState({\n          error: {\n            target: ErrorType.email,\n            msg: \"Please add the email\",\n          },\n        });\n      }\n    }\n\n    // names\n    if (fields_access.includes(\"names\") === true) {\n      if (this.state.names.length <= 0) {\n        return this.setState({\n          error: {\n            target: ErrorType.names,\n            msg: \"Please add the names\",\n          },\n        });\n      }\n    }\n\n    // phone_number\n    if (fields_access.includes(\"phone_number\") === true) {\n      if (this.state.phone_number.length <= 0) {\n        return this.setState({\n          error: {\n            target: ErrorType.phone_number,\n            msg: \"Please add the phone_number\",\n          },\n        });\n      }\n    }\n\n    // company\n    if (fields_access.includes(\"company\") === true) {\n      if (this.state.company.length <= 0) {\n        return this.setState({\n          error: {\n            target: ErrorType.company,\n            msg: \"Please add the company\",\n          },\n        });\n      }\n    }\n\n    // year\n    if (fields_access.includes(\"year\") === true) {\n      if (this.state.year.length <= 0) {\n        return this.setState({\n          error: {\n            target: ErrorType.year,\n            msg: \"Please add the year\",\n          },\n        });\n      }\n    }\n\n    // start_year\n    if (fields_access.includes(\"start_year\") === true) {\n      if (this.state.start_year.length <= 0) {\n        return this.setState({\n          error: {\n            target: ErrorType.start_year,\n            msg: \"Please add the start_year\",\n          },\n        });\n      }\n    }\n\n    // end_year\n    if (fields_access.includes(\"end_year\") === true) {\n      if (this.state.end_year.length <= 0) {\n        return this.setState({\n          error: {\n            target: ErrorType.end_year,\n            msg: \"Please add the end_year\",\n          },\n        });\n      }\n    }\n\n    this.setState({\n      loading: true,\n    });\n    // send the data\n    this.props.FC_EditUserDocument(\n      userDocument,\n      this.props.auth.user.user_id,\n      (status: boolean, msg: string) => {\n        if (status === true) {\n          this.setState({\n            loading: false,\n            success: true,\n          });\n        } else {\n          this.setState({\n            loading: false,\n            error: {\n              target: ErrorType.main_error,\n              msg: msg,\n            },\n          });\n        }\n      }\n    );\n  };\n\n  inputChangeHandler = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    this.setState({\n      ...this.state,\n      error: {\n        target: ErrorType.none,\n        msg: \"\",\n      },\n      [e.currentTarget.name]: e.target.value,\n    } as Pick<AppState, keyof AppState>);\n  };\n\n  render() {\n    let fields_access: string[] =\n      this.state.category?.fields === undefined\n        ? []\n        : this.state.category?.fields.map((name) => name.toLowerCase());\n\n    return (\n      <Fragment>\n        <Modal\n          widthSizeClass={ModalSize.medium}\n          backDrop={true}\n          backDropClose={false}\n          close={() => this.props.close()}\n          displayClose={true}\n          theme={Themes.default}\n          title={\n            <label className=\"text-xl m-0 text-bold text-gray-700\">\n              Update document\n            </label>\n          }\n          padding={{ body: true, footer: true, title: true }}\n        >\n          <div className=\"p-2\">\n            {this.state.error.target === ErrorType.main_error && (\n              <Alert\n                theme={AlertInterface.danger}\n                title={this.state.error.msg}\n              />\n            )}\n\n            {this.state.error.target === ErrorType.main_success && (\n              <Alert\n                theme={AlertInterface.success}\n                title={this.state.error.msg}\n              />\n            )}\n\n            {this.state.success === true && (\n              <Alert\n                theme={AlertInterface.success}\n                title={\"Details updated successfully\"}\n              />\n            )}\n\n            <div className=\"mt-1\">\n              <div className=\"p-2\">\n                <label htmlFor=\"title\" className=\"d-block\">\n                  Category\n                </label>\n\n                <div className=\"input-white w-20 inline-block border-gray-300 border-2 font-bold bg-blue-200\">\n                  {this.state.category?.title}\n                </div>\n              </div>\n            </div>\n            <form onSubmit={this.submitHandler}>\n              <div className=\"bg-white\">\n                {fields_access.includes(\"category_subcategory_data\") ===\n                  true && (\n                  <div className=\"p-2\">\n                    <label htmlFor=\"title\" className=\"d-block\">\n                      Title\n                    </label>\n                    <input\n                      value={\n                        this.props.document.category_subcategory_data?.title\n                      }\n                      type=\"text\"\n                      name=\"title\"\n                      // onChange={}\n                      className={`input-white w-20 inline-block  ${\n                        this.state.error?.target === ErrorType.title\n                          ? \"border-red-500 border-2\"\n                          : \"border-gray-500 border-2\"\n                      }`}\n                      placeholder=\"Enter the title\"\n                      disabled={true}\n                      readOnly\n                    />\n                    {this.state.error?.target === ErrorType.title && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n                )}\n\n                {fields_access.includes(\"school\") === true && (\n                  <div className=\"p-2\">\n                    <label htmlFor=\"title\" className=\"d-block\">\n                      Title\n                    </label>\n                    <input\n                      value={this.props.document.school?.school_name}\n                      type=\"text\"\n                      name=\"title\"\n                      // onChange={}\n                      className={`input-white w-20 inline-block  ${\n                        this.state.error?.target === ErrorType.title\n                          ? \"border-red-500 border-2\"\n                          : \"border-gray-500 border-2\"\n                      }`}\n                      placeholder=\"Enter the title\"\n                      disabled={true}\n                      readOnly\n                    />\n                    {this.state.error?.target === ErrorType.title && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n                )}\n\n                {fields_access.includes(\"title\") === true && (\n                  <div className=\"p-2\">\n                    <label htmlFor=\"title\" className=\"d-block\">\n                      Title\n                    </label>\n                    <input\n                      value={this.state.title}\n                      type=\"text\"\n                      name=\"title\"\n                      onChange={this.inputChangeHandler}\n                      className={`input-white w-20 inline-block  ${\n                        this.state.error?.target === ErrorType.title\n                          ? \"border-red-500 border-2\"\n                          : \"border-gray-500 border-2\"\n                      }`}\n                      placeholder=\"Enter the title\"\n                      disabled={this.state.loading}\n                    />\n                    {this.state.error?.target === ErrorType.title && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n                )}\n\n                {fields_access.includes(\"description\") === true && (\n                  <div className=\"p-2\">\n                    <label htmlFor=\"description\" className=\"d-block\">\n                      Description\n                    </label>\n                    <input\n                      value={this.state.description}\n                      type=\"text\"\n                      name=\"description\"\n                      onChange={this.inputChangeHandler}\n                      className={`input-white w-20 inline-block  ${\n                        this.state.error?.target === ErrorType.description\n                          ? \"border-red-500 border-2\"\n                          : \"border-gray-500 border-2\"\n                      }`}\n                      placeholder=\"Enter the description\"\n                      disabled={this.state.loading}\n                    />\n                    {this.state.error?.target === ErrorType.description && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n                )}\n\n                {fields_access.includes(\"email\") === true && (\n                  <div className=\"p-2\">\n                    <label htmlFor=\"email\" className=\"d-block\">\n                      Email\n                    </label>\n                    <input\n                      value={this.state.email}\n                      type=\"text\"\n                      name=\"email\"\n                      onChange={this.inputChangeHandler}\n                      className={`input-white w-20 inline-block  ${\n                        this.state.error?.target === ErrorType.email\n                          ? \"border-red-500 border-2\"\n                          : \"border-gray-500 border-2\"\n                      }`}\n                      placeholder=\"Your email\"\n                      disabled={this.state.loading}\n                    />\n                    {this.state.error?.target === ErrorType.email && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n                )}\n\n                {fields_access.includes(\"names\") === true && (\n                  <div className=\"p-2\">\n                    <label htmlFor=\"names\" className=\"d-block\">\n                      Names\n                    </label>\n                    <input\n                      value={this.state.names}\n                      type=\"text\"\n                      name=\"names\"\n                      onChange={this.inputChangeHandler}\n                      className={`input-white w-20 inline-block  ${\n                        this.state.error?.target === ErrorType.names\n                          ? \"border-red-500 border-2\"\n                          : \"border-gray-500 border-2\"\n                      }`}\n                      placeholder=\"Your names\"\n                      disabled={this.state.loading}\n                    />\n                    {this.state.error?.target === ErrorType.names && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n                )}\n\n                {fields_access.includes(\"phone_number\") === true && (\n                  <div className=\"p-2\">\n                    <label htmlFor=\"phone_number\" className=\"d-block\">\n                      Phone number\n                    </label>\n                    <input\n                      value={this.state.phone_number}\n                      type=\"text\"\n                      name=\"phone_number\"\n                      onChange={this.inputChangeHandler}\n                      className={`input-white w-20 inline-block  ${\n                        this.state.error?.target === ErrorType.phone_number\n                          ? \"border-red-500 border-2\"\n                          : \"border-gray-500 border-2\"\n                      }`}\n                      placeholder=\"Your phone_number\"\n                      disabled={this.state.loading}\n                    />\n                    {this.state.error?.target === ErrorType.phone_number && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n                )}\n\n                {fields_access.includes(\"company\") === true && (\n                  <div className=\"p-2\">\n                    <label htmlFor=\"company\" className=\"d-block\">\n                      Company\n                    </label>\n                    <input\n                      value={this.state.company}\n                      type=\"text\"\n                      name=\"company\"\n                      onChange={this.inputChangeHandler}\n                      className={`input-white w-20 inline-block  ${\n                        this.state.error?.target === ErrorType.company\n                          ? \"border-red-500 border-2\"\n                          : \"border-gray-500 border-2\"\n                      }`}\n                      placeholder=\"Company name\"\n                      disabled={this.state.loading}\n                    />\n                    {this.state.error?.target === ErrorType.company && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n                )}\n\n                {fields_access.includes(\"year\") === true && (\n                  <div className=\"p-2\">\n                    <label htmlFor=\"year\" className=\"d-block\">\n                      Year\n                    </label>\n                    <input\n                      value={this.state.year}\n                      type=\"date\"\n                      name=\"year\"\n                      onChange={this.inputChangeHandler}\n                      className={`input-white w-20 inline-block  ${\n                        this.state.error?.target === ErrorType.year\n                          ? \"border-red-500 border-2\"\n                          : \"border-gray-500 border-2\"\n                      }`}\n                      placeholder=\"year\"\n                      disabled={this.state.loading}\n                    />\n                    {this.state.error?.target === ErrorType.year && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n                )}\n\n                {fields_access.includes(\"start_year\") === true && (\n                  <div className=\"p-2\">\n                    <label htmlFor=\"start_year\" className=\"d-block\">\n                      Start year\n                    </label>\n                    <input\n                      value={this.state.start_year}\n                      type=\"date\"\n                      name=\"start_year\"\n                      onChange={this.inputChangeHandler}\n                      className={`input-white w-20 inline-block  ${\n                        this.state.error?.target === ErrorType.start_year\n                          ? \"border-red-500 border-2\"\n                          : \"border-gray-500 border-2\"\n                      }`}\n                      placeholder=\"start_year\"\n                      disabled={this.state.loading}\n                    />\n                    {this.state.error?.target === ErrorType.start_year && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n                )}\n\n                {fields_access.includes(\"end_year\") === true && (\n                  <div className=\"p-2\">\n                    <label htmlFor=\"end_year\" className=\"d-block\">\n                      End year\n                    </label>\n                    <input\n                      value={this.state.end_year}\n                      type=\"date\"\n                      name=\"end_year\"\n                      onChange={this.inputChangeHandler}\n                      className={`input-white w-20 inline-block  ${\n                        this.state.error?.target === ErrorType.end_year\n                          ? \"border-red-500 border-2\"\n                          : \"border-gray-500 border-2\"\n                      }`}\n                      placeholder=\"end_year\"\n                      disabled={this.state.loading}\n                    />\n                    {this.state.error?.target === ErrorType.end_year && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n                )}\n\n                <div className=\"p-2  text-right\">\n                  <button\n                    className=\"py-2 font-bold  px-8 rounded bg-hero text-white inline-block\"\n                    disabled={this.state.loading}\n                    type=\"submit\"\n                  >\n                    {this.state.loading === true\n                      ? \"Loading...\"\n                      : \"Update document\"}\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const EditUserDocument = connect(mapStateToProps, {\n  FC_EditUserDocument,\n})(_EditUserDocument);\n","import React from \"react\";\nimport { MdCheckCircle, MdPanoramaFishEye } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  FC_ChangePassword,\n  FC_ChangePassword_Interface,\n} from \"../../actions/auth\";\nimport {\n  PASSWORD_MIN_LENGTH,\n  PASSWORD_MAX_LENGTH,\n} from \"../../utils/app.config\";\nimport {\n  hasUppercase,\n  hasLowercase,\n  hasNumber,\n  hasSpecialcase,\n} from \"../../utils/validation\";\nimport Modal, { ModalSize, Themes } from \"../Modal/Modal\";\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  close: Function;\n  FC_ChangePassword: Function;\n}\n\nenum ErrorTarget {\n  old_password,\n  new_password,\n  re_new_password,\n  main__error,\n  main_success,\n  none,\n}\ninterface AppState {\n  loading: boolean;\n  error: {\n    target: ErrorTarget;\n    msg: string;\n  };\n  old_password: string;\n  new_password: string;\n  re_new_password: string;\n  password_validation: {\n    uppercase: boolean;\n    lowercase: boolean;\n    number: boolean;\n    length: boolean;\n    special: boolean;\n  };\n}\n\nclass _ChangePassword extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: {\n        target: ErrorTarget.none,\n        msg: \"\",\n      },\n      old_password: \"\",\n      new_password: \"\",\n      re_new_password: \"\",\n      password_validation: {\n        uppercase: false,\n        lowercase: false,\n        number: false,\n        length: false,\n        special: false,\n      },\n    };\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    if (e.currentTarget.name === \"new_password\") {\n      this.setState({\n        ...this.state,\n        error: {\n          target: ErrorTarget.none,\n          msg: \"\",\n        },\n        [e.currentTarget.name]: e.target.value,\n        password_validation: {\n          uppercase: hasUppercase(e.target.value),\n          lowercase: hasLowercase(e.target.value),\n          special: hasSpecialcase(e.target.value),\n          number: hasNumber(e.target.value),\n          length:\n            e.target.value.length >= PASSWORD_MIN_LENGTH &&\n            e.target.value.length < PASSWORD_MAX_LENGTH,\n        },\n      } as Pick<AppState, keyof AppState>);\n    } else {\n      this.setState({\n        ...this.state,\n        error: {\n          target: ErrorTarget.none,\n          msg: \"\",\n        },\n        [e.currentTarget.name]: e.target.value,\n      } as Pick<AppState, keyof AppState>);\n    }\n  };\n\n  updateAccountHandler = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (this.state.old_password.length <= 4) {\n      return this.setState({\n        error: {\n          target: ErrorTarget.old_password,\n          msg: \"Please enter the current password\",\n        },\n      });\n    }\n\n    if (\n      !(\n        this.state.password_validation.uppercase &&\n        this.state.password_validation.lowercase &&\n        this.state.password_validation.number &&\n        this.state.password_validation.special &&\n        this.state.password_validation.length\n      )\n    ) {\n      return this.setState({\n        error: {\n          target: ErrorTarget.new_password,\n          msg: \"Password must pass the validation test\",\n        },\n      });\n    }\n\n    // check for errors\n    if (this.state.new_password !== this.state.re_new_password) {\n      return this.setState({\n        error: {\n          target: ErrorTarget.re_new_password,\n          msg: \"Does not match to the new password\",\n        },\n      });\n    }\n\n    this.setState({\n      loading: true,\n      error: {\n        target: ErrorTarget.none,\n        msg: \"\",\n      },\n    });\n\n    this.props.FC_ChangePassword(\n      {\n        new_password: this.state.new_password,\n        old_password: this.state.old_password,\n        user_id: this.props.auth.user.user_id,\n      } as FC_ChangePassword_Interface,\n      (status: boolean, msg: string) => {\n        if (status === true) {\n          this.setState({\n            loading: false,\n            old_password: \"\",\n            new_password: \"\",\n            re_new_password: \"\",\n            error: {\n              target: ErrorTarget.main_success,\n              msg: \"Your password has been updated successfully\",\n            },\n          });\n        } else {\n          this.setState({\n            loading: false,\n            error: {\n              target: ErrorTarget.main__error,\n              msg: msg,\n            },\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    let ValidationDesign = !(\n      this.state.password_validation.uppercase &&\n      this.state.password_validation.lowercase &&\n      this.state.password_validation.number &&\n      this.state.password_validation.special &&\n      this.state.password_validation.length\n    ) ? (\n      <div className=\"px-2 mb-2 bg-white rounded shadow-lg mx-2 p-2 -mt-2\">\n        <div className=\"p-1 border-gray-200 border rounded-full flex\">\n          {this.state.password_validation.lowercase && (\n            <div className=\"bg-blue-500 pt-1 rounded-l-full inline-block- w-1/6\"></div>\n          )}\n          {this.state.password_validation.uppercase && (\n            <div className=\"bg-blue-500 pt-1  inline-block- w-1/6\"></div>\n          )}\n          {this.state.password_validation.number && (\n            <div className=\"bg-blue-500 pt-1  inline-block- w-1/6\"></div>\n          )}\n          {this.state.password_validation.length && (\n            <div className=\"bg-blue-500 pt-1  inline-block- w-1/6\"></div>\n          )}\n          {this.state.password_validation.special && (\n            <div className=\"bg-blue-500 pt-1 rounded-r-full inline-block- w-2/6\"></div>\n          )}\n        </div>\n\n        <h5>Password must:</h5>\n        <div className=\"pt-1 text-sm\">\n          <div\n            className={`${\n              this.state.password_validation.lowercase\n                ? \"text-green-600 font-bold\"\n                : \"text-gray-500\"\n            }`}\n          >\n            {this.state.password_validation.lowercase ? (\n              <MdCheckCircle className=\"inline-block\" />\n            ) : (\n              <MdPanoramaFishEye className=\"inline-block\" />\n            )}{\" \"}\n            <span>Include a lowercase character</span>\n          </div>\n\n          <div\n            className={`${\n              this.state.password_validation.uppercase\n                ? \"text-green-600 font-bold\"\n                : \"text-gray-500\"\n            }`}\n          >\n            {this.state.password_validation.uppercase ? (\n              <MdCheckCircle className=\"inline-block\" />\n            ) : (\n              <MdPanoramaFishEye className=\"inline-block\" />\n            )}{\" \"}\n            <span>Include an uppercase character</span>\n          </div>\n\n          <div\n            className={`${\n              this.state.password_validation.number\n                ? \"text-green-600 font-bold\"\n                : \"text-gray-500\"\n            }`}\n          >\n            {this.state.password_validation.number ? (\n              <MdCheckCircle className=\"inline-block\" />\n            ) : (\n              <MdPanoramaFishEye className=\"inline-block\" />\n            )}{\" \"}\n            <span>Include a Number</span>\n          </div>\n\n          <div\n            className={`${\n              this.state.password_validation.length\n                ? \"text-green-600 font-bold\"\n                : \"text-gray-500\"\n            }`}\n          >\n            {this.state.password_validation.length ? (\n              <MdCheckCircle className=\"inline-block\" />\n            ) : (\n              <MdPanoramaFishEye className=\"inline-block\" />\n            )}{\" \"}\n            <span>\n              Between {PASSWORD_MIN_LENGTH} and {PASSWORD_MAX_LENGTH} character\n            </span>\n          </div>\n\n          <div\n            className={`${\n              this.state.password_validation.special\n                ? \"text-green-600 font-bold\"\n                : \"text-gray-500\"\n            }`}\n          >\n            {this.state.password_validation.special ? (\n              <MdCheckCircle className=\"inline-block\" />\n            ) : (\n              <MdPanoramaFishEye className=\"inline-block\" />\n            )}{\" \"}\n            <span>A special character</span>\n          </div>\n        </div>\n      </div>\n    ) : null;\n\n    return (\n      <>\n        <Modal\n          widthSizeClass={ModalSize.medium}\n          backDrop={true}\n          backDropClose={false}\n          close={() => this.props.close()}\n          displayClose={true}\n          theme={Themes.default}\n          title={\n            <label className=\"text-xl m-0 text-bold text-gray-700\">\n              Change password\n            </label>\n          }\n          padding={{ body: true, footer: true, title: true }}\n        >\n          <div className=\"bg-white rounded-b-md\">\n            <form onSubmit={this.updateAccountHandler}>\n              {this.state.error.target === ErrorTarget.main_success && (\n                <div className=\"p-2 m-2 text-center rounded-md bg-green-200 text-green-700 animate__zoomIn animate__animated\">\n                  {this.state.error.msg}\n                </div>\n              )}\n\n              {this.state.error.target === ErrorTarget.main__error && (\n                <div className=\"p-2 m-2 text-center rounded-md bg-red-200 text-red-700 animate__zoomIn animate__animated\">\n                  {this.state.error.msg}\n                </div>\n              )}\n\n              <div className=\"mt-2\">\n                <div className=\"p-2 \">\n                  <label htmlFor=\"title\" className=\"d-block\">\n                    Current password\n                  </label>\n                  <input\n                    type=\"password\"\n                    name=\"old_password\"\n                    value={this.state.old_password}\n                    className={`font-bold input-white w-20 inline-block  ${\n                      this.state.error?.target === ErrorTarget.old_password\n                        ? \"border-red-500 border-2\"\n                        : \"border-gray-500 border-2\"\n                    }`}\n                    placeholder=\"Current password\"\n                    onChange={this.handleChange}\n                    disabled={this.state.loading}\n                    required\n                  />\n                  {this.state.error?.target === ErrorTarget.old_password && (\n                    <span className=\"text-red-600\">\n                      {this.state.error?.msg}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"mt-3\">\n                <div className=\"p-2 \">\n                  <label\n                    htmlFor=\"title\"\n                    className=\"d-block\"\n                    title=\"Re-enter the new password\"\n                  >\n                    New Password\n                  </label>\n                  <input\n                    type=\"password\"\n                    name=\"new_password\"\n                    value={this.state.new_password}\n                    className={`font-bold input-white w-20 inline-block  ${\n                      this.state.error?.target === ErrorTarget.new_password\n                        ? \"border-red-500 border-2\"\n                        : \"border-gray-500 border-2\"\n                    }`}\n                    placeholder=\"New password\"\n                    onChange={this.handleChange}\n                    disabled={this.state.loading}\n                    required\n                  />\n                  {this.state.error?.target === ErrorTarget.new_password && (\n                    <span className=\"text-red-600\">\n                      {this.state.error?.msg}\n                    </span>\n                  )}\n                </div>\n              </div>\n              {ValidationDesign}\n\n              <div className=\"mt-2\">\n                <div className=\"p-2 \">\n                  <label\n                    htmlFor=\"title\"\n                    className=\"d-block\"\n                    title=\"Re-enter the new password\"\n                  >\n                    Re-Password\n                  </label>\n                  <input\n                    type=\"password\"\n                    name=\"re_new_password\"\n                    value={this.state.re_new_password}\n                    className={`font-bold input-white w-20 inline-block  ${\n                      this.state.error?.target === ErrorTarget.re_new_password\n                        ? \"border-red-500 border-2\"\n                        : \"border-gray-500 border-2\"\n                    }`}\n                    placeholder=\"Re-New password\"\n                    onChange={this.handleChange}\n                    disabled={this.state.loading}\n                    required\n                  />\n                  {this.state.error?.target === ErrorTarget.re_new_password && (\n                    <span className=\"text-red-600\">\n                      {this.state.error?.msg}\n                    </span>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"p-2\">\n                <button\n                  className=\"py-2 font-bold  px-8 rounded bg-hero text-white inline-block\"\n                  disabled={this.state.loading}\n                  type=\"submit\"\n                >\n                  {this.state.loading === true ? (\n                    <b className=\"animate__animated animate__fadeIn animate__infinite\">\n                      Changing password...\n                    </b>\n                  ) : (\n                    \"Change password\"\n                  )}\n                </button>\n              </div>\n            </form>\n          </div>\n        </Modal>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const ChangePassword = connect(mapStateToProps, {\n  FC_ChangePassword,\n})(_ChangePassword);\n","import React, { FC, Fragment, ReactElement } from \"react\";\nimport {\n  MdAttachFile,\n  MdCardMembership,\n  MdDeleteForever,\n  MdNoteAdd,\n} from \"react-icons/md\";\nimport {\n  DocumentUser,\n  DocumentSubCategories,\n  DocumentsCategories,\n  DocumentStatus,\n} from \"../../interfaces\";\n\ntype DocumentsListProps = {\n  documents: DocumentUser[];\n  selected_category: DocumentsCategories | null;\n  selected_sub_category: DocumentSubCategories | null;\n  selectDoc: Function;\n  addNewDoc: Function;\n  categories: DocumentsCategories[];\n  sub_categories: DocumentSubCategories[];\n  Delete: Function;\n};\n\nconst DocumentsList: FC<DocumentsListProps> = ({\n  documents,\n  selected_category,\n  selected_sub_category,\n  selectDoc,\n  addNewDoc,\n  categories,\n  sub_categories,\n  Delete,\n}): ReactElement => {\n  // let subCategoriesByCategory: DocumentSubCategories[] = sub_categories.filter(\n  //   (sub_cat: DocumentSubCategories) =>\n  //     sub_cat.category_id === selected_category?.user_detail_category_id\n  // );\n  let documents_list: DocumentUser[] = [];\n  if (selected_category === null) {\n    // * no category selected\n    documents_list = documents;\n  } else {\n    //* nothing is selected in subcategory (default)\n    if (selected_sub_category === null) {\n      // check if the category has sub categories\n      documents_list = documents.filter(\n        (doc: DocumentUser) =>\n          doc.category_id === selected_category?.user_detail_category_id\n      );\n    } else if (selected_sub_category !== null) {\n      documents_list = documents.filter(\n        (doc: DocumentUser) =>\n          doc.category_id === selected_category.user_detail_category_id &&\n          doc.sub_category_id ===\n            selected_sub_category.user_detail_subcategory_id\n      );\n    }\n  }\n  return (\n    <div className=\"\">\n      <div className=\"p-2 border-b border-gray-200 rounded-md flex bg-white justify-between items-center\">\n        <section>\n          <h1\n            className={`${\n              selected_sub_category === null ? \"text-2xl\" : \"text-xl\"\n            }  m-0  text-blue-800`}\n          >\n            {selected_category === null ? (\n              \"All details\"\n            ) : (\n              <Fragment>\n                {selected_category?.title}{\" \"}\n                {selected_sub_category !== null && (\n                  <b className=\"block -mt-1\"> {selected_sub_category.title}</b>\n                )}\n              </Fragment>\n            )}\n          </h1>\n          <p className=\"m-0 text-sm text-gray-400\">\n            {selected_sub_category === null\n              ? selected_category?.description\n              : selected_sub_category.description}\n          </p>\n        </section>\n\n        <button\n          className=\"px-3 py-1 bg-blue-600 rounded hover:bg-blue-800 text-white\"\n          onClick={() => addNewDoc()}\n        >\n          <MdNoteAdd className=\"text-3xl mx-auto block\" />\n          <span className=\"text-sm\">Add new</span>\n        </button>\n\n        {/* {(selected_sub_category === null &&\n          subCategoriesByCategory.length === 0) ||\n        !(\n          selected_sub_category === null && subCategoriesByCategory.length >= 1\n        ) ? (\n          <button\n            className=\"px-3 py-1 bg-blue-600 rounded hover:bg-blue-800 text-white\"\n            onClick={() => addNewDoc()}\n          >\n            <MdNoteAdd className=\"text-3xl mx-auto block\" />\n            <span className=\"text-sm\">Add new</span>\n          </button>\n        ) : selected_sub_category === null &&\n          subCategoriesByCategory.length >= 1 ? (\n          <section className=\"text-right\">\n            <button\n              className=\"px-3 py-1 inline-block bg-gray-300 rounded text-gray-700\"\n              disabled\n            >\n              <MdNoteAdd className=\"text-2xl mx-auto block\" />\n              <span className=\"text-xs\">Add new</span>\n            </button>\n            <span className=\"text-xs block\">Select a sub cateogry</span>\n          </section>\n        ) : null} */}\n      </div>\n      <div className=\"p-2 \">\n        {documents_list.length <= 0 ? (\n          <div className=\"p-4 text-center  text-gray-500\">\n            <MdCardMembership className=\"text-7xl mx-auto my-2\" />\n            <h2 className=\"text-2xl mb-2\">No data found on</h2>\n            <h1 className=\"text-xl mb-2 text-blue-900\">\n              {selected_category === null\n                ? \"Any category\"\n                : selected_category?.title}{\" \"}\n              {selected_sub_category !== null && (\n                <b className=\"block\"> {selected_sub_category?.title} </b>\n              )}\n            </h1>\n            <p>\n              Please click on <b>Add new</b> and improve your CV\n            </p>\n          </div>\n        ) : (\n          documents_list.map((doc: DocumentUser, i) => {\n            let category_itm = categories.find(\n              (itm) => itm.user_detail_category_id === doc.category_id\n            );\n            let sub_category_itm = sub_categories.find(\n              (itm) => itm.user_detail_subcategory_id === doc.sub_category_id\n            );\n\n            let colorBackground: string = \"\";\n            let colorBorder: string = \"\";\n\n            if (doc.validation_status === DocumentStatus.Approved) {\n              colorBackground = \"white\";\n              colorBorder = \"green-500 \";\n            } else if (doc.validation_status === DocumentStatus.Waiting) {\n              colorBackground = \"white\";\n              colorBorder = \"blue-500 \";\n            } else if (doc.validation_status === DocumentStatus.Rejected) {\n              colorBackground = \"red-100\";\n              colorBorder = \"red-500 \";\n            }\n\n            return (\n              <div\n                key={i}\n                className={`flex px-0.5 py-2 cursor-pointer mb-2 rounded shadow-sm-- hover:shadow border hover:bg-blue-100  border-${colorBorder}-100  items-center bg-${colorBackground}`}\n              >\n                <div className=\"flex-1 pl-2\" onClick={() => selectDoc(doc)}>\n                  <span className=\"text-sm block text-gray-600\">\n                    {category_itm?.title}\n                  </span>\n                  <div className=\"  text-lg m-0  text-gray-900\">\n                    <h3 className=\"font-bold inline-block\">\n                      {sub_category_itm?.title}\n                      {doc.title && \" - \" + doc.title}\n                    </h3>\n\n                    <h3 className=\"inline-block ml-2\">\n                      {doc.category_subcategory_data?.title}\n                    </h3>\n                  </div>\n                  {doc.validation_status !== undefined &&\n                    doc?.files?.length >= 4 && (\n                      <span\n                        className={`text-sm  bg-${colorBorder}-500 py-0.5 px-2 rounded-full text-white`}\n                      >\n                        {doc?.validation_status}\n                      </span>\n                    )}\n                </div>\n                <div className=\" mx-2\" onClick={() => selectDoc(doc)}>\n                  {doc.files !== undefined && doc.files?.length >= 4 && (\n                    <button className=\"p-2\" title=\"This item has a file\">\n                      <MdAttachFile\n                        className={`text-4xl text-${colorBorder}-400`}\n                      />\n                    </button>\n                  )}\n                </div>\n                {doc.validation_status !== DocumentStatus.Approved && (\n                  <div className=\"px-3\">\n                    <button\n                      onClick={() => Delete(doc.doc_id)}\n                      className=\"text-4xl text-red-600\"\n                    >\n                      <MdDeleteForever />\n                    </button>\n                  </div>\n                )}\n              </div>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n};\nexport default DocumentsList;\n","import React, { FC, ReactElement } from \"react\";\nimport {\n  CandidateInterface,\n  DocumentsCategories,\n  DocumentSubCategories,\n  DocumentUser,\n} from \"../../interfaces\";\nimport { EDUCATION_CATEGORY_ID } from \"../../utils/app.config\";\n\ntype PrintCVProps = {\n  user: CandidateInterface;\n  documentTypes: {\n    sub_categories: DocumentSubCategories[];\n    categories: DocumentsCategories[];\n  };\n  documents: DocumentUser[];\n};\n\nconst PrintCV: FC<PrintCVProps> = ({\n  user,\n  documentTypes,\n  documents,\n}): ReactElement => {\n  const { categories, sub_categories } = documentTypes;\n\n  if (documents.length <= 0) {\n    return (\n      <div className=\"p-4 text-center\">\n        <h1 className=\"text-3xl font-bold text-gray-500\">\n          You have no data to generate the CV\n        </h1>\n        <h3>Please complete the details in order to get your profile</h3>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div id=\"content\" className=\"p-3 border\" style={{ width: \"2480\" }}>\n        <div className=\"py-1\"></div>\n        <div className=\" \">\n          <div className=\"flex\">\n            <div className=\"\">\n              <img\n                src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\n                alt=\"Profile details\"\n                className=\"w-28\"\n              />\n            </div>\n            <div className=\"flex-1 pl-3\">\n              <h1 className=\"text-3xl font-bold\">\n                {user.fname} {user.lname}\n              </h1>\n              <section className=\"border-t my-1\">\n                <span className=\"text-gray-500 inlinr-block mr-2\">Sex:</span>\n                <b>{user.sex}</b>\n              </section>\n              <section className=\"border-t my-1\">\n                <span className=\"text-gray-500 inlinr-block mr-2\">Email:</span>\n                <b>{user.email}</b>\n              </section>\n              <section className=\"border-t my-1\">\n                <span className=\"text-gray-500 inlinr-block mr-2\">Phone:</span>\n                <b>{user.phone_number}</b>\n              </section>\n            </div>\n          </div>\n        </div>\n        <div className=\"mt-2 border-t grid grid-flow-col gap-4\">\n          <div className=\"\">\n            <h1 className=\"p-1 mb-1 bg-gray-600 text-center text-lg font-bold text-white\">\n              Education\n            </h1>\n            {sub_categories\n              .filter(\n                (sub_cat_check) =>\n                  sub_cat_check.category_id === EDUCATION_CATEGORY_ID\n              )\n              .map((sub_cat) => {\n                let documents_list = documents.filter(\n                  (doc) =>\n                    doc.sub_category_id === sub_cat.user_detail_subcategory_id\n                );\n                if (documents_list.length <= 0) return null;\n\n                return (\n                  <div\n                    key={sub_cat.user_detail_subcategory_id}\n                    className=\"border p-2 rounded mb-2\"\n                  >\n                    <h1 className=\"text-xl text-blue-500 font-bold\">\n                      {sub_cat.title}\n                    </h1>\n                    <div className=\"mt-1\">\n                      {documents_list.map((doc) => (\n                        <div key={doc.doc_id} className=\"p-1 border-t\">\n                          <b>\n                            {doc.category_subcategory_data\n                              ? doc.category_subcategory_data.title\n                              : \"Document\"}\n                          </b>\n                          <p>{doc.school?.school_name}</p>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n\n          <div className=\"\">\n            {categories\n              .filter(\n                (cat) => cat.user_detail_category_id !== EDUCATION_CATEGORY_ID\n              )\n              .map((category) => {\n                let sub_categories_list = sub_categories.filter(\n                  (itm) => itm.category_id === category.user_detail_category_id\n                );\n                if (sub_categories_list.length <= 0) return null;\n\n                return (\n                  <section key={category.user_detail_category_id}>\n                    <h1 className=\"p-1 mb-1 bg-gray-600 text-center text-xl font-bold text-white\">\n                      {category.title}\n                    </h1>\n                    {sub_categories_list.map((sub_cat) => {\n                      let documents_list = documents.filter(\n                        (doc) =>\n                          doc.sub_category_id ===\n                          sub_cat.user_detail_subcategory_id\n                      );\n                      if (documents_list.length <= 0) return null;\n\n                      return (\n                        <div\n                          key={sub_cat.user_detail_subcategory_id}\n                          className=\"border p-2 rounded mb-2\"\n                        >\n                          <h1 className=\"text-xl text-blue-500 font-bold\">\n                            {sub_cat.title}\n                          </h1>\n                          <div className=\"mt-1\">\n                            {documents_list.map((doc) => (\n                              <div key={doc.doc_id} className=\"p-1 border-t\">\n                                {doc.title.length >= 2 && <b>{doc.title} </b>}-{\" \"}\n                                <b>{sub_cat.title}</b> -{\" \"}\n                                <b>\n                                  {doc.category_subcategory_data\n                                    ? doc.category_subcategory_data.title\n                                    : \"Document\"}\n                                </b>\n                                <p>{doc.school?.school_name}</p>\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </section>\n                );\n              })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default PrintCV;\n","import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  FC_GetProfileDetails,\n  FC_DeleteDocument,\n  FC_Access,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  DocumentSubCategories,\n  DocumentsCategories,\n  DocumentsCategoriesWithCount,\n  DocumentUser,\n} from \"../../interfaces\";\n\nimport Profile from \"./Profile\";\nimport DocumentDetails from \"./DocumentDetails\";\nimport { AddUserDocument } from \"../../components/AddUserDocument/AddUserDocument\";\nimport { EditProfileDetails } from \"./EditProfileDetails\";\nimport { EditUserDocument } from \"../../components/EditUserDocument/EditUserDocument\";\nimport { ChangePassword } from \"../../components/ChangePassword/ChangePassword\";\nimport DocumentsList from \"./DocumensList\";\nimport {\n  MainItem,\n  SideNavigation,\n  // SubItem,\n  // SubItemContainer,\n} from \"../../components/Navigation/SideNavigation\";\nimport { MdAssignmentInd } from \"react-icons/md\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport PrintCV from \"../../components/PrintCV/PrintCV\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\n// import { useReactToPrint } from 'react-to-print';\n// import ReactToPrint from \"react-to-print\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  FC_GetProfileDetails: Function;\n  FC_DeleteDocument: Function;\n}\n\ninterface AppState {\n  loading: boolean;\n  selected_category: DocumentsCategories | null;\n  selected_sub_category: DocumentSubCategories | null;\n  selected_doc: DocumentUser | null;\n  edit_doc: DocumentUser | null;\n  create_new_doc: boolean;\n  error: {\n    target: string;\n    msg: string;\n  };\n  updateProfile: boolean;\n  changePassword: boolean;\n  side_nav: boolean;\n  printCV: boolean;\n}\n\nclass _ProfileDetails extends React.PureComponent<AppProps, AppState> {\n  CvRef: any;\n  constructor(props: AppProps) {\n    super(props);\n    this.CvRef = React.createRef();\n    this.state = {\n      loading: false,\n      selected_category: null,\n      selected_sub_category: null,\n      selected_doc: null,\n      edit_doc: null,\n      create_new_doc: false,\n      error: {\n        target: \"\",\n        msg: \"\",\n      },\n      updateProfile: false,\n      changePassword: false,\n      side_nav: false,\n      printCV: false,\n    };\n  }\n\n  componentDidMount = () => {\n    this.setState({\n      loading: true,\n    });\n    this.props.FC_GetProfileDetails(\n      this.props.auth.user.user_id,\n      (status: boolean, msg: string) => {\n        if (status === true) {\n          this.setState({\n            loading: false,\n          });\n        } else {\n          this.setState({\n            loading: false,\n            error: {\n              msg: msg,\n              target: \"all\",\n            },\n          });\n        }\n      }\n    );\n\n    console.log({\n      User_access: FC_Access(this.props.auth, UserAccessList.do_exam),\n    });\n  };\n\n  categoryHandler = (value: DocumentsCategories | null) =>\n    this.setState({\n      selected_category: value,\n      selected_sub_category: null,\n    });\n\n  subCategoryHandler = (value: DocumentSubCategories) =>\n    this.setState({\n      selected_sub_category: value,\n    });\n\n  selectDocHandler = (value: DocumentUser | null) => {\n    this.setState({\n      selected_doc: value,\n    });\n  };\n\n  editDocHandler = (value: DocumentUser | null) => {\n    this.setState({\n      edit_doc: value,\n    });\n  };\n\n  addNewDocHandler = () =>\n    this.setState((prevState: AppState) => ({\n      create_new_doc: !prevState.create_new_doc,\n    }));\n\n  deleteDocHandler = (id: string) => {\n    if (window.confirm(\"Are you sure you want to delete?\") === true) {\n      this.props.FC_DeleteDocument(\n        { doc_id: id, user_id: this.props.auth.user.user_id },\n        (status: boolean, msg: string) => {\n          if (status === true) {\n            console.log(\"Success\");\n          } else {\n            this.setState({\n              error: {\n                target: \"all\",\n                msg: \"\",\n              },\n            });\n          }\n        }\n      );\n    }\n  };\n\n  updateDocHandler = (doc: DocumentUser | null) => {\n    console.log({ update_doc: doc });\n    this.setState({\n      edit_doc: doc,\n      selected_doc: null,\n    });\n  };\n\n  changePasswordHadler = () =>\n    this.setState((prevState: AppState) => ({\n      changePassword: !prevState.changePassword,\n    }));\n\n  updateProfileHandler = () =>\n    this.setState((prevState: AppState) => ({\n      updateProfile: !prevState.updateProfile,\n    }));\n\n  sideNavHandler = () =>\n    this.setState((prevState: AppState) => ({\n      side_nav: !prevState.side_nav,\n    }));\n\n  openCB_Toogle = () =>\n    this.setState((prevState: AppState) => ({\n      printCV: !prevState.printCV,\n    }));\n\n  //  handlePrint = () => useReactToPrint({\n  //     content: () => this.CvRef.current,\n  //   });\n\n  render() {\n    const {\n      user,\n      document_types: { categories, sub_categories },\n      documents,\n    } = this.props.auth;\n    let category_with_counts: DocumentsCategoriesWithCount[] = categories.map(\n      (cat: DocumentsCategories) => {\n        return {\n          ...cat,\n          count: documents.filter(\n            (doc) => doc.category_id === cat.user_detail_category_id\n          ).length,\n        } as DocumentsCategoriesWithCount;\n      }\n    );\n\n    if (this.state.loading === true) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading profile...\n        </div>\n      );\n    }\n    return (\n      <Fragment>\n        {/* print CV */}\n        {this.state.printCV === true && (\n          <Modal\n            widthSizeClass={ModalSize.extraLarge}\n            backDrop={true}\n            backDropClose={true}\n            close={() => this.openCB_Toogle()}\n            displayClose={true}\n            theme={Themes.default}\n            title={\n              <label className=\"text-xl m-0 text-bold text-gray-700\">\n                Your CV{\" \"}\n              </label>\n            }\n            padding={{ body: true, footer: true, title: true }}\n          >\n            <PrintCV\n              user={this.props.auth.user}\n              documentTypes={this.props.auth.document_types}\n              documents={this.props.auth.documents}\n              // close={this.openCB_Toogle}\n            />\n          </Modal>\n        )}\n        <SideNavigation>\n          {/* <Search data={[1, 2, 3]} /> */}\n\n          <section onClick={() => this.categoryHandler(null)} className=\"mt-4\">\n            <MainItem\n              title={\"Profile\"}\n              count={0}\n              active={this.state.selected_category === null ? true : false}\n            />\n          </section>\n          <div className=\"pt-1\">\n            {category_with_counts.map((itm, i: number) => (\n              <Fragment key={itm.title}>\n                <section\n                  onClick={() => this.categoryHandler(itm)}\n                  title={itm.description}\n                >\n                  <MainItem\n                    title={itm.title}\n                    count={itm.count}\n                    active={\n                      this.state.selected_category?.user_detail_category_id ===\n                      itm.user_detail_category_id\n                        ? true\n                        : false\n                    }\n                  />\n                </section>\n\n                {/* {this.state.selected_category?.user_detail_category_id ===\n                  itm.user_detail_category_id &&\n                  sub_categories.filter(\n                    (el) => el.category_id === itm.user_detail_category_id\n                  ).length >= 1 && (\n                    <SubItemContainer>\n                      {sub_categories\n                        .filter(\n                          (el) => el.category_id === itm.user_detail_category_id\n                        )\n                        .map((sub_itm) => (\n                          <section\n                            key={sub_itm.user_detail_subcategory_id}\n                            onClick={() => this.subCategoryHandler(sub_itm)}\n                            title={sub_itm.description}\n                          >\n                            <SubItem\n                              title={sub_itm.title}\n                              icon={MdLabel}\n                              active={\n                                this.state.selected_sub_category\n                                  ?.user_detail_subcategory_id ===\n                                sub_itm.user_detail_subcategory_id\n                                  ? true\n                                  : false\n                              }\n                            />\n                          </section>\n                        ))}\n                    </SubItemContainer>\n                  )} */}\n              </Fragment>\n            ))}\n          </div>\n\n          <button\n            onClick={this.openCB_Toogle}\n            className=\"btn bg-blue-200 text-blue-600 text-center mt-2 w-full\"\n          >\n            <MdAssignmentInd className=\"inline-block mr-1\" /> Open my CV\n          </button>\n        </SideNavigation>\n\n        {this.state.create_new_doc === true && (\n          <AddUserDocument\n            close={this.addNewDocHandler}\n            category={this.state.selected_category}\n            sub_category={null}\n          />\n        )}\n\n        {this.state.edit_doc !== null && (\n          <EditUserDocument\n            categories={this.props.auth.document_types.categories}\n            document={this.state.edit_doc}\n            close={() => this.setState({ edit_doc: null })}\n          />\n        )}\n\n        {this.state.selected_doc !== null && (\n          <Fragment>\n            <DocumentDetails\n              category={this.state.selected_category}\n              sub_category={this.state.selected_sub_category}\n              doc={this.state.selected_doc}\n              categories={categories}\n              sub_categories={sub_categories}\n              close={() => this.selectDocHandler(null)}\n              Update={this.updateDocHandler}\n              Delete={this.deleteDocHandler}\n            />\n          </Fragment>\n        )}\n\n        {/* // edit progile */}\n        {this.state.updateProfile === true && (\n          <EditProfileDetails close={this.updateProfileHandler} />\n        )}\n\n        {/* // edit progile */}\n        {this.state.changePassword === true && (\n          <ChangePassword close={this.changePasswordHadler} />\n        )}\n\n        <div className=\"\">\n          <div className=\"mt-3  pt-2\">\n            <div className=\"shadow rounded bg-white bg-opacity-50\">\n              {this.state.selected_category === null ? (\n                <Profile\n                  user={user}\n                  access_name={this.props.auth.user_access.role}\n                  district_name={this.props.auth.user_access.district_name}\n                  school_name={this.props.auth.user_access.school_name}\n                  changePassword={this.changePasswordHadler}\n                  editProfile={this.updateProfileHandler}\n                />\n              ) : (\n                <DocumentsList\n                  documents={documents}\n                  selected_category={this.state.selected_category}\n                  selected_sub_category={this.state.selected_sub_category}\n                  selectDoc={this.selectDocHandler}\n                  addNewDoc={this.addNewDocHandler}\n                  categories={categories}\n                  sub_categories={sub_categories}\n                  Delete={this.deleteDocHandler}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const ProfileDetails = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  FC_DeleteDocument,\n})(_ProfileDetails);\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = (props) => {\n  const startPage = 1;\n  const tableId =\n    !props.tableId || props.tableId === \"myTable\" ? FC_makeID() : props.tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    props.pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId!)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < props.columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${props.tableSize} overflow-x-auto`}>\n      {/* search box  */}\n      {props.search && (\n        <div className={`${props.searchBG} w-full mb-2`}>\n          {props.search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={props.loading}\n              />\n\n              {props.pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={props.loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"overflow-x-auto w-full\">\n        <table\n          className={\n            props.tableClass\n              ? props.tableClass\n              : `w-full shadow ${\n                  props.rounded && \"sm:rounded-lg\"\n                } table-auto order-table`\n          }\n          id={tableId}\n        >\n          {!props.hideColumns && (\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n              <tr\n                className={`text-left tracking-wide bg-${props.thColor}-100 border-b-2 border-${props.thColor}-500 text-${props.thColor}-600`}\n              >\n                {props.columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className={`${column.padding} text-${\n                      column.alignText\n                    } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                    onClick={() =>\n                      column.isSortAllowed && sortThisColumn(tableId, index)\n                    }\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      {column.columnTitle}\n                      {column.isSortAllowed && <BiSort />}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n            {props.rows()}\n          </tbody>\n        </table>\n        {props.pagination && (\n          <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n            <div>\n              <span className=\"text-xs xs:text-sm text-gray-900\">\n                Showing 1 to {pageSize} of {totalItems - 1} Entries\n              </span>\n            </div>\n            <div>\n              <nav className=\"inline-flex shadow-sm\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                      currentPage !== 1 && \"bg-white\"\n                    }`}\n                    aria-label=\"Previous\"\n                    disabled={currentPage === 1 || props.loading}\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                  >\n                    <MdNavigateBefore className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <div>\n                  {pages &&\n                    pages.map((page, pageIndex) => (\n                      <button\n                        key={pageIndex}\n                        className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                          page !== currentPage\n                            ? \"bg-white\"\n                            : \"bg-gray-100 cursor-default\"\n                        }`}\n                        disabled={page === currentPage || props.loading}\n                        onClick={() => setCurrentPage(page)}\n                      >\n                        {page}\n                      </button>\n                    ))}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                      currentPage !== totalPages && \"bg-white\"\n                    }`}\n                    aria-label=\"Next\"\n                    disabled={currentPage === totalPages || props.loading}\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                  >\n                    <MdNavigateNext className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport {\n  AcademicSessionInterface,\n  PlansTypeInterface,\n  SessionPlanInterface,\n} from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\n// GET ALL ACADEMIC SESSION\nexport interface GetAllAcademicSessionAction {\n  type: ActionTypes.GET_ALL_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface[];\n}\n\n// CREATE ACADEMIC SESSION\nexport interface CreateAcademicSessionAction {\n  type: ActionTypes.CREATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// UPDATE ACADEMIC SESSION\nexport interface UpdateAcademicSessionAction {\n  type: ActionTypes.UPDATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// ACTIVATE ACADEMIC SESSION\nexport interface ActivateAcademicSessionAction {\n  type: ActionTypes.ACADEMIC_SESSION_ACTIVATION;\n  payload: AcademicSessionInterface;\n}\n\n// DELETE ACADEMIC SESSION\nexport interface DeleteAcademicSessionAction {\n  type: ActionTypes.DELETE_ACADEMIC_SESSION;\n  payload: string;\n}\n\n// GET ACTIVE ACADEMIC SESSION\nexport interface GetActiveAcademicSessionAction {\n  type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface | \"none\";\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions\n  | GetAllAcademicSessionAction\n  | CreateAcademicSessionAction\n  | UpdateAcademicSessionAction\n  | ActivateAcademicSessionAction\n  | DeleteAcademicSessionAction\n  | GetActiveAcademicSessionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// CREATE ACADEMIC SESSION\nexport const createAcademicSession = (\n  data: AcademicSessionInterface\n): CreateAcademicSessionAction => {\n  return {\n    type: ActionTypes.CREATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ALL ACADEMIC SESSION ==========================\nexport const GetAllAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface[]>(\n        `${API.PLACEMENT}/postrequestperiod/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: AcademicSessionInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      console.log(\"====================================\");\n      console.log({ GetAllAcademicSession: res });\n      console.log(\"====================================\");\n      dispatch<GetAllAcademicSessionAction>({\n        type: ActionTypes.GET_ALL_ACADEMIC_SESSION,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// UPDATE ACADEMIC SESSION\nexport const updateAcademicSession = (\n  data: AcademicSessionInterface\n): UpdateAcademicSessionAction => {\n  return {\n    type: ActionTypes.UPDATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// ACTIVATE ACADEMIC SESSION\nexport const academicSessionActivation = (\n  data: AcademicSessionInterface\n): ActivateAcademicSessionAction => {\n  return {\n    type: ActionTypes.ACADEMIC_SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE ACADEMIC SESSION\nexport const deleteAcademicSession = (\n  data: string\n): DeleteAcademicSessionAction => {\n  return {\n    type: ActionTypes.DELETE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface>(\n        `${API.PLACEMENT}/postrequestperiod/one`\n      );\n      console.log({ GET_ACTIVE_ACADEMIC_SESSION: res.data });\n      let session_plan: AcademicSessionInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveAcademicSessionAction>({\n        type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  CandidatesInterface,\n  DocumentCategoryInterface,\n  DocumentFieldsInterface,\n  DocumentSubCategoryInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { VerifyDocumentInterface } from \"./users\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CATEGORY\nexport interface GetDocumentCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface[];\n}\n\nexport interface CreateDocumentCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface UpdateDocumentCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface DeleteDocumentCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_CATEGORY;\n  payload: string;\n}\n\n// SUB CATEGORY\nexport interface GetDocumentSubCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface[];\n}\n\nexport interface CreateDocumentSubCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface UpdateDocumentSubCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface DeleteDocumentSubCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY;\n  payload: string;\n}\n\n// FIELDS\nexport interface GetDocumentFieldsAction {\n  type: ActionTypes.GET_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface[];\n}\n\nexport interface CreateDocumentFieldsAction {\n  type: ActionTypes.CREATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface UpdateDocumentFieldsAction {\n  type: ActionTypes.UPDATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface DeleteDocumentFieldsAction {\n  type: ActionTypes.DELETE_DOCUMENT_FIELDS;\n  payload: string;\n}\n\n// DOCUMENT CHECKING\nexport interface GetCandidatesInInstituteAtion {\n  type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE;\n  payload: CandidatesInterface[];\n}\n\nexport interface VerifyDocumentAction {\n  type: ActionTypes.VERIFY_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type DocumentCategoryActionType =\n  | GetDocumentCategoryAction\n  | CreateDocumentCategoryAction\n  | UpdateDocumentCategoryAction\n  | DeleteDocumentCategoryAction\n  | GetDocumentSubCategoryAction\n  | CreateDocumentSubCategoryAction\n  | UpdateDocumentSubCategoryAction\n  | DeleteDocumentSubCategoryAction\n  | GetDocumentFieldsAction\n  | CreateDocumentFieldsAction\n  | UpdateDocumentFieldsAction\n  | DeleteDocumentFieldsAction\n  | GetCandidatesInInstituteAtion\n  | VerifyDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CATEGORY\n\nexport const getDocumentCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get(`${API.AUTH}/detailcategory`);\n      console.log({ docCategory: res });\n      dispatch<GetDocumentCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_CATEGORY,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n    }\n  };\n};\n\nexport const createDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// SUB CATEGORY\nexport const getDocumentSubCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentSubCategoryInterface[]>(\n        `${API.AUTH}/detailsubcategory`\n      );\n      console.log({ docSubCategory: res });\n      dispatch<GetDocumentSubCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentSubCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentSubCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentSubCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentSubCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// FIELDS\nexport const getDocumentFields = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentFieldsInterface[]>(\n        `${API.AUTH}/categorysubcatedata`\n      );\n      console.log({ docFields: res });\n      dispatch<GetDocumentFieldsAction>({\n        type: ActionTypes.GET_DOCUMENT_FIELDS,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentFields = (data: DocumentFieldsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentFieldsAction>({\n      type: ActionTypes.CREATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentFields = (data: DocumentFieldsInterface) => {\n  console.log({ reducer: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentFieldsAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentFields = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentFieldsAction>({\n      type: ActionTypes.DELETE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\n// REMOVE DUPLICATION IN CANDIDATES IN EDUCATION CATEGORY PER SESSION\nconst distinctCandidates = (\n  candidatesData: CandidatesInterface[]\n): CandidatesInterface[] => {\n  let result: CandidatesInterface[] = [];\n  let user_ids: string[] = [];\n  const newArray: CandidatesInterface[] = candidatesData.filter((candidate) => {\n    return candidate !== null && candidate !== undefined;\n  });\n  newArray.forEach((candidate) => {\n    if (!user_ids.includes(candidate.user_id)) {\n      result.push(candidate);\n      user_ids.push(candidate.user_id);\n    }\n  });\n  return result;\n};\n// CANDIDATE IN EDUCATION CATEGORY PER SESSION\nexport const getCandidatesInInstitute = (\n  educatin_type_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\", null);\n    try {\n      setAxiosToken();\n      const res = await axios.get<CandidatesInterface[]>(\n        `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({\n        getCandidatesInInstitute: res,\n        distinctCandidates: distinctCandidates(res.data),\n      });\n      console.log(\"====================================\");\n      dispatch<GetCandidatesInInstituteAtion>({\n        type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE,\n        payload: distinctCandidates(res.data),\n        // payload: response.data,\n      });\n      callback(false, \"\", distinctCandidates(res.data));\n    } catch (error) {\n      console.log({ getCandidatesInInstitute: error });\n      callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const verifyDocument = (data: VerifyDocumentInterface) => {\n  console.log(\"====================================\");\n  console.log({ verifyDocument: data });\n  console.log(\"====================================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyDocumentAction>({\n      type: ActionTypes.VERIFY_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormPlacementListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  myPlacement: candidatePlacementInterface | null;\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n\n  // REDUX //////////////////////\n};\n\nconst FormPlacementList: React.FC<FormPlacementListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            props.myPlacement === null ||\n            isClaimAllowed(\n              props.myClaims,\n              props.activeSession.session_plan_id,\n              props.myPlacement.placed._id\n            )\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.myPlacement ? (\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            props.myPlacement.placed._id\n          ) && (\n            <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(props.myPlacement!.placed._id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  Placed on {props.myPlacement.placed.school.school_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(props.myPlacement!.placed._id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          )\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No placement to claim on!\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\n// const mapStateToProps = ({\n//   course,\n// }: StoreState): {\n//   courses: course[] | null;\n// } => {\n//   return {\n//     courses: course.courses,\n//   };\n// };\nexport default connect(null, {})(FormPlacementList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  course,\n  PlansInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { isPlanActive } from \"../../SessionSettings/ApplicationSession/SessionDetails\";\nimport ApplicationFormView from \"./ApplicationFormView\";\nimport ChooseReason from \"./ChooseReason\";\nimport DocFormView from \"./DocFormView\";\nimport ExaminationFormView from \"./ExaminationFormView\";\nimport FormApplicationList from \"./FormApplicationList\";\nimport FormDocumentList from \"./FormDocumentList\";\nimport FormExamList, {\n  getCourseById,\n  getCourseIdBySheetId,\n} from \"./FormExamList\";\nimport FormPlacementList from \"./FormPlacementList\";\n\nexport const ClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: DocumentClaimUser\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data &&\n    doc.category_subcategory_data.category_subcategory_Data_id.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    console.log({ doc });\n    DocField = documentCategories.documentFields.filter(\n      (c) =>\n        c._id === doc.category_subcategory_data?.category_subcategory_Data_id\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const isClaimAllowed = (\n  allClaim: CandidateClaimInterface[],\n  period_id: string,\n  claimOnId: string\n): boolean => {\n  if (\n    allClaim.find(\n      (item) =>\n        item.period_id === period_id && item.claiming_on_id === claimOnId\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\ntype ClaimFormProps = {\n  // REQUIRED PROPS\n  formState: boolean;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getMyPlacement: Function;\n  getClaimReasons: Function;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  chooseClaimReason: boolean;\n  claimReason: claimReasonInterface | null;\n  myPlacement: candidatePlacementInterface | null;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n};\n\nclass ClaimForm extends Component<ClaimFormProps, ClaimFormState> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      myPlacement: this.props.claiming.myPlacement,\n      chooseClaimReason: false,\n      claimReason: null,\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setChooseClaimReason = (data: boolean) => {\n    this.setState({ chooseClaimReason: data });\n  };\n\n  setClaimReason = (value: claimReasonInterface | null) => {\n    this.setState({ claimReason: value });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  isClaimTypeOpen = (\n    thisSession: SessionPlanInterface,\n    thisType: PlansTypeKeys\n  ): boolean => {\n    let data: PlansInterface | undefined;\n    if (thisType === PlansTypeKeys.APPLICATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.PLACEMENT_TRANSFER) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: ClaimExamResultsDetails[]) => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ loadExamAnswers: data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (this.props.auth.application_session === null) {\n      this.props.PushPopupAlert({\n        title: \"No session active session\",\n        theme: PopupAlertTheme.danger,\n      });\n      this.props.setFormState(false);\n      this.setState({\n        claimFileId: \"\",\n        thisClaimType: null,\n        thisClaimTypeId: \"\",\n        claimComment: \"\",\n        chooseClaimFile: false,\n        formType: \"DEFAULT\",\n        viewThisFile: \"\",\n        formError: null,\n      });\n    } else {\n      if (this.props.documentReducer.documentCategory === null) {\n        this.props.getDocumentCategory();\n      }\n      if (this.props.documentReducer.documentSubCategory === null) {\n        this.props.getDocumentSubCategory();\n      }\n      if (this.props.documentReducer.documentFields === null) {\n        this.props.getDocumentFields();\n      }\n      if (this.props.claiming.claimReasons === null) {\n        this.props.getClaimReasons((status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        });\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getExamById = (\n    exams: ClaimExamResultsDetails[],\n    answer_sheet_id: string\n  ): ClaimExamResultsDetails | undefined => {\n    return exams.find((item) => item.answer_sheet_id === answer_sheet_id);\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  cleanToClose = (response?: boolean) => {\n    this.props.setFormState(false);\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  loadUserById = async (user_id: string, callback: Function) => {\n    if (isEmptyOrSpaces(user_id)) {\n      return this.props.PushPopupAlert({\n        title: \"No user id provided\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface>(\n        `${API.AUTH}/users/${user_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ loadUserById: res });\n      console.log(\"====================================\");\n      if (res) {\n        callback(res.data);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  getClaimTitle = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    if (\n      claimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = ClaimGetDocTitle(\n        this.props.documentReducer,\n        this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          this.state.claimFileId\n        )\n      ).main;\n    }\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = this.getApplicationById(\n        this.props.claiming.candidateApplications,\n        this.state.claimFileId\n      ).position.position_title;\n    }\n    if (\n      claimType === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.myAnswer &&\n      getCourseIdBySheetId(\n        this.props.claiming.myAnswer,\n        this.state.claimFileId\n      ) &&\n      getCourseById(\n        this.props.courses,\n        getCourseIdBySheetId(\n          this.props.claiming.myAnswer,\n          this.state.claimFileId\n        )!.course\n      )\n    ) {\n      result = getCourseById(\n        this.props.courses,\n        getCourseIdBySheetId(\n          this.props.claiming.myAnswer,\n          this.state.claimFileId\n        )!.course\n      )!.course_name;\n    }\n    if (\n      claimType === PlansTypeKeys.PLACEMENT_TRANSFER &&\n      this.state.myPlacement\n    ) {\n      result = \"Placed on \" + this.state.myPlacement.placed.school.school_name;\n    }\n\n    return result;\n  };\n\n  getClaimInstitute = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = this.getApplicationById(\n        this.props.claiming.candidateApplications,\n        this.state.claimFileId\n      ).position.education_institute_id.education_institute_id;\n    }\n\n    return result;\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (!this.state.claimReason) {\n      return this.setFormError({\n        element: \"claim_reason\",\n        msg: `Please select the reason of your claim!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.props.auth.application_session) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n\n    this.setLoadingForm(true);\n    let old_evaluator_email: string = \"info@system.com\";\n    let old_evaluator_name: string = \"System\";\n    let evaluator_email: string = \"\";\n    let evaluator_name: string = \"\";\n    let title: string = this.getClaimTitle(this.state.thisClaimType);\n    let institute_id: string = this.getClaimInstitute(this.state.thisClaimType);\n\n    if (\n      this.state.thisClaimType !== PlansTypeKeys.EXAMINATION &&\n      this.getValidation(this.state.claimFileId).old_evaluated_by !== \"system\"\n    ) {\n      await this.loadUserById(\n        this.getValidation(this.state.claimFileId).old_evaluated_by,\n        (data: UserInterface) => {\n          old_evaluator_email = data.email;\n          old_evaluator_name =\n            data.user_info.fname + \" \" + data.user_info.lname;\n        }\n      );\n    }\n\n    if (this.state.thisClaimType === PlansTypeKeys.EXAMINATION) {\n    }\n\n    try {\n      // console.log(\"====================================\");\n      // console.log({\n      //   claiming_on_id: this.state.claimFileId,\n      //   type_key: this.state.thisClaimType,\n      //   user: this.props.auth.user.user_id,\n      //   period_id: this.props.auth.application_session.session_plan_id,\n      //   default_claim_resaons: this.state.claimReason.id,\n      //   reason: this.state.claimComment,\n      //   old_reason:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"System\"\n      //       : this.getValidation(this.state.claimFileId).old_reason,\n      //   old_status:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"Failed\"\n      //       : this.getValidation(this.state.claimFileId).old_status,\n      //   old_evaluated_by:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"\"\n      //       : this.getValidation(this.state.claimFileId).old_evaluated_by,\n      //   old_evaluator_email,\n      //   old_evaluator_name,\n      //   evaluator_email,\n      //   evaluator_name,\n      //   title,\n      // });\n      // console.log(\"====================================\");\n\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.props.auth.application_session.session_plan_id,\n          default_claim_resaons: this.state.claimReason.id,\n          reason: this.state.claimComment,\n          old_reason:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"System\"\n              : this.getValidation(this.state.claimFileId).old_reason,\n          old_status:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Failed\"\n              : this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"\"\n              : this.getValidation(this.state.claimFileId).old_evaluated_by,\n          old_evaluator_email,\n          old_evaluator_name,\n          evaluator_email,\n          evaluator_name,\n          title,\n          institute_id,\n        }\n      );\n      console.log({ createClaim: res });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose(true);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingForm(false);\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n\n    if ((thisClaim as PlansTypeKeys) === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.candidateApplications === null) {\n        this.props.getMyRejectedApplications(\n          this.props.auth.user.user_id,\n          (\n            status: boolean,\n            msg: string,\n            data?: claimApplicationsInterface[]\n          ) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          }\n        );\n      }\n      if (\n        this.props.courses === null ||\n        (this.props.courses.length === 0 && this.state.loading)\n      ) {\n        this.props.loadCourses(this.setLoading);\n        this.setLoading(false);\n      } else {\n        this.setLoading(false);\n      }\n    } else if ((thisClaim as PlansTypeKeys) === PlansTypeKeys.EXAMINATION) {\n      if (\n        this.props.courses === null ||\n        (this.props.courses.length === 0 && this.state.loading)\n      ) {\n        this.props.loadCourses(this.setLoading);\n        this.setLoading(false);\n      } else {\n        this.setLoading(false);\n      }\n    } else if (\n      (thisClaim as PlansTypeKeys) === PlansTypeKeys.DOCUMENT_VALIDATION\n    ) {\n      if (this.props.claiming.candidateDocuments === null) {\n        this.props.getMyRejectedDocuments(\n          (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          }\n        );\n      }\n    } else if (\n      (thisClaim as PlansTypeKeys) === PlansTypeKeys.PLACEMENT_TRANSFER\n    ) {\n      if (this.props.claiming.myPlacement === null) {\n        this.props.getMyPlacement(\n          this.props.auth.user.user_id,\n          (\n            status: boolean,\n            msg: string,\n            data?: candidatePlacementInterface | null\n          ) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n            if (data) {\n              this.setState({ myPlacement: data });\n            }\n          }\n        );\n      }\n    }\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  render() {\n    if (\n      this.props.auth.application_session === null ||\n      this.props.claiming.myClaims === null\n    ) {\n      return null;\n    }\n\n    return (\n      <div className=\"pb-3\">\n        {this.props.formState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length <= 0 &&\n                this.cleanToClose();\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length > 0 &&\n                this.setViewThisFile(\"\");\n            }}\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-900 font-bold text-xl md:ml-1\">\n                {this.state.viewThisFile.length <= 0 && \"Claiming form\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType ===\n                    PlansTypeKeys.DOCUMENT_VALIDATION &&\n                  \"Viewing document\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                  \"Viewing application\"}\n              </div>\n            }\n            widthSizeClass={\n              this.state.viewThisFile.length > 0\n                ? ModalSize.extraLarge\n                : ModalSize.medium\n            }\n            padding={{ title: true, body: false, footer: false }}\n          >\n            {/* CLAIM FORM ============================================== */}\n            {this.state.viewThisFile.length <= 0 && (\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"px-6 pb-3\">\n                  {this.state.alertError && (\n                    <div\n                      className=\"alert-warning cursor-pointer\"\n                      onClick={() => this.setAlertError(null)}\n                    >\n                      {this.state.alertError}\n                    </div>\n                  )}\n                  <div className=\"text-base text-gray-700 sm:text-lg\">\n                    {/* SELECT CLAIM TYPE ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Claim type</label>\n                      <select\n                        className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                          this.state.formType === \"PROPS\" &&\n                          \"cursor-not-allowed\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_type\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                          this.selectClaimType(e.target.value);\n                          this.setClaimFileId(\"\");\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_type\" &&\n                            this.setFormError(null);\n                        }}\n                        value={\n                          this.state.thisClaimType\n                            ? this.state.thisClaimType\n                            : \"\"\n                        }\n                        disabled={\n                          this.state.loadingForm ||\n                          this.state.formType === \"PROPS\"\n                        }\n                      >\n                        <option value=\"\">Choose claim type</option>\n                        {Object.values(PlansTypeKeys).map((item, index) => (\n                          <option\n                            value={item}\n                            key={index + item}\n                            className={`${\n                              item === PlansTypeKeys.MARKS_PUBLICATION ||\n                              item === PlansTypeKeys.PLACEMENT_TRANSFER\n                                ? \"hidden\"\n                                : \"block\"\n                            }`}\n                          >\n                            {capitalizeFirstLetter(\n                              item.toLocaleLowerCase().replace(/_/g, \" \")\n                            )}\n                          </option>\n                        ))}\n                      </select>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_type\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT CLAIM TYPE ============================================== */}\n\n                    {/* SELECT FILE TO CLAIM ON ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>\n                        {this.generateChooseFileTitle(this.state.thisClaimType)}\n                      </label>\n                      <div\n                        className={`text-left bg-white border-2 ${\n                          this.state.formType !== \"PROPS\"\n                            ? \"border-gray-700\"\n                            : \"border-gray-400 text-gray-500\"\n                        } rounded w-full ${\n                          this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_file\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.state.loading\n                            ? \"cursor-waiting\"\n                            : this.state.thisClaimType &&\n                              !this.state.chooseClaimFile &&\n                              this.state.formType !== \"PROPS\"\n                            ? \"cursor-pointer\"\n                            : !this.state.chooseClaimFile &&\n                              \"cursor-not-allowed\"\n                        }`}\n                        title={\n                          !this.state.thisClaimType\n                            ? \"Choose claim type first!\"\n                            : \"\"\n                        }\n                        onClick={() => {\n                          !this.state.loading &&\n                            this.state.formType === \"DEFAULT\" &&\n                            this.state.thisClaimType &&\n                            !this.state.chooseClaimFile &&\n                            this.setChooseClaimFile(true);\n                          !this.state.loading &&\n                            this.state.formError &&\n                            this.state.formError.element === \"claim_file\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                        {this.state.claimFileId.length > 0 &&\n                        this.state.thisClaimType &&\n                        !this.state.chooseClaimFile ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.getClaimTitle(this.state.thisClaimType)}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimFile && (\n                            <p className=\"my-1 mx-2\">\n                              Select Claim{\" \"}\n                              {this.state.thisClaimType &&\n                                this.state.thisClaimType\n                                  .toLocaleLowerCase()\n                                  .replace(/_/g, \" \")}\n                            </p>\n                          )\n                        )}\n                        {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                        {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormDocumentList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateDocuments={\n                                this.props.claiming.candidateDocuments\n                              }\n                              documentCategories={this.props.documentReducer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF REJECTED APPLICATION ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormApplicationList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateApplications={\n                                this.props.claiming.candidateApplications\n                              }\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF FAILED EXAM ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.EXAMINATION &&\n                          this.props.claiming.myAnswer &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormExamList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateAnswers={this.props.claiming.myAnswer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF FAILED EXAM ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* PENDING PLACEMENT ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.PLACEMENT_TRANSFER &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormPlacementList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                              myPlacement={this.state.myPlacement}\n                            />\n                          )}\n                        {/* END LISTING OF FAILED Placement ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_file\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                    {/* CLAIM REASONS ========================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Choose reason of your claim</label>\n                      <div\n                        className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                          this.state.chooseClaimReason ? \"h-64\" : \"h-auto\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_reason\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.props.claiming.claimReasons === null\n                            ? \"cursor-wait\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title=\"Choose the reason for your claim!\"\n                        onClick={() => {\n                          !this.state.chooseClaimReason &&\n                            this.setState({ chooseClaimReason: true });\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_reason\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING SELECTED REASON ============================ */}\n                        {this.state.claimReason &&\n                        !this.state.chooseClaimReason ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.claimReason.reason}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimReason && (\n                            <p className=\"my-1 mx-2\">Select reason</p>\n                          )\n                        )}\n                        {/* END DISPLAYING SELECTED REASON ============================ */}\n\n                        {/* LISTING OF CLAIM REASONS ============================ */}\n                        {this.state.chooseClaimReason &&\n                          this.props.claiming.claimReasons && (\n                            <ChooseReason\n                              setChooseClaimReason={this.setChooseClaimReason}\n                              setClaimReason={this.setClaimReason}\n                              claimReason={this.state.claimReason}\n                              allClaimReasons={this.props.claiming.claimReasons}\n                            />\n                          )}\n                        {/* END LISTING OF CLAIM REASONS ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_reason\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM REASONS ========================================== */}\n\n                    {/* CLAIM COMMENT ============================================== */}\n                    <div className=\"flex flex-col\">\n                      <label>Comment</label>\n                      <textarea\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_comment\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder={`Claim comment`}\n                        style={{ resize: \"none\" }}\n                        value={this.state.claimComment}\n                        onChange={(e) => {\n                          this.setClaimComment(e.target.value);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_comment\" &&\n                            this.setFormError(null);\n                        }}\n                        rows={3}\n                        disabled={this.state.loadingForm}\n                      ></textarea>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM COMMENT ============================================== */}\n                  </div>\n\n                  <div className=\"pt-3 flex justify-between\">\n                    <button\n                      onClick={() => this.cleanToClose()}\n                      className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-not-allowed\"\n                      }`}\n                      type=\"button\"\n                      disabled={this.state.loadingForm || this.state.loading}\n                    >\n                      Exit\n                    </button>\n                    <button\n                      className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-wait\"\n                      }`}\n                      type=\"submit\"\n                      disabled={this.state.loadingForm || this.state.loading}\n                    >\n                      {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n            {/* END CLAIM FORM ============================================== */}\n\n            {/* CLAIM DOCUMENT VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateDocuments &&\n              this.state.thisClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION && (\n                <DocFormView\n                  thisDoc={this.getDocumentById(\n                    this.props.claiming.candidateDocuments,\n                    this.state.viewThisFile\n                  )}\n                  setViewThisFile={this.setViewThisFile}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                />\n              )}\n            {/* END CLAIM DOCUMENT VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM APPLICATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateApplications &&\n              this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n                <ApplicationFormView\n                  thisApplication={this.getApplicationById(\n                    this.props.claiming.candidateApplications,\n                    this.state.viewThisFile\n                  )}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                />\n              )}\n            {/* END CLAIM APPLICATION VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM EXAMINATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.myAnswer &&\n              this.state.thisClaimType === PlansTypeKeys.EXAMINATION &&\n              this.getExamById(\n                this.props.claiming.myAnswer,\n                this.state.viewThisFile\n              ) && (\n                <ExaminationFormView\n                  thisAnswerSheet={\n                    this.getExamById(\n                      this.props.claiming.myAnswer,\n                      this.state.viewThisFile\n                    )!\n                  }\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                  // thisAnswerSheet={undefined}\n                  // setViewThisFile={undefined}\n                  // setChooseClaimFile={undefined}\n                  // setClaimFileId={undefined}\n                />\n              )}\n            {/* END CLAIM EXAMINATION VIEW ============================================== */}\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  course,\n}: StoreState): {\n  auth: Auth;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    documentReducer: document,\n    claiming,\n    courses: course.courses,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadCourses,\n  getMyClaims,\n  getClaimReasons,\n  getMyAnswers,\n  getMyPlacement,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(ClaimForm);\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title}</span>\n        </td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id) ? \"Any document\" : item.field_title}\n          </span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {isEmptyOrSpaces(item.field_id) ? (\n            item.subcategory_required ? (\n              <span className=\"text-yellow-800\">Required</span>\n            ) : (\n              \"Optional\"\n            )\n          ) : item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          // {\n          //   columnTitle: \"Qualification Status\",\n          //   alignText: \"left\",\n          //   padding: \"p-3\",\n          // },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default ViewRequirements;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { search } from \"../../../utils/functions\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getFailedExam = (\n  allData: ClaimExamResultsDetails[],\n  allCourses: course[]\n): ClaimExamResultsDetails[] => {\n  let result: ClaimExamResultsDetails[] = [];\n  allData.forEach((element) => {\n    if (element.total_marks < 100) {\n      let data = element;\n      data.course_name = getCourseById(allCourses, element.course)\n        ? getCourseById(allCourses, element.course)!.course_name\n        : \"Unknown exam\";\n      result.push(data);\n    }\n  });\n\n  return result;\n};\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormExamListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateAnswers: ClaimExamResultsDetails[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n\n  // REDUX //////////////////////\n  courses: course[] | null;\n};\n\nconst FormExamList: React.FC<FormExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            !props.courses ||\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.courses &&\n        getFailedExam(props.candidateAnswers, props.courses).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.answer_sheet_id\n          )\n        ).length > 0 ? (\n          search(\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ),\n            searchInput\n          ).map((item: ClaimExamResultsDetails, index: number) => (\n            <div\n              className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                props.claimFileId === item.answer_sheet_id &&\n                \"bg-blue-50 border-l-4 border-blue-500\"\n              }`}\n              key={index + item.answer_sheet_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.answer_sheet_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.course_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.answer_sheet_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No failed exam available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  course,\n}: StoreState): {\n  courses: course[] | null;\n} => {\n  return {\n    courses: course.courses,\n  };\n};\nexport default connect(mapStateToProps, {})(FormExamList);\n","import React from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  claimApplicationsInterface,\n  claimApplicationsPositionInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\ntype ApplicationFormViewProps = {\n  thisApplication: claimApplicationsInterface;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  PushPopupAlert: Function;\n};\n\nconst ApplicationFormView: React.FC<ApplicationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisApplication.application_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisApplication.application_status ===\n                ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } py-1`}\n            >\n              {capitalizeFirstLetter(props.thisApplication.application_status)}\n            </span>\n          </div>\n          {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {props.thisApplication.}\n            </span>\n          </div> */}\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span\n              className=\"font-semibold text-gray-900\"\n              dangerouslySetInnerHTML={{\n                __html: props.thisApplication.override_by.comment,\n              }}\n            ></span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Details\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisApplication.position.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisApplication.position.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !==\n                    props.thisApplication.position.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisApplication.position.requirements.length > 0 ? (\n            FC_ApplicationPositionDistinctCategory(\n              props.thisApplication.position,\n              props.documentCategories\n            ).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_ApplicationPositionDistinctCategory(\n                      props.thisApplication.position,\n                      props.documentCategories\n                    ).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default connect(null, { PushPopupAlert })(ApplicationFormView);\n","import React from \"react\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport {\n  claimApplicationsPositionInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamDoneDetailsAnswers } from \"../../CandidateExams/CandidateExams\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\nexport const claimShowAnswer = (\n  answer: ClaimExamResultsDetails,\n  course_name: string\n): ExamDoneDetailsAnswers => {\n  const result: ExamDoneDetailsAnswers = {\n    course: answer.course,\n    course_name: course_name,\n    discription: answer.discription,\n    termes: answer.termes,\n    rules: {\n      right_click_enabled: false,\n      copy_enabled: false,\n      paste_enabled: false,\n      stop_candidate_when_comeback: false,\n      allow_to_leave_browser: false,\n    },\n    period: answer.period,\n    exam_date: answer.exam_date,\n  };\n  return result;\n};\n\ntype ExaminationFormViewProps = {\n  thisAnswerSheet: ClaimExamResultsDetails;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n};\n\nconst ExaminationFormView: React.FC<ExaminationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisAnswerSheet.course_name}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisAnswerSheet.answer_sheet_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisAnswerSheet.createdAt)}\n            </span>\n          </div>\n        </div>\n        {/* QUESTIONS ----------------------------- */}\n        <AnswersDetails\n          showAnswers={false}\n          exam_id={claimShowAnswer(\n            props.thisAnswerSheet,\n            props.thisAnswerSheet.course_name\n          )}\n        />\n        {/* END QUESTIONS ----------------------------- */}\n      </div>\n    </section>\n  );\n};\n\nexport default ExaminationFormView;\n","import React, { Component } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { claimReasonInterface } from \"../../../interfaces\";\nimport search from \"../../../utils/search\";\n\nexport const claimReasonsData = [\n  { key: 1, reason: \"Not placed (Sinahawe umwanya)\" },\n  {\n    key: 2,\n    reason:\n      \"Not placed with higher marks (Sinahawe umwanya kandi hari abo ndusha twakoze bimwe bawuhawe)\",\n  },\n  {\n    key: 3,\n    reason:\n      \"Want to change district of placement (Nifuza guhindurirwa akarere nahawemo umwanya)\",\n  },\n  {\n    key: 4,\n    reason: \"Rejected offer by mistake (Nibeshye nanga umwanya nahawe)\",\n  },\n  {\n    key: 0,\n    reason: \"None of the above (nta na kimwe muri ibyo byavuzwe haruguru)\",\n  },\n];\n\ntype ChooseReasonProps = {\n  claimReason: claimReasonInterface | null;\n  setClaimReason: (value: claimReasonInterface | null) => void;\n  setChooseClaimReason: (value: boolean) => void;\n  allClaimReasons: claimReasonInterface[];\n};\n\ntype ChooseReasonState = {\n  searchInput: string;\n};\n\nclass ChooseReason extends Component<ChooseReasonProps, ChooseReasonState> {\n  constructor(props: ChooseReasonProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* SEARCH PART */}\n        <div className=\"flex items-center w-full my-1\">\n          <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            value={this.state.searchInput}\n          />\n          <button\n            className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n            type=\"button\"\n            onClick={() => this.props.setChooseClaimReason(false)}\n          >\n            Close\n          </button>\n        </div>\n        {/* END SEARCH PART ///////////////// */}\n\n        <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n          {search(this.props.allClaimReasons, this.state.searchInput).map(\n            (item: claimReasonInterface, index) => (\n              <section key={index.toString() + item.id}>\n                <div\n                  className={`py-1 w-full px-2 hover:bg-gray-100 cursor-pointer ${\n                    this.props.claimReason &&\n                    this.props.claimReason.id === item.id\n                      ? \"border-l-4 border-blue-500 bg-blue-50\"\n                      : \"my-1\"\n                  }`}\n                  onClick={() => {\n                    this.props.setChooseClaimReason(false);\n                    this.props.setClaimReason(item);\n                  }}\n                >\n                  <p className=\"text-base text-black\">{item.reason}</p>\n                </div>\n              </section>\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChooseReason;\n","import React from \"react\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { ClaimGetDocTitle } from \"./ClaimForm\";\n\ntype DocFormViewProps = {\n  thisDoc: DocumentClaimUser;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n};\n\nconst DocFormView: React.FC<DocFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-xl\">\n              {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisDoc.doc_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              ################\n              {/* {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )} */}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n          <div className=\"w-full my-1\">\n            <img\n              src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n              alt=\"doc file\"\n              className={`w-full`}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default DocFormView;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getRejectedApplicants = (\n  applicationData: claimApplicationsInterface[]\n): claimApplicationsInterface[] => {\n  return applicationData.filter(\n    (item) => item.application_status === ApplicationStates.Rejected\n  );\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormApplicationListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateApplications: claimApplicationsInterface[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n};\n\nconst FormApplicationList: React.FC<FormApplicationListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateApplications, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {getRejectedApplicants(props.candidateApplications).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.application_id\n          )\n        ).length > 0 ? (\n          searchApplication(\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ),\n            searchInput\n          ).map((item, index) => (\n            <div\n              className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                props.claimFileId === item.application_id &&\n                \"bg-blue-50 border-l-4 border-blue-500\"\n              }`}\n              key={index + item.application_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.application_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.position.position_title}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.application_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormApplicationList;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { ClaimGetDocTitle, isClaimAllowed } from \"./ClaimForm\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { CategorySubcategoryData } from \"../../../interfaces/candidatesInterfaces\";\nimport { CandidateClaimInterface } from \"../../../interfaces\";\nimport { ApplicationSession } from \"../../../actions\";\n\nexport interface DocumentTitleInterface {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  doc_title: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport const DocumentTitleData = (\n  documentData: DocumentClaimUser[],\n  documentCategories: DocumentReducerInterface\n): DocumentTitleInterface[] | [] => {\n  let documentTemp: DocumentTitleInterface[] = [];\n  for (let i in documentData) {\n    documentTemp.push({\n      category_id: documentData[i].category_id,\n      company: documentData[i].company,\n      description: documentData[i].description,\n      email: documentData[i].email,\n      end_year: documentData[i].end_year,\n      files: documentData[i].files,\n      names: documentData[i].names,\n      phone_number: documentData[i].phone_number,\n      school: documentData[i].school,\n      school_id: documentData[i].school_id,\n      start_year: documentData[i].start_year,\n      sub_category_id: documentData[i].sub_category_id,\n      title: documentData[i].title,\n      year: documentData[i].year,\n      validation_status: documentData[i].validation_status,\n      validated_by: documentData[i].validated_by,\n      doc_id: documentData[i].doc_id,\n      doc_title: ClaimGetDocTitle(documentCategories, documentData[i]).main,\n      category_subcategory_data: documentData[i].category_subcategory_data,\n    });\n  }\n  return documentTemp;\n};\n\nconst getRejectedDocuments = (\n  documentData: DocumentClaimUser[]\n): DocumentClaimUser[] => {\n  console.log({\n    rejected: documentData.filter(\n      (item) => item.validation_status === \"rejected\"\n    ),\n  });\n  return documentData.filter((item) => item.validation_status === \"rejected\");\n};\n\nexport const searchDocuments = (\n  objList: DocumentTitleInterface[],\n  text: any\n): DocumentTitleInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter(\n    (product) =>\n      product.doc_title.toString().toLowerCase().indexOf(text.toLowerCase()) >\n      -1\n  );\n};\n\ntype FormDocumentListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateDocuments: DocumentClaimUser[];\n  documentCategories: DocumentReducerInterface;\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n};\n\nconst FormDocumentList: React.FC<FormDocumentListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.candidateDocuments.filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.doc_id\n          )\n        ).length > 0 ? (\n          searchDocuments(\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ),\n            searchInput\n          ).map((doc, index) => (\n            <section key={index + doc.doc_id}>\n              <div\n                className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                  props.claimFileId === doc.doc_id &&\n                  \"bg-blue-50 border-l-4 border-blue-500\"\n                }`}\n              >\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseClaimFile(false);\n                    props.setClaimFileId(doc.doc_id);\n                  }}\n                >\n                  <p className=\"text-base font-medium text-black\">\n                    {ClaimGetDocTitle(props.documentCategories, doc).main}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => {\n                    props.viewThisFile === doc.doc_id\n                      ? props.setViewThisFile(\"\")\n                      : props.setViewThisFile(doc.doc_id);\n                  }}\n                >\n                  {props.viewThisFile === doc.doc_id ? \"Close\" : \"View\"}\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormDocumentList;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { updateSessionPlan } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  allPlanTypes,\n  PlansInterface,\n  PlansTypeInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { DATE, errorToText } from \"../../../utils/functions\";\n\nexport const isActivationAllowed = (thisPlans: PlansInterface): boolean => {\n  let today: Date = new Date(),\n    end_date = new Date(thisPlans.end_date);\n  if (end_date.getTime() >= today.getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport const getPlanTypeByKey = (\n  type_key: PlansTypeKeys\n): PlansTypeInterface | undefined => {\n  return allPlanTypes.find((item) => item.type_key === type_key);\n};\n\nexport const isPlanActive = (\n  viewThisSession: SessionPlanInterface,\n  thisPlan: PlansInterface\n): \"OPEN\" | \"CLOSED\" | \"WAITING\" => {\n  if (viewThisSession.is_active) {\n    let today = new Date(),\n      planEndDate = new Date(thisPlan.end_date),\n      planStartDate = new Date(thisPlan.start_date);\n    if (\n      planEndDate.getTime() >= today.getTime() &&\n      planStartDate.getTime() <= today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"OPEN\";\n    } else if (\n      planStartDate.getTime() > today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"WAITING\";\n    }\n  }\n  return \"CLOSED\";\n};\n\ntype SessionDetailsProps = {\n  viewThisSession: SessionPlanInterface;\n  setViewThisSession: (data: SessionPlanInterface) => void;\n\n  // REDUX ----------------\n  updateSessionPlan: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype SessionDetailsState = {\n  loadingRequest: string;\n};\n\nexport class SessionDetails extends Component<\n  SessionDetailsProps,\n  SessionDetailsState\n> {\n  constructor(props: SessionDetailsProps) {\n    super(props);\n\n    this.state = {\n      loadingRequest: \"\",\n    };\n  }\n\n  handlePlanActivation = async (\n    session: SessionPlanInterface,\n    thisPlan: PlansInterface\n  ) => {\n    const newState: \"open\" | \"close\" = session.is_active ? \"close\" : \"open\";\n\n    if (!window.confirm(`Are you sure you want to ${newState} this plan?`)) {\n      return true;\n    }\n\n    if (!isActivationAllowed(thisPlan)) {\n      this.props.PushPopupAlert({\n        title: `Opening/Closing plan which has been expired is not allowed!`,\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    let newData: SessionPlanInterface = {\n      session_plan_name: session.session_plan_name,\n      period: session.period,\n      is_active: session.is_active,\n      plans: [],\n      createdAt: session.createdAt,\n      updatedAt: session.updatedAt,\n      session_plan_id: session.session_plan_id,\n    };\n    for (const key in session.plans) {\n      if (Object.prototype.hasOwnProperty.call(session.plans, key)) {\n        const element = session.plans[key];\n        if (thisPlan.type_key === element.type_key) {\n          if (thisPlan.type_status === SessionPlanTypeStatus.OPEN) {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.CLOSED,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          } else {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.OPEN,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          }\n        } else {\n          newData.plans.push(element);\n        }\n      }\n    }\n\n    console.log(\"====================================\");\n    console.log({ newData });\n    console.log(\"====================================\");\n\n    this.setState({ loadingRequest: thisPlan.type_key });\n    try {\n      const res = await axios.put<SessionPlanInterface>(\n        `${API.CLAIMING}/session/${session.session_plan_id}`,\n        newData\n      );\n      this.props.updateSessionPlan(res.data);\n      this.props.setViewThisSession(res.data);\n      this.props.PushPopupAlert({\n        title: `Session ${newState}d successfully`,\n        theme: PopupAlertTheme.info,\n      });\n      this.setState({ loadingRequest: \"\" });\n      console.log(\"updateSessionPlan: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.warning,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <table className=\"w-full bg-white shadow p-5\" id=\"session_content\">\n        <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n          <tr>\n            <td className=\"p-2\">#</td>\n            <td className=\"p-2\">Plan Type</td>\n            <td className=\"p-2\">Start Date</td>\n            <td className=\"p-2\">End date</td>\n            {this.props.viewThisSession.is_active && (\n              <td className=\"p-2\" colSpan={2}>\n                Status\n              </td>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {/* WHILE DATA FOUND ====================== */}\n          {this.props.viewThisSession.plans.map((item, index) => (\n            <tr\n              key={index + item._id}\n              className={`border-b border-gray-200 hover:bg-gray-100`}\n            >\n              <td className=\"p-2 text-left whitespace-nowrap\">{index + 1}</td>\n              <td className=\"p-2 text-left\">\n                <span className=\"text-lg\">\n                  {getPlanTypeByKey(item.type_key) &&\n                    capitalizeFirstLetter(\n                      getPlanTypeByKey(item.type_key)!.type_title\n                    )}\n                </span>\n              </td>\n              <td className=\"p-2 text-left\">{DATE(item.start_date)}</td>\n              <td className=\"p-2 text-left\">{DATE(item.end_date)}</td>\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isPlanActive(this.props.viewThisSession, item) === \"OPEN\" ? (\n                    <span className={`px-2 py-1 font-semibold text-green-700`}>\n                      Open\n                    </span>\n                  ) : isPlanActive(this.props.viewThisSession, item) ===\n                    \"WAITING\" ? (\n                    <span className={`px-2 py-1 font-semibold text-gray-700`}>\n                      Waiting\n                    </span>\n                  ) : (\n                    <span className={`px-2 py-1 font-semibold text-red-700`}>\n                      Closed\n                    </span>\n                  )}\n                </td>\n              )}\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isActivationAllowed(item) && (\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <div\n                        className={`relative ${\n                          this.state.loadingRequest.length > 0\n                            ? \"cursor-not-allowed\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title={\n                          item.type_status === SessionPlanTypeStatus.OPEN\n                            ? \"Deactivating session\"\n                            : \"Activating session\"\n                        }\n                        onClick={() =>\n                          this.state.loadingRequest.length <= 0 &&\n                          this.handlePlanActivation(\n                            this.props.viewThisSession,\n                            item\n                          )\n                        }\n                      >\n                        <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                        <span\n                          className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                            item.type_status === SessionPlanTypeStatus.CLOSED\n                              ? \"bg-red-500\"\n                              : \"bg-green-500 transform translate-x-full\"\n                          }`}\n                        ></span>\n                      </div>\n                      {this.state.loadingRequest === item.type_key && (\n                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                      )}\n                    </div>\n                  )}\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default connect(null, {\n  updateSessionPlan,\n  PushPopupAlert,\n})(SessionDetails);\n","export default __webpack_public_path__ + \"static/media/profile.a9136072.png\";","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  getMyClaims,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  PushPopupAlert,\n  DocumentClaimUser,\n  getMyAnswers,\n  getClaimReasons,\n} from \"../../actions\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../actions/document\";\nimport ApplicationFormView from \"../../containers/Claimings/Candidate/ApplicationFormView\";\nimport ChooseReason from \"../../containers/Claimings/Candidate/ChooseReason\";\nimport {\n  ClaimGetDocTitle,\n  isClaimAllowed,\n} from \"../../containers/Claimings/Candidate/ClaimForm\";\nimport DocFormView from \"../../containers/Claimings/Candidate/DocFormView\";\nimport FormApplicationList from \"../../containers/Claimings/Candidate/FormApplicationList\";\nimport FormDocumentList from \"../../containers/Claimings/Candidate/FormDocumentList\";\nimport { getCourseIdBySheetId } from \"../../containers/Claimings/Candidate/FormExamList\";\nimport {\n  PlansTypeKeys,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { ClaimingReducerType } from \"../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText } from \"../../utils/errors\";\nimport { DATE } from \"../../utils/functions\";\nimport { PopupAlertData } from \"../Alert/Popup\";\nimport Loading from \"../Loading/Loading\";\n\ntype ClaimFormProps = {\n  claim_type: PlansTypeKeys;\n  file_id: string;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  getMyAnswers: Function;\n  getClaimReasons: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n\n  // DEFAULT DATA ==========\n  candidateDocuments?: DocumentClaimUser[];\n  candidateAnswers?: ClaimExamResultsDetails[];\n  candidateApplications?: claimApplicationsInterface[];\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  chooseClaimReason: boolean;\n  claimReason: claimReasonInterface | null;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n};\n\nexport class ClaimFormComponent extends Component<\n  ClaimFormProps,\n  ClaimFormState\n> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      chooseClaimReason: false,\n      claimReason: null,\n    };\n  }\n\n  // GENERATE SET STATES FUNCTIONS\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  setChooseClaimReason = (value: boolean) => {\n    this.setState({ chooseClaimReason: value });\n  };\n\n  setClaimReason = (value: claimReasonInterface | null) => {\n    this.setState({ claimReason: value });\n  };\n\n  // CHECK IF PASSED ID IS VALID\n  isDocumentIdValid = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let doc = documents.find((item) => item.doc_id === doc_id);\n    if (doc) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (doc.validated_by.validation_status !== \"rejected\") {\n        return {\n          status: false,\n          msg: \"Only rejected document are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.success };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid document id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n  };\n\n  isApplicationIdValid = (\n    applications: claimApplicationsInterface[],\n    app_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    const app = applications.find((item) => item.application_id === app_id);\n    if (app) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (app.application_status !== ApplicationStates.Rejected) {\n        return {\n          status: false,\n          msg: \"Only rejected application are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid application id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n  };\n\n  isExamIdValid = (\n    exams: ClaimExamResultsDetails[],\n    exam_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    const exam = exams.find((item) => item.answer_sheet_id === exam_id);\n    if (exam) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (exam.total_marks === 100) {\n        return {\n          status: false,\n          msg: \"You can't claim on exam which you have 100%\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid answer sheet id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Application, please try again!\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  componentDidMount = () => {\n    if (this.props.auth.application_session === null) {\n      this.props.PushPopupAlert({\n        title: \"No session active session\",\n        theme: PopupAlertTheme.danger,\n      });\n      this.props.setFormState(false);\n      this.setState({\n        claimFileId: \"\",\n        thisClaimType: null,\n        thisClaimTypeId: \"\",\n        claimComment: \"\",\n        chooseClaimFile: false,\n        formType: \"DEFAULT\",\n        viewThisFile: \"\",\n        formError: null,\n      });\n    } else {\n      if (\n        this.props.documentReducer.documentCategory === null &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getDocumentCategory();\n      }\n      if (\n        this.props.documentReducer.documentSubCategory === null &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getDocumentSubCategory();\n      }\n      if (\n        this.props.documentReducer.documentFields === null &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getDocumentFields();\n      }\n      if (\n        this.props.claiming.candidateApplications === null &&\n        this.props.claim_type === PlansTypeKeys.APPLICATION\n      ) {\n        this.props.getMyRejectedApplications(\n          this.props.auth.user.user_id,\n          (\n            status: boolean,\n            msg: string,\n            data?: claimApplicationsInterface[]\n          ) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              if (data) {\n                // PROPS VALIDATION PROCESS ###############\n                if (\n                  this.props.claim_type &&\n                  this.props.file_id &&\n                  this.state.formType === \"DEFAULT\"\n                ) {\n                  if (this.props.claim_type === PlansTypeKeys.APPLICATION) {\n                    let _isApplicationIdValid = this.isApplicationIdValid(\n                      data,\n                      this.props.file_id\n                    );\n                    if (!_isApplicationIdValid.status) {\n                      this.props.PushPopupAlert({\n                        title: _isApplicationIdValid.msg,\n                        theme: _isApplicationIdValid.alert,\n                      });\n                      this.props.setFormState(false);\n                    } else {\n                      this.setState({\n                        thisClaimType: this.props.claim_type,\n                        claimFileId: this.props.file_id,\n                        formType: \"PROPS\",\n                      });\n                    }\n                  }\n                }\n              }\n            }\n          }\n        );\n      } else this.setLoading(false);\n\n      if (\n        this.props.claiming.candidateDocuments === null &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getMyRejectedDocuments(\n          (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              if (data) {\n                // PROPS VALIDATION PROCESS ###############\n                if (\n                  this.props.claim_type &&\n                  this.props.file_id &&\n                  this.state.formType === \"DEFAULT\"\n                ) {\n                  if (\n                    this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n                  ) {\n                    let _isDocumentIdValid = this.isDocumentIdValid(\n                      data,\n                      this.props.file_id\n                    );\n                    if (!_isDocumentIdValid.status) {\n                      this.props.PushPopupAlert({\n                        title: _isDocumentIdValid.msg,\n                        theme: _isDocumentIdValid.alert,\n                      });\n                      // setAlertError(_isDocumentIdValid.msg);\n                      this.props.setFormState(false);\n                    } else {\n                      this.setState({\n                        thisClaimType: this.props.claim_type,\n                        claimFileId: this.props.file_id,\n                        formType: \"PROPS\",\n                      });\n                    }\n                  }\n                }\n              }\n            }\n          }\n        );\n      } else this.setLoading(false);\n\n      if (\n        this.props.claiming.myAnswer === null &&\n        this.props.claim_type === PlansTypeKeys.EXAMINATION\n      ) {\n        this.props.getMyAnswers(\n          this.props.auth.application_session.session_plan_id,\n          this.props.auth.user.user_id,\n          (status: boolean, msg: string, data: ClaimExamResultsDetails[]) => {\n            this.setLoading(status);\n            if (!status && msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              console.log(\"====================================\");\n              console.log({ loadExamAnswers: data });\n              console.log(\"====================================\");\n            }\n          }\n        );\n      }\n\n      if (this.props.claiming.claimReasons === null) {\n        this.props.getClaimReasons((status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        });\n      }\n\n      if (this.props.claiming.myClaims === null) {\n        this.props.getMyClaims(\n          this.props.auth.user.user_id,\n          this.props.auth.application_session.session_plan_id,\n          (status: boolean, msg: string) => {\n            this.setLoading(status);\n            if (status === false && msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        );\n      } else this.setLoading(false);\n\n      // PROPS VALIDATION PROCESS ###############\n      if (\n        !isEmptyOrSpaces(this.props.claim_type) &&\n        !isEmptyOrSpaces(this.props.file_id) &&\n        this.state.formType === \"DEFAULT\"\n      ) {\n        this.setState({ thisClaimType: this.props.claim_type });\n        if (\n          this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION &&\n          this.props.claiming.candidateDocuments\n        ) {\n          let _isDocumentIdValid = this.isDocumentIdValid(\n            this.props.claiming.candidateDocuments,\n            this.props.file_id\n          );\n          if (!_isDocumentIdValid.status) {\n            this.props.PushPopupAlert({\n              title: _isDocumentIdValid.msg,\n              theme: _isDocumentIdValid.alert,\n            });\n            // setAlertError(_isDocumentIdValid.msg);\n            this.props.setFormState(false);\n          } else {\n            this.setState({\n              thisClaimType: this.props.claim_type,\n              claimFileId: this.props.file_id,\n              formType: \"PROPS\",\n            });\n          }\n        }\n        if (\n          this.props.claim_type === PlansTypeKeys.APPLICATION &&\n          this.props.claiming.candidateApplications\n        ) {\n          let _isApplicationIdValid = this.isApplicationIdValid(\n            this.props.claiming.candidateApplications,\n            this.props.file_id\n          );\n          if (!_isApplicationIdValid.status) {\n            this.props.PushPopupAlert({\n              title: _isApplicationIdValid.msg,\n              theme: _isApplicationIdValid.alert,\n            });\n            this.props.setFormState(false);\n          } else {\n            this.setState({\n              thisClaimType: this.props.claim_type,\n              claimFileId: this.props.file_id,\n              formType: \"PROPS\",\n            });\n          }\n        }\n\n        if (\n          this.props.claim_type === PlansTypeKeys.EXAMINATION &&\n          this.props.claiming.myAnswer\n        ) {\n          let _isExamIdValid = this.isExamIdValid(\n            this.props.claiming.myAnswer,\n            this.props.file_id\n          );\n          if (!_isExamIdValid.status) {\n            this.props.PushPopupAlert({\n              title: _isExamIdValid.msg,\n              theme: _isExamIdValid.alert,\n            });\n            this.props.setFormState(false);\n          } else {\n            this.setState({\n              thisClaimType: this.props.claim_type,\n              claimFileId: this.props.file_id,\n              formType: \"PROPS\",\n            });\n          }\n        }\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  loadUserById = async (user_id: string, callback: Function) => {\n    if (isEmptyOrSpaces(user_id)) {\n      return this.props.PushPopupAlert({\n        title: \"No user id provided\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface>(\n        `${API.AUTH}/users/${user_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ loadUserById: res });\n      console.log(\"====================================\");\n      if (res) {\n        callback(res.data);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  getClaimTitle = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    if (\n      claimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = ClaimGetDocTitle(\n        this.props.documentReducer,\n        this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          this.state.claimFileId\n        )\n      ).main;\n    }\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = this.getApplicationById(\n        this.props.claiming.candidateApplications,\n        this.state.claimFileId\n      ).position.position_title;\n    }\n    if (\n      claimType === PlansTypeKeys.EXAMINATION &&\n      this.props.claiming.myAnswer &&\n      getCourseIdBySheetId(this.props.claiming.myAnswer, this.state.claimFileId)\n    ) {\n      result = getCourseIdBySheetId(\n        this.props.claiming.myAnswer,\n        this.state.claimFileId\n      )!.course_name;\n    }\n    // if (\n    //   claimType === PlansTypeKeys.PLACEMENT_TRANSFER &&\n    //   this.state.myPlacement\n    // ) {\n    //   result = \"Placed on \" + this.state.myPlacement.placed.school.school_name;\n    // }\n\n    return result;\n  };\n\n  cleanToClose = () => {\n    this.props.setFormState(false);\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (!this.state.claimReason) {\n      return this.setFormError({\n        element: \"claim_reason\",\n        msg: `Please select the reason of your claim!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.props.auth.application_session) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n    let old_evaluator_email: string = \"info@system.com\";\n    let old_evaluator_name: string = \"System\";\n    let evaluator_email: string = \"\";\n    let evaluator_name: string = \"\";\n    let title: string = this.getClaimTitle(this.state.thisClaimType);\n\n    if (\n      this.state.thisClaimType !== PlansTypeKeys.EXAMINATION &&\n      this.getValidation(this.state.claimFileId).old_evaluated_by !== \"system\"\n    ) {\n      await this.loadUserById(\n        this.getValidation(this.state.claimFileId).old_evaluated_by,\n        (data: UserInterface) => {\n          old_evaluator_email = data.email;\n          old_evaluator_name =\n            data.user_info.fname + \" \" + data.user_info.lname;\n        }\n      );\n    }\n    this.setLoadingForm(true);\n    try {\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.props.auth.application_session.session_plan_id,\n          default_claim_resaons: this.state.claimReason.id,\n          reason: this.state.claimComment,\n          // old_reason: this.getValidation(this.state.claimFileId).old_reason,\n          // old_status: this.getValidation(this.state.claimFileId).old_status,\n          // old_evaluated_by: this.getValidation(this.state.claimFileId)\n          //   .old_evaluated_by,\n          old_reason:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"System\"\n              : this.getValidation(this.state.claimFileId).old_reason,\n          old_status:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Failed\"\n              : this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"\"\n              : this.getValidation(this.state.claimFileId).old_evaluated_by,\n          old_evaluator_email,\n          old_evaluator_name,\n          evaluator_email,\n          evaluator_name,\n          title,\n        }\n      );\n      console.log(\"====================================\");\n      console.log({ createClaim: res.data });\n      console.log(\"====================================\");\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose();\n        this.props.setFormState(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setFormState(false);\n    this.setLoadingForm(false);\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  getClaimById = (\n    myClaims: CandidateClaimInterface[],\n    fileId: string,\n    sessionId: string\n  ): CandidateClaimInterface | undefined => {\n    return myClaims.find(\n      (item) => item.claiming_on_id === fileId && item.period_id === sessionId\n    );\n  };\n\n  render() {\n    // CHECK IF STILL LOADING DATA ===============\n    if (\n      this.props.auth.application_session !== null &&\n      (this.state.loading ||\n        (this.props.claiming.myClaims === null &&\n          !isEmptyOrSpaces(this.props.file_id) &&\n          !isEmptyOrSpaces(this.props.claim_type)))\n    ) {\n      return <Loading />;\n    }\n\n    if (\n      this.props.claiming.myClaims &&\n      this.props.auth.application_session &&\n      this.getClaimById(\n        this.props.claiming.myClaims,\n        this.props.file_id,\n        this.props.auth.application_session.session_plan_id\n      ) !== undefined\n    ) {\n      return (\n        <div>\n          <h2 className=\"text-center text-2xl font-bold p-3 text-gray-500\">\n            Claims on this {this.displayClaimType(this.props.claim_type!)}\n          </h2>\n          {this.getClaimById(\n            this.props.claiming.myClaims,\n            this.props.file_id,\n            this.props.auth.application_session.session_plan_id\n          )!.claims.length >= 1 ? (\n            <div>\n              {this.getClaimById(\n                this.props.claiming.myClaims,\n                this.props.file_id,\n                this.props.auth.application_session.session_plan_id\n              )!.claims.map((itm) => (\n                <div className=\"p-2 border rounded mb-2\">\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Created date:</span>{\" \"}\n                    <b>{DATE(itm.createdAt)}</b>\n                  </div>\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Reason:</span>{\" \"}\n                    <p>{itm.reason}</p>\n                  </div>\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Evaluation comment:</span>{\" \"}\n                    <p>{itm.evaluation_comment}</p>\n                  </div>\n                  <div className=\"p-1\">\n                    <span className=\"text-gray-400 block\">decision:</span>{\" \"}\n                    <h3 className=\"text-xl font-bold\">\n                      {itm.decision_taken_status}\n                    </h3>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div>No claims found!</div>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"pb-3\">\n        {/* CLAIM FORM ============================================== */}\n        {this.state.viewThisFile.length <= 0 && (\n          <form onSubmit={(e) => this.handleSubmit(e)}>\n            <div className=\"px-6 pb-3\">\n              {this.state.alertError && (\n                <div\n                  className=\"alert-warning cursor-pointer\"\n                  onClick={() => this.setAlertError(null)}\n                >\n                  {this.state.alertError}\n                </div>\n              )}\n              <div className=\"text-base text-gray-700 sm:text-lg\">\n                {/* SELECT CLAIM TYPE ============================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>Claim type</label>\n                  <select\n                    className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                      this.state.formType === \"PROPS\" && \"cursor-not-allowed\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_type\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                      this.selectClaimType(e.target.value);\n                      this.setClaimFileId(\"\");\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_type\" &&\n                        this.setFormError(null);\n                    }}\n                    value={\n                      this.state.thisClaimType ? this.state.thisClaimType : \"\"\n                    }\n                    disabled={\n                      this.state.loadingForm || this.state.formType === \"PROPS\"\n                    }\n                  >\n                    <option value=\"\">Choose claim type</option>\n                    {Object.values(PlansTypeKeys).map((item, index) => (\n                      <option value={item} key={index + item}>\n                        {capitalizeFirstLetter(\n                          item.toLocaleLowerCase().replace(/_/g, \" \")\n                        )}\n                      </option>\n                    ))}\n                  </select>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_type\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END SELECT CLAIM TYPE ============================================== */}\n\n                {/* SELECT FILE TO CLAIM ON ============================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>\n                    {this.generateChooseFileTitle(this.state.thisClaimType)}\n                  </label>\n                  <div\n                    className={`text-left bg-white border-2 ${\n                      this.state.formType !== \"PROPS\"\n                        ? \"border-gray-700\"\n                        : \"border-gray-400 text-gray-500\"\n                    } rounded w-full ${\n                      this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_file\"\n                        ? \"border-red-500\"\n                        : \"\"\n                    } border-2 ${\n                      this.state.thisClaimType &&\n                      !this.state.chooseClaimFile &&\n                      this.state.formType !== \"PROPS\"\n                        ? \"cursor-pointer\"\n                        : !this.state.chooseClaimFile && \"cursor-not-allowed\"\n                    }`}\n                    title={\n                      !this.state.thisClaimType\n                        ? \"Choose claim type first!\"\n                        : \"\"\n                    }\n                    onClick={() => {\n                      this.state.formType === \"DEFAULT\" &&\n                        this.state.thisClaimType &&\n                        !this.state.chooseClaimFile &&\n                        this.setChooseClaimFile(true);\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_file\" &&\n                        this.setFormError(null);\n                    }}\n                  >\n                    {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                    {this.state.claimFileId.length > 0 &&\n                    !this.state.chooseClaimFile ? (\n                      <p className=\"my-1 mx-2\">\n                        {this.state.thisClaimType ===\n                          PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          ClaimGetDocTitle(\n                            this.props.documentReducer,\n                            this.getDocumentById(\n                              this.props.claiming.candidateDocuments,\n                              this.state.claimFileId\n                            )\n                          ).main}\n                        {this.state.thisClaimType ===\n                          PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.getApplicationById(\n                            this.props.claiming.candidateApplications,\n                            this.state.claimFileId\n                          ).position.position_title}\n                      </p>\n                    ) : (\n                      !this.state.chooseClaimFile && (\n                        <p className=\"my-1 mx-2\">\n                          Select Claim{\" \"}\n                          {this.state.thisClaimType &&\n                            this.state.thisClaimType\n                              .toLocaleLowerCase()\n                              .replace(/_/g, \" \")}\n                        </p>\n                      )\n                    )}\n                    {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                    {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                    {this.state.chooseClaimFile &&\n                      this.state.thisClaimType ===\n                        PlansTypeKeys.DOCUMENT_VALIDATION &&\n                      this.props.claiming.candidateDocuments &&\n                      this.props.claiming.myClaims &&\n                      this.props.auth.application_session && (\n                        <FormDocumentList\n                          setChooseClaimFile={this.setChooseClaimFile}\n                          setClaimFileId={this.setClaimFileId}\n                          setViewThisFile={this.setViewThisFile}\n                          claimFileId={this.state.claimFileId}\n                          viewThisFile={this.state.viewThisFile}\n                          candidateDocuments={\n                            this.props.claiming.candidateDocuments\n                          }\n                          documentCategories={this.props.documentReducer}\n                          myClaims={this.props.claiming.myClaims}\n                          activeSession={this.props.auth.application_session}\n                        />\n                      )}\n                    {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                    {/* LISTING OF REJECTED APPLICATION ============================ */}\n                    {this.state.chooseClaimFile &&\n                      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                      this.props.claiming.candidateApplications &&\n                      this.props.claiming.myClaims &&\n                      this.props.auth.application_session && (\n                        <FormApplicationList\n                          setChooseClaimFile={this.setChooseClaimFile}\n                          setClaimFileId={this.setClaimFileId}\n                          setViewThisFile={this.setViewThisFile}\n                          claimFileId={this.state.claimFileId}\n                          viewThisFile={this.state.viewThisFile}\n                          candidateApplications={\n                            this.props.claiming.candidateApplications\n                          }\n                          myClaims={this.props.claiming.myClaims}\n                          activeSession={this.props.auth.application_session}\n                        />\n                      )}\n                    {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                  </div>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_file\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                {/* CLAIM REASONS ========================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>Choose reason of your claim</label>\n                  <div\n                    className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                      this.state.chooseClaimReason ? \"h-64\" : \"h-auto\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_reason\"\n                        ? \"border-red-500\"\n                        : \"\"\n                    } border-2 ${\n                      this.props.claiming.claimReasons === null\n                        ? \"cursor-wait\"\n                        : \"cursor-pointer\"\n                    }`}\n                    title=\"Choose the reason for your claim!\"\n                    onClick={() => {\n                      !this.state.chooseClaimReason &&\n                        this.setState({ chooseClaimReason: true });\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_reason\" &&\n                        this.setFormError(null);\n                    }}\n                  >\n                    {/* DISPLAYING SELECTED REASON ============================ */}\n                    {this.state.claimReason && !this.state.chooseClaimReason ? (\n                      <p className=\"my-1 mx-2\">\n                        {this.state.claimReason.reason}\n                      </p>\n                    ) : (\n                      !this.state.chooseClaimReason && (\n                        <p className=\"my-1 mx-2\">Select reason</p>\n                      )\n                    )}\n                    {/* END DISPLAYING SELECTED REASON ============================ */}\n\n                    {/* LISTING OF CLAIM REASONS ============================ */}\n                    {this.state.chooseClaimReason &&\n                      this.props.claiming.claimReasons && (\n                        <ChooseReason\n                          setChooseClaimReason={this.setChooseClaimReason}\n                          setClaimReason={this.setClaimReason}\n                          claimReason={this.state.claimReason}\n                          allClaimReasons={this.props.claiming.claimReasons}\n                        />\n                      )}\n                    {/* END LISTING OF CLAIM REASONS ============================ */}\n                  </div>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_reason\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END CLAIM REASONS ========================================== */}\n\n                {/* CLAIM COMMENT ============================================== */}\n                <div className=\"flex flex-col\">\n                  <label>Comment</label>\n                  <textarea\n                    className={`text-left input-white w-20 inline-block ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_comment\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    placeholder={`Claim comment`}\n                    style={{ resize: \"none\" }}\n                    value={this.state.claimComment}\n                    onChange={(e) => {\n                      this.setClaimComment(e.target.value);\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" &&\n                        this.setFormError(null);\n                    }}\n                    rows={3}\n                    disabled={this.state.loadingForm}\n                  ></textarea>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_comment\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END CLAIM COMMENT ============================================== */}\n              </div>\n              <div className=\"pt-3 flex justify-between\">\n                <button\n                  onClick={() => this.cleanToClose()}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                    this.state.loadingForm && \"cursor-not-allowed\"\n                  }`}\n                  type=\"button\"\n                  disabled={this.state.loadingForm}\n                >\n                  Exit\n                </button>\n                <button\n                  className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                    this.state.loadingForm && \"cursor-wait\"\n                  }`}\n                  type=\"submit\"\n                  disabled={this.state.loadingForm}\n                >\n                  {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                </button>\n              </div>\n            </div>\n          </form>\n        )}\n        {/* END CLAIM FORM ============================================== */}\n\n        {/* CLAIM DOCUMENT VIEW ============================================== */}\n        {this.state.viewThisFile.length > 0 &&\n          this.props.claiming.candidateDocuments &&\n          this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION && (\n            <DocFormView\n              thisDoc={this.getDocumentById(\n                this.props.claiming.candidateDocuments,\n                this.state.viewThisFile\n              )}\n              setViewThisFile={this.setViewThisFile}\n              documentCategories={this.props.documentReducer}\n              setChooseClaimFile={this.setChooseClaimFile}\n              setClaimFileId={this.setClaimFileId}\n            />\n          )}\n        {/* END CLAIM DOCUMENT VIEW ============================================== */}\n        {/* CLAIM APPLICATION VIEW ============================================== */}\n        {this.state.viewThisFile.length > 0 &&\n          this.props.claiming.candidateApplications &&\n          this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n            <ApplicationFormView\n              thisApplication={this.getApplicationById(\n                this.props.claiming.candidateApplications,\n                this.state.viewThisFile\n              )}\n              documentCategories={this.props.documentReducer}\n              setChooseClaimFile={this.setChooseClaimFile}\n              setClaimFileId={this.setClaimFileId}\n              setViewThisFile={this.setViewThisFile}\n            />\n          )}\n        {/* END CLAIM APPLICATION VIEW ============================================== */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n}: StoreState): {\n  auth: Auth;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n} => {\n  return {\n    auth: auth,\n    documentReducer: document,\n    claiming,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getMyClaims,\n  getMyAnswers,\n  getClaimReasons,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(ClaimFormComponent);\n"],"sourceRoot":""}
{"version":3,"sources":["actions/users.ts","components/Table/Table.tsx","components/Navigation/SideNavigation.tsx","actions/claiming.ts","actions/session.ts","actions/document.ts","actions/settings.ts","containers/Claimings/Candidate/ClaimForm.tsx","containers/Claimings/Admin/AdminClaimAppView.tsx","containers/Claimings/Admin/AdminClaimDocView.tsx","containers/Claimings/Admin/index.tsx","shared/interfaces.tsx","containers/Claimings/ClaimDocView.tsx","containers/Positions/ViewRequirements.tsx","containers/Claimings/Candidate/ApplicationFormView.tsx","containers/Claimings/ClaimHeaderTitle.tsx","containers/Claimings/Admin/AdminFilterByType.tsx","containers/SessionSettings/SessionDetails.tsx","containers/Claimings/Candidate/DocFormView.tsx","containers/Claimings/Candidate/FormApplicationList.tsx","containers/Claimings/Candidate/FormDocumentList.tsx","containers/Claimings/Candidate/index.tsx","containers/Claimings/Candidate/FilterByType.tsx","containers/Claimings/ClaimApplView.tsx"],"names":["documentValidationStatus","fetchUserAccess","dispatch","a","setAxiosToken","axios","get","API","AUTH","res","console","log","users_response","type","ActionTypes","FETCH_USERS_ACCESS","payload","data","users","error","user_error","blockUserToSystem","BLOCK_USER_TO_SYSTEM","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","verifyAllDocument","VERIFY_ALL_DOCUMENT","Table","table","tr","rows","columns","hideColumns","pagination","search","tableSize","tableClass","tableId","rounded","searchBG","thColor","loading","length","result","characters","charactersLength","i","charAt","Math","floor","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","map","style","display","className","placeholder","onChange","e","filterType","filter","td","cols","toLowerCase","textContent","innerText","indexOf","filterTable","target","value","disabled","Number","id","column","index","padding","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","_SideNavigation","props","componentDidMount","PageHasSubNav","componentWillUnmount","state","this","auth","isAuthenticated","navActive","system","navigation","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","SubItemContainer","SubItem","GetClaimingTypes","callback","CLAIMING","claimtYPES","claim_types","status","GET_CLAIMING_TYPES","errorToText","setSelectedClaimType","thisType","SELECT_CLAIM_TYPE","createClaim","CREATE_CLAIM","createReClaim","RE_CLAIM","evaluateClaim","EVALUATE_CLAIM","getMyClaims","user_id","period_id","order","sortBy","post","user","api_claim","GET_MY_CLAIMS","getMyRejectedApplications","APPLICATION","claimPersonalApplication","application","GET_CANDIDATES_APPLICATIONS","getMyRejectedDocuments","claimPersonalDocuments","details","key","dataRejected","validation_status","push","claimPersonalDocumentDetails","GET_CANDIDATES_DOCUMENTS","getAllClaims","claim_level","GET_ALL_CLAIMS","getAllApplications","GET_ALL_APPLICATION","GetPlansTypes","GET_PLANS_TYPES","plan_types","setSelectedPlanType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","undefined","is_active","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","getDocumentCategory","docCategory","GET_DOCUMENT_CATEGORY","createDocumentCategory","CREATE_DOCUMENT_CATEGORY","updateDocumentCategory","UPDATE_DOCUMENT_CATEGORY","deleteDocumentCategory","DELETE_DOCUMENT_CATEGORY","getDocumentSubCategory","docSubCategory","GET_DOCUMENT_SUB_CATEGORY","doc_SUB_category_error","createDocumentSubCategory","CREATE_DOCUMENT_SUB_CATEGORY","updateDocumentSubCategory","UPDATE_DOCUMENT_SUB_CATEGORY","deleteDocumentSubCategory","DELETE_DOCUMENT_SUB_CATEGORY","getDocumentFields","docFields","GET_DOCUMENT_FIELDS","createDocumentFields","CREATE_DOCUMENT_FIELDS","updateDocumentFields","reducer","UPDATE_DOCUMENT_FIELDS","deleteDocumentFields","DELETE_DOCUMENT_FIELDS","getCandidatesInInstitute","educatin_type_id","url","newArray","element","GET_CANDIDATE_IN_INSTITUTE","verifyDocument","action_verify","VERIFY_DOCUMENT","getSystemSettings","GET_SYSTEM_SETTINGS","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","getApplicationSessions","GET_APPLICATION_SESSIONS","createAplicationSession","CREATE_APPLICATION_SESSIONS","updateAplicationSession","check","UPDATE_APPLICATION_SESSIONS","disableApplicationSession","DISABLE_APPLICATION_SESSION","getPositions","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","ClaimGetDocTitle","documentCategories","doc","DocCategory","DocSubCategory","DocField","DocTitle","sub_category_id","documentSubCategory","c","user_detail_subcategory_id","category_id","documentCategory","user_detail_category_id","category_subcategory_data","category_subcategory_Data_id","documentFields","_id","category","sub_category","field","main","isClaimAllowed","allClaim","claimOnId","find","item","claiming_on_id","ClaimForm","isDocumentIdValid","documents","doc_id","validated_by","msg","alert","PopupAlertTheme","info","claiming","myClaims","activeSession","session_plan_id","success","warning","isApplicationIdValid","applications","app_id","app","application_id","application_status","ApplicationStates","Rejected","setLoading","setState","setLoadingForm","loadingForm","setFormError","formError","setAlertError","alertError","setClaimFileId","claimFileId","setViewThisFile","viewThisFile","setChooseClaimFile","chooseClaimFile","setClaimComment","claimComment","isClaimTypeOpen","thisSession","PlansTypeKeys","plans","type_key","isPlanActive","DOCUMENT_VALIDATION","PLACEMENT_TRANSFER","isClaimBtnValid","file_id","claim_type","PushPopupAlert","theme","setFormState","thisClaimType","thisClaimTypeId","formType","displayClaimType","claimType","EXAMINATION","MARKS_PUBLICATION","isClaimsAllowed","thisPeriod","danger","sessionPlan","activeSessionPlan","_isClaimsAllowed","documentReducer","candidateApplications","_isApplicationIdValid","candidateDocuments","_isDocumentIdValid","getDocumentById","getApplicationById","getValidation","thisId","old_reason","old_status","old_evaluated_by","comment","override_by","cleanToClose","response","handleSubmit","preventDefault","isEmptyOrSpaces","toLocaleLowerCase","reason","selectClaimType","thisClaim","generateChooseFileTitle","formState","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","extraLarge","medium","body","footer","onSubmit","Object","values","capitalizeFirstLetter","replace","position","position_title","resize","thisDoc","thisApplication","viewTabs","FC_AdminApplicationPositionDistinctCategory","thisPosition","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","requirements","req","thisRequirements","thisCategory","thisSubCategory","subcategory","thisField","position_requirement","required","category_title","subcategory_id","subcategory_title","field_title","field_id","includes","reAssessApplication","loadingRequest","setLoadingRequest","actionTaken","setActionTaken","responseMsg","setResponseMsg","profile","selectedTab","setSelectedTab","handleVerify","subClaim","claims","level","api_body","sub_claim_id","evaluation_comment","evaluated_by","decision_taken_status","put","evaluate_claim_res","ClaimDecisionStatus","ACCEPTED","overrideDecision","patch","Shortlisted","getPositionById","position_id","systemPositions","description","school_level_id","school_level_name","education_institute_id","education_category_title","courses","course_name","course_code","course_id","NoResult","NoResultThemes","Dark","ViewRequirements","showEvaluator","userList","previous","DATE","createdAt","claim","showDate","timestampToDate","date_created","timeFR","isClaimEvaluated","REJECTED","getUserDocuments","user_info","fname","lname","last_claim_status","ClaimStatus","PENDING","window","confirm","FC_DocValidation","DocValidationStatusInterface","APPROVED","api_redux","date","FC_shortListing","candidate_id","candidateId","setViewImage","viewImage","adminDisplayClaimTitle","commet","src","AUTH_FILES","files","alt","DELETED","thisUser","AdminClaimGetDocTitle","allApplications","AdminClaim","system_settings","application_sessions","allSessionPlans","setThisPeriod","loadingSession","setLoadingSession","periodChanged","setPeriodChanged","loadingPosition","setLoadingPosition","loadingApplications","setLoadingApplications","loadingClaims","setLoadingClaims","loadingDocuments","setLoadingDocuments","loadingClarifications","setLoadingClarifications","loadingUsers","setLoadingUsers","loadingFields","setLoadingFields","viewClaim","setViewClaim","claimId","setClaimId","setClaimType","setCandidateId","allClaims","displayClaimName","displayClaimTitle","AdminFilterByType","ClaimHeaderTitle","headerTitle","selectedClaimType","onPeriodChange","claimTypes","filterClaimsByClaimType","Light","whichClaimType","whichClaimStatus","classes","getClaimById","ClaimTypesInterface","DOCUMENT","PostRequestStatusInterface","DocumentAttributesInterface","SESSION_PLAN_KEYS","isReclaimAllowed","_thisClaim","claim_status","EVALUATED","reClaimingMsg","setReClaimingMsg","setReClaiming","reClaiming","colSpan","FC_ApplicationPositionDistinctCategory","category_subcategory_data_id","isLoading","sessions","selectPeriod","session","session_plan_name","claimList","loadingClaimTypes","setLoadingClaimTypes","countClaims","Fragment","isActivationAllowed","thisPlans","today","Date","end_date","getTime","getPlanTypeByKey","allPlanTypes","viewThisSession","thisPlan","planEndDate","planStartDate","start_date","type_status","SessionPlanTypeStatus","CLOSED","SessionDetails","handlePlanActivation","newState","newData","period","updatedAt","prototype","hasOwnProperty","call","OPEN","type_id","type_title","allowed_claim_level","history","setViewThisSession","getRejectedApplicants","applicationData","FormApplicationList","objList","text","searchInput","setSearchInput","product","flag","prop","toString","DocumentTitleData","documentData","documentTemp","company","email","end_year","names","phone_number","school","school_id","start_year","year","doc_title","getRejectedDocuments","rejected","FormDocumentList","ClaimTypesEnum","loadingRejectedApplications","setLoadingRejectedApplications","loadingRejectedDocuments","setLoadingRejectedDocuments","COMPLETED","setViewPosition","viewPosition","document_id","claim_id","exam","marks_publication","placement","displayDocClaimTitle","CandidateClaim","claimForm","setClaimForm","thisCLaim","handleDelete","ClaimApplView"],"mappings":"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","file":"static/js/10.6817b7d7.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\ninterface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserInterface[];\n}\n\ninterface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: string;\n}\n\ninterface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: AssignRoleToUserActionInterface;\n}\n\ninterface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: CustomeAccessInterface;\n}\n\ninterface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: string;\n}\n\ntype fetchUserAccessInterface = {\n  users: UserInterface[];\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n}\n\ninterface VerifyAllDocumentAction {\n  type: ActionTypes.VERIFY_ALL_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction\n  | VerifyAllDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const fetchUserAccess = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${API.AUTH}/users?page=1&limit=500`\n      );\n      console.log({ users_response: res });\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: res.data.users,\n      });\n    } catch (error) {\n      console.error({ user_error: error });\n    }\n  };\n};\n\nexport const blockUserToSystem = (data: string) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface\n) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: data,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const customizeUserAccess = (data: CustomeAccessInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const verifyAllDocument = (data: VerifyDocumentInterface) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyAllDocumentAction>({\n      type: ActionTypes.VERIFY_ALL_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = ({\n  rows,\n  columns,\n  hideColumns = false,\n  pagination = false,\n  search = false,\n  tableSize = \"w-full\",\n  tableClass,\n  tableId = \"myTable\",\n  rounded = false,\n  searchBG = \"bg-gray-200\",\n  thColor = \"blue\",\n  loading = false,\n}) => {\n  const startPage = 1;\n  tableId = tableId === \"myTable\" ? FC_makeID() : tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${tableSize}`}>\n      {/* search box  */}\n      {search && (\n        <div className={`${searchBG} w-full mb-2`}>\n          {search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={loading}\n              />\n\n              {pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <table\n        className={\n          tableClass\n            ? tableClass\n            : `w-full shadow ${\n                rounded && \"sm:rounded-lg\"\n              } table-auto order-table`\n        }\n        id={tableId}\n      >\n        {!hideColumns && (\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n            <tr\n              className={`text-left tracking-wide bg-${thColor}-100 border-b-2 border-${thColor}-500 text-${thColor}-600`}\n            >\n              {columns.map((column, index) => (\n                <th\n                  key={index}\n                  className={`${column.padding} text-${\n                    column.alignText\n                  } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                  onClick={() =>\n                    column.isSortAllowed && sortThisColumn(tableId, index)\n                  }\n                >\n                  <div className=\"flex items-center gap-1\">\n                    {column.columnTitle}\n                    {column.isSortAllowed && <BiSort />}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n        )}\n        <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n          {rows()}\n        </tbody>\n      </table>\n      {pagination && (\n        <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n          <div>\n            <span className=\"text-xs xs:text-sm text-gray-900\">\n              Showing 1 to {pageSize} of {totalItems - 1} Entries\n            </span>\n          </div>\n          <div>\n            <nav className=\"inline-flex shadow-sm\">\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                    currentPage !== 1 && \"bg-white\"\n                  }`}\n                  aria-label=\"Previous\"\n                  disabled={currentPage === 1 || loading}\n                  onClick={() => setCurrentPage(currentPage - 1)}\n                >\n                  <MdNavigateBefore className=\"h-5 w-5\" />\n                </button>\n              </div>\n              <div>\n                {pages &&\n                  pages.map((page, pageIndex) => (\n                    <button\n                      key={pageIndex}\n                      className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                        page !== currentPage\n                          ? \"bg-white\"\n                          : \"bg-gray-100 cursor-default\"\n                      }`}\n                      disabled={page === currentPage || loading}\n                      onClick={() => setCurrentPage(page)}\n                    >\n                      {page}\n                    </button>\n                  ))}\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                    currentPage !== totalPages && \"bg-white\"\n                  }`}\n                  aria-label=\"Next\"\n                  disabled={currentPage === totalPages || loading}\n                  onClick={() => setCurrentPage(currentPage + 1)}\n                >\n                  <MdNavigateNext className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </nav>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { CategorySubcategoryData } from \"../interfaces/candidatesInterfaces\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimTypesInterfaceAPI,\n  PlansTypeKeys,\n} from \"../interfaces\";\n\nexport interface DocumentClaimUser {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CANDIDATE_APPLICATIONS\nexport interface GetCandidateApplicationsAction {\n  type: ActionTypes.GET_CANDIDATES_APPLICATIONS;\n  payload: claimApplicationsInterface[];\n}\n\n// CREATE PERSONAL CLAIM\nexport interface CreateClaimAction {\n  type: ActionTypes.CREATE_CLAIM;\n  payload: CandidateClaimInterface;\n}\n\n// EVALUATE CANDIDATE CLAIM\nexport interface EvaluateClaimAction {\n  type: ActionTypes.EVALUATE_CLAIM;\n  payload: CandidateClaimInterface;\n}\n\n// CREATE PERSONAL CLAIM\nexport interface CreateReClaimAction {\n  type: ActionTypes.RE_CLAIM;\n  payload: CandidateClaimInterface;\n}\n\n// CANDIDATE_DOCUMENTS\nexport interface GetCandidateDocumentsAction {\n  type: ActionTypes.GET_CANDIDATES_DOCUMENTS;\n  payload: DocumentClaimUser[];\n}\n\n// CLAIM TYPES =====================================\nexport interface GetClaimingTypesAction {\n  type: ActionTypes.GET_CLAIMING_TYPES;\n  payload: ClaimTypesInterfaceAPI[];\n}\n\n// SET CLAIM TYPE =====================================\nexport interface setSelectedClaimTypeActions {\n  type: ActionTypes.SELECT_CLAIM_TYPE;\n  payload: PlansTypeKeys | \"all\";\n}\n\n// MY PERSONAL CLAIMS\nexport interface GetMyClaimsAction {\n  type: ActionTypes.GET_MY_CLAIMS;\n  payload: CandidateClaimInterface[];\n}\n\n// ALL CANDIDATES CLAIMS\nexport interface GetAllClaimsAction {\n  type: ActionTypes.GET_ALL_CLAIMS;\n  payload: CandidateClaimInterface[];\n}\n\n// GET ALL APPLICATIONS BY PERIOD\nexport interface GetAllApplicationsAction {\n  type: ActionTypes.GET_ALL_APPLICATION;\n  payload: allClaimApplicationInterface[];\n}\n\nexport type ClaimingActionType =\n  | GetCandidateApplicationsAction\n  | GetCandidateDocumentsAction\n  | GetClaimingTypesAction\n  | setSelectedClaimTypeActions\n  | CreateClaimAction\n  | GetMyClaimsAction\n  | GetAllClaimsAction\n  | EvaluateClaimAction\n  | CreateReClaimAction\n  | GetAllApplicationsAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CLAIM TYPES ==========================\nexport const GetClaimingTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<ClaimTypesInterfaceAPI[]>(\n        `${API.CLAIMING}/claim-type`\n      );\n      console.log({ claimtYPES: res.data });\n      let claim_types: ClaimTypesInterfaceAPI[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          claim_types = res.data;\n        }\n      }\n      dispatch<GetClaimingTypesAction>({\n        type: ActionTypes.GET_CLAIMING_TYPES,\n        payload: claim_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// SELECT CLAIM TYPES ==========================\nexport const setSelectedClaimType = (\n  thisType: PlansTypeKeys | \"all\"\n): setSelectedClaimTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_CLAIM_TYPE,\n    payload: thisType,\n  };\n};\n\n// CREATE PERSONAL CLAIM\nexport const createClaim = (data: CandidateClaimInterface) => {\n  return {\n    type: ActionTypes.CREATE_CLAIM,\n    payload: data,\n  };\n};\n\n// CREATE PERSONAL RECLAIM\nexport const createReClaim = (data: CandidateClaimInterface) => {\n  return {\n    type: ActionTypes.RE_CLAIM,\n    payload: data,\n  };\n};\n\n// EVALUATE CANDIDATE CLAIM\nexport const evaluateClaim = (data: CandidateClaimInterface) => {\n  return {\n    type: ActionTypes.EVALUATE_CLAIM,\n    payload: data,\n  };\n};\n\n// MY PERSONAL CLAIMS\nexport const getMyClaims = (\n  user_id: string,\n  period_id: string,\n  callback: Function,\n  order: \"desc\" | \"asc\" = \"desc\",\n  sortBy: \"createdAt\" | \"last_claim_status\" = \"createdAt\"\n) => {\n  console.log({ user_id, period_id });\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface[]>(\n        `${API.CLAIMING}/user`,\n        {\n          order,\n          sortBy,\n          filter: {\n            user: user_id,\n            period_id,\n          },\n        }\n      );\n      console.log({ api_claim: res.data });\n\n      dispatch<GetMyClaimsAction>({\n        type: ActionTypes.GET_MY_CLAIMS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.error(error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// PERSONAL APPLICATION\nexport const getMyRejectedApplications = (\n  user_id: string,\n  callback: Function\n) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<claimApplicationsInterface[]>(\n        `${API.APPLICATION}/application/${user_id}`\n      );\n      console.log({ claimPersonalApplication: res.data });\n      let application: claimApplicationsInterface[] = res.data;\n      dispatch<GetCandidateApplicationsAction>({\n        type: ActionTypes.GET_CANDIDATES_APPLICATIONS,\n        payload: application,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.error(error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// PERSONAL APPLICATION\nexport const getMyRejectedDocuments = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<{\n        n_id: string;\n        fname: string;\n        lname: string;\n        district: string;\n        phone_number: string;\n        email: string;\n        details: DocumentClaimUser[];\n      }>(`${API.AUTH}/currentdet`);\n      console.log({ claimPersonalDocuments: res.data });\n      let details: DocumentClaimUser[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.details.length > 0) {\n          let dataRejected: DocumentClaimUser[] = [];\n          for (const key in res.data.details) {\n            if (res.data.details[key].validation_status !== \"waiting\") {\n              dataRejected.push(res.data.details[key]);\n            }\n          }\n          details = dataRejected;\n        }\n      }\n      console.log({ claimPersonalDocumentDetails: details });\n\n      dispatch<GetCandidateDocumentsAction>({\n        type: ActionTypes.GET_CANDIDATES_DOCUMENTS,\n        payload: details,\n      });\n      callback(false, \"\", details);\n    } catch (error) {\n      console.error(error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL CLAIM\nexport const getAllClaims = (\n  claim_level: number,\n  period_id: string,\n  callback: Function,\n  order: \"desc\" | \"asc\" = \"desc\",\n  sortBy: \"createdAt\" | \"last_claim_status\" = \"createdAt\"\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface[]>(\n        `${API.CLAIMING}/user`,\n        {\n          order,\n          sortBy,\n          filter: {\n            claim_level: 2,\n            period_id,\n          },\n        }\n      );\n      console.log({ api_claim: res.data });\n\n      dispatch<GetAllClaimsAction>({\n        type: ActionTypes.GET_ALL_CLAIMS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error(error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getAllApplications = (period_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<allClaimApplicationInterface[]>(\n        `${API.APPLICATION}/applicationbyperiod/${period_id}`\n      );\n      console.log({ api_claim: res.data });\n\n      dispatch<GetAllApplicationsAction>({\n        type: ActionTypes.GET_ALL_APPLICATION,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error(error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PlansTypeInterface, SessionPlanInterface } from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  CandidatesInterface,\n  DocumentCategoryInterface,\n  DocumentFieldsInterface,\n  DocumentSubCategoryInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { VerifyDocumentInterface } from \"./users\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CATEGORY\nexport interface GetDocumentCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface[];\n}\n\nexport interface CreateDocumentCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface UpdateDocumentCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface DeleteDocumentCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_CATEGORY;\n  payload: string;\n}\n\n// SUB CATEGORY\nexport interface GetDocumentSubCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface[];\n}\n\nexport interface CreateDocumentSubCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface UpdateDocumentSubCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface DeleteDocumentSubCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY;\n  payload: string;\n}\n\n// FIELDS\nexport interface GetDocumentFieldsAction {\n  type: ActionTypes.GET_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface[];\n}\n\nexport interface CreateDocumentFieldsAction {\n  type: ActionTypes.CREATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface UpdateDocumentFieldsAction {\n  type: ActionTypes.UPDATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface DeleteDocumentFieldsAction {\n  type: ActionTypes.DELETE_DOCUMENT_FIELDS;\n  payload: string;\n}\n\n// DOCUMENT CHECKING\nexport interface GetCandidatesInInstituteAtion {\n  type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE;\n  payload: CandidatesInterface[];\n}\n\ninterface VerifyDocumentAction {\n  type: ActionTypes.VERIFY_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type DocumentCategoryActionType =\n  | GetDocumentCategoryAction\n  | CreateDocumentCategoryAction\n  | UpdateDocumentCategoryAction\n  | DeleteDocumentCategoryAction\n  | GetDocumentSubCategoryAction\n  | CreateDocumentSubCategoryAction\n  | UpdateDocumentSubCategoryAction\n  | DeleteDocumentSubCategoryAction\n  | GetDocumentFieldsAction\n  | CreateDocumentFieldsAction\n  | UpdateDocumentFieldsAction\n  | DeleteDocumentFieldsAction\n  | GetCandidatesInInstituteAtion\n  | VerifyDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CATEGORY\n\nexport const getDocumentCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get(`${API.AUTH}/detailcategory`);\n      console.log({ docCategory: res });\n      dispatch<GetDocumentCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_CATEGORY,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n    }\n  };\n};\n\nexport const createDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// SUB CATEGORY\nexport const getDocumentSubCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentSubCategoryInterface[]>(\n        `${API.AUTH}/detailsubcategory`\n      );\n      console.log({ docSubCategory: res });\n      dispatch<GetDocumentSubCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentSubCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentSubCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentSubCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentSubCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// FIELDS\nexport const getDocumentFields = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentFieldsInterface[]>(\n        `${API.AUTH}/categorysubcatedata`\n      );\n      console.log({ docFields: res });\n      dispatch<GetDocumentFieldsAction>({\n        type: ActionTypes.GET_DOCUMENT_FIELDS,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentFields = (data: DocumentFieldsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentFieldsAction>({\n      type: ActionTypes.CREATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentFields = (data: DocumentFieldsInterface) => {\n  console.log({ reducer: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentFieldsAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentFields = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentFieldsAction>({\n      type: ActionTypes.DELETE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\n// CANDIDATE IN EDUCATION CATEGORY\nexport const getCandidatesInInstitute = (\n  educatin_type_id: string,\n  callback: Function\n) => {\n  console.log({\n    url: `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}`,\n  });\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\", null);\n    try {\n      setAxiosToken();\n      const res = await axios.get<CandidatesInterface[]>(\n        `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}`\n      );\n      const newArray: CandidatesInterface[] = res.data.filter((element) => {\n        return element !== null && element !== undefined;\n      });\n      console.log({ getCandidatesInInstitute: res, newArray });\n      dispatch<GetCandidatesInInstituteAtion>({\n        type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE,\n        payload: newArray,\n        // payload: response.data,\n      });\n      callback(false, \"\", newArray);\n    } catch (error) {\n      console.log({ getCandidatesInInstitute: error });\n      callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const verifyDocument = (data: VerifyDocumentInterface) => {\n  console.log({ action_verify: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyDocumentAction>({\n      type: ActionTypes.VERIFY_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  ApplicationSessionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// APPLICATION SETTINGS ===================================\nexport interface GetApplicationSessionAction {\n  type: ActionTypes.GET_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface[];\n}\n\nexport interface CreateApplicationSessionAction {\n  type: ActionTypes.CREATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface UpdateApplicationSessionAction {\n  type: ActionTypes.UPDATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface DisableApplicationSessionAction {\n  type: ActionTypes.DISABLE_APPLICATION_SESSION;\n  payload: {\n    application_session_id: string;\n    status: boolean;\n  };\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetApplicationSessionAction\n  | CreateApplicationSessionAction\n  | UpdateApplicationSessionAction\n  | DisableApplicationSessionAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ PERIODS =======================\n\nexport const getApplicationSessions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<ApplicationSessionInterface[]>(\n        `${API.APPLICATION}/applicationsesion`\n      );\n      dispatch<GetApplicationSessionAction>({\n        type: ActionTypes.GET_APPLICATION_SESSIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createAplicationSession = (data: ApplicationSessionInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateApplicationSessionAction>({\n      type: ActionTypes.CREATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateAplicationSession = (data: ApplicationSessionInterface) => {\n  console.log({ check: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateApplicationSessionAction>({\n      type: ActionTypes.UPDATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const disableApplicationSession = (data: {\n  application_session_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableApplicationSessionAction>({\n      type: ActionTypes.DISABLE_APPLICATION_SESSION,\n      payload: data,\n    });\n  };\n};\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getMyClaims,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { getActiveSessionPlan } from \"../../../actions/session\";\nimport { getApplicationSessions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  PlansInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { isPlanActive } from \"../../SessionSettings/SessionDetails\";\nimport ApplicationFormView from \"./ApplicationFormView\";\nimport DocFormView from \"./DocFormView\";\nimport FormApplicationList from \"./FormApplicationList\";\nimport FormDocumentList from \"./FormDocumentList\";\n\nexport const ClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: DocumentClaimUser\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data &&\n    doc.category_subcategory_data.category_subcategory_Data_id.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    console.log({ doc });\n    DocField = documentCategories.documentFields.filter(\n      (c) =>\n        c._id === doc.category_subcategory_data?.category_subcategory_Data_id\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const isClaimAllowed = (\n  allClaim: CandidateClaimInterface[],\n  period_id: string,\n  claimOnId: string\n): boolean => {\n  if (\n    allClaim.find(\n      (item) =>\n        item.period_id === period_id && item.claiming_on_id === claimOnId\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\ntype ClaimFormProps = {\n  // FOR SHORTCUT BUTTONS CALL\n  claim_type?: PlansTypeKeys;\n  file_id?: string;\n  // REQUIRED PROPS\n  formState: boolean;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  getActiveSessionPlan: Function;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n  activeSession: SessionPlanInterface | null;\n};\n\nclass ClaimForm extends Component<ClaimFormProps, ClaimFormState> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      activeSession: null,\n    };\n  }\n\n  isDocumentIdValid = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let doc = documents.find((item) => item.doc_id === doc_id);\n    if (doc) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (doc.validated_by.validation_status !== \"rejected\") {\n        return {\n          status: false,\n          msg: \"Only rejected document are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.state.activeSession &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.state.activeSession.session_plan_id,\n          doc_id\n        )\n      ) {\n        return {\n          status: false,\n          msg: \"This document already in claiming list!\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.success };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid document id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Documents, please try again\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  isApplicationIdValid = (\n    applications: claimApplicationsInterface[],\n    app_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let app = applications.find((item) => item.application_id === app_id);\n    console.log(\"====================================\");\n    console.log({ app, app_id });\n    console.log(\"====================================\");\n    if (app) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (app.application_status !== ApplicationStates.Rejected) {\n        return {\n          status: false,\n          msg: \"Only rejected application are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.state.activeSession &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.state.activeSession.session_plan_id,\n          app.application_id\n        )\n      ) {\n        return {\n          status: false,\n          msg: \"This application already in claiming list!\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid application id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Application, please try again!\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  isClaimTypeOpen = (\n    thisSession: SessionPlanInterface,\n    thisType: PlansTypeKeys\n  ): boolean => {\n    let data: PlansInterface | undefined;\n    if (thisType === PlansTypeKeys.APPLICATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.PLACEMENT_TRANSFER) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  isClaimBtnValid = (thisSession: SessionPlanInterface) => {\n    if (this.props.file_id || this.props.claim_type) {\n      // CHECK IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n      if (!this.props.claim_type) {\n        this.props.PushPopupAlert({\n          title: \"Claim type is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.props.file_id) {\n        this.props.PushPopupAlert({\n          title: \"Claim file is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.isClaimTypeOpen(thisSession, this.props.claim_type)) {\n        // IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n        // CHECK IF CLAIM TYPE IS OPEN ================\n        this.props.PushPopupAlert({\n          title: \"Claim type is closed!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      }\n    }\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  isClaimsAllowed = (\n    thisPeriod: SessionPlanInterface\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      this.props.claiming.myClaims === null &&\n      this.props.file_id &&\n      this.props.claim_type\n    ) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string, data?: CandidateClaimInterface[]) => {\n          // !status && setLoadingClaims(status);\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data) {\n            let claim = data.find(\n              (item) =>\n                item.claiming_on_id === this.props.file_id &&\n                item.period_id === thisPeriod.session_plan_id\n            );\n            if (claim) {\n              return {\n                status: false,\n                msg: `You have already claimed on this ${this.displayClaimType(\n                  this.props.claim_type!\n                )}`,\n                alert: PopupAlertTheme.info,\n              };\n            }\n          }\n        }\n      );\n    } else if (\n      this.props.claiming.myClaims &&\n      this.props.file_id &&\n      this.props.claim_type\n    ) {\n      let claim = this.props.claiming.myClaims.find(\n        (item) =>\n          item.claiming_on_id === this.props.file_id &&\n          item.period_id === thisPeriod.session_plan_id\n      );\n      if (claim) {\n        return {\n          status: false,\n          msg: `You have already claimed on this ${this.displayClaimType(\n            this.props.claim_type!\n          )}`,\n          alert: PopupAlertTheme.info,\n        };\n      }\n    }\n\n    return {\n      status: true,\n      msg: \"\",\n      alert: PopupAlertTheme.success,\n    };\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.sessionPlan.activeSessionPlan === null ||\n      this.props.sessionPlan.activeSessionPlan === \"none\"\n    ) {\n      this.props.getActiveSessionPlan(\n        (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data === \"none\") {\n            this.props.PushPopupAlert({\n              title: \"No session active session\",\n              theme: PopupAlertTheme.danger,\n            });\n            this.props.setFormState(false);\n            this.setState({\n              claimFileId: \"\",\n              thisClaimType: null,\n              thisClaimTypeId: \"\",\n              claimComment: \"\",\n              chooseClaimFile: false,\n              formType: \"DEFAULT\",\n              viewThisFile: \"\",\n              formError: null,\n            });\n          } else if (data) {\n            let _isClaimsAllowed = this.isClaimsAllowed(data);\n            if (!_isClaimsAllowed.status) {\n              this.props.PushPopupAlert({\n                title: _isClaimsAllowed.msg,\n                theme: _isClaimsAllowed.alert,\n              });\n              this.props.setFormState(false);\n            }\n            this.setState({ activeSession: data });\n            this.isClaimBtnValid(data);\n          }\n        }\n      );\n    } else {\n      this.setState({\n        activeSession: this.props.sessionPlan.activeSessionPlan,\n      });\n      this.isClaimBtnValid(this.props.sessionPlan.activeSessionPlan);\n      let _isClaimsAllowed = this.isClaimsAllowed(\n        this.props.sessionPlan.activeSessionPlan\n      );\n      if (!_isClaimsAllowed.status) {\n        this.props.PushPopupAlert({\n          title: _isClaimsAllowed.msg,\n          theme: _isClaimsAllowed.alert,\n        });\n        this.props.setFormState(false);\n      }\n      this.setLoading(false);\n    }\n\n    if (this.props.documentReducer.documentCategory === null) {\n      this.props.getDocumentCategory();\n    }\n    if (this.props.documentReducer.documentSubCategory === null) {\n      this.props.getDocumentSubCategory();\n    }\n    if (this.props.documentReducer.documentFields === null) {\n      this.props.getDocumentFields();\n    }\n\n    if (this.props.claiming.candidateApplications === null) {\n      this.props.getMyRejectedApplications(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string, data?: claimApplicationsInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              // PROPS VALIDATION PROCESS ###############\n              if (\n                this.props.claim_type &&\n                this.props.file_id &&\n                this.state.formType === \"DEFAULT\"\n              ) {\n                if (this.props.claim_type === PlansTypeKeys.APPLICATION) {\n                  let _isApplicationIdValid = this.isApplicationIdValid(\n                    data,\n                    this.props.file_id\n                  );\n                  if (!_isApplicationIdValid.status) {\n                    this.props.PushPopupAlert({\n                      title: _isApplicationIdValid.msg,\n                      theme: _isApplicationIdValid.alert,\n                    });\n                    this.props.setFormState(false);\n                  } else {\n                    this.setState({\n                      thisClaimType: this.props.claim_type,\n                      claimFileId: this.props.file_id,\n                      formType: \"PROPS\",\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    if (this.props.claiming.candidateDocuments === null) {\n      this.props.getMyRejectedDocuments(\n        (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              // PROPS VALIDATION PROCESS ###############\n              if (\n                this.props.claim_type &&\n                this.props.file_id &&\n                this.state.formType === \"DEFAULT\"\n              ) {\n                if (\n                  this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n                ) {\n                  let _isDocumentIdValid = this.isDocumentIdValid(\n                    data,\n                    this.props.file_id\n                  );\n                  if (!_isDocumentIdValid.status) {\n                    this.props.PushPopupAlert({\n                      title: _isDocumentIdValid.msg,\n                      theme: _isDocumentIdValid.alert,\n                    });\n                    // setAlertError(_isDocumentIdValid.msg);\n                    this.props.setFormState(false);\n                  } else {\n                    this.setState({\n                      thisClaimType: this.props.claim_type,\n                      claimFileId: this.props.file_id,\n                      formType: \"PROPS\",\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    // PROPS VALIDATION PROCESS ###############\n    if (\n      this.props.claim_type &&\n      this.props.file_id &&\n      this.state.formType === \"DEFAULT\"\n    ) {\n      this.setState({ thisClaimType: this.props.claim_type });\n      if (\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION &&\n        this.props.claiming.candidateDocuments\n      ) {\n        let _isDocumentIdValid = this.isDocumentIdValid(\n          this.props.claiming.candidateDocuments,\n          this.props.file_id\n        );\n        if (!_isDocumentIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isDocumentIdValid.msg,\n            theme: _isDocumentIdValid.alert,\n          });\n          // setAlertError(_isDocumentIdValid.msg);\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n      if (\n        this.props.claim_type === PlansTypeKeys.APPLICATION &&\n        this.props.claiming.candidateApplications\n      ) {\n        let _isApplicationIdValid = this.isApplicationIdValid(\n          this.props.claiming.candidateApplications,\n          this.props.file_id\n        );\n        if (!_isApplicationIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isApplicationIdValid.msg,\n            theme: _isApplicationIdValid.alert,\n          });\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  cleanToClose = (response?: boolean) => {\n    if (this.state.formType === \"PROPS\" && response) {\n      this.props.setFormState(false, response);\n    } else {\n      this.props.setFormState(false);\n    }\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.state.activeSession) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n\n    this.setLoadingForm(true);\n    try {\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.state.activeSession.session_plan_id,\n          reason: this.state.claimComment,\n          old_reason: this.getValidation(this.state.claimFileId).old_reason,\n          old_status: this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by: this.getValidation(this.state.claimFileId)\n            .old_evaluated_by,\n        }\n      );\n      console.log({ createClaim: res.data });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose(true);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingForm(false);\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  render() {\n    if (\n      this.state.loading ||\n      this.state.activeSession === null ||\n      (this.props.claiming.myClaims === null &&\n        this.props.file_id &&\n        this.props.claim_type)\n    ) {\n      return null;\n    }\n    return (\n      <div className=\"pb-3\">\n        {this.props.formState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length <= 0 &&\n                this.cleanToClose();\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length > 0 &&\n                this.setViewThisFile(\"\");\n            }}\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-900 font-bold text-xl md:ml-1\">\n                {this.state.viewThisFile.length <= 0 && \"Claiming form\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType ===\n                    PlansTypeKeys.DOCUMENT_VALIDATION &&\n                  \"Viewing document\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                  \"Viewing application\"}\n              </div>\n            }\n            widthSizeClass={\n              this.state.viewThisFile.length > 0\n                ? ModalSize.extraLarge\n                : ModalSize.medium\n            }\n            padding={{ title: true, body: false, footer: false }}\n          >\n            {/* CLAIM FORM ============================================== */}\n            {this.state.viewThisFile.length <= 0 && (\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"px-6 pb-3\">\n                  {this.state.alertError && (\n                    <div\n                      className=\"alert-warning cursor-pointer\"\n                      onClick={() => this.setAlertError(null)}\n                    >\n                      {this.state.alertError}\n                    </div>\n                  )}\n                  <div className=\"text-base text-gray-700 sm:text-lg\">\n                    {/* SELECT CLAIM TYPE ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Claim type</label>\n                      <select\n                        className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                          this.state.formType === \"PROPS\" &&\n                          \"cursor-not-allowed\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_type\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                          this.selectClaimType(e.target.value);\n                          this.setClaimFileId(\"\");\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_type\" &&\n                            this.setFormError(null);\n                        }}\n                        value={\n                          this.state.thisClaimType\n                            ? this.state.thisClaimType\n                            : \"\"\n                        }\n                        disabled={\n                          this.state.loadingForm ||\n                          this.state.formType === \"PROPS\"\n                        }\n                      >\n                        <option value=\"\">Choose claim type</option>\n                        {Object.values(PlansTypeKeys).map((item, index) => (\n                          <option value={item} key={index + item}>\n                            {capitalizeFirstLetter(\n                              item.toLocaleLowerCase().replace(/_/g, \" \")\n                            )}\n                          </option>\n                        ))}\n                      </select>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_type\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT CLAIM TYPE ============================================== */}\n\n                    {/* SELECT FILE TO CLAIM ON ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>\n                        {this.generateChooseFileTitle(this.state.thisClaimType)}\n                      </label>\n                      <div\n                        className={`text-left bg-white border-2 ${\n                          this.state.formType !== \"PROPS\"\n                            ? \"border-gray-700\"\n                            : \"border-gray-400 text-gray-500\"\n                        } rounded w-full ${\n                          this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_file\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.state.thisClaimType &&\n                          !this.state.chooseClaimFile &&\n                          this.state.formType !== \"PROPS\"\n                            ? \"cursor-pointer\"\n                            : !this.state.chooseClaimFile &&\n                              \"cursor-not-allowed\"\n                        }`}\n                        title={\n                          !this.state.thisClaimType\n                            ? \"Choose claim type first!\"\n                            : \"\"\n                        }\n                        onClick={() => {\n                          this.state.formType === \"DEFAULT\" &&\n                            this.state.thisClaimType &&\n                            !this.state.chooseClaimFile &&\n                            this.setChooseClaimFile(true);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_file\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                        {this.state.claimFileId.length > 0 &&\n                        !this.state.chooseClaimFile ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.DOCUMENT_VALIDATION &&\n                              this.props.claiming.candidateDocuments &&\n                              ClaimGetDocTitle(\n                                this.props.documentReducer,\n                                this.getDocumentById(\n                                  this.props.claiming.candidateDocuments,\n                                  this.state.claimFileId\n                                )\n                              ).main}\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.APPLICATION &&\n                              this.props.claiming.candidateApplications &&\n                              this.getApplicationById(\n                                this.props.claiming.candidateApplications,\n                                this.state.claimFileId\n                              ).position.position_title}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimFile && (\n                            <p className=\"my-1 mx-2\">\n                              Select Claim{\" \"}\n                              {this.state.thisClaimType &&\n                                this.state.thisClaimType\n                                  .toLocaleLowerCase()\n                                  .replace(/_/g, \" \")}\n                            </p>\n                          )\n                        )}\n                        {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                        {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormDocumentList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateDocuments={\n                                this.props.claiming.candidateDocuments\n                              }\n                              documentCategories={this.props.documentReducer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {/* LISTING OF REJECTED APPLICATION ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormApplicationList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateApplications={\n                                this.props.claiming.candidateApplications\n                              }\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_file\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                    {/* CLAIM COMMENT ============================================== */}\n                    <div className=\"flex flex-col\">\n                      <label>Comment</label>\n                      <textarea\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_comment\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder={`Claim comment`}\n                        style={{ resize: \"none\" }}\n                        value={this.state.claimComment}\n                        onChange={(e) => {\n                          this.setClaimComment(e.target.value);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_comment\" &&\n                            this.setFormError(null);\n                        }}\n                        rows={3}\n                        disabled={this.state.loadingForm}\n                      ></textarea>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM COMMENT ============================================== */}\n                  </div>\n                  <div className=\"pt-3 flex justify-between\">\n                    <button\n                      onClick={() => this.cleanToClose()}\n                      className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-not-allowed\"\n                      }`}\n                      type=\"button\"\n                      disabled={this.state.loadingForm}\n                    >\n                      Exit\n                    </button>\n                    <button\n                      className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-wait\"\n                      }`}\n                      type=\"submit\"\n                      disabled={this.state.loadingForm}\n                    >\n                      {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n            {/* END CLAIM FORM ============================================== */}\n\n            {/* CLAIM DOCUMENT VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateDocuments &&\n              this.state.thisClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION && (\n                <DocFormView\n                  thisDoc={this.getDocumentById(\n                    this.props.claiming.candidateDocuments,\n                    this.state.viewThisFile\n                  )}\n                  setViewThisFile={this.setViewThisFile}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                />\n              )}\n            {/* END CLAIM DOCUMENT VIEW ============================================== */}\n            {/* CLAIM APPLICATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateApplications &&\n              this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n                <ApplicationFormView\n                  thisApplication={this.getApplicationById(\n                    this.props.claiming.candidateApplications,\n                    this.state.viewThisFile\n                  )}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                />\n              )}\n            {/* END CLAIM APPLICATION VIEW ============================================== */}\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  sessionPlan,\n}: StoreState): {\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n} => {\n  return {\n    auth: auth,\n    sessionPlan,\n    documentReducer: document,\n    claiming,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getActiveSessionPlan,\n  getMyClaims,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  getApplicationSessions,\n  PushPopupAlert,\n})(ClaimForm);\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { getUserDocuments } from \".\";\nimport { Auth, PushPopupAlert, reAssessApplication } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  PositionAPI,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { DATE, showDate, timestampToDate } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\nimport { showEvaluator } from \"../Candidate/ApplicationFormView\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\nexport const FC_AdminApplicationPositionDistinctCategory = (\n  thisPosition: PositionAPI,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.position_requirement[field]._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.position_requirement[field]._id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nenum viewTabs {\n  profile = \"User Profile\",\n  application = \"User Application\",\n}\n\ntype AdminClaimAppViewProps = {\n  thisApplication: allClaimApplicationInterface;\n  thisPosition: PositionAPI;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  userList: UserInterface[];\n  claimTypes: ClaimTypesInterfaceAPI[];\n  systemPositions: PositionAPI[];\n\n  // REDUX ==================\n  auth: Auth;\n  reAssessApplication: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimAppView: React.FC<AdminClaimAppViewProps> = (props) => {\n  const [viewPosition, setViewPosition] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [selectedTab, setSelectedTab] = useState<viewTabs>(viewTabs.profile);\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: {\n        sub_claim_id: string;\n        evaluation_comment: string;\n        evaluated_by: string;\n        decision_taken_status: ClaimDecisionStatus;\n      } = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim.id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await overrideDecision();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const overrideDecision = async () => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/tolerateappl/${props.thisClaim.claiming_on_id}`,\n        {\n          user_id: props.auth.user.user_id,\n          comment: responseMsg,\n          application_status: ApplicationStates.Shortlisted,\n        }\n      );\n\n      res.data &&\n        props.reAssessApplication({\n          application_id: props.thisClaim.claiming_on_id,\n          application_status: ApplicationStates.Shortlisted,\n        });\n    } catch (error) {\n      console.error({ code_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      // errorToText(error);\n    }\n    setLoadingRequest(false);\n  };\n\n  const getPositionById = (position_id: string): PositionAPI | undefined => {\n    let result = props.systemPositions.find(\n      (item) => item.position_id === position_id\n    );\n\n    return result;\n  };\n\n  return (\n    <section className=\"\">\n      {/* #################### VIEW TABS ################################## */}\n      <div className=\"flex flex-row items-center mx-4\">\n        {Object.values(viewTabs).map((item, i) => (\n          <div\n            key={i}\n            onClick={() => setSelectedTab(item)}\n            className={`animate__animated ${\n              selectedTab === item\n                ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                : \"bg-white border-white text-gray-600\"\n            } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mr-1`}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n      {/* #################### END VIEW TABS ################################## */}\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY POSITION ==================================================== */}\n          {selectedTab === viewTabs.application && (\n            <section className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .description\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .school_level_id.school_level_name\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .education_institute_id.education_category_title\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {getPositionById(props.thisApplication.position) ? (\n                      getPositionById(\n                        props.thisApplication.position\n                      )!.courses.map((item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            getPositionById(props.thisApplication.position)!\n                              .courses.length -\n                              1 && \",\"}\n                        </div>\n                      ))\n                    ) : (\n                      <NoResult\n                        theme={NoResultThemes.Dark}\n                        value={\"No courses found\"}\n                      />\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {getPositionById(props.thisApplication.position) ? (\n                  getPositionById(props.thisApplication.position)!.requirements\n                    .length > 0 ? (\n                    FC_AdminApplicationPositionDistinctCategory(\n                      getPositionById(props.thisApplication.position)!,\n                      props.documentCategories\n                    ).DistinctCategoriesTemp.map((item, index) => (\n                      <div\n                        className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                        key={index + item.category_id}\n                      >\n                        <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                          <MdTurnedIn />\n                          <span>{item.category_title}</span>\n                        </div>\n                        <div className=\"border bg-white mt-1\">\n                          <ViewRequirements\n                            requirements={FC_AdminApplicationPositionDistinctCategory(\n                              getPositionById(props.thisApplication.position)!,\n                              props.documentCategories\n                            ).PositionsTemp.filter(\n                              (req) => req.category_id === item.category_id\n                            )}\n                          />\n                        </div>\n                      </div>\n                    ))\n                  ) : (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"No requirements\"}\n                    ></NoResult>\n                  )\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <section className=\"w-full my-2 animate__animated animate__fadeIn rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Names:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {showEvaluator(\n                      props.userList,\n                      props.thisApplication.user_id\n                    )}\n                  </span>\n                </div>\n                {false && (\n                  <button\n                    type=\"button\"\n                    className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                    onClick={() => setViewPosition(!viewPosition)}\n                  >\n                    {viewPosition ? \"Hide\" : \"More\"}\n                  </button>\n                )}\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Title:</span>\n              <span className=\"text-gray-800 font-bold text-2xl\">\n                {getPositionById(props.thisApplication.position)\n                  ? getPositionById(props.thisApplication.position)!\n                      .position_title\n                  : \"Position not found\"}\n              </span>\n            </div>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous\n                  ? props.thisClaim.previous.status ===\n                    ApplicationStates.Rejected\n                  : props.thisApplication.application_status ===\n                    ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(\n                    props.thisApplication.application_status\n                  )}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous\n                ? showEvaluator(\n                    props.userList,\n                    props.thisClaim.previous.evaluated_by\n                  )\n                : showEvaluator(\n                    props.userList,\n                    props.thisApplication.override_by.user_id\n                  )}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {props.thisApplication.application_session}\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisApplication.override_by.comment}\n            </span>\n          </div>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {getUserDocuments(props.userList, claim.evaluated_by)\n                          ? getUserDocuments(\n                              props.userList,\n                              claim.evaluated_by\n                            )!.user.user_info.fname +\n                            \" \" +\n                            getUserDocuments(\n                              props.userList,\n                              claim.evaluated_by\n                            )!.user.user_info.lname\n                          : \"-\"}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 mb-5 mt-3\">\n            <span className=\"text-yellow-700 italic font-semibold\">\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  formError && formError.element === \"comment\" ? \"red\" : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={responseMsg}\n                onChange={(e) => {\n                  setResponseMsg(e.target.value);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              ></textarea>\n              {formError && formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  evaluateClaim,\n  reAssessApplication,\n  PushPopupAlert,\n})(AdminClaimAppView);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { adminDisplayClaimTitle, getUserDocuments } from \".\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { verifyDocument } from \"../../../actions/document\";\nimport { VerifyDocumentInterface } from \"../../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DocValidationStatusInterface,\n  UserDocumentsInterface,\n  UserInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate, timestampToDate } from \"../../../utils/functions\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\ntype AdminClaimDocViewProps = {\n  thisDoc: UserDocumentsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  userList: UserInterface[];\n  candidateId: string;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  viewImage: boolean;\n  setViewImage: React.Dispatch<React.SetStateAction<boolean>>;\n  loadingRequest: boolean;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  actionTaken: ClaimDecisionStatus | null;\n  setActionTaken: React.Dispatch<\n    React.SetStateAction<ClaimDecisionStatus | null>\n  >;\n  responseMsg: string;\n  setResponseMsg: React.Dispatch<React.SetStateAction<string>>;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: React.Dispatch<\n    React.SetStateAction<{\n      element: string;\n      msg: string;\n    } | null>\n  >;\n\n  // REDUX ==================\n  auth: Auth;\n  verifyDocument: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimDocView: React.FC<AdminClaimDocViewProps> = (props) => {\n  const handleVerify = async () => {\n    if (!props.actionTaken) {\n      props.setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(props.responseMsg)) {\n      props.setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      props.setLoadingRequest(true);\n      const api_body: {\n        sub_claim_id: string;\n        evaluation_comment: string;\n        evaluated_by: string;\n        decision_taken_status: ClaimDecisionStatus;\n      } = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: props.responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: props.actionTaken,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim.id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (props.actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await FC_DocValidation();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          props.setResponseMsg(\"\");\n          props.setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const FC_DocValidation = async () => {\n    const api_body: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n      },\n    };\n    const api_redux: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n        date: \"\",\n      },\n    };\n\n    try {\n      const res = await axios.post<VerifyDocumentInterface>(\n        `${API.AUTH}/validateuserdoc`,\n        api_body\n      );\n      if (res) {\n        props.verifyDocument(api_redux);\n        await FC_shortListing(props.thisClaim.user);\n        // setDocumentId(\"null\");\n      }\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const FC_shortListing = async (candidate_id: string) => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/doccheckshortlist/${candidate_id}`\n      );\n      console.log({ res });\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Names:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {getUserDocuments(props.userList, props.candidateId)\n                  ? getUserDocuments(props.userList, props.candidateId)!.user\n                      .user_info.fname +\n                    \" \" +\n                    getUserDocuments(props.userList, props.candidateId)!.user\n                      .user_info.lname\n                  : \"-\"}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className={`italic text-gray-600`}>Title:</span>\n            <span className=\"text-gray-800 font-bold text-2xl\">\n              {/* {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main} */}\n              {getUserDocuments(props.userList, props.thisClaim.user)\n                ? adminDisplayClaimTitle(\n                    props.documentCategories,\n                    getUserDocuments(props.userList, props.thisClaim.user)!\n                      .document,\n                    props.thisClaim\n                  )\n                : \"-\"}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous\n                ? getUserDocuments(\n                    props.userList,\n                    props.thisClaim.previous.evaluated_by\n                  )\n                  ? getUserDocuments(\n                      props.userList,\n                      props.thisClaim.previous.evaluated_by\n                    )!.user.user_info.fname +\n                    \" \" +\n                    getUserDocuments(\n                      props.userList,\n                      props.thisClaim.previous.evaluated_by\n                    )!.user.user_info.lname\n                  : \"-\"\n                : getUserDocuments(\n                    props.userList,\n                    props.thisDoc.validated_by.user_id\n                  )\n                ? getUserDocuments(\n                    props.userList,\n                    props.thisDoc.validated_by.user_id\n                  )!.user.user_info.fname +\n                  \" \" +\n                  getUserDocuments(\n                    props.userList,\n                    props.thisDoc.validated_by.user_id\n                  )!.user.user_info.lname\n                : \"-\"}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.commet}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {getUserDocuments(props.userList, claim.evaluated_by)\n                          ? getUserDocuments(\n                              props.userList,\n                              claim.evaluated_by\n                            )!.user.user_info.fname +\n                            \" \" +\n                            getUserDocuments(\n                              props.userList,\n                              claim.evaluated_by\n                            )!.user.user_info.lname\n                          : \"-\"}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!props.actionTaken && (\n        <section className=\"flex items-center justify-between\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 mb-5 mt-3\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {props.actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.responseMsg}\n                onChange={(e) => {\n                  props.setResponseMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setResponseMsg(\"\");\n                  props.setActionTaken(null);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  evaluateClaim,\n  verifyDocument,\n  PushPopupAlert,\n})(AdminClaimDocView);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdArrowBack } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { Auth } from \"../../../actions/auth\";\nimport { getAllApplications, getAllClaims } from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { verifyAllDocument, fetchUserAccess } from \"../../../actions/users\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport Table from \"../../../components/Table/Table\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimTypesInterface,\n  PlansTypeKeys,\n  PositionAPI,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  UserDocumentsInterface,\n  UserInterface,\n} from \"../../../shared/interfaces\";\nimport { getClaimById, whichClaimStatus, whichClaimType } from \"../Candidate\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport AdminClaimAppView from \"./AdminClaimAppView\";\nimport AdminClaimDocView from \"./AdminClaimDocView\";\nimport AdminFilterByType, {\n  filterClaimsByClaimType,\n} from \"./AdminFilterByType\";\n\nexport const getUserDocuments = (\n  userList: UserInterface[],\n  user_id: String\n): { user: UserInterface; document: UserDocumentsInterface[] } | null => {\n  const thisUser = userList.find((item) => item.user_id === user_id);\n  if (thisUser) {\n    const thisDoc = thisUser.details.filter(\n      (item) => item.validation_status !== \"waiting\"\n    );\n    return { user: thisUser, document: thisDoc };\n  }\n  return null;\n};\n\nexport const adminDisplayClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: UserDocumentsInterface[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = candidateDocuments.find(\n      (item) => item.doc_id === thisClaim.claiming_on_id\n    );\n    result = thisDoc\n      ? AdminClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n\n  return result;\n};\n\nexport const AdminClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: UserDocumentsInterface\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id &&\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    DocField = documentCategories.documentFields.filter(\n      (c) => c._id === doc.category_subcategory_data\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const getApplicationById = (\n  allApplications: allClaimApplicationInterface[] | null,\n  systemPositions: PositionAPI[] | null,\n  application_id: String\n): {\n  application: allClaimApplicationInterface;\n  position: PositionAPI;\n} | null => {\n  if (allApplications) {\n    let thisApplication = allApplications.find(\n      (item) => item._id === application_id\n    );\n    if (thisApplication && systemPositions) {\n      let thisPosition = systemPositions.find(\n        (item) => item.position_id === thisApplication!.position\n      );\n      if (thisPosition) {\n        return { application: thisApplication, position: thisPosition };\n      }\n    }\n  }\n  return null;\n};\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  userList: UserInterface[];\n  systemPositions: PositionAPI[] | null;\n  getPositions: Function;\n  getAllApplications: Function;\n  getAllClaims: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  verifyAllDocument: Function;\n  fetchUserAccess: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst Index: React.FC<AppProps> = (props) => {\n  const [thisPeriod, setThisPeriod] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [periodChanged, setPeriodChanged] = useState<boolean>(false);\n  const [loadingPosition, setLoadingPosition] = useState<boolean>(true);\n  const [loadingApplications, setLoadingApplications] = useState<boolean>(true);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(true);\n  const [loadingDocuments, setLoadingDocuments] = useState<boolean>(true);\n  const [loadingClarifications, setLoadingClarifications] =\n    useState<boolean>(true);\n  const [loadingUsers, setLoadingUsers] = useState(true);\n  const [loadingFields, setLoadingFields] = useState<boolean>(true);\n  const [viewClaim, setViewClaim] = useState<boolean>(false);\n  const [claimId, setClaimId] = useState<string | null>(null);\n  const [claimType, setClaimType] = useState<string | null>(null);\n  const [candidateId, setCandidateId] = useState<string | null>(null);\n\n  // FOR FORM ================\n  const [viewImage, setViewImage] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n\n  useEffect(() => {\n    // LOADING APPLICATION SESSION ====================================\n    if (props.application_sessions === null) {\n      props.GetAllSessionPlans((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (thisPeriod === null && !loadingSession && props.application_sessions) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setThisPeriod(\n        thisSession\n          ? thisSession\n          : props.application_sessions[props.application_sessions.length - 1]\n      );\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!props.documentReducer.documentCategory && loadingDocuments) {\n      props.getDocumentCategory();\n      setLoadingDocuments(false);\n    } else if (loadingDocuments) {\n      setLoadingDocuments(false);\n    }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!props.documentReducer.documentSubCategory && loadingClarifications) {\n      props.getDocumentSubCategory();\n      setLoadingClarifications(false);\n    } else if (loadingClarifications) {\n      setLoadingClarifications(false);\n    }\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!props.documentReducer.documentFields && loadingFields) {\n      props.getDocumentFields();\n      setLoadingFields(false);\n    } else if (loadingFields) {\n      setLoadingFields(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allClaims === null && thisPeriod !== null) {\n      props.getAllClaims(\n        2,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingClaims(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingClaims) {\n      setLoadingClaims(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allApplications === null && thisPeriod !== null) {\n      props.getAllApplications(\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingApplications(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingApplications) {\n      setLoadingApplications(false);\n    }\n\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n\n    if (props.systemPositions === null) {\n      props.getPositions((status: boolean, msg: string) => {\n        setLoadingPosition(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (loadingPosition) {\n      setLoadingPosition(false);\n    }\n  }, [\n    loadingApplications,\n    loadingClaims,\n    loadingClarifications,\n    loadingDocuments,\n    loadingFields,\n    loadingPosition,\n    loadingSession,\n    loadingUsers,\n    props,\n    thisPeriod,\n  ]);\n\n  if (loading || props.application_sessions === null) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  const displayClaimName = (\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      if (loadingUsers)\n        return <div className={`h-6 bg-gray-300 rounded w-2/3`}></div>;\n      result = getUserDocuments(props.userList, thisClaim.user)\n        ? getUserDocuments(props.userList, thisClaim.user)!.user.user_info\n            .fname +\n          \" \" +\n          getUserDocuments(props.userList, thisClaim.user)!.user.user_info.lname\n        : \"-\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (\n        loadingApplications ||\n        loadingPosition ||\n        props.systemPositions === null ||\n        props.claiming.allApplications === null\n      ) {\n        return <div className={`h-6 bg-gray-300 rounded w-2/3`}></div>;\n      } else if (props.claiming.allApplications) {\n        result = getUserDocuments(props.userList, thisClaim.user)\n          ? getUserDocuments(props.userList, thisClaim.user)!.user.user_info\n              .fname +\n            \" \" +\n            getUserDocuments(props.userList, thisClaim.user)!.user.user_info\n              .lname\n          : \"-\";\n      }\n    }\n\n    return result;\n  };\n\n  const displayClaimTitle = (\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      if (loadingUsers)\n        return <div className={`h-6 bg-gray-300 rounded w-2/3`}></div>;\n      result = getUserDocuments(props.userList, thisClaim.user)\n        ? adminDisplayClaimTitle(\n            props.documentReducer,\n            getUserDocuments(props.userList, thisClaim.user)!.document,\n            thisClaim\n          )\n        : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (loadingApplications || loadingPosition) {\n        return <div className={`h-6 bg-gray-300 rounded w-2/3`}></div>;\n      } else if (props.claiming.allApplications) {\n        let thisApplication = props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          props.claiming.allApplications &&\n          props.systemPositions\n        ) {\n          let thisPosition = props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  const tableData = (): JSX.Element[] => {\n    if (\n      props.claiming.allClaims &&\n      props.claiming.claimTypes &&\n      !loadingDocuments &&\n      !loadingSession &&\n      !loadingUsers &&\n      !loadingClaims\n    ) {\n      // CHECK IF THERE IS NO CLAIM ========================================\n      if (\n        filterClaimsByClaimType(\n          props.claiming.allClaims,\n          props.claiming.selectedClaimType\n        ).length <= 0\n      ) {\n        return [\n          <tr\n            className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n            key=\"key3201\"\n          >\n            <td className=\"px-3 py-1\">\n              <NoResult\n                theme={NoResultThemes.Light}\n                value={\"No claim found!\"}\n              />\n            </td>\n          </tr>,\n        ];\n      }\n      // END CHECK IF THERE IS NO CLAIM ========================================\n\n      return filterClaimsByClaimType(\n        props.claiming.allClaims,\n        props.claiming.selectedClaimType\n      ).map((claim, index) => (\n        <tr\n          className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n          key={index + claim.id}\n          onClick={() => {\n            setViewClaim(true);\n            setClaimId(claim.id);\n            setCandidateId(claim.user);\n            setClaimType(whichClaimType(claim) ? whichClaimType(claim)! : null);\n          }}\n        >\n          <td className=\"px-3 py-1\">{index + 1}</td>\n          <td className=\"px-3 py-1 whitespace-nowrap\">\n            {displayClaimName(claim)}\n          </td>\n          <td className=\"px-3 py-1 whitespace-nowrap\">\n            {displayClaimTitle(claim)}\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            {whichClaimType(claim) ? whichClaimType(claim)! : \"-\"}\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            <span\n              className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                whichClaimStatus(claim).classes\n              }`}\n            >\n              {whichClaimStatus(claim).status}\n            </span>\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n              View\n            </button>\n          </td>\n        </tr>\n      ));\n    }\n\n    return [\n      <tr key={43243} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n      <tr key={43243343} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n      <tr key={4327543} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n    ];\n  };\n\n  const onPeriodChange = (period_id: string) => {\n    setPeriodChanged(true);\n    props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && setPeriodChanged(false);\n      if (status === false && msg.length) {\n        props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  return (\n    <Fragment>\n      {/* {props.claiming.myClaims} */}\n      {/* SIDE NAVIGATION */}\n      {!viewClaim && (\n        <SideNavigation>\n          {/* FILTER SECTION */}\n          <AdminFilterByType loadingClaims={loadingClaims} />\n          {/* END FILTER SECTION */}\n        </SideNavigation>\n      )}\n      {/* END SIDE NAVIGATION */}\n\n      {/* CLAIM TITLE ===================================== */}\n      {!viewClaim && (\n        <ClaimHeaderTitle\n          headerTitle={`${\n            props.claiming.selectedClaimType === \"all\"\n              ? \"All\"\n              : props.claiming.selectedClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              ? \"Documents\"\n              : props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              ? \"Applications\"\n              : props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              ? \"Exam\"\n              : props.claiming.selectedClaimType ===\n                PlansTypeKeys.MARKS_PUBLICATION\n              ? \"Marks publication\"\n              : props.claiming.selectedClaimType ===\n                PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Placements\"\n              : \"\"\n          } Claiming`}\n          loading={loading}\n          loadingSession={loadingSession}\n          thisPeriod={thisPeriod}\n          setThisPeriod={setThisPeriod}\n          setLoadingSession={setLoadingSession}\n          application_sessions={props.application_sessions}\n          onPeriodChange={onPeriodChange}\n          periodChanged={periodChanged}\n        />\n      )}\n      {/* END CLAIM TITLE ===================================== */}\n\n      {!viewClaim && (\n        <section className=\"bg-white w-full p-1\">\n          <Table\n            columns={[\n              { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n              {\n                columnTitle: \"\",\n                alignText: \"left\",\n                padding: \"p-3\",\n              },\n              {\n                columnTitle: \"\",\n                alignText: \"left\",\n                padding: \"p-3\",\n              },\n              { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n            ]}\n            hideColumns={true}\n            rows={tableData}\n            pagination={true}\n            search={true}\n            thColor=\"gray\"\n            loading={loadingClaims}\n          />\n        </section>\n      )}\n\n      {/* view claim */}\n      {viewClaim &&\n        candidateId &&\n        getUserDocuments(props.userList, candidateId) &&\n        props.claiming.allClaims &&\n        claimId &&\n        getClaimById(props.claiming.allClaims, claimId) &&\n        props.claiming.claimTypes && (\n          <section className=\"bg-white w-full p-1 my-4\">\n            {/* VIEW CLAIM HEADER =============================== */}\n            <section className=\"flex items-center gap-2 py-2 border-b\">\n              <button\n                className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                  loadingRequest ? \"cursor-not-allowed\" : \"cursor-pointer\"\n                } animate__animated animate__fadeIn`}\n                disabled={loadingRequest}\n                onClick={() => {\n                  setViewClaim(false);\n                  setViewImage(true);\n                  setLoadingRequest(false);\n                  setActionTaken(null);\n                  setResponseMsg(\"\");\n                  setFormError(null);\n                }}\n              >\n                <MdArrowBack className=\"w-7 h-7\" />\n              </button>\n              {/* <div className={`text-blue-600 font-extrabold text-2xl px-2`}>\n                Positions\n              </div> */}\n            </section>\n            {/* END VIEW CLAIM HEADER =============================== */}\n\n            <section className=\"my-2\">\n              {/* FOR DOCUMENT ========================== */}\n              {claimType &&\n                claimType.toLocaleLowerCase() ===\n                  ClaimTypesInterface.DOCUMENT.toLocaleLowerCase() && (\n                  <div>\n                    {getUserDocuments(\n                      props.userList,\n                      candidateId\n                    )!.document.find(\n                      (item) =>\n                        item.doc_id ===\n                        getClaimById(props.claiming.allClaims!, claimId)!\n                          .claiming_on_id\n                    ) ? (\n                      <AdminClaimDocView\n                        thisDoc={\n                          getUserDocuments(\n                            props.userList,\n                            candidateId\n                          )!.document.find(\n                            (item) =>\n                              item.doc_id ===\n                              getClaimById(props.claiming.allClaims!, claimId)!\n                                .claiming_on_id\n                          )!\n                        }\n                        documentCategories={props.documentReducer}\n                        thisClaim={\n                          getClaimById(props.claiming.allClaims, claimId)!\n                        }\n                        userList={props.userList}\n                        claimTypes={props.claiming.claimTypes}\n                        viewImage={viewImage}\n                        setViewImage={setViewImage}\n                        loadingRequest={loadingRequest}\n                        setLoadingRequest={setLoadingRequest}\n                        actionTaken={actionTaken}\n                        setActionTaken={setActionTaken}\n                        responseMsg={responseMsg}\n                        setResponseMsg={setResponseMsg}\n                        formError={formError}\n                        setFormError={setFormError}\n                        candidateId={candidateId}\n                      />\n                    ) : (\n                      <NoResult\n                        theme={NoResultThemes.Dark}\n                        value={\"Document not found\"}\n                      />\n                    )}\n                  </div>\n                )}\n\n              {/* FOR APPLICATION ========================== */}\n              {claimType &&\n                claimType.toLocaleLowerCase() ===\n                  ClaimTypesInterface.APPLICATION.toLocaleLowerCase() && (\n                  <div>\n                    {getApplicationById(\n                      props.claiming.allApplications,\n                      props.systemPositions,\n                      getClaimById(props.claiming.allClaims, claimId)!\n                        .claiming_on_id\n                    ) ? (\n                      props.systemPositions && (\n                        <AdminClaimAppView\n                          thisApplication={\n                            getApplicationById(\n                              props.claiming.allApplications,\n                              props.systemPositions,\n                              getClaimById(props.claiming.allClaims, claimId)!\n                                .claiming_on_id\n                            )!.application\n                          }\n                          thisPosition={\n                            getApplicationById(\n                              props.claiming.allApplications,\n                              props.systemPositions,\n                              getClaimById(props.claiming.allClaims, claimId)!\n                                .claiming_on_id\n                            )!.position\n                          }\n                          documentCategories={props.documentReducer}\n                          thisClaim={\n                            getClaimById(props.claiming.allClaims, claimId)!\n                          }\n                          userList={props.userList}\n                          claimTypes={props.claiming.claimTypes}\n                          systemPositions={props.systemPositions}\n                        />\n                      )\n                    ) : (\n                      <NoResult\n                        theme={NoResultThemes.Dark}\n                        value={\"Application not found\"}\n                      />\n                    )}\n                  </div>\n                )}\n            </section>\n          </section>\n        )}\n      {/* end view claim */}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  users,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  userList: UserInterface[];\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    userList: users,\n  };\n};\n\nexport const AdminClaim = connect(mapStateToProps, {\n  getAllClaims,\n  getAllApplications,\n  GetAllSessionPlans,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  verifyAllDocument,\n  fetchUserAccess,\n  getPositions,\n  PushPopupAlert,\n})(Index);\n","import {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active?: boolean;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: string;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  examination_center_room_id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  examination_center_id: string;\n  center_name: string;\n}\n\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  district_name: string;\n  district_id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  requested_post_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  district_id: string;\n  education_category_id: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\n// export interface DistrictInterface {\n//   centers: string[];\n//   district_name: string;\n//   district_id: string;\n// }\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: string;\n  application_status: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  district: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\n// [\n//   {\n//     user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n//     user_detail_subcategory_id: \"60fc48e8f485d8dd91ed3220\",\n//     position_requirement: [\n//       {\n//         category_subcategory_data_id: \"61277ec70ea9aba1b3661643\",\n//         required: true,\n//       },\n//     ],\n//     required: true,\n//   },\n// ];\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim, DocumentClaimUser } from \"../../actions/claiming\";\nimport { fetchUserAccess } from \"../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate, timestampToDate } from \"../../utils/functions\";\nimport { getUserDocuments } from \"./Admin\";\nimport { ClaimGetDocTitle } from \"./Candidate/ClaimForm\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisDoc: DocumentClaimUser;\n  // setViewThisFile: React.Dispatch<React.SetStateAction<string>>;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  viewImage: boolean;\n  setViewImage: React.Dispatch<React.SetStateAction<boolean>>;\n  loadingRequest: boolean;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  reClaiming: boolean;\n  setReClaiming: React.Dispatch<React.SetStateAction<boolean>>;\n  reClaimingMsg: string;\n  setReClaimingMsg: React.Dispatch<React.SetStateAction<string>>;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: React.Dispatch<\n    React.SetStateAction<{\n      element: string;\n      msg: string;\n    } | null>\n  >;\n\n  // REDUX DATA =====================\n  userList: UserInterface[];\n  fetchUserAccess: Function;\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const [loadingUsers, setLoadingUsers] = useState(true);\n\n  useEffect(() => {\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n  }, [loadingUsers, props]);\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim.id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Title:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous\n                  ? props.thisClaim.previous.status === \"rejected\"\n                  : props.thisDoc.validation_status === \"rejected\"\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : props.thisClaim.previous ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisClaim.previous.evaluated_by\n                ) ? (\n                  getUserDocuments(\n                    props.userList,\n                    props.thisClaim.previous.evaluated_by\n                  )!.user.user_info.fname +\n                  \" \" +\n                  getUserDocuments(\n                    props.userList,\n                    props.thisClaim.previous.evaluated_by\n                  )!.user.user_info.lname\n                ) : (\n                  \"-\"\n                )\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {loadingUsers ? (\n                          <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n                        ) : getUserDocuments(\n                            props.userList,\n                            claim.evaluated_by\n                          ) ? (\n                          getUserDocuments(props.userList, claim.evaluated_by)!\n                            .user.user_info.fname +\n                          \" \" +\n                          getUserDocuments(props.userList, claim.evaluated_by)!\n                            .user.user_info.lname\n                        ) : (\n                          \"-\"\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return { userList: users };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUserAccess,\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title + \" in \" + item.field_title}</span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default ViewRequirements;\n","import React, { useEffect, useState } from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { fetchUserAccess } from \"../../../actions/users\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  claimApplicationsInterface,\n  claimApplicationsPositionInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\nimport { getUserDocuments } from \"../Admin\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    let user = getUserDocuments(userList, user_id);\n    if (user) {\n      result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    }\n  }\n  return result;\n};\n\ntype ApplicationFormViewProps = {\n  thisApplication: claimApplicationsInterface;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  userList: UserInterface[];\n  fetchUserAccess: Function;\n  PushPopupAlert: Function;\n};\n\nconst ApplicationFormView: React.FC<ApplicationFormViewProps> = (props) => {\n  const [loadingUsers, setLoadingUsers] = useState(true);\n\n  useEffect(() => {\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n  }, [loadingUsers, props]);\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisApplication.application_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisApplication.application_status ===\n                ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } py-1`}\n            >\n              {capitalizeFirstLetter(props.thisApplication.application_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : (\n                showEvaluator(\n                  props.userList,\n                  props.thisApplication.override_by.user_id\n                )\n              )}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-semibold text-gray-900\">\n              {props.thisApplication.override_by.comment}\n            </span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Details\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisApplication.position.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisApplication.position.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !==\n                    props.thisApplication.position.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisApplication.position.requirements.length > 0 ? (\n            FC_ApplicationPositionDistinctCategory(\n              props.thisApplication.position,\n              props.documentCategories\n            ).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_ApplicationPositionDistinctCategory(\n                      props.thisApplication.position,\n                      props.documentCategories\n                    ).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return {\n    userList: users,\n  };\n};\n\nexport default connect(mapStateToProps, { PushPopupAlert, fetchUserAccess })(\n  ApplicationFormView\n);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { SessionPlanInterface } from \"../../interfaces\";\n\ntype ClaimHeaderTitleProps = {\n  headerTitle: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  setThisPeriod: (state: SessionPlanInterface | null) => void;\n  setLoadingSession: (state: boolean) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst selectPeriod = (\n  sessions: SessionPlanInterface[],\n  period_id: string,\n  setThisPeriod: (state: SessionPlanInterface | null) => void\n) => {\n  setThisPeriod(\n    sessions.filter((item) => item.session_plan_id === period_id)[0]\n  );\n};\n\nconst ClaimHeaderTitle: React.FC<ClaimHeaderTitleProps> = (props) => {\n  const isLoading = (): boolean => {\n    if (props.loading || props.loadingSession || props.periodChanged) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.headerTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              isLoading() ? \"cursor-wait\" : \"cursor-default\"\n            }`}\n            value={props.thisPeriod ? props.thisPeriod.session_plan_id : \"\"}\n            disabled={isLoading()}\n            onChange={(e) => {\n              selectPeriod(\n                props.application_sessions,\n                e.target.value,\n                props.setThisPeriod\n              );\n              props.setLoadingSession(true);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option\n                key={session.session_plan_id + item}\n                value={session.session_plan_id}\n              >\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default ClaimHeaderTitle;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  GetClaimingTypes,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\nexport const filterClaimsByClaimType = (\n  claimList: CandidateClaimInterface[],\n  claimType: PlansTypeKeys | \"all\"\n): CandidateClaimInterface[] => {\n  if (claimType === \"all\") {\n    return claimList;\n  }\n\n  return claimList.filter((item) => item.type_key === claimType);\n};\n\ntype AdminFilterByTypeProps = {\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getAllClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst AdminFilterByType: React.FC<AdminFilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n          setLoading(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n      setLoading(false);\n    }\n  }, [loadingClaimTypes, props]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.allClaims && thisType === \"all\") {\n      result = claiming.allClaims.filter(\n        (item) => item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n    if (claiming.allClaims && thisType !== \"all\") {\n      result = claiming.allClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && props.claiming.claimTypes && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {/* MARKS PUBLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.MARKS_PUBLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Marks publication\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.MARKS_PUBLICATION\n              )}\n            />\n          </div>\n          {/* PLACEMENT TRANSFER ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n            }}\n          >\n            <MainItem\n              title={\"Placement\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.PLACEMENT_TRANSFER\n              )}\n            />\n          </div>\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default connect(mapStateToProps, {\n  GetClaimingTypes,\n  setSelectedClaimType,\n  getAllClaims,\n  PushPopupAlert,\n})(AdminFilterByType);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { updateSessionPlan } from \"../../actions/session\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport {\n  allPlanTypes,\n  PlansInterface,\n  PlansTypeInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { DATE, errorToText } from \"../../utils/functions\";\n\nexport const isActivationAllowed = (thisPlans: PlansInterface): boolean => {\n  let today: Date = new Date(),\n    end_date = new Date(thisPlans.end_date);\n  if (end_date.getTime() >= today.getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport const getPlanTypeByKey = (\n  type_key: PlansTypeKeys\n): PlansTypeInterface | undefined => {\n  return allPlanTypes.find((item) => item.type_key === type_key);\n};\n\nexport const isPlanActive = (\n  viewThisSession: SessionPlanInterface,\n  thisPlan: PlansInterface\n): \"OPEN\" | \"CLOSED\" | \"WAITING\" => {\n  if (viewThisSession.is_active) {\n    let today = new Date(),\n      planEndDate = new Date(thisPlan.end_date),\n      planStartDate = new Date(thisPlan.start_date);\n    if (\n      planEndDate.getTime() >= today.getTime() &&\n      planStartDate.getTime() <= today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"OPEN\";\n    } else if (\n      planStartDate.getTime() > today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"WAITING\";\n    }\n  }\n  return \"CLOSED\";\n};\n\ntype SessionDetailsProps = {\n  viewThisSession: SessionPlanInterface;\n  setViewThisSession: (data: SessionPlanInterface) => void;\n\n  // REDUX ----------------\n  updateSessionPlan: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype SessionDetailsState = {\n  loadingRequest: string;\n};\n\nexport class SessionDetails extends Component<\n  SessionDetailsProps,\n  SessionDetailsState\n> {\n  constructor(props: SessionDetailsProps) {\n    super(props);\n\n    this.state = {\n      loadingRequest: \"\",\n    };\n  }\n\n  handlePlanActivation = async (\n    session: SessionPlanInterface,\n    thisPlan: PlansInterface\n  ) => {\n    const newState: \"open\" | \"close\" = session.is_active ? \"close\" : \"open\";\n\n    if (!window.confirm(`Are you sure you want to ${newState} this plan?`)) {\n      return true;\n    }\n\n    if (!isActivationAllowed(thisPlan)) {\n      this.props.PushPopupAlert({\n        title: `Opening/Closing plan which has been expired is not allowed!`,\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    let newData: SessionPlanInterface = {\n      session_plan_name: session.session_plan_name,\n      period: session.period,\n      is_active: session.is_active,\n      plans: [],\n      createdAt: session.createdAt,\n      updatedAt: session.updatedAt,\n      session_plan_id: session.session_plan_id,\n    };\n    for (const key in session.plans) {\n      if (Object.prototype.hasOwnProperty.call(session.plans, key)) {\n        const element = session.plans[key];\n        if (thisPlan.type_key === element.type_key) {\n          if (thisPlan.type_status === SessionPlanTypeStatus.OPEN) {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.CLOSED,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          } else {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.OPEN,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          }\n        } else {\n          newData.plans.push(element);\n        }\n      }\n    }\n\n    console.log(\"====================================\");\n    console.log({ newData });\n    console.log(\"====================================\");\n\n    this.setState({ loadingRequest: thisPlan.type_key });\n    try {\n      const res = await axios.put<SessionPlanInterface>(\n        `${API.CLAIMING}/session/${session.session_plan_id}`,\n        newData\n      );\n      this.props.updateSessionPlan(res.data);\n      this.props.setViewThisSession(res.data);\n      this.props.PushPopupAlert({\n        title: `Session ${newState}d successfully`,\n        theme: PopupAlertTheme.info,\n      });\n      this.setState({ loadingRequest: \"\" });\n      console.log(\"updateSessionPlan: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.warning,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <table className=\"w-full bg-white shadow p-5\" id=\"session_content\">\n        <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n          <tr>\n            <td className=\"p-2\">#</td>\n            <td className=\"p-2\">Plan Type</td>\n            <td className=\"p-2\">Start Date</td>\n            <td className=\"p-2\">End date</td>\n            {this.props.viewThisSession.is_active && (\n              <td className=\"p-2\" colSpan={2}>\n                Status\n              </td>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {/* WHILE DATA FOUND ====================== */}\n          {this.props.viewThisSession.plans.map((item, index) => (\n            <tr\n              key={index + item._id}\n              className={`border-b border-gray-200 hover:bg-gray-100`}\n            >\n              <td className=\"p-2 text-left whitespace-nowrap\">{index + 1}</td>\n              <td className=\"p-2 text-left\">\n                <span className=\"text-lg\">\n                  {getPlanTypeByKey(item.type_key) &&\n                    capitalizeFirstLetter(\n                      getPlanTypeByKey(item.type_key)!.type_title\n                    )}\n                </span>\n              </td>\n              <td className=\"p-2 text-left\">{DATE(item.start_date)}</td>\n              <td className=\"p-2 text-left\">{DATE(item.end_date)}</td>\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isPlanActive(this.props.viewThisSession, item) === \"OPEN\" ? (\n                    <span className={`px-2 py-1 font-semibold text-green-700`}>\n                      Open\n                    </span>\n                  ) : isPlanActive(this.props.viewThisSession, item) ===\n                    \"WAITING\" ? (\n                    <span className={`px-2 py-1 font-semibold text-gray-700`}>\n                      Waiting\n                    </span>\n                  ) : (\n                    <span className={`px-2 py-1 font-semibold text-red-700`}>\n                      Closed\n                    </span>\n                  )}\n                </td>\n              )}\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isActivationAllowed(item) && (\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <div\n                        className={`relative ${\n                          this.state.loadingRequest.length > 0\n                            ? \"cursor-not-allowed\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title={\n                          item.type_status === SessionPlanTypeStatus.OPEN\n                            ? \"Deactivating session\"\n                            : \"Activating session\"\n                        }\n                        onClick={() =>\n                          this.state.loadingRequest.length <= 0 &&\n                          this.handlePlanActivation(\n                            this.props.viewThisSession,\n                            item\n                          )\n                        }\n                      >\n                        <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                        <span\n                          className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                            item.type_status === SessionPlanTypeStatus.CLOSED\n                              ? \"bg-red-500\"\n                              : \"bg-green-500 transform translate-x-full\"\n                          }`}\n                        ></span>\n                      </div>\n                      {this.state.loadingRequest === item.type_key && (\n                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                      )}\n                    </div>\n                  )}\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default connect(null, {\n  updateSessionPlan,\n  PushPopupAlert,\n})(SessionDetails);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { fetchUserAccess } from \"../../../actions/users\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { getUserDocuments } from \"../Admin\";\nimport { ClaimGetDocTitle } from \"./ClaimForm\";\n\ntype DocFormViewProps = {\n  thisDoc: DocumentClaimUser;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  userList: UserInterface[];\n  fetchUserAccess: Function;\n  PushPopupAlert: Function;\n};\n\nconst DocFormView: React.FC<DocFormViewProps> = (props) => {\n  const [loadingUsers, setLoadingUsers] = useState(true);\n\n  useEffect(() => {\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n  }, [loadingUsers, props]);\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-xl\">\n              {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisDoc.doc_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n          <div className=\"w-full my-1\">\n            <img\n              src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n              alt=\"doc file\"\n              className={`w-full`}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return {\n    userList: users,\n  };\n};\n\nexport default connect(mapStateToProps, { PushPopupAlert, fetchUserAccess })(\n  DocFormView\n);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getRejectedApplicants = (\n  applicationData: claimApplicationsInterface[]\n): claimApplicationsInterface[] => {\n  return applicationData.filter(\n    (item) => item.application_status === ApplicationStates.Rejected\n  );\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormApplicationListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateApplications: claimApplicationsInterface[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n};\n\nconst FormApplicationList: React.FC<FormApplicationListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateApplications, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {getRejectedApplicants(props.candidateApplications).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.application_id\n          )\n        ).length > 0 ? (\n          searchApplication(\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ),\n            searchInput\n          ).map((item, index) => (\n            <div\n              className=\"group flex items-center justify-between my-1 hover:bg-gray-100\"\n              key={index + item.application_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.application_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.position.position_title}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.application_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormApplicationList;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { ClaimGetDocTitle, isClaimAllowed } from \"./ClaimForm\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { CategorySubcategoryData } from \"../../../interfaces/candidatesInterfaces\";\nimport {\n  CandidateClaimInterface,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\n\nexport interface DocumentTitleInterface {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  doc_title: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport const DocumentTitleData = (\n  documentData: DocumentClaimUser[],\n  documentCategories: DocumentReducerInterface\n): DocumentTitleInterface[] | [] => {\n  let documentTemp: DocumentTitleInterface[] = [];\n  for (let i in documentData) {\n    documentTemp.push({\n      category_id: documentData[i].category_id,\n      company: documentData[i].company,\n      description: documentData[i].description,\n      email: documentData[i].email,\n      end_year: documentData[i].end_year,\n      files: documentData[i].files,\n      names: documentData[i].names,\n      phone_number: documentData[i].phone_number,\n      school: documentData[i].school,\n      school_id: documentData[i].school_id,\n      start_year: documentData[i].start_year,\n      sub_category_id: documentData[i].sub_category_id,\n      title: documentData[i].title,\n      year: documentData[i].year,\n      validation_status: documentData[i].validation_status,\n      validated_by: documentData[i].validated_by,\n      doc_id: documentData[i].doc_id,\n      doc_title: ClaimGetDocTitle(documentCategories, documentData[i]).main,\n      category_subcategory_data: documentData[i].category_subcategory_data,\n    });\n  }\n  return documentTemp;\n};\n\nconst getRejectedDocuments = (\n  documentData: DocumentClaimUser[]\n): DocumentClaimUser[] => {\n  console.log({\n    rejected: documentData.filter(\n      (item) => item.validation_status === \"rejected\"\n    ),\n  });\n  return documentData.filter((item) => item.validation_status === \"rejected\");\n};\n\nexport const searchDocuments = (\n  objList: DocumentTitleInterface[],\n  text: any\n): DocumentTitleInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter(\n    (product) =>\n      product.doc_title.toString().toLowerCase().indexOf(text.toLowerCase()) >\n      -1\n  );\n};\n\ntype FormDocumentListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateDocuments: DocumentClaimUser[];\n  documentCategories: DocumentReducerInterface;\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n};\n\nconst FormDocumentList: React.FC<FormDocumentListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.candidateDocuments.filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.doc_id\n          )\n        ).length > 0 ? (\n          searchDocuments(\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ),\n            searchInput\n          ).map((doc, index) => (\n            <section key={index + doc.doc_id}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseClaimFile(false);\n                    props.setClaimFileId(doc.doc_id);\n                  }}\n                >\n                  <p className=\"text-base font-medium text-black\">\n                    {ClaimGetDocTitle(props.documentCategories, doc).main}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => {\n                    props.viewThisFile === doc.doc_id\n                      ? props.setViewThisFile(\"\")\n                      : props.setViewThisFile(doc.doc_id);\n                  }}\n                >\n                  {props.viewThisFile === doc.doc_id ? \"Close\" : \"View\"}\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormDocumentList;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdAdd, MdArrowBack, MdDelete } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { Auth } from \"../../../actions/auth\";\nimport { DocumentClaimUser, getMyClaims } from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport Table from \"../../../components/Table/Table\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport ClaimDocView, { isClaimEvaluated } from \"../ClaimDocView\";\nimport FilterByType from \"./FilterByType\";\nimport ClaimForm, { ClaimGetDocTitle } from \"./ClaimForm\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport { filterClaimsByClaimType } from \"../Admin/AdminFilterByType\";\nimport ClaimApplView from \"../ClaimApplView\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\n\nexport const getDocumentById = (\n  candidateDocuments: DocumentClaimUser[],\n  document_id: string\n): DocumentClaimUser | null => {\n  let result: DocumentClaimUser | undefined = candidateDocuments.find(\n    (item) => item.doc_id === document_id\n  );\n  return result ? result : null;\n};\n\nexport const getApplicationById = (\n  candidateApplications: claimApplicationsInterface[],\n  application_id: string\n): claimApplicationsInterface | null => {\n  let result: claimApplicationsInterface | undefined =\n    candidateApplications.find(\n      (item) => item.application_id === application_id\n    );\n  return result ? result : null;\n};\n\nexport const getClaimById = (\n  claimList: CandidateClaimInterface[],\n  claim_id: string\n): CandidateClaimInterface | null => {\n  let result: CandidateClaimInterface | undefined = claimList.find(\n    (item) => item.id === claim_id\n  );\n  return result ? result : null;\n};\n\nexport enum ClaimTypesEnum {\n  application = \"application\",\n  document = \"document\",\n  exam = \"exam\",\n  marks_publication = \"marks publication\",\n  placement = \"placement\",\n}\nexport const whichClaimType = (\n  thisClaim: CandidateClaimInterface\n): ClaimTypesEnum | undefined => {\n  if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n    return ClaimTypesEnum.application;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    return ClaimTypesEnum.document;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.EXAMINATION) {\n    return ClaimTypesEnum.exam;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.MARKS_PUBLICATION) {\n    return ClaimTypesEnum.marks_publication;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    return ClaimTypesEnum.placement;\n  }\n};\n\nexport const whichClaimStatus = (\n  thisClaim: CandidateClaimInterface\n): {\n  classes: string;\n  status: string;\n} => {\n  let classes: string, status: string;\n  switch (thisClaim.last_claim_status) {\n    case ClaimStatus.COMPLETED:\n      classes = \"text-blue-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.COMPLETED.toLocaleLowerCase());\n      break;\n    case ClaimStatus.EVALUATED:\n      classes = \"text-green-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.EVALUATED.toLocaleLowerCase());\n      break;\n\n    case ClaimStatus.DELETED:\n      classes = \"text-red-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.DELETED.toLocaleLowerCase());\n      break;\n\n    default:\n      classes = \"text-yellow-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.PENDING.toLocaleLowerCase());\n      break;\n  }\n\n  return { classes, status };\n};\n\nexport const displayDocClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: DocumentClaimUser[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = getDocumentById(candidateDocuments, thisClaim.claiming_on_id);\n    result = thisDoc\n      ? ClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  return result;\n};\n\nexport const displayClaimTitle = (\n  claiming: ClaimingReducerType,\n  documentReducer: DocumentReducerInterface,\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = thisClaim.claiming_on_id;\n\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    result = displayDocClaimTitle(\n      documentReducer,\n      claiming.candidateDocuments!,\n      thisClaim\n    );\n  }\n  if (\n    thisClaim.type_key === PlansTypeKeys.APPLICATION &&\n    claiming.candidateApplications\n  ) {\n    let thisApplication = getApplicationById(\n      claiming.candidateApplications,\n      thisClaim.claiming_on_id\n    );\n    if (thisApplication) {\n      result = thisApplication.position.position_title;\n    } else {\n      result = \"Application not found\";\n    }\n  }\n\n  return result;\n};\n\ntype AppProps = {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  documentReducer: DocumentReducerInterface;\n  getMyClaims: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst Index: React.FC<AppProps> = (props) => {\n  const [thisPeriod, setThisPeriod] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(true);\n  const [periodChanged, setPeriodChanged] = useState<boolean>(false);\n  const [loadingDocuments, setLoadingDocuments] = useState<boolean>(true);\n  const [loadingClarifications, setLoadingClarifications] =\n    useState<boolean>(true);\n  const [loadingFields, setLoadingFields] = useState<boolean>(true);\n  const [viewClaim, setViewClaim] = useState<boolean>(false);\n  const [claimId, setClaimId] = useState<string | null>(null);\n  const [claimForm, setClaimForm] = useState<boolean>(false);\n\n  // FOR FORM ================\n  const [viewImage, setViewImage] = useState<boolean>(false);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [reClaiming, setReClaiming] = useState<boolean>(false);\n  const [reClaimingMsg, setReClaimingMsg] = useState<string>(\"\");\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n\n  useEffect(() => {\n    // LOADING APPLICATION SESSION ====================================\n    if (props.application_sessions === null) {\n      props.GetAllSessionPlans((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (thisPeriod === null && !loadingSession && props.application_sessions) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setThisPeriod(\n        thisSession\n          ? thisSession\n          : props.application_sessions[props.application_sessions.length - 1]\n      );\n    }\n\n    if (!props.documentReducer.documentCategory && loadingDocuments) {\n      props.getDocumentCategory();\n      setLoadingDocuments(false);\n    } else if (loadingDocuments) {\n      setLoadingDocuments(false);\n    }\n    if (!props.documentReducer.documentSubCategory && loadingClarifications) {\n      props.getDocumentSubCategory();\n      setLoadingClarifications(false);\n    } else if (loadingClarifications) {\n      setLoadingClarifications(false);\n    }\n    if (!props.documentReducer.documentFields && loadingFields) {\n      props.getDocumentFields();\n      setLoadingFields(false);\n    } else if (loadingFields) {\n      setLoadingFields(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.myClaims === null && thisPeriod !== null) {\n      props.getMyClaims(\n        props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingClaims(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingClaims) {\n      setLoadingClaims(false);\n    }\n  }, [\n    loadingClaims,\n    loadingClarifications,\n    loadingDocuments,\n    loadingFields,\n    loadingSession,\n    props,\n    thisPeriod,\n  ]);\n\n  if (loading === true || props.application_sessions === null) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  const tableData = (): JSX.Element[] => {\n    if (\n      props.claiming.myClaims &&\n      props.claiming.candidateDocuments &&\n      props.claiming.claimTypes &&\n      !loadingDocuments &&\n      !loadingSession &&\n      !loadingClaims &&\n      !periodChanged\n    ) {\n      if (\n        filterClaimsByClaimType(\n          props.claiming.myClaims,\n          props.claiming.selectedClaimType\n        ).length <= 0\n      ) {\n        return [\n          <tr\n            className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n            key=\"key3201\"\n          >\n            <td className=\"px-3 py-1\">\n              <NoResult\n                theme={NoResultThemes.Light}\n                value={\"No claim found!\"}\n              />\n            </td>\n          </tr>,\n        ];\n      }\n      return filterClaimsByClaimType(\n        props.claiming.myClaims,\n        props.claiming.selectedClaimType\n      ).map((claim, index) => (\n        <tr\n          className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n          key={index + claim.id}\n          onClick={() => {\n            setViewClaim(true);\n            setClaimId(claim.id);\n          }}\n        >\n          <td className=\"px-3 py-1 whitespace-nowrap\">\n            {displayClaimTitle(props.claiming, props.documentReducer, claim)}\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            {whichClaimType(claim) ? whichClaimType(claim) : \"-\"}\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            <span\n              className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                whichClaimStatus(claim).classes\n              }`}\n            >\n              {whichClaimStatus(claim).status}\n            </span>\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n              View\n            </button>\n          </td>\n        </tr>\n      ));\n    }\n\n    return [\n      <tr key={43243} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n      <tr key={43243343} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n      <tr key={4327543} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n    ];\n  };\n\n  const isDeleteAllowed = (thisCLaim: CandidateClaimInterface): boolean => {\n    if (!isClaimEvaluated(thisCLaim, 1)) {\n      return true;\n    }\n    return false;\n  };\n\n  const onPeriodChange = (period_id: string) => {\n    setPeriodChanged(true);\n    props.getMyClaims(\n      props.auth.user.user_id,\n      period_id,\n      (status: boolean, msg: string) => {\n        !status && setPeriodChanged(false);\n        if (status === false && msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n  };\n\n  const handleDelete = async () => {};\n\n  return (\n    <Fragment>\n      {/* {props.claiming.myClaims} */}\n      {/* SIDE NAVIGATION */}\n      {!viewClaim && (\n        <SideNavigation>\n          <button\n            className=\"btn mb-3 border-2 border-blue-500 hover:bg-blue-500 hover:text-white flex items-center flex-1 font-bold w-full focus:outline-none\"\n            onClick={() => setClaimForm(true)}\n            disabled={viewClaim || loading}\n          >\n            <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n            <span>Claiming</span>\n          </button>\n\n          {/* FILTER SECTION */}\n          <FilterByType loadingClaims={loadingClaims} />\n          {/* END FILTER SECTION */}\n        </SideNavigation>\n      )}\n      {/* END SIDE NAVIGATION */}\n\n      {/* CLAIM TITLE ===================================== */}\n      {!viewClaim && (\n        <ClaimHeaderTitle\n          headerTitle={`${\n            props.claiming.selectedClaimType === \"all\"\n              ? \"All\"\n              : props.claiming.selectedClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              ? \"Documents\"\n              : props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              ? \"Applications\"\n              : props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              ? \"Exam\"\n              : props.claiming.selectedClaimType ===\n                PlansTypeKeys.MARKS_PUBLICATION\n              ? \"Marks publication\"\n              : props.claiming.selectedClaimType ===\n                PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Placements\"\n              : \"\"\n          } Claiming`}\n          loading={loading}\n          loadingSession={loadingSession}\n          thisPeriod={thisPeriod}\n          setThisPeriod={setThisPeriod}\n          setLoadingSession={setLoadingSession}\n          application_sessions={props.application_sessions}\n          onPeriodChange={onPeriodChange}\n          periodChanged={periodChanged}\n        />\n      )}\n      {/* END CLAIM TITLE ===================================== */}\n\n      {!viewClaim && (\n        <section className=\"bg-white w-full p-1\">\n          {\n            <Table\n              columns={[\n                { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                {\n                  columnTitle: \"\",\n                  alignText: \"left\",\n                  padding: \"p-3\",\n                },\n                {\n                  columnTitle: \"\",\n                  alignText: \"left\",\n                  padding: \"p-3\",\n                },\n                { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n              ]}\n              hideColumns={true}\n              rows={tableData}\n              pagination={true}\n              search={true}\n              thColor=\"gray\"\n              loading={loadingClaims}\n            />\n          }\n        </section>\n      )}\n\n      {/* view claim */}\n      {viewClaim &&\n        props.claiming.myClaims &&\n        claimId &&\n        getClaimById(props.claiming.myClaims, claimId) && (\n          <section className=\"bg-white w-full p-1 my-4\">\n            {/* VIEW CLAIM HEADER =============================== */}\n            <section className=\"flex items-center gap-2 py-2 border-b\">\n              <button\n                className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                  loadingRequest ? \"cursor-not-allowed\" : \"cursor-pointer\"\n                } animate__animated animate__fadeIn`}\n                disabled={loadingRequest}\n                onClick={() => {\n                  setViewClaim(false);\n                  setViewImage(false);\n                  setLoadingRequest(false);\n                  setFormError(null);\n                  setReClaiming(false);\n                  setReClaimingMsg(\"\");\n                }}\n              >\n                <MdArrowBack className=\"w-7 h-7\" />\n              </button>\n              {isDeleteAllowed(\n                getClaimById(props.claiming.myClaims, claimId)!\n              ) && (\n                <button\n                  className={`bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    loadingRequest ? \"cursor-not-allowed\" : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={loadingRequest}\n                  onClick={() => {\n                    handleDelete();\n                  }}\n                >\n                  <MdDelete className=\"w-7 h-7\" />\n                </button>\n              )}\n              {/* <div\n            className={`text-blue-600 font-extrabold ${\n              modalAction ? \"text-2xl\" : \"text-xl\"\n            } px-2`}\n          >\n            {modalAction === \"CREATE_POSITION\"\n              ? \"Creating new position\"\n              : modalAction === \"UPDATE_POSITION\"\n              ? \"Updating \" + positionTitle\n              : \"Positions\"}\n          </div> */}\n            </section>\n            {/* END VIEW CLAIM HEADER =============================== */}\n\n            <section className=\"my-2\">\n              {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n              {getClaimById(props.claiming.myClaims, claimId)!.type_key ===\n                PlansTypeKeys.DOCUMENT_VALIDATION &&\n              props.claiming.candidateDocuments &&\n              getDocumentById(\n                props.claiming.candidateDocuments,\n                getClaimById(props.claiming.myClaims, claimId)!.claiming_on_id\n              ) ? (\n                <ClaimDocView\n                  thisDoc={\n                    getDocumentById(\n                      props.claiming.candidateDocuments,\n                      getClaimById(props.claiming.myClaims, claimId)!\n                        .claiming_on_id\n                    )!\n                  }\n                  documentCategories={props.documentReducer}\n                  thisClaim={getClaimById(props.claiming.myClaims, claimId)!}\n                  viewImage={viewImage}\n                  setViewImage={setViewImage}\n                  loadingRequest={loadingRequest}\n                  setLoadingRequest={setLoadingRequest}\n                  reClaiming={reClaiming}\n                  setReClaiming={setReClaiming}\n                  reClaimingMsg={reClaimingMsg}\n                  setReClaimingMsg={setReClaimingMsg}\n                  formError={formError}\n                  setFormError={setFormError}\n                />\n              ) : (\n                getClaimById(props.claiming.myClaims, claimId)!.type_key ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION && (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"Document not found\"}\n                  />\n                )\n              )}\n              {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n\n              {/* ############################################################### */}\n\n              {/* VIEWING CLAIM OF AN APPLICATION ===================== */}\n              {getClaimById(props.claiming.myClaims, claimId)!.type_key ===\n                PlansTypeKeys.APPLICATION &&\n              props.claiming.candidateApplications &&\n              getApplicationById(\n                props.claiming.candidateApplications,\n                getClaimById(props.claiming.myClaims, claimId)!.claiming_on_id\n              ) ? (\n                <ClaimApplView\n                  thisApplication={\n                    getApplicationById(\n                      props.claiming.candidateApplications,\n                      getClaimById(props.claiming.myClaims, claimId)!\n                        .claiming_on_id\n                    )!\n                  }\n                  documentCategories={props.documentReducer}\n                  thisClaim={getClaimById(props.claiming.myClaims, claimId)!}\n                  viewPosition={viewImage}\n                  setViewPosition={setViewImage}\n                  loadingRequest={loadingRequest}\n                  setLoadingRequest={setLoadingRequest}\n                  reClaiming={reClaiming}\n                  setReClaiming={setReClaiming}\n                  reClaimingMsg={reClaimingMsg}\n                  setReClaimingMsg={setReClaimingMsg}\n                  formError={formError}\n                  setFormError={setFormError}\n                />\n              ) : (\n                getClaimById(props.claiming.myClaims, claimId)!.type_key ===\n                  PlansTypeKeys.APPLICATION && (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"Application not found\"}\n                  />\n                )\n              )}\n            </section>\n          </section>\n        )}\n      {/* end view claim */}\n\n      {/* CLAIM FORM  ################ */}\n      {claimForm && (\n        <ClaimForm formState={claimForm} setFormState={setClaimForm} />\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n}: StoreState): {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  documentReducer: DocumentReducerInterface;\n} => {\n  return {\n    auth: auth,\n    claiming,\n    application_sessions: sessionPlan.allSessionPlans,\n    documentReducer: document,\n  };\n};\n\nexport const CandidateClaim = connect(mapStateToProps, {\n  getMyClaims,\n  GetAllSessionPlans,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(Index);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ClaimStatus, PlansTypeKeys } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\ntype FilterByTypeProps = {\n  // thisClaimType: ClaimTypesInterface | \"ALL\";\n  // setThisClaimType: React.Dispatch<\n  //   React.SetStateAction<ClaimTypesInterface | \"ALL\">\n  // >;\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst FilterByType: React.FC<FilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRejectedApplications, setLoadingRejectedApplications] =\n    useState<boolean>(true);\n  const [loadingRejectedDocuments, setLoadingRejectedDocuments] =\n    useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.candidateApplications === null) {\n      props.getMyRejectedApplications(\n        props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          if (status === false) {\n            if (msg.length > 0) {\n              props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            setLoadingRejectedApplications(false);\n          }\n        }\n      );\n    } else if (loadingRejectedApplications) {\n      setLoadingRejectedApplications(false);\n    }\n\n    if (props.claiming.candidateDocuments === null) {\n      console.log(\"filterrrrrrrrrrrrrrrrrrrr loadingRejectedDocuments\");\n      props.getMyRejectedDocuments((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingRejectedDocuments(false);\n        }\n      });\n    } else if (loadingRejectedDocuments) {\n      setLoadingRejectedDocuments(false);\n    }\n\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n    }\n\n    if (\n      !loadingRejectedApplications &&\n      !loadingRejectedDocuments &&\n      !loadingClaimTypes &&\n      loading\n    ) {\n      setLoading(false);\n    }\n  }, [\n    loading,\n    loadingClaimTypes,\n    loadingRejectedApplications,\n    loadingRejectedDocuments,\n    props,\n  ]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.myClaims && thisType === \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n    if (claiming.myClaims && thisType !== \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {/* MARKS PUBLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.MARKS_PUBLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Marks publication\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.MARKS_PUBLICATION\n              )}\n            />\n          </div>\n          {/* PLACEMENT TRANSFER ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n            }}\n          >\n            <MainItem\n              title={\"Placement\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.PLACEMENT_TRANSFER\n              )}\n            />\n          </div>\n          {/* <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.APPLICATION)}\n              active={props.thisClaimType === ClaimTypesInterface.APPLICATION}\n              count={countClaims(props.claiming).applications}\n            />\n          </div>\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.PLACEMENT);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.PLACEMENT)}\n              active={props.thisClaimType === ClaimTypesInterface.PLACEMENT}\n              count={countClaims(props.claiming).placement}\n            />\n          </div> */}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default connect(mapStateToProps, {\n  GetClaimingTypes,\n  setSelectedClaimType,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  PushPopupAlert,\n})(FilterByType);\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport { fetchUserAccess } from \"../../actions/users\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport {\n  DATE,\n  errorToText,\n  showDate,\n  timestampToDate,\n} from \"../../utils/functions\";\nimport ViewRequirements from \"../Positions/ViewRequirements\";\nimport { getUserDocuments } from \"./Admin\";\nimport {\n  FC_ApplicationPositionDistinctCategory,\n  showEvaluator,\n} from \"./Candidate/ApplicationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisApplication: claimApplicationsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  setViewPosition: React.Dispatch<React.SetStateAction<boolean>>;\n  loadingRequest: boolean;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  reClaiming: boolean;\n  setReClaiming: React.Dispatch<React.SetStateAction<boolean>>;\n  reClaimingMsg: string;\n  setReClaimingMsg: React.Dispatch<React.SetStateAction<string>>;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: React.Dispatch<\n    React.SetStateAction<{\n      element: string;\n      msg: string;\n    } | null>\n  >;\n\n  // REDUX DATA =====================\n  userList: UserInterface[];\n  fetchUserAccess: Function;\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const [loadingUsers, setLoadingUsers] = useState(true);\n\n  useEffect(() => {\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n  }, [loadingUsers, props]);\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim.id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous\n                  ? props.thisClaim.previous.status ===\n                    ApplicationStates.Rejected\n                  : props.thisApplication.application_status ===\n                    ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(\n                    props.thisApplication.application_status\n                  )}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : props.thisClaim.previous ? (\n                showEvaluator(\n                  props.userList,\n                  props.thisClaim.previous.evaluated_by\n                )\n              ) : (\n                showEvaluator(\n                  props.userList,\n                  props.thisApplication.override_by.user_id\n                )\n              )}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisApplication.override_by.comment}\n            </span>\n          </div>\n\n          {/* DISPLAY POSITION ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {props.thisApplication.position.description}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.school_level_id\n                        .school_level_name\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.education_institute_id\n                        .education_category_title\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {props.thisApplication.position.courses.map(\n                      (item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            props.thisApplication.position.courses.length - 1 &&\n                            \",\"}\n                        </div>\n                      )\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {props.thisApplication.position.requirements.length > 0 ? (\n                  FC_ApplicationPositionDistinctCategory(\n                    props.thisApplication.position,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewRequirements\n                          requirements={FC_ApplicationPositionDistinctCategory(\n                            props.thisApplication.position,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {loadingUsers ? (\n                          <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n                        ) : getUserDocuments(\n                            props.userList,\n                            claim.evaluated_by\n                          ) ? (\n                          getUserDocuments(props.userList, claim.evaluated_by)!\n                            .user.user_info.fname +\n                          \" \" +\n                          getUserDocuments(props.userList, claim.evaluated_by)!\n                            .user.user_info.lname\n                        ) : (\n                          \"-\"\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return { userList: users };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUserAccess,\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n"],"sourceRoot":""}
{"version":3,"sources":["interfaces/candidatesInterfaces.ts","interfaces/events.ts","interfaces/position.ts","containers/DoExam/QuestionDetails/Answers/MultipleChoice.tsx","containers/DoExam/QuestionDetails/ConvertingAnswers.ts","containers/DoExam/QuestionDetails/Answers/TrueFalse.tsx","containers/DoExam/QuestionDetails/Answers/Matching.tsx","containers/DoExam/QuestionDetails/Answers/SimpleCalculated.tsx","containers/DoExam/QuestionDetails/Answers/ShortAnswer.tsx","containers/DoExam/QuestionDetails/Answers/Numerical.tsx","containers/DoExam/QuestionDetails/Answers/CalculatedMultipleChoice.tsx","containers/DoExam/QuestionDetails/QuestionDetails.tsx"],"names":["DocumentStatus","Events","ExamEvents","ExamEventTypes","validateDocCategory","requirement","userDocuments","undefined","find","item","category_id","category","user_detail_category_id","validateDocSubcategory","result","position_requirement","length","i","filterData","category_subcategory_data","category_subcategory_Data_id","_id","required","push","category_subcat_id","user_detail_subcategory_id","subcategory","validateDocSubcategoryOptional","returnValidatePosition","requirements","documents","status","MultipleChoice","props","checkAnswer","res","available_answers","check","itm","question_id","selectedQuestionAnswer","x","answer","id","addAnswerItemFn","newAnswers","answerQuestionFn","useEffect","answers","a","value","map","onClick","oldAnswers","temp","type","questionTypeElementsType","SingleMultiple","t","addAnswer","className","toMultipleChoice","toTrueFalse","toMatching","toSimpleCalculated","toShortAnswer","toNumerical","toCalculatedMultipleChoice","TrueFalse","Matching","checkIfSelected","ans","onChange","e","target","selected","SimpleCalculated","answeredValue","toString","ShortAnswer","style","minHeight","Numerical","CalculatedMultipleChoice","filter","QuestionDetails","connect","auth","doExam","candidateExam","system","questionTypes","setSelectedExamQuestion","setQuestionLanguage","loadQuestionTypes","useState","loading","setLoading","QuestionData","candidate_exam","q","questions","selected_question","findSelectedQuestionDetails","question","Loading","LoadingType","white","submitQuestionAnswer","language","selected_language","title","description","QuestionLanguages","key","findQuestionType","question_answers","console","log","SimpleCalculate","Numeric"],"mappings":"ydAqJYA,ECrJAC,EAOAC,EAmCAC,EC+BCC,EAAsB,SACjCC,EACAC,GACI,IAAD,EACH,YAIqBC,KAHnB,UAAAD,EAAcE,MACZ,SAACC,GAAD,OACEA,EAAKC,cAAgBL,EAAYM,SAASC,kCAF9C,eAGGF,aAEIL,EAAYM,SAASC,wBAErB,MAyBEC,EAAyB,SACpCR,EACAC,GAEA,IAAIQ,EAIE,GACN,GAAIT,EAAYU,qBAAqBC,OAAS,EAAG,CAAC,IAAD,WACtCC,GADsC,MAEzCC,EAAU,UAAGZ,EAAcE,MAAK,SAACC,GAAD,OAAUA,EAAKU,2BACjDV,EAAKU,0BAA0BC,+BAAiCf,EAAYU,qBAAqBE,GAAGI,cADxF,aAAG,EAEZF,+BACeZ,IAAfW,GAA2C,OAAfA,IACqB,IAAjDb,EAAYU,qBAAqBE,GAAGK,UAEvCR,EAAOS,KAAK,CACVC,mBAAoBnB,EAAYU,qBAAqBE,GAAGI,IACxDX,YAAaL,EAAYM,SAASC,wBAClCa,2BACEpB,EAAYqB,YAAYD,8BAXhC,IAAK,IAAIR,KAAKZ,EAAYU,qBAAuB,EAAxCE,GAgBX,OAAOH,GAIIa,EAAiC,SAC5CtB,EACAC,GAEA,IAAIQ,EAIE,GACN,GAAIT,EAAYU,qBAAqBC,OAAS,EAAG,CAAC,IAAD,WACtCC,GADsC,MAEzCC,EAAU,UAAGZ,EAAcE,MAAK,SAACC,GAAD,OAAUA,EAAKU,2BACjDV,EAAKU,0BAA0BC,+BAAiCf,EAAYU,qBAAqBE,GAAGI,cADxF,aAAG,EAEZF,+BACeZ,IAAfW,GAA2C,OAAfA,IACqB,IAAjDb,EAAYU,qBAAqBE,GAAGK,UAEvCR,EAAOS,KAAK,CACVC,mBAAoBnB,EAAYU,qBAAqBE,GAAGI,IACxDX,YAAaL,EAAYM,SAASC,wBAClCa,2BACEpB,EAAYqB,YAAYD,8BAXhC,IAAK,IAAIR,KAAKZ,EAAYU,qBAAuB,EAAxCE,GAgBX,OAAOH,GAGIc,EAAyB,SACpCC,EACAC,GAEA,IAAIC,GAAS,EACb,IAAK,IAAId,KAAKY,EACwC,IAAhDA,EAAaZ,GAAGF,qBAAqBC,OAEjB,OAApBa,EAAaZ,IACC,OAAda,GACoD,OAApD1B,EAAoByB,EAAaZ,GAAIa,SACevB,IAApDH,EAAoByB,EAAaZ,GAAIa,KAErCC,GAAS,GAGuD,IAA9DlB,EAAuBgB,EAAaZ,GAAIa,GAAWd,SACrDe,GAAS,GAIf,OAAOA,G,kBFzCG/B,K,kBAAAA,E,oBAAAA,E,qBAAAA,M,cCrJAC,K,gCAAAA,E,sCAAAA,E,sBAAAA,E,uCAAAA,M,cAOAC,K,sCAAAA,E,sCAAAA,E,oCAAAA,E,oCAAAA,E,sCAAAA,E,sCAAAA,E,sDAAAA,E,sDAAAA,E,8CAAAA,E,8CAAAA,E,oDAAAA,E,oDAAAA,E,4DAAAA,E,4DAAAA,E,oDAAAA,E,oDAAAA,E,oDAAAA,E,oDAAAA,E,kDAAAA,E,kDAAAA,E,gDAAAA,E,iDAAAA,M,cAmCAC,K,4BAAAA,E,wCAAAA,M,+IEsEG6B,EAhGQ,SAACC,GAEtB,IAAMC,EAAc,SAACzB,GACnB,IAAI0B,GAAM,EACV,GAAIF,EAAMG,kBAAkBpB,OAAS,EAAG,CACtC,IAAIqB,EAAQJ,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBN,EAAMO,uBAAuBD,eACjG,QAAchC,IAAV8B,EAAqB,CACvB,IAAII,EAAIJ,EAAMK,OAAOlC,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOlC,EAAKkC,WACvCpC,IAANkC,IAAgC,IAAbA,EAAEV,SACvBI,GAAM,IAIZ,OAAOA,GAGHS,EAAkB,SAACC,GAC0B,OAA7CZ,EAAMO,uBAAuBD,aAC/BN,EAAMa,iBAAiB,CACrBP,YAAaN,EAAMO,uBAAuBD,YAC1CR,QAAQ,EACRW,OAAQG,KAsDd,OApBAE,qBAAU,WAER,QAAaxC,IADF0B,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBN,EAAMO,uBAAuBD,qBAEjDhC,IAAzC0B,EAAMO,uBAAuBQ,cAA0DzC,IAAjC0B,EAAMO,wBAAsF,OAA7CP,EAAMO,uBAAuBD,YAAsB,CAC1J,IAD0J,EACtJM,EAAsD,GADgG,cAE3IZ,EAAMO,uBAAuBQ,SAF8G,IAE1J,2BAAqD,CAAC,IAA7CC,EAA4C,QACnDJ,EAAU,sBAAOA,GAAP,CAAmB,CAC3BF,GAAIM,EAAEN,GACNO,MAAOD,EAAEC,MACTnB,QAAQ,MAN8I,8BAS1JE,EAAMa,iBAAiB,CACrBP,YAAaN,EAAMO,uBAAuBD,YAC1CR,QAAQ,EACRW,OAAQG,OAIb,CAACZ,IAEF,8BACoC,OAAjCA,EAAMO,6BACkCjC,IAAzC0B,EAAMO,uBAAuBQ,SAAyBf,EAAMO,uBAAuBQ,QAAQG,KAAI,SAAC1C,GAAD,OAC7F,sBAAK2C,QAAS,kBAtDF,SAAC3C,EAA6C8B,GAC9D,IAAIc,EAAapB,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBA,KACzE,QAAmBhC,IAAf8C,EAA0B,CAE5B,IAAIC,EAAgD,GACpD,GAAIrB,EAAMsB,OAASC,IAAyBC,eAAgB,CAAC,IAAD,gBAC5CJ,EAAWX,QADiC,IAC1D,2BAAiC,CAAC,IAAzBgB,EAAwB,QAC/BJ,EAAI,sBAAOA,GAAP,CAAa,CACfX,GAAIe,EAAEf,GACNO,MAAOQ,EAAER,MACTnB,QAAQ,MAL8C,8BAQ1Da,EAAgBU,GAElB,IAb4B,EAaxBT,EAAsD,GAb9B,cAcE,IAAhBS,EAAKtC,OAAeqC,EAAWX,OAASY,GAd1B,IAc5B,2BAA4D,CAAC,IAApDb,EAAmD,QAExDI,EADEJ,EAAEE,KAAOlC,EAAKkC,GACN,sBAAOE,GAAP,CAAmB,CAC3BF,GAAIlC,EAAKkC,GACTO,MAAOzC,EAAKyC,MACZnB,OAAQE,EAAMsB,OAASC,IAAyBC,iBAAyBhB,EAAEV,UAGnE,sBAAOc,GAAP,CAAmBJ,KAtBL,8BAyB5BG,EAAgBC,IA2BMc,CAAUlD,EAAMwB,EAAMO,uBAAuBD,cAAcqB,UAAS,qBAAqC,IAAtB1B,EAAYzB,GAAiB,wFAA0F,sDAAtI,2DAAxF,WACyB,IAAtByB,EAAYzB,GACb,mCACCwB,EAAMsB,OAASC,IAAyBC,eACzC,cAAC,KAAD,CAAsBG,UAAU,aAChC,cAAC,IAAD,CAAmBA,UAAU,eAE7B3B,EAAMsB,OAASC,IAAyBC,eACxC,cAAC,KAAD,CAAwBG,UAAU,aAClC,cAAC,IAAD,CAAqBA,UAAU,aAC/B,sBAAMA,UAAU,OAAhB,SAAwBnD,EAAKyC,iBCvG1BW,EAAmB,SAACb,GAC/B,IAD2F,EACvFb,EAA+C,GADwC,cAExEa,GAFwE,IAE3F,2BAA4B,CAAC,IAApBN,EAAmB,QAC1BP,EAAG,sBAAOA,GAAP,CAAY,CACbQ,GAAID,EAAOC,GACXO,MAAOR,EAAOQ,MACdnB,OAAQW,EAAOX,WANwE,8BAS3F,OAAOI,GAGI2B,EAAc,SAACd,GAC1B,IADiF,EAC7Eb,EAA0C,GADmC,cAE9Da,GAF8D,IAEjF,2BAA4B,CAAC,IAApBN,EAAmB,QAC1BP,EAAG,sBAAOA,GAAP,CAAY,CACbQ,GAAID,EAAOC,GACXO,MAAOR,EAAOQ,MACdnB,OAAQW,EAAOX,WAN8D,8BASjF,OAAOI,GAGI4B,EAAa,SAACf,GACzB,IAD+E,EAC3Eb,EAAyC,GADkC,cAE5Da,GAF4D,IAE/E,2BAA4B,CAAC,IAApBN,EAAmB,QAC1BP,EAAG,sBAAOA,GAAP,CAAY,CACbQ,GAAID,EAAOC,GACXO,MAAOR,EAAOQ,MACdnB,OAAQW,EAAOX,WAN4D,8BAS/E,OAAOI,GAGI6B,EAAqB,SAAChB,GACjC,IAD+F,EAC3Fb,EAAiD,GAD0C,cAE5Ea,GAF4E,IAE/F,2BAA4B,CAAC,IAApBN,EAAmB,QAC1BP,EAAG,sBAAOA,GAAP,CAAY,CACbQ,GAAID,EAAOC,GACXO,MAAOR,EAAOQ,MACdnB,OAAQW,EAAOX,WAN4E,8BAS/F,OAAOI,GAGI8B,EAAgB,SAACjB,GAC5B,IADqF,EACjFb,EAA4C,GADqC,cAElEa,GAFkE,IAErF,2BAA4B,CAAC,IAApBN,EAAmB,QAC1BP,EAAG,sBAAOA,GAAP,CAAY,CACbQ,GAAID,EAAOC,GACXO,MAAOR,EAAOQ,MACdnB,OAAQW,EAAOX,WANkE,8BASrF,OAAOI,GAGI+B,EAAc,SAAClB,GAC1B,IADiF,EAC7Eb,EAA0C,GADmC,cAE9Da,GAF8D,IAEjF,2BAA4B,CAAC,IAApBN,EAAmB,QAC1BP,EAAG,sBAAOA,GAAP,CAAY,CACbQ,GAAID,EAAOC,GACXO,MAAOR,EAAOQ,MACdnB,OAAQW,EAAOX,WAN8D,8BASjF,OAAOI,GAGIgC,EAA6B,SAACnB,GACzC,IAD+G,EAC3Gb,EAAyD,GADkD,cAE5Fa,GAF4F,IAE/G,2BAA4B,CAAC,IAApBN,EAAmB,QAC1BP,EAAG,sBAAOA,GAAP,CAAY,CACbQ,GAAID,EAAOC,GACXO,MAAOR,EAAOQ,MACdnB,OAAQW,EAAOX,WAN4F,8BAS/G,OAAOI,G,QCqBMiC,EAzFG,SAACnC,GACjB,IAAMC,EAAc,SAACzB,GACnB,IAAI0B,GAAM,EACV,GAAIF,EAAMG,kBAAkBpB,OAAS,EAAG,CACtC,IAAIqB,EAAQJ,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBN,EAAMO,uBAAuBD,eACjG,QAAchC,IAAV8B,EAAqB,CACvB,IAAII,EAAIJ,EAAMK,OAAOlC,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOlC,EAAKkC,WACvCpC,IAANkC,IAAgC,IAAbA,EAAEV,SACvBI,GAAM,IAIZ,OAAOA,GAEHS,EAAkB,SAACC,GAC0B,OAA7CZ,EAAMO,uBAAuBD,aAC/BN,EAAMa,iBAAiB,CACrBP,YAAaN,EAAMO,uBAAuBD,YAC1CR,QAAQ,EACRW,OAAQG,KAuDd,OArBAE,qBAAU,WAER,QAAaxC,IADF0B,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBN,EAAMO,uBAAuBD,qBAEjDhC,IAAzC0B,EAAMO,uBAAuBQ,cAA0DzC,IAAjC0B,EAAMO,wBAAsF,OAA7CP,EAAMO,uBAAuBD,YAAsB,CAC1J,IAD0J,EACtJM,EAAiD,GADqG,cAE3IZ,EAAMO,uBAAuBQ,SAF8G,IAE1J,2BAAqD,CAAC,IAA7CC,EAA4C,QACnDJ,EAAU,sBAAOA,GAAP,CAAmB,CAC3BF,GAAIM,EAAEN,GACNO,MAAOD,EAAEC,MACTnB,QAAQ,MAN8I,8BAS1JE,EAAMa,iBAAiB,CACrBP,YAAaN,EAAMO,uBAAuBD,YAC1CR,QAAQ,EACRW,OAAQG,OAIb,CAACZ,IAGF,qBAAK2B,UAAU,GAAf,SACoC,OAAjC3B,EAAMO,6BACkCjC,IAAzC0B,EAAMO,uBAAuBQ,SAAyBf,EAAMO,uBAAuBQ,QAAQG,KAAI,SAAC1C,GAAD,OAC7F,sBAAK2C,QAAS,kBAtDF,SAAC3C,EAAwC8B,GACzD,IAAIc,EAAapB,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBA,KACzE,QAAmBhC,IAAf8C,EAA0B,CAE5B,IAF4B,EAExBC,EAA2C,GAFnB,cAGdD,EAAWX,QAHG,IAG5B,2BAAiC,CAAC,IAAzBgB,EAAwB,QAC/BJ,EAAI,sBAAOA,GAAP,CAAa,CACfX,GAAIe,EAAEf,GACNO,MAAOQ,EAAER,MACTnB,QAAQ,MAPgB,8BAU5Ba,EAAgBU,GAChB,IAX4B,EAWxBT,EAAiD,GAXzB,cAYE,IAAhBS,EAAKtC,OAAeqC,EAAWX,OAASY,GAZ1B,IAY5B,2BAA4D,CAAC,IAApDb,EAAmD,QAExDI,EADEJ,EAAEE,KAAOlC,EAAKkC,GACN,sBAAOE,GAAP,CAAmB,CAC3BF,GAAIlC,EAAKkC,GACTO,MAAOzC,EAAKyC,MACZnB,QAASU,EAAEV,UAGH,sBAAOc,GAAP,CAAmBJ,KApBL,8BAuB5BG,EAAgBC,IA6BMc,CAAUlD,EAAMwB,EAAMO,uBAAuBD,cAAcqB,UAAS,8BAA8C,IAAtB1B,EAAYzB,GAAiB,wFAA0F,sDAA/I,2DAAxF,WACyB,IAAtByB,EAAYzB,GACb,cAAC,KAAD,CAAsBmD,UAAU,aAChC,cAAC,KAAD,CAAwBA,UAAU,aAClC,sBAAMA,UAAU,OAAhB,SAAwBnD,EAAKyC,iB,QC4BxBmB,EA7GE,SAACpC,GAChB,IASMC,EAAc,SAACzB,GACnB,IAAI0B,GAAM,EACV,GAAIF,EAAMG,kBAAkBpB,OAAS,EAAG,CACtC,IAAIqB,EAAQJ,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBN,EAAMO,uBAAuBD,eACjG,QAAchC,IAAV8B,EAAqB,CACvB,IAAII,EAAIJ,EAAMK,OAAOlC,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOlC,EAAKkC,WACvCpC,IAANkC,GAAgC,KAAbA,EAAEV,SACvBI,GAAM,IAIZ,OAAOA,GAGHwB,EAAY,SAAClD,EAAuC8B,GACxD,IAAIc,EAAapB,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBA,KACzE,QAAmBhC,IAAf8C,EAA0B,CAC5B,IAD4B,EACxBR,EAAgD,GADxB,cAEdQ,EAAWX,QAFG,IAE5B,2BAAiC,CAAC,IAAzBD,EAAwB,QAE7BI,EADEJ,EAAEE,KAAOlC,EAAKkC,GACN,sBAAOE,GAAP,CAAmB,CAC3BF,GAAIlC,EAAKkC,GACTO,MAAOzC,EAAKyC,MACZnB,OAAQtB,EAAKsB,UAGL,sBAAOc,GAAP,CAAmBJ,KAVL,+BAzBR,SAACI,GAC0B,OAA7CZ,EAAMO,uBAAuBD,aAC/BN,EAAMa,iBAAiB,CACrBP,YAAaN,EAAMO,uBAAuBD,YAC1CR,QAAQ,EACRW,OAAQG,IAiCVD,CAAgBC,KAIpBE,qBAAU,WAER,QAAaxC,IADF0B,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBN,EAAMO,uBAAuBD,qBAEjDhC,IAAzC0B,EAAMO,uBAAuBQ,cAA0DzC,IAAjC0B,EAAMO,wBAAsF,OAA7CP,EAAMO,uBAAuBD,YAAsB,CAC1J,IAD0J,EACtJM,EAAgD,GADsG,cAE3IZ,EAAMO,uBAAuBQ,SAF8G,IAE1J,2BAAqD,CAAC,IAA7CC,EAA4C,QACnDJ,EAAU,sBAAOA,GAAP,CAAmB,CAC3BF,GAAIM,EAAEN,GACNO,MAAOD,EAAEC,MACTnB,OAAQ,OAN8I,8BAS1JE,EAAMa,iBAAiB,CACrBP,YAAaN,EAAMO,uBAAuBD,YAC1CR,QAAQ,EACRW,OAAQG,OAIb,CAACZ,IAEJ,IAAMqC,EAAkB,SAAC7B,GACvB,IAAIa,EAAOrB,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBN,EAAMO,uBAAuBD,eAChG,QAAahC,IAAT+C,EAAoB,CACtB,IAAIiB,EAAMjB,EAAKZ,OAAOlC,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOF,KAC7C,QAAYlC,IAARgE,GAAoC,KAAfA,EAAIxC,OAC3B,OAAOwC,EAAIxC,OAGf,OAAO,GAGT,OACE,qBAAK6B,UAAU,GAAf,SACoC,OAAjC3B,EAAMO,6BACkCjC,IAAzC0B,EAAMO,uBAAuBQ,SAAyBf,EAAMO,uBAAuBQ,QAAQG,KAAI,SAAC1C,GAAD,OAC7F,sBAAKmD,UAAS,8BAA8C,IAAtB1B,EAAYzB,GAAiB,gCAAkC,GAAvF,qBAAd,UACE,sBAAKmD,UAAU,8CAAf,WACyB,IAAtB1B,EAAYzB,GACb,cAAC,IAAD,CAAsBmD,UAAU,aAChC,cAAC,KAAD,CAAwBA,UAAU,aAClC,sBAAMA,UAAU,OAAhB,SAAwBnD,EAAKyC,WAE/B,qBAAKU,UAAU,aAAf,SACE,yBACAY,SAAU,SAACC,GACTd,EAAU,CACRhB,GAAIlC,EAAKkC,GACTO,MAAOzC,EAAKyC,MACZnB,OAAQ0C,EAAEC,OAAOxB,OAChBjB,EAAMO,uBAAuBD,cAElCqB,UAAS,mGAAmH,IAAtB1B,EAAYzB,GAAkB,gCAAkC,iEARtK,UASE,wBAAQyC,MAAM,GAAd,6BACkC,OAAjCjB,EAAMO,6BACoCjC,IAAzC0B,EAAMO,uBAAuBQ,SAAyBf,EAAMO,uBAAuBQ,QAAQG,KAAI,SAACb,EAAKG,GAAN,OAC7F,wBAAQkC,SAAUrC,EAAIP,SAAWuC,EAAgB7D,EAAKkC,IAAgCO,MAAOZ,EAAIP,OAAjG,SAA0GO,EAAIP,QAA/BU,EAAI,oBCpBtFmC,EAjFU,SAAC3C,GACxB,IAAMC,EAAc,SAACzB,GACnB,IAAI0B,GAAM,EACV,GAAIF,EAAMG,kBAAkBpB,OAAS,EAAG,CACtC,IAAIqB,EAAQJ,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBN,EAAMO,uBAAuBD,eACjG,QAAchC,IAAV8B,EAAqB,CACvB,IAAII,EAAIJ,EAAMK,OAAOlC,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOlC,EAAKkC,WACvCpC,IAANkC,GAAkC,KAAfA,EAAES,MAAM,KAC7Bf,GAAM,IAIZ,OAAOA,GAeHwB,EAAY,SAAClD,EAAqD8B,GACtE,IAduBM,EAcnBQ,EAAapB,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBA,UACtDhC,IAAf8C,IAfmBR,EAiBL,CAAC,CACfF,GAAIU,EAAWX,OAAO,GAAGC,GACzBO,MAAOzC,EAAKyC,MACZnB,OAAQsB,EAAWX,OAAO,GAAGX,SAnBgB,OAA7CE,EAAMO,uBAAuBD,aAC/BN,EAAMa,iBAAiB,CACrBP,YAAaN,EAAMO,uBAAuBD,YAC1CR,QAAQ,EACRW,OAAQ,CAAC,CACPC,GAAIE,EAAW,GAAGF,GAClBO,MAAO,CAACL,EAAW,GAAGK,OACtBnB,OAAQc,EAAW,GAAGd,aAgBxB8C,EAAgB,WACpB,IAAInC,EAAST,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBN,EAAMO,uBAAuBD,eAClG,YAAkBhC,IAAXmC,EAAuBA,EAAOA,OAAO,GAAGQ,MAAM,GAAG4B,WAAa,IAoBvE,OAjBA/B,qBAAU,gBAEKxC,IADF0B,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBN,EAAMO,uBAAuBD,qBAEjDhC,IAAzC0B,EAAMO,uBAAuBQ,cAA0DzC,IAAjC0B,EAAMO,wBAAsF,OAA7CP,EAAMO,uBAAuBD,aACpIN,EAAMa,iBAAiB,CACrBP,YAAaN,EAAMO,uBAAuBD,YAC1CR,QAAQ,EACRW,OAAQ,CAAC,CACPC,GAAIV,EAAMO,uBAAuBQ,QAAQ,GAAGL,GAC5CO,MAAO,CAAC,IACRnB,OAAQE,EAAMO,uBAAuBQ,QAAQ,GAAGjB,aAKvD,CAACE,IAGF,qBAAK2B,UAAU,GAAf,SACoC,OAAjC3B,EAAMO,6BACkCjC,IAAzC0B,EAAMO,uBAAuBQ,SAAyBf,EAAMO,uBAAuBQ,QAAQG,KAAI,SAAC1C,GAAD,OAC7F,qBAAKmD,UAAS,iDAAd,SACE,uBACAY,SAAU,SAACC,GACTd,EAAU,CACRhB,GAAIlC,EAAKkC,GACTO,MAAOuB,EAAEC,OAAOxB,MAChBnB,OAAQtB,EAAKsB,QACZE,EAAMO,uBAAuBD,cAElCgB,KAAK,OAAOL,MAAO2B,IACnBjB,UAAS,kEAAkF,IAAtB1B,EAAYzB,GAAiB,4DAA8D,6DCK3JsE,EA/EK,SAAC9C,GACnB,IAAMC,EAAc,SAACzB,GACnB,IAAI0B,GAAM,EACV,GAAIF,EAAMG,kBAAkBpB,OAAS,EAAG,CACtC,IAAIqB,EAAQJ,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBN,EAAMO,uBAAuBD,eACjG,QAAchC,IAAV8B,EAAqB,CACvB,IAAII,EAAIJ,EAAMK,OAAOlC,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOlC,EAAKkC,WACvCpC,IAANkC,GAA+B,KAAZA,EAAES,QACvBf,GAAM,IAIZ,OAAOA,GAeHwB,EAAY,SAAClD,EAAqD8B,GACtE,IAduBM,EAcnBQ,EAAapB,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBA,UACtDhC,IAAf8C,IAfmBR,EAiBL,CAAC,CACfF,GAAIU,EAAWX,OAAO,GAAGC,GACzBO,MAAOzC,EAAKyC,MACZnB,OAAQsB,EAAWX,OAAO,GAAGX,SAnBgB,OAA7CE,EAAMO,uBAAuBD,aAC/BN,EAAMa,iBAAiB,CACrBP,YAAaN,EAAMO,uBAAuBD,YAC1CR,QAAQ,EACRW,OAAQ,CAAC,CACPC,GAAIE,EAAW,GAAGF,GAClBO,MAAOL,EAAW,GAAGK,MACrBnB,OAAQc,EAAW,GAAGd,aAgBxB8C,EAAgB,WACpB,IAAInC,EAAST,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBN,EAAMO,uBAAuBD,eAClG,YAAkBhC,IAAXmC,EAAuBA,EAAOA,OAAO,GAAGQ,MAAQ,IAmBzD,OAhBAH,qBAAU,gBAEKxC,IADF0B,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBN,EAAMO,uBAAuBD,qBAEjDhC,IAAzC0B,EAAMO,uBAAuBQ,cAA0DzC,IAAjC0B,EAAMO,wBAAsF,OAA7CP,EAAMO,uBAAuBD,aACpIN,EAAMa,iBAAiB,CACrBP,YAAaN,EAAMO,uBAAuBD,YAC1CR,QAAQ,EACRW,OAAQ,CAAC,CACPC,GAAIV,EAAMO,uBAAuBQ,QAAQ,GAAGL,GAC5CO,MAAO,GACPnB,OAAQE,EAAMO,uBAAuBQ,QAAQ,GAAGjB,aAKvD,CAACE,IAEF,qBAAK2B,UAAU,GAAf,SACoC,OAAjC3B,EAAMO,6BACkCjC,IAAzC0B,EAAMO,uBAAuBQ,SAAyBf,EAAMO,uBAAuBQ,QAAQG,KAAI,SAAC1C,GAAD,OAC7F,qBAAKmD,UAAS,gEAAd,SACE,0BACAY,SAAU,SAACC,GACTd,EAAU,CACRhB,GAAIlC,EAAKkC,GACTO,MAAOuB,EAAEC,OAAOxB,MAChBnB,OAAQtB,EAAKsB,QACZE,EAAMO,uBAAuBD,cAC/BW,MAAO2B,IACVjB,UAAS,kEAAkF,IAAtB1B,EAAYzB,GAAiB,4DAA8D,mDAAqDuE,MAAO,CAACC,UAAW,mBCQnOC,EAhFG,SAACjD,GACjB,IAAMC,EAAc,SAACzB,GACnB,IAAI0B,GAAM,EACV,GAAIF,EAAMG,kBAAkBpB,OAAS,EAAG,CACtC,IAAIqB,EAAQJ,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBN,EAAMO,uBAAuBD,eACjG,QAAchC,IAAV8B,EAAqB,CACvB,IAAII,EAAIJ,EAAMK,OAAOlC,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOlC,EAAKkC,WACvCpC,IAANkC,GAAkC,KAAfA,EAAES,MAAM,KAC7Bf,GAAM,IAIZ,OAAOA,GAeHwB,EAAY,SAAClD,EAAqD8B,GACtE,IAduBM,EAcnBQ,EAAapB,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBA,UACtDhC,IAAf8C,IAfmBR,EAiBL,CAAC,CACfF,GAAIU,EAAWX,OAAO,GAAGC,GACzBO,MAAO,CAACzC,EAAKyC,OACbnB,OAAQsB,EAAWX,OAAO,GAAGX,SAnBgB,OAA7CE,EAAMO,uBAAuBD,aAC/BN,EAAMa,iBAAiB,CACrBP,YAAaN,EAAMO,uBAAuBD,YAC1CR,QAAQ,EACRW,OAAQ,CAAC,CACPC,GAAIE,EAAW,GAAGF,GAClBO,MAAOL,EAAW,GAAGK,MACrBnB,OAAQc,EAAW,GAAGd,aAgBxB8C,EAAgB,WACpB,IAAInC,EAAST,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBN,EAAMO,uBAAuBD,eAClG,YAAkBhC,IAAXmC,EAAuBA,EAAOA,OAAO,GAAGQ,MAAM,GAAK,IAmB5D,OAhBAH,qBAAU,gBAEKxC,IADF0B,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBN,EAAMO,uBAAuBD,qBAEjDhC,IAAzC0B,EAAMO,uBAAuBQ,cAA0DzC,IAAjC0B,EAAMO,wBAAsF,OAA7CP,EAAMO,uBAAuBD,aACpIN,EAAMa,iBAAiB,CACrBP,YAAaN,EAAMO,uBAAuBD,YAC1CR,QAAQ,EACRW,OAAQ,CAAC,CACPC,GAAIV,EAAMO,uBAAuBQ,QAAQ,GAAGL,GAC5CO,MAAO,CAAC,IACRnB,OAAQE,EAAMO,uBAAuBQ,QAAQ,GAAGjB,aAKvD,CAACE,IAEF,qBAAK2B,UAAU,GAAf,SACoC,OAAjC3B,EAAMO,6BACkCjC,IAAzC0B,EAAMO,uBAAuBQ,SAAyBf,EAAMO,uBAAuBQ,QAAQG,KAAI,SAAC1C,GAAD,OAC7F,qBAAKmD,UAAS,gEAAd,SACE,uBACAY,SAAU,SAACC,GACTd,EAAU,CACRhB,GAAIlC,EAAKkC,GACTO,MAAOuB,EAAEC,OAAOxB,MAChBnB,OAAQtB,EAAKsB,QACZE,EAAMO,uBAAuBD,cAElCgB,KAAK,OAAOL,MAAO2B,IACnBjB,UAAS,kEAAkF,IAAtB1B,EAAYzB,GAAiB,mDAAqD,kDCwBlJ0E,EA/FkB,SAAClD,GAChC,IAAMC,EAAc,SAACzB,GACnB,IAAI0B,GAAM,EACV,GAAIF,EAAMG,kBAAkBpB,OAAS,EAAG,CACtC,IAAIqB,EAAQJ,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBN,EAAMO,uBAAuBD,eACjG,QAAchC,IAAV8B,EAAqB,CACvB,IAAII,EAAIJ,EAAMK,OAAOlC,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOlC,EAAKkC,WACvCpC,IAANkC,IAAgC,IAAbA,EAAEV,SACvBI,GAAM,IAIZ,OAAOA,GAGHS,EAAkB,SAACC,GAC0B,OAA7CZ,EAAMO,uBAAuBD,aAC/BN,EAAMa,iBAAiB,CACrBP,YAAaN,EAAMO,uBAAuBD,YAC1CR,QAAQ,EACRW,OAAQG,KAsDd,OApBAE,qBAAU,WAER,QAAaxC,IADF0B,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBN,EAAMO,uBAAuBD,qBAEjDhC,IAAzC0B,EAAMO,uBAAuBQ,cAA0DzC,IAAjC0B,EAAMO,wBAAsF,OAA7CP,EAAMO,uBAAuBD,YAAsB,CAC1J,IAD0J,EACtJM,EAAgE,GADsF,cAE3IZ,EAAMO,uBAAuBQ,SAF8G,IAE1J,2BAAqD,CAAC,IAA7CC,EAA4C,QACnDJ,EAAU,sBAAOA,GAAP,CAAmB,CAC3BF,GAAIM,EAAEN,GACNO,MAAOD,EAAEC,MACTnB,QAAQ,MAN8I,8BAS1JE,EAAMa,iBAAiB,CACrBP,YAAaN,EAAMO,uBAAuBD,YAC1CR,QAAQ,EACRW,OAAQG,OAIb,CAACZ,IAEF,8BACoC,OAAjCA,EAAMO,6BACkCjC,IAAzC0B,EAAMO,uBAAuBQ,SAAyBf,EAAMO,uBAAuBQ,QAAQG,KAAI,SAAC1C,GAAD,OAC7F,sBAAK2C,QAAS,kBAtDF,SAAC3C,EAAuD8B,GACxE,IAAIc,EAAapB,EAAMG,kBAAkB5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,cAAgBA,KACzE,QAAmBhC,IAAf8C,EAA0B,CAE5B,IAAIC,EAA0D,GAC9D,QAA6C/C,IAAzC0B,EAAMO,uBAAuBQ,SAA4G,IAAnFf,EAAMO,uBAAuBQ,QAAQoC,QAAO,SAAA9C,GAAG,OAAmB,IAAfA,EAAIP,UAAiBf,OAAc,CAAC,IAAD,gBAChIqC,EAAWX,QADqH,IAC9I,2BAAiC,CAAC,IAAzBgB,EAAwB,QAC/BJ,EAAI,sBAAOA,GAAP,CAAa,CACfX,GAAIe,EAAEf,GACNO,MAAOQ,EAAER,MACTnB,QAAQ,MALkI,8BAQ9Ia,EAAgBU,GAElB,IAb4B,EAaxBT,EAAgE,GAbxC,cAcE,IAAhBS,EAAKtC,OAAeqC,EAAWX,OAASY,GAd1B,IAc5B,2BAA4D,CAAC,IAApDb,EAAmD,QAExDI,EADEJ,EAAEE,KAAOlC,EAAKkC,GACN,sBAAOE,GAAP,CAAmB,CAC3BF,GAAIlC,EAAKkC,GACTO,MAAOzC,EAAKyC,MACZnB,YAAiDxB,IAAzC0B,EAAMO,uBAAuBQ,SAA4G,IAAnFf,EAAMO,uBAAuBQ,QAAQoC,QAAO,SAAA9C,GAAG,OAAmB,IAAfA,EAAIP,UAAiBf,SAAuByB,EAAEV,UAGvJ,sBAAOc,GAAP,CAAmBJ,KAtBL,8BAyB5BG,EAAgBC,IA2BMc,CAAUlD,EAAMwB,EAAMO,uBAAuBD,cAAcqB,UAAS,8BAA8C,IAAtB1B,EAAYzB,GAAiB,wFAA0F,sDAA/I,mEAAxF,WACyB,IAAtByB,EAAYzB,GACb,wCAC0CF,IAAzC0B,EAAMO,uBAAuBQ,SAA4G,IAAnFf,EAAMO,uBAAuBQ,QAAQoC,QAAO,SAAA9C,GAAG,OAAmB,IAAfA,EAAIP,UAAiBf,OAC/H,cAAC,KAAD,CAAsB4C,UAAU,aAChC,cAAC,IAAD,CAAmBA,UAAU,oBAEYrD,IAAzC0B,EAAMO,uBAAuBQ,SAA4G,IAAnFf,EAAMO,uBAAuBQ,QAAQoC,QAAO,SAAA9C,GAAG,OAAmB,IAAfA,EAAIP,UAAiBf,OAC9H,cAAC,KAAD,CAAwB4C,UAAU,aAClC,cAAC,IAAD,CAAqBA,UAAU,aAC/B,sBAAMA,UAAU,OAAhB,SAAwBnD,EAAKyC,iBC+HjCmC,EAAkBC,aAVA,SAAC,GAOvB,MAAO,CAAEC,KAD2J,EALpKA,KAMqBC,OAD+I,EAJpKA,OAKqCC,cAD+H,EAHpKA,cAImEC,OADiG,EAFpKA,OAGmFC,cADiF,EADpKA,iBAK+C,CAC/CC,6BACAC,yBACAC,wBAHsBR,EAxLC,SAACrD,GAAiC,IAAD,uHACxD,GAA8B8D,oBAAkB,GAAhD,qBAAOC,GAAP,MAAgBC,GAAhB,MACMC,GAAe,WACnB,IAAI/D,EAAM,KACV,GAA2C,OAAvCF,EAAMwD,cAAcU,eAAyB,CAC/C,IAAIC,EAAmCnE,EAAMwD,cAAcU,eAAeE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIL,EAAMwD,cAAca,mBAAqBhE,EAAIK,KAAOV,EAAMwD,cAAca,0BAC9J/F,IAAN6F,IACFjE,EAAMiE,GAGV,OAAOjE,GAaHoE,GAA8B,WAClC,IAAIpE,EAA8B,GAClC,GAAIF,EAAMwD,cAAcU,eAAgB,CACtC,IAAI1D,EAAIR,EAAMwD,cAAcU,eAAeE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,0BACtF/F,IAANkC,IACFN,EAAMM,EAAE+D,UAGZ,OAAOrE,GAOT,OALAY,qBAAU,WACkC,OAAtCd,EAAM0D,cAAcA,eAAuE,IAA7C1D,EAAM0D,cAAcA,cAAc3E,QAClFiB,EAAM6D,kBAAkBG,MAEzB,CAAChE,IAEF,qBAAK2B,UAAU,qBAAf,UACe,IAAZoC,GACD,qBAAKpC,UAAU,gFAAf,SACE,sBAAKA,UAAU,uCAAf,UACE,qBAAKA,UAAU,qBAAf,wBACA,cAAC6C,EAAA,EAAD,CAASlD,KAAMmD,IAAYC,aAG/B,sBAAK/C,UAAU,gFAAf,WACoC,IAA/B3B,EAAM2E,sBACP,qBAAKhD,UAAU,6EAAf,oCACA,qBAAKA,UAAU,2BAAf,SACE,sBAAKA,UAAU,uCAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,sBAAMA,UAAU,wBAAhB,SACsB,OAAnBsC,OAAA,UAA2BA,YAA3B,iBAA2B,EAAgBM,SAAShG,MAAK,SAAA8B,GAAG,OAAIA,EAAIuE,WAAa5E,EAAMwD,cAAcqB,4BAArG,aAA2B,EAA8FC,SAE5H,sBAAMnD,UAAU,kCAAhB,SACsB,OAAnBsC,OAAA,UAA2BA,YAA3B,iBAA2B,EAAgBM,SAAShG,MAAK,SAAA8B,GAAG,OAAIA,EAAIuE,WAAa5E,EAAMwD,cAAcqB,4BAArG,aAA2B,EAA8FE,kBAG9H,qBAAKpD,UAAU,iDAAf,SACGqD,IAAkB9D,KAAI,SAAC1C,EAAMQ,GAAP,OACrB,qBAAKmC,QAAS,kBAAMnB,EAAM4D,oBAAoBpF,EAAKyG,MAAMtD,UAAS,wBAAmB3B,EAAMwD,cAAcqB,oBAAsBrG,EAAKyG,IAAM,8BAAgC,wBAAxG,gHAAlE,SACE,sBAAgBtD,UAAU,mCAA1B,UACG3B,EAAMwD,cAAcqB,oBAAsBrG,EAAKyG,IAChD,cAAC,KAAD,CAAsBtD,UAAU,kBAChC,cAAC,KAAD,CAAwBA,UAAU,kBAClC,sBAAMA,UAAU,0BAAhB,SAA2CnD,EAAKyC,UAJxCjC,EAAI,eAWxB,sBAAK2C,UAAU,kCAAf,UAE6C,OAA1C3B,EAAMwD,cAAca,mBACsJ,OAA3Ka,YAAgB,UAAClF,EAAMwD,cAAcU,sBAArB,iBAAC,EAAoCE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,4BAA1F,aAAC,EAA6G/C,KAAMtB,EAAM0D,cAAcA,iBACvJwB,YAAgB,UAAClF,EAAMwD,cAAcU,sBAArB,iBAAC,EAAoCE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,4BAA1F,aAAC,EAA6G/C,KAAMtB,EAAM0D,cAAcA,iBAAmBnC,IAAyBxB,gBACrMmF,YAAgB,UAAClF,EAAMwD,cAAcU,sBAArB,iBAAC,EAAoCE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,4BAA1F,aAAC,EAA6G/C,KAAMtB,EAAM0D,cAAcA,iBAAmBnC,IAAyBC,iBACpM,cAAC,EAAD,CACEF,KAAM4D,YAAgB,UAAClF,EAAMwD,cAAcU,sBAArB,iBAAC,EAAoCE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,4BAA1F,aAAC,EAA6G/C,KAAMtB,EAAM0D,cAAcA,eAC9JvD,kBAAmBH,EAAMwD,cAAc2B,iBACvC5E,uBAAwB,CACtBD,YAAaN,EAAMwD,cAAca,kBACjCtD,QAASa,EAAiB0C,KAA8B/F,MAAK,SAAA8B,GAAG,OAAIA,EAAIuE,WAAa5E,EAAMwD,cAAcqB,qBAAoBpE,SAE/HI,iBAAkBb,EAAMa,mBAGiB,OAA1Cb,EAAMwD,cAAca,mBACsJ,OAA3Ka,YAAgB,UAAClF,EAAMwD,cAAcU,sBAArB,iBAAC,EAAoCE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,4BAA1F,aAAC,EAA6G/C,KAAMtB,EAAM0D,cAAcA,gBACxJwB,YAAgB,UAAClF,EAAMwD,cAAcU,sBAArB,iBAAC,EAAoCE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,4BAA1F,aAAC,EAA6G/C,KAAMtB,EAAM0D,cAAcA,iBAAmBnC,IAAyBY,WACpM,cAAC,EAAD,CACEb,KAAM4D,YAAgB,UAAClF,EAAMwD,cAAcU,sBAArB,iBAAC,EAAoCE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,4BAA1F,aAAC,EAA6G/C,KAAMtB,EAAM0D,cAAcA,eAC9JvD,kBAAmBH,EAAMwD,cAAc2B,iBACvC5E,uBAAwB,CACtBD,YAAaN,EAAMwD,cAAca,kBACjCtD,QAASc,EAAYyC,KAA8B/F,MAAK,SAAA8B,GAAG,OAAIA,EAAIuE,WAAa5E,EAAMwD,cAAcqB,qBAAoBpE,SAE1HI,iBAAkBb,EAAMa,mBAGzBuE,QAAQC,IAAI,SAAUH,YAAgB,UAAClF,EAAMwD,cAAcU,sBAArB,iBAAC,EAAoCE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,4BAA1F,aAAC,EAA6G/C,KAAMtB,EAAM0D,cAAcA,gBACpI,OAA1C1D,EAAMwD,cAAca,mBACsJ,OAA3Ka,YAAgB,UAAClF,EAAMwD,cAAcU,sBAArB,iBAAC,EAAoCE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,4BAA1F,aAAC,EAA6G/C,KAAMtB,EAAM0D,cAAcA,gBACxJwB,YAAgB,UAAClF,EAAMwD,cAAcU,sBAArB,iBAAC,EAAoCE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,4BAA1F,aAAC,EAA6G/C,KAAMtB,EAAM0D,cAAcA,iBAAmBnC,IAAyBa,UACpM,cAAC,EAAD,CACEd,KAAM4D,YAAgB,UAAClF,EAAMwD,cAAcU,sBAArB,iBAAC,EAAoCE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,4BAA1F,aAAC,EAA6G/C,KAAMtB,EAAM0D,cAAcA,eAC9JvD,kBAAmBH,EAAMwD,cAAc2B,iBACvC5E,uBAAwB,CACtBD,YAAaN,EAAMwD,cAAca,kBACjCtD,QAASe,EAAWwC,KAA8B/F,MAAK,SAAA8B,GAAG,OAAIA,EAAIuE,WAAa5E,EAAMwD,cAAcqB,qBAAoBpE,SAEzHI,iBAAkBb,EAAMa,mBAGiB,OAA1Cb,EAAMwD,cAAca,mBACsJ,OAA3Ka,YAAgB,UAAClF,EAAMwD,cAAcU,sBAArB,iBAAC,EAAoCE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,4BAA1F,aAAC,EAA6G/C,KAAMtB,EAAM0D,cAAcA,gBACxJwB,YAAgB,UAAClF,EAAMwD,cAAcU,sBAArB,iBAAC,EAAoCE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,4BAA1F,aAAC,EAA6G/C,KAAMtB,EAAM0D,cAAcA,iBAAmBnC,IAAyB+D,iBACpM,cAAC,EAAD,CACEhE,KAAM4D,YAAgB,UAAClF,EAAMwD,cAAcU,sBAArB,kBAAC,EAAoCE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,4BAA1F,cAAC,GAA6G/C,KAAMtB,EAAM0D,cAAcA,eAC9JvD,kBAAmBH,EAAMwD,cAAc2B,iBACvC5E,uBAAwB,CACtBD,YAAaN,EAAMwD,cAAca,kBACjCtD,QAASgB,EAAmBuC,KAA8B/F,MAAK,SAAA8B,GAAG,OAAIA,EAAIuE,WAAa5E,EAAMwD,cAAcqB,qBAAoBpE,SAEjII,iBAAkBb,EAAMa,mBAGiB,OAA1Cb,EAAMwD,cAAca,mBACsJ,OAA3Ka,YAAgB,WAAClF,EAAMwD,cAAcU,sBAArB,mBAAC,GAAoCE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,4BAA1F,cAAC,GAA6G/C,KAAMtB,EAAM0D,cAAcA,gBACxJwB,YAAgB,WAAClF,EAAMwD,cAAcU,sBAArB,mBAAC,GAAoCE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,4BAA1F,cAAC,GAA6G/C,KAAMtB,EAAM0D,cAAcA,iBAAmBnC,IAAyBuB,aACpM,cAAC,EAAD,CACExB,KAAM4D,YAAgB,WAAClF,EAAMwD,cAAcU,sBAArB,mBAAC,GAAoCE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,4BAA1F,cAAC,GAA6G/C,KAAMtB,EAAM0D,cAAcA,eAC9JvD,kBAAmBH,EAAMwD,cAAc2B,iBACvC5E,uBAAwB,CACtBD,YAAaN,EAAMwD,cAAca,kBACjCtD,QAASiB,EAAcsC,KAA8B/F,MAAK,SAAA8B,GAAG,OAAIA,EAAIuE,WAAa5E,EAAMwD,cAAcqB,qBAAoBpE,SAE5HI,iBAAkBb,EAAMa,mBAGiB,OAA1Cb,EAAMwD,cAAca,mBACsJ,OAA3Ka,YAAgB,WAAClF,EAAMwD,cAAcU,sBAArB,mBAAC,GAAoCE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,4BAA1F,cAAC,GAA6G/C,KAAMtB,EAAM0D,cAAcA,gBACxJwB,YAAgB,WAAClF,EAAMwD,cAAcU,sBAArB,mBAAC,GAAoCE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,4BAA1F,cAAC,GAA6G/C,KAAMtB,EAAM0D,cAAcA,iBAAmBnC,IAAyBgE,SACpM,cAAC,EAAD,CACEjE,KAAM4D,YAAgB,WAAClF,EAAMwD,cAAcU,sBAArB,mBAAC,GAAoCE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,4BAA1F,cAAC,GAA6G/C,KAAMtB,EAAM0D,cAAcA,eAC9JvD,kBAAmBH,EAAMwD,cAAc2B,iBACvC5E,uBAAwB,CACtBD,YAAaN,EAAMwD,cAAca,kBACjCtD,QAASkB,EAAYqC,KAA8B/F,MAAK,SAAA8B,GAAG,OAAIA,EAAIuE,WAAa5E,EAAMwD,cAAcqB,qBAAoBpE,SAE1HI,iBAAkBb,EAAMa,mBAGiB,OAA1Cb,EAAMwD,cAAca,mBACsJ,OAA3Ka,YAAgB,WAAClF,EAAMwD,cAAcU,sBAArB,mBAAC,GAAoCE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,4BAA1F,cAAC,GAA6G/C,KAAMtB,EAAM0D,cAAcA,gBACxJwB,YAAgB,WAAClF,EAAMwD,cAAcU,sBAArB,mBAAC,GAAoCE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,4BAA1F,cAAC,GAA6G/C,KAAMtB,EAAM0D,cAAcA,iBAAmBnC,IAAyB2B,0BACpM,cAAC,EAAD,CACE5B,KAAM4D,YAAgB,WAAClF,EAAMwD,cAAcU,sBAArB,mBAAC,GAAoCE,UAAU7F,MAAK,SAAA8B,GAAG,OAAIA,EAAIK,KAAOV,EAAMwD,cAAca,4BAA1F,cAAC,GAA6G/C,KAAMtB,EAAM0D,cAAcA,eAC9JvD,kBAAmBH,EAAMwD,cAAc2B,iBACvC5E,uBAAwB,CACtBD,YAAaN,EAAMwD,cAAca,kBACjCtD,QAASmB,EAA2BoC,KAA8B/F,MAAK,SAAA8B,GAAG,OAAIA,EAAIuE,WAAa5E,EAAMwD,cAAcqB,qBAAoBpE,SAEzII,iBAAkBb,EAAMa,8BAwBvBuC","file":"static/js/3.416e8c4b.chunk.js","sourcesContent":["export interface CandidateInterface {\n  n_id: string;\n  fname: string;\n  lname: string;\n  date_of_birth: string;\n  district: string;\n  email: string;\n  phone_number: string;\n  stopped: boolean;\n  user_id: string;\n  // more details\n  application_number: string;\n  cell: string;\n  civil_status: string;\n  country_of_birth: string;\n  date_of_expiry: string;\n  date_of_issue: string;\n  document_type: string;\n  father_names: string;\n  issue_number: string;\n  mother_names: string;\n  photo: string;\n  place_of_birth: string;\n  place_of_issue: string;\n  province: string;\n  sector: string;\n  sex: string;\n  spouse?: any;\n  status: string;\n  village: string;\n  village_id: string;\n  // temporary details\n  active?: boolean;\n  ref?: any;\n  muted?: boolean;\n  room_id?: string;\n  video?: boolean;\n  stream?: any;\n  peer?: any;\n  peer_id?: any;\n  type?: any;\n  id?: string;\n}\n\nexport interface DocumentsCategories {\n  description: string;\n  fields: string[];\n  title: string;\n  user_detail_category_id: string;\n}\n\nexport interface DocumentsCategoriesWithCount {\n  description: string;\n  fields: string[];\n  title: string;\n  user_detail_category_id: string;\n  count: number;\n}\n\nexport interface DocumentSubCategories {\n  category_id: string;\n  description: string;\n  title: string;\n  user_detail_subcategory_id: string;\n}\n// export interface CategorySubcategoryData {\n//   category_id: string;\n//   category_subcategory_id: string;\n//   description: string;\n//   others: {\n//     key: string;\n//     value: string;\n//   }[];\n//   subcategory_id: string;\n//   title: string;\n// }\n\nexport interface CategorySubcategoryData {\n  category_id: string;\n  subcategory_id: string;\n  title: string;\n  description: string;\n  others: {\n    key: string;\n    value: string;\n  }[];\n  category_subcategory_Data_id: string;\n}\n\nexport interface DocumentUser_API {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: string;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  doc_id: string;\n  category_subcategory_data: string;\n}\n\nexport interface DocumentUser {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  doc_id: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport interface SchoolInterface {\n  district_id: string;\n  education_category_id: string;\n  school_name: string;\n  status: boolean;\n  _id: string;\n}\n\nexport enum DocumentStatus {\n  Waiting = \"waiting\",\n  Rejected = \"rejected\",\n  Approved = \"approved\",\n}\n\nexport interface CandidateProctoringInterfaceAPI {\n  course_code: string;\n  course_id: string;\n  course_name: string;\n  district: string;\n  education_institute_id: string;\n  email: string;\n  fname: string;\n  lname: string;\n  n_id: string;\n  phone_number: string;\n  position_id: string;\n  position_title: string;\n  school_level_id: string;\n  user_id: string;\n}\n\nexport interface CandidateProctoringInterface\n  extends CandidateProctoringInterfaceAPI {\n  active: boolean;\n  stopped: boolean;\n  ref?: any;\n  muted?: boolean;\n  peer?: any;\n  peer_id?: any;\n}\n","export enum Events {\n  USER_CONNECTED = \"user-connected\",\n  USER_DISCONNECTED = \"user-disconnected\",\n  JOIN_ROOM = \"join-room\",\n  UPDATED_ROOM_LIST = \"UPDATED_ROOM_LIST\",\n}\n\nexport enum ExamEvents {\n  START_EXAM_CLIENT = \"START_EXAM_CLIENT\",\n  START_EXAM_SERVER = \"START_EXAM_SERVER\",\n\n  STOP_EXAM_CLIENT = \"STOP_EXAM_CLIENT\",\n  STOP_EXAM_SERVER = \"STOP_EXAM_SERVER\",\n\n  CAND_EVENT_CLIENT = \"CAND_EVENT_CLIENT\",\n  CAND_EVENT_SERVER = \"CAND_EVENT_SERVER\",\n\n  CAND_CONTINUE_EXAM_SERVER = \"CAND_CONTINUE_EXAM_SERVER\",\n  CAND_CONTINUE_EXAM_CLIENT = \"CAND_CONTINUE_EXAM_CLIENT\",\n\n  CAND_STOP_EXAM_CLIENT = \"CAND_STOP_EXAM_CLIENT\",\n  CAND_STOP_EXAM_SERVER = \"CAND_STOP_EXAM_SERVER\",\n\n  CAND_RESTART_EXAM_CLIENT = \"CAND_RESTART_EXAM_CLIENT\",\n  CAND_RESTART_EXAM_SERVER = \"CAND_RESTART_EXAM_SERVER\",\n\n  ALL_CAND_RESTART_EXAM_CLIENT = \"ALL_CAND_RESTART_EXAM_CLIENT\",\n  ALL_CAND_RESTART_EXAM_SERVER = \"ALL_CAND_RESTART_EXAM_SERVER\",\n\n  CAND_WARNING_EXAM_CLIENT = \"CAND_WARNING_EXAM_CLIENT\",\n  CAND_WARNING_EXAM_SERVER = \"CAND_WARNING_EXAM_SERVER\",\n\n  CAND_BRODCAST_MSG_CLIENT = \"CAND_BRODCAST_MSG_CLIENT\",\n  CAND_BRODCAST_MSG_SERVER = \"CAND_BRODCAST_MSG_SERVER\",\n\n  CAND_PRIVATE_MSG_CLIENT = \"CAND_PRIVATE_MSG_CLIENT\",\n  CAND_PRIVATE_MSG_SERVER = \"CAND_PRIVATE_MSG_SERVER\",\n\n  CAND_EXAM_EVENT_CLIENT = \"CAND_EXAM_EVENT_CLIENT\",\n  CAND_EXAM_EVENT_SERVER = \"CAND_EXAM_EVENT_SERVER\",\n}\n\nexport enum ExamEventTypes {\n  PASTE_A_TEXT = \"PASTE A TEXT\",\n  MOVE_MOUSE_OUT = \"MOVE MOUSE OUT WINDOW\",\n}\n\nexport interface EventInterface {\n  event_id: string;\n  user_id: string;\n  event_type: string;\n  description: string;\n  room_id: string;\n  done_by?: string;\n  time: string;\n}\n","import { DocumentUser } from \".\";\n\nexport interface PositionAPICourse {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface PositionAPI {\n  courses: PositionAPICourse[];\n  position_title: string;\n  description: string;\n  school_level_id: {\n    school_level_name: string;\n    description: string;\n    education_institute: string[];\n    courses: [];\n    school_level_id: string;\n  };\n  education_institute_id: {\n    education_category_title: string;\n    school_levels: [];\n    description: string;\n    education_institute_id: string;\n  };\n  requirements: PositionRequirements[];\n  isDeleted: boolean;\n  position_id: string;\n}\n\nexport interface PositionRequirementsOld {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: string[];\n  user_required_docs: {\n    category_id: string;\n    description: string;\n    title: string;\n    user_detail_subcategory_id: string;\n  }[];\n}\n\nexport interface PositionRequirements {\n  category: {\n    description: string;\n    fields: string[];\n    title: string;\n    user_detail_category_id: string;\n  };\n  subcategory: {\n    category_id: string;\n    description: string;\n    title: string;\n    user_detail_subcategory_id: string;\n  };\n  position_requirement: PositionSubcategoryData[];\n  required: boolean;\n}\n\nexport interface PositionSubcategoryData {\n  category_id: string;\n  subcategory_id: string;\n  description: string;\n  required: boolean;\n  title: string;\n  others: { key: string; value: string }[];\n  _id: string;\n  __v?: string;\n}\n\nexport const validateDocCategory = (\n  requirement: PositionRequirements,\n  userDocuments: DocumentUser[]\n) => {\n  if (\n    userDocuments.find(\n      (item) =>\n        item.category_id === requirement.category.user_detail_category_id\n    )?.category_id === undefined\n  ) {\n    return requirement.category.user_detail_category_id;\n  } else {\n    return null;\n  }\n};\n\n// If true, should return null\nexport const validateDocSubcategoryData = (\n  requirement: PositionSubcategoryData,\n  UserData: DocumentUser[]\n): string | null => {\n  let result: string | null = null;\n  // for (let requirement of requirements) {\n  if (\n    UserData.find(\n      (itm) =>\n        itm.category_subcategory_data &&\n        itm.category_subcategory_data.category_subcategory_Data_id ===\n          requirement._id\n    ) === undefined\n  ) {\n    result = requirement.subcategory_id;\n  }\n  // }\n  return result;\n};\n\nexport const validateDocSubcategory = (\n  requirement: PositionRequirements,\n  userDocuments: DocumentUser[]\n) => {\n  let result: {\n    category_subcat_id: string | null;\n    category_id: string | null;\n    user_detail_subcategory_id: string | null;\n  }[] = [];\n  if (requirement.position_requirement.length > 0) {\n    for (let i in requirement.position_requirement) {\n      let filterData = userDocuments.find((item) => item.category_subcategory_data &&\n        item.category_subcategory_data.category_subcategory_Data_id === requirement.position_requirement[i]._id\n        )?.category_subcategory_data;\n      if ((filterData === undefined || filterData === null) \n        && requirement.position_requirement[i].required === true\n      ) {\n        result.push({\n          category_subcat_id: requirement.position_requirement[i]._id,\n          category_id: requirement.category.user_detail_category_id,\n          user_detail_subcategory_id:\n            requirement.subcategory.user_detail_subcategory_id,\n        });\n      }\n    }\n  }\n  return result;\n};\n\n\nexport const validateDocSubcategoryOptional = (\n  requirement: PositionRequirements,\n  userDocuments: DocumentUser[]\n) => {\n  let result: {\n    category_subcat_id: string | null;\n    category_id: string | null;\n    user_detail_subcategory_id: string | null;\n  }[] = [];\n  if (requirement.position_requirement.length > 0) {\n    for (let i in requirement.position_requirement) {\n      let filterData = userDocuments.find((item) => item.category_subcategory_data &&\n        item.category_subcategory_data.category_subcategory_Data_id === requirement.position_requirement[i]._id\n        )?.category_subcategory_data;\n      if ((filterData === undefined || filterData === null) \n        && requirement.position_requirement[i].required === false\n      ) {\n        result.push({\n          category_subcat_id: requirement.position_requirement[i]._id,\n          category_id: requirement.category.user_detail_category_id,\n          user_detail_subcategory_id:\n            requirement.subcategory.user_detail_subcategory_id,\n        });\n      }\n    }\n  }\n  return result;\n};\n\nexport const returnValidatePosition = (\n  requirements: PositionRequirements[],\n  documents: DocumentUser[]\n) => {\n  let status = true;\n  for (let i in requirements) {\n    if (requirements[i].position_requirement.length === 0) {\n      if (\n        requirements[i] !== null &&\n        documents !== null &&\n        validateDocCategory(requirements[i], documents) !== null &&\n        validateDocCategory(requirements[i], documents) !== undefined\n      ) {\n        status = false;\n      }\n    } else {\n      if (validateDocSubcategory(requirements[i], documents).length !== 0) {\n        status = false;\n      }\n    }\n  }\n  return status;\n};\n","import React, { useEffect } from 'react'\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im'\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from 'react-icons/md'\nimport { QuestionAnswersStore } from '../../../../actions'\nimport { MultipleChoiceQuestionAnswerInterface, questionTypeElementsType } from '../../../../interfaces/question'\n\ninterface MultipleChoiceProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null, \n    answers: MultipleChoiceQuestionAnswerInterface[] | undefined,\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst MultipleChoice = (props: MultipleChoiceProps) => {\n  \n  const checkAnswer = (item: MultipleChoiceQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n      if (check !== undefined) {\n        let x = check.answer.find(itm => itm.id === item.id);\n        if (x !== undefined && x.status === true) {\n          res = true;\n        }\n      }\n    }\n    return res;\n  }\n\n  const addAnswerItemFn = (newAnswers: MultipleChoiceQuestionAnswerInterface[]) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.answerQuestionFn({\n        question_id: props.selectedQuestionAnswer.question_id,\n        status: false,\n        answer: newAnswers\n      });\n    }\n  }\n  const addAnswer = (item: MultipleChoiceQuestionAnswerInterface, question_id: string | null) => {\n    let oldAnswers = props.available_answers.find(itm => itm.question_id === question_id);\n    if (oldAnswers !== undefined) {\n      // Check type of question\n      let temp: MultipleChoiceQuestionAnswerInterface[] = [];\n      if (props.type === questionTypeElementsType.SingleMultiple) {\n        for (let t of oldAnswers.answer) {\n          temp = [...temp, {\n            id: t.id,\n            value: t.value,\n            status: false,\n          }]\n        }\n        addAnswerItemFn(temp);\n      }\n      let newAnswers: MultipleChoiceQuestionAnswerInterface[] = [];\n      for (let x of temp.length === 0 ? oldAnswers.answer : temp) {\n        if (x.id === item.id) {\n          newAnswers = [...newAnswers, {\n            id: item.id,\n            value: item.value,\n            status: props.type === questionTypeElementsType.SingleMultiple ? true : !x.status,\n          }]\n        } else {\n          newAnswers = [...newAnswers, x]\n        }\n      }\n      addAnswerItemFn(newAnswers);\n    }\n  }\n  useEffect(() => {\n    let test = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n    if (test === undefined) {\n      if (props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer !== undefined &&  props.selectedQuestionAnswer.question_id !== null) {\n        let newAnswers: MultipleChoiceQuestionAnswerInterface[] = [];\n        for (let a of  props.selectedQuestionAnswer.answers) {\n          newAnswers = [...newAnswers, {\n            id: a.id,\n            value: a.value,\n            status: false\n          }]\n        }\n        props.answerQuestionFn({\n          question_id: props.selectedQuestionAnswer.question_id,\n          status: true,\n          answer: newAnswers\n        });\n      }\n    }\n  }, [props])\n  return (\n    <div>\n      {props.selectedQuestionAnswer !== null &&\n      props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer.answers.map((item) => (\n        <div onClick={() => addAnswer(item, props.selectedQuestionAnswer.question_id)} className={`px-2 py-2 ${checkAnswer(item) === true ? \"border bg-blue-100 border-white text-blue-600 hover:border-blue-600 rounded font-bold\" : \"border-b bg-white border-gray-100 hover:bg-gray-100\"} flex flex-row justify-left items-center cursor-pointer`}>\n          {checkAnswer(item) === true ?\n          <>\n          {props.type === questionTypeElementsType.SingleMultiple ? \n          <MdRadioButtonChecked className=\"text-2xl\" /> : \n          <ImCheckboxChecked className=\"text-2xl\" />}\n          </>:\n          props.type === questionTypeElementsType.SingleMultiple ? \n          <MdRadioButtonUnchecked className=\"text-2xl\" />:\n          <ImCheckboxUnchecked className=\"text-2xl\" />}\n          <span className=\"ml-2\">{item.value}</span>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default MultipleChoice\n","import { CalculatedMultipleChoiceQuestionAnswerInterface, MatchingQuestionAnswerInterface, MultipleChoiceQuestionAnswerInterface, NumericalQuestionAnswerInterface, ShortAnswerQuestionAnswerInterface, SimpleCalculatedQuestionAnswerInterface, TrueFalseQuestionAnswerInterface } from \"../../../interfaces/question\";\n\nexport const toMultipleChoice = (answers: any[]): MultipleChoiceQuestionAnswerInterface[] => {\n  let res: MultipleChoiceQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toTrueFalse = (answers: any[]): TrueFalseQuestionAnswerInterface[] => {\n  let res: TrueFalseQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toMatching = (answers: any[]): MatchingQuestionAnswerInterface[] => {\n  let res: MatchingQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toSimpleCalculated = (answers: any[]): SimpleCalculatedQuestionAnswerInterface[] => {\n  let res: SimpleCalculatedQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toShortAnswer = (answers: any[]): ShortAnswerQuestionAnswerInterface[] => {\n  let res: ShortAnswerQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toNumerical = (answers: any[]): NumericalQuestionAnswerInterface[] => {\n  let res: NumericalQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toCalculatedMultipleChoice = (answers: any[]): CalculatedMultipleChoiceQuestionAnswerInterface[] => {\n  let res: CalculatedMultipleChoiceQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}","import React, { useEffect } from 'react'\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from 'react-icons/md'\nimport { QuestionAnswersStore } from '../../../../actions'\nimport { TrueFalseQuestionAnswerInterface, questionTypeElementsType } from '../../../../interfaces/question'\n\ninterface TrueFalseProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null, \n    answers: TrueFalseQuestionAnswerInterface[] | undefined,\n  };\n  answerQuestionFn: Function;\n}\n\nconst TrueFalse = (props: TrueFalseProps) => {\n  const checkAnswer = (item: TrueFalseQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n      if (check !== undefined) {\n        let x = check.answer.find(itm => itm.id === item.id);\n        if (x !== undefined && x.status === true) {\n          res = true;\n        }\n      }\n    }\n    return res;\n  }\n  const addAnswerItemFn = (newAnswers: TrueFalseQuestionAnswerInterface[]) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.answerQuestionFn({\n        question_id: props.selectedQuestionAnswer.question_id,\n        status: false,\n        answer: newAnswers\n      });\n    }\n  }\n\n  const addAnswer = (item: TrueFalseQuestionAnswerInterface, question_id: string | null) => {\n    let oldAnswers = props.available_answers.find(itm => itm.question_id === question_id);\n    if (oldAnswers !== undefined) {\n      // Check type of question\n      let temp: TrueFalseQuestionAnswerInterface[] = [];\n      for (let t of oldAnswers.answer) {\n        temp = [...temp, {\n          id: t.id,\n          value: t.value,\n          status: false,\n        }]\n      }\n      addAnswerItemFn(temp);\n      let newAnswers: TrueFalseQuestionAnswerInterface[] = [];\n      for (let x of temp.length === 0 ? oldAnswers.answer : temp) {\n        if (x.id === item.id) {\n          newAnswers = [...newAnswers, {\n            id: item.id,\n            value: item.value,\n            status: !x.status,\n          }]\n        } else {\n          newAnswers = [...newAnswers, x]\n        }\n      }\n      addAnswerItemFn(newAnswers);\n    }\n  }\n\n  useEffect(() => {\n    let test = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n    if (test === undefined) {\n      if (props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer !== undefined &&  props.selectedQuestionAnswer.question_id !== null) {\n        let newAnswers: TrueFalseQuestionAnswerInterface[] = [];\n        for (let a of  props.selectedQuestionAnswer.answers) {\n          newAnswers = [...newAnswers, {\n            id: a.id,\n            value: a.value,\n            status: false\n          }]\n        }\n        props.answerQuestionFn({\n          question_id: props.selectedQuestionAnswer.question_id,\n          status: true,\n          answer: newAnswers\n        });\n      }\n    }\n  }, [props])\n  \n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n      props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer.answers.map((item) => (\n        <div onClick={() => addAnswer(item, props.selectedQuestionAnswer.question_id)} className={`px-2 py-2 border-b ${checkAnswer(item) === true ? \"border bg-blue-100 border-white text-blue-600 hover:border-blue-600 rounded font-bold\" : \"border-b bg-white border-gray-100 hover:bg-gray-100\"} flex flex-row justify-left items-center cursor-pointer`}>\n          {checkAnswer(item) === true ?\n          <MdRadioButtonChecked className=\"text-2xl\" />:\n          <MdRadioButtonUnchecked className=\"text-2xl\" />}\n          <span className=\"ml-2\">{item.value}</span>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default TrueFalse\n","import React, { useEffect } from 'react'\nimport { MdRadioButtonUnchecked } from 'react-icons/md'\nimport { RiCheckboxCircleFill } from 'react-icons/ri'\nimport { QuestionAnswersStore } from '../../../../actions'\nimport { MatchingQuestionAnswerInterface, questionTypeElementsType } from '../../../../interfaces/question'\n\ninterface MatchingProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null, \n    answers: MatchingQuestionAnswerInterface[] | undefined,\n  };\n  answerQuestionFn: Function;\n}\n\nconst Matching = (props: MatchingProps) => {\n  const addAnswerItemFn = (newAnswers: MatchingQuestionAnswerInterface[]) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.answerQuestionFn({\n        question_id: props.selectedQuestionAnswer.question_id,\n        status: false,\n        answer: newAnswers\n      });\n    }\n  }\n  const checkAnswer = (item: MatchingQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n      if (check !== undefined) {\n        let x = check.answer.find(itm => itm.id === item.id);\n        if (x !== undefined && x.status !== \"\") {\n          res = true;\n        }\n      }\n    }\n    return res;\n  }\n\n  const addAnswer = (item: MatchingQuestionAnswerInterface, question_id: string | null) => {\n    let oldAnswers = props.available_answers.find(itm => itm.question_id === question_id);\n    if (oldAnswers !== undefined) {\n      let newAnswers: MatchingQuestionAnswerInterface[] = [];\n      for (let x of oldAnswers.answer) {\n        if (x.id === item.id) {\n          newAnswers = [...newAnswers, {\n            id: item.id,\n            value: item.value,\n            status: item.status,\n          }]\n        } else {\n          newAnswers = [...newAnswers, x]\n        }\n      }\n      addAnswerItemFn(newAnswers);\n    }\n  }\n  \n  useEffect(() => {\n    let test = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n    if (test === undefined) {\n      if (props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer !== undefined &&  props.selectedQuestionAnswer.question_id !== null) {\n        let newAnswers: MatchingQuestionAnswerInterface[] = [];\n        for (let a of  props.selectedQuestionAnswer.answers) {\n          newAnswers = [...newAnswers, {\n            id: a.id,\n            value: a.value,\n            status: \"\"\n          }]\n        }\n        props.answerQuestionFn({\n          question_id: props.selectedQuestionAnswer.question_id,\n          status: true,\n          answer: newAnswers\n        });\n      }\n    }\n  }, [props])\n\n  const checkIfSelected = (x: string) => {\n    let temp = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n    if (temp !== undefined) {\n      let ans = temp.answer.find(itm => itm.id === x);\n      if (ans !== undefined && ans.status !== \"\") {\n        return ans.status;\n      }\n    }\n    return false;\n  }\n\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n      props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer.answers.map((item) => (\n        <div className={`px-2 py-2 border-b ${checkAnswer(item) === true ? \"text-blue-600 border-blue-200\" : \"\"} grid grid-cols-2`}>\n          <div className=\"col-span-1 flex flex-row items-center gap-2\">\n            {checkAnswer(item) === true ?\n            <RiCheckboxCircleFill className=\"text-2xl\" />:\n            <MdRadioButtonUnchecked className=\"text-2xl\" />}\n            <span className=\"ml-2\">{item.value}</span>\n          </div>\n          <div className=\"col-span-1\">\n            <select \n            onChange={(e) => {\n              addAnswer({\n                id: item.id,\n                value: item.value,\n                status: e.target.value\n              }, props.selectedQuestionAnswer.question_id)\n            }}\n            className={`border rounded w-full py-2 px-2 cursor-pointer focus:outline-none focus:border-blue-500 ${checkAnswer(item) === false ? \"border-gray-400 text-gray-600\" : \"border-blue-50 bg-blue-50 text-blue-600 hover:border-blue-600\"}`}>\n              <option value=\"\">Select matching</option>\n              {props.selectedQuestionAnswer !== null &&\n                props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer.answers.map((itm, x) => (\n                  <option selected={itm.status === checkIfSelected(item.id) ? true : false} key={x + 1} value={itm.status}>{itm.status}</option>\n                ))}\n            </select>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Matching\n","import React, { useEffect } from 'react'\nimport { QuestionAnswersStore } from '../../../../actions'\nimport { SimpleCalculatedQuestionAnswerInterface, questionTypeElementsType } from '../../../../interfaces/question'\n\ninterface SimpleCalculatedProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null, \n    answers: SimpleCalculatedQuestionAnswerInterface[] | undefined,\n  };\n  answerQuestionFn: Function;\n}\n\nconst SimpleCalculated = (props: SimpleCalculatedProps) => {\n  const checkAnswer = (item: SimpleCalculatedQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n      if (check !== undefined) {\n        let x = check.answer.find(itm => itm.id === item.id);\n        if (x !== undefined && x.value[0] !== \"\") {\n          res = true;\n        }\n      }\n    }\n    return res;\n  }\n  const addAnswerItemFn = (newAnswers: { id: string, value: string, status: boolean}[]) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.answerQuestionFn({\n        question_id: props.selectedQuestionAnswer.question_id,\n        status: false,\n        answer: [{\n          id: newAnswers[0].id,\n          value: [newAnswers[0].value],\n          status: newAnswers[0].status\n        }]\n      });\n    }\n  }\n  const addAnswer = (item: { id: string, value: string, status: boolean}, question_id: string | null) => {\n    let oldAnswers = props.available_answers.find(itm => itm.question_id === question_id);\n    if (oldAnswers !== undefined) {\n      // Check type of question\n      addAnswerItemFn([{\n        id: oldAnswers.answer[0].id,\n        value: item.value,\n        status: oldAnswers.answer[0].status,\n      }]);\n    }\n  }\n  const answeredValue = () => {\n    let answer = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n    return answer !== undefined ? answer.answer[0].value[0].toString() : \"\"\n  }\n\n  useEffect(() => {\n    let test = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n    if (test === undefined) {\n      if (props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer !== undefined &&  props.selectedQuestionAnswer.question_id !== null) {\n        props.answerQuestionFn({\n          question_id: props.selectedQuestionAnswer.question_id,\n          status: true,\n          answer: [{\n            id: props.selectedQuestionAnswer.answers[0].id,\n            value: [\"\"],\n            status: props.selectedQuestionAnswer.answers[0].status,\n          }]\n        });\n      }\n    }\n  }, [props])\n\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n      props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer.answers.map((item) => (\n        <div className={`-mx-2 -my-2 flex flex-col justify-left rounded`}>\n          <input \n          onChange={(e) => {\n            addAnswer({\n              id: item.id,\n              value: e.target.value,\n              status: item.status\n            }, props.selectedQuestionAnswer.question_id)\n          }}\n          type=\"text\" value={answeredValue()} \n          className={`px-3 py-2 rounded focus:outline-none focus:border-none ${checkAnswer(item) === true ? \"border-2 text-blue-600 font-bold bg-white border-blue-600\" : \"border text-gray-700 border-gray-500 bg-gray-50\"}`} />\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default SimpleCalculated\n","import React, { useEffect } from 'react'\nimport { QuestionAnswersStore } from '../../../../actions'\nimport { ShortAnswerQuestionAnswerInterface, questionTypeElementsType } from '../../../../interfaces/question'\n\ninterface ShortAnswerProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null, \n    answers: ShortAnswerQuestionAnswerInterface[] | undefined,\n  };\n  answerQuestionFn: Function;\n}\n\nconst ShortAnswer = (props: ShortAnswerProps) => {\n  const checkAnswer = (item: ShortAnswerQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n      if (check !== undefined) {\n        let x = check.answer.find(itm => itm.id === item.id);\n        if (x !== undefined && x.value !== \"\") {\n          res = true;\n        }\n      }\n    }\n    return res;\n  }\n  const addAnswerItemFn = (newAnswers: { id: string, value: string, status: boolean}[]) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.answerQuestionFn({\n        question_id: props.selectedQuestionAnswer.question_id,\n        status: false,\n        answer: [{\n          id: newAnswers[0].id,\n          value: newAnswers[0].value,\n          status: newAnswers[0].status\n        }]\n      });\n    }\n  }\n  const addAnswer = (item: { id: string, value: string, status: boolean}, question_id: string | null) => {\n    let oldAnswers = props.available_answers.find(itm => itm.question_id === question_id);\n    if (oldAnswers !== undefined) {\n      // Check type of question\n      addAnswerItemFn([{\n        id: oldAnswers.answer[0].id,\n        value: item.value,\n        status: oldAnswers.answer[0].status,\n      }]);\n    }\n  }\n  const answeredValue = () => {\n    let answer = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n    return answer !== undefined ? answer.answer[0].value : \"\"\n  }\n\n  useEffect(() => {\n    let test = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n    if (test === undefined) {\n      if (props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer !== undefined &&  props.selectedQuestionAnswer.question_id !== null) {\n        props.answerQuestionFn({\n          question_id: props.selectedQuestionAnswer.question_id,\n          status: true,\n          answer: [{\n            id: props.selectedQuestionAnswer.answers[0].id,\n            value: \"\",\n            status: props.selectedQuestionAnswer.answers[0].status,\n          }]\n        });\n      }\n    }\n  }, [props])\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n      props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer.answers.map((item) => (\n        <div className={`-mx-2 -my-2 flex flex-col justify-left rounded cursor-pointer`}>\n          <textarea \n          onChange={(e) => {\n            addAnswer({\n              id: item.id,\n              value: e.target.value,\n              status: item.status\n            }, props.selectedQuestionAnswer.question_id)\n          }} value={answeredValue()} \n          className={`px-3 py-2 rounded focus:outline-none focus:border-none ${checkAnswer(item) === true ? \"border-2 text-blue-600 font-bold bg-white border-blue-600\" : \"border text-gray-700 border-gray-500 bg-gray-50\"}`} style={{minHeight: '200px'}}></textarea>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ShortAnswer\n","import React, { useEffect } from 'react'\nimport { QuestionAnswersStore } from '../../../../actions'\nimport { NumericalQuestionAnswerInterface, questionTypeElementsType } from '../../../../interfaces/question'\n\ninterface NumericalProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null, \n    answers: NumericalQuestionAnswerInterface[] | undefined,\n  };\n  answerQuestionFn: Function;\n}\n\nconst Numerical = (props: NumericalProps) => {\n  const checkAnswer = (item: NumericalQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n      if (check !== undefined) {\n        let x = check.answer.find(itm => itm.id === item.id);\n        if (x !== undefined && x.value[0] !== \"\") {\n          res = true;\n        }\n      }\n    }\n    return res;\n  }\n  const addAnswerItemFn = (newAnswers: {id: string; value: string[]; status: number[]}[]) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.answerQuestionFn({\n        question_id: props.selectedQuestionAnswer.question_id,\n        status: false,\n        answer: [{\n          id: newAnswers[0].id,\n          value: newAnswers[0].value,\n          status: newAnswers[0].status\n        }]\n      });\n    }\n  }\n  const addAnswer = (item: {id: string; value: string; status: number[]}, question_id: string | null) => {\n    let oldAnswers = props.available_answers.find(itm => itm.question_id === question_id);\n    if (oldAnswers !== undefined) {\n      // Check type of question\n      addAnswerItemFn([{\n        id: oldAnswers.answer[0].id,\n        value: [item.value],\n        status: oldAnswers.answer[0].status,\n      }]);\n    }\n  }\n  const answeredValue = () => {\n    let answer = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n    return answer !== undefined ? answer.answer[0].value[0] : \"\"\n  }\n\n  useEffect(() => {\n    let test = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n    if (test === undefined) {\n      if (props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer !== undefined &&  props.selectedQuestionAnswer.question_id !== null) {\n        props.answerQuestionFn({\n          question_id: props.selectedQuestionAnswer.question_id,\n          status: true,\n          answer: [{\n            id: props.selectedQuestionAnswer.answers[0].id,\n            value: [\"\"],\n            status: props.selectedQuestionAnswer.answers[0].status,\n          }]\n        });\n      }\n    }\n  }, [props])\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n      props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer.answers.map((item) => (\n        <div className={`-mx-2 -my-2 flex flex-col justify-left rounded cursor-pointer`}>\n          <input \n          onChange={(e) => {\n            addAnswer({\n              id: item.id,\n              value: e.target.value,\n              status: item.status\n            }, props.selectedQuestionAnswer.question_id)\n          }}\n          type=\"text\" value={answeredValue()} \n          className={`px-3 py-2 rounded focus:outline-none focus:border-none ${checkAnswer(item) === true ? \"border-2 text-blue-600 font-bold border-blue-600\" : \"border text-gray-700 border-gray-500\"}`} />\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Numerical\n","import React, { useEffect } from 'react'\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im'\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from 'react-icons/md'\nimport { QuestionAnswersStore } from '../../../../actions'\nimport { CalculatedMultipleChoiceQuestionAnswerInterface, questionTypeElementsType } from '../../../../interfaces/question'\n\ninterface CalculatedMultipleChoiceProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null, \n    answers: CalculatedMultipleChoiceQuestionAnswerInterface[] | undefined,\n  };\n  answerQuestionFn: Function;\n}\n\nconst CalculatedMultipleChoice = (props: CalculatedMultipleChoiceProps) => {\n  const checkAnswer = (item: CalculatedMultipleChoiceQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n      if (check !== undefined) {\n        let x = check.answer.find(itm => itm.id === item.id);\n        if (x !== undefined && x.status === true) {\n          res = true;\n        }\n      }\n    }\n    return res;\n  }\n\n  const addAnswerItemFn = (newAnswers: CalculatedMultipleChoiceQuestionAnswerInterface[]) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.answerQuestionFn({\n        question_id: props.selectedQuestionAnswer.question_id,\n        status: false,\n        answer: newAnswers\n      });\n    }\n  }\n  const addAnswer = (item: CalculatedMultipleChoiceQuestionAnswerInterface, question_id: string | null) => {\n    let oldAnswers = props.available_answers.find(itm => itm.question_id === question_id);\n    if (oldAnswers !== undefined) {\n      // Check type of question\n      let temp: CalculatedMultipleChoiceQuestionAnswerInterface[] = [];\n      if (props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer.answers.filter(itm => itm.status === true).length === 1) {\n        for (let t of oldAnswers.answer) {\n          temp = [...temp, {\n            id: t.id,\n            value: t.value,\n            status: false,\n          }]\n        }\n        addAnswerItemFn(temp);\n      }\n      let newAnswers: CalculatedMultipleChoiceQuestionAnswerInterface[] = [];\n      for (let x of temp.length === 0 ? oldAnswers.answer : temp) {\n        if (x.id === item.id) {\n          newAnswers = [...newAnswers, {\n            id: item.id,\n            value: item.value,\n            status: props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer.answers.filter(itm => itm.status === true).length === 1 ? true : !x.status,\n          }]\n        } else {\n          newAnswers = [...newAnswers, x]\n        }\n      }\n      addAnswerItemFn(newAnswers);\n    }\n  }\n  useEffect(() => {\n    let test = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n    if (test === undefined) {\n      if (props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer !== undefined &&  props.selectedQuestionAnswer.question_id !== null) {\n        let newAnswers: CalculatedMultipleChoiceQuestionAnswerInterface[] = [];\n        for (let a of  props.selectedQuestionAnswer.answers) {\n          newAnswers = [...newAnswers, {\n            id: a.id,\n            value: a.value,\n            status: false\n          }]\n        }\n        props.answerQuestionFn({\n          question_id: props.selectedQuestionAnswer.question_id,\n          status: true,\n          answer: newAnswers\n        });\n      }\n    }\n  }, [props])\n  return (\n    <div>\n      {props.selectedQuestionAnswer !== null &&\n      props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer.answers.map((item) => (\n        <div onClick={() => addAnswer(item, props.selectedQuestionAnswer.question_id)} className={`px-2 py-2 border-b ${checkAnswer(item) === true ? \"border bg-blue-100 border-white text-blue-600 hover:border-blue-600 rounded font-bold\" : \"border-b bg-white border-gray-100 hover:bg-gray-100\"} flex flex-row justify-left items-center rounded cursor-pointer`}>\n          {checkAnswer(item) === true ?\n          <>\n          {props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer.answers.filter(itm => itm.status === true).length === 1 ? \n          <MdRadioButtonChecked className=\"text-2xl\" /> : \n          <ImCheckboxChecked className=\"text-2xl\" />}\n          </>:\n          props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer.answers.filter(itm => itm.status === true).length === 1 ?\n          <MdRadioButtonUnchecked className=\"text-2xl\" />:\n          <ImCheckboxUnchecked className=\"text-2xl\" />}\n          <span className=\"ml-2\">{item.value}</span>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default CalculatedMultipleChoice\n","import React, { useEffect, useState } from 'react'\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from 'react-icons/md';\nimport { QuestionInterface, QuestionItemInterface, QuestionLanguage, QuestionLanguages, questionTypeElementsType } from '../../../interfaces/index';\nimport { newAnswer } from '../DoExam';\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  candidateExamStoreInterface,\n  examDataInterface,\n  System,\n  setSelectedExamQuestion,\n  setQuestionLanguage,\n  questionTypesStoreInterface,\n  loadQuestionTypes,\n  QuestionAnswersStore,\n} from \"../../../actions\";\nimport { StoreState } from \"../../../reducers\";\nimport { exam_question } from '../../../interfaces/exam_question';\nimport Loading from '../../../components/Loading/Loading';\nimport { LoadingType } from '../../../components/Loading/LoadingV2';\nimport MultipleChoice from './Answers/MultipleChoice';\nimport { toCalculatedMultipleChoice, toMatching, toMultipleChoice, toNumerical, toShortAnswer, toSimpleCalculated, toTrueFalse } from './ConvertingAnswers';\nimport { findQuestionType } from '../utils/utils';\nimport TrueFalse from './Answers/TrueFalse';\nimport Matching from './Answers/Matching';\nimport SimpleCalculated from './Answers/SimpleCalculated';\nimport ShortAnswer from './Answers/ShortAnswer';\nimport Numerical from './Answers/Numerical';\nimport CalculatedMultipleChoice from './Answers/CalculatedMultipleChoice';\n\ninterface QuestionDetailsProps {\n  selectedQuestion: exam_question | null;\n  setSelectedQuestion: (question: exam_question) => void;\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n  questionAnswers: newAnswer[] | undefined;\n  doExam: examDataInterface;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  system: System;\n  setSelectedExamQuestion: (exam_id: string, question_id: string | null) => void;\n  setQuestionLanguage: (lang: QuestionLanguage) => void;\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) =>void;\n  preview: boolean;\n  submitQuestionAnswer: boolean;\n}\n\nconst _QuestionDetails = (props: QuestionDetailsProps) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const QuestionData = (): QuestionInterface | null => {\n    let res = null;\n    if (props.candidateExam.candidate_exam !== null) {\n      let q: QuestionInterface | undefined = props.candidateExam.candidate_exam.questions.find(itm => props.candidateExam.selected_question && itm.id === props.candidateExam.selected_question);\n      if (q !== undefined) {\n        res = q;\n      }\n    }\n    return res;\n  }\n  // const findIndex = (question_id: string): number => {\n  //   if (props.candidateExam.candidate_exam !== null) {\n  //     for (let x: number = 0; x < props.candidateExam.candidate_exam.questions.length; x++) {\n  //       if (props.candidateExam.candidate_exam.questions[x].id === question_id) {\n  //         return x;\n  //       }\n  //     }\n  //     return 0;\n  //   }\n  //   return 0;\n  // }\n  const findSelectedQuestionDetails = (): QuestionItemInterface[] => {\n    let res:QuestionItemInterface[] = [];\n    if (props.candidateExam.candidate_exam) {\n      let x = props.candidateExam.candidate_exam.questions.find(itm => itm.id === props.candidateExam.selected_question);\n      if (x !== undefined) {\n        res = x.question;\n      }\n    }\n    return res;\n  }\n  useEffect(() => {\n    if (props.questionTypes.questionTypes === null || props.questionTypes.questionTypes.length === 0) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [props])\n  return (\n    <div className=\"bg-gray-800 h-full\">\n      {loading === true ?\n      <div className=\"bg-gray-200 px-3 py-2 rounded my-2 mr-2 h-full overflow-y-auto pb-80 md:pb-60\">\n        <div className=\"rounded bg-white px-4 py-4 mt-5 mx-4\">\n          <div className=\"text-2xl mx-4 mb-3\">Loading...</div>\n          <Loading type={LoadingType.white} />\n        </div>\n      </div>:\n      <div className=\"bg-gray-200 px-3 py-2 rounded my-2 mr-2 h-full overflow-y-auto pb-80 md:pb-60\">\n          {props.submitQuestionAnswer === true && \n          <div className=\"bg-blue-50 px-3 py-2 rounded text-blue-700 font-bold animate-pulse text-sm\">Saving your answer ...</div>}\n          <div className=\"flex flex-row gap-2 mt-2\">\n            <div className=\"flex flex-row justify-between w-full\">\n              <div className=\"text-md flex flex-col\">\n                <span className=\"text-sm text-gray-600\">\n                  {QuestionData() !== null && QuestionData()?.question.find(itm => itm.language === props.candidateExam.selected_language)?.title}\n                </span>\n                <span className=\"text-lg text-gray-800 font-bold\">\n                  {QuestionData() !== null && QuestionData()?.question.find(itm => itm.language === props.candidateExam.selected_language)?.description}\n                </span>\n              </div>\n              <div className=\"flex flex-row gap-1 justify-center items-start\">\n                {QuestionLanguages.map((item, i) => (\n                  <div onClick={() => props.setQuestionLanguage(item.key)} className={`flex flex-row ${props.candidateExam.selected_language === item.key ? \"bg-gray-200 border-gray-200\" : \"bg-white border-white\"} px-2 py-1 justify-center items-center rounded hover:bg-blue-100 border hover:border-blue-500 cursor-pointer`}>\n                    <div key={i + 1}className=\"flex flex-row gap-2 items-center\">\n                      {props.candidateExam.selected_language === item.key ?\n                      <MdRadioButtonChecked className=\"text-blue-600\" />:\n                      <MdRadioButtonUnchecked className=\"text-gray-600\" />}\n                      <span className=\"font-bold text-blue-600\">{item.value}</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n          <div className=\"my-4 py-2 px-2 bg-white rounded\">\n            {/* Single and Multiple choice */}\n            {props.candidateExam.selected_question !== null && \n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) !== null &&\n            (findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) === questionTypeElementsType.MultipleChoice ||\n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) === questionTypeElementsType.SingleMultiple) &&\n            <MultipleChoice \n              type={findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes)}\n              available_answers={props.candidateExam.question_answers}\n              selectedQuestionAnswer={{\n                question_id: props.candidateExam.selected_question, \n                answers: toMultipleChoice(findSelectedQuestionDetails().find(itm => itm.language === props.candidateExam.selected_language)!.answer),\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />}\n            {/* True and False */}\n            {props.candidateExam.selected_question !== null && \n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) !== null &&\n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) === questionTypeElementsType.TrueFalse &&\n            <TrueFalse \n              type={findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes)}\n              available_answers={props.candidateExam.question_answers}\n              selectedQuestionAnswer={{\n                question_id: props.candidateExam.selected_question, \n                answers: toTrueFalse(findSelectedQuestionDetails().find(itm => itm.language === props.candidateExam.selected_language)!.answer),\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />}\n            {/* Matching Question */}\n            {console.log(\"Type: \", findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes))}\n            {props.candidateExam.selected_question !== null && \n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) !== null &&\n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) === questionTypeElementsType.Matching &&\n            <Matching \n              type={findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes)}\n              available_answers={props.candidateExam.question_answers}\n              selectedQuestionAnswer={{\n                question_id: props.candidateExam.selected_question, \n                answers: toMatching(findSelectedQuestionDetails().find(itm => itm.language === props.candidateExam.selected_language)!.answer),\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />}\n            {/* Simple Calculated */}\n            {props.candidateExam.selected_question !== null && \n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) !== null &&\n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) === questionTypeElementsType.SimpleCalculate &&\n            <SimpleCalculated \n              type={findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes)}\n              available_answers={props.candidateExam.question_answers}\n              selectedQuestionAnswer={{\n                question_id: props.candidateExam.selected_question, \n                answers: toSimpleCalculated(findSelectedQuestionDetails().find(itm => itm.language === props.candidateExam.selected_language)!.answer),\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />}\n            {/* Short Answer */}\n            {props.candidateExam.selected_question !== null && \n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) !== null &&\n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) === questionTypeElementsType.ShortAnswer &&\n            <ShortAnswer \n              type={findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes)}\n              available_answers={props.candidateExam.question_answers}\n              selectedQuestionAnswer={{\n                question_id: props.candidateExam.selected_question, \n                answers: toShortAnswer(findSelectedQuestionDetails().find(itm => itm.language === props.candidateExam.selected_language)!.answer),\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />}\n            {/* Short Answer */}\n            {props.candidateExam.selected_question !== null && \n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) !== null &&\n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) === questionTypeElementsType.Numeric &&\n            <Numerical \n              type={findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes)}\n              available_answers={props.candidateExam.question_answers}\n              selectedQuestionAnswer={{\n                question_id: props.candidateExam.selected_question, \n                answers: toNumerical(findSelectedQuestionDetails().find(itm => itm.language === props.candidateExam.selected_language)!.answer),\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />}\n            {/* Calculated Multiple choice */}\n            {props.candidateExam.selected_question !== null && \n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) !== null &&\n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) === questionTypeElementsType.CalculatedMultipleChoice &&\n            <CalculatedMultipleChoice \n              type={findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes)}\n              available_answers={props.candidateExam.question_answers}\n              selectedQuestionAnswer={{\n                question_id: props.candidateExam.selected_question, \n                answers: toCalculatedMultipleChoice(findSelectedQuestionDetails().find(itm => itm.language === props.candidateExam.selected_language)!.answer),\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />}\n          </div>\n      </div>}\n    </div>\n  )\n}\n\nconst mapStateToProps = ({\n  auth,\n  doExam,\n  candidateExam,\n  system,\n  questionTypes,\n}: StoreState): { auth: Auth; doExam: examDataInterface; candidateExam: candidateExamStoreInterface; system: System; questionTypes: questionTypesStoreInterface; } => {\n  return { auth: auth, doExam: doExam, candidateExam: candidateExam, system: system, questionTypes: questionTypes, };\n};\n\nconst QuestionDetails = connect(mapStateToProps, {\n  setSelectedExamQuestion,\n  setQuestionLanguage,\n  loadQuestionTypes,\n})(_QuestionDetails);\n\nexport default QuestionDetails;"],"sourceRoot":""}
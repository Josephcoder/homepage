{"version":3,"sources":["shared/dataTest.tsx","components/Table/Table.tsx","actions/session.ts","actions/document.ts","actions/settings.ts","actions/schools.ts","shared/interfaces.tsx","components/ActionConfirm/ActionConfirm.tsx","containers/Positions/ViewRequirements.tsx","interfaces/marks_publication.ts","containers/Positions/ViewPosition.tsx","containers/HeadTeacher/ReceivePost.tsx","containers/Positions/ReviewRequirements.tsx","containers/Positions/StepsReview.tsx","containers/HeadTeacher/ViewRequest.tsx","containers/HeadTeacher/RequestList.tsx","containers/HeadTeacher/StepsHeader.tsx","containers/HeadTeacher/RequestPostForm.tsx","containers/HeadTeacher/RequestTeacher.tsx"],"names":["isEmptyOrSpaces","str","match","getRoleById","roles","roleId","filter","role","system_user_role_id","getInstituteById","institutes","instituteId","find","item","education_institute_id","getPositionById","positions","position_id","position","toTwoDigit","value","dec","Math","floor","slice","toString","substr","toAnyDigit","padding","zeroes","Array","join","capitalizeFirstLetter","charAt","toUpperCase","Table","props","table","tr","tableId","length","result","characters","charactersLength","i","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","pagination","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","from","keys","map","style","display","className","tableSize","search","searchBG","type","placeholder","onChange","e","data","filterType","td","rows","cols","toLowerCase","columns","textContent","innerText","indexOf","filterTable","target","disabled","loading","Number","tableClass","rounded","id","hideColumns","thColor","column","index","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","GetPlansTypes","callback","dispatch","a","setAxiosToken","axios","get","API","CLAIMING","res","console","log","GET_PLANS_TYPES","plan_types","status","ActionTypes","payload","error","errorToText","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","undefined","is_active","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","createAcademicSession","CREATE_ACADEMIC_SESSION","GetAllAcademicSession","PLACEMENT","GET_ALL_ACADEMIC_SESSION","updateAcademicSession","UPDATE_ACADEMIC_SESSION","academicSessionActivation","ACADEMIC_SESSION_ACTIVATION","deleteAcademicSession","DELETE_ACADEMIC_SESSION","getActiveAcademicSession","GET_ACTIVE_ACADEMIC_SESSION","getDocumentCategory","AUTH","docCategory","GET_DOCUMENT_CATEGORY","createDocumentCategory","CREATE_DOCUMENT_CATEGORY","updateDocumentCategory","UPDATE_DOCUMENT_CATEGORY","deleteDocumentCategory","DELETE_DOCUMENT_CATEGORY","getDocumentSubCategory","docSubCategory","GET_DOCUMENT_SUB_CATEGORY","doc_SUB_category_error","createDocumentSubCategory","CREATE_DOCUMENT_SUB_CATEGORY","updateDocumentSubCategory","UPDATE_DOCUMENT_SUB_CATEGORY","deleteDocumentSubCategory","DELETE_DOCUMENT_SUB_CATEGORY","getDocumentFields","docFields","GET_DOCUMENT_FIELDS","createDocumentFields","CREATE_DOCUMENT_FIELDS","updateDocumentFields","reducer","UPDATE_DOCUMENT_FIELDS","deleteDocumentFields","DELETE_DOCUMENT_FIELDS","distinctCandidates","candidatesData","user_ids","candidate","forEach","includes","user_id","push","getCandidatesInInstitute","educatin_type_id","session_id","APPLICATION","GET_CANDIDATE_IN_INSTITUTE","verifyDocument","VERIFY_DOCUMENT","getSystemSettings","GET_SYSTEM_SETTINGS","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","task","title","key","permitted","GET_TASK_ACCESS","getPositions","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","getSchools","GET_SCHOOLS","getSchoolById","schoolId","GET_SCHOOLS_BY_ID","createSchool","schools","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","school_id","schoolPosts","FETCH_SCHOOL_POSTS","getSchoolPlacement","GET_SCHOOL_PLACEMENT","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","TYPE","UPDATE_SCHOOL_POST","fetchDistrictPosts","district_id","FETCH_DISTRICT_POSTS","getDistrictPlacement","GET_DISTRICT_PLACEMENT","getInstitutePlacementLimit","institute_id","GET_INSTITUTE_PLACEMENT_LIMIT","getDistrictPlacementLimit","GET_DISTRICT_PLACEMENT_LIMIT","updateInstitutePlacementLimit","UPDATE_INSTITUTE_PLACEMENT_LIMIT","PostRequestStatusInterface","DocumentAttributesInterface","DocValidationStatusInterface","SESSION_PLAN_KEYS","DOCUMENT_VALIDATION","EXAMINATION","MARKS_PUBLICATION","PLACEMENT_TRANSFER","ActionConfirmEnum","ActionConfirm","modalType","DELETE","RESTORE_DELETE","INFO","description","setModalAction","confirmFun","ViewRequirements","requirements","colSpan","subcategory_title","field_id","field_title","subcategory_required","required","React","memo","MarksPublicationCandidateStatus","marksPublicationCandidateReportContentKeyInterface","PlacedCandidateStatus","placementReportContentKeyInterface","FC_PositionDistinctCategory","PositionData","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","pos","req","thisRequirements","thisCategory","category","thisSubCategory","subcategory","position_requirement","field","thisField","category_id","user_detail_category_id","category_title","subcategory_id","user_detail_subcategory_id","_id","connect","PushPopupAlert","loadingRequest","setLoadingRequest","setLoading","documentSubCategory","name","window","confirm","patch","isPublished","theme","PopupAlertTheme","info","thisPositionCopy","thisPosition","setThisPosition","danger","position_title","position_code","school_level_id","school_level_name","isGuest","getQualificationById","education_category_title","courses","course_name","course_code","course_id","NoResultThemes","Dark","postShowStatus","showRequestStatus","placed","received","rejected","RECEIVED","ALL_RECEIVED","ALL_REJECTED","RECEIVED_REJECTED","PARTIAL_RECEIVED_REJECTED","PARTIAL_RECEIVED","PARTIAL_REJECTED","CONFIRMED","PENDING","ReceivePost","setThisPlacement","setState","thisPlacement","setAction","action","setTakeAction","takeAction","submitRequest","state","comment","setFormError","element","msg","thisPost","received_posts","confirmed_posts","confirmed_by","auth","user","approval_date","needed_posts","male_number","female_number","occupied_posts","requested_by","requested_post_status","confirmPlacement","role_error","post","placedStatus","waiting_list_id","placed_candidate_id","REJECTED","PLACED","user_access","message","loadingPost","setLoadingPost","getSchoolPlacementError","placement_id","viewPost","setThisPost","setReceivedPosts","setModalState","this","systemPositions","INITIATED","getPlacementByRequest","placementList","src","AUTH_FILES","user_info","photo","alt","fname","lname","phone_number","email","formError","resize","Component","requirementsArray","qualificationId","system_settings","documentCategory","documentFields","handleSubmit","thisRequirementList","warning","modalAction","api_body","positionId","positionTitle","positionCode","positionDesc","positionSubCategoryId","thisLevel","thisEdication","thisCoursesId","update_position","cleanStates","create_position","success","Loading","FC_GroupRequirementsByCategory","category_subcategory_data_id","thisCourses","setFormSteps","ONE","TWO","THREE","FOUR","ViewRequest","Modal","backDrop","Themes","default","close","setViewPost","displayClose","backDropClose","widthSizeClass","ModalSize","large","body","footer","schoolPlacements","setPostId","setPositionId","setRequestedPosts","setRequestExplanation","setFemaleOnPosition","setMaleOnPosition","setStepState","RequestList","setSearchInput","searchInput","setFilterByPosition","filterByPosition","schoolPost","NoResult","modalState","StepsHeader","currentStep","stepState","RequestPostForm","GetAllowedPositions","postPositionIds","Object","prototype","hasOwnProperty","call","preventDefault","requestedPosts","requestExplanation","thisSchool","mySchool","postId","maleOnPosition","femaleOnPosition","post_request_session_id","sessionId","setSchoolLevel","selectedLevel","getPositionByLevelId","allPosition","levelId","formSteps","schoolLevels","school_levels","ViewPosition","onSubmit","htmlFor","placements","request","request_id","RequestTeacher","receivedPosts","loadData","loadingCandidatesError","loadSchoolLevels","componentDidMount","to","activeAcademicSession","PostRequest","sessionPlan"],"mappings":"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","file":"static/js/33.47e48bec.chunk.js","sourcesContent":["import { education_category } from \"../interfaces\";\nimport { PositionAPI } from \"../interfaces/position\";\nimport {\n  CustomeAccessInterface,\n  PostSchoolInterface,\n  RoleToUserInterface,\n  SchoolInfoInterface,\n  SystemUserRoleInterface,\n} from \"./interfaces\";\n\nexport const data_posts_school: PostSchoolInterface[] = [];\n\nexport const isEmptyOrSpaces = (str: string): boolean => {\n  return str === null || str.match(/^ *$/) !== null;\n};\n\nexport const getUserTitle = (\n  accessRoles: SystemUserRoleInterface[],\n  roleId: string\n): string => {\n  const result = accessRoles.find((e) => e.system_user_role_id === roleId);\n  return result ? result.role : \"\";\n};\n\nexport const getRoleById = (\n  roles: SystemUserRoleInterface[],\n  roleId: string\n): SystemUserRoleInterface => {\n  return roles.filter((role) => role.system_user_role_id === roleId)[0];\n};\n\nexport const getInstituteById = (\n  institutes: education_category[],\n  instituteId: string\n): education_category | undefined => {\n  return institutes.find((item) => item.education_institute_id === instituteId);\n};\n\nexport const getPositionById_old = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI => {\n  console.log({\n    positions,\n    position_id,\n    data: positions.filter(\n      (position) => position.position_id === position_id\n    )[0],\n  });\n  return positions.filter(\n    (position) => position.position_id === position_id\n  )[0];\n};\n\nexport const getPositionById = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI | undefined => {\n  return positions.find((position) => position.position_id === position_id);\n};\n\nexport const getSchoolById = (\n  schools: SchoolInfoInterface[],\n  school_id: string\n): SchoolInfoInterface => {\n  return schools.filter((school) => school.school_id === school_id)[0];\n};\n\nexport const getPostById = (\n  posts: PostSchoolInterface[],\n  post_id: string\n): PostSchoolInterface => {\n  return posts.filter((post) => post.school_id === post_id)[0];\n};\n\nexport const getPostsBySchoolId = (\n  posts: PostSchoolInterface[],\n  school_id: string\n): PostSchoolInterface[] => {\n  return posts.filter((post) => post.school_id === school_id);\n};\n\nexport const getPostsByIds = (\n  posts: PostSchoolInterface[],\n  school_id: string,\n  position_id: string\n): PostSchoolInterface[] => {\n  return posts.filter(\n    (post) => post.school_id === school_id && post.position_id === position_id\n  );\n};\n\nexport const displayDate = (dateToDisplay: Date): string => {\n  return new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\",\n  }).format(dateToDisplay);\n};\n\nexport const userAccess = (\n  defaultAccess: RoleToUserInterface,\n  customAccess: CustomeAccessInterface\n): RoleToUserInterface => {\n  // const data = defaultAccess.access.map((default,index,customAccess)=>{\n  //   let data_custom = customAccess\n  //   if\n  // })\n  // return customAccess.filter((custom) => custom.id === accecc_id)[0];\n  return defaultAccess;\n};\n\n// export const groupBy = (list: [], keyGetter: Function) => {\n//   const map = new Map();\n//   list.forEach((item) => {\n//     const key = keyGetter(item);\n//     const collection = map.get(key);\n//     if (!collection) {\n//       map.set(key, [item]);\n//     } else {\n//       collection.push(item);\n//     }\n//   });\n//   return map;\n// };\n\nexport const toTwoDigit = (value: number): string => {\n  var dec = value - Math.floor(value);\n  value = value - dec;\n  return (\"0\" + value).slice(-2) + dec.toString().substr(1);\n};\n\nexport const toAnyDigit = (\n  value: string | number,\n  padding: number = 3\n): string => {\n  var zeroes = new Array(padding + 1).join(\"0\");\n  return (zeroes + value).slice(-padding);\n};\n\nexport const capitalizeFirstLetter = (value: string): string => {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n};\n\nexport const isDateExpiried = (paramDate: string) => {\n  const thisDate = new Date(paramDate);\n  const today = new Date();\n  if (thisDate.getTime() < today.getTime()) {\n    return true;\n  }\n\n  return false;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = (props) => {\n  const startPage = 1;\n  const tableId =\n    !props.tableId || props.tableId === \"myTable\" ? FC_makeID() : props.tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    props.pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId!)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < props.columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${props.tableSize} overflow-x-auto`}>\n      {/* search box  */}\n      {props.search && (\n        <div className={`${props.searchBG} w-full mb-2`}>\n          {props.search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={props.loading}\n              />\n\n              {props.pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={props.loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"overflow-x-auto w-full\">\n        <table\n          className={\n            props.tableClass\n              ? props.tableClass\n              : `w-full shadow ${\n                  props.rounded && \"sm:rounded-lg\"\n                } table-auto order-table`\n          }\n          id={tableId}\n        >\n          {!props.hideColumns && (\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n              <tr\n                className={`text-left tracking-wide bg-${props.thColor}-100 border-b-2 border-${props.thColor}-500 text-${props.thColor}-600`}\n              >\n                {props.columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className={`${column.padding} text-${\n                      column.alignText\n                    } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                    onClick={() =>\n                      column.isSortAllowed && sortThisColumn(tableId, index)\n                    }\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      {column.columnTitle}\n                      {column.isSortAllowed && <BiSort />}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n            {props.rows()}\n          </tbody>\n        </table>\n        {props.pagination && (\n          <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n            <div>\n              <span className=\"text-xs xs:text-sm text-gray-900\">\n                Showing 1 to {pageSize} of {totalItems - 1} Entries\n              </span>\n            </div>\n            <div>\n              <nav className=\"inline-flex shadow-sm\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                      currentPage !== 1 && \"bg-white\"\n                    }`}\n                    aria-label=\"Previous\"\n                    disabled={currentPage === 1 || props.loading}\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                  >\n                    <MdNavigateBefore className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <div>\n                  {pages &&\n                    pages.map((page, pageIndex) => (\n                      <button\n                        key={pageIndex}\n                        className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                          page !== currentPage\n                            ? \"bg-white\"\n                            : \"bg-gray-100 cursor-default\"\n                        }`}\n                        disabled={page === currentPage || props.loading}\n                        onClick={() => setCurrentPage(page)}\n                      >\n                        {page}\n                      </button>\n                    ))}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                      currentPage !== totalPages && \"bg-white\"\n                    }`}\n                    aria-label=\"Next\"\n                    disabled={currentPage === totalPages || props.loading}\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                  >\n                    <MdNavigateNext className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport {\n  AcademicSessionInterface,\n  PlansTypeInterface,\n  SessionPlanInterface,\n} from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\n// GET ALL ACADEMIC SESSION\nexport interface GetAllAcademicSessionAction {\n  type: ActionTypes.GET_ALL_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface[];\n}\n\n// CREATE ACADEMIC SESSION\nexport interface CreateAcademicSessionAction {\n  type: ActionTypes.CREATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// UPDATE ACADEMIC SESSION\nexport interface UpdateAcademicSessionAction {\n  type: ActionTypes.UPDATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// ACTIVATE ACADEMIC SESSION\nexport interface ActivateAcademicSessionAction {\n  type: ActionTypes.ACADEMIC_SESSION_ACTIVATION;\n  payload: AcademicSessionInterface;\n}\n\n// DELETE ACADEMIC SESSION\nexport interface DeleteAcademicSessionAction {\n  type: ActionTypes.DELETE_ACADEMIC_SESSION;\n  payload: string;\n}\n\n// GET ACTIVE ACADEMIC SESSION\nexport interface GetActiveAcademicSessionAction {\n  type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface | \"none\";\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions\n  | GetAllAcademicSessionAction\n  | CreateAcademicSessionAction\n  | UpdateAcademicSessionAction\n  | ActivateAcademicSessionAction\n  | DeleteAcademicSessionAction\n  | GetActiveAcademicSessionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// CREATE ACADEMIC SESSION\nexport const createAcademicSession = (\n  data: AcademicSessionInterface\n): CreateAcademicSessionAction => {\n  return {\n    type: ActionTypes.CREATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ALL ACADEMIC SESSION ==========================\nexport const GetAllAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface[]>(\n        `${API.PLACEMENT}/postrequestperiod/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: AcademicSessionInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      console.log(\"====================================\");\n      console.log({ GetAllAcademicSession: res });\n      console.log(\"====================================\");\n      dispatch<GetAllAcademicSessionAction>({\n        type: ActionTypes.GET_ALL_ACADEMIC_SESSION,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// UPDATE ACADEMIC SESSION\nexport const updateAcademicSession = (\n  data: AcademicSessionInterface\n): UpdateAcademicSessionAction => {\n  return {\n    type: ActionTypes.UPDATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// ACTIVATE ACADEMIC SESSION\nexport const academicSessionActivation = (\n  data: AcademicSessionInterface\n): ActivateAcademicSessionAction => {\n  return {\n    type: ActionTypes.ACADEMIC_SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE ACADEMIC SESSION\nexport const deleteAcademicSession = (\n  data: string\n): DeleteAcademicSessionAction => {\n  return {\n    type: ActionTypes.DELETE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface>(\n        `${API.PLACEMENT}/postrequestperiod/one`\n      );\n      console.log({ GET_ACTIVE_ACADEMIC_SESSION: res.data });\n      let session_plan: AcademicSessionInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveAcademicSessionAction>({\n        type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  CandidatesInterface,\n  DocumentCategoryInterface,\n  DocumentFieldsInterface,\n  DocumentSubCategoryInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { VerifyDocumentInterface } from \"./users\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CATEGORY\nexport interface GetDocumentCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface[];\n}\n\nexport interface CreateDocumentCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface UpdateDocumentCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface DeleteDocumentCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_CATEGORY;\n  payload: string;\n}\n\n// SUB CATEGORY\nexport interface GetDocumentSubCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface[];\n}\n\nexport interface CreateDocumentSubCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface UpdateDocumentSubCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface DeleteDocumentSubCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY;\n  payload: string;\n}\n\n// FIELDS\nexport interface GetDocumentFieldsAction {\n  type: ActionTypes.GET_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface[];\n}\n\nexport interface CreateDocumentFieldsAction {\n  type: ActionTypes.CREATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface UpdateDocumentFieldsAction {\n  type: ActionTypes.UPDATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface DeleteDocumentFieldsAction {\n  type: ActionTypes.DELETE_DOCUMENT_FIELDS;\n  payload: string;\n}\n\n// DOCUMENT CHECKING\nexport interface GetCandidatesInInstituteAtion {\n  type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE;\n  payload: CandidatesInterface[];\n}\n\nexport interface VerifyDocumentAction {\n  type: ActionTypes.VERIFY_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type DocumentCategoryActionType =\n  | GetDocumentCategoryAction\n  | CreateDocumentCategoryAction\n  | UpdateDocumentCategoryAction\n  | DeleteDocumentCategoryAction\n  | GetDocumentSubCategoryAction\n  | CreateDocumentSubCategoryAction\n  | UpdateDocumentSubCategoryAction\n  | DeleteDocumentSubCategoryAction\n  | GetDocumentFieldsAction\n  | CreateDocumentFieldsAction\n  | UpdateDocumentFieldsAction\n  | DeleteDocumentFieldsAction\n  | GetCandidatesInInstituteAtion\n  | VerifyDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CATEGORY\n\nexport const getDocumentCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get(`${API.AUTH}/detailcategory`);\n      console.log({ docCategory: res });\n      dispatch<GetDocumentCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_CATEGORY,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n    }\n  };\n};\n\nexport const createDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// SUB CATEGORY\nexport const getDocumentSubCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentSubCategoryInterface[]>(\n        `${API.AUTH}/detailsubcategory`\n      );\n      console.log({ docSubCategory: res });\n      dispatch<GetDocumentSubCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentSubCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentSubCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentSubCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentSubCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// FIELDS\nexport const getDocumentFields = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentFieldsInterface[]>(\n        `${API.AUTH}/categorysubcatedata`\n      );\n      console.log({ docFields: res });\n      dispatch<GetDocumentFieldsAction>({\n        type: ActionTypes.GET_DOCUMENT_FIELDS,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentFields = (data: DocumentFieldsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentFieldsAction>({\n      type: ActionTypes.CREATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentFields = (data: DocumentFieldsInterface) => {\n  console.log({ reducer: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentFieldsAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentFields = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentFieldsAction>({\n      type: ActionTypes.DELETE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\n// REMOVE DUPLICATION IN CANDIDATES IN EDUCATION CATEGORY PER SESSION\nconst distinctCandidates = (\n  candidatesData: CandidatesInterface[]\n): CandidatesInterface[] => {\n  let result: CandidatesInterface[] = [];\n  let user_ids: string[] = [];\n  const newArray: CandidatesInterface[] = candidatesData.filter((candidate) => {\n    return candidate !== null && candidate !== undefined;\n  });\n  newArray.forEach((candidate) => {\n    if (!user_ids.includes(candidate.user_id)) {\n      result.push(candidate);\n      user_ids.push(candidate.user_id);\n    }\n  });\n  return result;\n};\n// CANDIDATE IN EDUCATION CATEGORY PER SESSION\nexport const getCandidatesInInstitute = (\n  educatin_type_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\", null);\n    try {\n      setAxiosToken();\n      const res = await axios.get<CandidatesInterface[]>(\n        `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({\n        getCandidatesInInstitute: res,\n        distinctCandidates: distinctCandidates(res.data),\n      });\n      console.log(\"====================================\");\n      dispatch<GetCandidatesInInstituteAtion>({\n        type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE,\n        payload: distinctCandidates(res.data),\n        // payload: response.data,\n      });\n      callback(false, \"\", distinctCandidates(res.data));\n    } catch (error) {\n      console.log({ getCandidatesInInstitute: error });\n      callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const verifyDocument = (data: VerifyDocumentInterface) => {\n  console.log(\"================verifyDocument====================\");\n  console.log({ verifyDocument: data });\n  console.log(\"================verifyDocument====================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyDocumentAction>({\n      type: ActionTypes.VERIFY_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${API.AUTH}/allroleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  MySchoolInterface,\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\n// import { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\nimport { placedCandidateInterface } from \"../interfaces/marks_publication\";\nimport { PlacementListInterface } from \"../containers/PlacementLimit/PlacementLimit\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolByIdAction {\n  type: ActionTypes.GET_SCHOOLS_BY_ID;\n  payload: MySchoolInterface;\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\n// School Placements interfaces\nexport interface GetSchoolPlacementAction {\n  type: ActionTypes.GET_SCHOOL_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetDistrictPlacementAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetSessionPlacementAction {\n  type: ActionTypes.GET_SESSION_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\n// Get Institute Limit Posts Action interfaces\nexport interface GetInstitutePlacementLimitAction {\n  type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface GetDistrictPlacementLimitAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface UpdateInstitutePlacementLimitAction {\n  type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT;\n  payload: { limit_id: string; confirmed_post: number };\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolByIdAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | GetSchoolPlacementAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction\n  | GetDistrictPlacementAction\n  | GetSessionPlacementAction\n  | GetInstitutePlacementLimitAction\n  | GetDistrictPlacementLimitAction\n  | UpdateInstitutePlacementLimitAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolById = (schoolId: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<MySchoolInterface>(\n        `${API.APPLICATION}/schools/${schoolId}`\n      );\n      dispatch<GetSchoolByIdAction>({\n        type: ActionTypes.GET_SCHOOLS_BY_ID,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// export const getSchoolsInfo = () => {\n//   return async (dispatch: Dispatch) => {\n//     setAxiosToken();\n//     const response = await axios.get<SchoolInfoInterface[]>(url);\n\n//     dispatch<GetSchoolsInfoAction>({\n//       type: ActionTypes.GET_SCHOOLS_INFO,\n//       payload: response.data,\n//     });\n//   };\n// };\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ schoolPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolPlacement = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/school/${school_id}`\n      );\n\n      console.log({ getSchoolPlacement: res.data });\n\n      dispatch<GetSchoolPlacementAction>({\n        type: ActionTypes.GET_SCHOOL_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ fetchDistrictPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacement = (\n  district_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSessionPlacement = (session_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/session/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getSessionPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetSessionPlacementAction>({\n        type: ActionTypes.GET_SESSION_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getInstitutePlacementLimit = (\n  institute_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/institute/${institute_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getInstitutePlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetInstitutePlacementLimitAction>({\n        type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacementLimit = (\n  district_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/district/${district_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementLimitAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const updateInstitutePlacementLimit = (data: {\n  limit_id: string;\n  confirmed_post: number;\n}) => {\n  console.log(\"====================================\");\n  console.log({ updateInstitutePlacementLimit: data });\n  console.log(\"====================================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateInstitutePlacementLimitAction>({\n      type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT,\n      payload: data,\n    });\n  };\n};\n","import {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  _id?: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active: boolean;\n  disability: boolean;\n  in_education: boolean;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  in_education: boolean;\n  disability: boolean;\n  residence: {\n    province_id: string;\n    province_name: string;\n    district_id: string;\n    district_name: string;\n    sector_id: string;\n    sector_name: string;\n  };\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: boolean;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  _id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  _id: string;\n  center_name: string;\n  center_code: number;\n  district_id: string;\n}\n\nexport interface SectorInterface {\n  district_code: number;\n  district_id: string;\n  sector_name: string;\n  sector_code: number;\n  sector_id: string;\n}\n\nexport interface AllDistrictInterface {\n  sectors: string[];\n  centers: string[];\n  district_name: string;\n  district_code: string;\n  province_code: string;\n  province_id: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n  district_id: string;\n}\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  sectors: SectorInterface[];\n  province_code: number;\n  province_id: string;\n  district_name: string;\n  district_code: number;\n  _id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_code: number;\n  _id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  _id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n  school: {\n    _id: string;\n    school_name: string;\n    school_code: string;\n    province_id: string;\n    province_code: string;\n    district_id: {\n      _id: string;\n      district_name: string;\n    };\n    district_code: string;\n    sector_code: string;\n    sector_id: string;\n    school_status: string;\n    status: number;\n    createdAt: string;\n    updatedAt: string;\n  };\n  post_request_session_id: string;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  school_code: number;\n  province_id: string;\n  province_code: number;\n  district_id: string;\n  district_code: number;\n  sector_id: string;\n  sector_code: number;\n  education_category_id: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: string;\n  application_status: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  district: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface LocationSectorTableInterface {\n  province_id: string;\n  province_name: string;\n  province_code: number;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  sub_category_required: boolean;\n  required: boolean;\n  isAnyField: boolean;\n}\n\nexport interface PositionRequirementsQualificationInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  fields: DocumentFieldsInterface[];\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  userInfo: {\n    n_id: string;\n    phone_number: string;\n    email: string;\n    user_info: {\n      document_type: string;\n      issue_number: string;\n      date_of_issue: string;\n      date_of_expiry: string;\n      place_of_issue: string;\n      application_number: string;\n      fname: string;\n      lname: string;\n      father_names: string;\n      mother_names: string;\n      sex: string;\n      date_of_birth: string;\n      place_of_birth: string;\n      country_of_birth: string;\n      village_id: string;\n      village: string;\n      cell: string;\n      sector: string;\n      district: string;\n      province: string;\n      civil_status: string;\n      spouse: null;\n      status: string;\n      photo: string;\n    };\n  };\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import { FiAlertCircle } from \"react-icons/fi\";\nimport { GoAlert } from \"react-icons/go\";\nimport { MdDeleteForever, MdRestoreFromTrash } from \"react-icons/md\";\n\nexport enum ActionConfirmEnum {\n  RESTORE_DELETE = \"restore_delete\",\n  DELETE = \"delete\",\n  INFO = \"info\",\n  OTHER = \"other\",\n}\n\ninterface ActionConfirmProps {\n  confirmFun: Function;\n  setModalAction: (value: boolean) => void;\n  description: string;\n  modalType: ActionConfirmEnum;\n}\n\nconst ActionConfirm: React.FC<ActionConfirmProps> = (props) => {\n  return (\n    <div\n      className=\"min-w-screen h-screen animated fadeIn faster  fixed  left-0 top-0 flex justify-center items-center inset-0 z-50 outline-none focus:outline-none bg-no-repeat bg-center bg-cover\"\n      id=\"modal-id\"\n    >\n      <div className=\"absolute bg-black opacity-80 inset-0 z-0\"></div>\n      <div className=\"w-full  max-w-lg p-5 relative mx-auto my-auto rounded-xl shadow-lg bg-white animate__animated animate__zoomIn animate__faster\">\n        {/* <!--content--> */}\n        <div className=\"\">\n          {/* <!--body--> */}\n          <div className=\"text-center p-5 flex-auto justify-center\">\n            {props.modalType === ActionConfirmEnum.DELETE ||\n              (props.modalType === ActionConfirmEnum.RESTORE_DELETE && (\n                <FiAlertCircle className=\"w-4 h-4 -m-1 flex items-center text-red-500 mx-auto\" />\n              ))}\n            {props.modalType === ActionConfirmEnum.DELETE ? (\n              <MdDeleteForever className=\"w-16 h-16 flex items-center text-red-500 mx-auto\" />\n            ) : props.modalType === ActionConfirmEnum.RESTORE_DELETE ? (\n              <MdRestoreFromTrash className=\"w-16 h-16 flex items-center text-yellow-800 mx-auto\" />\n            ) : props.modalType === ActionConfirmEnum.INFO ? (\n              <GoAlert className=\"w-16 h-16 flex items-center text-blue-500 mx-auto\" />\n            ) : (\n              <GoAlert className=\"w-16 h-16 flex items-center text-yellow-500 mx-auto\" />\n            )}\n            <h2 className=\"text-xl font-bold py-4 \">Are you sure?</h2>\n            <p className=\"text-sm text-gray-500 px-8\">{props.description}</p>\n          </div>\n          {/* <!--footer--> */}\n          <div className=\"p-3  mt-2 text-center space-x-4 md:block\">\n            <button\n              className=\"mb-2 md:mb-0 bg-white px-5 py-2 text-sm shadow-sm font-medium tracking-wider border text-gray-600 rounded-full hover:shadow-lg hover:bg-gray-100\"\n              onClick={() => props.setModalAction(false)}\n            >\n              Cancel\n            </button>\n            <button\n              className={`mb-2 md:mb-0 border px-5 py-2 text-sm shadow-sm font-medium tracking-wider text-white rounded-full hover:shadow-lg ${\n                props.modalType === ActionConfirmEnum.DELETE\n                  ? \"border-red-500 hover:bg-red-600 bg-red-500\"\n                  : props.modalType === ActionConfirmEnum.RESTORE_DELETE\n                  ? \"border-yellow-700 hover:bg-yellow-800 bg-yellow-700\"\n                  : props.modalType === ActionConfirmEnum.INFO\n                  ? \"border-blue-500 hover:bg-blue-600 bg-blue-500\"\n                  : \"border-yellow-500 hover:bg-yellow-600 bg-yellow-500\"\n              }`}\n              onClick={() => {\n                props.confirmFun();\n                props.setModalAction(false);\n              }}\n            >\n              Confirm\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ActionConfirm;\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title}</span>\n        </td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id) ? \"Any document\" : item.field_title}\n          </span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {isEmptyOrSpaces(item.field_id) ? (\n            item.subcategory_required ? (\n              <span className=\"text-yellow-800\">Required</span>\n            ) : (\n              \"Optional\"\n            )\n          ) : item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          // {\n          //   columnTitle: \"Qualification Status\",\n          //   alignText: \"left\",\n          //   padding: \"p-3\",\n          // },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default React.memo(ViewRequirements);\n","export interface marksPublicationInterface {\n  publication_id: string;\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_status: \"PENDING\" | \"PUBLISHED\";\n  status: number;\n  publication_position_marks: publicationInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface publicationInterface {\n  _id: string;\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport interface marksPublicationFormInterface {\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_position_marks: publicationFormInterface[];\n}\n\nexport interface publicationFormInterface {\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport enum MarksPublicationCandidateStatus {\n  Failed = \"Failed\",\n  Passed = \"Passed\",\n}\n\nexport interface MarksPublicationCandidate_old {\n  user: {\n    in_eduction: boolean;\n    disability: boolean;\n    is_active: boolean;\n    n_id: string;\n    phone_number: string;\n    email: string;\n    createdAt: string;\n    updatedAt: string;\n    user_id: string;\n    user_info: placedCandidateUserInfo;\n  };\n  period: string;\n  position: string;\n  courses: {\n    id: string;\n    marks: number;\n    _id: string;\n  }[];\n  waiting_status: MarksPublicationCandidateStatus;\n  status: number;\n  user_position_marks: number;\n  createdAt: string;\n  updatedAt: string;\n  disability: boolean;\n  gender: string;\n  in_education: boolean;\n  id: string;\n}\n\nexport interface MarksPublicationCandidate {\n  _id: string;\n  user: string;\n  period: string;\n  position: string;\n  in_education: boolean;\n  n_id: string;\n  fname: string;\n  lname: string;\n  email: string;\n  phone_number: string;\n  gender: string;\n  disability: boolean;\n  courses: {\n    id: string;\n    marks: number;\n    _id: string;\n  }[];\n  waiting_status: MarksPublicationCandidateStatus;\n  status: number;\n  user_position_marks: number;\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n}\n\nexport interface MarksPublicationCandidateToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  gender: string;\n  position_name: string;\n  marks: number;\n  status: MarksPublicationCandidateStatus;\n}\n\nexport enum marksPublicationCandidateReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  gender = \"gender\",\n  position_name = \"position_name\",\n  marks = \"marks\",\n  status = \"status\",\n}\n\nexport interface marksPublicationReportContentInterface {\n  key: marksPublicationCandidateReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n// ---------------------------------------------------------------------------------------------\n\nexport interface placedCandidateInterface {\n  _id: string;\n  status: PlacedCandidateStatus;\n  user_id: string;\n  school_id: string;\n  position_id: string;\n  waiting_list_id: string;\n  request_id: string;\n  createdAt: string;\n  comment: string;\n  updatedAt: string;\n  __v: number;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  user_info: placedCandidateUserInfo;\n  school: {\n    _id: string;\n    school_name: string;\n    school_code: string;\n    province_id: string;\n    province_code: string;\n    district_id: {\n      _id: string;\n      district_name: string;\n    };\n    district_code: string;\n    sector_code: string;\n    sector_id: string;\n    school_status: string;\n    status: number;\n    createdAt: string;\n    updatedAt: string;\n  };\n}\n\nexport interface placedCandidateUserInfo {\n  document_type: string;\n  issue_number: string;\n  date_of_issue: string;\n  date_of_expiry: string;\n  place_of_issue: string;\n  application_number: string;\n  fname: string;\n  lname: string;\n  father_names: string;\n  mother_names: string;\n  sex: string;\n  date_of_birth: string;\n  place_of_birth: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  civil_status: string;\n  spouse: null;\n  status: string;\n  photo: string;\n}\n\nexport enum PlacedCandidateStatus {\n  PENDING = \"pending\",\n  PLACED = \"placed\",\n  REJECTED = \"rejected\",\n}\n\nexport interface PlacementToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  school_name: string;\n  position_name: string;\n  waiting_date: string;\n  placement_date: string;\n  status: PlacedCandidateStatus;\n}\n\nexport enum placementReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  school_name = \"school_name\",\n  position_name = \"position_name\",\n  waiting_date = \"waiting_date\",\n  placement_date = \"placement_date\",\n  status = \"status\",\n}\n\nexport interface placementReportContentInterface {\n  key: placementReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { getDocumentSubCategory } from \"../../actions/document\";\nimport { publishPosition } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { PositionAPI } from \"../../interfaces/position\";\nimport { StoreState } from \"../../reducers\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/functions\";\nimport { getQualificationById } from \"./StepsReview\";\nimport ViewRequirements from \"./ViewRequirements\";\n\nexport interface PositionRequirementTableInterface {\n  category_id: string;\n  category_title: string;\n  subcategory_id: string;\n  subcategory_title: string;\n  field_title: string;\n  field_id: string;\n  // _id: string;\n  required: boolean;\n  subcategory_required: boolean;\n}\n\nexport const FC_PositionDistinctCategory = (\n  PositionData: PositionAPI[]\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // LOOP IN ALL POSITIONS ==========================\n  for (let pos in PositionData) {\n    // GET CURRENT POSITION ====================\n    let thisPosition = PositionData[pos];\n    // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n    let requirements = thisPosition.requirements;\n    // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n    for (let req in requirements) {\n      let thisRequirements = requirements[req];\n      // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n      let thisCategory = thisRequirements.category;\n      // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n      let thisSubCategory = thisRequirements.subcategory;\n      // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n      if (thisCategory) {\n        if (thisRequirements.position_requirement.length > 0) {\n          for (let field in thisRequirements.position_requirement) {\n            // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n            let thisField = thisRequirements.position_requirement[field];\n            // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n            PositionsTemp.push({\n              category_id: thisCategory.user_detail_category_id,\n              category_title: thisCategory.title,\n              subcategory_id: thisSubCategory.user_detail_subcategory_id,\n              subcategory_title: thisSubCategory.title,\n              subcategory_required: thisRequirements.required,\n              field_title: thisField.title,\n              field_id: thisField._id,\n              required: thisField.required,\n            });\n          }\n        } else {\n          PositionsTemp.push({\n            category_id: thisCategory.user_detail_category_id,\n            category_title: thisCategory.title,\n            subcategory_id: thisSubCategory.user_detail_subcategory_id,\n            subcategory_title: thisSubCategory.title,\n            subcategory_required: thisRequirements.required,\n            field_title: \"\",\n            field_id: \"\",\n            required: false,\n          });\n        }\n\n        // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n        if (\n          !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n        ) {\n          DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n          DistinctCategoriesTemp.push({\n            category_id: thisCategory.user_detail_category_id,\n            category_title: thisCategory.title,\n            subcategory_id: \"\",\n            subcategory_title: \"\",\n            field_title: \"\",\n            field_id: \"\",\n            required: false,\n            subcategory_required: thisRequirements.required,\n          });\n        }\n\n        // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n        if (\n          !DistinctSubCategoriesIds.includes(\n            thisSubCategory.user_detail_subcategory_id\n          )\n        ) {\n          DistinctSubCategoriesIds.push(\n            thisSubCategory.user_detail_subcategory_id\n          );\n          DistinctSubCategoriesTemp.push({\n            category_id: thisSubCategory.category_id,\n            category_title: \"\",\n            subcategory_id: thisSubCategory.user_detail_subcategory_id,\n            subcategory_title: thisSubCategory.title,\n            subcategory_required: thisRequirements.required,\n            field_title: \"\",\n            field_id: \"\",\n            required: false,\n          });\n        }\n      }\n    }\n    // DistinctCategoriesIds.;\n  }\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport interface ViewPositionProps {\n  thisPosition: PositionAPI;\n  setThisPosition?: (value: PositionAPI | null) => void;\n  isGuest?: boolean;\n\n  document: DocumentReducerInterface;\n  getDocumentSubCategory: Function;\n  publishPosition: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewPosition = (props: ViewPositionProps) => {\n  const [loadingRequest, setLoadingRequest] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (!props.document.documentSubCategory) {\n      props.getDocumentSubCategory();\n    } else {\n      setLoading(false);\n    }\n  }, [props]);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  const publishPosition = async (\n    position_id: string,\n    status: boolean,\n    name: string\n  ) => {\n    if (\n      window.confirm(\n        `Are you sure do you want to ${\n          status ? \"publish\" : \"unpublish\"\n        } this position?`\n      )\n    ) {\n      setLoadingRequest(position_id);\n      try {\n        const res = await axios.patch(\n          `${API.APPLICATION}/publishposition/${position_id}`,\n          {\n            isPublished: status,\n          }\n        );\n        props.publishPosition({ position_id, status });\n        props.PushPopupAlert({\n          title: `${name} ${\n            status ? \" published\" : \" stopped on application\"\n          } successfully`,\n          theme: PopupAlertTheme.info,\n        });\n        let thisPositionCopy = { ...props.thisPosition };\n        thisPositionCopy.isPublished = status;\n        props.setThisPosition && props.setThisPosition(thisPositionCopy);\n        console.log(\"Position publish: \", res);\n      } catch (error) {\n        console.error(\"err: \", error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(\"\");\n    }\n  };\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <span className=\"text-blue-600 font-bold text-2xl\">\n            {props.thisPosition.position_title}\n          </span>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Code:</span>\n            <span className=\"font-semibold\">\n              {props.thisPosition.position_code}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisPosition.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisPosition.school_level_id.school_level_name}\n            </span>\n          </div>\n          {!props.isGuest && (\n            <div className=\"flex items-center gap-2 text-base text-gray-600\">\n              <span className={`italic`}>Primary qualification:</span>\n              <span className=\"font-semibold\">\n                {props.document.documentSubCategory &&\n                getQualificationById(\n                  props.document.documentSubCategory,\n                  props.thisPosition.subcategory_id\n                )\n                  ? getQualificationById(\n                      props.document.documentSubCategory,\n                      props.thisPosition.subcategory_id\n                    )!.title\n                  : \"Undefined\"}\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisPosition.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600 overflow-x-auto\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisPosition.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !== props.thisPosition.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n          {!props.isGuest && (\n            <div className=\"flex items-center gap-2 text-base text-gray-600\">\n              <span className={`italic`}>Status:</span>\n\n              <div className=\"flex flex-row items-center gap-2 mt-1\">\n                <div\n                  className={`relative ${\n                    loadingRequest.length > 0\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } flex items-center gap-1`}\n                  onClick={() =>\n                    !loadingRequest.length &&\n                    !props.isGuest &&\n                    publishPosition(\n                      props.thisPosition.position_id,\n                      !props.thisPosition.isPublished,\n                      props.thisPosition.position_title\n                    )\n                  }\n                >\n                  <span className=\"block w-14 h-8 bg-gray-100 hover:border-gray-100 rounded-full shadow-inner\"></span>\n                  <span\n                    className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                      !props.thisPosition.isPublished\n                        ? \"bg-yellow-500\"\n                        : \"bg-green-500 transform translate-x-full\"\n                    }`}\n                  ></span>\n                  {loadingRequest === props.thisPosition.position_id ? (\n                    <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                  ) : (\n                    <span className=\"font-medium\">\n                      {props.thisPosition.isPublished\n                        ? \"Published\"\n                        : \"Unpublished\"}\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-blue-500 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisPosition.requirements.length > 0 ? (\n            FC_PositionDistinctCategory([\n              props.thisPosition,\n            ]).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100 rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_PositionDistinctCategory([\n                      props.thisPosition,\n                    ]).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({\n  document,\n}: StoreState): {\n  document: DocumentReducerInterface;\n} => {\n  return {\n    document,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    getDocumentSubCategory,\n    publishPosition,\n    PushPopupAlert,\n  })(ViewPosition)\n);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport {\n  MdArrowBack,\n  MdErrorOutline,\n  MdMail,\n  MdSmartphone,\n  MdTaskAlt,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport { fetchSchoolPosts, getSchoolPlacement } from \"../../actions/schools\";\nimport ActionConfirm, {\n  ActionConfirmEnum,\n} from \"../../components/ActionConfirm/ActionConfirm\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI } from \"../../interfaces\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { getPositionById, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  PostSchoolInterface,\n  PostRequestStatusInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport ViewPosition from \"../Positions/ViewPosition\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\n\nexport enum postShowStatus {\n  PENDING = \"Pending\",\n  CONFIRMED = \"Confirmed\",\n  ALL_RECEIVED = \"All received\",\n  PARTIAL_RECEIVED = \"Received & Pending\",\n  ALL_REJECTED = \"All rejected\",\n  PARTIAL_REJECTED = \"Rejected & Pending\",\n  PARTIAL_RECEIVED_REJECTED = \"Received & Rejected & Pending\",\n  RECEIVED_REJECTED = \"Received & Rejected\",\n}\nexport const showRequestStatus = (\n  status: PostRequestStatusInterface,\n  placed: number,\n  received: number,\n  rejected: number\n): postShowStatus => {\n  if (status === PostRequestStatusInterface.RECEIVED) {\n    if (placed === received) {\n      return postShowStatus.ALL_RECEIVED;\n    }\n    if (placed === rejected) {\n      return postShowStatus.ALL_REJECTED;\n    }\n    if (placed === rejected + received) {\n      return postShowStatus.RECEIVED_REJECTED;\n    }\n    if (placed > rejected + received && received > 0 && rejected > 0) {\n      return postShowStatus.PARTIAL_RECEIVED_REJECTED;\n    }\n    if (rejected === 0 && placed > received) {\n      return postShowStatus.PARTIAL_RECEIVED;\n    }\n    if (received === 0 && placed > rejected) {\n      return postShowStatus.PARTIAL_REJECTED;\n    }\n  }\n\n  if (status === PostRequestStatusInterface.CONFIRMED) {\n    return postShowStatus.CONFIRMED;\n  }\n  return postShowStatus.PENDING;\n};\n\ntype ReceivePostProps = {\n  viewPost: boolean;\n  placementList: placedCandidateInterface[];\n  thisPost: PostSchoolInterface;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n  receivedPosts: number;\n  setReceivedPosts: (value: number) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  loadingPost: boolean;\n  setLoadingPost: (value: boolean) => void;\n  positionId: string;\n  systemPositions: PositionAPI[];\n\n  // REDUX ==========\n  auth: Auth;\n  fetchSchoolPosts: Function;\n  getSchoolPlacement: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ReceivePostState = {\n  placement_id: string;\n  action: \"RECEIVED\" | \"NOT_RECEIVED\" | null;\n  takeAction: boolean;\n  comment: string;\n  thisPlacement: placedCandidateInterface | null;\n};\n\nclass ReceivePost extends Component<ReceivePostProps, ReceivePostState> {\n  constructor(props: ReceivePostProps) {\n    super(props);\n\n    this.state = {\n      placement_id: \"\",\n      action: null,\n      thisPlacement: null,\n      takeAction: false,\n      comment: \"\",\n    };\n  }\n  setThisPlacement = (value: placedCandidateInterface | null) => {\n    this.setState({ thisPlacement: value });\n  };\n  setAction = (value: \"RECEIVED\" | \"NOT_RECEIVED\" | null) => {\n    this.setState({ action: value });\n  };\n  setTakeAction = (value: boolean) => {\n    this.setState({ takeAction: value });\n  };\n\n  submitRequest = async (\n    thisPlacement: placedCandidateInterface,\n    action: \"RECEIVED\" | \"NOT_RECEIVED\"\n  ) => {\n    if (action === \"NOT_RECEIVED\" && isEmptyOrSpaces(this.state.comment)) {\n      return this.props.setFormError({\n        element: \"received_comment\",\n        msg: \"Reason of your decision is required!\",\n      });\n    }\n\n    let received: number = 0;\n    if (action === \"NOT_RECEIVED\") {\n      received = this.props.thisPost.received_posts\n        ? this.props.thisPost.received_posts\n        : 0;\n    } else {\n      received = this.props.thisPost.received_posts\n        ? this.props.thisPost.received_posts + 1\n        : 1;\n    }\n\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.thisPost) {\n        const res = await axios.patch<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpost/${this.props.thisPost._id}`,\n          {\n            confirmed_posts: this.props.thisPost.confirmed_posts,\n            confirmed_by: this.props.auth.user.user_id,\n            received_posts: received,\n            approval_date: this.props.thisPost.approval_date,\n            school_id: this.props.thisPost.school_id,\n            position_id: this.props.thisPost.position_id,\n            district_id: this.props.thisPost.district_id,\n            needed_posts: this.props.thisPost.needed_posts,\n            male_number: this.props.thisPost.male_number,\n            female_number: this.props.thisPost.female_number,\n            description: this.props.thisPost.description,\n            occupied_posts: this.props.thisPost.occupied_posts,\n            requested_by: this.props.auth.user.user_id,\n            requested_post_status: PostRequestStatusInterface.RECEIVED,\n          }\n        );\n        if (res) {\n          // props.updateSchoolPost(\"SCHOOL\", res.data.data);\n          this.confirmPlacement(thisPlacement);\n\n          // !this.props.viewPost && this.props.setThisPost(null);\n          // this.props.setReceivedPosts(0);\n          // this.props.setModalState(null);\n          // this.props.PushPopupAlert({\n          //   title: `Post request has been received!`,\n          //   theme: PopupAlertTheme.info,\n          // });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  confirmPlacement = async (thisPlacement: placedCandidateInterface) => {\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.thisPost) {\n        const res = await axios.post<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/confirmreceived`,\n          {\n            placedStatus: [\n              {\n                waiting_list_id: thisPlacement.waiting_list_id,\n                placed_candidate_id: thisPlacement._id,\n                status:\n                  this.state.action === \"NOT_RECEIVED\"\n                    ? PlacedCandidateStatus.REJECTED\n                    : PlacedCandidateStatus.PLACED,\n              },\n            ],\n          }\n        );\n        if (res) {\n          this.props.fetchSchoolPosts(\n            this.props.auth.user_access.school_id,\n            (status: boolean, message: string) => {\n              if (!status) {\n                if (message.length > 0 && this.props.loadingPost) {\n                  console.error(\"error loading school post: \", message);\n                  this.props.PushPopupAlert({\n                    title: message,\n                    theme: PopupAlertTheme.danger,\n                  });\n                }\n                this.props.setLoadingPost(false);\n              }\n            }\n          );\n\n          this.props.getSchoolPlacement(\n            this.props.auth.user_access.school_id,\n            (\n              status: boolean,\n              msg: string,\n              data?: placedCandidateInterface[]\n            ) => {\n              this.props.setLoadingPost(status);\n              if (!status && msg.length > 0) {\n                console.error({ getSchoolPlacementError: msg });\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          );\n\n          this.props.setFormError(null);\n          this.setState({ comment: \"\", placement_id: \"\", action: null });\n          !this.props.viewPost && this.props.setThisPost(null);\n          this.props.setReceivedPosts(0);\n          this.props.setModalState(null);\n          this.props.PushPopupAlert({\n            title: `Request has been done completely!`,\n            theme: PopupAlertTheme.info,\n          });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  render() {\n    return (\n      <section>\n        <div className=\"border-b-2 border-gray-200 mb-2 pb-1 flex items-center gap-3\">\n          <button\n            className={`ml-3 bg-gray-100 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n              this.props.loadingRequest ? \"cursor-wait\" : \"cursor-pointer\"\n            } animate__animated animate__fadeIn`}\n            disabled={this.props.loadingRequest}\n            onClick={() => {\n              this.props.setThisPost(null);\n              this.props.setReceivedPosts(0);\n              this.props.setModalState(null);\n            }}\n          >\n            <MdArrowBack className=\"text-4xl\" />\n          </button>\n\n          <span className=\"font-bold text-2xl md:text-3xl text-gray-700\">\n            Confirm teacher arrival\n          </span>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 divide-x-0 divide-y md:divide-x md:divide-y-0\">\n          <div className=\"px-1 mb-4 mt-3\">\n            <div className=\"text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Position: </span>\n                <span className=\"font-bold\">\n                  {getPositionById(\n                    this.props.systemPositions,\n                    this.props.thisPost.position_id\n                  )\n                    ? getPositionById(\n                        this.props.systemPositions,\n                        this.props.thisPost.position_id\n                      )!.position_title\n                    : \"Unknown position\"}\n                </span>\n              </div>\n\n              <table className=\"w-full shadow\" id=\"report_content\">\n                <thead className=\"bg-blue-50 border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">Requested posts</td>\n                    <td className=\"px-2 py-2\">Approved posts</td>\n                    <td className=\"px-2 py-2\">Placed posts</td>\n                    <td className=\"px-2 py-2\">Received posts</td>\n                    <td className=\"px-2 py-2\">Not received posts</td>\n                    <td className=\"px-2 py-2\">Status</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.needed_posts}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status !==\n                      PostRequestStatusInterface.INITIATED ? (\n                        <div className=\"flex items-center gap-1\">\n                          {this.props.thisPost.confirmed_posts}\n                        </div>\n                      ) : (\n                        \"-\"\n                      )}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status !==\n                      PostRequestStatusInterface.INITIATED ? (\n                        <span>\n                          {\n                            getPlacementByRequest(\n                              this.props.placementList,\n                              this.props.thisPost._id\n                            ).length\n                          }\n                        </span>\n                      ) : (\n                        \"-\"\n                      )}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.RECEIVED\n                        ? this.props.thisPost.received_posts\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.RECEIVED ? (\n                        <span>\n                          {\n                            getPlacementByRequest(\n                              this.props.placementList,\n                              this.props.thisPost._id,\n                              PlacedCandidateStatus.REJECTED\n                            ).length\n                          }\n                        </span>\n                      ) : (\n                        \"0\"\n                      )}\n                    </td>\n\n                    <td className=\"px-2 py-2\">\n                      <span\n                        className={`px-2 py-1 mx-1 font-semibold rounded ${\n                          this.props.thisPost.requested_post_status ===\n                          PostRequestStatusInterface.INITIATED\n                            ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                            : this.props.thisPost.requested_post_status ===\n                              PostRequestStatusInterface.CONFIRMED\n                            ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                            : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                        }`}\n                      >\n                        {showRequestStatus(\n                          this.props.thisPost.requested_post_status,\n                          getPlacementByRequest(\n                            this.props.placementList,\n                            this.props.thisPost._id,\n                            \"all\"\n                          ).length,\n                          getPlacementByRequest(\n                            this.props.placementList,\n                            this.props.thisPost._id,\n                            PlacedCandidateStatus.PLACED\n                          ).length,\n                          getPlacementByRequest(\n                            this.props.placementList,\n                            this.props.thisPost._id,\n                            PlacedCandidateStatus.REJECTED\n                          ).length\n                        )}\n                      </span>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n\n              <div className=\"my-2\">\n                {getPositionById(\n                  this.props.systemPositions,\n                  this.props.thisPost.position_id\n                ) && (\n                  <ViewPosition\n                    thisPosition={\n                      getPositionById(\n                        this.props.systemPositions,\n                        this.props.thisPost.position_id\n                      )!\n                    }\n                    isGuest={true}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"px-4 mt-3 mb-4\">\n            {getPlacementByRequest(\n              this.props.placementList,\n              this.props.thisPost._id\n            ).map((item, index) => (\n              <div\n                className=\"relative grid grid-cols-1 gap-4 px-4 py-1 mb-8 border rounded bg-white shadow\"\n                key={index + item._id}\n              >\n                <div className=\"relative flex gap-4\">\n                  {/* IMG ================== */}\n                  <img\n                    src={API.AUTH_FILES + \"/\" + item.user_info.photo}\n                    className=\"object-center object-cover relative rounded-lg -top-4 -mb-3 bg-white border h-20 w-20\"\n                    alt=\"\"\n                    loading=\"lazy\"\n                  />\n                  <div className=\"flex flex-col w-full\">\n                    <div className=\"flex flex-row justify-between\">\n                      <p className=\"relative text-xl whitespace-nowrap truncate overflow-hidden\">\n                        {item.user_info.fname + \" \" + item.user_info.lname}\n                      </p>\n                    </div>\n                    <p className=\"text-gray-500 text-sm flex items-center gap-1\">\n                      <MdSmartphone /> {item.phone_number}\n                    </p>\n                    <p className=\"text-gray-500 text-sm flex items-center gap-1\">\n                      <MdMail /> {item.email}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"-mt-3 overflow-x-hidden\">\n                  {this.state.action !== \"NOT_RECEIVED\" && (\n                    <div className=\"flex flex-row-reverse gap-2\">\n                      <div className=\"flex-initial\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-blue flex items-center font-medium tracking-wide capitalize transition duration-300 transform active:scale-95 ease-in-out\"\n                          disabled={this.props.loadingRequest}\n                          onClick={() => {\n                            this.setState({\n                              placement_id: item._id,\n                              action: \"RECEIVED\",\n                              thisPlacement: item,\n                              takeAction: true,\n                            });\n                            // this.submitRequest(item, \"RECEIVED\");\n                          }}\n                        >\n                          <MdTaskAlt />\n                          <span className=\"pl-2 mx-1\">\n                            {this.props.loadingRequest &&\n                            item._id === this.state.placement_id\n                              ? \"Loading...\"\n                              : \"Received\"}\n                          </span>\n                        </button>\n                      </div>\n                      <div className=\"flex-initial\">\n                        <button\n                          type=\"button\"\n                          className=\"btn flex items-center px-5 py-2.5 font-medium tracking-wide text-black capitalize hover:bg-red-200 hover:fill-current hover:text-red-600 focus:outline-none transition duration-300 transform active:scale-95 ease-in-out\"\n                          disabled={this.props.loadingRequest}\n                          onClick={() =>\n                            this.setState({\n                              placement_id: item._id,\n                              action: \"NOT_RECEIVED\",\n                              thisPlacement: item,\n                            })\n                          }\n                        >\n                          <MdErrorOutline />\n                          <span className=\"pl-2 mx-1\">Not received</span>\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                  {this.state.action === \"NOT_RECEIVED\" &&\n                    this.state.placement_id === item._id && (\n                      <div className=\"flex flex-col md:flex-row items-end md:items-start gap-2 animate__animated animate__fadeInRight animate__faster mt-2\">\n                        <div className=\"w-full\">\n                          <textarea\n                            className={`border-2 rounded p-2 md:text-base w-full ${\n                              this.props.formError &&\n                              this.props.formError.element ===\n                                \"received_comment\"\n                                ? \"border-red-500\"\n                                : \"border-gray-300\"\n                            } focus:border-gray-500`}\n                            placeholder=\"comment\"\n                            onChange={(e) => {\n                              this.setState({ comment: e.target.value });\n                              this.props.formError &&\n                                this.props.formError.element ===\n                                  \"received_comment\" &&\n                                this.props.setFormError(null);\n                            }}\n                            value={this.state.comment}\n                            style={{ resize: \"none\" }}\n                          ></textarea>\n                          {this.props.formError &&\n                            this.props.formError.element ===\n                              \"received_comment\" && (\n                              <span className=\"text-red-700 text-sm\">\n                                {this.props.formError.msg}\n                              </span>\n                            )}\n                        </div>\n\n                        <div>\n                          <button\n                            type=\"button\"\n                            className=\"btn bg-gray-100 hover:bg-gray-400 w-full font-medium tracking-wide capitalize transition duration-300 transform active:scale-95 ease-in-out\"\n                            disabled={this.props.loadingRequest}\n                            onClick={() => this.setTakeAction(true)}\n                          >\n                            {this.props.loadingRequest &&\n                            item._id === this.state.placement_id\n                              ? \"Loading...\"\n                              : \"Confirm\"}\n                          </button>\n                          <button\n                            type=\"button\"\n                            className=\"btn bg-red-100  w-full hover:bg-red-400 font-medium tracking-wide capitalize transition duration-300 transform active:scale-95 ease-in-out\"\n                            disabled={this.props.loadingRequest}\n                            onClick={() =>\n                              this.setState({\n                                placement_id: \"\",\n                                action: null,\n                                thisPlacement: null,\n                              })\n                            }\n                          >\n                            {this.props.loadingRequest &&\n                            item._id === this.state.placement_id\n                              ? \"Loading...\"\n                              : \"Cancel\"}\n                          </button>\n                        </div>\n                      </div>\n                    )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {this.state.thisPlacement &&\n          this.state.action &&\n          this.state.takeAction && (\n            <ActionConfirm\n              confirmFun={() => {\n                this.setTakeAction(false);\n                this.submitRequest(\n                  this.state.thisPlacement!,\n                  this.state.action!\n                );\n              }}\n              setModalAction={(value: boolean) => {\n                this.setTakeAction(value);\n                this.setThisPlacement(null);\n                this.setAction(null);\n                this.setState({\n                  placement_id: \"\",\n                });\n              }}\n              description={\n                this.state.action === \"NOT_RECEIVED\"\n                  ? `Do you really confirm that ${this.state.thisPlacement.user_info.fname} ${this.state.thisPlacement.user_info.lname} didn't or will not come?`\n                  : `Do you really confirm that you have received ${this.state.thisPlacement.user_info.fname} ${this.state.thisPlacement.user_info.lname}?`\n              }\n              modalType={ActionConfirmEnum.INFO}\n            />\n          )}\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\nexport default connect(mapStateToProps, {\n  fetchSchoolPosts,\n  getSchoolPlacement,\n  PushPopupAlert,\n})(ReceivePost);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Table from \"../../components/Table/Table\";\nimport { StoreState } from \"../../reducers\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirementsArray: PositionRequirementTableInterface[];\n  document: DocumentReducerInterface;\n}\n\nconst ReviewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirementsArray;\n    // let data: positionRequirementInterface[] = props.requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Requirement Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title}</span>\n        </td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id) ? \"Any document\" : item.field_title}\n          </span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {isEmptyOrSpaces(item.field_id) ? (\n            item.subcategory_required ? (\n              <span className=\"text-yellow-800\">Required</span>\n            ) : (\n              \"Optional\"\n            )\n          ) : item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"white\"\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({\n  document,\n}: StoreState): {\n  document: DocumentReducerInterface;\n} => {\n  return {\n    document,\n  };\n};\nexport default React.memo(connect(mapStateToProps)(ReviewRequirements));\n","import axios from \"axios\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { positionRequirementInterface } from \".\";\nimport { PushPopupAlert } from \"../../actions\";\nimport {\n  getDocumentCategory,\n  getDocumentFields,\n  getDocumentSubCategory,\n} from \"../../actions/document\";\nimport { getPositions, PositionCreateInterface } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { course } from \"../../interfaces/course\";\nimport { education_category } from \"../../interfaces/education_category\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { PositionAPI } from \"../../interfaces/position\";\nimport { school_level } from \"../../interfaces/school_level\";\nimport { StoreState } from \"../../reducers\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport {\n  DocumentCategoryInterface,\n  DocumentSubCategoryInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport ReviewRequirements from \"./ReviewRequirements\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\nexport const getQualificationById = (\n  data: DocumentSubCategoryInterface[],\n  qualificationId: string\n): DocumentSubCategoryInterface | undefined => {\n  return data.find(\n    (item) => item.user_detail_subcategory_id === qualificationId\n  );\n};\n\ninterface StepsReviewProps {\n  modalAction: false | \"CREATE_POSITION\" | \"UPDATE_POSITION\";\n  positionId: string;\n  positionTitle: string;\n  positionCode: string;\n  positionDesc: string;\n  positionSubCategoryId: string;\n  thisLevel: school_level;\n  thisEdication: education_category;\n  thisCourses: course[];\n  thisCoursesId: string[];\n  thisRequirementList:\n    | {\n        user_detail_category_id: string;\n        user_detail_subcategory_id: string;\n        position_requirement: positionRequirementInterface[];\n        required: boolean;\n      }[]\n    | null;\n  formSteps: {\n    ONE: boolean;\n    TWO: boolean;\n    THREE: boolean;\n    FOUR: boolean;\n  };\n  setFormSteps: React.Dispatch<\n    React.SetStateAction<{\n      ONE: boolean;\n      TWO: boolean;\n      THREE: boolean;\n      FOUR: boolean;\n    }>\n  >;\n  systemPositions: PositionAPI[] | null;\n  setModalAction: React.Dispatch<\n    React.SetStateAction<false | \"CREATE_POSITION\" | \"UPDATE_POSITION\">\n  >;\n  setThisPosition: React.Dispatch<React.SetStateAction<PositionAPI | null>>;\n  document: DocumentReducerInterface;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getPositions: Function;\n  cleanStates: () => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\nconst StepsReview: React.FC<StepsReviewProps> = (props) => {\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (!props.document.documentCategory) {\n      props.getDocumentCategory();\n    } else if (!props.document.documentSubCategory) {\n      props.getDocumentSubCategory();\n    } else if (!props.document.documentFields) {\n      props.getDocumentFields();\n    } else {\n      setLoading(false);\n    }\n  }, [props]);\n\n  const handleSubmit = async () => {\n    setLoadingRequest(true);\n    if (!props.thisRequirementList) {\n      return props.PushPopupAlert({\n        title: `Please add requirement`,\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    try {\n      // Update current\n      if (props.modalAction === \"UPDATE_POSITION\") {\n        const api_body: PositionCreateInterface = {\n          position_id: props.positionId,\n          position_title: props.positionTitle,\n          position_code: props.positionCode,\n          description: props.positionDesc,\n          subcategory_id: props.positionSubCategoryId,\n          school_level_id: props.thisLevel.school_level_id,\n          education_institute_id: props.thisEdication.education_institute_id,\n          courses: props.thisCoursesId,\n          requirements: props.thisRequirementList,\n        };\n        const res = await axios.patch(`${API.APPLICATION}/position`, api_body);\n        console.log(\"==================UPDATE POSITION==================\");\n        console.log({\n          update_position: api_body,\n        });\n        console.log({ \"Result: \": res });\n        console.log(\"===================UPDATE POSITION=================\");\n\n        //   props.updateApplicationSession(res.data.data);\n        props.getPositions((status: boolean, msg: string) => {\n          setLoadingRequest(status);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        });\n\n        props.PushPopupAlert({\n          title: `Position updated successfully`,\n          theme: PopupAlertTheme.info,\n        });\n        props.systemPositions && props.setThisPosition(null);\n        props.cleanStates();\n        props.setModalAction(false);\n      } else {\n        const api_body: PositionCreateInterface = {\n          position_title: props.positionTitle,\n          position_code: props.positionCode,\n          description: props.positionDesc,\n          school_level_id: props.thisLevel.school_level_id,\n          subcategory_id: props.positionSubCategoryId,\n          education_institute_id: props.thisEdication.education_institute_id,\n          courses: props.thisCoursesId,\n          requirements: props.thisRequirementList,\n        };\n        console.log(\"==================CREATE POSITION==================\");\n        console.log({\n          create_position: api_body,\n        });\n        console.log(\"==================CREATE POSITION==================\");\n        // Add new\n        const res = await axios.post(`${API.APPLICATION}/position`, api_body);\n        //   props.createAplicationSession(res.data.session);\n        props.getPositions((status: boolean, msg: string) => {\n          setLoadingRequest(status);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        });\n        props.PushPopupAlert({\n          title: `Position created successfully`,\n          theme: PopupAlertTheme.success,\n        });\n        //   props.closeModal(false);\n        props.cleanStates();\n        props.setModalAction(false);\n        console.log(\"CREATING_NEW_POSITION: \", res);\n      }\n    } catch (error) {\n      props.PushPopupAlert({\n        title: `${errorToText(error)}! Try again`,\n        theme: PopupAlertTheme.danger,\n      });\n      console.error(\"Err: \", { error });\n      setLoadingRequest(false);\n    }\n  };\n\n  if (loading) return <Loading />;\n\n  const FC_GroupRequirementsByCategory = (\n    thisRequirementList: {\n      user_detail_category_id: string;\n      user_detail_subcategory_id: string;\n      position_requirement: positionRequirementInterface[];\n      required: boolean;\n    }[]\n  ): {\n    PositionsTemp: PositionRequirementTableInterface[];\n    DistinctCategoriesTemp: PositionRequirementTableInterface[];\n    DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n  } => {\n    let PositionsTemp: PositionRequirementTableInterface[] = [];\n    let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n      DistinctCategoriesIds: string[] = [];\n    let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n      DistinctSubCategoriesIds: string[] = [];\n    // GET DISTINCT CATEGORIES && SUB CATEGORIES ==========================\n    for (const key in thisRequirementList) {\n      if (\n        props.document.documentCategory &&\n        props.document.documentSubCategory &&\n        props.document.documentFields\n      ) {\n        // ADD CATEOGRY TO ARRAY ====================\n        let thisCategory: DocumentCategoryInterface | undefined =\n            props.document.documentCategory.find(\n              (item) =>\n                item.user_detail_category_id ===\n                thisRequirementList[key].user_detail_category_id\n            ),\n          thisSubCategory: DocumentSubCategoryInterface | undefined =\n            props.document.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirementList[key].user_detail_subcategory_id\n            );\n\n        if (thisCategory && thisSubCategory) {\n          if (\n            !DistinctCategoriesIds.includes(\n              thisRequirementList[key].user_detail_category_id\n            )\n          ) {\n            DistinctCategoriesIds.push(\n              thisRequirementList[key].user_detail_category_id\n            );\n            DistinctCategoriesTemp.push({\n              category_id: thisRequirementList[key].user_detail_category_id,\n              category_title: thisCategory.title,\n              subcategory_id: \"\",\n              subcategory_title: \"\",\n              subcategory_required: thisRequirementList[key].required,\n              field_title: \"\",\n              field_id: \"\",\n              required: false,\n            });\n          }\n\n          // ADD SUB CATEOGRY TO ARRAY ====================\n          if (\n            !DistinctSubCategoriesIds.includes(\n              thisRequirementList[key].user_detail_subcategory_id\n            )\n          ) {\n            DistinctSubCategoriesIds.push(\n              thisRequirementList[key].user_detail_subcategory_id\n            );\n            DistinctSubCategoriesTemp.push({\n              category_id: thisRequirementList[key].user_detail_category_id,\n              category_title: \"\",\n              subcategory_id:\n                thisRequirementList[key].user_detail_subcategory_id,\n              subcategory_title: thisSubCategory.title,\n              subcategory_required: false,\n              field_title: \"\",\n              field_id: \"\",\n              required: false,\n            });\n          }\n\n          // GET ALL REQUIREMENTS ====================================\n          if (thisRequirementList[key].position_requirement.length > 0) {\n            for (const field in thisRequirementList[key].position_requirement) {\n              const thisField =\n                thisRequirementList[key].position_requirement[field];\n              PositionsTemp.push({\n                category_id: thisCategory.user_detail_category_id,\n                category_title: thisCategory.title,\n                subcategory_id: thisSubCategory.user_detail_subcategory_id,\n                subcategory_title: thisSubCategory.title,\n                subcategory_required: thisRequirementList[key].required,\n                field_title: props.document.documentFields.find(\n                  (item) => item._id === thisField.category_subcategory_data_id\n                )\n                  ? props.document.documentFields.find(\n                      (item) =>\n                        item._id === thisField.category_subcategory_data_id\n                    )!.title\n                  : \"\",\n                field_id: thisField.category_subcategory_data_id,\n                required: thisField.required,\n              });\n            }\n          } else {\n            PositionsTemp.push({\n              category_id: thisCategory.user_detail_category_id,\n              category_title: thisCategory.title,\n              subcategory_id: thisSubCategory.user_detail_subcategory_id,\n              subcategory_title: thisSubCategory.title,\n              subcategory_required: thisRequirementList[key].required,\n              field_title: \"\",\n              field_id: \"\",\n              required: false,\n            });\n          }\n        }\n      }\n    }\n\n    return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n  };\n\n  return (\n    <Fragment>\n      <div className=\"w-full px-4 py-1 mt-4 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <span className=\"text-blue-600 font-bold text-2xl\">\n            {props.positionTitle}\n          </span>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Code:</span>\n            <span className=\"font-semibold\">{props.positionCode}</span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">{props.positionDesc}</span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisLevel.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Primary qualification:</span>\n            <span className=\"font-semibold\">\n              {props.document.documentSubCategory &&\n              getQualificationById(\n                props.document.documentSubCategory,\n                props.positionSubCategoryId\n              )\n                ? getQualificationById(\n                    props.document.documentSubCategory,\n                    props.positionSubCategoryId\n                  )!.title\n                : \"Undefined\"}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {props.thisEdication.education_category_title}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisCourses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !== props.thisCourses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-blue-500 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n\n          {props.thisRequirementList && props.thisRequirementList.length > 0 ? (\n            FC_GroupRequirementsByCategory(\n              props.thisRequirementList\n            ).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100 rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  {props.thisRequirementList && (\n                    <ReviewRequirements\n                      requirementsArray={FC_GroupRequirementsByCategory(\n                        props.thisRequirementList\n                      ).PositionsTemp.filter(\n                        (req) => req.category_id === item.category_id\n                      )}\n                    />\n                  )}\n                </div>\n              </div>\n            ))\n          ) : (\n            <div>No Data</div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"flex items-center justify-between mt-4\">\n        <button\n          className=\"btn bg-gray-500 text-gray-50 mb-2 animate__animated animate__fadeIn focus:outline-none\"\n          onClick={() =>\n            props.setFormSteps({\n              ONE: false,\n              TWO: false,\n              THREE: true,\n              FOUR: false,\n            })\n          }\n        >\n          Back\n        </button>\n        <button\n          className=\"btn btn-blue mb-2 animate__animated animate__fadeIn focus:outline-none\"\n          onClick={() => handleSubmit()}\n          disabled={loadingRequest}\n        >\n          {loadingRequest ? \"Loading...\" : \"Save\"}\n        </button>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  document,\n  system_settings,\n}: StoreState): {\n  document: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    document,\n    systemPositions: system_settings.systemPositions,\n  };\n};\n\nexport default React.memo(connect(mapStateToProps, {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  getPositions,\n  PushPopupAlert,\n})(StepsReview));\n","import React, { Component } from \"react\";\nimport { BiReply } from \"react-icons/bi\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { placedCandidateInterface } from \"../../interfaces/marks_publication\";\nimport { capitalizeFirstLetter, getPositionById } from \"../../shared/dataTest\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n} from \"../../shared/interfaces\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\n\ninterface ViewRequestProps {\n  thisPost: PostSchoolInterface;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setViewPost: (value: boolean) => void;\n  systemPositions: PositionAPI[];\n  schoolPlacements: placedCandidateInterface[];\n  setPostId: (value: string) => void;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  setRequestExplanation: (value: string) => void;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n}\n\nexport class ViewRequest extends Component<ViewRequestProps> {\n  render() {\n    return (\n      <Modal\n        backDrop={true}\n        theme={Themes.default}\n        close={(): void => {\n          this.props.setThisPost(null);\n          this.props.setViewPost(false);\n        }}\n        displayClose={true}\n        backDropClose={false}\n        title={\n          <div className=\"flex flex-row gap-4 items-center\">\n            <div className=\"flex flex-col\">\n              <span className=\"font-bold text-2xl text-gray-500\">\n                Viewing Post Request\n              </span>\n            </div>\n          </div>\n        }\n        widthSizeClass={ModalSize.large}\n        padding={{ title: true, body: false, footer: false }}\n      >\n        <section className=\"px-4 mx-auto mb-4 mt-3 flex items-start\">\n          <section className=\"w-full\">\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Position: </span>\n              <span className=\"font-bold\">\n                {getPositionById(\n                  this.props.systemPositions,\n                  this.props.thisPost.position_id\n                )\n                  ? getPositionById(\n                      this.props.systemPositions,\n                      this.props.thisPost.position_id\n                    )!.position_title\n                  : \"Unknown position\"}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Requested posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.needed_posts}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Approved posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status !==\n                PostRequestStatusInterface.INITIATED\n                  ? this.props.thisPost.confirmed_posts\n                  : \"-\"}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Placed posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status !==\n                PostRequestStatusInterface.INITIATED ? (\n                  <div\n                    className=\"flex items-center gap-1 cursor-pointer\"\n                    onClick={() => this.props.setModalState(\"RECEIVE\")}\n                  >\n                    {\n                      getPlacementByRequest(\n                        this.props.schoolPlacements,\n                        this.props.thisPost._id\n                      ).length\n                    }\n                    {getPlacementByRequest(\n                      this.props.schoolPlacements,\n                      this.props.thisPost._id\n                    ).length > 0 && (\n                      <BiReply className=\"bg-yellow-600 w-5 h-5 text-white\" />\n                    )}\n                  </div>\n                ) : (\n                  \"-\"\n                )}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Received posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status ===\n                PostRequestStatusInterface.RECEIVED\n                  ? this.props.thisPost.received_posts\n                  : \"-\"}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Number of female: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.female_number}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Number of male: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.male_number}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Request reason: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.description}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Status: </span>\n              <span\n                className={`px-2 py-1 mx-1 font-semibold rounded ${\n                  this.props.thisPost.requested_post_status ===\n                  PostRequestStatusInterface.INITIATED\n                    ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                    : this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.CONFIRMED\n                    ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                    : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                }`}\n              >\n                {this.props.thisPost.requested_post_status ===\n                PostRequestStatusInterface.INITIATED\n                  ? \"Pending\"\n                  : capitalizeFirstLetter(\n                      this.props.thisPost.requested_post_status\n                    )}\n              </span>\n            </div>\n          </section>\n          <div className=\"mb-3 flex items-center justify-end gap-2\">\n            {this.props.thisPost.requested_post_status ===\n              PostRequestStatusInterface.INITIATED && (\n              <button\n                className=\"font-bold py-1 px-4 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                onClick={() => {\n                  this.props.setModalState(\"UPDATE\");\n                  this.props.setPostId(this.props.thisPost._id);\n                  this.props.setPositionId(this.props.thisPost.position_id);\n                  this.props.setRequestedPosts(\n                    this.props.thisPost.needed_posts\n                  );\n                  this.props.setRequestExplanation(\n                    this.props.thisPost.description\n                  );\n                  this.props.setFemaleOnPosition(\n                    this.props.thisPost.female_number\n                  );\n                  this.props.setMaleOnPosition(this.props.thisPost.male_number);\n                  this.props.setFormSteps({ ONE: true, TWO: false });\n                  this.props.setStepState({ ONE: false, TWO: false });\n                }}\n                disabled={\n                  this.props.thisPost.requested_post_status !==\n                  PostRequestStatusInterface.INITIATED\n                }\n              >\n                Edit\n              </button>\n            )}\n            {this.props.thisPost.requested_post_status !==\n              PostRequestStatusInterface.INITIATED &&\n              getPlacementByRequest(\n                this.props.schoolPlacements,\n                this.props.thisPost._id\n              ).length > 0 && (\n                <button\n                  className=\"font-bold py-1 px-2 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                  onClick={() => this.props.setModalState(\"RECEIVE\")}\n                >\n                  Receive\n                </button>\n              )}\n          </div>\n        </section>\n      </Modal>\n    );\n  }\n}\n\nexport default ViewRequest;\n","import React, { Component } from \"react\";\nimport { BiReply } from \"react-icons/bi\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { PositionAPI } from \"../../interfaces\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { getPositionById } from \"../../shared/dataTest\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n} from \"../../shared/interfaces\";\nimport { showRequestStatus } from \"./ReceivePost\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\nimport ViewRequest from \"./ViewRequest\";\n\ninterface RequestListProps {\n  schoolPosts: PostSchoolInterface[];\n  systemPositions: PositionAPI[] | null;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  loadingRequest: boolean;\n  filterByPosition: string;\n  setFilterByPosition: (value: string) => void;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setViewPost: (value: boolean) => void;\n\n  schoolPlacements: placedCandidateInterface[];\n\n  thisPost: PostSchoolInterface | null;\n  setPostId: (value: string) => void;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  setRequestExplanation: (value: string) => void;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n  viewPost: boolean;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n}\n\ninterface RequestListState {\n  searchInput: string;\n}\n\nclass RequestList extends Component<RequestListProps, RequestListState> {\n  constructor(props: RequestListProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n          <div className=\"flex flex-col md:flex-row\">\n            <select\n              className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none\"\n              onChange={(e) => this.props.setFilterByPosition(e.target.value)}\n              value={this.props.filterByPosition}\n            >\n              <option value=\"all\">All Position</option>\n              {this.props.systemPositions &&\n              this.props.systemPositions.length > 0 ? (\n                this.props.systemPositions.map((position, index) => (\n                  <option key={index + 1} value={position.position_id}>\n                    {position.position_title}\n                  </option>\n                ))\n              ) : (\n                <option value=\"\">No Position found</option>\n              )}\n            </select>\n          </div>\n          <div className=\"block relative\">\n            <div className=\"pt-6 md:pt-0 md:pl-6\">\n              <button\n                className=\"btn bg-primary text-white hover:bg-blue-600\"\n                onClick={() => this.props.setModalState(\"CREATE\")}\n                disabled={this.props.loadingRequest}\n              >\n                Request Teacher\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"w-full py-2\">\n          <input\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            type=\"text\"\n            value={this.state.searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-50 border-2 border-gray-400 py-2 px-3 rounded focus:border-gray-800\"\n            disabled={\n              this.props.schoolPosts.length <= 0 || this.props.loadingRequest\n            }\n          />\n        </div>\n\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-blue-50 border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td className=\"px-2 py-2\">Position</td>\n              <td className=\"px-2 py-2\">Current F</td>\n              <td className=\"px-2 py-2\">Current M</td>\n              <td className=\"px-2 py-2\">Request</td>\n              <td className=\"px-2 py-2\">Approved</td>\n              <td className=\"px-2 py-2\">Placed</td>\n              <td className=\"px-2 py-2\">Received</td>\n              <td className=\"px-2 py-2\">Not Received</td>\n              <td className=\"px-2 py-2\">Vacant</td>\n              <td className=\"px-2 py-2\">Status</td>\n              <td className=\"px-2 py-2\"></td>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.schoolPosts.length > 0 ? (\n              this.props.schoolPosts.map((schoolPost, index) => (\n                <tr\n                  key={index + schoolPost._id}\n                  className=\"border-b border-gray-200 hover:bg-gray-100\"\n                >\n                  <td className=\"px-2 py-3 text-left font-medium\">\n                    {index + 1}\n                  </td>\n                  <td className=\"py-3 px-1 text-left font-medium\">\n                    {this.props.systemPositions &&\n                    getPositionById(\n                      this.props.systemPositions,\n                      schoolPost.position_id\n                    )\n                      ? getPositionById(\n                          this.props.systemPositions,\n                          schoolPost.position_id\n                        )!.position_title\n                      : \"Unknown position\"}\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    {schoolPost.female_number}\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    {schoolPost.male_number}\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    {schoolPost.needed_posts}\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    {schoolPost.requested_post_status !==\n                    PostRequestStatusInterface.INITIATED\n                      ? schoolPost.confirmed_posts\n                      : \"-\"}\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    <div className=\"flex items-center gap-1\">\n                      {schoolPost.confirmed_posts &&\n                        getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost._id\n                        ).length}\n                      {getPlacementByRequest(\n                        this.props.schoolPlacements,\n                        schoolPost._id\n                      ).length > 0 && (\n                        <BiReply\n                          className=\"bg-yellow-600 w-5 h-5 text-white cursor-pointer\"\n                          onClick={() => {\n                            this.props.setModalState(\"RECEIVE\");\n                            this.props.setThisPost(schoolPost);\n                          }}\n                        />\n                      )}\n                    </div>\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    {schoolPost.received_posts}\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    {schoolPost.confirmed_posts &&\n                      getPlacementByRequest(\n                        this.props.schoolPlacements,\n                        schoolPost._id,\n                        PlacedCandidateStatus.REJECTED\n                      ).length}\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    {schoolPost.confirmed_posts &&\n                      getPlacementByRequest(\n                        this.props.schoolPlacements,\n                        schoolPost._id,\n                        \"all\"\n                      ).length -\n                        getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost._id,\n                          PlacedCandidateStatus.PLACED\n                        ).length}\n                  </td>\n                  <td>\n                    <span\n                      className={`px-2 py-1 font-semibold rounded ${\n                        schoolPost.requested_post_status ===\n                        PostRequestStatusInterface.INITIATED\n                          ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                          : schoolPost.requested_post_status ===\n                            PostRequestStatusInterface.CONFIRMED\n                          ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                          : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                      }`}\n                    >\n                      {showRequestStatus(\n                        schoolPost.requested_post_status,\n                        getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost._id,\n                          \"all\"\n                        ).length,\n                        getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost._id,\n                          PlacedCandidateStatus.PLACED\n                        ).length,\n                        getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost._id,\n                          PlacedCandidateStatus.REJECTED\n                        ).length\n                      )}\n                    </span>\n                  </td>\n                  <td className=\"py- text-left\">\n                    <div className=\"flex item-center justify-end gap-1\">\n                      <button\n                        className=\"btn btn-blue transition ease-out duration-500 flex items-center\"\n                        title=\"View User Profile\"\n                        onClick={() => {\n                          this.props.setThisPost(schoolPost);\n                          this.props.setViewPost(true);\n                        }}\n                      >\n                        Details\n                      </button>\n                      {schoolPost.requested_post_status ===\n                        PostRequestStatusInterface.INITIATED && (\n                        <button\n                          className=\"btn bg-gray-500 text-white hover:bg-gray-700\"\n                          onClick={() => {\n                            this.props.setModalState(\"UPDATE\");\n                            this.props.setPostId(schoolPost._id);\n                            this.props.setPositionId(schoolPost.position_id);\n                            this.props.setRequestedPosts(\n                              schoolPost.needed_posts\n                            );\n                            this.props.setRequestExplanation(\n                              schoolPost.description\n                            );\n                            this.props.setFemaleOnPosition(\n                              schoolPost.female_number\n                            );\n                            this.props.setMaleOnPosition(\n                              schoolPost.male_number\n                            );\n                            this.props.setFormSteps({ ONE: true, TWO: false });\n                            this.props.setStepState({ ONE: false, TWO: false });\n                          }}\n                          disabled={this.props.loadingRequest}\n                        >\n                          Edit\n                        </button>\n                      )}\n                      {getPlacementByRequest(\n                        this.props.schoolPlacements,\n                        schoolPost._id\n                      ).length > 0 && (\n                        <button\n                          className=\"btn bg-green-600 text-white hover:bg-green-700\"\n                          onClick={() => {\n                            this.props.setModalState(\"RECEIVE\");\n                            this.props.setThisPost(schoolPost);\n                          }}\n                          disabled={this.props.loadingRequest}\n                        >\n                          Receive\n                        </button>\n                      )}\n                    </div>\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan={12}>\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No request have been made!\"}\n                  />\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n\n        {this.props.viewPost &&\n          this.props.modalState === null &&\n          this.props.thisPost &&\n          this.props.systemPositions && (\n            <ViewRequest\n              thisPost={this.props.thisPost}\n              setThisPost={this.props.setThisPost}\n              setViewPost={this.props.setViewPost}\n              systemPositions={this.props.systemPositions}\n              schoolPlacements={this.props.schoolPlacements}\n              setPostId={this.props.setPostId}\n              setModalState={this.props.setModalState}\n              setPositionId={this.props.setPositionId}\n              setRequestedPosts={this.props.setRequestedPosts}\n              setRequestExplanation={this.props.setRequestExplanation}\n              setFemaleOnPosition={this.props.setFemaleOnPosition}\n              setMaleOnPosition={this.props.setMaleOnPosition}\n              setFormSteps={this.props.setFormSteps}\n              setStepState={this.props.setStepState}\n            />\n          )}\n      </div>\n    );\n  }\n}\n\nexport default RequestList;\n","import React, { Fragment } from \"react\";\nimport { FaSchool } from \"react-icons/fa\";\nimport { VscOpenPreview } from \"react-icons/vsc\";\n\ninterface StepsHeaderProps {\n  currentStep: number;\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n}\n\nconst StepsHeader: React.FC<StepsHeaderProps> = (props) => {\n  return (\n    <Fragment>\n      <div className=\"p-5\">\n        <div className=\"mx-4 p-4\">\n          <div className=\"flex items-center\">\n            {/* STEP ONE ================================== */}\n            <div\n              className={`flex items-center ${\n                props.currentStep === 1\n                  ? \"text-white\"\n                  : props.stepState.ONE\n                  ? \"text-blue-500 cursor-pointer\"\n                  : \"text-gray-500\"\n              } relative`}\n              onClick={() =>\n                props.stepState.ONE &&\n                props.setFormSteps({\n                  ONE: true,\n                  TWO: false,\n                })\n              }\n            >\n              <div\n                className={`rounded-full transition duration-500 ease-in-out h-12 w-12 py-3 border-2 ${\n                  props.currentStep === 1\n                    ? \"border-blue-500 bg-blue-500\"\n                    : props.stepState.ONE\n                    ? \"border-blue-500 cursor-pointer\"\n                    : \"border-gray-500\"\n                }`}\n              >\n                <FaSchool className=\"feather feather-bookmark w-full h-full\" />\n              </div>\n              <div\n                className={`absolute top-0 -ml-10 text-center mt-16 w-32 text-xs font-semibold uppercase ${\n                  props.currentStep === 1\n                    ? \"text-blue-500\"\n                    : props.stepState.ONE\n                    ? \"text-blue-500 cursor-pointer\"\n                    : \"text-gray-500\"\n                }`}\n              >\n                Position\n              </div>\n            </div>\n            <div\n              className={`flex-auto border-t-2 transition duration-500 ease-in-out ${\n                props.stepState.ONE ? \"border-blue-500\" : \"border-gray-300\"\n              }`}\n            ></div>\n\n            {/* STEP TWO ================================== */}\n            <div\n              className={`flex items-center ${\n                props.currentStep === 4\n                  ? \"text-white\"\n                  : props.stepState.TWO\n                  ? \"text-blue-500 cursor-pointer\"\n                  : \"text-gray-500\"\n              } relative`}\n              onClick={() =>\n                props.stepState.TWO &&\n                props.setFormSteps({\n                  ONE: false,\n                  TWO: false,\n                })\n              }\n            >\n              <div\n                className={`rounded-full transition duration-500 ease-in-out h-12 w-12 py-3 border-2 ${\n                  props.currentStep === 4\n                    ? \"border-blue-500 bg-blue-500\"\n                    : props.stepState.TWO\n                    ? \"border-blue-500 cursor-pointer\"\n                    : \"border-gray-500\"\n                }`}\n              >\n                <VscOpenPreview className=\"feather feather-database w-full h-full\" />\n              </div>\n              <div\n                className={`absolute top-0 -ml-10 text-center mt-16 w-32 text-xs font-semibold uppercase ${\n                  props.currentStep === 4\n                    ? \"text-blue-500\"\n                    : props.stepState.TWO\n                    ? \"text-blue-500\"\n                    : \"text-gray-500\"\n                }`}\n              >\n                Description\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default StepsHeader;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../actions\";\nimport { createSchoolPost, updateSchoolPost } from \"../../actions/schools\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { getPositionById, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  MySchoolInterface,\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport ViewPosition from \"../Positions/ViewPosition\";\nimport StepsHeader from \"./StepsHeader\";\n\ninterface RequestPostFormProps {\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  formSteps: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n  sessionId: string;\n  postId: string;\n  setPostId: (value: string) => void;\n  positionId: string;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  requestedPosts: number;\n  maleOnPosition: number;\n  femaleOnPosition: number;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  requestExplanation: string;\n  setRequestExplanation: (value: string) => void;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  //   REDUX =================\n  auth: Auth;\n  mySchool: MySchoolInterface | null;\n  schoolPosts: PostSchoolInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n  createSchoolPost: Function;\n  updateSchoolPost: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface RequestPostFormState {\n  selectedLevel: string;\n  error: string | null;\n}\n\nexport class RequestPostForm extends Component<\n  RequestPostFormProps,\n  RequestPostFormState\n> {\n  constructor(props: RequestPostFormProps) {\n    super(props);\n\n    this.state = {\n      selectedLevel: \"\",\n      error: null,\n    };\n  }\n\n  GetAllowedPositions = (position_id?: string): PositionAPI[] => {\n    if (this.props.systemPositions) {\n      if (this.props.schoolPosts.length > 0) {\n        let postPositionIds: string[] = [];\n        for (const key in this.props.schoolPosts) {\n          if (\n            Object.prototype.hasOwnProperty.call(this.props.schoolPosts, key)\n          ) {\n            if (\n              this.props.schoolPosts[key].requested_post_status !==\n                PostRequestStatusInterface.RECEIVED ||\n              (this.props.schoolPosts[key].requested_post_status !==\n                PostRequestStatusInterface.CONFIRMED &&\n                this.props.schoolPosts[key].confirmed_posts &&\n                this.props.schoolPosts[key].confirmed_posts === 0)\n            ) {\n              if (\n                !position_id ||\n                position_id !== this.props.schoolPosts[key].position_id\n              ) {\n                postPositionIds.push(this.props.schoolPosts[key].position_id);\n              }\n            }\n          }\n        }\n        if (position_id) {\n          postPositionIds = postPositionIds.filter(\n            (item) => item !== position_id\n          );\n        }\n        return this.props.systemPositions.filter(\n          (item) => !postPositionIds.includes(item.position_id)\n        );\n      }\n      return this.props.systemPositions;\n    }\n    return [];\n  };\n\n  submitRequest = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // if (this.props.modalState === \"RECEIVE\" && this.props.receivedPosts < 0) {\n    //   return this.props.setFormError({\n    //     element: \"received_posts\",\n    //     msg: \"Invalid number of received post\",\n    //   });\n    // }\n    // if (\n    //   this.props.modalState === \"RECEIVE\" &&\n    //   this.props.thisPost &&\n    //   this.props.receivedPosts > this.props.thisPost.needed_posts\n    // ) {\n    //   return this.props.setFormError({\n    //     element: \"received_posts\",\n    //     msg: \"Invalid number of received post\",\n    //   });\n    // }\n\n    if (this.props.requestedPosts <= 0) {\n      return this.props.setFormError({\n        element: \"requested_posts\",\n        msg: \"Needed post must be greater than 0\",\n      });\n    }\n\n    if (isEmptyOrSpaces(this.props.requestExplanation)) {\n      return this.props.setFormError({\n        element: \"comment\",\n        msg: \"Explanation is required!\",\n      });\n    }\n\n    const thisSchool = this.props.mySchool;\n    if (!thisSchool) {\n      return this.props.PushPopupAlert({\n        title: \"No district id found\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    if (\n      this.props.modalState === \"UPDATE\" &&\n      isEmptyOrSpaces(this.props.postId)\n    ) {\n      return this.setState({ error: \"Post id not find\" });\n    }\n\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.modalState === \"CREATE\") {\n        const res = await axios.post<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpost`,\n          {\n            school_id: this.props.auth.user_access.school_id,\n            position_id: this.props.positionId,\n            district_id: thisSchool.district_id,\n            needed_posts: this.props.requestedPosts,\n            male_number: this.props.maleOnPosition,\n            female_number: this.props.femaleOnPosition,\n            // description: 44,\n            description: this.props.requestExplanation,\n            occupied_posts:\n              Number(this.props.maleOnPosition) +\n              Number(this.props.femaleOnPosition),\n            requested_by: this.props.auth.user.user_id,\n            post_request_session_id: this.props.sessionId,\n          }\n        );\n        if (res) {\n          this.props.createSchoolPost(res.data.data);\n          this.props.setPositionId(\"\");\n          this.props.setRequestedPosts(0);\n          this.props.setFemaleOnPosition(0);\n          this.props.setMaleOnPosition(0);\n          this.props.setRequestExplanation(\"\");\n          this.props.setFormSteps({ ONE: true, TWO: false });\n          this.props.setStepState({ ONE: false, TWO: false });\n          this.props.PushPopupAlert({\n            title: `Post(s) has been requested!`,\n            theme: PopupAlertTheme.success,\n          });\n        }\n      }\n\n      if (this.props.modalState === \"UPDATE\") {\n        console.log(\"====================================\");\n        console.log({\n          confirmed_posts: 0,\n          confirmed_by: null,\n          received_posts: 0,\n          approval_date: null,\n          school_id: this.props.auth.user_access.school_id,\n          position_id: this.props.positionId,\n          district_id: thisSchool.district_id._id,\n          needed_posts: this.props.requestedPosts,\n          male_number: this.props.maleOnPosition,\n          female_number: this.props.femaleOnPosition,\n          description: this.props.requestExplanation,\n          occupied_posts:\n            Number(this.props.maleOnPosition) +\n            Number(this.props.femaleOnPosition),\n          requested_by: this.props.auth.user.user_id,\n          requested_post_status: PostRequestStatusInterface.INITIATED,\n        });\n        console.log(\"====================================\");\n        const res = await axios.patch<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpost/${this.props.postId}`,\n          {\n            confirmed_posts: 0,\n            confirmed_by: null,\n            received_posts: 0,\n            approval_date: null,\n            school_id: this.props.auth.user_access.school_id,\n            position_id: this.props.positionId,\n            district_id: thisSchool.district_id,\n            needed_posts: this.props.requestedPosts,\n            male_number: this.props.maleOnPosition,\n            female_number: this.props.femaleOnPosition,\n            description: this.props.requestExplanation,\n            occupied_posts:\n              Number(this.props.maleOnPosition) +\n              Number(this.props.femaleOnPosition),\n            requested_by: this.props.auth.user.user_id,\n            requested_post_status: PostRequestStatusInterface.INITIATED,\n            post_request_session_id: this.props.sessionId,\n          }\n        );\n\n        if (res) {\n          console.log(\"====================================\");\n          console.log({ updateSchoolPost: res.data.data });\n          console.log(\"====================================\");\n          this.props.updateSchoolPost(\"SCHOOL\", res.data.data);\n          this.props.setPostId(\"\");\n          this.props.setPositionId(\"\");\n          this.props.setRequestedPosts(0);\n          this.props.setFemaleOnPosition(0);\n          this.props.setMaleOnPosition(0);\n          this.props.setRequestExplanation(\"\");\n          this.props.setFormSteps({ ONE: true, TWO: false });\n          this.props.setStepState({ ONE: false, TWO: false });\n          this.props.PushPopupAlert({\n            title: `Post(s) has been updated!`,\n            theme: PopupAlertTheme.info,\n          });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  setSchoolLevel = (value: string) => {\n    this.setState({ selectedLevel: value });\n  };\n\n  getPositionByLevelId = (\n    allPosition: PositionAPI[],\n    levelId: string\n  ): PositionAPI[] => {\n    if (isEmptyOrSpaces(levelId)) {\n      return allPosition;\n    }\n    return allPosition.filter(\n      (item) => item.school_level_id.school_level_id === levelId\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <StepsHeader\n          currentStep={this.props.formSteps.TWO ? 2 : 1}\n          stepState={this.props.stepState}\n          setFormSteps={this.props.setFormSteps}\n        />\n        <div className=\"px-4 mx-auto mb-4 mt-3\">\n          {this.props.formSteps.ONE && (\n            <section>\n              <div className=\"flex flex-col mb-4\">\n                <label>School level</label>\n                <select\n                  className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none focus:bg-gray-100\"\n                  value={this.state.selectedLevel}\n                  onChange={(e) => {\n                    this.setSchoolLevel(e.target.value);\n                  }}\n                >\n                  <option value=\"\">Choose level</option>\n                  {this.props.schoolLevels.school_levels &&\n                  this.props.schoolLevels.school_levels.length > 0 ? (\n                    this.props.schoolLevels.school_levels.map((item, index) => (\n                      <option key={index + 11} value={item.school_level_id}>\n                        {item.school_level_name}\n                      </option>\n                    ))\n                  ) : (\n                    <option>No school level found</option>\n                  )}\n                </select>\n              </div>\n\n              <div className=\"flex flex-col\">\n                <label>Select Position</label>\n                <select\n                  className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none focus:bg-gray-100\"\n                  value={this.props.positionId}\n                  onChange={(e) => {\n                    this.props.setPositionId(e.target.value);\n                  }}\n                >\n                  <option value=\"\">Choose Position</option>\n                  {this.props.systemPositions &&\n                  this.getPositionByLevelId(\n                    this.GetAllowedPositions(\n                      this.props.positionId.length > 0\n                        ? this.props.positionId\n                        : \"\"\n                    ),\n                    this.state.selectedLevel\n                  ).length > 0 ? (\n                    this.getPositionByLevelId(\n                      this.GetAllowedPositions(\n                        this.props.positionId.length > 0\n                          ? this.props.positionId\n                          : \"\"\n                      ),\n                      this.state.selectedLevel\n                    ).map((position, index) => (\n                      <option key={index + 11} value={position.position_id}>\n                        {position.position_title}\n                      </option>\n                    ))\n                  ) : (\n                    <option>No position found</option>\n                  )}\n                </select>\n              </div>\n              {this.props.positionId.length > 0 &&\n                this.props.systemPositions &&\n                getPositionById(\n                  this.props.systemPositions,\n                  this.props.positionId\n                ) && (\n                  <div className=\"my-2 rounded border\">\n                    <ViewPosition\n                      thisPosition={\n                        getPositionById(\n                          this.props.systemPositions,\n                          this.props.positionId\n                        )!\n                      }\n                      isGuest={true}\n                    />\n                  </div>\n                )}\n              <div className=\"bg-white w-full flex justify-end\">\n                {this.props.positionId.length > 0 && (\n                  <button\n                    className=\"btn btn-blue m-1 mr-2 mb-2 animate__animated animate__fadeIn focus:outline-none\"\n                    onClick={() => {\n                      this.props.setFormSteps({\n                        ONE: false,\n                        TWO: true,\n                      });\n                      this.props.setStepState({\n                        ONE: true,\n                        TWO: false,\n                      });\n                    }}\n                  >\n                    Continue\n                  </button>\n                )}\n              </div>\n            </section>\n          )}\n          <form onSubmit={this.submitRequest}>\n            <div className=\"bg-white\">\n              {this.props.formSteps.TWO && (\n                <div className=\"text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                  {this.state.error && (\n                    <div\n                      className=\"alert-warning animate__animated animate__fadeInRight animate__faster\"\n                      onClick={() => this.setState({ error: null })}\n                    >\n                      {this.state.error}\n                    </div>\n                  )}\n                  <div className=\"mb-4 md:flex md:justify-between\">\n                    <div className=\"mb-4 md:mr-2 md:mb-0 w-full\">\n                      <label\n                        className=\"block mb-2 text-sm font-bold text-gray-700\"\n                        htmlFor=\"female\"\n                      >\n                        Current number of Female on this position\n                      </label>\n                      <input\n                        className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                        id=\"female\"\n                        type=\"number\"\n                        min={0}\n                        value={this.props.femaleOnPosition}\n                        onChange={(e) =>\n                          this.props.setFemaleOnPosition(Number(e.target.value))\n                        }\n                        placeholder=\"Current number of Female on this position\"\n                      />\n                      {/* <p className=\"text-xs italic text-red-500\">\n                          Please choose a password.\n                        </p> */}\n                    </div>\n                    <div className=\"md:ml-2 w-full\">\n                      <label\n                        className=\"block mb-2 text-sm font-bold text-gray-700\"\n                        htmlFor=\"male\"\n                      >\n                        Current number of Male on this position\n                      </label>\n                      <input\n                        className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                        id=\"male\"\n                        type=\"number\"\n                        min={0}\n                        value={this.props.maleOnPosition}\n                        onChange={(e) =>\n                          this.props.setMaleOnPosition(Number(e.target.value))\n                        }\n                        placeholder=\"Current number of Male on this post\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Needed posts (number)</label>\n                    <input\n                      type=\"number\"\n                      className={`appearance-none rounded w-full py-1 px-4 border-2 bg-white focus:outline-none focus:bg-gray-100 ${\n                        this.props.formError &&\n                        this.props.formError.element === \"requested_posts\"\n                          ? \"border-red-700\"\n                          : \"border-gray-700\"\n                      }`}\n                      value={this.props.requestedPosts}\n                      onChange={(e) => {\n                        this.props.setRequestedPosts(Number(e.target.value));\n                        this.props.formError &&\n                          this.props.formError.element === \"requested_posts\" &&\n                          this.props.setFormError(null);\n                      }}\n                      placeholder=\"1\"\n                    />\n                    {this.props.formError &&\n                      this.props.formError.element === \"requested_posts\" && (\n                        <span className=\"text-xs italic text-red-700 mt-1\">\n                          {this.props.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Explanation</label>\n                    <textarea\n                      name=\"description\"\n                      className={`appearance-none rounded w-full py-1 px-4 border-2 bg-white focus:outline-none focus:bg-gray-100 ${\n                        this.props.formError &&\n                        this.props.formError.element === \"comment\"\n                          ? \"border-red-700\"\n                          : \"border-gray-700\"\n                      }`}\n                      id=\"description\"\n                      placeholder=\"Explanation\"\n                      value={this.props.requestExplanation}\n                      onChange={(e) => {\n                        this.props.setRequestExplanation(e.target.value);\n                        this.props.formError &&\n                          this.props.formError.element === \"comment\" &&\n                          this.props.setFormError(null);\n                      }}\n                      rows={2}\n                    ></textarea>\n                    {this.props.formError &&\n                      this.props.formError.element === \"comment\" && (\n                        <span className=\"text-xs italic text-red-700 mt-1\">\n                          {this.props.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                </div>\n              )}\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  className=\"btn bg-gray-400 text-white hover:bg-gray-600\"\n                  onClick={() => {\n                    this.props.setPositionId(\"\");\n                    this.props.setRequestedPosts(0);\n                    this.props.setFemaleOnPosition(0);\n                    this.props.setMaleOnPosition(0);\n                    this.props.setRequestExplanation(\"\");\n                    this.props.setModalState(null);\n                    this.props.setFormError(null);\n                    this.props.setFormSteps({ ONE: true, TWO: false });\n                    this.props.setStepState({ ONE: false, TWO: false });\n                  }}\n                  disabled={this.props.loadingRequest}\n                >\n                  Exit\n                </button>\n                {this.props.formSteps.TWO && (\n                  <button\n                    className=\"btn bg-primary text-white hover:bg-blue-600\"\n                    disabled={this.props.loadingRequest}\n                  >\n                    {this.props.loadingRequest\n                      ? \"Loading...\"\n                      : this.props.modalState === \"UPDATE\"\n                      ? \"Update\"\n                      : \"Request\"}\n                  </button>\n                )}\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  system_settings,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  mySchool: MySchoolInterface | null;\n  schoolPosts: PostSchoolInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    mySchool: schools.mySchool,\n    schoolPosts: schools.schoolPosts,\n    schoolLevels,\n    systemPositions: system_settings.systemPositions,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createSchoolPost,\n  updateSchoolPost,\n  PushPopupAlert,\n})(RequestPostForm);\n","import React, { Component } from \"react\";\nimport { GiTeacher } from \"react-icons/gi\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Auth,\n  loadSchoolLevels,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../actions\";\nimport {\n  getSchoolById,\n  fetchSchoolPosts,\n  createSchoolPost,\n  updateSchoolPost,\n  getSchoolPlacement,\n} from \"../../actions/schools\";\nimport { getActiveAcademicSession } from \"../../actions/session\";\nimport { getPositions } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { AcademicSessionInterface, PositionAPI } from \"../../interfaces\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  PostSchoolInterface,\n  MySchoolInterface,\n} from \"../../shared/interfaces\";\nimport ReceivePost from \"./ReceivePost\";\nimport RequestList from \"./RequestList\";\nimport RequestPostForm from \"./RequestPostForm\";\n\nexport const getPlacementByRequest = (\n  placements: placedCandidateInterface[],\n  request: string,\n  status: PlacedCandidateStatus | \"all\" = PlacedCandidateStatus.PENDING\n): placedCandidateInterface[] => {\n  console.log(\"====================================\");\n  console.log({ placements, request });\n  console.log(\"====================================\");\n  if (status !== \"all\") {\n    // position id must be replaced with request id\n    return placements.filter(\n      (item) => item.request_id === request && item.status === status\n    );\n  }\n  return placements.filter((item) => item.request_id === request);\n};\n\ninterface RequestTeacherProps {\n  auth: Auth;\n  mySchool: MySchoolInterface | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n  schoolPosts: PostSchoolInterface[];\n  schoolPlacements: placedCandidateInterface[] | null;\n  activeAcademicSession: AcademicSessionInterface | \"none\" | null;\n  getActiveAcademicSession: Function;\n  getPositions: Function;\n  fetchSchoolPosts: Function;\n  getSchoolPlacement: Function;\n  createSchoolPost: Function;\n  updateSchoolPost: Function;\n  getSchoolById: Function;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface RequestTeacherState {\n  loading: boolean;\n  loadingPost: boolean;\n  loadingRequest: boolean;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n  filterByPosition: string;\n  positionId: string;\n  requestedPosts: number;\n  femaleOnPosition: number;\n  maleOnPosition: number;\n  requestExplanation: string;\n  formSteps: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  thisPost: PostSchoolInterface | null;\n  viewPost: boolean;\n  postId: string;\n  receivedPosts: number;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n}\nclass RequestTeacher extends Component<\n  RequestTeacherProps,\n  RequestTeacherState\n> {\n  constructor(props: RequestTeacherProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingPost: true,\n      loadingRequest: false,\n      modalState: null,\n      filterByPosition: \"\",\n      positionId: \"\",\n      requestedPosts: 0,\n      femaleOnPosition: 0,\n      maleOnPosition: 0,\n      requestExplanation: \"\",\n      formSteps: { ONE: true, TWO: false },\n      stepState: { ONE: false, TWO: false },\n      thisPost: null,\n      viewPost: false,\n      postId: \"\",\n      receivedPosts: 0,\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoadingPost = (value: boolean) => {\n    this.setState({ loadingPost: value });\n  };\n\n  setViewPost = (value: boolean) => {\n    this.setState({ viewPost: value });\n  };\n\n  setPostId = (value: string) => {\n    this.setState({ postId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setPositionId = (value: string) => {\n    this.setState({ positionId: value });\n  };\n  setRequestedPosts = (value: number) => {\n    this.setState({ requestedPosts: value });\n  };\n  setFemaleOnPosition = (value: number) => {\n    this.setState({ femaleOnPosition: value });\n  };\n  setMaleOnPosition = (value: number) => {\n    this.setState({ maleOnPosition: value });\n  };\n  setRequestExplanation = (value: string) => {\n    this.setState({ requestExplanation: value });\n  };\n  setFormSteps = (value: { ONE: boolean; TWO: boolean }) => {\n    this.setState({ formSteps: value });\n  };\n  setStepState = (value: { ONE: boolean; TWO: boolean }) => {\n    this.setState({ stepState: value });\n  };\n  setFilterByPosition = (value: string) => {\n    this.setState({ filterByPosition: value });\n  };\n\n  setThisPost = (value: PostSchoolInterface | null) => {\n    this.setState({ thisPost: value });\n  };\n\n  setModalState = (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => {\n    this.setState({ modalState: value });\n  };\n\n  setReceivedPosts = (value: number) => {\n    this.setState({ receivedPosts: value });\n  };\n\n  loadData = () => {\n    if (!this.props.mySchool) {\n      this.props.getSchoolById(\n        this.props.auth.user_access.school_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (msg.length > 0) {\n            console.error({ loadingCandidatesError: msg });\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n            this.setLoading(false);\n          }\n        }\n      );\n    } else {\n      this.setLoading(false);\n    }\n\n    if (!this.props.schoolPlacements) {\n      this.props.getSchoolPlacement(\n        this.props.auth.user_access.school_id,\n        (status: boolean, msg: string, data?: placedCandidateInterface[]) => {\n          this.setLoading(status);\n          if (!status && msg.length > 0) {\n            console.error({ getSchoolPlacementError: msg });\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else {\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.systemPositions === null ||\n      (this.props.systemPositions.length === 0 && this.state.loading)\n    ) {\n      this.setLoading(true);\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else {\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      (this.props.schoolLevels.school_levels.length === 0 && this.state.loading)\n    ) {\n      this.props.loadSchoolLevels(this.setLoading);\n    }\n\n    if (!this.props.schoolPosts.length && this.state.loadingPost) {\n      this.props.fetchSchoolPosts(\n        this.props.auth.user_access.school_id,\n        (status: boolean, message: string) => {\n          if (!status) {\n            if (message.length > 0 && this.state.loadingPost) {\n              console.error(\"error loading school post: \", message);\n              this.props.PushPopupAlert({\n                title: message,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setState({ loadingPost: false });\n          }\n        }\n      );\n    } else {\n      this.setState({ loadingPost: false });\n    }\n  };\n\n  componentDidMount = () => {\n    if (isEmptyOrSpaces(this.props.auth.user_access.school_id)) {\n      return <Redirect to=\"/apps-page\" />;\n    }\n    if (\n      this.props.activeAcademicSession === null ||\n      this.props.activeAcademicSession === \"none\"\n    ) {\n      this.props.getActiveAcademicSession(\n        (\n          status: boolean,\n          msg: string,\n          data?: AcademicSessionInterface | \"none\"\n        ) => {\n          this.setLoading(status);\n          if (msg.length > 0) {\n            console.error({ loadingCandidatesError: msg });\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data !== \"none\") this.loadData();\n        }\n      );\n    } else this.loadData();\n  };\n\n  getPositionById = (\n    systemPositions: PositionAPI[],\n    positionId: string\n  ): PositionAPI | undefined => {\n    return systemPositions.find((item) => item.position_id === positionId);\n  };\n\n  render() {\n    if (\n      this.props.activeAcademicSession !== null &&\n      this.props.activeAcademicSession === \"none\"\n    ) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No academic active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n    if (this.state.loading) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* header title */}\n        <div className=\"flex flex-row items-start gap-3 my-2\">\n          <GiTeacher className=\"text-blue-700 w-10 h-10 md:block hidden\" />\n          <div className=\"w-full\">\n            <div className=\"flex justify-between w-full\">\n              <div className=\"flex flex-col gap-1 justify-between\">\n                <h1 className=\"md:text-4xl text-3xl font-semibold\">\n                  Teacher Request\n                </h1>\n\n                <div className=\"flex-row items-center md:gap-3 gap-2\">\n                  <div className=\"flex flex-row items-center gap-1\">\n                    <span className=\"text-gray-600 text-lg\">\n                      Academic session:\n                    </span>\n                    <span className=\"text-gray-600 font-semibold text-xl\">\n                      {this.props.activeAcademicSession?.title}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        <div className=\"bg-white shadow p-2 rounded\">\n          {!this.state.modalState && this.props.schoolPlacements && (\n            <RequestList\n              systemPositions={this.props.systemPositions}\n              setModalState={this.setModalState}\n              loadingRequest={this.state.loadingRequest}\n              setFilterByPosition={this.setFilterByPosition}\n              schoolPosts={this.props.schoolPosts}\n              setThisPost={this.setThisPost}\n              setViewPost={this.setViewPost}\n              setPostId={this.setPostId}\n              setPositionId={this.setPositionId}\n              setRequestedPosts={this.setRequestedPosts}\n              setRequestExplanation={this.setRequestExplanation}\n              setFemaleOnPosition={this.setFemaleOnPosition}\n              setMaleOnPosition={this.setMaleOnPosition}\n              setFormSteps={this.setFormSteps}\n              setStepState={this.setStepState}\n              thisPost={this.state.thisPost}\n              viewPost={this.state.viewPost}\n              modalState={this.state.modalState}\n              schoolPlacements={this.props.schoolPlacements}\n              filterByPosition={this.state.filterByPosition}\n            />\n          )}\n\n          {this.props.activeAcademicSession &&\n            (this.state.modalState === \"CREATE\" ||\n              this.state.modalState === \"UPDATE\") && (\n              <RequestPostForm\n                loadingRequest={this.state.loadingRequest}\n                setLoadingRequest={this.setLoadingRequest}\n                formSteps={this.state.formSteps}\n                setFormSteps={this.setFormSteps}\n                stepState={this.state.stepState}\n                setStepState={this.setStepState}\n                sessionId={this.props.activeAcademicSession?._id}\n                postId={this.state.postId}\n                setPostId={this.setPostId}\n                positionId={this.state.positionId}\n                setPositionId={this.setPositionId}\n                setRequestedPosts={this.setRequestedPosts}\n                requestedPosts={this.state.requestedPosts}\n                maleOnPosition={this.state.maleOnPosition}\n                femaleOnPosition={this.state.femaleOnPosition}\n                setFemaleOnPosition={this.setFemaleOnPosition}\n                setMaleOnPosition={this.setMaleOnPosition}\n                requestExplanation={this.state.requestExplanation}\n                setRequestExplanation={this.setRequestExplanation}\n                modalState={this.state.modalState}\n                setModalState={this.setModalState}\n                formError={this.state.formError}\n                setFormError={this.setFormError}\n              />\n            )}\n\n          {this.state.modalState === \"RECEIVE\" &&\n            this.state.thisPost &&\n            this.props.systemPositions &&\n            this.props.schoolPlacements && (\n              <ReceivePost\n                loadingPost={this.state.loadingPost}\n                loadingRequest={this.state.loadingRequest}\n                positionId={this.state.positionId}\n                thisPost={this.state.thisPost}\n                viewPost={this.state.viewPost}\n                receivedPosts={this.state.receivedPosts}\n                formError={this.state.formError}\n                systemPositions={this.props.systemPositions}\n                setThisPost={this.setThisPost}\n                setModalState={this.setModalState}\n                setFormError={this.setFormError}\n                setReceivedPosts={this.setReceivedPosts}\n                setLoadingRequest={this.setLoadingRequest}\n                setLoadingPost={this.setLoadingPost}\n                placementList={this.props.schoolPlacements}\n              />\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  system_settings,\n  schoolLevels,\n  sessionPlan,\n}: StoreState): {\n  auth: Auth;\n  mySchool: MySchoolInterface | null;\n  schoolPosts: PostSchoolInterface[];\n  schoolPlacements: placedCandidateInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n  activeAcademicSession: AcademicSessionInterface | \"none\" | null;\n} => {\n  return {\n    auth: auth,\n    mySchool: schools.mySchool,\n    schoolPosts: schools.schoolPosts,\n    schoolPlacements: schools.schoolPlacements,\n    schoolLevels,\n    systemPositions: system_settings.systemPositions,\n    activeAcademicSession: sessionPlan.activeAcademicSession,\n  };\n};\n\nexport const PostRequest = connect(mapStateToProps, {\n  loadSchoolLevels,\n  getPositions,\n  getSchoolById,\n  fetchSchoolPosts,\n  getSchoolPlacement,\n  createSchoolPost,\n  updateSchoolPost,\n  getActiveAcademicSession,\n  PushPopupAlert,\n})(RequestTeacher);\n"],"sourceRoot":""}
{"version":3,"sources":["components/Table/Table.tsx","actions/settings.ts","shared/interfaces.tsx","actions/location.ts","containers/Positions/ViewRequirements.tsx","actions/schools.ts","interfaces/marks_publication.ts","containers/Positions/ViewPosition.tsx","containers/district/Schools/index.tsx","containers/HeadTeacher/ReceivePost.tsx","containers/HeadTeacher/ViewRequest.tsx","containers/HeadTeacher/RequestList.tsx","containers/HeadTeacher/StepsHeader.tsx","containers/HeadTeacher/RequestPostForm.tsx","containers/HeadTeacher/RequestTeacher.tsx","containers/district/index.tsx"],"names":["Table","table","tr","rows","columns","hideColumns","pagination","search","tableSize","tableClass","tableId","rounded","searchBG","thColor","loading","length","result","characters","charactersLength","i","charAt","Math","floor","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","map","style","display","className","type","placeholder","onChange","e","data","filterType","filter","td","cols","toLowerCase","textContent","innerText","indexOf","filterTable","target","value","disabled","Number","id","column","index","padding","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","getSystemSettings","callback","dispatch","a","setAxiosToken","axios","get","API","AUTH","res","ActionTypes","GET_SYSTEM_SETTINGS","payload","console","log","code_error","errorToText","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","getApplicationSessions","APPLICATION","GET_APPLICATION_SESSIONS","getPositions","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","PostRequestStatusInterface","DocumentAttributesInterface","DocValidationStatusInterface","SESSION_PLAN_KEYS","DOCUMENT_VALIDATION","EXAMINATION","MARKS_PUBLICATION","PLACEMENT_TRANSFER","getAllRoom","GET_ALL_ROOM","error","FC_CreateProvince","CREATE_PROVINCE","FC_UpdateProvince","UPDATE_PROVINCE","FC_DeleteProvince","DELETE_PROVINCE","FC_CreateDistrict","CREATE_DISTRICT","FC_UpdateDistrict","UPDATE_DISTRICT","FC_DeleteDistrict","DELETE_DISTRICT","FC_CreateSector","CREATE_SECTOR","FC_UpdateSector","UPDATE_SECTOR","FC_DeleteSector","DELETE_SECTOR","FC_CreateCenter","CREATE_CENTER","FC_UpdateCenter","UPDATE_CENTER","FC_DeleteCenter","DELETE_CENTER","FC_CreateRoom","CREATE_ROOM","FC_UpdateRoom","UPDATE_ROOM","FC_DeleteRoom","delete_room","DELETE_ROOM","ViewRequirements","props","requirements","colSpan","item","subcategory_title","field_title","required","field_id","getSchools","GET_SCHOOLS","createSchool","schools","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","school_id","PLACEMENT","schoolPosts","FETCH_SCHOOL_POSTS","getSchoolPlacement","GET_SCHOOL_PLACEMENT","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","TYPE","UPDATE_SCHOOL_POST","fetchDistrictPosts","district_id","districtPosts","FETCH_DISTRICT_POSTS","getDistrictPlacement","GET_DISTRICT_PLACEMENT","MarksPublicationCandidateStatus","marksPublicationCandidateReportContentKeyInterface","PlacedCandidateStatus","WaitingListStatus","placementReportContentKeyInterface","FC_PositionDistinctCategory","PositionData","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","pos","req","thisRequirements","thisCategory","category","thisSubCategory","subcategory","field","position_requirement","thisField","push","category_id","user_detail_category_id","category_title","title","subcategory_id","user_detail_subcategory_id","_id","includes","connect","PushPopupAlert","loadingRequest","setLoadingRequest","position_id","status","name","window","confirm","patch","isPublished","theme","PopupAlertTheme","info","thisPositionCopy","thisPosition","setThisPosition","danger","position_title","description","school_level_id","school_level_name","education_institute_id","education_category_title","courses","course_name","course_code","course_id","isGuest","NoResultThemes","Dark","LocationsSectorInArray","LocationData","locationTemp","p","districts","d","sectors","s","province_id","province_name","province_code","district_name","district_code","sector_id","sector_name","sector_code","getSchoolById","find","school","setLoading","state","setState","setLoadingSchool","loadingSchool","setError","componentDidMount","allRoom","msg","education_categories","loadEducationCategories","loadingCandidatesError","schoolList","handleSubmit","preventDefault","isEmptyOrSpaces","schoolName","element","schoolCode","instituteId","districtId","sectorId","thisSector","getSectors","modalState","post","school_name","school_code","education_category_id","shool_id","success","provinceId","thisSchool","doc_category_error","handleDelete","schoolId","delete","province_error","countSchool","FILTER_TYPE","FILTER_VALUE","counts","toTwoDigit","getProvinceByCode","getDistrictByCode","province","undefined","getSectorByCode","district","getDistrictData","toString","forEach","key","Object","prototype","hasOwnProperty","call","filterSchools","institute","searchInput","districtFilterStatus","edicationCategoryFilterStatus","provinceFilterStatus","thisEdication","thisProvince","thisDistrict","this","Fragment","education","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","medium","body","footer","onSubmit","sector","Component","Schools","auth","schoolLevels","locations","roomLocation","ReceivePost","submitRequest","thisPlacement","action","comment","setFormError","received","thisPost","received_posts","requested_post_id","confirmed_posts","confirmed_by","user","user_id","approval_date","needed_posts","male_number","female_number","occupied_posts","requested_by","requested_post_status","RECEIVED","confirmPlacement","role_error","placedStatus","waiting_list_id","placed_candidate_id","REJECTED","PLACED","user_access","message","loadingPost","setLoadingPost","getSchoolPlacementError","placement_id","viewPost","setThisPost","setReceivedPosts","setModalState","getPositionById","systemPositions","CONFIRMED","getPlacementByRequest","placementList","INITIATED","capitalizeFirstLetter","src","AUTH_FILES","user_info","photo","alt","fname","lname","phone_number","email","formError","resize","ViewRequest","Modal","setViewPost","large","schoolPlacements","setPostId","setPositionId","setRequestedPosts","setRequestExplanation","setFemaleOnPosition","setMaleOnPosition","setFormSteps","ONE","TWO","setStepState","RequestList","setSearchInput","setFilterByPosition","filterByPosition","position","schoolPost","NoResult","StepsHeader","currentStep","stepState","RequestPostForm","GetAllowedPositions","postPositionIds","requestedPosts","requestExplanation","positionId","maleOnPosition","femaleOnPosition","setSchoolLevel","selectedLevel","getPositionByLevelId","allPosition","levelId","formSteps","school_levels","ViewPosition","htmlFor","system_settings","placements","request","PENDING","request_id","RequestTeacher","postId","receivedPosts","to","loadSchoolLevels","PostRequest","District","districtPlacements","loadingPosition","setLoadingPosition","loadingPlacement","setLoadingPlacement","approvedPosts","setApprovedPosts","doPlacement","msgAlert","doPlacement_reply","reDoPlacement","addSchoolRequest","dataForm","gender","available_places","requested_teacher","requested_teachers","addSchoolRequest_reply","Date","post_relpy","DATE","request_date","max"],"mappings":"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","file":"static/js/33.7dd2533e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = ({\n  rows,\n  columns,\n  hideColumns = false,\n  pagination = false,\n  search = false,\n  tableSize = \"w-full\",\n  tableClass,\n  tableId = \"myTable\",\n  rounded = false,\n  searchBG = \"bg-gray-200\",\n  thColor = \"blue\",\n  loading = false,\n}) => {\n  const startPage = 1;\n  tableId = tableId === \"myTable\" ? FC_makeID() : tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${tableSize}`}>\n      {/* search box  */}\n      {search && (\n        <div className={`${searchBG} w-full mb-2`}>\n          {search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={loading}\n              />\n\n              {pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <table\n        className={\n          tableClass\n            ? tableClass\n            : `w-full shadow ${\n                rounded && \"sm:rounded-lg\"\n              } table-auto order-table`\n        }\n        id={tableId}\n      >\n        {!hideColumns && (\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n            <tr\n              className={`text-left tracking-wide bg-${thColor}-100 border-b-2 border-${thColor}-500 text-${thColor}-600`}\n            >\n              {columns.map((column, index) => (\n                <th\n                  key={index}\n                  className={`${column.padding} text-${\n                    column.alignText\n                  } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                  onClick={() =>\n                    column.isSortAllowed && sortThisColumn(tableId, index)\n                  }\n                >\n                  <div className=\"flex items-center gap-1\">\n                    {column.columnTitle}\n                    {column.isSortAllowed && <BiSort />}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n        )}\n        <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n          {rows()}\n        </tbody>\n      </table>\n      {pagination && (\n        <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n          <div>\n            <span className=\"text-xs xs:text-sm text-gray-900\">\n              Showing 1 to {pageSize} of {totalItems - 1} Entries\n            </span>\n          </div>\n          <div>\n            <nav className=\"inline-flex shadow-sm\">\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                    currentPage !== 1 && \"bg-white\"\n                  }`}\n                  aria-label=\"Previous\"\n                  disabled={currentPage === 1 || loading}\n                  onClick={() => setCurrentPage(currentPage - 1)}\n                >\n                  <MdNavigateBefore className=\"h-5 w-5\" />\n                </button>\n              </div>\n              <div>\n                {pages &&\n                  pages.map((page, pageIndex) => (\n                    <button\n                      key={pageIndex}\n                      className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                        page !== currentPage\n                          ? \"bg-white\"\n                          : \"bg-gray-100 cursor-default\"\n                      }`}\n                      disabled={page === currentPage || loading}\n                      onClick={() => setCurrentPage(page)}\n                    >\n                      {page}\n                    </button>\n                  ))}\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                    currentPage !== totalPages && \"bg-white\"\n                  }`}\n                  aria-label=\"Next\"\n                  disabled={currentPage === totalPages || loading}\n                  onClick={() => setCurrentPage(currentPage + 1)}\n                >\n                  <MdNavigateNext className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </nav>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  ApplicationSessionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// APPLICATION SETTINGS ===================================\nexport interface GetApplicationSessionAction {\n  type: ActionTypes.GET_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface[];\n}\n\nexport interface CreateApplicationSessionAction {\n  type: ActionTypes.CREATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface UpdateApplicationSessionAction {\n  type: ActionTypes.UPDATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface DisableApplicationSessionAction {\n  type: ActionTypes.DISABLE_APPLICATION_SESSION;\n  payload: {\n    application_session_id: string;\n    status: boolean;\n  };\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetApplicationSessionAction\n  | CreateApplicationSessionAction\n  | UpdateApplicationSessionAction\n  | DisableApplicationSessionAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ PERIODS =======================\n\nexport const getApplicationSessions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<ApplicationSessionInterface[]>(\n        `${API.APPLICATION}/applicationsesion`\n      );\n      dispatch<GetApplicationSessionAction>({\n        type: ActionTypes.GET_APPLICATION_SESSIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createAplicationSession = (data: ApplicationSessionInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateApplicationSessionAction>({\n      type: ActionTypes.CREATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateAplicationSession = (data: ApplicationSessionInterface) => {\n  console.log({ check: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateApplicationSessionAction>({\n      type: ActionTypes.UPDATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const disableApplicationSession = (data: {\n  application_session_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableApplicationSessionAction>({\n      type: ActionTypes.DISABLE_APPLICATION_SESSION,\n      payload: data,\n    });\n  };\n};\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active?: boolean;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  in_education?: boolean;\n  disability?: boolean;\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: string;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  _id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  _id: string;\n  center_name: string;\n  center_code: number;\n  district_id: string;\n}\n\nexport interface SectorInterface {\n  district_code: number;\n  district_id: string;\n  sector_name: string;\n  sector_code: number;\n  sector_id: string;\n}\n\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  sectors: SectorInterface[];\n  province_code: number;\n  province_id: string;\n  district_name: string;\n  district_code: number;\n  _id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_code: number;\n  _id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  requested_post_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  school_code: number;\n  province_id: string;\n  province_code: number;\n  district_id: string;\n  district_code: number;\n  sector_id: string;\n  sector_code: number;\n  education_category_id: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: string;\n  application_status: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  district: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface LocationSectorTableInterface {\n  province_id: string;\n  province_name: string;\n  province_code: number;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n  SectorInterface,\n} from \"../shared/interfaces\";\nimport { errorToText } from \"../utils/errors\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface getAllRoomActions {\n  type: ActionTypes.GET_ALL_ROOM;\n  payload: RoomLocationInterface[];\n}\n\nexport interface createProvinceActions {\n  type: ActionTypes.CREATE_PROVINCE;\n  payload: RoomLocationInterface;\n}\n\nexport interface updateProvinceActions {\n  type: ActionTypes.UPDATE_PROVINCE;\n  payload: {\n    province_id: string;\n    province_name: string;\n    provice_code: number;\n  };\n}\n\nexport interface deleteProvinceActions {\n  type: ActionTypes.DELETE_PROVINCE;\n  payload: string;\n}\n\n// ============ DISTRICT =================\nexport interface createDistrictActions {\n  type: ActionTypes.CREATE_DISTRICT;\n  payload: { province_id: string; data: DistrictInterface };\n}\n\nexport interface updateDistrictActions {\n  type: ActionTypes.UPDATE_DISTRICT;\n  payload: {\n    province_id: string;\n    district_id: string;\n    district_name: string;\n    district_code: number;\n  };\n}\n\nexport interface deleteDistrictActions {\n  type: ActionTypes.DELETE_DISTRICT;\n  payload: { province_id: string; district_id: string };\n}\n\n// ============ SECTOR =================\nexport interface createSectorActions {\n  type: ActionTypes.CREATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: SectorInterface;\n  };\n}\n\nexport interface updateSectorActions {\n  type: ActionTypes.UPDATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    sector_id: string;\n    sector_name: string;\n    sector_code: number;\n  };\n}\n\nexport interface deleteSectorActions {\n  type: ActionTypes.DELETE_SECTOR;\n  payload: { province_id: string; district_id: string; sector_id: string };\n}\n\n// ============ CENTERS =================\nexport interface createCenterActions {\n  type: ActionTypes.CREATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: CentersInterface;\n  };\n}\n\nexport interface updateCenterActions {\n  type: ActionTypes.UPDATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    examination_center_id: string;\n    center_name: string;\n  };\n}\n\nexport interface deleteCenterActions {\n  type: ActionTypes.DELETE_CENTER;\n  payload: { province_id: string; district_id: string; center_id: string };\n}\n\n// ============ ROOMS =================\nexport interface createRoomActions {\n  type: ActionTypes.CREATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    data: RoomsInterface;\n  };\n}\n\nexport interface updateRoomActions {\n  type: ActionTypes.UPDATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n    room_number: number;\n    capacity: number;\n  };\n}\n\nexport interface deleteRoomActions {\n  type: ActionTypes.DELETE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n  };\n}\n\nexport type RoomActionType =\n  | getAllRoomActions\n  | createProvinceActions\n  | updateProvinceActions\n  | deleteProvinceActions\n  | createDistrictActions\n  | updateDistrictActions\n  | deleteDistrictActions\n  | createSectorActions\n  | updateSectorActions\n  | deleteSectorActions\n  | createCenterActions\n  | updateCenterActions\n  | deleteCenterActions\n  | createRoomActions\n  | updateRoomActions\n  | deleteRoomActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getAllRoom = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<RoomLocationInterface[]>(\n        `${API.APPLICATION}/roomlocation`\n      );\n      dispatch<getAllRoomActions>({\n        type: ActionTypes.GET_ALL_ROOM,\n        payload: res.data,\n      });\n      console.log(\"====================================\");\n      console.log({ res: res.data });\n      console.log(\"====================================\");\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.error(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const FC_CreateProvince = (data: RoomLocationInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createProvinceActions>({\n      type: ActionTypes.CREATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateProvince = (data: {\n  province_id: string;\n  province_name: string;\n  provice_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateProvinceActions>({\n      type: ActionTypes.UPDATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteProvince = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteProvinceActions>({\n      type: ActionTypes.DELETE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\n// DISTRICT =================\nexport const FC_CreateDistrict = (data: {\n  province_id: string;\n  data: DistrictInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createDistrictActions>({\n      type: ActionTypes.CREATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateDistrict = (data: {\n  province_id: string;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateDistrictActions>({\n      type: ActionTypes.UPDATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteDistrict = (data: {\n  province_id: string;\n  district_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteDistrictActions>({\n      type: ActionTypes.DELETE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\n// SECTOR =================\nexport const FC_CreateSector = (data: {\n  province_id: string;\n  district_id: string;\n  data: SectorInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createSectorActions>({\n      type: ActionTypes.CREATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateSectorActions>({\n      type: ActionTypes.UPDATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteSectorActions>({\n      type: ActionTypes.DELETE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\n// CENTERS =================\nexport const FC_CreateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  data: CentersInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createCenterActions>({\n      type: ActionTypes.CREATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  examination_center_id: string;\n  center_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateCenterActions>({\n      type: ActionTypes.UPDATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteCenter = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteCenterActions>({\n      type: ActionTypes.DELETE_CENTER,\n      payload: data,\n    });\n  };\n};\n\n// ROOM =================\nexport const FC_CreateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  data: RoomsInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createRoomActions>({\n      type: ActionTypes.CREATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n  room_number: number;\n  capacity: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateRoomActions>({\n      type: ActionTypes.UPDATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n}) => {\n  console.log({ delete_room: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteRoomActions>({\n      type: ActionTypes.DELETE_ROOM,\n      payload: data,\n    });\n  };\n};\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title + \" in \" + item.field_title}</span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default ViewRequirements;\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { data_school } from \"../shared/dataTest\";\nimport {\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\nimport { placedCandidateInterface } from \"../interfaces/marks_publication\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\n// School Placements interfaces\nexport interface GetSchoolPlacementAction {\n  type: ActionTypes.GET_SCHOOL_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetDistrictPlacementAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetSessionPlacementAction {\n  type: ActionTypes.GET_SESSION_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | GetSchoolPlacementAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction\n  | GetDistrictPlacementAction\n  | GetSessionPlacementAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolsInfo = () => {\n  return async (dispatch: Dispatch) => {\n    setAxiosToken();\n    // const response = await axios.get<AccessRoleType[]>(url);\n\n    dispatch<GetSchoolsInfoAction>({\n      type: ActionTypes.GET_SCHOOLS_INFO,\n      payload: data_school,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log({ schoolPosts: res.data });\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolPlacement = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/school/${school_id}`\n      );\n\n      console.log({ getSchoolPlacement: res.data });\n\n      dispatch<GetSchoolPlacementAction>({\n        type: ActionTypes.GET_SCHOOL_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log({ districtPosts: res });\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacement = (\n  district_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\nexport const getSessionPlacement = (session_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/session/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getSessionPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetSessionPlacementAction>({\n        type: ActionTypes.GET_SESSION_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n","export interface marksPublicationInterface {\n  publication_id: string;\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_status: \"PENDING\" | \"PUBLISHED\";\n  status: number;\n  publication_position_marks: publicationInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface publicationInterface {\n  _id: string;\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport interface marksPublicationFormInterface {\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_position_marks: publicationFormInterface[];\n}\n\nexport interface publicationFormInterface {\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport enum MarksPublicationCandidateStatus {\n  Failed = \"Failed\",\n  Passed = \"Passed\",\n}\n\nexport interface MarksPublicationCandidate {\n  user: {\n    in_eduction: boolean;\n    disability: boolean;\n    is_active: boolean;\n    n_id: string;\n    phone_number: string;\n    email: string;\n    createdAt: string;\n    updatedAt: string;\n    user_id: string;\n    user_info: placedCandidateUserInfo;\n  };\n  period: string;\n  position: string;\n  courses: {\n    id: string;\n    marks: number;\n    _id: string;\n  }[];\n  waiting_status: MarksPublicationCandidateStatus;\n  status: number;\n  user_position_marks: number;\n  createdAt: string;\n  updatedAt: string;\n  disability: boolean;\n  gender: string;\n  in_education: boolean;\n  id: string;\n}\n\nexport interface MarksPublicationCandidateToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  gender: string;\n  position_name: string;\n  marks: number;\n  status: MarksPublicationCandidateStatus;\n}\n\nexport enum marksPublicationCandidateReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  gender = \"gender\",\n  position_name = \"position_name\",\n  marks = \"marks\",\n  status = \"status\",\n}\n\nexport interface marksPublicationReportContentInterface {\n  key: marksPublicationCandidateReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n// ---------------------------------------------------------------------------------------------\n\nexport interface placedCandidateInterface {\n  _id: string;\n  status: PlacedCandidateStatus;\n  user_id: string;\n  school_id: string;\n  position_id: string;\n  waiting_list_id: string;\n  request_id: string;\n  createdAt: string;\n  comment: string;\n  updatedAt: string;\n  __v: number;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  user_info: placedCandidateUserInfo;\n}\n\nexport interface placedCandidateUserInfo {\n  document_type: string;\n  issue_number: string;\n  date_of_issue: string;\n  date_of_expiry: string;\n  place_of_issue: string;\n  application_number: string;\n  fname: string;\n  lname: string;\n  father_names: string;\n  mother_names: string;\n  sex: string;\n  date_of_birth: string;\n  place_of_birth: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  civil_status: string;\n  spouse: null;\n  status: string;\n  photo: string;\n}\n\nexport enum PlacedCandidateStatus {\n  PENDING = \"pending\",\n  PLACED = \"placed\",\n  REJECTED = \"rejected\",\n}\n\nexport enum WaitingListStatus {\n  WAITING = \"waiting\",\n  PENDING = \"pending\",\n  PLACED = \"placed\",\n}\n\nexport interface PlacementToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  school_name: string;\n  position_name: string;\n  status: PlacedCandidateStatus;\n}\n\nexport enum placementReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  school_name = \"school_name\",\n  position_name = \"position_name\",\n  status = \"status\",\n}\n\nexport interface placementReportContentInterface {\n  key: placementReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { publishPosition } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { PositionAPI } from \"../../interfaces/position\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/functions\";\nimport ViewRequirements from \"./ViewRequirements\";\n\nexport interface PositionRequirementTableInterface {\n  category_id: string;\n  category_title: string;\n  subcategory_id: string;\n  subcategory_title: string;\n  field_title: string;\n  field_id: string;\n  // _id: string;\n  required: boolean;\n}\n\nexport const FC_PositionDistinctCategory = (\n  PositionData: PositionAPI[]\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // LOOP IN ALL POSITIONS ==========================\n  for (let pos in PositionData) {\n    // GET CURRENT POSITION ====================\n    let thisPosition = PositionData[pos];\n    // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n    let requirements = thisPosition.requirements;\n    // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n    for (let req in requirements) {\n      let thisRequirements = requirements[req];\n      // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n      let thisCategory = thisRequirements.category;\n      // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n      let thisSubCategory = thisRequirements.subcategory;\n      // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n      if (thisCategory) {\n        for (let field in thisRequirements.position_requirement) {\n          // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n          let thisField = thisRequirements.position_requirement[field];\n          // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n          PositionsTemp.push({\n            category_id: thisCategory.user_detail_category_id,\n            category_title: thisCategory.title,\n            subcategory_id: thisSubCategory.user_detail_subcategory_id,\n            subcategory_title: thisSubCategory.title,\n            field_title: thisField.title,\n            field_id: thisField._id,\n            required: thisField.required,\n          });\n        }\n\n        // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n        if (\n          !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n        ) {\n          DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n          DistinctCategoriesTemp.push({\n            category_id: thisCategory.user_detail_category_id,\n            category_title: thisCategory.title,\n            subcategory_id: \"\",\n            subcategory_title: \"\",\n            field_title: \"\",\n            field_id: \"\",\n            required: false,\n          });\n        }\n\n        // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n        if (\n          !DistinctSubCategoriesIds.includes(\n            thisSubCategory.user_detail_subcategory_id\n          )\n        ) {\n          DistinctSubCategoriesIds.push(\n            thisSubCategory.user_detail_subcategory_id\n          );\n          DistinctSubCategoriesTemp.push({\n            category_id: thisSubCategory.category_id,\n            category_title: \"\",\n            subcategory_id: thisSubCategory.user_detail_subcategory_id,\n            subcategory_title: thisSubCategory.title,\n            field_title: \"\",\n            field_id: \"\",\n            required: false,\n          });\n        }\n      }\n    }\n    // DistinctCategoriesIds.;\n  }\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport interface ViewPositionProps {\n  thisPosition: PositionAPI;\n  setThisPosition?: (value: PositionAPI | null) => void;\n  publishPosition: Function;\n  isGuest?: boolean;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewPosition = (props: ViewPositionProps) => {\n  const [loadingRequest, setLoadingRequest] = useState<string>(\"\");\n\n  const publishPosition = async (\n    position_id: string,\n    status: boolean,\n    name: string\n  ) => {\n    if (\n      window.confirm(\n        `Are you sure do you want to ${\n          status ? \"publish\" : \"unpublish\"\n        } this position?`\n      )\n    ) {\n      setLoadingRequest(position_id);\n      try {\n        const res = await axios.patch(\n          `${API.APPLICATION}/publishposition/${position_id}`,\n          {\n            isPublished: status,\n          }\n        );\n        props.publishPosition({ position_id, status });\n        props.PushPopupAlert({\n          title: `${name} ${\n            status ? \" published\" : \" stopped on application\"\n          } successfully`,\n          theme: PopupAlertTheme.info,\n        });\n        let thisPositionCopy = { ...props.thisPosition };\n        thisPositionCopy.isPublished = status;\n        props.setThisPosition && props.setThisPosition(thisPositionCopy);\n        console.log(\"Position publish: \", res);\n      } catch (error) {\n        console.error(\"err: \", error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(\"\");\n    }\n  };\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <span className=\"text-blue-600 font-bold text-2xl\">\n            {props.thisPosition.position_title}\n          </span>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisPosition.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisPosition.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisPosition.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisPosition.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !== props.thisPosition.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Status:</span>\n\n            <div className=\"flex flex-row items-center gap-2 mt-1\">\n              {!props.isGuest ? (\n                <div\n                  className={`relative ${\n                    loadingRequest.length > 0\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } flex items-center gap-1`}\n                  onClick={() =>\n                    !loadingRequest.length &&\n                    !props.isGuest &&\n                    publishPosition(\n                      props.thisPosition.position_id,\n                      !props.thisPosition.isPublished,\n                      props.thisPosition.position_title\n                    )\n                  }\n                >\n                  <span className=\"block w-14 h-8 bg-gray-100 hover:border-gray-100 rounded-full shadow-inner\"></span>\n                  <span\n                    className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                      !props.thisPosition.isPublished\n                        ? \"bg-yellow-500\"\n                        : \"bg-green-500 transform translate-x-full\"\n                    }`}\n                  ></span>\n                  {loadingRequest === props.thisPosition.position_id ? (\n                    <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                  ) : (\n                    <span className=\"font-medium\">\n                      {props.thisPosition.isPublished\n                        ? \"Published\"\n                        : \"Unpublished\"}\n                    </span>\n                  )}\n                </div>\n              ) : props.thisPosition.isPublished ? (\n                <span className=\"text-green-600 font-semibold text-xl italic\">\n                  Published\n                </span>\n              ) : (\n                <span className=\"text-yellow-600 font-semibold text-xl italic\">\n                  Not Published\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-blue-500 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisPosition.requirements.length > 0 ? (\n            FC_PositionDistinctCategory([\n              props.thisPosition,\n            ]).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100 rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_PositionDistinctCategory([\n                      props.thisPosition,\n                    ]).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(null, { publishPosition, PushPopupAlert })(ViewPosition);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { BiBuildingHouse } from \"react-icons/bi\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadEducationCategories,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport { getAllRoom } from \"../../../actions/location\";\nimport {\n  createSchool,\n  getSchools,\n  updateSchool,\n  deleteSchool,\n} from \"../../../actions/schools\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { education_category } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { isEmptyOrSpaces, toTwoDigit } from \"../../../shared/dataTest\";\nimport {\n  SchoolsInterface,\n  RoomLocationInterface,\n  DistrictInterface,\n  LocationSectorTableInterface,\n  SectorInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { search } from \"../../../utils/functions\";\n\nexport const LocationsSectorInArray = (\n  LocationData: RoomLocationInterface[]\n): LocationSectorTableInterface[] | [] => {\n  let locationTemp: LocationSectorTableInterface[] = [];\n  for (let p in LocationData) {\n    let districts = LocationData[p].districts;\n    for (let d in districts) {\n      let sectors = districts[d].sectors;\n      for (let s in sectors) {\n        locationTemp.push({\n          province_id: LocationData[p]._id,\n          province_name: LocationData[p].province_name,\n          province_code: LocationData[p].province_code,\n          district_id: districts[d]._id,\n          district_name: districts[d].district_name,\n          district_code: districts[d].district_code,\n          sector_id: sectors[s].sector_id,\n          sector_name: sectors[s].sector_name,\n          sector_code: sectors[s].sector_code,\n        });\n      }\n    }\n  }\n  return locationTemp;\n};\n\nexport const getSchoolById = (\n  schools: SchoolsInterface[],\n  school_id: string\n): SchoolsInterface | undefined => {\n  return schools.find((school) => school._id === school_id);\n};\ninterface AppProps {\n  auth: Auth;\n  education_categories: education_category[] | null;\n  allRoom: RoomLocationInterface[];\n  schools: SchoolsInterface[];\n  getSchools: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  createSchool: Function;\n  getAllRoom: Function;\n  updateSchool: Function;\n  deleteSchool: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingSchool: boolean;\n  loadingRequest: boolean;\n  districtFilterStatus: boolean;\n  edicationCategoryFilterStatus: boolean;\n  provinceFilterStatus: boolean;\n  searchInput: string;\n  thisEdication: string | \"ALL\";\n  thisProvince: number | \"ALL\";\n  thisDistrict: number | \"ALL\";\n  district: DistrictInterface[];\n  schoolList: SchoolsInterface[];\n  modalState: \"\" | \"CREATE\" | \"UPDATE\";\n  error: { element: string; msg: string } | null;\n  schoolName: string;\n  schoolCode: number;\n  thisSchool: SchoolsInterface | null;\n  instituteId: string;\n  provinceId: string;\n  districtId: string;\n  sectorId: string;\n}\n\nclass index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingSchool: true,\n      loadingRequest: false,\n      searchInput: \"\",\n      districtFilterStatus: false,\n      edicationCategoryFilterStatus: false,\n      provinceFilterStatus: false,\n      thisEdication: \"ALL\",\n      thisProvince: \"ALL\",\n      thisDistrict: \"ALL\",\n      district: [],\n      schoolList: this.props.schools,\n      modalState: \"\",\n      error: null,\n      schoolName: \"\",\n      schoolCode: 0,\n      thisSchool: null,\n      instituteId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      sectorId: \"\",\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingSchool = (state: boolean) => {\n    this.setState({ loadingSchool: state });\n  };\n\n  setLoadingRequest = (state: boolean) => {\n    this.setState({ loadingRequest: state });\n  };\n\n  setError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ error: data });\n  };\n\n  componentDidMount = () => {\n    if (!this.props.allRoom.length && this.state.loading) {\n      this.props.getAllRoom((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status && msg.length > 0) console.error(msg);\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.education_categories === null ||\n      this.props.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoading);\n    }\n\n    if (!this.props.schools.length && this.state.loadingSchool) {\n      this.props.getSchools(\n        (status: boolean, msg: string, data?: SchoolsInterface[]) => {\n          console.log(status, msg);\n          this.setLoadingSchool(status);\n          if (!status) {\n            if (msg.length > 0) {\n              console.error({ loadingCandidatesError: msg });\n            }\n            if (data) {\n              this.setState({ schoolList: data });\n            }\n          }\n        }\n      );\n    } else {\n      this.setLoadingSchool(false);\n    }\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (isEmptyOrSpaces(this.state.schoolName)) {\n      return this.setError({\n        element: \"school_name\",\n        msg: \"School name is required\",\n      });\n    }\n    if (this.state.schoolCode <= 0) {\n      return this.setError({\n        element: \"school_code\",\n        msg: \"Invalid school code, School code less than 0\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.instituteId)) {\n      return this.setError({\n        element: \"edication_id\",\n        msg: \"Education Institute is required\",\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.districtId)) {\n      return this.setError({\n        element: \"districtId_id\",\n        msg: \"District is required\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.sectorId)) {\n      return this.setError({\n        element: \"sector_id\",\n        msg: \"Sector is required\",\n      });\n    }\n\n    const thisSector = this.getSectors()!.find(\n      (item) => item.sector_id === this.state.sectorId\n    );\n    if (!thisSector) {\n      return this.setError({\n        element: \"sector_id\",\n        msg: \"Unknown selected sector\",\n      });\n    }\n\n    this.setLoadingRequest(true);\n    try {\n      let res;\n      if (this.state.modalState === \"CREATE\") {\n        res = await axios.post<{\n          data: {\n            status: boolean;\n            school_name: string;\n            school_code: number;\n            district_id: string;\n            sector_id: string;\n            sector_code: number;\n            education_category_id: string;\n            shool_id: string;\n          };\n        }>(`${API.APPLICATION}/schools`, {\n          school_name: this.state.schoolName,\n          school_code: this.state.schoolCode,\n          district_id: this.state.districtId,\n          sector_id: this.state.sectorId,\n          sector_code: thisSector.sector_code,\n          education_category_id: this.state.instituteId,\n        });\n        if (res.data) {\n          console.log({ res });\n          // this.setState({\n          //   schoolList: [\n          //     ...this.props.schools,\n          //     {\n          //       _id: res.data.data.shool_id,\n          //       status: res.data.data.status,\n          //       school_name: res.data.data.school_name,\n          //       school_code: res.data.data.school_code,\n          //       sector_id: res.data.data.sector_id,\n          //       sector_code: res.data.data.sector_code,\n          //       district_id: res.data.data.district_id,\n          //       district_code: res.data.data.district_code,\n          //       province_id: res.data.data.province_id,\n          //       province_code: res.data.data.province_code,\n          //       education_category_id: res.data.data.education_category_id,\n          //     },\n          //   ],\n          // });\n          this.props.createSchool({\n            _id: res.data.data.shool_id,\n            status: res.data.data.status,\n            school_name: res.data.data.school_name,\n            school_code: res.data.data.school_code,\n            sector_code: res.data.data.sector_code,\n            district_id: res.data.data.district_id,\n            sector_id: res.data.data.sector_id,\n            education_category_id: res.data.data.education_category_id,\n          });\n          this.props.PushPopupAlert({\n            title: \"New School created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          this.setLoadingRequest(false);\n          this.setState({\n            schoolName: \"\",\n            schoolCode: 0,\n            districtId: \"\",\n            sectorId: \"\",\n            instituteId: \"\",\n            provinceId: \"\",\n            thisSchool: null,\n            modalState: \"\",\n          });\n        }\n      } else if (this.state.thisSchool && this.state.modalState === \"UPDATE\") {\n        res = await axios.patch<{ update: SchoolsInterface }>(\n          `${API.APPLICATION}/schools`,\n          {\n            school_id: this.state.thisSchool._id,\n            school_name: this.state.schoolName,\n            school_code: this.state.schoolCode,\n            district_id: this.state.districtId,\n            sector_id: this.state.sectorId,\n            sector_code: thisSector.sector_code,\n            education_category_id: this.state.instituteId,\n          }\n        );\n        if (res.data) {\n          console.log({ res });\n          this.props.updateSchool({\n            _id: this.state.thisSchool._id,\n            status: true,\n            sector_code: thisSector.sector_code,\n            school_name: this.state.schoolName,\n            school_code: this.state.schoolCode,\n            district_id: this.state.districtId,\n            sector_id: this.state.sectorId,\n            education_category_id: this.state.instituteId,\n          });\n          this.props.PushPopupAlert({\n            title: \"School updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          this.setLoadingRequest(false);\n          this.setState({\n            schoolName: \"\",\n            schoolCode: 0,\n            districtId: \"\",\n            sectorId: \"\",\n            instituteId: \"\",\n            provinceId: \"\",\n            thisSchool: null,\n            modalState: \"\",\n          });\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      this.setLoadingRequest(false);\n    }\n  };\n\n  handleDelete = async (schoolId: string) => {\n    if (window.confirm(\"Are you sure do you want to delete this room?\")) {\n      this.setLoadingRequest(true);\n      try {\n        const res = await axios.delete<SchoolsInterface>(\n          `${API.APPLICATION}/schools/${schoolId}`\n        );\n\n        if (res.data) {\n          console.log({ res });\n          this.props.deleteSchool(schoolId);\n          this.props.PushPopupAlert({\n            title: \"School deleted successfully\",\n            theme: PopupAlertTheme.success,\n          });\n        }\n      } catch (error) {\n        console.log({ province_error: error });\n        this.props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      this.setLoadingRequest(false);\n    }\n  };\n\n  countSchool = (\n    FILTER_TYPE: \"DEFAULT\" | \"EDUCATION\" | \"DISTRICT\" = \"DEFAULT\",\n    FILTER_VALUE: string = \"ALL\"\n  ): string => {\n    let counts: number = 0;\n    if (FILTER_TYPE === \"DEFAULT\") {\n      counts = this.props.schools.length;\n    } else if (FILTER_TYPE === \"EDUCATION\") {\n      counts = this.props.schools.filter(\n        (item) => item.education_category_id === FILTER_VALUE\n      ).length;\n    } else if (FILTER_TYPE === \"DISTRICT\") {\n      counts = this.props.schools.filter(\n        (item) => item.district_id === FILTER_VALUE\n      ).length;\n    }\n    return toTwoDigit(counts);\n  };\n\n  getProvinceByCode = (\n    province_code: number\n  ): RoomLocationInterface | undefined => {\n    return this.props.allRoom.find(\n      (item) => item.province_code === province_code\n    );\n  };\n\n  getDistrictByCode = (\n    province_code: number,\n    district_code: number\n  ): DistrictInterface | undefined => {\n    let province = this.props.allRoom.find(\n      (item) => item.province_code === province_code\n    );\n    return province\n      ? province.districts.find((item) => item.district_code === district_code)\n      : undefined;\n  };\n\n  getSectorByCode = (\n    province_code: number,\n    district_code: number,\n    sector_code: number\n  ): SectorInterface | undefined => {\n    const province = this.props.allRoom.find(\n      (item) => item.province_code === province_code\n    );\n\n    if (province && province.districts) {\n      const district = province.districts.find(\n        (item) => item.district_code === district_code\n      );\n      return district && district.sectors\n        ? district.sectors.find((item) => item.sector_code === sector_code)\n        : undefined;\n    }\n  };\n  getSectors = () => {\n    let province = this.props.allRoom.find(\n      (province) => province._id === this.state.provinceId\n    );\n    if (province && province.districts.length > 0) {\n      let district = province.districts.find(\n        (item) => item._id === this.state.districtId\n      );\n      if (district) {\n        return district.sectors;\n      }\n    }\n    return null;\n  };\n\n  getDistrictData = (province_code: number | null): DistrictInterface[] => {\n    let result: DistrictInterface[] = [];\n    if (province_code) {\n      let province = this.props.allRoom.find(\n        (item) => item.province_code.toString() === province_code.toString()\n      );\n      result = province ? province.districts : [];\n    } else {\n      this.props.allRoom.forEach((element) => {\n        for (const key in element.districts) {\n          if (Object.prototype.hasOwnProperty.call(element.districts, key)) {\n            result.push(element.districts[key]);\n          }\n        }\n      });\n    }\n\n    return result;\n  };\n\n  filterSchools = (\n    institute: string | \"ALL\",\n    province: number | \"ALL\",\n    district: number | \"ALL\"\n  ): SchoolsInterface[] => {\n    let result: SchoolsInterface[] = this.props.schools;\n\n    if (institute !== \"ALL\") {\n      result = result.filter(\n        (item) => item.education_category_id === institute\n      );\n    }\n\n    if (province !== \"ALL\") {\n      result = result.filter(\n        (item) => item.province_code.toString() === province.toString()\n      );\n    }\n\n    if (district !== \"ALL\") {\n      result = result.filter(\n        (item) => item.district_code.toString() === district.toString()\n      );\n    }\n\n    return result;\n  };\n\n  render() {\n    if (this.state.loadingSchool || this.state.loading) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading schools...\n        </div>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        {/* BODY =================================== */}\n        <div className=\"w-full my-5 px-1\">\n          {/* header title */}\n          <div className=\"flex items-start justify-between my-4\">\n            <div className=\"flex flex-row items-center\">\n              <BiBuildingHouse className=\"text-blue-500 text-5xl\" />\n              <div className=\"flex flex-col\">\n                <h1 className=\"text-4xl font-semibold\">Schools Management</h1>\n                {/* <div className=\"flex flex-row items-center mx-2 md:gap-3 gap-2\">\n                  <div className=\"flex flex-col mt-1\">\n                    <span className=\"text-gray-600 text-base\">\n                      All School(s)\n                    </span>\n                    <span className=\"text-gray-600 text-2xl font-bold\">\n                      {this.countSchool()}\n                    </span>\n                  </div>\n                  {this.props.education_categories &&\n                    this.props.education_categories.length > 0 &&\n                    this.props.education_categories.map((education, index) => (\n                      <div\n                        className=\"flex flex-col mt-1\"\n                        key={index + education.education_institute_id}\n                      >\n                        <span className=\"text-gray-600 text-base\">\n                          {education.education_category_title}\n                        </span>\n                        <span className=\"text-gray-600 text-2xl font-bold\">\n                          {this.countSchool(\n                            \"EDUCATION\",\n                            education.education_institute_id\n                          )}\n                        </span>\n                      </div>\n                    ))}\n                </div> */}\n              </div>\n            </div>\n          </div>\n          {/* end header title */}\n\n          <div className=\"md:w-98 bg-white mx-auto md:p-2\">\n            {/* FILTER FORM =================================== */}\n            <section className=\"flex flex-col-reverse sm:flex-row items-center gap-2 w-full my-2\">\n              <div className=\"w-full sm:w-3/4\">\n                <input\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    this.setState({ searchInput: e.target.value })\n                  }\n                  type=\"text\"\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Search school with name or code`}\n                  value={this.state.searchInput}\n                  disabled={this.props.allRoom.length > 0 ? false : true}\n                />\n              </div>\n              <div className=\"w-full sm:w-1/4\">\n                <select\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Filter by status`}\n                  onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                    this.setState({\n                      thisProvince:\n                        e.target.value === \"ALL\"\n                          ? \"ALL\"\n                          : Number(e.target.value),\n                    })\n                  }\n                  value={this.state.thisProvince}\n                  disabled={this.props.allRoom.length > 0 ? false : true}\n                >\n                  <option value=\"ALL\">All province</option>\n                  {this.props.allRoom.length > 0 ? (\n                    this.props.allRoom.map((item, index) => (\n                      <option value={item.province_code} key={index + item._id}>\n                        {item.province_name}\n                      </option>\n                    ))\n                  ) : (\n                    <option value=\"\" disabled>\n                      No province found!\n                    </option>\n                  )}\n                </select>\n              </div>\n              <div className=\"w-full sm:w-1/4\">\n                <select\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Filter by status`}\n                  onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                    this.setState({\n                      thisDistrict:\n                        e.target.value !== \"ALL\"\n                          ? Number(e.target.value)\n                          : \"ALL\",\n                    })\n                  }\n                  value={this.state.thisDistrict}\n                  disabled={this.props.allRoom.length > 0 ? false : true}\n                >\n                  <option value=\"ALL\">All district</option>\n                  {this.getDistrictData(\n                    this.state.thisProvince !== \"ALL\"\n                      ? this.state.thisProvince\n                      : null\n                  ).length > 0 ? (\n                    this.getDistrictData(\n                      this.state.thisProvince !== \"ALL\"\n                        ? this.state.thisProvince\n                        : null\n                    ).map((item, index) => (\n                      <option value={item.district_code} key={index + item._id}>\n                        {item.district_name}\n                      </option>\n                    ))\n                  ) : (\n                    <option value=\"\" disabled>\n                      No district found!\n                    </option>\n                  )}\n                </select>\n              </div>\n              <div className=\"w-full sm:w-1/4\">\n                <select\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Filter by institute`}\n                  onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                    this.setState({ thisEdication: e.target.value })\n                  }\n                  value={this.state.thisEdication}\n                  disabled={this.props.allRoom.length > 0 ? false : true}\n                >\n                  <option value=\"ALL\">All institute</option>\n                  {this.props.education_categories &&\n                  this.props.education_categories.length > 0 ? (\n                    this.props.education_categories.map((item, index) => (\n                      <option\n                        value={item.education_institute_id}\n                        key={index + item.education_institute_id}\n                      >\n                        {item.education_category_title}\n                      </option>\n                    ))\n                  ) : (\n                    <option value=\"\" disabled>\n                      No institute found!\n                    </option>\n                  )}\n                </select>\n              </div>\n            </section>\n            {/* END FILTER FORM =================================== */}\n\n            <div className=\"rounded border border-gray-100 my-1 shadow-sm animate__animated animate__fadeIn\">\n              <table className=\"w-full z-0\">\n                <thead className=\"bg-gray-50\">\n                  <tr className=\"text-left\">\n                    <th className=\"px-3 py-3\">#</th>\n                    <th>School code</th>\n                    <th>School name</th>\n                    <th>Institute</th>\n                    <th>Province</th>\n                    <th>District</th>\n                    {/* <th>Sector</th> */}\n                    {/* <th>Status</th> */}\n                  </tr>\n                </thead>\n                <tbody className=\"text-sm\">\n                  {!search(\n                    this.filterSchools(\n                      this.state.thisEdication,\n                      this.state.thisProvince,\n                      this.state.thisDistrict\n                    ),\n                    this.state.searchInput\n                  ).length && (\n                    <tr\n                      key={1}\n                      className=\"border-b border-gray-200 hover:bg-gray-100\"\n                    >\n                      <td className=\"p-3 text-center\" colSpan={8}>\n                        No School Found\n                      </td>\n                    </tr>\n                  )}\n                  {this.props.schools.length > 0 &&\n                    !this.state.loading &&\n                    search(\n                      this.filterSchools(\n                        this.state.thisEdication,\n                        this.state.thisProvince,\n                        this.state.thisDistrict\n                      ),\n                      this.state.searchInput\n                    ).map((school: SchoolsInterface, index: number) => (\n                      <tr\n                        key={index + school._id}\n                        className=\"border-b border-gray-200 hover:bg-gray-100\"\n                      >\n                        <td className=\"p-3 text-left whitespace-nowrap\">\n                          {index + 1}\n                        </td>\n                        <td className=\"py-3 text-left\">{school.school_code}</td>\n                        <td className=\"py-3 text-left\">{school.school_name}</td>\n                        <td className=\"py-3 text-left\">\n                          {this.props.education_categories &&\n                          this.props.education_categories.filter(\n                            (education) =>\n                              education.education_institute_id ===\n                              school.education_category_id\n                          ).length > 0\n                            ? this.props.education_categories.filter(\n                                (education) =>\n                                  education.education_institute_id ===\n                                  school.education_category_id\n                              )[0].education_category_title\n                            : \"No Institute\"}\n                        </td>\n                        <td className=\"py-3 text-left\">\n                          {this.getProvinceByCode(school.province_code)\n                            ? this.getProvinceByCode(school.province_code)!\n                                .province_name\n                            : \"No province \"}\n                        </td>\n                        <td className=\"py-3 text-left\">\n                          {this.getDistrictByCode(\n                            school.province_code,\n                            school.district_code\n                          )\n                            ? this.getDistrictByCode(\n                                school.province_code,\n                                school.district_code\n                              )!.district_name\n                            : \"No district\"}\n                        </td>\n                        {/* <td className=\"py-3 text-left\">\n                          {this.getSectorByCode(\n                            school.province_code,\n                            school.district_code,\n                            school.sector_code\n                          )\n                            ? this.getSectorByCode(\n                                school.province_code,\n                                school.district_code,\n                                school.sector_code\n                              )!.sector_name\n                            : \"No sector \"+school.sector_code}\n                        </td> */}\n                        {/* <td className=\"py-3\">\n                          <div className=\"flex items-center gap-2 float-right\">\n                            <button\n                              className={`bg-blue-600 text-white font-bold py-1 px-2 flex items-center rounded focus:outline-none ${\n                                this.state.loadingRequest\n                                  ? \"cursor-not-allowed\"\n                                  : null\n                              }`}\n                              title=\"Edit School\"\n                              disabled={this.state.loadingRequest}\n                              onClick={() => {\n                                this.setState({\n                                  modalState: \"UPDATE\",\n                                  thisSchool: school,\n                                  schoolName: school.school_name,\n                                  schoolCode: school.school_code,\n                                  instituteId: school.education_category_id,\n                                  districtId: school.district_id,\n                                  sectorId: school.sector_id,\n                                  provinceId: this.props.allRoom.find((item) =>\n                                    item.districts.find(\n                                      (d) => d._id === school.district_id\n                                    )\n                                  )\n                                    ? this.props.allRoom.find((item) =>\n                                        item.districts.find(\n                                          (d) => d._id === school.district_id\n                                        )\n                                      )!._id\n                                    : \"\",\n                                });\n                              }}\n                            >\n                              <MdModeEdit className=\"w-4 h-4\" />\n                              Edit\n                            </button>\n                            <button\n                              className={`bg-red-700 text-white font-bold py-1 px-2 flex items-center rounded focus:outline-none ${\n                                this.state.loadingRequest\n                                  ? \"cursor-not-allowed\"\n                                  : null\n                              }`}\n                              title=\"Delete\"\n                              disabled={this.state.loadingRequest}\n                              onClick={() => this.handleDelete(school._id)}\n                            >\n                              <MdModeEdit className=\"w-4 h-4\" />\n                              Delete\n                            </button>\n                          </div>\n                        </td> */}\n                      </tr>\n                    ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n\n        {/* modal control */}\n        {this.state.modalState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void =>\n              this.setState({\n                modalState: \"\",\n                thisSchool: null,\n                schoolName: \"\",\n                instituteId: \"\",\n                districtId: \"\",\n                provinceId: \"\",\n              })\n            }\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-600 font-bold text-3xl md:ml-4 inline-flex items-center gap-2\">\n                <BiBuildingHouse className=\"w-11 h-11 text-gray-500 hover:bg-gray-500 hover:text-gray-50 rounded-full p-0 foucs:outline-none\" />\n                {this.state.modalState === \"CREATE\" ? \"CREATE \" : \"UPDATE \"}{\" \"}\n                SCHOOL\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-8 mb-8\">\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"py-4 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                  <div className=\"flex flex-col\">\n                    <label>School name</label>\n                    <input\n                      type=\"text\"\n                      className={`text-left input-white w-20 inline-block border-2 ${\n                        this.state.error &&\n                        this.state.error.element === \"school_name\"\n                          ? \"border-red-700\"\n                          : \"border-gray-500\"\n                      }`}\n                      placeholder=\"School name\"\n                      value={this.state.schoolName}\n                      onChange={(e) => {\n                        this.setError(null);\n                        this.setState({ schoolName: e.target.value });\n                      }}\n                      disabled={this.state.loadingRequest}\n                    />\n                    {this.state.error &&\n                      this.state.error.element === \"school_name\" && (\n                        <span className=\"text-red-700\">\n                          {this.state.error.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  <div className=\"flex flex-col\">\n                    <label>School code</label>\n                    <input\n                      type=\"number\"\n                      className={`text-left input-white w-20 inline-block border-2 ${\n                        this.state.error &&\n                        this.state.error.element === \"school_code\"\n                          ? \"border-red-700\"\n                          : \"border-gray-500\"\n                      }`}\n                      placeholder=\"School code\"\n                      value={this.state.schoolCode}\n                      onChange={(e) => {\n                        this.setError(null);\n                        this.setState({ schoolCode: Number(e.target.value) });\n                      }}\n                      disabled={this.state.loadingRequest}\n                    />\n                    {this.state.error &&\n                      this.state.error.element === \"school_code\" && (\n                        <span className=\"text-red-700\">\n                          {this.state.error.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {/* INSTITUTES ================= */}\n                  <div className=\"flex flex-col\">\n                    <label>Institutes</label>\n                    {/* block appearance-none w-full bg-grey-lighter border\n                  border-grey-lighter text-grey-darker py-3 px-4 pr-8 rounded */}\n                    <select\n                      className={`text-left input-white w-full block border-2 py-3 px-4 pr-8 ${\n                        this.state.error &&\n                        this.state.error.element === \"edication_id\"\n                          ? \"border-red-700\"\n                          : \"border-gray-500\"\n                      }`}\n                      value={this.state.instituteId}\n                      onChange={(e) =>\n                        this.setState({\n                          instituteId: e.target.value,\n                        })\n                      }\n                      disabled={this.state.loadingRequest}\n                    >\n                      <option value=\"\" disabled>\n                        Choose Institute\n                      </option>\n                      {this.props.education_categories &&\n                        this.props.education_categories.map(\n                          (institute, index) => (\n                            <option\n                              value={institute.education_institute_id}\n                              key={index + institute.education_institute_id}\n                            >\n                              {institute.education_category_title}\n                            </option>\n                          )\n                        )}\n                    </select>\n                    {this.state.error &&\n                      this.state.error.element === \"edication_id\" && (\n                        <span className=\"text-red-700\">\n                          {this.state.error.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {/* PROVINCE ================= */}\n                  <div className=\"flex flex-col\">\n                    <label>Province</label>\n                    <select\n                      className={`text-left input-white w-20 inline-block border-2 border-gray-500`}\n                      value={this.state.provinceId}\n                      onChange={(e) =>\n                        this.setState({ provinceId: e.target.value })\n                      }\n                      disabled={this.state.loadingRequest}\n                    >\n                      <option value=\"\" disabled>\n                        Choose province\n                      </option>\n                      {this.props.allRoom &&\n                        this.props.allRoom.map((province, index) => (\n                          <option\n                            value={province._id}\n                            key={index + province._id}\n                          >\n                            {province.province_name}\n                          </option>\n                        ))}\n                    </select>\n                  </div>\n\n                  {/* DISTRICT ================= */}\n                  {this.state.provinceId.length > 0 && (\n                    <div className=\"flex flex-col\">\n                      <label>Sector</label>\n                      <select\n                        className={`text-left input-white w-20 inline-block border-2 ${\n                          this.state.error &&\n                          this.state.error.element === \"districtId_id\"\n                            ? \"border-red-700\"\n                            : \"border-gray-500\"\n                        }`}\n                        value={this.state.districtId}\n                        onChange={(e) =>\n                          this.setState({ districtId: e.target.value })\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <option value=\"\" disabled>\n                          Choose district\n                        </option>\n                        {this.props.allRoom &&\n                        this.props.allRoom.filter(\n                          (province) => province._id === this.state.provinceId\n                        )[0].districts.length > 0 ? (\n                          this.props.allRoom\n                            .filter(\n                              (province) =>\n                                province._id === this.state.provinceId\n                            )[0]\n                            .districts.map((district, index) => (\n                              <option\n                                value={district._id}\n                                key={index + district._id}\n                              >\n                                {district.district_name}\n                              </option>\n                            ))\n                        ) : (\n                          <option key={702} disabled={true}>\n                            No District Found\n                          </option>\n                        )}\n                      </select>\n                      {this.state.error &&\n                        this.state.error.element === \"districtId_id\" && (\n                          <span className=\"text-red-700\">\n                            {this.state.error.msg}\n                          </span>\n                        )}\n                    </div>\n                  )}\n\n                  {/* DISTRICT ================= */}\n                  {this.state.provinceId.length > 0 && (\n                    <div className=\"flex flex-col\">\n                      <label>Sector</label>\n                      <select\n                        className={`text-left input-white w-20 inline-block border-2 ${\n                          this.state.error &&\n                          this.state.error.element === \"sector_id\"\n                            ? \"border-red-700\"\n                            : \"border-gray-500\"\n                        }`}\n                        value={this.state.sectorId}\n                        onChange={(e) =>\n                          this.setState({ sectorId: e.target.value })\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <option value=\"\" disabled>\n                          Choose sector\n                        </option>\n                        {this.props.allRoom && this.getSectors() ? (\n                          this.getSectors()!.map((sector, index) => (\n                            <option\n                              value={sector.sector_id}\n                              key={index + sector.sector_id}\n                            >\n                              {sector.sector_name}\n                            </option>\n                          ))\n                        ) : (\n                          <option key={702} disabled={true}>\n                            No Sector Found\n                          </option>\n                        )}\n                      </select>\n                      {this.state.error &&\n                        this.state.error.element === \"sector_id\" && (\n                          <span className=\"text-red-700\">\n                            {this.state.error.msg}\n                          </span>\n                        )}\n                    </div>\n                  )}\n                </div>\n                <div className=\"pt-4 flex justify-between\">\n                  <button\n                    onClick={() =>\n                      this.setState({\n                        modalState: \"\",\n                        thisSchool: null,\n                        schoolName: \"\",\n                        instituteId: \"\",\n                        districtId: \"\",\n                        provinceId: \"\",\n                      })\n                    }\n                    className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none`}\n                    type=\"button\"\n                    disabled={this.state.loadingRequest}\n                  >\n                    Exit\n                  </button>\n                  <button\n                    className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                      this.state.loadingRequest ? \"animate-pulse\" : null\n                    }`}\n                    type=\"submit\"\n                    disabled={this.state.loadingRequest}\n                  >\n                    {this.state.loadingRequest ? \"Loading...\" : \"Save\"}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </Modal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  schoolLevels,\n  locations,\n}: StoreState): {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  education_categories: education_category[] | null;\n  allRoom: RoomLocationInterface[];\n} => {\n  return {\n    auth: auth,\n    schools: schools.schools,\n    education_categories: schoolLevels.education_categories,\n    allRoom: locations.roomLocation,\n  };\n};\n\nexport const Schools = connect(mapStateToProps, {\n  createSchool,\n  getSchools,\n  updateSchool,\n  getAllRoom,\n  deleteSchool,\n  loadEducationCategories,\n  PushPopupAlert,\n})(index);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport {\n  MdArrowBack,\n  MdErrorOutline,\n  MdMail,\n  MdSmartphone,\n  MdTaskAlt,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport { fetchSchoolPosts, getSchoolPlacement } from \"../../actions/schools\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI } from \"../../interfaces\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  getPositionById,\n  isEmptyOrSpaces,\n} from \"../../shared/dataTest\";\nimport {\n  PostSchoolInterface,\n  PostRequestStatusInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\n\ntype ReceivePostProps = {\n  viewPost: boolean;\n  placementList: placedCandidateInterface[];\n  thisPost: PostSchoolInterface;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n  receivedPosts: number;\n  setReceivedPosts: (value: number) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  loadingPost: boolean;\n  setLoadingPost: (value: boolean) => void;\n  positionId: string;\n  systemPositions: PositionAPI[];\n\n  // REDUX ==========\n  auth: Auth;\n  fetchSchoolPosts: Function;\n  getSchoolPlacement: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ReceivePostState = {\n  placement_id: string;\n  action: \"RECEIVED\" | \"NOT_RECEIVED\" | null;\n  comment: string;\n};\n\nclass ReceivePost extends Component<ReceivePostProps, ReceivePostState> {\n  constructor(props: ReceivePostProps) {\n    super(props);\n\n    this.state = {\n      placement_id: \"\",\n      action: null,\n      comment: \"\",\n    };\n  }\n  submitRequest = async (\n    thisPlacement: placedCandidateInterface,\n    action: \"RECEIVED\" | \"NOT_RECEIVED\"\n  ) => {\n    if (action === \"NOT_RECEIVED\" && isEmptyOrSpaces(this.state.comment)) {\n      return this.props.setFormError({\n        element: \"received_comment\",\n        msg: \"Reason of your decision is required!\",\n      });\n    }\n\n    let received: number = 0;\n    if (action === \"NOT_RECEIVED\") {\n      received = this.props.thisPost.received_posts\n        ? this.props.thisPost.received_posts\n        : 0;\n    } else {\n      received = this.props.thisPost.received_posts\n        ? this.props.thisPost.received_posts + 1\n        : 1;\n    }\n\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.thisPost) {\n        const res = await axios.patch<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpost/${this.props.thisPost.requested_post_id}`,\n          {\n            confirmed_posts: this.props.thisPost.confirmed_posts,\n            confirmed_by: this.props.auth.user.user_id,\n            received_posts: received,\n            approval_date: this.props.thisPost.approval_date,\n            school_id: this.props.thisPost.school_id,\n            position_id: this.props.thisPost.position_id,\n            district_id: this.props.thisPost.district_id,\n            needed_posts: this.props.thisPost.needed_posts,\n            male_number: this.props.thisPost.male_number,\n            female_number: this.props.thisPost.female_number,\n            description: this.props.thisPost.description,\n            occupied_posts: this.props.thisPost.occupied_posts,\n            requested_by: this.props.auth.user.user_id,\n            requested_post_status: PostRequestStatusInterface.RECEIVED,\n          }\n        );\n        if (res) {\n          // props.updateSchoolPost(\"SCHOOL\", res.data.data);\n          this.confirmPlacement(thisPlacement);\n\n          // !this.props.viewPost && this.props.setThisPost(null);\n          // this.props.setReceivedPosts(0);\n          // this.props.setModalState(null);\n          // this.props.PushPopupAlert({\n          //   title: `Post request has been received!`,\n          //   theme: PopupAlertTheme.info,\n          // });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  confirmPlacement = async (thisPlacement: placedCandidateInterface) => {\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.thisPost) {\n        const res = await axios.post<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/confirmreceived`,\n          {\n            placedStatus: [\n              {\n                waiting_list_id: thisPlacement.waiting_list_id,\n                placed_candidate_id: thisPlacement._id,\n                status:\n                  this.state.action === \"NOT_RECEIVED\"\n                    ? PlacedCandidateStatus.REJECTED\n                    : PlacedCandidateStatus.PLACED,\n              },\n            ],\n          }\n        );\n        if (res) {\n          this.props.fetchSchoolPosts(\n            this.props.auth.user_access.school_id,\n            (status: boolean, message: string) => {\n              if (!status) {\n                if (message.length > 0 && this.props.loadingPost) {\n                  console.error(\"error loading school post: \", message);\n                  this.props.PushPopupAlert({\n                    title: message,\n                    theme: PopupAlertTheme.danger,\n                  });\n                }\n                this.props.setLoadingPost(false);\n              }\n            }\n          );\n\n          this.props.getSchoolPlacement(\n            this.props.auth.user_access.school_id,\n            (\n              status: boolean,\n              msg: string,\n              data?: placedCandidateInterface[]\n            ) => {\n              this.props.setLoadingPost(status);\n              if (!status && msg.length > 0) {\n                console.error({ getSchoolPlacementError: msg });\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          );\n\n          this.props.setFormError(null);\n          this.setState({ comment: \"\", placement_id: \"\", action: null });\n          !this.props.viewPost && this.props.setThisPost(null);\n          this.props.setReceivedPosts(0);\n          this.props.setModalState(null);\n          this.props.PushPopupAlert({\n            title: `Request has been done completely!`,\n            theme: PopupAlertTheme.info,\n          });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  render() {\n    return (\n      <section>\n        <div className=\"border-b-2 border-gray-200 mb-2 pb-1 flex items-center gap-3\">\n          <button\n            className={`ml-3 bg-gray-100 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n              this.props.loadingRequest ? \"cursor-wait\" : \"cursor-pointer\"\n            } animate__animated animate__fadeIn`}\n            disabled={this.props.loadingRequest}\n            onClick={() => {\n              this.props.setThisPost(null);\n              this.props.setReceivedPosts(0);\n              this.props.setModalState(null);\n            }}\n          >\n            <MdArrowBack className=\"text-4xl\" />\n          </button>\n\n          <span className=\"font-bold text-2xl md:text-3xl text-gray-700\">\n            Confirm teacher arrival\n          </span>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 divide-x-0 divide-y md:divide-x md:divide-y-0\">\n          <div className=\"px-1 mb-4 mt-3\">\n            <div className=\"text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Position: </span>\n                <span className=\"font-bold\">\n                  {getPositionById(\n                    this.props.systemPositions,\n                    this.props.thisPost.position_id\n                  )\n                    ? getPositionById(\n                        this.props.systemPositions,\n                        this.props.thisPost.position_id\n                      )!.position_title\n                    : \"Unknown position\"}\n                </span>\n              </div>\n\n              <table className=\"w-full shadow\" id=\"report_content\">\n                <thead className=\"bg-blue-50 border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">Requested posts</td>\n                    <td className=\"px-2 py-2\">Approved posts</td>\n                    <td className=\"px-2 py-2\">Post posts</td>\n                    <td className=\"px-2 py-2\">Received posts</td>\n                    <td className=\"px-2 py-2\">Occupation</td>\n                    <td className=\"px-2 py-2\">Status</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.needed_posts}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.CONFIRMED ? (\n                        <div className=\"flex items-center gap-1\">\n                          {this.props.thisPost.confirmed_posts}\n                        </div>\n                      ) : (\n                        \"-\"\n                      )}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.CONFIRMED ? (\n                        <span>\n                          {\n                            getPlacementByRequest(\n                              this.props.placementList,\n                              this.props.thisPost.requested_post_id\n                            ).length\n                          }\n                        </span>\n                      ) : (\n                        \"-\"\n                      )}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.RECEIVED\n                        ? this.props.thisPost.received_posts\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.female_number +\n                        this.props.thisPost.male_number}\n                    </td>\n\n                    <td className=\"px-2 py-2\">\n                      <span\n                        className={`px-2 py-1 mx-1 font-semibold rounded ${\n                          this.props.thisPost.requested_post_status ===\n                          PostRequestStatusInterface.INITIATED\n                            ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                            : this.props.thisPost.requested_post_status ===\n                              PostRequestStatusInterface.CONFIRMED\n                            ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                            : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                        }`}\n                      >\n                        {this.props.thisPost.requested_post_status ===\n                        PostRequestStatusInterface.INITIATED\n                          ? \"Pending\"\n                          : capitalizeFirstLetter(\n                              this.props.thisPost.requested_post_status\n                            )}\n                      </span>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          <div className=\"px-4 mt-3 mb-4\">\n            {getPlacementByRequest(\n              this.props.placementList,\n              this.props.thisPost.requested_post_id\n            ).map((item, index) => (\n              <div\n                className=\"relative grid grid-cols-1 gap-4 px-4 py-1 mb-8 border rounded bg-white shadow\"\n                key={index + item._id}\n              >\n                <div className=\"relative flex gap-4\">\n                  {/* IMG ================== */}\n                  <img\n                    src={API.AUTH_FILES + \"/\" + item.user_info.photo}\n                    className=\"object-center object-cover relative rounded-lg -top-4 -mb-3 bg-white border h-20 w-20\"\n                    alt=\"\"\n                    loading=\"lazy\"\n                  />\n                  <div className=\"flex flex-col w-full\">\n                    <div className=\"flex flex-row justify-between\">\n                      <p className=\"relative text-xl whitespace-nowrap truncate overflow-hidden\">\n                        {item.user_info.fname + \" \" + item.user_info.lname}\n                      </p>\n                    </div>\n                    <p className=\"text-gray-500 text-sm flex items-center gap-1\">\n                      <MdSmartphone /> {item.phone_number}\n                    </p>\n                    <p className=\"text-gray-500 text-sm flex items-center gap-1\">\n                      <MdMail /> {item.email}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"-mt-3\">\n                  {this.state.action !== \"NOT_RECEIVED\" && (\n                    <div className=\"flex flex-row-reverse gap-2\">\n                      <div className=\"flex-initial\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-blue flex items-center font-medium tracking-wide capitalize transition duration-300 transform active:scale-95 ease-in-out\"\n                          disabled={this.props.loadingRequest}\n                          onClick={() => {\n                            this.setState({\n                              placement_id: item._id,\n                              action: \"RECEIVED\",\n                            });\n                            this.submitRequest(item, \"RECEIVED\");\n                          }}\n                        >\n                          <MdTaskAlt />\n                          <span className=\"pl-2 mx-1\">\n                            {this.props.loadingRequest\n                              ? \"Loading...\"\n                              : \"Received\"}\n                          </span>\n                        </button>\n                      </div>\n                      <div className=\"flex-initial\">\n                        <button\n                          type=\"button\"\n                          className=\"btn flex items-center px-5 py-2.5 font-medium tracking-wide text-black capitalize hover:bg-red-200 hover:fill-current hover:text-red-600 focus:outline-none transition duration-300 transform active:scale-95 ease-in-out\"\n                          disabled={this.props.loadingRequest}\n                          onClick={() =>\n                            this.setState({\n                              placement_id: item._id,\n                              action: \"NOT_RECEIVED\",\n                            })\n                          }\n                        >\n                          <MdErrorOutline />\n                          <span className=\"pl-2 mx-1\">Not received</span>\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                  {this.state.action === \"NOT_RECEIVED\" &&\n                    this.state.placement_id === item._id && (\n                      <div className=\"flex flex-col md:flex-row items-end md:items-start gap-2 animate__animated animate__fadeInRight animate__faster mt-2\">\n                        <div className=\"w-full\">\n                          <textarea\n                            className={`border-2 rounded p-2 md:text-base w-full ${\n                              this.props.formError &&\n                              this.props.formError.element ===\n                                \"received_comment\"\n                                ? \"border-red-500\"\n                                : \"border-gray-300\"\n                            } focus:border-gray-500`}\n                            placeholder=\"comment\"\n                            onChange={(e) => {\n                              this.setState({ comment: e.target.value });\n                              this.props.formError &&\n                                this.props.formError.element ===\n                                  \"received_comment\" &&\n                                this.props.setFormError(null);\n                            }}\n                            value={this.state.comment}\n                            style={{ resize: \"none\" }}\n                          ></textarea>\n                          {this.props.formError &&\n                            this.props.formError.element ===\n                              \"received_comment\" && (\n                              <span className=\"text-red-700 text-sm\">\n                                {this.props.formError.msg}\n                              </span>\n                            )}\n                        </div>\n\n                        <button\n                          type=\"button\"\n                          className=\"btn bg-gray-100 hover:bg-gray-400 font-medium tracking-wide capitalize transition duration-300 transform active:scale-95 ease-in-out\"\n                          disabled={this.props.loadingRequest}\n                          onClick={() =>\n                            this.submitRequest(item, \"NOT_RECEIVED\")\n                          }\n                        >\n                          {this.props.loadingRequest ? \"Loading...\" : \"Confirm\"}\n                        </button>\n                      </div>\n                    )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\nexport default connect(mapStateToProps, {\n  fetchSchoolPosts,\n  getSchoolPlacement,\n  PushPopupAlert,\n})(ReceivePost);\n","import React, { Component } from \"react\";\nimport { BiReply } from \"react-icons/bi\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { placedCandidateInterface } from \"../../interfaces/marks_publication\";\nimport { capitalizeFirstLetter, getPositionById } from \"../../shared/dataTest\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n} from \"../../shared/interfaces\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\n\ninterface ViewRequestProps {\n  thisPost: PostSchoolInterface;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setViewPost: (value: boolean) => void;\n  systemPositions: PositionAPI[];\n  schoolPlacements: placedCandidateInterface[];\n  setPostId: (value: string) => void;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  setRequestExplanation: (value: string) => void;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n}\n\nexport class ViewRequest extends Component<ViewRequestProps> {\n  render() {\n    return (\n      <Modal\n        backDrop={true}\n        theme={Themes.default}\n        close={(): void => {\n          this.props.setThisPost(null);\n          this.props.setViewPost(false);\n        }}\n        displayClose={true}\n        backDropClose={false}\n        title={\n          <div className=\"flex flex-row gap-4 items-center\">\n            <div className=\"flex flex-col\">\n              <span className=\"font-bold text-2xl text-gray-500\">\n                Viewing Post Request\n              </span>\n            </div>\n          </div>\n        }\n        widthSizeClass={ModalSize.large}\n        padding={{ title: true, body: false, footer: false }}\n      >\n        <section className=\"px-4 mx-auto mb-4 mt-3 flex items-start\">\n          <section className=\"w-full\">\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Position: </span>\n              <span className=\"font-bold\">\n                {getPositionById(\n                  this.props.systemPositions,\n                  this.props.thisPost.position_id\n                )\n                  ? getPositionById(\n                      this.props.systemPositions,\n                      this.props.thisPost.position_id\n                    )!.position_title\n                  : \"Unknown position\"}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Requested posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.needed_posts}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Approved posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status !==\n                PostRequestStatusInterface.INITIATED ? (\n                  <div\n                    className=\"flex items-center gap-1 cursor-pointer\"\n                    onClick={() => this.props.setModalState(\"RECEIVE\")}\n                  >\n                    {this.props.thisPost.confirmed_posts}\n                    {getPlacementByRequest(\n                      this.props.schoolPlacements,\n                      this.props.thisPost.requested_post_id\n                    ).length > 0 && (\n                      <BiReply className=\"bg-yellow-600 w-5 h-5 text-white\" />\n                    )}\n                  </div>\n                ) : (\n                  \"-\"\n                )}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Placed posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status !==\n                PostRequestStatusInterface.INITIATED ? (\n                  <div\n                    className=\"flex items-center gap-1 cursor-pointer\"\n                    onClick={() => this.props.setModalState(\"RECEIVE\")}\n                  >\n                    {\n                      getPlacementByRequest(\n                        this.props.schoolPlacements,\n                        this.props.thisPost.requested_post_id\n                      ).length\n                    }\n                    {getPlacementByRequest(\n                      this.props.schoolPlacements,\n                      this.props.thisPost.requested_post_id\n                    ).length > 0 && (\n                      <BiReply className=\"bg-yellow-600 w-5 h-5 text-white\" />\n                    )}\n                  </div>\n                ) : (\n                  \"-\"\n                )}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Received posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status ===\n                PostRequestStatusInterface.RECEIVED\n                  ? this.props.thisPost.received_posts\n                  : \"-\"}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Number of female: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.female_number}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Number of male: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.male_number}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Request reason: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.description}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Status: </span>\n              <span\n                className={`px-2 py-1 mx-1 font-semibold rounded ${\n                  this.props.thisPost.requested_post_status ===\n                  PostRequestStatusInterface.INITIATED\n                    ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                    : this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.CONFIRMED\n                    ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                    : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                }`}\n              >\n                {this.props.thisPost.requested_post_status ===\n                PostRequestStatusInterface.INITIATED\n                  ? \"Pending\"\n                  : capitalizeFirstLetter(\n                      this.props.thisPost.requested_post_status\n                    )}\n              </span>\n            </div>\n          </section>\n          <div className=\"mb-3 flex items-center justify-end gap-2\">\n            {this.props.thisPost.requested_post_status ===\n              PostRequestStatusInterface.INITIATED && (\n              <button\n                className=\"font-bold py-1 px-4 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                onClick={() => {\n                  this.props.setModalState(\"UPDATE\");\n                  this.props.setPostId(this.props.thisPost.requested_post_id);\n                  this.props.setPositionId(this.props.thisPost.position_id);\n                  this.props.setRequestedPosts(\n                    this.props.thisPost.needed_posts\n                  );\n                  this.props.setRequestExplanation(\n                    this.props.thisPost.description\n                  );\n                  this.props.setFemaleOnPosition(\n                    this.props.thisPost.female_number\n                  );\n                  this.props.setMaleOnPosition(this.props.thisPost.male_number);\n                  this.props.setFormSteps({ ONE: true, TWO: false });\n                  this.props.setStepState({ ONE: false, TWO: false });\n                }}\n                disabled={\n                  this.props.thisPost.requested_post_status !==\n                  PostRequestStatusInterface.INITIATED\n                }\n              >\n                Edit\n              </button>\n            )}\n            {this.props.thisPost.requested_post_status !==\n              PostRequestStatusInterface.INITIATED &&\n              getPlacementByRequest(\n                this.props.schoolPlacements,\n                this.props.thisPost.requested_post_id\n              ).length > 0 && (\n                <button\n                  className=\"font-bold py-1 px-2 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                  onClick={() => this.props.setModalState(\"RECEIVE\")}\n                >\n                  Receive\n                </button>\n              )}\n          </div>\n        </section>\n      </Modal>\n    );\n  }\n}\n\nexport default ViewRequest;\n","import React, { Component } from \"react\";\nimport { BiReply } from \"react-icons/bi\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { placedCandidateInterface } from \"../../interfaces/marks_publication\";\nimport { capitalizeFirstLetter, getPositionById } from \"../../shared/dataTest\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n} from \"../../shared/interfaces\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\nimport ViewRequest from \"./ViewRequest\";\n\ninterface RequestListProps {\n  schoolPosts: PostSchoolInterface[];\n  systemPositions: PositionAPI[] | null;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  loadingRequest: boolean;\n  filterByPosition: string;\n  setFilterByPosition: (value: string) => void;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setViewPost: (value: boolean) => void;\n\n  schoolPlacements: placedCandidateInterface[];\n\n  thisPost: PostSchoolInterface | null;\n  setPostId: (value: string) => void;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  setRequestExplanation: (value: string) => void;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n  viewPost: boolean;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n}\n\ninterface RequestListState {\n  searchInput: string;\n}\n\nclass RequestList extends Component<RequestListProps, RequestListState> {\n  constructor(props: RequestListProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n          <div className=\"flex flex-col md:flex-row\">\n            <select\n              className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none\"\n              onChange={(e) => this.props.setFilterByPosition(e.target.value)}\n              value={this.props.filterByPosition}\n            >\n              <option value=\"all\">All Position</option>\n              {this.props.systemPositions &&\n              this.props.systemPositions.length > 0 ? (\n                this.props.systemPositions.map((position, index) => (\n                  <option key={index + 1} value={position.position_id}>\n                    {position.position_title}\n                  </option>\n                ))\n              ) : (\n                <option value=\"\">No Position found</option>\n              )}\n            </select>\n          </div>\n          <div className=\"block relative\">\n            <div className=\"pt-6 md:pt-0 md:pl-6\">\n              <button\n                className=\"btn bg-primary text-white hover:bg-blue-600\"\n                onClick={() => this.props.setModalState(\"CREATE\")}\n                disabled={this.props.loadingRequest}\n              >\n                Request Teacher\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"w-full py-2\">\n          <input\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            type=\"text\"\n            value={this.state.searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-50 border-2 border-gray-400 py-2 px-3 rounded focus:border-gray-800\"\n            disabled={\n              this.props.schoolPosts.length <= 0 || this.props.loadingRequest\n            }\n          />\n        </div>\n\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td className=\"px-2 py-2\">Position</td>\n              <td className=\"px-2 py-2\">Request</td>\n              <td className=\"px-2 py-2\">Approved</td>\n              <td className=\"px-2 py-2\">Placed</td>\n              <td className=\"px-2 py-2\">Occupied</td>\n              <td className=\"px-2 py-2\">Vacant</td>\n              <td className=\"px-2 py-2\">Status</td>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.schoolPosts.length > 0 ? (\n              this.props.schoolPosts.map((schoolPost, index) => (\n                <tr\n                  key={index + schoolPost.requested_post_id}\n                  className=\"border-b border-gray-200 hover:bg-gray-100\"\n                >\n                  <td className=\"px-2 py-3 text-left font-medium\">\n                    {index + 1}\n                  </td>\n                  <td className=\"py-3 px-1 text-left font-medium\">\n                    {this.props.systemPositions &&\n                    getPositionById(\n                      this.props.systemPositions,\n                      schoolPost.position_id\n                    )\n                      ? getPositionById(\n                          this.props.systemPositions,\n                          schoolPost.position_id\n                        )!.position_title\n                      : \"Unknown position\"}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.needed_posts}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.requested_post_status !==\n                    PostRequestStatusInterface.INITIATED ? (\n                      <div className=\"flex items-center gap-1\">\n                        {schoolPost.confirmed_posts}\n                        {getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost.requested_post_id\n                        ).length > 0 && (\n                          <BiReply\n                            className=\"bg-yellow-600 w-5 h-5 text-white cursor-pointer\"\n                            onClick={() => {\n                              this.props.setModalState(\"RECEIVE\");\n                              this.props.setThisPost(schoolPost);\n                            }}\n                          />\n                        )}\n                      </div>\n                    ) : (\n                      \"-\"\n                    )}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.requested_post_status !==\n                    PostRequestStatusInterface.INITIATED ? (\n                      <div className=\"flex items-center gap-1\">\n                        {\n                          getPlacementByRequest(\n                            this.props.schoolPlacements,\n                            schoolPost.requested_post_id\n                          ).length\n                        }\n                        {getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost.requested_post_id\n                        ).length > 0 && (\n                          <BiReply\n                            className=\"bg-yellow-600 w-5 h-5 text-white cursor-pointer\"\n                            onClick={() => {\n                              this.props.setModalState(\"RECEIVE\");\n                              this.props.setThisPost(schoolPost);\n                            }}\n                          />\n                        )}\n                      </div>\n                    ) : (\n                      \"-\"\n                    )}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.occupied_posts\n                      ? schoolPost.occupied_posts +\n                        (schoolPost.received_posts\n                          ? schoolPost.received_posts\n                          : 0)\n                      : \"-\"}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.requested_post_status ===\n                    PostRequestStatusInterface.RECEIVED\n                      ? (schoolPost.confirmed_posts\n                          ? schoolPost.confirmed_posts\n                          : 0) -\n                        (schoolPost.received_posts\n                          ? schoolPost.received_posts\n                          : 0)\n                      : \"-\"}\n                  </td>\n                  <td>\n                    <span\n                      className={`px-2 py-1 font-semibold rounded ${\n                        schoolPost.requested_post_status ===\n                        PostRequestStatusInterface.INITIATED\n                          ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                          : schoolPost.requested_post_status ===\n                            PostRequestStatusInterface.CONFIRMED\n                          ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                          : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                      }`}\n                    >\n                      {schoolPost.requested_post_status ===\n                      PostRequestStatusInterface.INITIATED\n                        ? \"Pending\"\n                        : capitalizeFirstLetter(\n                            schoolPost.requested_post_status\n                          )}\n                    </span>\n                  </td>\n                  <td className=\"py- text-left\">\n                    <div className=\"flex item-center justify-end gap-1\">\n                      <button\n                        className=\"btn btn-blue transition ease-out duration-500 flex items-center\"\n                        title=\"View User Profile\"\n                        onClick={() => {\n                          this.props.setThisPost(schoolPost);\n                          this.props.setViewPost(true);\n                        }}\n                      >\n                        Details\n                      </button>\n                      {schoolPost.requested_post_status ===\n                        PostRequestStatusInterface.INITIATED && (\n                        <button\n                          className=\"btn bg-gray-500 text-white hover:bg-gray-700\"\n                          onClick={() => {\n                            this.props.setModalState(\"UPDATE\");\n                            this.props.setPostId(schoolPost.requested_post_id);\n                            this.props.setPositionId(schoolPost.position_id);\n                            this.props.setRequestedPosts(\n                              schoolPost.needed_posts\n                            );\n                            this.props.setRequestExplanation(\n                              schoolPost.description\n                            );\n                            this.props.setFemaleOnPosition(\n                              schoolPost.female_number\n                            );\n                            this.props.setMaleOnPosition(\n                              schoolPost.male_number\n                            );\n                            this.props.setFormSteps({ ONE: true, TWO: false });\n                            this.props.setStepState({ ONE: false, TWO: false });\n                          }}\n                          disabled={this.props.loadingRequest}\n                        >\n                          Edit\n                        </button>\n                      )}\n                    </div>\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan={8}>\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No request have been made!\"}\n                  />\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n\n        {this.props.viewPost &&\n          this.props.modalState === null &&\n          this.props.thisPost &&\n          this.props.systemPositions && (\n            <ViewRequest\n              thisPost={this.props.thisPost}\n              setThisPost={this.props.setThisPost}\n              setViewPost={this.props.setViewPost}\n              systemPositions={this.props.systemPositions}\n              schoolPlacements={this.props.schoolPlacements}\n              setPostId={this.props.setPostId}\n              setModalState={this.props.setModalState}\n              setPositionId={this.props.setPositionId}\n              setRequestedPosts={this.props.setRequestedPosts}\n              setRequestExplanation={this.props.setRequestExplanation}\n              setFemaleOnPosition={this.props.setFemaleOnPosition}\n              setMaleOnPosition={this.props.setMaleOnPosition}\n              setFormSteps={this.props.setFormSteps}\n              setStepState={this.props.setStepState}\n            />\n          )}\n      </div>\n    );\n  }\n}\n\nexport default RequestList;\n","import React, { Fragment } from \"react\";\nimport { FaSchool } from \"react-icons/fa\";\nimport { VscOpenPreview } from \"react-icons/vsc\";\n\ninterface StepsHeaderProps {\n  currentStep: number;\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n}\n\nconst StepsHeader: React.FC<StepsHeaderProps> = (props) => {\n  return (\n    <Fragment>\n      <div className=\"p-5\">\n        <div className=\"mx-4 p-4\">\n          <div className=\"flex items-center\">\n            {/* STEP ONE ================================== */}\n            <div\n              className={`flex items-center ${\n                props.currentStep === 1\n                  ? \"text-white\"\n                  : props.stepState.ONE\n                  ? \"text-blue-500 cursor-pointer\"\n                  : \"text-gray-500\"\n              } relative`}\n              onClick={() =>\n                props.stepState.ONE &&\n                props.setFormSteps({\n                  ONE: true,\n                  TWO: false,\n                })\n              }\n            >\n              <div\n                className={`rounded-full transition duration-500 ease-in-out h-12 w-12 py-3 border-2 ${\n                  props.currentStep === 1\n                    ? \"border-blue-500 bg-blue-500\"\n                    : props.stepState.ONE\n                    ? \"border-blue-500 cursor-pointer\"\n                    : \"border-gray-500\"\n                }`}\n              >\n                <FaSchool className=\"feather feather-bookmark w-full h-full\" />\n              </div>\n              <div\n                className={`absolute top-0 -ml-10 text-center mt-16 w-32 text-xs font-semibold uppercase ${\n                  props.currentStep === 1\n                    ? \"text-blue-500\"\n                    : props.stepState.ONE\n                    ? \"text-blue-500 cursor-pointer\"\n                    : \"text-gray-500\"\n                }`}\n              >\n                Position\n              </div>\n            </div>\n            <div\n              className={`flex-auto border-t-2 transition duration-500 ease-in-out ${\n                props.stepState.ONE ? \"border-blue-500\" : \"border-gray-300\"\n              }`}\n            ></div>\n\n            {/* STEP TWO ================================== */}\n            <div\n              className={`flex items-center ${\n                props.currentStep === 4\n                  ? \"text-white\"\n                  : props.stepState.TWO\n                  ? \"text-blue-500 cursor-pointer\"\n                  : \"text-gray-500\"\n              } relative`}\n              onClick={() =>\n                props.stepState.TWO &&\n                props.setFormSteps({\n                  ONE: false,\n                  TWO: false,\n                })\n              }\n            >\n              <div\n                className={`rounded-full transition duration-500 ease-in-out h-12 w-12 py-3 border-2 ${\n                  props.currentStep === 4\n                    ? \"border-blue-500 bg-blue-500\"\n                    : props.stepState.TWO\n                    ? \"border-blue-500 cursor-pointer\"\n                    : \"border-gray-500\"\n                }`}\n              >\n                <VscOpenPreview className=\"feather feather-database w-full h-full\" />\n              </div>\n              <div\n                className={`absolute top-0 -ml-10 text-center mt-16 w-32 text-xs font-semibold uppercase ${\n                  props.currentStep === 4\n                    ? \"text-blue-500\"\n                    : props.stepState.TWO\n                    ? \"text-blue-500\"\n                    : \"text-gray-500\"\n                }`}\n              >\n                Description\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default StepsHeader;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../actions\";\nimport { createSchoolPost } from \"../../actions/schools\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { getPositionById, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n  SchoolsInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport ViewPosition from \"../Positions/ViewPosition\";\nimport StepsHeader from \"./StepsHeader\";\n\ninterface RequestPostFormProps {\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  formSteps: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n  positionId: string;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  requestedPosts: number;\n  maleOnPosition: number;\n  femaleOnPosition: number;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  requestExplanation: string;\n  setRequestExplanation: (value: string) => void;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  //   REDUX =================\n  auth: Auth;\n  schools: SchoolsInterface[];\n  schoolPosts: PostSchoolInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n  createSchoolPost: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface RequestPostFormState {\n  selectedLevel: string;\n}\n\nexport class RequestPostForm extends Component<\n  RequestPostFormProps,\n  RequestPostFormState\n> {\n  constructor(props: RequestPostFormProps) {\n    super(props);\n\n    this.state = {\n      selectedLevel: \"\",\n    };\n  }\n\n  GetAllowedPositions = (position_id?: string): PositionAPI[] => {\n    if (this.props.systemPositions) {\n      if (this.props.schoolPosts.length > 0) {\n        let postPositionIds: string[] = [];\n        for (const key in this.props.schoolPosts) {\n          if (\n            Object.prototype.hasOwnProperty.call(this.props.schoolPosts, key)\n          ) {\n            if (\n              this.props.schoolPosts[key].requested_post_status !==\n              PostRequestStatusInterface.RECEIVED\n            ) {\n              if (\n                !position_id ||\n                position_id !== this.props.schoolPosts[key].position_id\n              ) {\n                postPositionIds.push(this.props.schoolPosts[key].position_id);\n              }\n            }\n          }\n        }\n        if (position_id) {\n          postPositionIds = postPositionIds.filter(\n            (item) => item !== position_id\n          );\n        }\n        return this.props.systemPositions.filter(\n          (item) => !postPositionIds.includes(item.position_id)\n        );\n      }\n      return this.props.systemPositions;\n    }\n    return [];\n  };\n\n  submitRequest = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // if (this.props.modalState === \"RECEIVE\" && this.props.receivedPosts < 0) {\n    //   return this.props.setFormError({\n    //     element: \"received_posts\",\n    //     msg: \"Invalid number of received post\",\n    //   });\n    // }\n    // if (\n    //   this.props.modalState === \"RECEIVE\" &&\n    //   this.props.thisPost &&\n    //   this.props.receivedPosts > this.props.thisPost.needed_posts\n    // ) {\n    //   return this.props.setFormError({\n    //     element: \"received_posts\",\n    //     msg: \"Invalid number of received post\",\n    //   });\n    // }\n\n    if (this.props.requestedPosts <= 0) {\n      return this.props.setFormError({\n        element: \"requested_posts\",\n        msg: \"Needed post must be greater than 0\",\n      });\n    }\n\n    if (isEmptyOrSpaces(this.props.requestExplanation)) {\n      return this.props.setFormError({\n        element: \"comment\",\n        msg: \"Explanation is required!\",\n      });\n    }\n\n    const thisSchool = this.props.schools.find(\n      (item) => item._id === this.props.auth.user_access.school_id\n    );\n\n    if (!thisSchool) {\n      return this.props.PushPopupAlert({\n        title: \"No district id found\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.modalState === \"CREATE\") {\n        const res = await axios.post<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpost`,\n          {\n            school_id: this.props.auth.user_access.school_id,\n            position_id: this.props.positionId,\n            district_id: thisSchool.district_id,\n            needed_posts: this.props.requestedPosts,\n            male_number: this.props.maleOnPosition,\n            female_number: this.props.femaleOnPosition,\n            // description: 44,\n            description: this.props.requestExplanation,\n            occupied_posts:\n              Number(this.props.maleOnPosition) +\n              Number(this.props.femaleOnPosition),\n            requested_by: this.props.auth.user.user_id,\n          }\n        );\n        if (res) {\n          this.props.createSchoolPost(res.data.data);\n          this.props.setPositionId(\"\");\n          this.props.setRequestedPosts(0);\n          this.props.setFemaleOnPosition(0);\n          this.props.setMaleOnPosition(0);\n          this.props.setRequestExplanation(\"\");\n          this.props.setFormSteps({ ONE: true, TWO: false });\n          this.props.setStepState({ ONE: false, TWO: false });\n          this.props.PushPopupAlert({\n            title: `Post(s) has been requested!`,\n            theme: PopupAlertTheme.success,\n          });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  setSchoolLevel = (value: string) => {\n    this.setState({ selectedLevel: value });\n  };\n\n  getPositionByLevelId = (\n    allPosition: PositionAPI[],\n    levelId: string\n  ): PositionAPI[] => {\n    if (isEmptyOrSpaces(levelId)) {\n      return allPosition;\n    }\n    return allPosition.filter(\n      (item) => item.school_level_id.school_level_id === levelId\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <StepsHeader\n          currentStep={this.props.formSteps.TWO ? 2 : 1}\n          stepState={this.props.stepState}\n          setFormSteps={this.props.setFormSteps}\n        />\n        <div className=\"px-4 mx-auto mb-4 mt-3\">\n          {this.props.formSteps.ONE && (\n            <section>\n              <div className=\"flex flex-col mb-4\">\n                <label>School level</label>\n                <select\n                  className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none focus:bg-gray-100\"\n                  value={this.state.selectedLevel}\n                  onChange={(e) => {\n                    this.setSchoolLevel(e.target.value);\n                  }}\n                >\n                  <option value=\"\">Choose level</option>\n                  {this.props.schoolLevels.school_levels &&\n                  this.props.schoolLevels.school_levels.length > 0 ? (\n                    this.props.schoolLevels.school_levels.map((item, index) => (\n                      <option key={index + 11} value={item.school_level_id}>\n                        {item.school_level_name}\n                      </option>\n                    ))\n                  ) : (\n                    <option>No school level found</option>\n                  )}\n                </select>\n              </div>\n\n              <div className=\"flex flex-col\">\n                <label>Select Position {this.props.positionId}</label>\n                <select\n                  className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none focus:bg-gray-100\"\n                  value={this.props.positionId}\n                  onChange={(e) => {\n                    this.props.setPositionId(e.target.value);\n                  }}\n                >\n                  <option value=\"\">Choose Position</option>\n                  {this.props.systemPositions &&\n                  this.getPositionByLevelId(\n                    this.GetAllowedPositions(\n                      this.props.positionId.length > 0\n                        ? this.props.positionId\n                        : \"\"\n                    ),\n                    this.state.selectedLevel\n                  ).length > 0 ? (\n                    this.getPositionByLevelId(\n                      this.GetAllowedPositions(\n                        this.props.positionId.length > 0\n                          ? this.props.positionId\n                          : \"\"\n                      ),\n                      this.state.selectedLevel\n                    ).map((position, index) => (\n                      <option key={index + 11} value={position.position_id}>\n                        {position.position_title}\n                      </option>\n                    ))\n                  ) : (\n                    <option>No position found</option>\n                  )}\n                </select>\n              </div>\n              {this.props.positionId.length > 0 &&\n                this.props.systemPositions &&\n                getPositionById(\n                  this.props.systemPositions,\n                  this.props.positionId\n                ) && (\n                  <div className=\"my-2 rounded border\">\n                    <ViewPosition\n                      thisPosition={\n                        getPositionById(\n                          this.props.systemPositions,\n                          this.props.positionId\n                        )!\n                      }\n                      isGuest={true}\n                    />\n                  </div>\n                )}\n              <div className=\"bg-white w-full flex justify-end\">\n                {this.props.positionId.length > 0 && (\n                  <button\n                    className=\"btn btn-blue m-1 mr-2 mb-2 animate__animated animate__fadeIn focus:outline-none\"\n                    onClick={() => {\n                      this.props.setFormSteps({\n                        ONE: false,\n                        TWO: true,\n                      });\n                      this.props.setStepState({\n                        ONE: true,\n                        TWO: false,\n                      });\n                    }}\n                  >\n                    Continue\n                  </button>\n                )}\n              </div>\n            </section>\n          )}\n          <form onSubmit={this.submitRequest}>\n            <div className=\"bg-white\">\n              {this.props.formSteps.TWO && (\n                <div className=\"text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                  <div className=\"mb-4 md:flex md:justify-between\">\n                    <div className=\"mb-4 md:mr-2 md:mb-0 w-full\">\n                      <label\n                        className=\"block mb-2 text-sm font-bold text-gray-700\"\n                        htmlFor=\"female\"\n                      >\n                        Current number of Female on this position\n                      </label>\n                      <input\n                        className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                        id=\"female\"\n                        type=\"number\"\n                        min={0}\n                        value={this.props.femaleOnPosition}\n                        onChange={(e) =>\n                          this.props.setFemaleOnPosition(Number(e.target.value))\n                        }\n                        placeholder=\"Current number of Female on this position\"\n                      />\n                      {/* <p className=\"text-xs italic text-red-500\">\n                          Please choose a password.\n                        </p> */}\n                    </div>\n                    <div className=\"md:ml-2 w-full\">\n                      <label\n                        className=\"block mb-2 text-sm font-bold text-gray-700\"\n                        htmlFor=\"male\"\n                      >\n                        Current number of Male on this position\n                      </label>\n                      <input\n                        className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                        id=\"male\"\n                        type=\"number\"\n                        min={0}\n                        value={this.props.maleOnPosition}\n                        onChange={(e) =>\n                          this.props.setMaleOnPosition(Number(e.target.value))\n                        }\n                        placeholder=\"Current number of Male on this post\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Needed posts (number)</label>\n                    <input\n                      type=\"number\"\n                      className={`appearance-none rounded w-full py-1 px-4 border-2 bg-white focus:outline-none focus:bg-gray-100 ${\n                        this.props.formError &&\n                        this.props.formError.element === \"requested_posts\"\n                          ? \"border-red-700\"\n                          : \"border-gray-700\"\n                      }`}\n                      value={this.props.requestedPosts}\n                      onChange={(e) => {\n                        this.props.setRequestedPosts(Number(e.target.value));\n                        this.props.formError &&\n                          this.props.formError.element === \"requested_posts\" &&\n                          this.props.setFormError(null);\n                      }}\n                      placeholder=\"1\"\n                    />\n                    {this.props.formError &&\n                      this.props.formError.element === \"requested_posts\" && (\n                        <span className=\"text-xs italic text-red-700 mt-1\">\n                          {this.props.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Explanation</label>\n                    <textarea\n                      name=\"description\"\n                      className={`appearance-none rounded w-full py-1 px-4 border-2 bg-white focus:outline-none focus:bg-gray-100 ${\n                        this.props.formError &&\n                        this.props.formError.element === \"comment\"\n                          ? \"border-red-700\"\n                          : \"border-gray-700\"\n                      }`}\n                      id=\"description\"\n                      placeholder=\"Explanation\"\n                      value={this.props.requestExplanation}\n                      onChange={(e) => {\n                        this.props.setRequestExplanation(e.target.value);\n                        this.props.formError &&\n                          this.props.formError.element === \"comment\" &&\n                          this.props.setFormError(null);\n                      }}\n                      rows={2}\n                    ></textarea>\n                    {this.props.formError &&\n                      this.props.formError.element === \"comment\" && (\n                        <span className=\"text-xs italic text-red-700 mt-1\">\n                          {this.props.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                </div>\n              )}\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  className=\"btn bg-gray-400 text-white hover:bg-gray-600\"\n                  onClick={() => {\n                    this.props.setPositionId(\"\");\n                    this.props.setRequestedPosts(0);\n                    this.props.setFemaleOnPosition(0);\n                    this.props.setMaleOnPosition(0);\n                    this.props.setRequestExplanation(\"\");\n                    this.props.setModalState(null);\n                    this.props.setFormError(null);\n                    this.props.setFormSteps({ ONE: true, TWO: false });\n                    this.props.setStepState({ ONE: false, TWO: false });\n                  }}\n                >\n                  Exit\n                </button>\n                {this.props.formSteps.TWO && (\n                  <button\n                    className=\"btn bg-primary text-white hover:bg-blue-600\"\n                    disabled={this.props.loadingRequest}\n                  >\n                    {this.props.loadingRequest ? \"Loading...\" : \"Request\"}\n                  </button>\n                )}\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  system_settings,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  schoolPosts: PostSchoolInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    schools: schools.schools,\n    schoolPosts: schools.schoolPosts,\n    schoolLevels,\n    systemPositions: system_settings.systemPositions,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createSchoolPost,\n  PushPopupAlert,\n})(RequestPostForm);\n","import React, { Component } from \"react\";\nimport { GiTeacher } from \"react-icons/gi\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Auth,\n  loadSchoolLevels,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../actions\";\nimport {\n  getSchools,\n  fetchSchoolPosts,\n  createSchoolPost,\n  updateSchoolPost,\n  getSchoolPlacement,\n} from \"../../actions/schools\";\nimport { getPositions } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI } from \"../../interfaces\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { SchoolsInterface, PostSchoolInterface } from \"../../shared/interfaces\";\nimport ReceivePost from \"./ReceivePost\";\nimport RequestList from \"./RequestList\";\nimport RequestPostForm from \"./RequestPostForm\";\n\nexport const getPlacementByRequest = (\n  placements: placedCandidateInterface[],\n  request: string,\n  status: PlacedCandidateStatus = PlacedCandidateStatus.PENDING\n): placedCandidateInterface[] => {\n  // position id must be replaced with request id\n  return placements.filter(\n    (item) => item.request_id === request && item.status === status\n  );\n};\n\ninterface RequestTeacherProps {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n  schoolPosts: PostSchoolInterface[];\n  schoolPlacements: placedCandidateInterface[] | null;\n  getPositions: Function;\n  fetchSchoolPosts: Function;\n  getSchoolPlacement: Function;\n  createSchoolPost: Function;\n  updateSchoolPost: Function;\n  getSchools: Function;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface RequestTeacherState {\n  loading: boolean;\n  loadingPost: boolean;\n  loadingRequest: boolean;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n  filterByPosition: string;\n  positionId: string;\n  requestedPosts: number;\n  femaleOnPosition: number;\n  maleOnPosition: number;\n  requestExplanation: string;\n  formSteps: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  thisPost: PostSchoolInterface | null;\n  viewPost: boolean;\n  postId: string;\n  receivedPosts: number;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n}\nclass RequestTeacher extends Component<\n  RequestTeacherProps,\n  RequestTeacherState\n> {\n  constructor(props: RequestTeacherProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingPost: true,\n      loadingRequest: false,\n      modalState: null,\n      filterByPosition: \"\",\n      positionId: \"\",\n      requestedPosts: 0,\n      femaleOnPosition: 0,\n      maleOnPosition: 0,\n      requestExplanation: \"\",\n      formSteps: { ONE: true, TWO: false },\n      stepState: { ONE: false, TWO: false },\n      thisPost: null,\n      viewPost: false,\n      postId: \"\",\n      receivedPosts: 0,\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoadingPost = (value: boolean) => {\n    this.setState({ loadingPost: value });\n  };\n\n  setViewPost = (value: boolean) => {\n    this.setState({ viewPost: value });\n  };\n\n  setPostId = (value: string) => {\n    this.setState({ postId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setPositionId = (value: string) => {\n    this.setState({ positionId: value });\n  };\n  setRequestedPosts = (value: number) => {\n    this.setState({ requestedPosts: value });\n  };\n  setFemaleOnPosition = (value: number) => {\n    this.setState({ femaleOnPosition: value });\n  };\n  setMaleOnPosition = (value: number) => {\n    this.setState({ maleOnPosition: value });\n  };\n  setRequestExplanation = (value: string) => {\n    this.setState({ requestExplanation: value });\n  };\n  setFormSteps = (value: { ONE: boolean; TWO: boolean }) => {\n    this.setState({ formSteps: value });\n  };\n  setStepState = (value: { ONE: boolean; TWO: boolean }) => {\n    this.setState({ stepState: value });\n  };\n  setFilterByPosition = (value: string) => {\n    this.setState({ filterByPosition: value });\n  };\n\n  setThisPost = (value: PostSchoolInterface | null) => {\n    this.setState({ thisPost: value });\n  };\n\n  setModalState = (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => {\n    this.setState({ modalState: value });\n  };\n\n  setReceivedPosts = (value: number) => {\n    this.setState({ receivedPosts: value });\n  };\n\n  componentDidMount = () => {\n    if (this.props.auth.user_access.school_id.length <= 0) {\n      return <Redirect to=\"/apps-page\" />;\n    }\n    if (!this.props.schools.length && this.state.loading) {\n      this.props.getSchools((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (msg.length > 0) {\n          console.error({ loadingCandidatesError: msg });\n          this.setLoading(false);\n        }\n      });\n    } else {\n      this.setLoading(false);\n    }\n\n    if (!this.props.schoolPlacements) {\n      this.props.getSchoolPlacement(\n        this.props.auth.user_access.school_id,\n        (status: boolean, msg: string, data?: placedCandidateInterface[]) => {\n          this.setLoading(status);\n          if (!status && msg.length > 0) {\n            console.error({ getSchoolPlacementError: msg });\n          }\n        }\n      );\n    } else {\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.systemPositions === null ||\n      (this.props.systemPositions.length === 0 && this.state.loading)\n    ) {\n      this.setLoading(true);\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else {\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      (this.props.schoolLevels.school_levels.length === 0 && this.state.loading)\n    ) {\n      this.props.loadSchoolLevels(this.setLoading);\n    }\n\n    if (!this.props.schoolPosts.length && this.state.loadingPost) {\n      this.props.fetchSchoolPosts(\n        this.props.auth.user_access.school_id,\n        (status: boolean, message: string) => {\n          if (!status) {\n            if (message.length > 0 && this.state.loadingPost) {\n              console.error(\"error loading school post: \", message);\n              this.props.PushPopupAlert({\n                title: message,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setState({ loadingPost: false });\n          }\n        }\n      );\n    } else {\n      this.setState({ loadingPost: false });\n    }\n  };\n\n  getPositionById = (\n    systemPositions: PositionAPI[],\n    positionId: string\n  ): PositionAPI | undefined => {\n    return systemPositions.find((item) => item.position_id === positionId);\n  };\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* header title */}\n        <div className=\"flex flex-row items-start gap-3 my-2\">\n          <GiTeacher className=\"text-blue-700 w-10 h-10 md:block hidden\" />\n          <div className=\"w-full\">\n            <div className=\"flex justify-between w-full\">\n              <div className=\"flex flex-col gap-1 justify-between\">\n                <h1 className=\"md:text-4xl text-3xl font-semibold\">\n                  Teacher Request\n                </h1>\n\n                <div className=\"flex-row items-center md:gap-3 gap-2 hidden\">\n                  <div className=\"flex flex-row items-center mt-1 gap-1\">\n                    <span className=\"text-gray-600 text-xl\">level:</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        <div className=\"bg-white shadow p-2 rounded\">\n          {!this.state.modalState && this.props.schoolPlacements && (\n            <RequestList\n              systemPositions={this.props.systemPositions}\n              setModalState={this.setModalState}\n              loadingRequest={this.state.loadingRequest}\n              setFilterByPosition={this.setFilterByPosition}\n              schoolPosts={this.props.schoolPosts}\n              setThisPost={this.setThisPost}\n              setViewPost={this.setViewPost}\n              setPostId={this.setPostId}\n              setPositionId={this.setPositionId}\n              setRequestedPosts={this.setRequestedPosts}\n              setRequestExplanation={this.setRequestExplanation}\n              setFemaleOnPosition={this.setFemaleOnPosition}\n              setMaleOnPosition={this.setMaleOnPosition}\n              setFormSteps={this.setFormSteps}\n              setStepState={this.setStepState}\n              thisPost={this.state.thisPost}\n              viewPost={this.state.viewPost}\n              modalState={this.state.modalState}\n              schoolPlacements={this.props.schoolPlacements}\n              filterByPosition={this.state.filterByPosition}\n            />\n          )}\n\n          {(this.state.modalState === \"CREATE\" ||\n            this.state.modalState === \"UPDATE\") && (\n            <RequestPostForm\n              loadingRequest={this.state.loadingRequest}\n              setLoadingRequest={this.setLoadingRequest}\n              formSteps={this.state.formSteps}\n              setFormSteps={this.setFormSteps}\n              stepState={this.state.stepState}\n              setStepState={this.setStepState}\n              positionId={this.state.positionId}\n              setPositionId={this.setPositionId}\n              setRequestedPosts={this.setRequestedPosts}\n              requestedPosts={this.state.requestedPosts}\n              maleOnPosition={this.state.maleOnPosition}\n              femaleOnPosition={this.state.femaleOnPosition}\n              setFemaleOnPosition={this.setFemaleOnPosition}\n              setMaleOnPosition={this.setMaleOnPosition}\n              requestExplanation={this.state.requestExplanation}\n              setRequestExplanation={this.setRequestExplanation}\n              modalState={this.state.modalState}\n              setModalState={this.setModalState}\n              formError={this.state.formError}\n              setFormError={this.setFormError}\n            />\n          )}\n\n          {this.state.modalState === \"RECEIVE\" &&\n            this.state.thisPost &&\n            this.props.systemPositions &&\n            this.props.schoolPlacements && (\n              <ReceivePost\n                loadingPost={this.state.loadingPost}\n                loadingRequest={this.state.loadingRequest}\n                positionId={this.state.positionId}\n                thisPost={this.state.thisPost}\n                viewPost={this.state.viewPost}\n                receivedPosts={this.state.receivedPosts}\n                formError={this.state.formError}\n                systemPositions={this.props.systemPositions}\n                setThisPost={this.setThisPost}\n                setModalState={this.setModalState}\n                setFormError={this.setFormError}\n                setReceivedPosts={this.setReceivedPosts}\n                setLoadingRequest={this.setLoadingRequest}\n                setLoadingPost={this.setLoadingPost}\n                placementList={this.props.schoolPlacements}\n              />\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  system_settings,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  schoolPosts: PostSchoolInterface[];\n  schoolPlacements: placedCandidateInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    schools: schools.schools,\n    schoolPosts: schools.schoolPosts,\n    schoolPlacements: schools.schoolPlacements,\n    schoolLevels,\n    systemPositions: system_settings.systemPositions,\n  };\n};\n\nexport const PostRequest = connect(mapStateToProps, {\n  loadSchoolLevels,\n  getPositions,\n  getSchools,\n  fetchSchoolPosts,\n  getSchoolPlacement,\n  createSchoolPost,\n  updateSchoolPost,\n  PushPopupAlert,\n})(RequestTeacher);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport Table from \"../../components/Table/Table\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n  SchoolsInterface,\n} from \"../../shared/interfaces\";\nimport {\n  fetchDistrictPosts,\n  createSchoolPost,\n  getSchools,\n  updateSchoolPost,\n  getDistrictPlacement,\n} from \"../../actions/schools\";\nimport {\n  capitalizeFirstLetter,\n  getPositionById,\n  isEmptyOrSpaces,\n} from \"../../shared/dataTest\";\nimport { GiTeacher } from \"react-icons/gi\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { getPositions } from \"../../actions/settings\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { getSchoolById } from \"../district/Schools\";\nimport { DATE } from \"../../utils/functions\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { getPlacementByRequest } from \"../HeadTeacher/RequestTeacher\";\n\ninterface AppProps {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  systemPositions: PositionAPI[] | null;\n  districtPosts: PostSchoolInterface[];\n  districtPlacements: placedCandidateInterface[] | null;\n  getPositions: Function;\n  fetchDistrictPosts: Function;\n  createSchoolPost: Function;\n  updateSchoolPost: Function;\n  getSchools: Function;\n  getDistrictPlacement: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst _District: React.FC<AppProps> = (props) => {\n  const [loadingPosition, setLoadingPosition] = useState<boolean>(false);\n  const [loadingPost, setLoadingPost] = useState<boolean>(true);\n  const [loadingPlacement, setLoadingPlacement] = useState<boolean>(true);\n  const [modalState, setModalState] = useState<\"CONFIRM\" | \"UPDATE\" | null>(\n    null\n  );\n  const [filterByPosition, setFilterByPosition] = useState<string>(\"all\");\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [thisPost, setThisPost] = useState<PostSchoolInterface | null>(null);\n  const [viewPost, setViewPost] = useState<boolean>(false);\n  const [approvedPosts, setApprovedPosts] = useState<number>(0);\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n\n  useEffect(() => {\n    if (!isEmptyOrSpaces(props.auth.user_access.district_id)) {\n      if (!props.schools.length && loading) {\n        props.getSchools((status: boolean, msg: string) => {\n          setLoading(status);\n          if (msg.length > 0) {\n            console.error({ loadingCandidatesError: msg });\n          }\n        });\n      } else if (loading) {\n        setLoading(false);\n        loadingPosition && setLoadingPosition(false);\n      }\n\n      if (props.systemPositions === null) {\n        setLoadingPosition(true);\n        props.getPositions((status: boolean, msg: string) => {\n          setLoadingPosition(status);\n          console.log({ status: status, msg: msg });\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        });\n      }\n      if (!props.districtPosts.length && loadingPost) {\n        props.fetchDistrictPosts(\n          props.auth.user_access.district_id,\n          (status: boolean, message: string) => {\n            if (!status) {\n              if (message.length > 0 && loadingPost) {\n                console.error(\"error loading school post: \", message);\n                props.PushPopupAlert({\n                  title: message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              setLoadingPost(false);\n            }\n          }\n        );\n      } else if (loadingPost) {\n        setLoadingPost(false);\n      }\n\n      if (!props.districtPlacements) {\n        props.getDistrictPlacement(\n          props.auth.user_access.district_id,\n          (status: boolean, message: string) => {\n            if (!status) {\n              if (message.length > 0 && loadingPlacement) {\n                console.error(\"error loading school post: \", message);\n                props.PushPopupAlert({\n                  title: message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              setLoadingPlacement(false);\n            }\n          }\n        );\n      } else if (loadingPlacement) {\n        setLoadingPlacement(false);\n      }\n    }\n  }, [loading, loadingPlacement, loadingPosition, loadingPost, props]);\n\n  if (isEmptyOrSpaces(props.auth.user_access.district_id)) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading data...\n      </div>\n    );\n  }\n\n  const tableData = (): JSX.Element[] => {\n    if (loadingPost) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={8}>\n            Loading post request(s)\n          </td>\n        </tr>,\n      ];\n    }\n\n    let data = props.districtPosts;\n\n    data =\n      filterByPosition !== \"\" && filterByPosition !== \"all\"\n        ? data.filter(\n            (schoolPost) => schoolPost.position_id === filterByPosition\n          )\n        : data;\n\n    if (data.length === 0) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={8}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((schoolPost, index) => (\n      <tr\n        key={index + 1}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"py-3 px-4 text-left\">\n          {getSchoolById(props.schools, schoolPost.school_id)\n            ? getSchoolById(props.schools, schoolPost.school_id)!.school_name\n            : \"Unknown school\"}\n        </td>\n        <td className=\"py-3 px-4 text-left\">\n          {props.systemPositions &&\n          getPositionById(props.systemPositions, schoolPost.position_id)\n            ? getPositionById(props.systemPositions, schoolPost.position_id)!\n                .position_title\n            : \"Unknown position\"}\n        </td>\n        <td className=\"py-3 px-4 text-left text-base font-bold\">\n          {schoolPost.needed_posts}\n        </td>\n        <td className=\"py-3 px-4 text-left text-base font-medium\">\n          {schoolPost.requested_post_status !==\n          PostRequestStatusInterface.INITIATED\n            ? schoolPost.confirmed_posts\n            : \"-\"}\n        </td>\n        <td className=\"py-3 px-4 text-left text-base font-medium\">\n          {schoolPost.occupied_posts\n            ? schoolPost.occupied_posts +\n              (schoolPost.requested_post_status ===\n              PostRequestStatusInterface.RECEIVED\n                ? schoolPost.received_posts\n                  ? schoolPost.received_posts\n                  : 0\n                : 0)\n            : \"-\"}\n        </td>\n        <td className=\"py-3 px-4 text-left text-base font-medium\">\n          {schoolPost.requested_post_status !==\n          PostRequestStatusInterface.INITIATED\n            ? (schoolPost.confirmed_posts ? schoolPost.confirmed_posts : 0) -\n              (schoolPost.requested_post_status ===\n              PostRequestStatusInterface.RECEIVED\n                ? schoolPost.received_posts\n                  ? schoolPost.received_posts\n                  : 0\n                : 0)\n            : \"-\"}\n        </td>\n        <td>\n          <span\n            className={`px-2 py-1 font-semibold rounded ${\n              schoolPost.requested_post_status ===\n              PostRequestStatusInterface.INITIATED\n                ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                : schoolPost.requested_post_status ===\n                  PostRequestStatusInterface.CONFIRMED\n                ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n            }`}\n          >\n            {schoolPost.requested_post_status ===\n            PostRequestStatusInterface.INITIATED\n              ? \"Pending\"\n              : capitalizeFirstLetter(schoolPost.requested_post_status)}\n          </span>\n        </td>\n        <td className=\"py- text-left\">\n          <div className=\"flex item-center justify-end gap-1\">\n            {schoolPost.requested_post_status ===\n              PostRequestStatusInterface.INITIATED && (\n              <button\n                className=\"\n                btn\n                bg-gray-400\n                text-gray-50\n                hover:bg-gray-600\n                transition\n                ease-out\n                duration-500\n                flex items-center\n              \"\n                title=\"View User Profile\"\n                onClick={() => {\n                  setThisPost(schoolPost);\n                  setModalState(\"CONFIRM\");\n                }}\n              >\n                Reply\n              </button>\n            )}\n            <button\n              className=\"\n                btn\n                btn-blue\n                transition\n                ease-out\n                duration-500\n                flex items-center\n              \"\n              title=\"View User Profile\"\n              onClick={() => {\n                setThisPost(schoolPost);\n                setViewPost(true);\n              }}\n            >\n              Details\n            </button>\n            {/* {schoolPost.requested_post_status ===\n              PostRequestStatusInterface.INITIATED && (\n              <button\n                className=\"btn bg-gray-500 text-white hover:bg-gray-700\"\n                onClick={() => {\n                  setModalState(\"UPDATE\");\n                }}\n                disabled={loadingRequest}\n              >\n                Edit\n              </button>\n            )} */}\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  const doPlacement = async (thisPost: PostSchoolInterface) => {\n    try {\n      const res = await axios.post<any[]>(\n        `${API.PLACEMENT}/doplace/${thisPost.school_id}/${thisPost.position_id}`,\n        { request_id: thisPost.requested_post_id }\n      );\n\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ doPlacement: res });\n        console.log(\"====================================\");\n        props.fetchDistrictPosts(\n          props.auth.user_access.district_id,\n          (status: boolean, message: string) => {\n            if (!status) {\n              if (message.length > 0 && loadingPost) {\n                console.error(\"error loading school post: \", message);\n                props.PushPopupAlert({\n                  title: message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              setLoadingPost(false);\n            }\n          }\n        );\n\n        let msgAlert: string = \"\";\n        if (res.data.length > 0) {\n          if (res.data.length === approvedPosts) {\n            msgAlert = \"All confirmed posts has been placed on school!\";\n          } else {\n            msgAlert = `${res.data.length} of ${approvedPosts} post(s) has been placed on school!`;\n          }\n        } else {\n          msgAlert = \"Post request has been confirmed but no placement done!\";\n        }\n\n        setThisPost(null);\n        setApprovedPosts(0);\n        setModalState(null);\n        props.PushPopupAlert({\n          title: msgAlert,\n          theme:\n            res.data.length > 0\n              ? PopupAlertTheme.success\n              : PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ doPlacement_reply: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const reDoPlacement = async (thisPost: PostSchoolInterface) => {\n    try {\n      const res = await axios.post<any[]>(\n        `${API.PLACEMENT}/doplace/${thisPost.school_id}/${thisPost.position_id}`,\n        { request_id: thisPost.requested_post_id }\n      );\n\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ reDoPlacement: res });\n        console.log(\"====================================\");\n        props.fetchDistrictPosts(\n          props.auth.user_access.district_id,\n          (status: boolean, message: string) => {\n            if (!status) {\n              if (message.length > 0 && loadingPost) {\n                console.error(\"error loading school post: \", message);\n                props.PushPopupAlert({\n                  title: message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              setLoadingPost(false);\n            }\n          }\n        );\n\n        let msgAlert: string = \"\";\n        if (res.data.length > 0) {\n          if (res.data.length === approvedPosts) {\n            msgAlert = \"All confirmed posts has been placed on school!\";\n          } else {\n            msgAlert = `${res.data.length} of ${\n              thisPost.occupied_posts\n                ? thisPost.occupied_posts -\n                  (thisPost.received_posts ? thisPost.received_posts : 0)\n                : 0\n            } post(s) has been placed on school!`;\n          }\n        } else {\n          msgAlert =\n            \"Placement failed, Please wait for the next application period!\";\n        }\n\n        props.PushPopupAlert({\n          title: msgAlert,\n          theme:\n            res.data.length > 0\n              ? PopupAlertTheme.success\n              : PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ doPlacement_reply: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const addSchoolRequest = async (thisPost: PostSchoolInterface) => {\n    let thisSchool = getSchoolById(props.schools, thisPost.school_id);\n    if (thisSchool) {\n      const dataForm: {\n        school_id: string;\n        school_name: string;\n        district_id: string;\n        sector_id: string;\n        province_id: string;\n        gender: \"M\" | \"F\";\n        available_places: {\n          position_id: string;\n          requested_teacher: number;\n        }[];\n      }[] = [\n        {\n          school_id: thisSchool._id,\n          school_name: thisSchool.school_name,\n          district_id: thisSchool.district_id,\n          sector_id: thisSchool.sector_id,\n          province_id: thisSchool.district_id,\n          gender: thisPost.male_number > thisPost.female_number ? \"F\" : \"M\",\n          available_places: [\n            {\n              position_id: thisPost.position_id,\n              requested_teacher: approvedPosts,\n            },\n          ],\n        },\n      ];\n\n      let data = { requested_teachers: dataForm };\n      console.log(\"====================================\");\n      console.log({ requested_teachers: dataForm, data });\n      console.log(\"====================================\");\n\n      try {\n        const res = await axios.post(`${API.PLACEMENT}/requestteachers/`, data);\n\n        if (res) {\n          console.log(\"====================================\");\n          console.log({ addSchoolRequest: res });\n          console.log(\"====================================\");\n          await doPlacement(thisPost);\n        }\n      } catch (error) {\n        console.error({ addSchoolRequest_reply: error });\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    }\n  };\n\n  const submitRequest = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!thisPost) {\n      return;\n    }\n\n    if (approvedPosts < 0) {\n      return setFormError({\n        element: \"approved_posts\",\n        msg: \"Invalid number of approved post\",\n      });\n    }\n\n    if (approvedPosts > thisPost.needed_posts) {\n      return setFormError({\n        element: \"approved_posts\",\n        msg: \"Approved post can't be greater than needed post\",\n      });\n    }\n\n    setLoadingRequest(true);\n    try {\n      if (modalState === \"CONFIRM\") {\n        const res = await axios.patch<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpost/${thisPost.requested_post_id}`,\n          {\n            confirmed_posts: approvedPosts,\n            confirmed_by: props.auth.user.user_id,\n            received_posts: 0,\n            approval_date: new Date(),\n            school_id: thisPost.school_id,\n            position_id: thisPost.position_id,\n            district_id: thisPost.district_id,\n            needed_posts: thisPost.needed_posts,\n            male_number: thisPost.male_number,\n            female_number: thisPost.female_number,\n            description: thisPost.description,\n            occupied_posts: thisPost.occupied_posts,\n            requested_by: props.auth.user.user_id,\n            requested_post_status: PostRequestStatusInterface.CONFIRMED,\n          }\n        );\n        if (res) {\n          // props.updateSchoolPost(\"SCHOOL\", res.data.data);\n          await addSchoolRequest(thisPost);\n        }\n      }\n    } catch (error) {\n      console.error({ post_relpy: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    setLoadingRequest(false);\n  };\n\n  return (\n    <React.Fragment>\n      {/* header title */}\n      <div className=\"flex flex-row items-center gap-4 my-2\">\n        <GiTeacher className=\"text-blue-600 text-5xl md:block hidden\" />\n        <div className=\"w-full\">\n          <div className=\"flex justify-between w-full\">\n            <div className=\"flex flex-col gap-1 justify-between\">\n              <h1 className=\"md:text-4xl text-3xl font-semibold\">\n                Schools requests\n              </h1>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* end header title */}\n      <div className=\"grid md:grid-cols-5 gap-2 bg-white shadow-md p-2\">\n        <div className={`md:col-span-5 rounded`}>\n          <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n            <div className=\"flex flex-col md:flex-row\">\n              <select\n                className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none\"\n                value={filterByPosition}\n                onChange={(e) => setFilterByPosition(e.target.value)}\n              >\n                <option value=\"all\">All Position</option>\n                {props.systemPositions && props.systemPositions.length > 0 ? (\n                  props.systemPositions.map((position, index) => (\n                    <option key={index + 1} value={position.position_id}>\n                      {position.position_title}\n                    </option>\n                  ))\n                ) : (\n                  <option value=\"\">No Position found</option>\n                )}\n              </select>\n            </div>\n          </div>\n          <Table\n            columns={[\n              { columnTitle: \"SCHOOL\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"POSITION\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"REQUEST\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"APPROVED\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"OCCUPIED\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"VACCANTS\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"STATUS\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n            ]}\n            rows={tableData}\n            pagination={true}\n            search={true}\n            thColor=\"gray\"\n          />\n        </div>\n      </div>\n\n      {/* responde Modal */}\n      {modalState && thisPost && props.systemPositions && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => {\n            setThisPost(null);\n            setModalState(null);\n          }}\n          displayClose={true}\n          backDropClose={false}\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-2xl text-gray-500\">\n                  Responding to Requesting Teachers\n                </span>\n              </div>\n            </div>\n          }\n          widthSizeClass={ModalSize.medium}\n          padding={{ title: true, body: false, footer: false }}\n        >\n          <div className=\"px-4 mx-auto mb-4 mt-3\">\n            <form onSubmit={submitRequest}>\n              <div className=\"bg-white\">\n                <div className=\"text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                  <div className=\"flex flex-col\">\n                    <label>School</label>\n                    <input\n                      type=\"text\"\n                      className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                      value={\n                        getSchoolById(props.schools, thisPost.school_id)\n                          ?.school_name\n                      }\n                      placeholder=\"school name\"\n                      disabled\n                    />\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Position</label>\n                    <input\n                      type=\"text\"\n                      className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                      value={\n                        getPositionById(\n                          props.systemPositions,\n                          thisPost.position_id\n                        )\n                          ? getPositionById(\n                              props.systemPositions,\n                              thisPost.position_id\n                            )!.position_title\n                          : \"\"\n                      }\n                      placeholder=\"position title\"\n                      disabled\n                    />\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Needed posts (number)</label>\n                    <input\n                      type=\"number\"\n                      className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                      value={thisPost.needed_posts}\n                      min={1}\n                      placeholder=\"1\"\n                      disabled\n                    />\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Occupation (number)</label>\n                    <input\n                      type=\"number\"\n                      className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                      value={thisPost.occupied_posts}\n                      min={1}\n                      placeholder=\"1\"\n                      disabled\n                    />\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Explanation</label>\n                    <textarea\n                      className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                      placeholder=\"Explanation\"\n                      value={thisPost.description}\n                      rows={2}\n                      disabled\n                    ></textarea>\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Requested date</label>\n                    <input\n                      type=\"text\"\n                      className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                      value={DATE(thisPost.request_date.toString())}\n                      placeholder=\"YYYY/MM/DD\"\n                      disabled\n                    />\n                  </div>\n\n                  <div className=\"flex flex-col\">\n                    <label>Approved posts (number)</label>\n                    <input\n                      type=\"number\"\n                      className={`appearance-none rounded w-full py-1 px-4 border-2 bg-white focus:outline-none focus:bg-gray-100 ${\n                        formError !== null &&\n                        formError.element === \"approved_posts\"\n                          ? \"border-red-500\"\n                          : \"border-gray-700\"\n                      }`}\n                      value={approvedPosts}\n                      onChange={(e) => {\n                        setApprovedPosts(Number(e.target.value));\n                      }}\n                      min={0}\n                      max={thisPost.needed_posts}\n                      placeholder=\"1\"\n                      disabled={loadingRequest}\n                    />\n                    {formError !== null &&\n                      formError.element === \"approved_posts\" && (\n                        <span className=\"text-red-600 font-bold text-xs\">\n                          {formError.msg}\n                        </span>\n                      )}\n                  </div>\n                </div>\n                <div className=\"pt-4 flex justify-between\">\n                  <button\n                    className=\"btn bg-gray-400 text-white hover:bg-gray-600\"\n                    onClick={() => {\n                      setThisPost(null);\n                      setApprovedPosts(0);\n                      setModalState(null);\n                    }}\n                  >\n                    Exit\n                  </button>\n                  <button\n                    className=\"btn bg-primary text-white hover:bg-blue-600\"\n                    disabled={loadingRequest}\n                  >\n                    {loadingRequest ? \"Loading...\" : \"Request\"}\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </Modal>\n      )}\n      {/* End of responde Modal */}\n\n      {viewPost && modalState === null && thisPost && props.systemPositions && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => {\n            setThisPost(null);\n            setViewPost(false);\n          }}\n          displayClose={true}\n          backDropClose={false}\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-2xl text-gray-500\">\n                  Viewing Post Request\n                </span>\n              </div>\n            </div>\n          }\n          widthSizeClass={ModalSize.large}\n          padding={{ title: true, body: false, footer: false }}\n        >\n          <section className=\"px-4 mx-auto mb-4 mt-3 flex items-start\">\n            <section className=\"w-full\">\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Position: </span>\n                <span className=\"font-bold\">\n                  {getPositionById(props.systemPositions, thisPost.position_id)\n                    ? getPositionById(\n                        props.systemPositions,\n                        thisPost.position_id\n                      )!.position_title\n                    : \"Unknown position\"}\n                </span>\n                <button className=\"rounded-full border-2 px-3 border-blue-500 hover:bg-blue-50 hidden\">\n                  more\n                </button>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Requested posts: </span>\n                <span className=\"font-bold text-xl\">\n                  {thisPost.needed_posts}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Confirmed posts: </span>\n                <span className=\"font-bold text-xl\">\n                  {thisPost.confirmed_posts}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Received posts: </span>\n                <span className=\"font-bold text-xl\">\n                  {thisPost.requested_post_status ===\n                  PostRequestStatusInterface.RECEIVED\n                    ? thisPost.received_posts\n                    : \"-\"}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Occupation: </span>\n                <span className=\"font-bold text-xl\">\n                  {thisPost.occupied_posts\n                    ? thisPost.occupied_posts +\n                      (thisPost.requested_post_status ===\n                      PostRequestStatusInterface.RECEIVED\n                        ? thisPost.received_posts\n                          ? thisPost.received_posts\n                          : 0\n                        : 0)\n                    : 0}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Not received posts: </span>\n                <span className=\"font-bold text-xl\">\n                  {props.districtPlacements\n                    ? getPlacementByRequest(\n                        props.districtPlacements,\n                        thisPost.requested_post_id,\n                        PlacedCandidateStatus.REJECTED\n                      ).length\n                    : \"-\"}\n                  {props.districtPlacements &&\n                    getPlacementByRequest(\n                      props.districtPlacements,\n                      thisPost.requested_post_id,\n                      PlacedCandidateStatus.REJECTED\n                    ).length > 0 && (\n                      <button\n                        className=\"font-bold ml-2 py-1 px-4 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                        onClick={() => reDoPlacement(thisPost)}\n                        disabled={loadingRequest}\n                      >\n                        Do placement\n                      </button>\n                    )}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Request reason: </span>\n                <span className=\"font-bold text-xl\">\n                  {thisPost.description}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Status: </span>\n                <span\n                  className={`px-2 py-1 mx-1 font-semibold rounded ${\n                    thisPost.requested_post_status ===\n                    PostRequestStatusInterface.INITIATED\n                      ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                      : thisPost.requested_post_status ===\n                        PostRequestStatusInterface.CONFIRMED\n                      ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                      : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                  }`}\n                >\n                  {thisPost.requested_post_status ===\n                  PostRequestStatusInterface.INITIATED\n                    ? \"Pending\"\n                    : capitalizeFirstLetter(thisPost.requested_post_status)}\n                </span>\n              </div>\n            </section>\n            <div className=\"mb-3 flex items-center justify-end gap-2\">\n              {thisPost.requested_post_status ===\n                PostRequestStatusInterface.INITIATED && (\n                <button\n                  className=\"font-bold py-1 px-4 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                  onClick={() => {\n                    setModalState(\"UPDATE\");\n                  }}\n                  disabled={\n                    thisPost.requested_post_status !==\n                    PostRequestStatusInterface.INITIATED\n                  }\n                >\n                  Edit\n                </button>\n              )}\n            </div>\n          </section>\n        </Modal>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  system_settings,\n}: StoreState): {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  districtPosts: PostSchoolInterface[];\n  districtPlacements: placedCandidateInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    schools: schools.schools,\n    districtPosts: schools.districtPosts,\n    districtPlacements: schools.districtPlacements,\n    systemPositions: system_settings.systemPositions,\n  };\n};\n\nexport const District = connect(mapStateToProps, {\n  getPositions,\n  getSchools,\n  fetchDistrictPosts,\n  getDistrictPlacement,\n  createSchoolPost,\n  updateSchoolPost,\n  PushPopupAlert,\n})(_District);\n"],"sourceRoot":""}
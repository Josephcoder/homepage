{"version":3,"sources":["containers/ApplicationsDashboard/ApplicationHistory/ApplicationHistory.tsx","containers/ApplicationsDashboard/ExamDetails/ExamDetails.tsx","containers/ApplicationsDashboard/ExamStatus/PreparedExams.tsx","containers/ApplicationsDashboard/ExamStatus/ActiveExams.tsx","containers/ApplicationsDashboard/ExamStatus/ExamsDone.tsx","containers/ApplicationsDashboard/Exams.tsx","components/CandidatePlacementCheck/CandidatePlacementCheck.tsx","containers/ApplicationsDashboard/ApplicationsDashboard.tsx","containers/UserDashboard/UserDashboard.tsx","utils/question_bank.ts","components/Navigation/SideNavigation.tsx","components/AnswersDetails/CandidateAnswersDetails.tsx","containers/CandidateExams/CandidateExams.tsx"],"names":["ApplicationHistory","props","className","undefined","applicationHistory","length","map","item","i","DATE","date","comment","ApplicationStatesDescription","find","itm","key","application_status","caption","ExamDetails","setLoading","status","setState","loading","componentDidMount","locationsData","Locations_list","loadAllLocationsData","loadApplicationPeriods","state","this","candidateExam","selected_exam_id","selected_exam_details","doing_exam","to","examDetails","locationDetails","Loading","type","LoadingType","dark","onClick","setSelectedCandidateExam","exam_date","start_time","duration","discription","dangerouslySetInnerHTML","__html","termes","center_id","province_name","district_name","center_name","room_number","proctoring_type","Component","PreparedExams","NotPreparedExamsFilter","selectedPosition","courses","filter","user_exams_done","ex","course","course_id","findExam","PreparedExamsFilter","AllPendingExams","totalPending","selectedExams","loadingExams","course_name","validateExamDate","end_time","ExamTimeStatus","Online","Expired","loadingExamsDone","Waiting","changeLocation","user_status","UserExamStatus","Editing","selectedApplicationDetails","ApplicationStates","Shortlisted","setSelectedCourse","appointmentDetailsModal","periods","selected_period","is_active","id","positions","selected_position","position_id","setSelectedPosition","setDoingExam","InitializeExamDetails","application_session","session_plan_id","district_id","room_id","setLoadingExams","Initiated","total_marks","toFixed","ActiveExams","ActiveExamsFilter","exam_start_time","exam_end_time","check","Paused","Done","Removed","x","selectedCourse","centersModal","setMaxExamModal","ExamsDone","viewMarksDetailsFn","Exam","examTest","user_exams_temp","period","courseSelected","viewMarksDetails","rules","exam_id","exam_paper","ExamsDoneFilter","_PostExams","renderExam","user_id","exam","examStatus","loadExam","redirect","setClaim","claim","closeModal","updateLocationFunction","exams","selected_application","updateLocation","setLoadingExamsDone","showTotalMarks","position","test","numberOfIncomplete","count","findLocation","course_code","location","courseId","current_temp","testDone","findCourse","pendingCourses","InitializationFn","loadExamsDone","auth","user","loadCourses","doExam","exam_answers","claiming","myClaims","getMyClaims","msg","data","alert","displayResults","selectedLocation","applicationHistoryState","selectedExamDetails","CandidateAnswersDetails","showAnswers","applicationPeriods","setSelectedLocationData","ChooseExamCenter","positionCourses","addLocation","parseFloat","findTotalMarks","title","Rejected","CheckIfExamDone","isClaimAllowed","deleteApplication","ClaimFormComponent","setFormState","claim_type","PlansTypeKeys","APPLICATION","file_id","PostExams","connect","prepareExam","loadExamsList","setSelectedPeriod","CandidatePlacementCheck","_ApplicationsDashboard","filteredApplications","applications","Status","searchPeriod","appl","closeApplicationDetails","displayDetailsModal","setDisplayDetailsModal","applicationStatuses","application","output","push","maxExamModal","LoadApplications","a","loadingErr","number_of_incomplete","response","candidateApplications","candidate_applications","axios","get","API","res","AddUserApplication","console","log","Incomplete","application_id","incrementIncomplete","LoadCandidateApplications","applicationError","post","noRoomsApplication","PushPopupAlert","description","theme","PopupAlertTheme","success","errors","field","newArr","removeLocation","message","danger","changeLoadingState","window","confirm","delete","RemoveUserApplication","warning","setShowFilterStatus","showPeriodFilter","loadAllPositions","apply","currentStep","ApplicationStepsTypes","Step3","initiateApplication","Step1","doTestStatus","applicationDetails","selectedApplicationStatus","viewSchools","FC_Access","UserAccessList","MY_APPLICATION","view","position_title","session_plan_name","Pass","checkApplication","SelectUserApplication","Exams","changeLocationError","application_history","SideNavigation","positions_list","active","LoadingV2","NoResult","NoResultThemes","Dark","value","component","createdAt","Modal","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","body","ApplicationPeriods","ApplicationsDashboard","system","UserDashboard","today","moment","tz","TimeZone","getQuestionType","question_types","type_id","check_type","questionTypeElements","element","results","sum","validateCalculatedFormula","formula","characters","el","nextCharacter","convertFromStringToDate","responseDate","dateComponents","split","datePieces","timePieces","Date","parseInt","toDay","toString","examDate","startTime","getDate","getMonth","getFullYear","endTime","getTime","proctoringDefaultRules","rule","_SideNavigation","PageHasSubNav","componentWillUnmount","isAuthenticated","navActive","navigation","children","React","NavToogle","MainItem","icon","MdBrightness1","IconDefined","tomorrow","setDate","useState","compareWithToday","EXAMINATION","tooday","myDate","todayConverted","ChangeLocationComponent","display","setDisplay","_CandidateExams","setloadingExamsDone","loadCandidateExams","setAxiosToken","QBank","candidateExams","errorToText","loadUserProfileDetails","FC_GetProfileDetails","loadUserApplications","successMessage","selPeriod","sex","removeDuplicatesExams","temp","_id","removeDuplicatesNotPreparedExams","setTimeOut","temps","activeExams","selectApplication","selectedExam","preparedExam","school_levels","user_marks","found","duration_min","getMinutesFromTwoDates","timeout","returnString","labels","days","notPreparedExam","CandidateExams"],"mappings":"0aAqCeA,EA7BY,SAACC,GAC1B,OACE,sBAAKC,UAAU,qEAAf,UAEE,oBAAIA,UAAU,gBACd,qBAAKA,UAAU,2CAAf,cAC8BC,IAA7BF,EAAMG,oBACLH,EAAMG,mBAAmBC,OAAS,GAClCJ,EAAMG,mBAAmBE,KAAI,SAACC,EAAMC,GAAP,aAC3B,sBAAiBN,UAAU,oEAA3B,UACE,sBAAKA,UAAU,yDAAf,UACE,sBAAMA,UAAU,gBAAhB,mBACA,sBAAMA,UAAU,YAAhB,SAA6BO,YAAKF,EAAKG,KAAM,mBAE/C,sBAAKR,UAAU,yDAAf,UACE,sBAAMA,UAAU,gBAAhB,qBACA,sBAAMA,UAAU,YAAhB,SAA6BK,EAAKI,aAEpC,sBAAKT,UAAU,yDAAf,UACE,sBAAMA,UAAU,gBAAhB,iCACA,sBAAMA,UAAU,YAAhB,mBAA6BU,IAA6BC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAQR,EAAKS,6BAAvF,aAA6B,EAA+EC,eAXtGT,EAAI,Y,QCsOTU,E,kDAvNb,WAAYjB,GAA0B,IAAD,8BACnC,cAAMA,IAMRkB,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEC,QAASF,KARU,EAUrCG,kBAAoB,WAE4B,OAA5C,EAAKtB,MAAMuB,cAAcC,gBAC0B,IAAnD,EAAKxB,MAAMuB,cAAcC,eAAepB,QAExC,EAAKJ,MAAMyB,qBAAqB,EAAKP,YAGvC,EAAKlB,MAAM0B,uBAAuB,EAAKR,aAfvC,EAAKS,MAAQ,CACXN,SAAS,GAJwB,E,0CAqBrC,WAAU,IAAD,WACP,OACgD,OAA9CO,KAAK5B,MAAM6B,cAAcC,kBAC0B,OAAnDF,KAAK5B,MAAM6B,cAAcE,wBACe,IAAxCH,KAAK5B,MAAM6B,cAAcG,WAElB,cAAC,IAAD,CAAUC,GAAG,aAES,OAA3BL,KAAK5B,MAAMkC,YAEX,qBAAKjC,UAAU,mHAAf,yCAK+BC,IAA/B0B,KAAK5B,MAAMmC,gBAEX,qBAAKlC,UAAU,mHAAf,6CAMF,+BAC0B,IAAvB2B,KAAKD,MAAMN,QACV,qBAAKpB,UAAU,gCAAf,SACE,cAACmC,EAAA,EAAD,CAASC,KAAMC,IAAYC,SAG7B,gCACE,sBAAKtC,UAAU,0CAAf,UACE,sBAAKA,UAAU,mHAAf,UACE,sBAAKA,UAAU,mCAAf,UACE,cAAC,IAAD,CAAQA,UAAU,2BADpB,sBAIA,wBACEuC,QAAS,WAEP,EAAKxC,MAAMkC,aACT,EAAKlC,MAAMyC,yBACT,EAAKzC,MAAMkC,cAGjBG,KAAK,SACLpC,UAAS,cACuC,OAA9C2B,KAAK5B,MAAM6B,cAAcC,iBACrB,oCACA,gCAHG,wCATX,SAeiD,OAA9CF,KAAK5B,MAAM6B,cAAcC,iBACtB,iBACA,kBAGR,sBAAK7B,UAAU,4BAAf,UACE,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,0CAAf,UACE,sBAAMA,UAAU,+BAAhB,wBAGA,sBAAMA,UAAU,0BAAhB,SACGO,YAAKoB,KAAK5B,MAAMkC,YAAYQ,UAAW,qBAI9C,qBAAKzC,UAAU,aAAf,SACE,sBAAKA,UAAU,0CAAf,UACE,sBAAMA,UAAU,+BAAhB,8BAGA,sBAAMA,UAAU,0BAAhB,SACG2B,KAAK5B,MAAMkC,YAAYS,kBAI9B,qBAAK1C,UAAU,aAAf,SACE,sBAAKA,UAAU,0CAAf,UACE,sBAAMA,UAAU,+BAAhB,4BAGA,uBAAMA,UAAU,0BAAhB,UACG2B,KAAK5B,MAAMkC,YAAYU,SAAW,GADrC,SAC+C,IAC5ChB,KAAK5B,MAAMkC,YAAYU,SAAW,GAAK,GACtC,gCAAMhB,KAAK5B,MAAMkC,YAAYU,SAAW,GAAxC,mBAKR,qBAAK3C,UAAU,aAAf,SACE,sBAAKA,UAAU,0BAAf,UACE,sBAAMA,UAAU,+BAAhB,+BAGA,sBAAMA,UAAU,0DAAhB,SACG2B,KAAK5B,MAAMkC,YAAYW,mBAI9B,qBAAK5C,UAAU,aAAf,SACE,sBAAKA,UAAU,0BAAf,UACE,sBAAMA,UAAU,+BAAhB,2CAGA,qBACEA,UAAU,kCACV6C,wBAAyB,CACvBC,OAAQnB,KAAK5B,MAAMkC,YAAYc,qBAO3C,sBAAK/C,UAAU,0CAAf,UACE,qBAAKA,UAAU,mHAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,cAAC,IAAD,CAAcA,UAAU,2BAD1B,4BAKF,sBAAKA,UAAU,iCAAf,UACE,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,8CAAf,UACE,sBAAMA,UAAU,+BAAhB,uBAGA,sBAAMA,UAAU,0BAAhB,SACG2B,KAAK5B,MAAMuB,cAAcC,iBAAzB,UACCI,KAAK5B,MAAMuB,cAAcC,eAAeZ,MACtC,SAACC,GAAD,YACiCX,IAA/B,EAAKF,MAAMmC,iBACXtB,EAAIoC,YACF,EAAKjD,MAAMmC,gBAAgBc,oBALlC,aACC,EAKGC,sBAIX,qBAAKjD,UAAU,aAAf,SACE,sBAAKA,UAAU,8CAAf,UACE,sBAAMA,UAAU,+BAAhB,uBAGA,sBAAMA,UAAU,0BAAhB,SACG2B,KAAK5B,MAAMuB,cAAcC,iBAAzB,UACCI,KAAK5B,MAAMuB,cAAcC,eAAeZ,MACtC,SAACC,GAAD,YACiCX,IAA/B,EAAKF,MAAMmC,iBACXtB,EAAIoC,YACF,EAAKjD,MAAMmC,gBAAgBc,oBALlC,aACC,EAKGE,sBAIX,qBAAKlD,UAAU,aAAf,SACE,sBAAKA,UAAU,8CAAf,UACE,uBAAMA,UAAU,+BAAhB,oBACU,OAEV,sBAAMA,UAAU,0BAAhB,SACG2B,KAAK5B,MAAMmC,gBAAgBiB,mBAIlC,qBAAKnD,UAAU,aAAf,SACE,sBAAKA,UAAU,8CAAf,UACE,uBAAMA,UAAU,+BAAhB,yBACe,OAEf,sBAAMA,UAAU,0BAAhB,SACG2B,KAAK5B,MAAMmC,gBAAgBkB,mBAIlC,qBAAKpD,UAAU,aAAf,SACE,sBAAKA,UAAU,8CAAf,UACE,sBAAMA,UAAU,+BAAhB,6BAGA,sBAAMA,UAAU,0BAAhB,SACG2B,KAAK5B,MAAMmC,gBAAgBmB,sC,GA3MxBC,a,kCC0dXC,G,OAncf,4JAIE,WAAU,IAAD,OACHC,EAAyB7B,KAAK5B,MAAM0D,iBAAiBC,QAAQC,QAC/D,SAAC/C,GAAD,OAGe,IAFb,EAAKb,MAAM6B,cAAcgC,gBAAgBD,QACvC,SAACE,GAAD,OAAQA,EAAGC,SAAWlD,EAAImD,aAC1B5D,QAAuD,OAAvC,EAAKJ,MAAMiE,SAASpD,EAAImD,cAE1CE,EAAsBtC,KAAK5B,MAAM0D,iBAAiBC,QAAQC,QAC5D,SAAC/C,GAAD,OAGe,IAFb,EAAKb,MAAM6B,cAAcgC,gBAAgBD,QACvC,SAACE,GAAD,OAAQA,EAAGC,SAAWlD,EAAImD,aAC1B5D,QAAuD,OAAvC,EAAKJ,MAAMiE,SAASpD,EAAImD,cAE1CG,EAAe,sBAAOD,GAAP,YAA+BT,IAC9CW,EACFX,EAAuBrD,OAAS8D,EAAoB9D,OACtD,OACE,qBAAKH,UAAU,qBAAf,SACE,sBAAKA,UAAU,gCAAf,UACE,sBAAKA,UAAU,+DAAf,UACE,sBAAMA,UAAU,aAAhB,2BACA,sBAAMA,UAAU,sFAAhB,SACmC,OAAhC2B,KAAK5B,MAAM0D,kBACmB,OAA7B9B,KAAK5B,MAAMqE,gBACiB,IAA5BzC,KAAK5B,MAAMsE,cACXF,OAGN,qBAAKnE,UAAU,sBAAf,SACmC,OAAhC2B,KAAK5B,MAAM0D,kBACiB,OAA7B9B,KAAK5B,MAAMqE,gBACiB,IAA5BzC,KAAK5B,MAAMsE,aACT,cAAClC,EAAA,EAAD,IAC6B,IAA3B+B,EAAgB/D,OAClB,sBAAKH,UAAU,kFAAf,UACE,qBAAKA,UAAU,mDAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,gBAAf,gCAGFkE,EAAgB9D,KAAI,SAACC,EAAMC,GAAP,iCAClB,qBAEEN,UAAS,0CAFX,SAIE,sBAAKA,UAAU,6BAAf,UAEE,sBAAKA,UAAU,0EAAf,UACE,qBAAKA,UAAU,mCAAf,SACE,qBACEA,UAAS,wFADX,SAG2C,OAAxC,EAAKD,MAAMiE,SAAS3D,EAAK0D,WACxB,cAAC,IAAD,CAAU/D,UAAU,2BAEpB,cAAC,IAAD,CAA2BA,UAAU,+BAI3C,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAS,mCAAd,SACGK,EAAKiE,cAER,sBAAKtE,UAAU,iDAAf,UACE,uBAAMA,UAAU,wBAAhB,uBACa,OAE4B,OAAxC,EAAKD,MAAMiE,SAAS3D,EAAK0D,WACxB,sBAAK/D,UAAU,mCAAf,UACGuE,YACC,EAAKxE,MAAMiE,SAAS3D,EAAK0D,WAAYtB,UACrC,EAAK1C,MAAMiE,SAAS3D,EAAK0D,WAAYrB,WACrC,EAAK3C,MAAMiE,SAAS3D,EAAK0D,WAAYS,YACjCC,IAAeC,OACnB,sBAAM1E,UAAU,wDAAhB,SACGuE,YACC,EAAKxE,MAAMiE,SAAS3D,EAAK0D,WACtBtB,UACH,EAAK1C,MAAMiE,SAAS3D,EAAK0D,WACtBrB,WACH,EAAK3C,MAAMiE,SAAS3D,EAAK0D,WACtBS,YAGLD,YACA,EAAKxE,MAAMiE,SAAS3D,EAAK0D,WACtBtB,UACH,EAAK1C,MAAMiE,SAAS3D,EAAK0D,WACtBrB,WACH,EAAK3C,MAAMiE,SAAS3D,EAAK0D,WAAYS,YACjCC,IAAeE,QACrB,sBAAM3E,UAAU,mCAAhB,SACGuE,YACC,EAAKxE,MAAMiE,SAAS3D,EAAK0D,WACtBtB,UACH,EAAK1C,MAAMiE,SAAS3D,EAAK0D,WACtBrB,WACH,EAAK3C,MAAMiE,SAAS3D,EAAK0D,WACtBS,YAIP,sBAAMxE,UAAU,SAAhB,SACGuE,YACC,EAAKxE,MAAMiE,SAAS3D,EAAK0D,WACtBtB,UACH,EAAK1C,MAAMiE,SAAS3D,EAAK0D,WACtBrB,WACH,EAAK3C,MAAMiE,SAAS3D,EAAK0D,WACtBS,YAIT,sBAAMxE,UAAU,kCAAhB,SACGO,YACC,EAAKR,MAAMiE,SAAS3D,EAAK0D,WACtBtB,UACH,gBAGJ,sBACEzC,UAAS,qEADX,SAII,EAAKD,MAAMiE,SAAS3D,EAAK0D,WACtBrB,gBAKT,sBAAM1C,UAAU,wBAAhB,8CAQR,qBAAKA,UAAU,mFAAf,SACgC,OAA7B,EAAKD,MAAMqE,cACV,QAGMnE,IAFJ,EAAKF,MAAMqE,cAAczD,MACzB,SAACC,GAAD,OAASA,EAAImD,YAAc1D,EAAK0D,aAElC,qCACE,sBAAK/D,UAAU,iDAAf,UACE,uBAAMA,UAAU,wBAAhB,6BACmB,OAEnB,sBAAMA,UAAU,kCAAhB,SACgC,OAA7B,EAAKD,MAAMqE,cACR,QAGMnE,IAFN,EAAKF,MAAMqE,cAAczD,MACvB,SAACC,GAAD,OAASA,EAAImD,YAAc1D,EAAK0D,eADlC,UAGA,EAAKhE,MAAMqE,cAAczD,MACvB,SAACC,GAAD,OAASA,EAAImD,YAAc1D,EAAK0D,oBAJlC,aAGA,EAEGV,sBAGX,sBAAKrD,UAAU,iDAAf,UAIE,uBAAMA,UAAS,kCAAf,oBACU,IACsB,OAA7B,EAAKD,MAAMqE,cACV,QAGMnE,IAFJ,EAAKF,MAAMqE,cAAczD,MACzB,SAACC,GAAD,OAASA,EAAImD,YAAc1D,EAAK0D,aADhC,UAGF,EAAKhE,MAAMqE,cAAczD,MACvB,SAACC,GAAD,OAASA,EAAImD,YAAc1D,EAAK0D,oBAJhC,aAGF,EAEGZ,YAEH,sBAAMnD,UAAU,iBAAhB,qCAKJ,uBAAMA,UAAS,kCAAf,kBACQ,IACwB,OAA7B,EAAKD,MAAMqE,cACV,QAGMnE,IAFJ,EAAKF,MAAMqE,cAAczD,MACzB,SAACC,GAAD,OAASA,EAAImD,YAAc1D,EAAK0D,aAIf,KAFnB,YAAKhE,MAAMqE,cAAczD,MACvB,SAACC,GAAD,OAASA,EAAImD,YAAc1D,EAAK0D,oBADlC,eAEGX,aACD,sBAAMpD,UAAU,4DAAhB,oEAKA,uBAAMA,UAAU,8CAAhB,gBACM,IADN,UAGI,EAAKD,MAAMqE,cAAczD,MACvB,SAACC,GAAD,OACEA,EAAImD,YAAc1D,EAAK0D,oBAL/B,aAGI,EAGGX,eAKT,sBAAMpD,UAAU,iBAAhB,2CAQR,sBAAKA,UAAU,iDAAf,UACE,cAAC,IAAD,CAAoBA,UAAU,4BAC9B,sBAAMA,UAAU,iCAAhB,uCAON,sBAAKA,UAAU,0FAAf,UACgC,OAA7B,EAAKD,MAAMqE,cACV,QAGMnE,IAFJ,EAAKF,MAAMqE,cAAczD,MACzB,SAACC,GAAD,OAASA,EAAImD,YAAc1D,EAAK0D,aAElC,sBAAK/D,UAAU,gEAAf,WAC+B,IAA5B,EAAKD,MAAMsE,eACoB,IAAhC,EAAKtE,MAAM6E,iBACT,qBAAK5E,UAAU,gEAAf,+BAMMC,IAFJ,EAAKF,MAAM6B,cAAcgC,gBAAgBjD,MACzC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,cAEW,OAAxC,EAAKhE,MAAMiE,SAAS3D,EAAK0D,YACzBQ,YACE,EAAKxE,MAAMiE,SAAS3D,EAAK0D,WAAYtB,UACrC,EAAK1C,MAAMiE,SAAS3D,EAAK0D,WAAYrB,WACrC,EAAK3C,MAAMiE,SAAS3D,EAAK0D,WAAYS,YACjCC,IAAeI,SACmB,OAAxC,EAAK9E,MAAMiE,SAAS3D,EAAK0D,aACzB,qBACExB,QAAS,kBAAM,EAAKxC,MAAM+E,eAAezE,IACzCL,UAAU,6JAFZ,8BAQyB,IAA5B,EAAKD,MAAMsE,eACoB,IAAhC,EAAKtE,MAAM6E,iBACT,qBAAK5E,UAAU,gEAAf,yBAIwC,OAAxC,EAAKD,MAAMiE,SAAS3D,EAAK0D,iBAEvB9D,KADF,YAAKF,MAAMiE,SAAS3D,EAAK0D,kBAAzB,eAAqCD,UAErC,YAAK/D,MAAM6B,cAAcgC,gBAAgBjD,MACvC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,oBAD/B,eAEGgB,eAAgBC,IAAeC,SAClCV,YACE,EAAKxE,MAAMiE,SAAS3D,EAAK0D,WAAYtB,UACrC,EAAK1C,MAAMiE,SAAS3D,EAAK0D,WAAYrB,WACrC,EAAK3C,MAAMiE,SAAS3D,EAAK0D,WAAYS,YACjCC,IAAeC,QACrB,EAAK3E,MAAMmF,2BACRpE,qBACDqE,IAAkBC,aAClB,qBACE7C,QAAS,WACP,EAAKxC,MAAM+D,OAAOJ,SAChB,EAAK3D,MAAMsF,kBACT,EAAKtF,MAAM+D,OAAOJ,QAAQ/C,MACxB,SAACC,GAAD,OACEA,EAAImD,YAAc1D,EAAK0D,cAI7B,OADF,EAAKhE,MAAMiE,SAAS3D,EAAK0D,YAEvB,EAAK5C,SAAS,CACZmE,wBAAyB,CACvBpE,QAAQ,EACRb,KAAM,EAAKN,MAAMiE,SACf3D,EAAK0D,eAKf/D,UAAU,wHApBZ,sBA0ByB,IAA5B,EAAKD,MAAMsE,eACoB,IAAhC,EAAKtE,MAAM6E,iBACT,qBAAK5E,UAAU,gEAAf,yBAIuC,OAAvC,EAAKD,MAAMwF,QAAQC,kBAEjB,IADF,EAAKzF,MAAMwF,QAAQC,gBAAgBC,WAEK,OAAxC,EAAK1F,MAAMiE,SAAS3D,EAAK0D,iBAEvB9D,KADF,YAAKF,MAAMiE,SAAS3D,EAAK0D,kBAAzB,eAAqC2B,KAErCnB,YACE,EAAKxE,MAAMiE,SAAS3D,EAAK0D,WAAYtB,UACrC,EAAK1C,MAAMiE,SAAS3D,EAAK0D,WAAYrB,WACrC,EAAK3C,MAAMiE,SAAS3D,EAAK0D,WAAYS,YACjCC,IAAeC,QACrB,EAAK3E,MAAMmF,2BACRpE,qBACDqE,IAAkBC,aAClB,qBACE7C,QAAS,WAC6B,OAAhC,EAAKxC,MAAM0D,mBAGT,OADF,EAAK1D,MAAM4F,UAAUC,mBAErB,EAAK7F,MAAM4F,UAAUC,kBAClBC,cACD,EAAK9F,MAAM0D,iBAAiBoC,aAE9B,EAAK9F,MAAM+F,oBACT,EAAK/F,MAAM0D,kBAGc,OAA7B,EAAK1D,MAAMqE,eACT,EAAKrE,MAAM+D,OAAOJ,SAClB,EAAK3D,MAAMsF,kBACT,EAAKtF,MAAM+D,OAAOJ,QAAQ/C,MACxB,SAACC,GAAD,OACEA,EAAImD,YAAc1D,EAAK0D,cAGF,OAA7B,EAAKhE,MAAMqE,eAEP,OADF,EAAKrE,MAAMiE,SAAS3D,EAAK0D,YAEzB,EAAKhE,MAAMyC,yBACT,EAAKzC,MAAMiE,SAAS3D,EAAK0D,YAE7B,EAAKhE,MAAMgG,cAAa,GACxB,EAAKhG,MAAMqE,eACT,EAAKrE,MAAMiG,sBACT,EAAKjG,MAAMmF,2BACRe,oBAAoBC,gBACvB7F,EAAK0D,UACL,EAAKhE,MAAMqE,cAAczD,MACvB,SAACC,GAAD,OACEA,EAAImD,YAAc1D,EAAK0D,aACxBoC,YACH,EAAKpG,MAAMqE,cAAczD,MACvB,SAACC,GAAD,OACEA,EAAImD,YAAc1D,EAAK0D,aACxBf,UACH,EAAKjD,MAAMqE,cAAczD,MACvB,SAACC,GAAD,OACEA,EAAImD,YAAc1D,EAAK0D,aACxBqC,QACH,EAAKrG,MAAM0D,kBACX,EACA,EAAK1D,MAAMsG,mBAInBrG,UAAS,sBACP,YAAKD,MAAM6B,cAAcgC,gBAAgBjD,MACvC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,oBAD/B,eAEGgB,eAAgBC,IAAeC,QAC9B,kDACA,qDALG,uEApDX,UA4DG,YAAKlF,MAAM6B,cAAcgC,gBAAgBjD,MACxC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,oBAD9B,eAEEgB,eAAgBC,IAAeC,QAC9B,aACA,iBAIT,EAAKlF,MAAMmF,2BACTpE,qBACDqE,IAAkBmB,WAClB,qBAAKtG,UAAU,iEAAf,yCAMJ,qBAAKA,UAAU,gEAAf,cAGQC,IAFL,EAAKF,MAAM6B,cAAcgC,gBAAgBjD,MACxC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,cAE7B,qBACExB,QAAS,kBAAM,EAAKxC,MAAM+E,eAAezE,IACzCL,UAAU,yIAFZ,oCAWAC,IAFL,EAAKF,MAAM6B,cAAcgC,gBAAgBjD,MACxC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,eAE7B,YAAKhE,MAAM6B,cAAcgC,gBAAgBjD,MACvC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,oBAD/B,eAEGgB,eAAgBC,IAAeC,SAChC,qBAAKjF,UAAU,mCAAf,SACE,qBACEA,UAAS,iEADX,SAGE,sBAAKA,UAAU,sBAAf,UACE,sBAAMA,UAAU,UAAhB,mBACA,uBAAMA,UAAU,0BAAhB,oBACG,EAAKD,MAAM6B,cAAcgC,gBACvBjD,MACC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,oBAHnC,aACG,EAIGwC,YAAYC,QAAQ,GAL1B,qBA5XTlG,EAAI,iBA/C3B,GAAmCgD,c,SCoapBmD,EApaf,4JACE,WAAU,IAAD,OAcHC,EAbsB/E,KAAK5B,MAAM0D,iBAAiBC,QAAQC,QAC5D,SAAC/C,GAAD,OACyC,OAAvC,EAAKb,MAAMiE,SAASpD,EAAImD,YACxB,EAAKhE,MAAM6B,cAAcgC,gBAAgBD,QACvC,SAACE,GAAD,OACEA,EAAGC,SAAWlD,EAAImD,WAClBQ,YACEV,EAAGpB,UACHoB,EAAG8C,gBACH9C,EAAG+C,iBACCnC,IAAeC,UACvBvE,OAAS,KAE6BwD,QAC1C,SAACkD,GAAD,oBAGQ5G,IAFN,EAAKF,MAAM6B,cAAcgC,gBAAgBD,QACvC,SAAC/C,GAAD,OAASA,EAAIkD,SAAW+C,EAAM9C,gBAE/B,YAAKhE,MAAM6B,cAAcgC,gBAAgBjD,MACxC,SAACC,GAAD,OAASA,EAAIkD,SAAW+C,EAAM9C,oBAD/B,eAEEgB,eAAgBC,IAAeC,UAChC,YAAKlF,MAAM6B,cAAcgC,gBAAgBjD,MACvC,SAACC,GAAD,OAASA,EAAIkD,SAAW+C,EAAM9C,oBADhC,eAEGgB,eAAgBC,IAAe8B,WAExC,OACE,mCACGJ,EAAkBvG,OAAS,EAC1B,qBAAKH,UAAU,qBAAf,SACE,sBAAKA,UAAU,gCAAf,UACE,sBAAKA,UAAU,+DAAf,UACE,sBAAMA,UAAU,aAAhB,yBACA,sBAAMA,UAAU,uFAAhB,SACmC,OAAhC2B,KAAK5B,MAAM0D,kBACmB,OAA7B9B,KAAK5B,MAAMqE,gBACiB,IAA5BzC,KAAK5B,MAAMsE,cACXqC,EAAkBvG,YAGxB,qBAAKH,UAAU,sBAAf,SACmC,OAAhC2B,KAAK5B,MAAM0D,kBACiB,OAA7B9B,KAAK5B,MAAMqE,gBACiB,IAA5BzC,KAAK5B,MAAMsE,aACT,cAAClC,EAAA,EAAD,IAC+B,IAA7BuE,EAAkBvG,OACpB,sBAAKH,UAAU,kFAAf,UACE,qBAAKA,UAAU,mDAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,gBAAf,gCAGF0G,EAAkBtG,KAAI,SAACC,EAAMC,GAAP,mCACpB,qBAEEN,UAAS,+EAFX,SAIE,sBAAKA,UAAU,6BAAf,UAEE,sBAAKA,UAAU,0EAAf,eAGQC,IAFL,EAAKF,MAAM6B,cAAcgC,gBAAgBjD,MACxC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,eAE7B,YAAKhE,MAAM6B,cAAcgC,gBAAgBjD,MACvC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,oBAD/B,eAEGgB,eAAgBC,IAAeC,SAChC,qBAAKjF,UAAU,mCAAf,SACE,qBACEA,UAAS,kEADX,SAGE,cAAC,IAAD,CAAqBA,UAAU,sBAMjCC,IAFL,EAAKF,MAAM6B,cAAcgC,gBAAgBjD,MACxC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,eAE7B,YAAKhE,MAAM6B,cAAcgC,gBAAgBjD,MACvC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,oBAD/B,eAEGgB,eAAgBC,IAAe+B,MAChC,qBAAK/G,UAAU,mCAAf,SACE,qBACEA,UAAS,iEADX,SAGE,cAAC,IAAD,CAAeA,UAAU,sBAM3BC,IAFL,EAAKF,MAAM6B,cAAcgC,gBAAgBjD,MACxC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,eAE7B,YAAKhE,MAAM6B,cAAcgC,gBAAgBjD,MACvC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,oBAD/B,eAEGgB,eAAgBC,IAAegC,SAChC,qBAAKhH,UAAU,mCAAf,SACE,qBACEA,UAAS,mEADX,SAGE,cAAC,IAAD,CAAeA,UAAU,sBAM3BC,IAFL,EAAKF,MAAM6B,cAAcgC,gBAAgBjD,MACxC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,eAE7B,YAAKhE,MAAM6B,cAAcgC,gBAAgBjD,MACvC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,oBAD/B,eAEGgB,eAAgBC,IAAe8B,QAChC,qBAAK9G,UAAU,mCAAf,SACE,qBACEA,UAAS,kEADX,SAGE,cAAC,KAAD,CAAqBA,UAAU,sBAMjCC,IAFL,EAAKF,MAAM6B,cAAcgC,gBAAgBjD,MACxC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,cAEW,OAAxC,EAAKhE,MAAMiE,SAAS3D,EAAK0D,iBAEvB9D,KADF,YAAKF,MAAMiE,SAAS3D,EAAK0D,kBAAzB,eAAqC2B,KAEnC,qBAAK1F,UAAU,mCAAf,SACE,qBACEA,UAAS,8EADX,SAGE,cAAC,IAAD,CAAqBA,UAAU,sBAMjCC,IAFL,EAAKF,MAAM6B,cAAcgC,gBAAgBjD,MACxC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,eAEY,OAAxC,EAAKhE,MAAMiE,SAAS3D,EAAK0D,iBAEtB9D,KADF,YAAKF,MAAMiE,SAAS3D,EAAK0D,kBAAzB,eAAqC2B,MAErC,qBAAK1F,UAAU,mCAAf,SACE,qBACEA,UAAS,wFADX,SAGE,cAAC,IAAD,CAA2BA,UAAU,iBAI7C,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAS,mCAAd,SACGK,EAAKiE,cAER,sBAAKtE,UAAU,iDAAf,UACE,uBAAMA,UAAU,wBAAhB,uBACa,OAEb,sBAAKA,UAAU,mCAAf,UACE,sBAAMA,UAAU,mCAAhB,SACGO,YACC,EAAKR,MAAMiE,SAAS3D,EAAK0D,WACtBtB,UACH,gBAGJ,sBACEzC,UAAS,sEADX,SAII,EAAKD,MAAMiE,SAAS3D,EAAK0D,WACtBrB,aAGP,sBACE1C,UAAS,+EADX,mBAII,EAAKD,MAAM6B,cAAcgC,gBAAgBjD,MACvC,SAACsG,GAAD,OAAOA,EAAEnD,SAAWzD,EAAK0D,oBAL/B,aAII,EAEGgB,0BAQf,qBAAK/E,UAAU,mFAAf,SACgC,OAA7B,EAAKD,MAAMqE,cACV,QAGMnE,IAFJ,EAAKF,MAAMqE,cAAczD,MACzB,SAACC,GAAD,OAASA,EAAImD,YAAc1D,EAAK0D,aAElC,qCACE,sBAAK/D,UAAU,iDAAf,UACE,uBAAMA,UAAU,wBAAhB,6BACmB,OAEnB,sBAAMA,UAAU,kCAAhB,SACgC,OAA7B,EAAKD,MAAMqE,cACR,QAIMnE,IAHN,EAAKF,MAAMqE,cAAczD,MACvB,SAACC,GAAD,OACEA,EAAImD,YAAc1D,EAAK0D,eAF3B,UAIA,EAAKhE,MAAMqE,cAAczD,MACvB,SAACC,GAAD,OACEA,EAAImD,YAAc1D,EAAK0D,oBAN3B,aAIA,EAGGV,sBAGX,sBAAKrD,UAAU,iDAAf,UAIE,uBACEA,UAAS,kCADX,oBAGU,IACsB,OAA7B,EAAKD,MAAMqE,cACV,QAGMnE,IAFJ,EAAKF,MAAMqE,cAAczD,MACzB,SAACC,GAAD,OAASA,EAAImD,YAAc1D,EAAK0D,aADhC,UAGF,EAAKhE,MAAMqE,cAAczD,MACvB,SAACC,GAAD,OAASA,EAAImD,YAAc1D,EAAK0D,oBAJhC,aAGF,EAEGZ,YAEH,sBAAMnD,UAAU,iBAAhB,qCAKJ,uBACEA,UAAS,kCADX,kBAGQ,IACwB,OAA7B,EAAKD,MAAMqE,cACV,QAGMnE,IAFJ,EAAKF,MAAMqE,cAAczD,MACzB,SAACC,GAAD,OAASA,EAAImD,YAAc1D,EAAK0D,aAIf,KAFnB,YAAKhE,MAAMqE,cAAczD,MACvB,SAACC,GAAD,OAASA,EAAImD,YAAc1D,EAAK0D,oBADlC,eAEGX,aACD,sBAAMpD,UAAU,4DAAhB,oEAKA,uBAAMA,UAAU,8CAAhB,gBACM,IADN,UAGI,EAAKD,MAAMqE,cAAczD,MACvB,SAACC,GAAD,OACEA,EAAImD,YAAc1D,EAAK0D,oBAL/B,aAGI,EAGGX,eAKT,sBAAMpD,UAAU,iBAAhB,2CAQR,sBAAKA,UAAU,iDAAf,UACE,cAAC,IAAD,CAAoBA,UAAU,4BAC9B,sBAAMA,UAAU,iCAAhB,uCAON,qBAAKA,UAAU,0FAAf,SACgC,OAA7B,EAAKD,MAAMqE,cACV,QAGMnE,IAFJ,EAAKF,MAAMqE,cAAczD,MACzB,SAACC,GAAD,OAASA,EAAImD,YAAc1D,EAAK0D,aAElC,sBAAK/D,UAAU,gEAAf,WAC+B,IAA5B,EAAKD,MAAMsE,eACoB,IAAhC,EAAKtE,MAAM6E,iBACT,qBAAK5E,UAAU,gEAAf,8BAMMC,IAFN,EAAKF,MAAM6B,cAAcgC,gBAAgBjD,MACvC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,cAE7B,qBACExB,QAAS,WACP,EAAKpB,SAAS,CACZ+F,eAAgB7G,EAChB8G,cAAc,IAEhB,EAAKpH,MAAMqH,iBAAgB,IAE7BpH,UAAU,6JARZ,8BAcyB,IAA5B,EAAKD,MAAMsE,eACoB,IAAhC,EAAKtE,MAAM6E,iBACT,qBAAK5E,UAAU,gEAAf,yBAIuC,OAAvC,EAAKD,MAAMwF,QAAQC,kBAEjB,IADF,EAAKzF,MAAMwF,QAAQC,gBAAgBC,WAEK,OAAxC,EAAK1F,MAAMiE,SAAS3D,EAAK0D,iBAEvB9D,KADF,YAAKF,MAAMiE,SAAS3D,EAAK0D,kBAAzB,eAAqC2B,KAErC,EAAK3F,MAAMmF,2BACRpE,qBACDqE,IAAkBC,aAClB,qBACE7C,QAAS,WAE2B,OAAhC,EAAKxC,MAAM0D,mBAIgB,OADzB,EAAK1D,MAAM4F,UACRC,mBACH,EAAK7F,MAAM4F,UAAUC,kBAClBC,cACD,EAAK9F,MAAM0D,iBACRoC,aAEL,EAAK9F,MAAM+F,oBACT,EAAK/F,MAAM0D,kBAGc,OAA7B,EAAK1D,MAAMqE,eACT,EAAKrE,MAAM+D,OAAOJ,SAClB,EAAK3D,MAAMsF,kBACT,EAAKtF,MAAM+D,OAAOJ,QAAQ/C,MACxB,SAACC,GAAD,OACEA,EAAImD,YAAc1D,EAAK0D,cAGF,OAA7B,EAAKhE,MAAMqE,eAGH,OAFN,EAAKrE,MAAMiE,SACT3D,EAAK0D,YAEP,EAAKhE,MAAMyC,yBACT,EAAKzC,MAAMiE,SAAS3D,EAAK0D,YAE7B,EAAKhE,MAAMgG,cAAa,GACxB,EAAKhG,MAAMqE,eACT,EAAKrE,MAAMiG,sBACT,EAAKjG,MACFmF,2BACAe,oBACAC,gBACH7F,EAAK0D,UACL,EAAKhE,MAAMqE,cAAczD,MACvB,SAACC,GAAD,OACEA,EAAImD,YAAc1D,EAAK0D,aACxBoC,YACH,EAAKpG,MAAMqE,cAAczD,MACvB,SAACC,GAAD,OACEA,EAAImD,YAAc1D,EAAK0D,aACxBf,UACH,EAAKjD,MAAMqE,cAAczD,MACvB,SAACC,GAAD,OACEA,EAAImD,YAAc1D,EAAK0D,aACxBqC,QACH,EAAKrG,MAAM0D,kBACX,EACA,EAAK1D,MAAMsG,mBAInBrG,UAAS,mIA1DX,6BAkEN,qBAAKA,UAAU,gEAAf,cAGQC,IAFL,EAAKF,MAAM6B,cAAcgC,gBAAgBjD,MACxC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,cAE7B,qBACExB,QAAS,kBACP,EAAKpB,SAAS,CACZ+F,eAAgB7G,EAChB8G,cAAc,KAGlBnH,UAAU,yIAPZ,qCA9ULM,EAAI,aAqWrB,8BA7ZV,GAAiCgD,aCoYlB+D,EA/Yf,kDACE,WAAYtH,GAAwB,IAAD,8BACjC,cAAMA,IAQRuH,mBAAqB,SAACC,GACpB,IAAMC,EAAW,EAAKzH,MAAM6B,cAAc6F,gBAAgB9G,MACxD,SAACC,GAAD,OAASA,EAAIkD,SAAWyD,EAAKzD,QAAUlD,EAAI8G,SAAWH,EAAKG,UAE7D,QAAiBzH,IAAbuH,EAAwB,CAC1B,IAAIG,EAAiB,EAAK5H,MAAM0D,iBAAiBC,QAAQ/C,MACvD,SAACC,GAAD,OAASA,EAAImD,YAAcyD,EAAS1D,eAEf7D,IAAnB0H,GACF,EAAK5H,MAAM6H,iBAAiB,CAC1B9D,OAAQ0D,EAAS1D,OACjBQ,YAAaqD,EAAerD,YAC5B1B,YAAa4E,EAAS5E,YACtBG,OAAQyE,EAASzE,OACjB8E,MAAOL,EAASK,MAChBH,OAAQH,EAAKG,OACbjF,UAAW8E,EAAK9E,UAChBqF,QAASP,EAAKQ,eAvBpB,EAAKrG,MAAQ,CACXN,SAAS,EACT+F,cAAc,EACdD,eAAgB,MANe,EADrC,0CAgCE,WAAU,IAAD,OACHc,EAAkBrG,KAAK5B,MAAM0D,iBAAiBC,QAAQC,QACxD,SAAC/C,GAAD,OACyC,OAAvC,EAAKb,MAAMiE,SAASpD,EAAImD,YACxB,EAAKhE,MAAM6B,cAAcgC,gBAAgBD,QACvC,SAACE,GAAD,OACEA,EAAGC,SAAWlD,EAAImD,YACjBF,EAAGkB,cAAgBC,IAAe+B,MACjClD,EAAGkB,cAAgBC,IAAegC,SAClCzC,YACEV,EAAGpB,UACHoB,EAAG8C,gBACH9C,EAAG+C,iBACCnC,IAAeE,YACzBxE,OAAS,KAGf,OACE,qBAAKH,UAAU,qBAAf,SACE,sBAAKA,UAAU,gCAAf,UACE,sBAAKA,UAAU,+DAAf,UACE,sBAAMA,UAAU,aAAhB,6BACA,sBAAMA,UAAU,sFAAhB,SACmC,OAAhC2B,KAAK5B,MAAM0D,kBACmB,OAA7B9B,KAAK5B,MAAMqE,gBACiB,IAA5BzC,KAAK5B,MAAMsE,cACX2D,EAAgB7H,YAGtB,qBAAKH,UAAU,sBAAf,SACmC,OAAhC2B,KAAK5B,MAAM0D,kBACiB,OAA7B9B,KAAK5B,MAAMqE,gBACiB,IAA5BzC,KAAK5B,MAAMsE,aACT,cAAClC,EAAA,EAAD,IAC6B,IAA3B6F,EAAgB7H,OAClB,sBAAKH,UAAU,kFAAf,UACE,qBAAKA,UAAU,mDAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,gBAAf,gCAGFgI,EAAgB5H,KAAI,SAACC,EAAMC,GAAP,uCAClB,qBAAiBN,UAAS,mCAA1B,SACE,sBAAKA,UAAU,6BAAf,UAEE,sBAAKA,UAAU,0EAAf,eAGQC,IAFL,EAAKF,MAAM6B,cAAcgC,gBAAgBjD,MACxC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,eAE7B,YAAKhE,MAAM6B,cAAcgC,gBAAgBjD,MACvC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,oBAD/B,eAEGgB,eAAgBC,IAAeC,SAChC,qBAAKjF,UAAU,mCAAf,SACE,qBACEA,UAAS,iEADX,SAGE,cAAC,IAAD,CAAqBA,UAAU,sBAMjCC,IAFL,EAAKF,MAAM6B,cAAcgC,gBAAgBjD,MACxC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,eAE7B,YAAKhE,MAAM6B,cAAcgC,gBAAgBjD,MACvC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,oBAD/B,eAEGgB,eAAgBC,IAAe+B,MAChC,qBAAK/G,UAAU,mCAAf,SACE,qBACEA,UAAS,iEADX,SAGE,cAAC,IAAD,CAAeA,UAAU,sBAM3BC,IAFL,EAAKF,MAAM6B,cAAcgC,gBAAgBjD,MACxC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,eAE7B,YAAKhE,MAAM6B,cAAcgC,gBAAgBjD,MACvC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,oBAD/B,eAEGgB,eAAgBC,IAAegC,SAChC,qBAAKhH,UAAU,mCAAf,SACE,qBACEA,UAAS,iEADX,SAGE,cAAC,IAAD,CAAeA,UAAU,sBAM3BC,IAFL,EAAKF,MAAM6B,cAAcgC,gBAAgBjD,MACxC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,eAE7B,YAAKhE,MAAM6B,cAAcgC,gBAAgBjD,MACvC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,oBAD/B,eAEGgB,eAAgBC,IAAe8B,QAChC,qBAAK9G,UAAU,mCAAf,SACE,qBACEA,UAAS,iEADX,SAGE,cAAC,KAAD,CAAqBA,UAAU,sBAMjCC,IAFL,EAAKF,MAAM6B,cAAcgC,gBAAgBjD,MACxC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,cAEW,OAAxC,EAAKhE,MAAMiE,SAAS3D,EAAK0D,iBAEvB9D,KADF,YAAKF,MAAMiE,SAAS3D,EAAK0D,kBAAzB,eAAqC2B,KAEnC,qBAAK1F,UAAU,mCAAf,SACE,qBACEA,UAAS,8EADX,SAGE,cAAC,IAAD,CAAqBA,UAAU,sBAMjCC,IAFL,EAAKF,MAAM6B,cAAcgC,gBAAgBjD,MACxC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,eAEY,OAAxC,EAAKhE,MAAMiE,SAAS3D,EAAK0D,iBAEtB9D,KADF,YAAKF,MAAMiE,SAAS3D,EAAK0D,kBAAzB,eAAqC2B,MAErC,qBAAK1F,UAAU,mCAAf,SACE,qBACEA,UAAS,wFADX,SAGE,cAAC,IAAD,CAA2BA,UAAU,iBAI7C,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAS,mCAAd,SACGK,EAAKiE,cAER,sBAAKtE,UAAU,iDAAf,UACE,uBAAMA,UAAU,wBAAhB,uBACa,OAEb,sBAAKA,UAAU,mCAAf,UACE,sBAAMA,UAAU,kCAAhB,SACGO,YACC,EAAKR,MAAMiE,SAAS3D,EAAK0D,WAAYtB,UACrC,gBAGJ,sBACEzC,UAAS,qEADX,SAGG,EAAKD,MAAMiE,SAAS3D,EAAK0D,WAAYrB,aAExC,sBACE1C,UAAS,+EADX,cAKQC,IAFL,EAAKF,MAAM6B,cAAcgC,gBAAgBjD,MACxC,SAACsG,GAAD,OAAOA,EAAEnD,SAAWzD,EAAK0D,aAEvBQ,YACE,EAAKxE,MAAM6B,cAAcgC,gBAAgBjD,MACvC,SAACsG,GAAD,OAAOA,EAAEnD,SAAWzD,EAAK0D,aACxBtB,UACH,EAAK1C,MAAM6B,cAAcgC,gBAAgBjD,MACvC,SAACsG,GAAD,OAAOA,EAAEnD,SAAWzD,EAAK0D,aACxB4C,gBACH,EAAK5G,MAAM6B,cAAcgC,gBAAgBjD,MACvC,SAACsG,GAAD,OAAOA,EAAEnD,SAAWzD,EAAK0D,aACxB6C,iBACCnC,IAAeE,UACpB,YAAK5E,MAAM6B,cAAcgC,gBAAgBjD,MACxC,SAACsG,GAAD,OAAOA,EAAEnD,SAAWzD,EAAK0D,oBAD1B,eAEEgB,eAAgBC,IAAeC,UAE9B,YAAKlF,MAAM6B,cAAcgC,gBAAgBjD,MACvC,SAACsG,GAAD,OAAOA,EAAEnD,SAAWzD,EAAK0D,oBAD3B,eAEGgB,eAAgBC,IAAe8B,OAjBtC,UAmBE,EAAK/G,MAAM6B,cAAcgC,gBAAgBjD,MACvC,SAACsG,GAAD,OAAOA,EAAEnD,SAAWzD,EAAK0D,oBApB7B,aAmBE,EAEGgB,YAHH,SAIF,iBAOd,qBAAK/E,UAAU,mFAAf,SACgC,OAA7B,EAAKD,MAAMqE,cACV,QAGMnE,IAFJ,EAAKF,MAAMqE,cAAczD,MACzB,SAACC,GAAD,OAASA,EAAImD,YAAc1D,EAAK0D,aAElC,qCACE,sBAAK/D,UAAU,iDAAf,UACE,uBAAMA,UAAU,wBAAhB,6BACmB,OAEnB,sBAAMA,UAAU,kCAAhB,SACgC,OAA7B,EAAKD,MAAMqE,cACR,QAGMnE,IAFN,EAAKF,MAAMqE,cAAczD,MACvB,SAACC,GAAD,OAASA,EAAImD,YAAc1D,EAAK0D,eADlC,UAGA,EAAKhE,MAAMqE,cAAczD,MACvB,SAACC,GAAD,OAASA,EAAImD,YAAc1D,EAAK0D,oBAJlC,aAGA,EAEGV,sBAGX,sBAAKrD,UAAU,iDAAf,UAIE,uBAAMA,UAAS,kCAAf,oBACU,IACsB,OAA7B,EAAKD,MAAMqE,cACV,QAGMnE,IAFJ,EAAKF,MAAMqE,cAAczD,MACzB,SAACC,GAAD,OAASA,EAAImD,YAAc1D,EAAK0D,aADhC,UAGF,EAAKhE,MAAMqE,cAAczD,MACvB,SAACC,GAAD,OAASA,EAAImD,YAAc1D,EAAK0D,oBAJhC,aAGF,EAEGZ,YAEH,sBAAMnD,UAAU,iBAAhB,qCAKJ,uBAAMA,UAAS,kCAAf,kBACQ,IACwB,OAA7B,EAAKD,MAAMqE,cACV,QAGMnE,IAFJ,EAAKF,MAAMqE,cAAczD,MACzB,SAACC,GAAD,OAASA,EAAImD,YAAc1D,EAAK0D,aAIf,KAFnB,YAAKhE,MAAMqE,cAAczD,MACvB,SAACC,GAAD,OAASA,EAAImD,YAAc1D,EAAK0D,oBADlC,eAEGX,aACD,sBAAMpD,UAAU,4DAAhB,oEAKA,uBAAMA,UAAU,8CAAhB,gBACM,IADN,UAGI,EAAKD,MAAMqE,cAAczD,MACvB,SAACC,GAAD,OACEA,EAAImD,YAAc1D,EAAK0D,oBAL/B,aAGI,EAGGX,eAKT,sBAAMpD,UAAU,iBAAhB,2CAQR,sBAAKA,UAAU,iDAAf,UACE,cAAC,IAAD,CAAoBA,UAAU,4BAC9B,sBAAMA,UAAU,iCAAhB,uCAON,sBAAKA,UAAU,qFAAf,UACgC,OAA7B,EAAKD,MAAMqE,cACV,QAGMnE,IAFJ,EAAKF,MAAMqE,cAAczD,MACzB,SAACC,GAAD,OAASA,EAAImD,YAAc1D,EAAK0D,aAElC,qBAAK/D,UAAU,gEAAf,UAC+B,IAA5B,EAAKD,MAAMsE,eACoB,IAAhC,EAAKtE,MAAM6E,iBACT,qBAAK5E,UAAU,gEAAf,8BAMMC,IAFN,EAAKF,MAAM6B,cAAcgC,gBAAgBjD,MACvC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,cAE7B,qBACExB,QAAS,WACP,EAAKpB,SAAS,CACZ+F,eAAgB7G,EAChB8G,cAAc,IAEhB,EAAKpH,MAAMqH,iBAAgB,IAE7BpH,UAAU,6JARZ,+BAgBN,qBAAKA,UAAU,gEAAf,cAGQC,IAFL,EAAKF,MAAM6B,cAAcgC,gBAAgBjD,MACxC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,cAE7B,qBACExB,QAAS,kBACP,EAAKpB,SAAS,CACZ+F,eAAgB7G,EAChB8G,cAAc,KAGlBnH,UAAU,yIAPZ,oCAgBAC,IAFL,EAAKF,MAAM6B,cAAcgC,gBAAgBjD,MACxC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,cAK7B,qBAAK/D,UAAU,sDAAf,SACE,sBACEA,UAAS,iEADX,UAGE,sBAAKA,UAAU,sBAAf,UACE,sBAAMA,UAAU,UAAhB,mBACA,uBAAMA,UAAU,0BAAhB,oBACG,EAAKD,MAAM6B,cAAcgC,gBACvBjD,MAAK,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,oBAFvC,aACG,EAEGwC,YAAYC,QAAQ,GAH1B,UAOF,qBACEjE,QAAS,kBACP,EAAK+E,mBACH,EAAKvH,MAAM6B,cAAcgC,gBAAgBjD,MACvC,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,eAInC/D,UAAU,qFARZ,iCAzSFM,EAAI,iBA3E9B,GAA+BgD,a,4CCkGzB2E,E,kDACJ,WAAYlI,GAAwB,IAAD,8BACjC,cAAMA,IAyBRmI,WAAa,SAACC,EAAiBC,GAC7BA,EAAKlH,OAASmH,IAAWpD,QACzB,EAAKlF,MAAMuI,SAASH,EAASC,GAC7B,EAAKjH,SAAS,CAAEoH,UAAU,KA7BO,EAgCnCC,SAAW,SAACtH,GACV,EAAKC,SAAS,CAAEsH,MAAOvH,KAjCU,EAoCnCwH,WAAa,WACX,EAAKvH,SAAS,CAAEgG,cAAc,IAC9B,EAAKpH,MAAMqH,iBAAgB,IAtCM,EAyCnCuB,uBAAyB,SAACC,GACgB,OAApC,EAAK7I,MAAM8I,sBACb,EAAK9I,MAAM+I,eAAe,EAAK/I,MAAM8I,qBAAsBD,IA3C5B,EA+CnC3H,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEC,QAASF,KAhDQ,EAkDnCmF,gBAAkB,SAACnF,GACjB,EAAKC,SAAS,CAAEkD,aAAcnD,KAnDG,EAqDnC6H,oBAAsB,SAAC7H,GACrB,EAAKC,SAAS,CAAEyD,iBAAkB1D,KAtDD,EAyDnC8H,eAAiB,SAACC,GAAoC,IAAD,gBAClCA,EAASvF,SADyB,yBAC1CrD,EAD0C,QAE7C6I,EAAO,EAAKnJ,MAAM6B,cAAcgC,gBAAgBjD,MAClD,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAK0D,aAE/B,QAAa9D,IAATiJ,IAEAA,EAAKnE,cAAgBC,IAAe8B,QACpCoC,EAAKnE,cAAgBC,IAAeC,SAEpC,MAAM,CAAN,GAAO,IATb,2BAAmC,CAAC,IAAD,yCADgB,8BAcnD,OAAO,GAvE0B,EA0EnCkE,mBAAqB,SACnBP,EACAlF,GAQA,IAAI0F,EAAgB,EADjB,WAEM9I,GAGS,IADdsI,EAAMjF,QAAO,SAACtD,GAAD,OAAUA,EAAK0D,YAAcL,EAAQpD,GAAGyD,aAClD5D,SAEHiJ,GAAgB,IALpB,IAAK,IAAI9I,KAAKoD,EAAU,EAAfpD,GAQT,OAAO8I,GA7F0B,EAgGnCC,aAAe,SACbtF,EACAO,EACAgF,EACAC,EACAzB,GAEA,OAAO,EAAKa,uBAAuB,CACjC,CACE5E,UAAWA,EACXV,gBAAiB,SACjBL,UAAWuG,EAASvG,UACpBmD,YAAaoD,EAASpD,gBA5GO,EAiHnCnC,SAAW,SAACwF,GACV,GAAiD,OAA7C,EAAKzJ,MAAM6B,cAAc6F,gBAA0B,CACrD,IAAIgC,EAAe,EAAK1J,MAAM6B,cAAc6F,gBAAgB9G,MAC1D,SAACC,GAAD,OAASA,EAAIkD,SAAW0F,KAEtBE,EAAW,EAAK3J,MAAM6B,cAAcgC,gBAAgBjD,MACtD,SAACC,GAAD,OAASA,EAAIkD,SAAW0F,KAE1B,QACmBvJ,IAAjBwJ,SACcxJ,IAAbyJ,GACCA,EAAS3E,cAAgBC,IAAeC,SACxCyE,EAAS3E,cAAgBC,IAAe8B,QACxC4C,EAAS3E,cAAgBC,IAAe+B,MACxC2C,EAAS3E,cAAgBC,IAAegC,SAE1C,OAAOyC,EAGX,OAAO,MApI0B,EAuInCE,WAAa,SAAC5F,GACZ,GAAiC,OAA7B,EAAKhE,MAAMqE,cAAwB,CACrC,IAAI6C,EACF,EAAKlH,MAAMqE,cAAczD,MACvB,SAACC,GAAD,OACE,EAAKc,MAAM4D,yBAA2B1E,EAAImD,YAAcA,KAE9D,QAAU9D,IAANgH,GAAyB,OAANA,EACrB,OAAOA,EAGX,OAAO,MAlJ0B,EAqJnC2C,eAAiB,WACf,IADqB,EACjBR,EAAQ,EADS,cAEF,EAAKrJ,MAAM0D,iBAAiBC,SAF1B,yBAEZI,EAFY,QAG8B,OAA7C,EAAK/D,MAAM6B,cAAc6F,uBAKVxH,IAHF,EAAKF,MAAM6B,cAAcgC,gBAAgBjD,MACtD,SAACC,GAAD,OAASA,EAAIkD,SAAWA,EAAOC,eAG/BqF,GAAgB,KAPtB,2BAAyD,IAFpC,8BAarB,OAAOA,GAlK0B,EAqKnCtE,eAAiB,SAACzE,GAChB,EAAKc,SAAS,CAAE+F,eAAgB7G,EAAM8G,cAAc,IACpD,EAAKpH,MAAMqH,iBAAgB,IAvKM,EA0KnCyC,iBAAmB,WACjB,GACyC,OAAvC,EAAK9J,MAAMwF,QAAQC,iBACa,OAAhC,EAAKzF,MAAM0D,iBACX,CACA,EAAK1D,MAAM+J,cACT,EAAK/J,MAAMwF,QAAQC,gBAAgBU,gBACnC,EAAKnG,MAAMgK,KAAKC,KAAK7B,QACrB,EAAKY,qBAJP,oBAOmB,EAAKhJ,MAAM0D,iBAAiBC,SAP/C,yBAOSI,EAPT,QAWE,QAAiB7D,IAHF,EAAKF,MAAM6B,cAAc6F,gBAAgB9G,MACtD,SAACC,GAAD,OAASA,EAAIkD,SAAWA,EAAOC,aAEL,CAAC,IAAD,EACtBf,EAAS,UAAG,EAAKjD,MAAMqE,qBAAd,aAAG,EAA0BzD,MACxC,SAACC,GAAD,OAASA,EAAImD,YAAcD,EAAOC,aAEpC,QAAkB9D,IAAd+C,EAEF,OADA,EAAKjD,MAAMsF,kBAAkBvB,GACvB,CAAN,EAAO,EAAK/D,MAAMiG,sBAChB,EAAKjG,MAAMwF,QAAQC,gBAAgBU,gBACnCpC,EAAOC,UACPf,EAAUmD,YACVnD,EAAUA,UACVA,EAAUoD,QACV,EAAKrG,MAAM0D,kBACX,EACA,EAAK4C,oBAlBb,2BAAwD,CAAC,IAAD,yCAPxD,iCA9K+B,EAgNnChF,kBAAoB,WAClB,EAAKtB,MAAM0B,uBAAuB,EAAKR,YAEP,OAA9B,EAAKlB,MAAM+D,OAAOJ,SACmB,IAArC,EAAK3D,MAAM+D,OAAOJ,QAAQvD,QAE1B,EAAKJ,MAAMkK,YAAY,EAAKhJ,YAE9B,EAAK4I,mBACD,EAAK9J,MAAMmK,OAAOC,cAChB,EAAKpK,MAAMmK,OAAOC,aAAajJ,SAAWmH,IAAWpD,SACvD,EAAK9D,SAAS,CAAEoH,UAAU,IAIK,OAAjC,EAAKxI,MAAMqK,SAASC,UACmB,OAAvC,EAAKtK,MAAMwF,QAAQC,iBAEnB,EAAKzF,MAAMuK,YACT,EAAKvK,MAAMgK,KAAKC,KAAK7B,QACrB,EAAKpI,MAAMwF,QAAQC,gBAAgBU,iBACnC,SAAChF,EAAiBqJ,EAAaC,GAC7B,EAAKrJ,SAAS,CAAEC,QAASF,IACb,KAARqJ,GACFE,MAAMF,OArOd,EAAK7I,MAAQ,CACX4D,wBAAyB,CACvBpE,QAAQ,EACRb,KAAM,MAERkI,UAAU,EACVmC,gBAAgB,EAChB5F,eAAgB,CACd5D,QAAQ,EACRqI,SAAU,MAEZpC,cAAc,EACdD,eAAgB,KAChByD,iBAAkB,KAClBC,yBAAyB,EACzBxJ,SAAS,EACTiD,cAAc,EACdO,kBAAkB,EAClB6D,OAAO,EACPoC,oBAAqB,MAtBU,E,0CA+OnC,WAAU,IAAD,eACP,OACgD,OAA9ClJ,KAAK5B,MAAM6B,cAAcC,kBAC0B,OAAnDF,KAAK5B,MAAM6B,cAAcE,wBACgB,IAAxCH,KAAK5B,MAAM6B,cAAcG,aACE,IAA1BJ,KAAK5B,MAAMgC,eAKW,IAAxBJ,KAAKD,MAAM6G,WAC8B,IAAxC5G,KAAK5B,MAAM6B,cAAcG,aACE,IAA1BJ,KAAK5B,MAAMgC,aAKU,IAAvBJ,KAAK5B,MAAMqB,UACiB,IAA5BO,KAAKD,MAAM2C,eACqB,IAAhC1C,KAAKD,MAAMkD,iBAGT,sBAAK5E,UAAU,4DAAf,UACE,sBAAMA,UAAU,qBAAhB,qCACA,cAACmC,EAAA,EAAD,OAI8B,OAA7BR,KAAK5B,MAAMqE,cAChB,mBAEA,cAAC,WAAD,UACsC,OAAnCzC,KAAKD,MAAMmJ,oBACV,mCACE,sBAAK7K,UAAU,oGAAf,UACE,qBAAKA,UAAU,8EAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,sBAAKA,UAAU,+DAAf,UACE,sBAAMA,UAAU,kCAAhB,kCAGA,qBAAKA,UAAU,0JAAf,SACE,cAAC,IAAD,CACEA,UAAU,yCACVuC,QAAS,WACP,EAAKpB,SAAS,CACZ0J,oBAAqB,mBAQnC,cAACC,EAAA,EAAD,CACEhD,QAASnG,KAAKD,MAAMmJ,oBACpBE,aAAa,UAI6B,IAA9CpJ,KAAKD,MAAM4D,wBAAwBpE,QACO,OAA5CS,KAAKD,MAAM4D,wBAAwBjF,KACnC,mCACE,sBAAKL,UAAU,oGAAf,UACE,qBAAKA,UAAU,8EAAf,SACE,sBAAKA,UAAU,+DAAf,UACE,uBAAMA,UAAU,kCAAhB,kBACQ,IACuC,OAA5C2B,KAAKD,MAAM4D,wBAAwBjF,MAClC,6CAEIsB,KAAKgI,WACHhI,KAAKD,MAAM4D,wBAAwBjF,KAAMyD,eAH/C,aAEI,EAEGQ,iBAKX,qBAAKtE,UAAU,0JAAf,SACE,cAAC,IAAD,CACEA,UAAU,yCACVuC,QAAS,kBACP,EAAKpB,SAAS,CACZmE,wBAAyB,CACvBpE,QAAQ,EACRb,KAAM,MAERqK,gBAAgB,cAQ5B,OADC/I,KAAKqC,SAASrC,KAAKD,MAAM4D,wBAAwBjF,KAAKyD,QAErD,qBAAK9D,UAAU,mHAAf,gDAGE2B,KAAK5B,MAAMwF,QAAQyF,qBAMJ,KALhB,UAAArJ,KAAK5B,MAAMwF,QAAQyF,mBAAmBrK,MACrC,SAACC,GAAD,OACE,EAAKc,MAAM4D,wBAAwBjF,MACnCO,EAAIsF,kBACF,EAAKxE,MAAM4D,wBAAwBjF,KAAKqH,iBAJ7C,eAKEjC,iBAMgBxF,KALjB,UAAA0B,KAAK5B,MAAMwF,QAAQyF,mBAAmBrK,MACpC,SAACC,GAAD,OACE,EAAKc,MAAM4D,wBAAwBjF,MACnCO,EAAIsF,kBACF,EAAKxE,MAAM4D,wBAAwBjF,KAAKqH,iBAJ9C,eAKGjC,WAaL,cAAC,EAAD,CACEvD,gBAAiBP,KAAK5B,MAAMqE,cAAczD,MACxC,SAACC,GAAD,OACE,EAAKc,MAAM4D,wBAAwBjF,MACnCO,EAAImD,YACF,EAAKrC,MAAM4D,wBAAwBjF,KAAKyD,UAE9C7B,YAAaN,KAAKqC,SAChBrC,KAAKD,MAAM4D,wBAAwBjF,KAAKyD,QAE1CxC,cAAeK,KAAK5B,MAAMuB,cAC1BE,qBAAsBG,KAAK5B,MAAMyB,qBACjCyJ,wBAAyBtJ,KAAK5B,MAAMkL,wBACpC1F,QAAS5D,KAAK5B,MAAMwF,QACpB9D,uBAAwBE,KAAK5B,MAAM0B,uBACnCG,cAAeD,KAAK5B,MAAM6B,cAC1BY,yBAA0Bb,KAAK5B,MAAMyC,2BA5BvC,sBAAKxC,UAAU,8IAAf,UACE,kEACA,qBACEuC,QAAS,kBACP,EAAKxC,MAAM0B,uBAAuB,EAAKR,aAEzCjB,UAAU,wFAJZ,6BA+BsB,IAA5B2B,KAAKD,MAAMyF,cACiB,OAA9BxF,KAAKD,MAAMwF,eACX,sBAAKlH,UAAU,oGAAf,UACE,qBAAKA,UAAU,8EAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,sBAAKA,UAAU,+DAAf,UACE,sBAAMA,UAAU,kCAAhB,kCAGA,qBAAKA,UAAU,0JAAf,SACE,cAAC,IAAD,CACEA,UAAU,yCACVuC,QAAS,WACP,EAAKpB,SAAS,CACZgG,cAAc,EACdD,eAAgB,mBAQ9B,cAACgE,EAAA,EAAD,CACEC,gBAAiBxJ,KAAKD,MAAMwF,eAC5BkE,YAAazJ,KAAK0H,aAClBX,WAAY/G,KAAK+G,iBAGoB,IAAvC/G,KAAKD,MAAMkJ,6BACqB3K,IAAlC0B,KAAK5B,MAAMG,mBACT,qBAAKF,UAAU,iDAAf,2CAIA,sBAAKA,UAAU,6GAAf,UACE,qBAAKA,UAAU,yEAAf,SACE,sBAAKA,UAAU,+DAAf,UACE,sBAAMA,UAAU,kCAAhB,iCAGA,qBAAKA,UAAU,0JAAf,SACE,cAAC,IAAD,CACEA,UAAU,yCACVuC,QAAS,kBACP,EAAKpB,SAAS,CAAEyJ,yBAAyB,cAMnD,cAAC,EAAD,CACE1K,mBAAoByB,KAAK5B,MAAMG,wBAKrC,sBAAKF,UAAU,GAAf,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,yEAAf,UACE,sBAAKA,UAAU,qDAAf,UACE,uBAAMA,UAAU,gEAAhB,oBACU,IACR,sBAAMA,UAAU,yCAAhB,mBAEI2B,KAAK5B,MAAMmF,kCAFf,aAEI,EACIpE,wBAIV,sBACEyB,QAAS,kBACP,EAAKpB,SAAS,CAAEyJ,yBAAyB,KAE3C5K,UAAU,kLAJZ,UAME,cAAC,IAAD,CAAWA,UAAU,YACrB,kEAGJ,sBACEA,UAAS,eACP2B,KAAKiI,iBAAmB,EAAI,cAAgB,cADrC,kFADX,UAKE,qBAAK5J,UAAU,+CAAf,SACE,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,qEAAhB,mBAGA,sBAAMA,UAAU,qEAAhB,SACG2B,KAAK5B,MAAMqE,cAAcjE,gBAKjCwB,KAAKiI,iBAAmB,GACvB,qBAAK5J,UAAU,+CAAf,SACE,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,qEAAhB,qBAGA,sBAAMA,UAAU,qEAAhB,SACmC,OAAhC2B,KAAK5B,MAAM0D,kBACV9B,KAAKiI,0BAMjB,qBAAK5J,UAAU,+CAAf,SACE,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,qEAAhB,0BAIA,IADC2B,KAAKqH,eAAerH,KAAK5B,MAAM0D,kBAG9B,uBAAMzD,UAAU,qEAAhB,UACGqL,WACCC,YACE3J,KAAK5B,MAAM0D,iBAAiBC,QAC5B/B,KAAK5B,MAAM6B,cAAcgC,kBAEzB,GAEEyH,WACEC,YACE3J,KAAK5B,MAAM0D,iBAAiBC,QAC5B/B,KAAK5B,MAAM6B,cAAcgC,kBAEzBjC,KAAK5B,MAAM0D,iBAAiBC,QAAQvD,QACxCqG,QAAQ,GACV,EAfN,OAmBA,qBACE+E,MAAM,oEACNvL,UAAU,yDAFZ,iCAYZ,sBAAKA,UAAU,yGAAf,UACG2B,KAAK5B,MAAMmF,4BACZvD,KAAK5B,MAAMmF,2BAA2BpE,qBACpCqE,IAAkBqG,SAClB,sBAAKxL,UAAU,2CAAf,UACE,cAAC,IAAD,CAAmBA,UAAU,aAC7B,mDAGF,+BAC+B,IAA5B2B,KAAKD,MAAM2C,eACoB,IAAhC1C,KAAKD,MAAMkD,mBAIL,IAHN6G,YACE9J,KAAK5B,MAAM0D,iBAAiBC,QAC5B/B,KAAK5B,MAAM6B,cAAcgC,kBAE3BjC,KAAK5B,MAAMwF,QAAQC,iBACnB7D,KAAK5B,MAAM8I,sBACXlH,KAAK5B,MAAMqK,SAASC,WAKd,IAJNqB,YACE/J,KAAK5B,MAAMqK,SAASC,SACpB1I,KAAK5B,MAAMwF,QAAQC,gBAAgBU,gBACnCvE,KAAK5B,MAAM8I,sBAEX,sBACEtG,QAAS,kBAAM,EAAKiG,UAAU,EAAK9G,MAAM+G,QACzCzI,UAAU,wKAFZ,UAIE,cAAC,IAAD,CAAiBA,UAAU,aAC3B,sBAAMA,UAAU,UAAhB,0BAEiC,OAAjC2B,KAAK5B,MAAMqK,SAASC,SACtB,6CAEA1I,KAAK5B,MAAMqK,SAASC,SAASlK,OAAS,GACpC,sBACEoC,QAAS,kBAAM,EAAKiG,UAAU,EAAK9G,MAAM+G,QACzCzI,UAAU,+FAFZ,UAIE,cAAC,IAAD,CAAiBA,UAAU,aAC3B,sBAAMA,UAAU,UAAhB,UACwB,IAArB2B,KAAKD,MAAM+G,MACR,eACA,6BAOa,IAA5B9G,KAAKD,MAAM2C,eACsB,IAAhC1C,KAAKD,MAAMkD,mBAIL,IAHN6G,YACE9J,KAAK5B,MAAM0D,iBAAiBC,QAC5B/B,KAAK5B,MAAM6B,cAAcgC,kBAEzB,sBACErB,QAAS,kBACP,EAAKxC,MAAM8I,sBACX,EAAK9I,MAAM4L,kBACT,EAAK5L,MAAM8I,uBAGf7I,UAAU,iHAPZ,UASE,cAAC,IAAD,CAAWA,UAAU,aACrB,sBAAMA,UAAU,UAAhB,uCAIc,IAArB2B,KAAKD,MAAM+G,OAC0B,OAApC9G,KAAK5B,MAAM8I,sBACT,qBAAK7I,UAAU,gCAAf,SACE,cAAC4L,EAAA,EAAD,CACEC,aAAclK,KAAK6G,SACnBsD,WAAYC,IAAcC,YAC1BC,QAAStK,KAAK5B,MAAM8I,4BAK7BlH,KAAK5B,MAAMmF,4BACVvD,KAAK5B,MAAMmF,2BAA2BpE,qBACpCqE,IAAkBqG,UAClB,qCACE,cAAC,EAAD,CACE/H,iBAAkB9B,KAAK5B,MAAM0D,iBAC7BW,cAAezC,KAAK5B,MAAMqE,cAC1BJ,SAAUrC,KAAKqC,SACfK,aAAc1C,KAAKD,MAAM2C,aACzBO,iBAAkBjD,KAAKD,MAAMkD,iBAC7BwC,gBAAiBzF,KAAK5B,MAAMqH,gBAC5BtD,OAAQnC,KAAK5B,MAAM+D,OACnBuB,kBAAmB1D,KAAK5B,MAAMsF,kBAC9BzD,cAAeD,KAAK5B,MAAM6B,cAC1B+D,UAAWhE,KAAK5B,MAAM4F,UACtBJ,QAAS5D,KAAK5B,MAAMwF,QACpBO,oBAAqBnE,KAAK5B,MAAM+F,oBAChCtD,yBACEb,KAAK5B,MAAMyC,yBAEb0C,2BACEvD,KAAK5B,MAAMmF,2BAEba,aAAcpE,KAAK5B,MAAMgG,aACzBC,sBAAuBrE,KAAK5B,MAAMiG,sBAClCK,gBAAiB1E,KAAK0E,kBAExB,cAAC,EAAD,CACE5C,iBAAkB9B,KAAK5B,MAAM0D,iBAC7BW,cAAezC,KAAK5B,MAAMqE,cAC1BJ,SAAUrC,KAAKqC,SACfK,aAAc1C,KAAKD,MAAM2C,aACzBO,iBAAkBjD,KAAKD,MAAMkD,iBAC7BwC,gBAAiBzF,KAAK5B,MAAMqH,gBAC5BtD,OAAQnC,KAAK5B,MAAM+D,OACnBuB,kBAAmB1D,KAAK5B,MAAMsF,kBAC9BzD,cAAeD,KAAK5B,MAAM6B,cAC1B+D,UAAWhE,KAAK5B,MAAM4F,UACtBJ,QAAS5D,KAAK5B,MAAMwF,QACpBO,oBAAqBnE,KAAK5B,MAAM+F,oBAChCtD,yBACEb,KAAK5B,MAAMyC,yBAEbsC,eAAgBnD,KAAKmD,eACrBI,2BACEvD,KAAK5B,MAAMmF,2BAEba,aAAcpE,KAAK5B,MAAMgG,aACzBC,sBAAuBrE,KAAK5B,MAAMiG,sBAClCK,gBAAiB1E,KAAK0E,kBAExB,cAAC,EAAD,CACE5C,iBAAkB9B,KAAK5B,MAAM0D,iBAC7BW,cAAezC,KAAK5B,MAAMqE,cAC1BJ,SAAUrC,KAAKqC,SACfK,aAAc1C,KAAKD,MAAM2C,aACzBO,iBAAkBjD,KAAKD,MAAMkD,iBAC7BwC,gBAAiBzF,KAAK5B,MAAMqH,gBAC5BtD,OAAQnC,KAAK5B,MAAM+D,OACnBuB,kBAAmB1D,KAAK5B,MAAMsF,kBAC9BzD,cAAeD,KAAK5B,MAAM6B,cAC1B+D,UAAWhE,KAAK5B,MAAM4F,UACtBJ,QAAS5D,KAAK5B,MAAMwF,QACpBO,oBAAqBnE,KAAK5B,MAAM+F,oBAChCtD,yBACEb,KAAK5B,MAAMyC,yBAEboF,iBAAkB,SAChBiD,GAEA,EAAK1J,SAAS,CACZ0J,oBAAqBA,eA1bhC,cAAC,IAAD,CAAU7I,GAAG,iB,GAvPDsB,aAgvBV4I,EAhBGC,aAlCM,SAAC,GAqBvB,MAAO,CACLpC,KAFC,EAnBHA,KAsBEG,OAHC,EAlBHA,OAsBEkC,YAJC,EAjBHA,YAsBE9K,cALC,EAhBHA,cAsBEiE,QANC,EAfHA,QAsBE3D,cAPC,EAdHA,cAsBEkC,OARC,EAbHA,OAsBE6B,UATC,EAZHA,UAsBEyE,SAVC,EAXHA,YAyByC,CACzC9B,cACA+D,mBACA7K,0BACAyJ,6BACAxJ,4BACAe,8BACAyH,iBACA5E,uBACAW,2BACAsG,uBACAxG,yBACAgE,mBACAQ,iBAbgB6B,CAcflE,G,8FChzBYsE,GApBf,kDAIE,WAAYxM,GAAsC,IAAD,8BAC/C,cAAMA,IAMRkB,WAAa,SAACS,GACZ,EAAKP,SAAS,CAAEC,QAASM,KALzB,EAAKA,MAAQ,CACXN,SAAS,GAJoC,EAJnD,0CAeE,WACE,OAAO,gEAhBX,GAA6CkC,aCgFvCkJ,G,kDAIJ,WAAYzM,GAAoC,IAAD,8BAC7C,cAAMA,IAsBRkB,WAAa,SAACS,GACZ,EAAKP,SAAS,CAAEC,QAASM,KAxBoB,EA2B/C+K,qBAAuB,SACrBC,EACAC,EACAC,GAEA,IAAIC,EAUJ,OAREA,OADmB5M,IAAjB2M,GAA+C,OAAjBA,EACzBF,EAAa/I,QAClB,SAAC/C,GAAD,OACEA,EAAIqF,oBAAoBC,kBACxB0G,EAAa1G,mBAGVwG,EAEM,OAAXC,EACKE,EAEAA,EAAKlJ,QAAO,SAACtD,GAAD,OAAUA,EAAKS,qBAAuB6L,MA7Cd,EAiD/CG,wBAA0B,WACxB,EAAK3L,SAAS,CAAE0H,qBAAsB,OACtC,EAAK1H,SAAS,CAAEsC,iBAAkB,KAAMoF,qBAAsB,OAC9D,EAAK1H,SAAS,CAAEiD,cAAe,OAC/B,EAAKjD,SAAS,CAAE4L,qBAAqB,KArDQ,EAwD/CC,uBAAyB,SAAC9L,GACxB,EAAKC,SAAS,CAAE4L,oBAAqB7L,KAzDQ,EA4D/C+L,oBAAsB,SACpBC,GAEA,IAAIC,EACF,GAFgE,WAGzD7M,GACP6M,EAAOC,KAAK,CACV7B,MAAO7K,IAA6BJ,GAAGS,QACvCqI,MAAO8D,EAAYvJ,QACjB,SAAC/C,GAAD,OACEA,EAAIE,qBAAuBJ,IAA6BJ,GAAGO,OAC7DV,OACFe,OAAQR,IAA6BJ,GAAGO,OAP5C,IAAK,IAAIP,KAAKI,IAA+B,EAApCJ,GAUT,OAAO6M,GA3EsC,EA8E/C/F,gBAAkB,SAAClG,GACjB,EAAKC,SAAS,CAAEkM,aAAcnM,KA/Ee,EAkF/CoM,iBAlF+C,sBAkF5B,0CAAAC,EAAA,yDACjB,EAAKpM,SAAS,CAAEqM,WAAY,KAC5B,EAAKrM,SAAS,CAAEsM,qBAAsB,KAClC,EAAK1N,MAAMgK,KAAKC,KAAK7B,QAHR,oBAITvC,EAAoB,EAAKlE,MAAM+B,iBACrC,EAAKtC,SAAS,CAAEuL,aAAc,OAC9B,EAAKvL,SAAS,CAAEsC,iBAAkB,OAClC,EAAKtC,SAAS,CAAEiD,cAAe,OAC3BsJ,EAAwC,KAEkB,OAA5D,EAAK3N,MAAM4N,sBAAsBC,yBACjC,EAAK7N,MAAMgK,KAAKC,KAXH,2CAcO6D,IAAMC,IAAN,UACbC,IAAI/B,YADS,wBACkB,EAAKjM,MAAMgK,KAAKC,KAAK7B,UAf9C,QAkBX,GAAmB,OAJb6F,EAdK,QAkBH9M,OAEN,GADAwM,EAAWM,EAAIxD,KACS,IAApBwD,EAAIxD,KAAKrK,OACXuN,EAAW,OACN,CAAC,EAAD,YACmBA,GADnB,IACL,2BAASR,EAAyB,QAChC,EAAKnN,MAAMkO,mBAAmBf,GAF3B,oCAMPQ,EAAW,GA5BF,kDA+BXA,EAAW,GACXQ,QAAQC,IAAI,aAAZ,sBAhCW,gCAmCbT,EAAW,EAAK3N,MAAM4N,sBAAsBC,uBAnC/B,QAsCf,GADA,EAAKzM,SAAS,CAAEuL,aAAcgB,IACb,OAAbA,EACF,GAAIA,EAASvN,OAAS,EAEpB,IAASG,KAFe,EAAD,SAEdA,GACP,IAAIoD,EAAUgK,EAASpN,GAAG2I,SAASvF,QAC/BkF,EAAQ8E,EAASpN,GAAGsI,MAEtB8E,EAASpN,GAAG2I,SAASpD,eAArB,OACAD,QADA,IACAA,OADA,EACAA,EAAmBC,eAEnB,EAAK1E,SAAS,CAAEsC,iBAAkBiK,EAASpN,GAAG2I,WAC9C,EAAK9H,SAAS,CAAEiD,cAAewE,KAVZ,eAwBZ3B,GAGS,IADd2B,EAAMjF,QAAO,SAAC/C,GAAD,OAASA,EAAImD,YAAcL,EAAQuD,GAAGlD,aAChD5D,QACHuN,EAASpN,GAAGQ,qBAAuBqE,IAAkBiJ,aAErD,EAAKjN,SAAS,CACZ0H,qBAAsB6E,EAASpN,GAAG+N,iBAEpC,EAAKlN,SAAS,CACZsC,iBAAkBiK,EAASpN,GAAG2I,SAC9BJ,qBAAsB6E,EAASpN,GAAG+N,iBAEpC,EAAKlN,SAAS,CAAEiD,cAAesJ,EAASpN,GAAGsI,QAC3C,EAAKzH,SAAS,CAAE4L,qBAAqB,IACrC,EAAKuB,wBAfT,IAAK,IAAIrH,KAAKvD,EAAU,EAAfuD,IAtBGyG,EAAW,EAAhBpN,QA0CT,EAAKP,MAAMwO,0BACT,EAAKxO,MAAMgK,KAAKC,KAAK7B,QACrB,EAAKlH,YArFI,0DAlF4B,EA8K/C6H,eA9K+C,uCA8K9B,WACfuF,EACAzF,GAFe,iBAAA2E,EAAA,sDAIf,EAAKpM,SAAS,CAAEC,SAAS,IACzB,EAAKD,SAAS,CAAEqN,iBAAkB,OAClCN,QAAQC,IAAIE,GANG,IAAAd,EAAA,iBAONjN,GAPM,uBAAAiN,EAAA,+EASOM,IAAMY,KAAN,UACbV,IAAI/B,YADS,6BAEhB,CACEqC,eAAgBA,EAChBzF,MAAOA,EAAMtI,KAbN,OAgBQ,OAPb0N,EATK,QAgBH9M,QAAoD,OAAlC,EAAKQ,MAAMgN,oBACnC,EAAKvN,SAAS,CACZuN,mBAAkB,UAAE,EAAKhN,MAAMgN,0BAAb,aAAE,EAA+B/K,QACjD,SAAC/C,GAAD,OAASA,EAAImD,YAAc6E,EAAMtI,GAAGyD,eAIvB,MAAfiK,EAAI9M,SACN,EAAKnB,MAAMwO,0BACT,EAAKxO,MAAMgK,KAAKC,KAAK7B,QACrB,EAAKlH,YAEP,EAAKqM,mBACL,EAAKnM,SAAS,CAAE4L,qBAAqB,IACrC,EAAK5L,SAAS,CAAEsC,iBAAkB,KAAMoF,qBAAsB,OAC9D,EAAK1H,SAAS,CAAEiD,cAAe,OAC/B,EAAKrE,MAAM4O,eAAe,CACxBpD,MAAM,gCACNqD,YACE,oGACFC,MAAOC,IAAgBC,WApChB,uBAwCX,GAxCW,yBAwCP,KAAMrB,UACJ,KAAMA,SAASlD,KACjB,QAAmCvK,IAA/B,KAAMyN,SAASlD,KAAKwE,QACtB,GAAI,KAAMtB,SAASlD,KAAKwE,OAAO7O,OAAS,EAAG,CACzC,GAAI,EAAKuB,MAAMgN,yBAE+BzO,IAAxC,KAAMyN,SAASlD,KAAKwE,OAAO,GAAGC,YAMjBhP,KALfiP,EAAM,UAAG,EAAKxN,MAAMgN,0BAAd,aAAG,EAA+B/K,QACtC,SAAC/C,GAAD,OACEA,EAAImD,YACJ,KAAM2J,SAASlD,KAAKwE,OAAO,GAAGC,MAAMlL,cAGtC,IAASzD,KAAK4O,EACZ,EAAKnP,MAAMoP,eAAeD,EAAO5O,GAAGyD,WAK5C,EAAK5C,SAAS,CACZqN,iBAAkB,KAAMd,SAASlD,KAAKwE,OAAO,GAAGI,UAElD,EAAKrP,MAAM4O,eAAe,CACxBpD,MAAO,KAAMmC,SAASlD,KAAKwE,OAAO,GAAGI,QACrCP,MAAOC,IAAgBO,eAI3B,EAAKtP,MAAM4O,eAAe,CACxBpD,MAAO,yCACPsD,MAAOC,IAAgBO,SAEzB,EAAKlO,SAAS,CACZqN,iBAAkB,2CAK1BN,QAAQC,IAAI,iBAAZ,sBA9EW,+DAAAZ,EAAA,KAOD3E,GAPC,qDAONtI,EAPM,6BAONA,GAPM,sCAiFX,EAAKoB,MAAM+B,kBACb,EAAKtC,SAAS,CAAEsC,iBAAkB,EAAK/B,MAAM+B,mBAE/C,EAAKtC,SAAS,CAAE0H,qBAAsBwF,IACtC,EAAKlN,SAAS,CAAEC,SAAS,IArFV,4CA9K8B,0DAsQ/CkN,oBAAsB,WACpB,EAAKnN,SAAS,CACZsM,qBAAsB,EAAK/L,MAAM+L,qBAAuB,KAxQb,EA4Q/C6B,mBAAqB,SAAC5N,GACpB,EAAKP,SAAS,CAAEC,QAASM,KA7QoB,EAgR/CiK,kBAhR+C,uCAgR3B,WAAOjG,GAAP,SAAA6H,EAAA,0DAEhBgC,OAAOC,QAAQ,0DACf9J,EAHgB,wBAKhB,EAAK4J,oBAAmB,GALR,kBAORzB,IAAM4B,OAAN,UAAgB1B,IAAI/B,YAApB,wBAA+CtG,IAPvC,OAQd,EAAK3F,MAAM2P,sBAAsBhK,GACjC,EAAK4H,mBACL,EAAKvN,MAAM4O,eAAe,CACxBpD,MAAM,oCACNsD,MAAOC,IAAgBC,UAEzB,EAAK5N,SAAS,CAAEiD,cAAe,OAdjB,kDAgBd,EAAKrE,MAAM4O,eAAe,CACxBpD,MAAM,gCACNsD,MAAOC,IAAgBa,UAlBX,QAqBhB,EAAKL,oBAAmB,GArBR,0DAhR2B,wDAyS/CM,oBAAsB,SAAC1O,GACrB,EAAKC,SAAS,CAAE0O,iBAAkB3O,KA1SW,EA6S/C6E,aAAe,SAAC7E,GACd,EAAKC,SAAS,CAAEY,WAAYb,KA9SiB,EAiT/CG,kBAAoB,WAClB,EAAKtB,MAAM0B,uBAAuB,EAAK6N,oBACvC,EAAKhC,mBACL,EAAKvN,MAAM+P,iBAAiB,EAAKR,yBAEErP,IAAjC,EAAKF,MAAMmN,YAAY6C,OACvB,EAAKhQ,MAAMmN,YAAY6C,MAAMC,cAAgBC,IAAsBC,OAEnE,EAAKnQ,MAAMoQ,oBAAoB,CAC7BhI,QAAS,EAAKpI,MAAMgK,KAAKC,KAAK7B,QAC9B1E,iBAAkB,KAClBuM,YAAaC,IAAsBG,MACnCzK,UAAW,KACX0K,aAAc,CACZnP,QAAQ,GAEVyJ,iBAAkB,MA9TtB,EAAKjJ,MAAQ,CACX+B,iBAAkB,KAClBW,cAAe,KACfsI,aAAc,KACd7D,qBAAsB,KACtB6F,mBAAoB,KACpBtN,SAAS,EACToN,iBAAkB,KAClBf,qBAAsB,EACtB6C,oBAAoB,EACpBC,0BAA2B,KAC3BV,kBAAkB,EAClBxC,cAAc,EACdG,WAAY,GACZT,qBAAqB,EACrByD,YAAa,KACbzO,YAAY,GAnB+B,E,0CA+U/C,WAAU,IAAD,aACP,OAAK0O,YAAU9O,KAAK5B,MAAMgK,KAAM2G,KAAeC,gBAAgBC,MAIf,OAA9CjP,KAAK5B,MAAM6B,cAAcC,kBAC0B,OAAnDF,KAAK5B,MAAM6B,cAAcE,wBACgB,IAAxCH,KAAK5B,MAAM6B,cAAcG,aACE,IAA1BJ,KAAKD,MAAMK,eAKbJ,KAAK5B,MAAMmK,OAAOC,eACuB,IAAxCxI,KAAK5B,MAAM6B,cAAcG,aACE,IAA1BJ,KAAKD,MAAMK,YAGXJ,KAAK5B,MAAMmK,OAAOC,aAAajJ,SAAWmH,IAAWpD,SACrDtD,KAAK5B,MAAMmK,OAAOC,aAAajJ,SAAWmH,IAAWvB,QAMvD,eAAC,WAAD,WACmC,OAAhCnF,KAAKD,MAAM+B,kBACiB,OAA7B9B,KAAKD,MAAM0C,gBACwB,IAAnCzC,KAAKD,MAAMqL,oBACT,sBAAK/M,UAAU,qHAAf,UACE,sBAAKA,UAAU,kGAAf,UACE,sBAAKA,UAAU,6BAAf,UACE,8BACE,qBAAKA,UAAU,uGAAf,SACE,cAAC,KAAD,CACEA,UAAU,sBACVuC,QAAS,kBAAM,EAAKuK,iCAI1B,sBAAK9M,UAAU,uBAAf,UACE,sBAAMA,UAAU,+BAAhB,SACG2B,KAAKD,MAAM+B,iBAAiBoN,iBAE/B,uBAAM7Q,UAAU,yCAAhB,UACG2B,KAAK5B,MAAM4N,sBAAsBC,wBACA,OAAhCjM,KAAKD,MAAM+B,mBADZ,UAEC9B,KAAK5B,MAAM4N,sBAAsBC,uBAAuBjN,MACtD,SAACC,GAAD,OACEA,EAAIyN,iBAAmB,EAAK3M,MAAMmH,+BAJvC,aAEC,EAGG5C,oBAAoB6K,mBAAmB,IAN9C,IAOI,IAEA,OADDnP,KAAK5B,MAAM4N,sBAAsBC,wBAEA,OAAhCjM,KAAKD,MAAM+B,mBAFZ,UAGC9B,KAAK5B,MAAM4N,sBAAsBC,uBAAuBjN,MACtD,SAACC,GAAD,OACEA,EAAIyN,iBAAmB,EAAK3M,MAAMmH,+BALvC,aAGC,EAGG5C,oBAAoByB,iBAK7B,OADD/F,KAAK5B,MAAM4N,sBAAsBC,6BAO5B3N,IALN0B,KAAK5B,MAAM4N,sBAAsBC,uBAAuBjN,MACtD,SAACC,GAAD,OACEA,EAAIyN,iBAAmB,EAAK3M,MAAMmH,uBACjCjI,EAAIE,qBAAuBqE,IAAkBC,aAC5CxE,EAAIE,qBAAuBqE,IAAkB4L,SAEjD,qBACExF,MAAM,iDACNvL,UAAU,eACVuC,QAAS,WACP,GAEgC,OAD9B,EAAKxC,MAAM4N,sBACRC,uBACH,CACA,IAAIoD,EACF,EAAKjR,MAAM4N,sBAAsBC,uBAAuBjN,MACtD,SAACC,GAAD,OACEA,EAAIyN,iBACJ,EAAK3M,MAAMmH,6BAEQ5I,IAArB+Q,GACF,EAAKjR,MAAMkR,sBAAsBD,KAfzC,SAoBE,cAAC,IAAD,CACEhP,GAAG,sBACHhC,UAAU,gGAFZ,yBAQF,qBACEuL,MAAM,yDACNvL,UAAU,iFAFZ,0BASJ,qBAAKA,UAAU,gBACf,cAACkR,EAAD,CACE9M,cAAezC,KAAKD,MAAM0C,cAC1BX,iBAAkB9B,KAAKD,MAAM+B,iBAC7BoF,qBAAsBlH,KAAKD,MAAMmH,qBACjCC,eAAgBnH,KAAKmH,eACrBqI,oBAAqBxP,KAAKD,MAAM8M,iBAChCpN,QAASO,KAAKD,MAAMN,QACpBkN,oBAAqB3M,KAAK2M,oBAC1BpO,mBAEI,OADFyB,KAAK5B,MAAM4N,sBAAsBC,wBACS,OAAhCjM,KAAKD,MAAM+B,iBADrB,UAEI9B,KAAK5B,MAAM4N,sBAAsBC,uBAAuBjN,MACtD,SAACC,GAAD,aACEA,EAAIqI,SAASpD,eAAb,UACA,EAAKnE,MAAM+B,wBADX,aACA,EAA6BoC,uBALrC,aAEI,EAIGuL,yBACHnR,EAEN0L,kBAAmBhK,KAAKgK,kBACxBzG,2BACEvD,KAAK5B,MAAM4N,sBAAsBC,wBACjCjM,KAAK5B,MAAM4N,sBAAsBC,uBAAuBjN,MACtD,SAACC,GAAD,OACEA,EAAIyN,iBAAmB,EAAK3M,MAAMmH,wBAGxCzB,gBAAiBzF,KAAKyF,gBACtB4F,uBAAwBrL,KAAKqL,uBAC7BjL,WAAYJ,KAAKD,MAAMK,WACvBgE,aAAcpE,KAAKoE,kBAIvB,qCACE,eAACsL,EAAA,EAAD,WAC2C,OAAxC1P,KAAK5B,MAAM4F,UAAU2L,eACpB,sBAAKtR,UAAU,+HAAf,UACE,cAAC,IAAD,CAAkBA,UAAU,wBAD9B,qBAIE2B,KAAK5B,MAAM4F,UAAU2L,eAAenR,OAAS,GAC/CwB,KAAK5B,MAAMwF,QAAQyF,oBAGN,IAFbrJ,KAAK5B,MAAMwF,QAAQyF,mBAAmBrH,QACpC,SAAC/C,GAAD,OAA2B,IAAlBA,EAAI6E,aACbtF,OACF,cAAC,IAAD,CAAM6B,GAAG,SAAT,SACE,sBAAKhC,UAAU,yGAAf,UACE,cAAC,IAAD,CAAOA,UAAU,wBADnB,cAKF,qBAAKA,UAAU,4HAAf,2BAMF,sBACEuC,QAAS,kBACP,EAAKpB,SAAS,CAAEoP,0BAA2B,QAE7CvQ,UAAS,yBACkC,OAAzC2B,KAAKD,MAAM6O,0BACP,4GACA,qEAHG,iEAJX,UAUE,cAAC,IAAD,CAAUvQ,UAAU,YACpB,8CAGE,OADC2B,KAAK5B,MAAM4N,sBAAsBC,uBAE9B,EACAjM,KAAK5B,MAAM4N,sBAAsBC,uBAAuBjK,QACtD,SAAC/C,GAAD,aACEA,EAAIqF,oBAAoBC,mBAAxB,UACA,EAAKnG,MAAMwF,QAAQC,uBADnB,aACA,EAAoCU,oBACtC/F,OATR,UAaF,qBAAKH,UAAU,OAAf,SACG2B,KAAK5B,MAAM4N,sBAAsBC,wBAK5B,OAJNjM,KAAK8K,qBACH9K,KAAK5B,MAAM4N,sBAAsBC,uBACjC,KACAjM,KAAK5B,MAAMwF,QAAQC,iBAEnB,cAACrD,EAAA,EAAD,IAEAR,KAAK5B,MAAM4N,sBAAsBC,wBACjCjM,KAAKsL,oBACHtL,KAAK8K,qBACH9K,KAAK5B,MAAM4N,sBAAsBC,uBACjC,KACAjM,KAAK5B,MAAMwF,QAAQC,kBAErBpF,KACA,SACEQ,EAKAN,GANF,OAQEM,EAAIwI,MAAQ,GACV,cAAC,WAAD,UACE,qBACE7G,QAAS,kBACP,EAAKpB,SAAS,CACZoP,0BAA2B3P,EAAIM,UAHrC,SAOE,cAAC,IAAD,CACEqK,MAAO3K,EAAI2K,MACXnC,MAAOxI,EAAIwI,MACXmI,OACE,EAAK7P,MAAM6O,4BACX3P,EAAIM,YAbGN,EAAI2K,eAyB/B,sBAAKvL,UAAU,qBAAf,UACE,qBAAKA,UAAU,yCAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,sBAAKA,UAAU,4DAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,uBAAMA,UAAU,2DAAhB,4BACkB,IAChB,uBAAMA,UAAU,YAAhB,cAEG2B,KAAK5B,MAAM4N,sBACTC,wBACHjM,KAAK8K,qBACH9K,KAAK5B,MAAM4N,sBACRC,uBACHjM,KAAKD,MAAM6O,0BACX5O,KAAK5B,MAAMwF,QAAQC,iBAEjB7D,KAAK8K,qBACH9K,KAAK5B,MAAM4N,sBACRC,uBACHjM,KAAKD,MAAM6O,0BACX5O,KAAK5B,MAAMwF,QAAQC,iBACnBrF,OACF,EAhBN,UAoBF,sBAAKH,UAAU,yFAAf,UACE,cAAC,IAAD,CAAiBA,UAAU,aAD7B,mBAC2D,IACzD,sBACEuC,QAAS,kBACP,EAAKpB,SAAS,CAAE0O,kBAAkB,KAEpC7P,UAAS,eACgC,OAAvC2B,KAAK5B,MAAMwF,QAAQC,gBACf,2FACA,kEAHG,0FAJX,SAU0C,OAAvC7D,KAAK5B,MAAMwF,QAAQC,gBAClB,qCACE,cAAC,IAAD,CAAkBxF,UAAU,SAE1B2B,KAAK5B,MAAMwF,QAAQC,gBAChBsL,qBAIP,wBAKR,8BACE,qBACEvO,QAAS,kBACP,EAAKpB,SAAS,CAAE0O,kBAAkB,KAEpC7P,UAAU,kJAJZ,SAM0C,OAAvC2B,KAAK5B,MAAMwF,QAAQC,gBAChB,gBACA,2BAMa,KAA1B7D,KAAKD,MAAM8L,YACV,qBAAKxN,UAAU,+EAAf,SACG2B,KAAKD,MAAM8L,aAGhB,qBAAKxN,UAAU,OAAf,SACE,qBAAKA,UAAU,0BAAf,SACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAS,2CAAd,UACE,qBAAKA,UAAU,sCAAf,SAC2C,OAAxC2B,KAAK5B,MAAM4F,UAAU2L,eACpB,sBAAKtR,UAAU,2HAAf,UACE,cAAC,IAAD,CAAkBA,UAAU,wBAAyB,IADvD,oBAIE2B,KAAK5B,MAAM4F,UAAU2L,eAAenR,OAAS,EAC/C,cAAC,IAAD,CAAM6B,GAAG,SAAT,SACE,sBAAKhC,UAAU,wHAAf,UACE,cAAC,IAAD,CAAOA,UAAU,wBADnB,2BAMF,sBAAKA,UAAU,2HAAf,UACE,cAAC,IAAD,CAAkBA,UAAU,wBAAyB,IADvD,qBAO0B,OAD7B2B,KAAK5B,MAAM4N,sBACTC,uBACD,cAAC4D,EAAA,EAAD,CAAWpP,KAAMC,IAAYC,OAMhB,IALXX,KAAK8K,qBACL9K,KAAK5B,MAAM4N,sBACRC,uBACHjM,KAAKD,MAAM6O,0BACX5O,KAAK5B,MAAMwF,QAAQC,iBACnBrF,OACF,qBAAKH,UAAU,GAAf,SACE,cAACyR,EAAA,EAAD,CACE5C,MAAO6C,IAAeC,KACtBC,MAAM,yBACNC,UACE,qBAAK7R,UAAU,wBAAf,SAC2C,OAAxC2B,KAAK5B,MAAM4F,UAAU2L,gBACpB3P,KAAK5B,MAAM4F,UAAU2L,eAAenR,OAClC,GACFwB,KAAK5B,MAAMwF,QAAQyF,oBAGN,IAFbrJ,KAAK5B,MAAMwF,QAAQyF,mBAAmBrH,QACpC,SAAC/C,GAAD,OAA2B,IAAlBA,EAAI6E,aACbtF,QACA,cAAC,IAAD,CAAM6B,GAAG,SAAT,SACE,qBAAKhC,UAAU,+FAAf,0DAUd2B,KAAK8K,qBACH9K,KAAK5B,MAAM4N,sBACRC,uBACHjM,KAAKD,MAAM6O,0BACX5O,KAAK5B,MAAMwF,QAAQC,iBACnBpF,KAAI,SAACC,EAAMC,GAAP,+BACJ,qBAEEiC,QAAS,WACP,EAAKpB,SAAS,CACZsC,iBAAkBpD,EAAK4I,SACvBJ,qBAAsBxI,EAAKgO,iBAE7B,EAAKlN,SAAS,CAAEiD,cAAe/D,EAAKuI,QACpC,EAAKzH,SAAS,CAAE4L,qBAAqB,KAEvC/M,UAAS,wGAEb,YAAK0B,MAAM+B,wBAAX,eAA6BoC,eAC7BxF,EAAK4I,SAASpD,YACV,kCACAxF,EAAKS,qBACLqE,IAAkBmB,UAClB,mDACAjG,EAAKS,qBACLqE,IAAkBqG,SAClB,wBACAnL,EAAKS,qBACLqE,IAAkBC,YAClB,iDACA,qDAdS,sEAVX,SA2BE,sBACEpF,UAAS,iEACP,YAAK0B,MAAM+B,wBAAX,eAA6BoC,eAC7BxF,EAAK4I,SAASpD,YACV,wBACA,YALR,UAQE,qBAAK7F,UAAU,8CAAf,SACGK,EAAKS,qBACNqE,IAAkBmB,UAChB,cAAC,IAAD,CAAoBtG,UAAU,qDAC5BK,EAAKS,qBACPqE,IAAkBqG,SAClB,cAAC,IAAD,CAAaxL,UAAU,qDACrBK,EAAKS,qBACPqE,IAAkBC,YAClB,cAAC,IAAD,CAAoBpF,UAAU,qDAC5BK,EAAKS,qBACPqE,IAAkBiJ,WAClB,cAAC,IAAD,CAAoBpO,UAAU,uDAE9B,cAAC,IAAD,CAAaA,UAAU,uDAG3B,sBAAKA,UAAU,aAAf,UACE,sBACEA,UAAS,qDAEfK,EAAKS,qBACLqE,IAAkBmB,UACdjG,EAAKS,qBACLqE,IAAkBqG,SAChB,0CACAnL,EAAKS,qBACLqE,IAAkBC,YAClB,0CACA/E,EAAKS,qBACLqE,IAAkBiJ,WAClB,4CACA,0CACF,2CAfA,SAkBG/N,EAAK4I,SAAS4H,iBAEjB,qBAAK7Q,UAAU,sCAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,8BACE,sBAAKA,UAAU,uDAAf,UACE,sBACEA,UAAS,UACPK,EAAKS,qBACLqE,IAAkBqG,SACd,kBACA,gBAJG,oBASVnL,EAAKS,qBACNqE,IAAkBmB,UAChB,sBACEtG,UAAS,qBACP,YAAK0B,MAAM+B,wBAAX,eACIoC,eACJxF,EAAK4I,SAASpD,YACV,gEACA,mCALG,cADX,mBAUInF,IAA6BC,MAC3B,SAACC,GAAD,OACEA,EAAIC,MACJR,EAAKS,6BAbb,aAUI,EAIGC,UAGLV,EAAKS,qBACPqE,IAAkBqG,SAClB,sBACExL,UAAS,qBACP,YAAK0B,MAAM+B,wBAAX,eACIoC,eACJxF,EAAK4I,SAASpD,YACV,sEACA,wCALG,cADX,mBAUInF,IAA6BC,MAC3B,SAACC,GAAD,OACEA,EAAIC,MACJR,EAAKS,6BAbb,aAUI,EAIGC,UAGLV,EAAKS,qBACPqE,IAAkBC,YAClB,sBACEpF,UAAS,qBACP,YAAK0B,MAAM+B,wBAAX,eACIoC,eACJxF,EAAK4I,SAASpD,YACV,gEACA,oCALG,cADX,mBAUInF,IAA6BC,MAC3B,SAACC,GAAD,OACEA,EAAIC,MACJR,EAAKS,6BAbb,aAUI,EAIGC,UAIP,sBACEf,UAAS,qBACP,YAAK0B,MAAM+B,wBAAX,eACIoC,eACJxF,EAAK4I,SAASpD,YACV,sEACA,wCALG,cADX,mBAUInF,IAA6BC,MAC3B,SAACC,GAAD,OACEA,EAAIC,MACJR,EAAKS,6BAbb,aAUI,EAIGC,eAMb,sBAAKf,UAAU,gBAAf,UACE,sBACEA,UAAS,UACPK,EAAKS,qBACLqE,IAAkBmB,WACdjG,EAAKS,qBACLqE,IAAkBqG,WAEhBnL,EAAKS,mBACLqE,IAAkBC,aAFlB,iBAKF,mBAKR,uBACEpF,UAAS,UACPK,EAAKS,qBACLqE,IAAkBmB,WACdjG,EAAKS,qBACLqE,IAAkBqG,WAEhBnL,EAAKS,mBACLqE,IAAkBC,aAFlB,iBAKF,aAVG,cADX,UAcG/E,EAAK4F,qBACJ5F,EAAK4F,oBACF6K,kBAAmB,IAhB1B,IAiBI,IACDzQ,EAAK4F,qBACJ5F,EAAK4F,oBAAoByB,UAE7B,sBAAK1H,UAAU,sBAAf,UACE,sBACEA,UAAS,UACPK,EAAKS,qBACLqE,IAAkBmB,WACdjG,EAAKS,qBACLqE,IAAkBqG,WAEhBnL,EAAKS,mBACLqE,IAAkBC,aAFlB,iBAKF,iBAXR,mBAgBA,sBACEpF,UAAS,UACPK,EAAKS,qBACLqE,IAAkBmB,WACdjG,EAAKS,qBACLqE,IAAkBqG,WAEhBnL,EAAKS,mBACLqE,IAAkBC,aAFlB,iBAKF,aAVG,cADX,SAcG7E,YAAKF,EAAKyR,UAAW,8BAOlC,qBAAK9R,UAAU,6DAAf,SAEE,sBAAKA,UAAU,sDAAf,UAIGK,EAAKS,qBACJqE,IAAkBC,aAClB,qBACEpF,UAAU,eACVuL,MAAM,iDACNhJ,QAAS,WACP,EAAKxC,MAAMkR,sBAAsB5Q,IAJrC,SAOE,cAAC,IAAD,CAAM2B,GAAG,sBAAT,SACE,qBAAKhC,UAAU,sGAAf,SACE,6DAKPK,EAAKS,qBACNqE,IAAkBqG,SAChB,qBAAKxL,UAAU,0JAAf,gCAIA,qBAAKA,UAAU,sGAAf,8BA5QHM,EAAI,sBA8RI,IAAhCqB,KAAKD,MAAMmO,kBACV,cAACkC,EAAA,EAAD,CACExG,MAAO,qBAAKvL,UAAU,WAAf,6BACPgS,UAAU,EACVnD,MAAOoD,IAAOC,QACdC,MAAO,kBAAM,EAAKhR,SAAS,CAAE0O,kBAAkB,KAC/CuC,eAAe,EACfC,eAAgBC,IAAUC,WAC1BC,cAAc,EACdC,QAAS,CAAElH,OAAO,EAAMmH,MAAM,GARhC,SAUE,cAACC,GAAA,EAAD,CACE3H,mBAAoBrJ,KAAK5B,MAAMwF,QAAQyF,mBACvCsB,kBAAmB3K,KAAK5B,MAAMuM,kBAC9BuD,iBAAkBlO,KAAKiO,wBAID,OAA3BjO,KAAKD,MAAM8O,aACV,cAACuB,EAAA,EAAD,CACExG,MACE,sBAAKvL,UAAU,gBAAf,UACE,sBAAMA,UAAU,wCAAhB,SACG2B,KAAKD,MAAM8O,YAAYvH,SAAS4H,iBAEnC,sBAAM7Q,UAAU,YAAhB,uCAGJgS,UAAU,EACVnD,MAAOoD,IAAOC,QACdC,MAAO,kBAAM,EAAKhR,SAAS,CAAEqP,YAAa,QAC1C4B,eAAe,EACfC,eAAgBC,IAAUC,WAC1BC,cAAc,EACdC,QAAS,CAAElH,OAAO,EAAMmH,MAAM,GAfhC,SAiBE,cAAC,GAAD,CACEzJ,SAAUtH,KAAKD,MAAM8O,YACrBxG,KAAMrI,KAAK5B,MAAMgK,KAAKC,YAnrBvB,cAAC,IAAD,CAAUhI,GAAG,aARb,cAAC,IAAD,CAAUA,GAAG,U,GArVWsB,aA2jCxBsP,GAAwBzG,aAlCb,SAAC,GAqBvB,MAAO,CACLpC,KAFC,EAnBHA,KAsBEmD,YAHC,EAlBHA,YAsBE3H,QAJC,EAjBHA,QAsBEsN,OALC,EAhBHA,OAsBElN,UANC,EAfHA,UAsBEgI,sBAPC,EAdHA,sBAsBE/L,cARC,EAbHA,cAsBEkC,OATC,EAZHA,OAsBEoG,OAVC,EAXHA,UAyB4D,CAC5DiG,yBACAhB,oBACA1N,4BACA6K,uBACAqC,oBACAmB,sBACAW,cACAlC,+BACAvI,2BACA8D,mBACAhE,yBACAT,uBACA7C,8BACAyL,uBACAyB,2BACAuB,4BAhBmC9E,CAiBlCK,K,kCCntCH,+EAIasG,EAAwC,WAEnD,OACE,qBAAK9S,UAAU,GAAf,SAEE,cAAC,wBAAD,Q,mRCkKMyE,E,iDA/JNsO,EAAQC,MAASC,GAAGC,KAEbC,EAAkB,SAC7BC,EACAC,GAEA,IAAIjR,EAAwC,KAC5C,GAAuB,OAAnBgR,EAAyB,CAC3B,IAAIvM,EAAQuM,EAAezS,MAAK,SAACC,GAAD,OAASA,EAAI8E,KAAO2N,KACpD,QAAcpT,IAAV4G,EAAqB,CACvB,IAAIyM,EAAaC,IAAqB5S,MACpC,SAACC,GAAD,OAASiG,GAASjG,EAAIC,MAAQgG,EAAM2M,gBAEnBvT,IAAfqT,IACFlR,EAAOkR,EAAWzS,MAIxB,OAAOuB,GAGIkJ,EAAiB,SAC5B5H,EACA+P,GAEA,GAAgB,OAAZA,EAAkB,CACpB,IADoB,EAChBC,EAAc,EADE,cAEDhQ,GAFC,yBAEXI,EAFW,QAGdoF,EAAOuK,EAAQ9S,MAAK,SAACC,GAAD,OAASA,EAAIkD,SAAWA,EAAOC,kBAC1C9D,IAATiJ,IACFwK,GAAYxK,EAAK3C,cAHrB,2BAA6B,IAFT,8BAQpB,OAAOmN,EAAIlN,QAAQ,GAEnB,MAAO,WAIEiF,EAAkB,SAC7B/H,EACA+P,GAEA,IAAIzF,GAAe,EACnB,GAAgB,OAAZyF,EAAkB,CAAC,IAAD,gBACD/P,GADC,yBACXI,EADW,aAGL7D,IADFwT,EAAQ9S,MAAK,SAACC,GAAD,OAASA,EAAIkD,SAAWA,EAAOC,eAErDiK,GAAM,IAHV,2BAA6B,IADT,+BAQtB,OAAOA,GAoBI2F,EAA4B,SACvCC,GAEA,IAAIC,EAAuB,GAC3B,QACc5T,IAAZ2T,GACY,KAAZA,QACmB3T,IAAnB2T,EAAQzT,QACW,IAAnByT,EAAQzT,OAER,MAAO,CACLe,QAAQ,EACRqJ,IAAI,yBAGR,GAAIqJ,EAAQzT,OAAS,EACnB,MAAO,CACLe,QAAQ,EACRqJ,IAAI,iDAhB6B,oBAmBtBqJ,GAnBsB,IAmBrC,2BAAwB,CAAC,IAAhBE,EAAe,QACtBD,EAAU,sBAAOA,GAAP,CAAmBC,KApBM,8BAsBrC,GAAI,MAAAD,EAAW,GACb,MAAO,CACL3S,QAAQ,EACRqJ,IAAI,2CAGR,GAAIsJ,EAAWlQ,QAAO,SAAC/C,GAAD,MAAY,MAAHA,KAAaT,OAAS,EACnD,MAAO,CACLe,QAAQ,EACRqJ,IAAI,4CAGR,GAAIsJ,EAAWlQ,QAAO,SAAC/C,GAAD,MAAY,MAAHA,KAAaT,OAAS,EACnD,MAAO,CACLe,QAAQ,EACRqJ,IAAI,2DAAD,OACDsJ,EAAWlQ,QAAO,SAAC/C,GAAD,MAAY,MAAHA,KAAaT,OADvC,MAKP,GACE,MAAA0T,EAAWA,EAAW1T,OAAS,IACoB,IAAnD0T,EAAWlQ,QAAO,SAAC/C,GAAD,MAAY,MAAHA,KAAaT,OACxC,CAEA,IADA,IAAI4T,EAAwB,GACnBzT,EAAI,EAAGA,EAAIuT,EAAW1T,OAAQG,IACjC,MAAAuT,EAAWvT,IAAoB,IAANA,IAC3ByT,EAAgBF,EAAWvT,EAAI,IAGnC,GAAiB,MAAbyT,EACF,MAAO,CACL7S,QAAQ,EACRqJ,IAAI,yEAGR,GAAI,MAAAsJ,EAAWA,EAAW1T,OAAS,GACjC,MAAO,CACLe,QAAQ,EACRqJ,IAAI,gDAIV,MAAO,CACLrJ,QAAQ,EACRqJ,IAAI,qBAID,SAASyJ,EAAwBC,GACtC,IAAIC,EAAiBD,EAAaE,MAAM,KACpCC,EAAaF,EAAe,GAAGC,MAAM,KACrCE,EAAaH,EAAe,GAAGC,MAAM,KACzC,OAAO,IAAIG,KACTC,SAASH,EAAW,IACpBG,SAASH,EAAW,IAAM,EAC1BG,SAASH,EAAW,IACpBG,SAASF,EAAW,IACpBE,SAASF,EAAW,IACpBE,SAASF,EAAW,M,SAIZ5P,K,kBAAAA,E,gBAAAA,E,mBAAAA,M,KAML,IAAMF,EAAmB,SAC9B9B,EACAC,EACA8B,GAEA,IAAItD,EAAyBuD,EAAeE,QAEtC6P,EAAc,IAAIF,KAAKvB,EAAM0B,YAC7BC,EAAW,IAAIJ,KAAK7R,GAGpBkS,EAAYX,EAChBU,EAASE,UACP,KACCF,EAASG,WAAa,GACvB,IACAH,EAASI,cACT,IACApS,EACA,MAEEqS,EAAUf,EACdU,EAASE,UACP,KACCF,EAASG,WAAa,GACvB,IACAH,EAASI,cACT,IACAtQ,EACA,MAwCJ,OAnCEkQ,EAASE,UAAYJ,EAAMI,WAC3BF,EAASG,WAAaL,EAAMK,YAC5BH,EAASI,cAAgBN,EAAMM,iBAE/B5T,EAASuD,EAAeI,UAIxB6P,EAASE,UAAYJ,EAAMI,WAC3BF,EAASG,WAAaL,EAAMK,YAC5BH,EAASI,cAAgBN,EAAMM,iBAE/B5T,EAASuD,EAAeE,SAIxB+P,EAASE,YAAcJ,EAAMI,WAC7BF,EAASG,aAAeL,EAAMK,YAC9BH,EAASI,gBAAkBN,EAAMM,gBAG/B5T,EADEyT,EAAUK,UAAYR,EAAMQ,UACrBvQ,EAAeI,QAExB8P,EAAUK,WAAaR,EAAMQ,WAC7BD,EAAQC,WAAaR,EAAMQ,UAElBvQ,EAAeC,OAEfD,EAAeE,SAOrBzD,GA6EI+T,EAIP,CACJ,CACEC,KAAM,sBACNhU,QAAQ,EACRH,QAAS,sBAEX,CACEmU,KAAM,eACNhU,QAAQ,EACRH,QAAS,eAEX,CACEmU,KAAM,gBACNhU,QAAQ,EACRH,QAAS,gBAEX,CACEmU,KAAM,+BACNhU,QAAQ,EACRH,QAAS,qCAEX,CACEmU,KAAM,yBACNhU,QAAQ,EACRH,QAAS,6B,uLC3UPoU,E,kDACJ,WAAYpV,GAAkB,IAAD,8BAC3B,cAAMA,IAORsB,kBAAoB,kBAAM,EAAKtB,MAAMqV,eAAc,IARtB,EAS7BC,qBAAuB,kBAAM,EAAKtV,MAAMqV,eAAc,IANpD,EAAK1T,MAAQ,CACXN,SAAS,GAJgB,E,0CAW7B,WAGE,IAAwB,IAFAO,KAAK5B,MAAMgK,KAAKuL,gBAGtC,OAAO,KAGT,IAAMC,EAAY5T,KAAK5B,MAAM8S,OAAO2C,WACpC,OACE,qBACExV,UAAS,2DACO,IAAduV,EAAqB,sBAAwB,uBADtC,kGADX,SAKG5T,KAAK5B,MAAM0V,e,GA1BUC,IAAMpS,WAuCvB+N,EAAiBlF,aAPN,SAAC,GAIvB,MAAO,CAAEpC,KADuC,EAFhDA,KAGqB8I,OAD2B,EADhDA,UAKqD,CACrD8C,eACAP,oBAF4BjJ,CAG3BgJ,GAwCUS,EAA2C,SAAC,GAKpC,IAAD,IAJlBrK,aAIkB,MAJV,GAIU,MAHlBsK,YAGkB,MAHXC,IAGW,MAFlBvE,cAEkB,aADlBnI,aACkB,MADV,EACU,EACZ2M,EAAcF,EACpB,OACE,0BACE7V,UAAS,WACI,IAAXuR,EACI,mCACA,4BAHG,+HADX,UAOE,0BAASvR,UAAU,SAAnB,UACE,cAAC+V,EAAD,CAAa/V,UAAU,8BACvB,+BAAOuL,OAGRnC,EAAQ,EACP,sBAAMpJ,UAAU,0DAAhB,SACGoJ,IAED,U,gIC7DK0B,IA/CiB,SAAC/K,GAC/B,IAAMgT,EAAQC,MAASC,GAAGC,KACtB8C,EAAW,IAAI1B,KACnB0B,EAASC,QAAQlD,EAAMvS,OAAS,GAChC,MAA0B0V,oBAAkB,GAA5C,mBAAOzN,EAAP,KAAcD,EAAd,KACA,OACE,+BAEwD,IAArD2N,2BAAiBpD,EAAOhT,EAAM+H,QAAQrF,WACrC,sBAAKzC,UAAU,uHAAf,UACE,qBAAKA,UAAU,gBAAf,iEAGA,qBAAKA,UAAU,gBAAf,+CACA,qBAAKA,UAAU,gDAAf,SACGO,YAAKyV,EAASvB,kBAGP,IAAVhM,EACF,qBAAKzI,UAAU,QAAf,SACE,cAAC,IAAD,CACE8H,QAAS/H,EAAM+H,QACfiD,YAAahL,EAAMgL,gBAavB,qBAAK/K,UAAU,gCAAf,SACE,cAAC,IAAD,CACE6L,aAAcrD,EACdsD,WAAYC,IAAcqK,YAC1BnK,QAASlM,EAAM+H,QAAQA,gB,qfCPtBqO,EAAmB,SAACE,EAAuB7V,GACtD,IAAM8V,EAAS/V,YAAKC,EAAM,cACtB+V,GACDF,EAAOvI,IAAI,SAAW,EAAI,IAAM,KAChCuI,EAAOvI,IAAI,SAAW,GAAG2G,WAC1B,IACA4B,EAAOvI,IAAI,QACX,IACAuI,EAAOvI,IAAI,QACb,OAAI,IAAIwG,KAAKgC,GAAQtB,UAAY,IAAIV,KAAKiC,GAAgBvB,WAgEtDwB,EAA0B,SAACzW,GAC/B,MAA8BmW,oBAAkB,GAAhD,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,OAAgB,IAAZD,EACK,wBAGP,sBAAKzW,UAAU,sMAAf,UACE,sBAAKA,UAAU,+DAAf,UACE,sBAAMA,UAAU,YAAhB,gDACA,qBACEuC,QAASxC,EAAM+E,eACf9E,UAAU,mEAFZ,uBAOF,qBACEuC,QAAS,kBAAMmU,GAAW,IAC1B1W,UAAU,yGAFZ,SAIE,cAAC,IAAD,CAASA,UAAU,mBAyBd2W,EAAb,kDAIE,WAAY5W,GAA6B,IAAD,8BACtC,cAAMA,IAiBRkB,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEC,QAASF,KAnBa,EAqBxC0V,oBAAsB,SAAC1V,GACrB,EAAKC,SAAS,CAAEyD,iBAAkB1D,KAtBI,EAwBxC2V,mBAxBwC,uCAwBnB,WAAO7M,EAActC,GAArB,eAAA6F,EAAA,6DACnB,EAAKtM,YAAW,GAChB6V,cAFmB,kBAICjJ,IAAMC,IAAN,UACbC,IAAIgJ,MADS,sBACU/M,EADV,YACkBtC,IALnB,OAIXsG,EAJW,OAOjB,EAAK7M,SAAS,CAAE6V,eAAgBhJ,EAAIxD,OAPnB,gDAUjB0D,QAAQC,IAAI,mBAAZ,sBACA1D,MAAMwM,YAAY,EAAD,KAXA,QAanB,EAAKhW,YAAW,GAbG,yDAxBmB,0DAuCxCiW,uBAAyB,WACvB,EAAKjW,YAAW,GAChB,EAAKlB,MAAMoX,qBACT,EAAKpX,MAAMgK,KAAKC,KAAK7B,SACrB,SAACjH,EAAiBqJ,IACD,IAAXrJ,EACF,EAAKD,YAAW,GAEhB,EAAKA,YAAW,OA/CgB,EAqDxC4I,iBAAmB,SACjBqD,EACA7M,GACI,IAAD,gBACgB6M,EAAYjE,SAASvF,SADrC,yBACMI,EADN,QAKD,QAAiB7D,IAHF,EAAKF,MAAM6B,cAAc6F,gBAAgB9G,MACtD,SAACC,GAAD,OAASA,EAAIkD,SAAWA,EAAOC,aAEL,CAC1B,IAAIf,EAAYkK,EAAYtE,MAAMjI,MAChC,SAACC,GAAD,OAASA,EAAImD,YAAcD,EAAOC,aAEpC,QAAkB9D,IAAd+C,EAAyB,CAC3B,GACEkK,EAAYpM,qBAAuBqE,IAAkBC,YAUrD,OAPA,EAAKrF,MAAM+F,oBAAoBoH,EAAYjE,UAC3C,EAAKlJ,MAAMsF,kBACT6H,EAAYjE,SAASvF,QAAQ/C,MAC3B,SAACC,GAAD,OAASA,EAAImD,YAAc1D,EAAKyD,WAGpC,EAAK3C,SAAS,CAAEY,YAAY,IACtB,CAAN,EACE,EAAKhC,MAAMwF,QAAQC,iBACnB,EAAKzF,MAAMiG,sBACTkH,EAAYjH,oBAAoBC,gBAChCpC,EAAOC,UACPf,EAAUmD,YACVnD,EAAUA,UACVA,EAAUoD,QACV8G,EAAYjE,UACZ,EACA,EAAKhI,aAITwJ,MAAM,oDAlCd,2BAAiD,CAAC,IAAD,yCAD9C,gCAxDmC,EAiGxC2M,qBAjGwC,sBAiGjB,sBAAA7J,EAAA,sDACrB,EAAKxN,MAAMwO,0BACT,EAAKxO,MAAMgK,KAAKC,KAAK7B,QACrB,EAAKlH,YAHc,2CAjGiB,EAuGxCoI,aAAe,SAACxD,EAAqB9B,GACnC,GAAgE,OAA5D,EAAKhE,MAAM4N,sBAAsBC,uBAAiC,CACpE,IAAM1E,EAAO,EAAKnJ,MAAM4N,sBAAsBC,uBAAuBjN,MACnE,SAACN,GAAD,OACEA,EAAK4I,SAASpD,cAAgBA,GAC9BxF,EAAKuI,MAAMjF,QAAO,SAAC/C,GAAD,OAASA,EAAImD,YAAcA,QAEjD,QAAa9D,IAATiJ,EAAoB,CACtB,IAAIpF,EAASoF,EAAKN,MAAMjI,MAAK,SAACC,GAAD,OAASA,EAAImD,YAAcA,KACxD,QAAe9D,IAAX6D,EACF,OAAOA,GAIb,OAAO,MArH+B,EAuHxCgF,eAvHwC,uCAuHvB,WACfuF,EACAzF,GAFe,eAAA2E,EAAA,sDAIf,EAAKpM,SAAS,CAAEC,SAAS,IAJV,OAAAmM,EAAA,KAKD3E,GALC,qDAKNtI,EALM,6BAOOuN,IAAMY,KAAN,UACbV,IAAI/B,YADS,6BAEhB,CACEqC,eAAgBA,EAChBzF,MAAOA,EAAMtI,KAXN,OAcQ,MAdR,OAcHY,SACN,EAAKC,SAAS,CACZ+F,eAAgB,KAChBC,cAAc,EACdkG,cAAc,EACd5J,iBAAkB,GAClB4T,eAAgB,mCAElB,EAAKD,wBAtBI,kDAyBXlJ,QAAQC,IAAI,mBAAZ,sBAzBW,iFAvHuB,0DAoJxCxF,uBAAyB,SAACC,GACxB,GAAgE,OAA5D,EAAK7I,MAAM4N,sBAAsBC,uBAAiC,CACpE,IAAIV,EACF,EAAKnN,MAAM4N,sBAAsBC,uBAAuBjN,MACtD,SAACN,GAAD,OAAUA,EAAK4I,SAASpD,cAAgB,EAAKnE,MAAM+B,yBAEnCxD,IAAhBiN,EACF,EAAKpE,eAAeoE,EAAYmB,eAAgBzF,GAEhD6B,MAAM,4BAGRA,MAAM,wBAhK8B,EAmKxCW,YAAc,SACZrH,EACAO,EACAgF,EACAC,EACAzB,GAEA,OAAO,EAAKa,uBAAuB,CACjC,CACE5E,UAAWA,EACXV,gBAAiB,SACjBL,UAAWuG,EAASvG,UACpBmD,YAAaoD,EAASpD,gBA/KY,EAmLxC9E,kBAAoB,WAAO,IAAD,EAClBiW,EACmC,OAAvC,EAAKvX,MAAMwF,QAAQC,gBAAnB,UACI,EAAKzF,MAAMgK,KAAK9D,2BADpB,aACI,EAAqCC,gBACrC,EAAKnG,MAAMwF,QAAQC,gBAAgBU,qBAEvBjG,IAAdqX,GAAyD,OAA9B,EAAK5V,MAAMsV,gBACxC,EAAKH,mBAAmB,EAAK9W,MAAMgK,KAAKC,KAAK7B,QAASmP,GAGzB,KAA7B,EAAKvX,MAAMgK,KAAKC,KAAKuN,KACe,IAApC,EAAKxX,MAAMgK,KAAKC,KAAKuN,IAAIpX,QAEzB,EAAK+W,yBAEuC,OAA1C,EAAKnX,MAAMwF,QAAQyF,oBACrB,EAAKjL,MAAM0B,uBAAuB,EAAKR,YAEuB,OAA5D,EAAKlB,MAAM4N,sBAAsBC,wBACnC,EAAKwJ,wBAtM+B,EA0MxCI,sBAAwB,SACtB5O,GAEA,IAAI6O,EAAiC,GACrC,GAAgE,OAA5D,EAAK1X,MAAM4N,sBAAsBC,uBAAiC,CAAC,IAAD,gBACnDhF,GADmD,yBAC3DvI,EAD2D,aAK1DJ,IAFN,EAAKF,MAAM4N,sBAAsBC,uBAAuBjN,MACtD,SAACuI,GAAD,OAAUA,EAAKD,SAASpD,cAAgBxF,EAAK4I,kBAGEhJ,IAA7CwX,EAAK9W,MAAK,SAACC,GAAD,OAASA,EAAI8W,MAAQrX,EAAKqX,SACtCD,EAAI,sBAAOA,GAAP,CAAapX,MAPvB,2BAAyB,IAD2C,+BAatE,OAAOoX,GA3N+B,EA8NxCE,iCAAmC,SACjC/O,GAEA,IAAI6O,EAA0B,GAC9B,GAAgE,OAA5D,EAAK1X,MAAM4N,sBAAsBC,uBAAiC,CAAC,IAAD,gBACnDhF,GADmD,yBAC3DvI,EAD2D,aAK1DJ,IAFN,EAAKF,MAAM4N,sBAAsBC,uBAAuBjN,MACtD,SAACuI,GAAD,OAAUA,EAAKD,SAASpD,cAAgBxF,EAAK4I,kBAGQhJ,IAAnDwX,EAAK9W,MAAK,SAACC,GAAD,OAASA,EAAIkD,SAAWzD,EAAKyD,YACzC2T,EAAI,sBAAOA,GAAP,CAAapX,MAPvB,2BAAyB,IAD2C,+BAatE,OAAOoX,GA/O+B,EAiPxCG,WAAa,SAAC9P,GACZ,IAAI+P,EAAkB,EAAKnW,MAAMoW,YACjC,EAAK3W,SAAS,CACZ2W,YAAY,GAAD,mBAAMD,GAAN,CAAa/P,OApPY,EAuPxCiQ,kBAAoB,SAClBrL,EACA7G,EACA9B,EACAyB,GAEA,GAAqB,OAAjBkH,GAA6C,OAApBlH,EAA0B,CACrD,IAAIiS,EAAO/K,EAAa/L,MACtB,SAACN,GAAD,OACEA,EAAK4I,SAASpD,cAAgBA,GAC9BxF,EAAK4F,oBAAoBC,kBACvBV,EAAgBU,mBAEtB,QAAajG,IAATwX,QAGAxX,IADAwX,EAAKxO,SAASvF,QAAQ/C,MAAK,SAACC,GAAD,OAASA,EAAImD,YAAcA,KAGtD,OAAO0T,EAIb,OAAO,MA7Q+B,EA+QxCrQ,gBAAkB,SAAClG,GACjB,EAAKC,SAAS,CAAEkM,aAAcnM,KAhRQ,EAmRxC4D,eAAiB,SAACzE,GAChB,EAAKc,SAAS,CAAE+F,eAAgB7G,EAAM8G,cAAc,IACpD,EAAKC,iBAAgB,IArRiB,EAwRxCsB,WAAa,WACX,EAAKvH,SAAS,CAAEgG,cAAc,IAC9B,EAAKC,iBAAgB,IAvRrB,EAAK1F,MAAQ,CACXN,SAAS,EACTwD,kBAAkB,EAClBoS,eAAgB,KAChBc,YAAa,GACbnK,sBAAuB,KACvBzG,eAAgB,KAChBC,cAAc,EACdkG,cAAc,EACd5J,iBAAkB,GAClB4T,eAAgB,GAChBW,aAAc,KACdjW,YAAY,GAfwB,EAJ1C,0CAiSE,WAAU,IAAD,OACDgR,EAAQC,MAASC,GAAGC,KAEpBoE,EACmC,OAAvC3V,KAAK5B,MAAMwF,QAAQC,gBACf7D,KAAK5B,MAAMgK,KAAK9D,oBAChBtE,KAAK5B,MAAMwF,QAAQC,gBACzB,OAAKiL,YAAU9O,KAAK5B,MAAMgK,KAAM2G,IAAeC,gBAAgBC,KAIf,OAA9CjP,KAAK5B,MAAM6B,cAAcC,kBAC0B,OAAnDF,KAAK5B,MAAM6B,cAAcE,wBACgB,IAAxCH,KAAK5B,MAAM6B,cAAcG,aACE,IAA1BJ,KAAKD,MAAMK,WAKb,eAAC,WAAD,WACiC,OAA9BJ,KAAKD,MAAMwF,eACV,sBAAKlH,UAAU,uBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,cAAC,IAAD,CACEgC,GAAG,aACHuJ,MAAM,gBACNvL,UAAU,yGAHZ,SAKE,cAAC,IAAD,CAAaA,UAAU,uDAEzB,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,0BAAhB,sBACA,sBAAMA,UAAU,wBAAhB,4DAMyB,KAA9B2B,KAAKD,MAAM2V,gBACV,qBACE9L,MAAM,6BACNhJ,QAAS,kBAAM,EAAKpB,SAAS,CAAEkW,eAAgB,MAC/CrX,UAAU,kGAHZ,SAKG2B,KAAKD,MAAM2V,iBAGfnJ,QAAQC,IAAI,cAAexM,KAAKD,MAAMsV,iBACf,IAAvBrV,KAAKD,MAAMN,UACoB,IAAhCO,KAAKD,MAAMkD,kBACmB,OAA9BjD,KAAKD,MAAMsV,gBACgD,MAA3DrV,KAAK5B,MAAM4N,sBAAsBC,uBAC/B,qBAAK5N,UAAU,uCAAf,SACE,cAAC,IAAD,MAIW,IAFX2B,KAAK6V,sBACL7V,KAAKD,MAAMsV,eAAeiB,cAC1B9X,OACF,qBAAKH,UAAU,iFAAf,4BAIA2B,KAAK6V,sBACH7V,KAAKD,MAAMsV,eAAeiB,cAC1B7X,KAAI,SAACC,EAAMC,GAAP,qBACJ,qBAAiBN,UAAU,kCAA3B,SACE,sBAAKA,UAAU,yDAAf,UACE,sBAAKA,UAAU,sDAAf,UACE,8BACE,cAAC,IAAD,CAA2BA,UAAU,uEAEvC,sBAAKA,UAAU,uBAAf,UACE,sBAAMA,UAAU,mEAAhB,SACGK,EAAKiE,cAER,sBAAKtE,UAAU,8DAAf,UACE,sBAAKA,UAAU,kDAAf,mBACSO,YAAKF,EAAKoC,UAAW,iBAE9B,sBAAKzC,UAAU,2FAAf,yBACeK,EAAKqC,cAEpB,sBAAK1C,UAAU,iFAAf,qBACWK,EAAK0E,kBAIhB,OADD,EAAKsE,aAAahJ,EAAK4I,SAAU5I,EAAKyD,SAErC,sBAAK9D,UAAU,wCAAf,UACE,+CACe,IACb,sBAAMA,UAAU,gGAAhB,mBAEI,EAAKqJ,aAAahJ,EAAK4I,SAAU5I,EAAKyD,eAF1C,aAEI,EACIX,iBAIV,sBAAKnD,UAAU,kCAAf,yBACe,IAEO,KADnB,YAAKqJ,aAAahJ,EAAK4I,SAAU5I,EAAKyD,eAAtC,eACGV,aACF,sBAAMpD,UAAU,uIAAhB,0BAIA,sBAAMA,UAAU,gGAAhB,mBAEI,EAAKqJ,aACHhJ,EAAK4I,SACL5I,EAAKyD,eAJX,aAEI,EAGGV,cAMW,KADnB,YAAKiG,aAAahJ,EAAK4I,SAAU5I,EAAKyD,eAAtC,eACGV,cACFmB,YACElE,EAAKoC,UACLpC,EAAKqC,WACLrC,EAAKmE,YACDC,IAAeE,SACnB,cAAC6R,EAAD,CACE1R,eAAgB,WACd,EAAK3D,SAAS,CACZ+F,eAAgB,CACd5C,YAAajE,EAAKiE,YAClBgF,YAAajJ,EAAKiJ,YAClBsF,YAAavO,EAAKiE,YAClB4T,cAAe,GACfnU,UAAW1D,EAAKyD,QAElBL,iBAAkBpD,EAAK4I,SACvB9B,cAAc,IAEhB,EAAKC,iBAAgB,kBASvC,qBAAKpH,UAAU,mDAAf,cAGQC,IAFL,EAAKyB,MAAMoW,YAAYnX,MACtB,SAACC,GAAD,OAASA,IAAQP,EAAKqX,QAExBrX,EAAK0E,cAAgBC,IAAeC,SACpC5E,EAAK0E,cAAgBC,IAAe8B,OAClCvC,YACElE,EAAKoC,UACLpC,EAAKqC,WACLrC,EAAKmE,YACDC,IAAeE,SACnB,YAAKoT,kBACH,EAAKhY,MAAM4N,sBACRC,uBACHvN,EAAK4I,SACL5I,EAAKyD,OACLwT,UALF,eAMGxW,sBACHqE,IAAkBC,YAChB,qBAAKpF,UAAU,8FAAf,6BAIA,qBACEuC,QAAS,WACP,IAAI2K,EAAc,EAAK6K,kBACrB,EAAKhY,MAAM4N,sBACRC,uBACHvN,EAAK4I,SACL5I,EAAKyD,OACLwT,GAEkB,OAAhBpK,EACF,EAAKrD,iBAAiBqD,EAAa7M,GAEnCoK,MAAM,kBAGVzK,UAAS,UACPK,EAAK0E,cAAgBC,IAAeC,SACpC5E,EAAK0E,cAAgBC,IAAe8B,OAChC,wCACA,sCAJG,yCAfX,SAsBGzG,EAAK0E,cAAgBC,IAAeC,QACjC,eACA5E,EAAK0E,cAAgBC,IAAe8B,OACpC,uBACA,eAGNzG,EAAK0E,cAAgBC,IAAeC,SACtC5E,EAAK0E,cAAgBC,IAAe+B,MACpC1G,EAAK0E,cAAgBC,IAAe8B,QACpCzG,EAAK0E,cAAgBC,IAAegC,QACpC,sBAAKhH,UAAU,6DAAf,UACE,yCACA,uBAAMA,UAAU,gCAAhB,UACGK,EAAK8X,WAAW3R,QACK,MAApBnG,EAAK8X,YAA0C,IAApB9X,EAAK8X,WAC5B,EACA,GAJR,OAQA,qBACE5V,QAAS,kBACP,EAAKpB,SAAS,CACZ6W,aAAc,CACZlU,OAAQzD,EAAKyD,OACbQ,YAAajE,EAAKiE,YAClB1B,YAAavC,EAAKuC,YAClBG,OAAQ1C,EAAK0C,OACb8E,MAAOxH,EAAKwH,MACZH,OAAQrH,EAAKqH,OACbjF,UAAWpC,EAAKoC,UAChBqF,QAASzH,EAAKqX,QAIpB1X,UAAU,+CAfZ,8BAqBF,qBAAKA,UAAU,oFAAf,sBAIe,IAAfK,EAAK+X,MACP,qBACE7M,MAAM,gCACNvL,UAAU,2GAFZ,SAIE,cAAC,IAAD,CACE0C,WAAY,IAAI4R,KAAKvB,EAAM0B,YAAYA,WACvC4D,aAAcC,YACZ,IAAIhE,KAAKvB,EAAM0B,YACf,IAAIH,KACF/T,YAAKF,EAAKoC,UAAW,cACnB,IACApC,EAAKqC,aAGX6V,QAAS,kBAAM,EAAKX,WAAWvX,EAAKqX,MACpCc,cAAc,EACdC,QAAQ,EACRC,MAAI,MAIR,sBAAK1Y,UAAU,6DAAf,UACE,yCACA,uBAAMA,UAAU,gCAAhB,UACGK,EAAK8X,WAAW3R,QACK,MAApBnG,EAAK8X,YAA0C,IAApB9X,EAAK8X,WAC5B,EACA,GAJR,OAQA,qBACE5V,QAAS,kBACP,EAAKpB,SAAS,CACZ6W,aAAc,CACZlU,OAAQzD,EAAKyD,OACbQ,YAAajE,EAAKiE,YAClB1B,YAAavC,EAAKuC,YAClBG,OAAQ1C,EAAK0C,OACb8E,MAAOxH,EAAKwH,MACZH,OAAQrH,EAAKqH,OACbjF,UAAWpC,EAAKoC,UAChBqF,QAASzH,EAAKqX,QAIpB1X,UAAU,+CAfZ,oCA3MAM,EAAI,MAsOa,OAA9BqB,KAAKD,MAAMsV,iBACa,IAAvBrV,KAAKD,MAAMN,SACXO,KAAKgW,iCACHhW,KAAKD,MAAMsV,eAAe2B,iBAC1BxY,OAAS,GACXwB,KAAKgW,iCACHhW,KAAKD,MAAMsV,eAAe2B,iBAC1BvY,KAAI,SAACC,EAAMC,GAAP,mBACJ,qBAEEN,UAAU,uCAFZ,SAIE,sBAAKA,UAAU,yDAAf,UACE,sBAAKA,UAAU,sDAAf,UACE,qBAAKA,UAAU,GAAf,SACE,cAAC,IAAD,CAA2BA,UAAU,uEAEvC,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,8DAAhB,SACGK,EAAKiE,cAER,qBAAKtE,UAAU,yCAAf,SAEI,OADD,EAAKqJ,aAAahJ,EAAK4I,SAAU5I,EAAKyD,SAErC,sBAAK9D,UAAU,wCAAf,UACE,sBAAKA,UAAU,4CAAf,yBACe,IACb,sBAAMA,UAAU,gGAAhB,mBAEI,EAAKqJ,aACHhJ,EAAK4I,SACL5I,EAAKyD,eAJX,aAEI,EAGGX,iBAIT,sBAAKnD,UAAU,kDAAf,yBACe,IAEO,KADnB,YAAKqJ,aAAahJ,EAAK4I,SAAU5I,EAAKyD,eAAtC,eACGV,aACF,sBAAMpD,UAAU,uIAAhB,0BAIA,sBAAMA,UAAU,gGAAhB,mBAEI,EAAKqJ,aACHhJ,EAAK4I,SACL5I,EAAKyD,eAJX,aAEI,EAGGV,cAMW,KADnB,YAAKiG,aAAahJ,EAAK4I,SAAU5I,EAAKyD,eAAtC,eACGV,cACF,cAACoT,EAAD,CACE1R,eAAgB,WACd,EAAK3D,SAAS,CACZ+F,eAAgB,CACd5C,YAAajE,EAAKiE,YAClBgF,YAAajJ,EAAKiJ,YAClBsF,YAAavO,EAAKiE,YAClB4T,cAAe,GACfnU,UAAW1D,EAAKyD,QAElBL,iBAAkBpD,EAAK4I,SACvB9B,cAAc,IAEhB,EAAKC,iBAAgB,oBAUvC,qBAAKpH,UAAU,0EAAf,8BAtEGM,EAAI,UA6EQ,IAAvBqB,KAAKD,MAAMN,QACb,qBAAKpB,UAAU,uCAAf,SACE,cAAC,IAAD,MAGF,sBAAKA,UAAU,2GAAf,UACE,qBAAKA,UAAU,8EAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,sBAAKA,UAAU,+DAAf,UACE,sBAAMA,UAAU,kCAAhB,kCAGA,qBAAKA,UAAU,0JAAf,SACE,cAAC,IAAD,CACEA,UAAU,yCACVuC,QAAS,WACP,EAAKpB,SAAS,CACZgG,cAAc,EACdD,eAAgB,mBAQ9B,cAAC,IAAD,CACEiE,gBAAiBxJ,KAAKD,MAAMwF,eAC5BkE,YAAazJ,KAAKyJ,YAClB1C,WAAY/G,KAAK+G,gBAIM,OAA5B/G,KAAKD,MAAMsW,cACV,cAAC,IAAD,CACEzM,MACE,qBAAKvL,UAAU,6CAAf,iCAIFgS,UAAU,EACVnD,MAAOoD,IAAOC,QACdC,MAAO,kBAAM,EAAKhR,SAAS,CAAE6W,aAAc,QAC3C5F,eAAe,EACfC,eAAgBC,IAAUC,WAC1BC,cAAc,EACdC,QAAS,CAAElH,OAAO,GAZpB,SAcE,cAAC,IAAD,CACEzD,QAASnG,KAAKD,MAAMsW,aACpBjN,aAAa,SAhad,cAAC,IAAD,CAAU/I,GAAG,aARb,cAAC,IAAD,CAAUA,GAAG,UAzS1B,GAAqCsB,aA6uBxBsV,EAAiBzM,aAnBN,SAAC,GAWvB,MAAO,CACLpC,KAFC,EATHA,KAYEnI,cAHC,EARHA,cAYE+L,sBAJC,EAPHA,sBAYEpI,QALC,EANHA,WAeqD,CACrD4R,yBACA5I,+BACA/L,8BACA6C,uBACAS,yBACAE,2BACA8D,mBACAmE,uBACAxM,6BAT4B0K,CAU3BwK","file":"static/js/48.56156eb5.chunk.js","sourcesContent":["import React from 'react'\nimport { applicationHistory, ApplicationStatesDescription } from '../../../interfaces/application'\nimport { DATE } from '../../../utils/functions'\n\ninterface ApplicationHistoryProps {\n  applicationHistory: applicationHistory[];\n}\n\nconst ApplicationHistory = (props: ApplicationHistoryProps) => {\n  return (\n    <div className=\"flex flex-col justify-between items-start gap-1 bg-white px-3 py-2\">\n      {/* <span className=\"text-sm text-blue-800 font-bold\">Application status history</span> */}\n      <hr className=\"bg-blue-600\" />\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-3\">\n      {props.applicationHistory !== undefined &&\n        props.applicationHistory.length > 0 && \n        props.applicationHistory.map((item, i) => (\n          <div key={i + 1} className=\"col-span-1 flex flex-col border border-blue-500 rounded px-3 py-2\">\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Date:</span>\n              <span className=\"font-bold\">{DATE(item.date, \"DD/MM/YYYY\")}</span>\n            </div>\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Action:</span>\n              <span className=\"font-bold\">{item.comment}</span>\n            </div>\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Application status:</span>\n              <span className=\"font-bold\">{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption}</span>\n            </div>\n          </div>\n        ))}\n      </div> \n    </div>\n  )\n}\n\nexport default ApplicationHistory\n","import React, { Component } from \"react\";\nimport { MdInfo, MdLocationOn } from \"react-icons/md\";\nimport { Redirect } from \"react-router-dom\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { LocationsDataStoreInterface } from \"../../../actions/locations_data\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { LoadingType } from \"../../../components/Loading/LoadingV2\";\nimport { applicationExamAPI } from \"../../../interfaces/application\";\nimport { DATE } from \"../../../utils/functions\";\nimport { LocationTableInterface } from \"../../Application/ExamCenter/ChooseExamCenter\";\n\ninterface ExamDetailsProps {\n  locationDetails: applicationExamAPI | undefined;\n  examDetails: InitialExamDetails | null;\n  locationsData: LocationsDataStoreInterface;\n  loadAllLocationsData: (callback: (loading: boolean) => void) => void;\n  setSelectedLocationData: (locationData: LocationTableInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  // selectedCourse: course;\n}\ninterface ExamDetailsState {\n  loading: boolean;\n}\n\nclass ExamDetails extends Component<ExamDetailsProps, ExamDetailsState> {\n  constructor(props: ExamDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  componentDidMount = () => {\n    if (\n      this.props.locationsData.Locations_list === null ||\n      this.props.locationsData.Locations_list.length === 0\n    ) {\n      this.props.loadAllLocationsData(this.setLoading);\n    }\n    // if (this.props.periods.applicationPeriods === null || this.props.periods.applicationPeriods.length === 0 || this.props.periods.selected_period === null) {\n    this.props.loadApplicationPeriods(this.setLoading);\n    // }\n  };\n  render() {\n    if (\n      this.props.candidateExam.selected_exam_id !== null &&\n      this.props.candidateExam.selected_exam_details !== null &&\n      this.props.candidateExam.doing_exam === true\n    ) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (this.props.examDetails === null) {\n      return (\n        <div className=\"bg-yellow-50 text-yellow-800 font-bold rounded px-2 py-4 text-center text-3xl border border-yellow-600 mx-4 my-4\">\n          No Exam details found!\n        </div>\n      );\n    }\n    if (this.props.locationDetails === undefined) {\n      return (\n        <div className=\"bg-yellow-50 text-yellow-800 font-bold rounded px-2 py-4 text-center text-3xl border border-yellow-600 mx-4 my-4\">\n          No exam location details found!\n        </div>\n      );\n    }\n    return (\n      <div>\n        {this.state.loading === true ? (\n          <div className=\"px-4 py-4 rounded bg-gray-100\">\n            <Loading type={LoadingType.dark} />\n          </div>\n        ) : (\n          <div>\n            <div className=\"bg-gray-100 rounded mx-2 mb-2 px-2 py-2\">\n              <div className=\"font-bold text-xl text-blue-600 mb-4 flex flex-row items-center justify-between gap-2 bg-white py-2 px-2 rounded\">\n                <div className=\"flex flex-row items-center gap-2\">\n                  <MdInfo className=\"text-4xl text-blue-600\" />\n                  Exam information\n                </div>\n                <button\n                  onClick={() => {\n                    // this.props.setSelectedCourse(this.props.selectedCourse);\n                    this.props.examDetails &&\n                      this.props.setSelectedCandidateExam(\n                        this.props.examDetails\n                      );\n                  }}\n                  type=\"button\"\n                  className={`btn ${\n                    this.props.candidateExam.selected_exam_id !== null\n                      ? \"bg-yellow-700 hover:bg-yellow-900\"\n                      : \"bg-blue-600 hover:bg-blue-700\"\n                  } text-white cursor-pointer text-base`}\n                >\n                  {this.props.candidateExam.selected_exam_id !== null\n                    ? \"Return to Exam\"\n                    : \"Start Exam\"}\n                </button>\n              </div>\n              <div className=\"grid md:grid-cols-3 gap-4\">\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam date:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {DATE(this.props.examDetails.exam_date, \"DD/MM/YYYY\")}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam start time:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.examDetails.start_time}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam duration:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.examDetails.duration / 60} hours{\" \"}\n                      {this.props.examDetails.duration % 60 > 0 && (\n                        <div>{this.props.examDetails.duration % 60} mins</div>\n                      )}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-3\">\n                  <div className=\"flex flex-col px-2 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam description:\n                    </span>\n                    <span className=\"text-gray-700 font-bold px-2 py-2 rounded bg-white mt-2\">\n                      {this.props.examDetails.discription}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-3\">\n                  <div className=\"flex flex-col px-2 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Terms and conditions / Rules:\n                    </span>\n                    <div\n                      className=\"px-2 py-2 rounded bg-white mt-2\"\n                      dangerouslySetInnerHTML={{\n                        __html: this.props.examDetails.termes,\n                      }}\n                    ></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"bg-gray-100 rounded mx-2 mb-2 px-2 py-2\">\n              <div className=\"font-bold text-xl text-blue-600 mb-4 flex flex-row items-center justify-between gap-2 bg-white py-2 px-2 rounded\">\n                <div className=\"flex flex-row items-center gap-2\">\n                  <MdLocationOn className=\"text-4xl text-blue-600\" />\n                  Examination location\n                </div>\n              </div>\n              <div className=\"grid md:grid-cols-3 gap-4 px-2\">\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Province:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationsData.Locations_list &&\n                        this.props.locationsData.Locations_list.find(\n                          (itm) =>\n                            this.props.locationDetails !== undefined &&\n                            itm.center_id ===\n                              this.props.locationDetails.center_id\n                        )?.province_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      District:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationsData.Locations_list &&\n                        this.props.locationsData.Locations_list.find(\n                          (itm) =>\n                            this.props.locationDetails !== undefined &&\n                            itm.center_id ===\n                              this.props.locationDetails.center_id\n                        )?.district_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Center:{\" \"}\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.center_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Room number:{\" \"}\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.room_number}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Proctoring type\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.proctoring_type}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ExamDetails;\n","import React, { Component } from \"react\";\nimport { CgCheckO } from \"react-icons/cg\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  applicationExamAPI,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\n\ninterface PreparedExamsProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  changeLocation: (item: PositionAPICourse) => void;\n  selectedApplicationDetails: GetApplicationsAPI;\n  setDoingExam: (status: boolean) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void;\n  setLoadingExams: (status: boolean) => void;\n}\ninterface PreparedExamsState {}\n\nexport class PreparedExams extends Component<\n  PreparedExamsProps,\n  PreparedExamsState\n> {\n  render() {\n    let NotPreparedExamsFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) => ex.course === itm.course_id\n        ).length === 0 && this.props.findExam(itm.course_id) === null\n    );\n    let PreparedExamsFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) => ex.course === itm.course_id\n        ).length === 0 && this.props.findExam(itm.course_id) !== null\n    );\n    let AllPendingExams = [...PreparedExamsFilter, ...NotPreparedExamsFilter];\n    let totalPending =\n      NotPreparedExamsFilter.length + PreparedExamsFilter.length;\n    return (\n      <div className=\"bg-white px-2 py-2\">\n        <div className=\"bg-gray-100 rounded px-2 py-2\">\n          <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n            <span className=\"font-bold \">Waiting exams</span>\n            <span className=\"font-bold bg-white text-blue-600 rounded-full px-2 text-base border border-blue-200\">\n              {this.props.selectedPosition !== null &&\n                this.props.selectedExams !== null &&\n                this.props.loadingExams === false &&\n                totalPending}\n            </span>\n          </div>\n          <div className=\"flex flex-col gap-2\">\n            {this.props.selectedPosition === null ||\n            this.props.selectedExams === null ||\n            this.props.loadingExams === true ? (\n              <Loading />\n            ) : AllPendingExams.length === 0 ? (\n              <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                <div className=\"flex justify-center items-center w-full text-4xl\">\n                  <IoMdInformationCircleOutline />\n                </div>\n                <div className=\"text-gray-500\">No exams found!</div>\n              </div>\n            ) : (\n              AllPendingExams.map((item, i) => (\n                <div\n                  key={i + 1}\n                  className={`px-3 py-2 rounded group bg-white border`}\n                >\n                  <div className=\"grid md:grid-cols-12 gap-2\">\n                    {/* First col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex fex-row items-center gap-3\">\n                      <div className=\"flex flex-row gap-2 items-center\">\n                        <div\n                          className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                        >\n                          {this.props.findExam(item.course_id) !== null ? (\n                            <CgCheckO className=\"text-4xl text-blue-600\" />\n                          ) : (\n                            <RiCheckboxBlankCircleFill className=\"text-4xl text-blue-100\" />\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"flex flex-col\">\n                        <div className={`font-bold text-gray-600 truncate`}>\n                          {item.course_name}\n                        </div>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">\n                            Exam date:{\" \"}\n                          </span>\n                          {this.props.findExam(item.course_id) !== null ? (\n                            <div className=\"flex flex-row items-center gap-2\">\n                              {validateExamDate(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                this.props.findExam(item.course_id)!.start_time,\n                                this.props.findExam(item.course_id)!.end_time\n                              ) === ExamTimeStatus.Online ? (\n                                <span className=\"bg-blue-100 text-blue-600 font-bold px-2 rounded-full\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              ) : validateExamDate(\n                                  this.props.findExam(item.course_id)!\n                                    .exam_date,\n                                  this.props.findExam(item.course_id)!\n                                    .start_time,\n                                  this.props.findExam(item.course_id)!.end_time\n                                ) === ExamTimeStatus.Expired ? (\n                                <span className=\"italic text-yellow-700 underline\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              ) : (\n                                <span className=\"italic\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              )}\n                              <span className=\"font-bold text-blue-600 text-sm\">\n                                {DATE(\n                                  this.props.findExam(item.course_id)!\n                                    .exam_date,\n                                  \"DD/MM/YYYY\"\n                                )}\n                              </span>\n                              <span\n                                className={`bg-blue-100 text-blue-600 font-bold px-2 py-1 rounded-full text-sm`}\n                              >\n                                {\n                                  this.props.findExam(item.course_id)!\n                                    .start_time\n                                }\n                              </span>\n                            </div>\n                          ) : (\n                            <span className=\"text-gray-500 text-sm\">\n                              Waiting for preparation\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    {/* Second col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex flex-col items-start justify-center\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <>\n                          <div className=\"flex flex-row justify-start items-center gap-2\">\n                            <span className=\"text-gray-500 text-xs\">\n                              Proctoring type:{\" \"}\n                            </span>\n                            <span className=\"text-gray-700 font-bold text-sm\">\n                              {this.props.selectedExams === null\n                                ? \"\"\n                                : this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  ) !== undefined &&\n                                  this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  )?.proctoring_type}\n                            </span>\n                          </div>\n                          <div className=\"flex flex-col justify-center items-start gap-2\">\n                            {/* <span className=\"text-gray-500 text-xs\">\n                              Exam location:{\" \"}\n                            </span> */}\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Center:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.center_name\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Room:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.room_number === 0 ? (\n                                  <span className=\"bg-yellow-100 text-yellow-700 font-bold px-2 py-1 rounded\">\n                                    Waiting room, you are advised to choose\n                                    another center\n                                  </span>\n                                ) : (\n                                  <span className=\"text-blue-600 bg-blue-100 px-2 py-1 rounded\">\n                                    No:{\" \"}\n                                    {\n                                      this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                          </div>\n                        </>\n                      ) : (\n                        <div className=\"flex flex-row gap-2 items-center justify-start\">\n                          <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                          <span className=\"text-yellow-700 italic text-sm\">\n                            No location selected\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    {/* Third col */}\n                    <div className=\"col-span-12 md:col-span-12 lg:col-span-4 flex items-center justify-start lg:justify-end\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            ((this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            ) === undefined &&\n                              this.props.findExam(item.course_id) !== null &&\n                              validateExamDate(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                this.props.findExam(item.course_id)!.start_time,\n                                this.props.findExam(item.course_id)!.end_time\n                              ) === ExamTimeStatus.Waiting) ||\n                              this.props.findExam(item.course_id) === null) && (\n                              <div\n                                onClick={() => this.props.changeLocation(item)}\n                                className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                              >\n                                Change location\n                              </div>\n                            )\n                          )}\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.course !==\n                              undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status !== UserExamStatus.Editing &&\n                            validateExamDate(\n                              this.props.findExam(item.course_id)!.exam_date,\n                              this.props.findExam(item.course_id)!.start_time,\n                              this.props.findExam(item.course_id)!.end_time\n                            ) === ExamTimeStatus.Online &&\n                            this.props.selectedApplicationDetails\n                              .application_status ===\n                              ApplicationStates.Shortlisted && (\n                              <div\n                                onClick={() => {\n                                  this.props.course.courses &&\n                                    this.props.setSelectedCourse(\n                                      this.props.course.courses.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )!\n                                    );\n                                  this.props.findExam(item.course_id) !==\n                                    null &&\n                                    this.setState({\n                                      appointmentDetailsModal: {\n                                        status: true,\n                                        item: this.props.findExam(\n                                          item.course_id\n                                        ),\n                                      },\n                                    });\n                                }}\n                                className=\"hidden btn border border-blue-500 text-blue-600 cursor-pointer hover:bg-blue-600 hover:text-white text-sm text-center\"\n                              >\n                                Details\n                              </div>\n                            )\n                          )}\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.periods.selected_period !== null &&\n                            this.props.periods.selected_period.is_active ===\n                              true &&\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.id !==\n                              undefined &&\n                            validateExamDate(\n                              this.props.findExam(item.course_id)!.exam_date,\n                              this.props.findExam(item.course_id)!.start_time,\n                              this.props.findExam(item.course_id)!.end_time\n                            ) === ExamTimeStatus.Online &&\n                            this.props.selectedApplicationDetails\n                              .application_status ===\n                              ApplicationStates.Shortlisted && (\n                              <div\n                                onClick={() => {\n                                  if (this.props.selectedPosition !== null) {\n                                    if (\n                                      this.props.positions.selected_position ===\n                                        null ||\n                                      this.props.positions.selected_position\n                                        .position_id !==\n                                        this.props.selectedPosition.position_id\n                                    ) {\n                                      this.props.setSelectedPosition(\n                                        this.props.selectedPosition\n                                      );\n                                    }\n                                    this.props.selectedExams !== null &&\n                                      this.props.course.courses &&\n                                      this.props.setSelectedCourse(\n                                        this.props.course.courses.find(\n                                          (itm) =>\n                                            itm.course_id === item.course_id\n                                        )!\n                                      );\n                                    this.props.selectedExams !== null &&\n                                      this.props.findExam(item.course_id) !==\n                                        null &&\n                                      this.props.setSelectedCandidateExam(\n                                        this.props.findExam(item.course_id)\n                                      );\n                                    this.props.setDoingExam(true);\n                                    this.props.selectedExams &&\n                                      this.props.InitializeExamDetails(\n                                        this.props.selectedApplicationDetails\n                                          .application_session.session_plan_id,\n                                        item.course_id,\n                                        this.props.selectedExams.find(\n                                          (itm) =>\n                                            itm.course_id === item.course_id\n                                        )!.district_id,\n                                        this.props.selectedExams.find(\n                                          (itm) =>\n                                            itm.course_id === item.course_id\n                                        )!.center_id,\n                                        this.props.selectedExams.find(\n                                          (itm) =>\n                                            itm.course_id === item.course_id\n                                        )!.room_id,\n                                        this.props.selectedPosition,\n                                        true,\n                                        this.props.setLoadingExams\n                                      );\n                                  }\n                                }}\n                                className={`btn border ${\n                                  this.props.candidateExam.user_exams_done.find(\n                                    (itm) => itm.course === item.course_id\n                                  )?.user_status !== UserExamStatus.Editing\n                                    ? \"border-blue-500 bg-blue-600 hover:text-blue-600\"\n                                    : \"border-green-500 bg-green-600 hover:text-green-600\"\n                                } text-white cursor-pointer hover:bg-white text-sm w-max text-center`}\n                              >\n                                {this.props.candidateExam.user_exams_done.find(\n                                  (itm) => itm.course === item.course_id\n                                )?.user_status !== UserExamStatus.Editing\n                                  ? \"Start exam\"\n                                  : \"Back to Exam\"}\n                              </div>\n                            )\n                          )}\n                          {this.props.selectedApplicationDetails\n                            .application_status ===\n                            ApplicationStates.Initiated && (\n                            <div className=\"font-semibold text-yellow-800 bg-yellow-50 py-2 px-4 text-base\">\n                              Waiting for shortlisting\n                            </div>\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined && (\n                            <div\n                              onClick={() => this.props.changeLocation(item)}\n                              className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                            >\n                              Choose location\n                            </div>\n                          )}\n                        </div>\n                      )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status !== UserExamStatus.Editing && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <div className=\"flex flex-col gap-0\">\n                                <span className=\"text-sm\">Marks</span>\n                                <span className=\"text-lg font-bold -mt-1\">\n                                  {this.props.candidateExam.user_exams_done\n                                    .find(\n                                      (itm) => itm.course === item.course_id\n                                    )\n                                    ?.total_marks.toFixed(2)}\n                                  %\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PreparedExams;\n","import React, { Component } from \"react\";\nimport { HiInformationCircle } from \"react-icons/hi\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { MdCheckCircle, MdPauseCircleFilled } from \"react-icons/md\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  applicationExamAPI,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\n\ninterface ActiveExamsProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  selectedApplicationDetails: GetApplicationsAPI;\n  setDoingExam: (status: boolean) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void;\n  setLoadingExams: (status: boolean) => void;\n}\ninterface ActiveExamsState {}\n\nexport class ActiveExams extends Component<ActiveExamsProps, ActiveExamsState> {\n  render() {\n    let ExamsDoneFilterTemp = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.findExam(itm.course_id) !== null &&\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) =>\n            ex.course === itm.course_id &&\n            validateExamDate(\n              ex.exam_date,\n              ex.exam_start_time,\n              ex.exam_end_time\n            ) === ExamTimeStatus.Online\n        ).length > 0\n    );\n    let ActiveExamsFilter = ExamsDoneFilterTemp.filter(\n      (check) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (itm) => itm.course === check.course_id\n        ) !== undefined &&\n        (this.props.candidateExam.user_exams_done.find(\n          (itm) => itm.course === check.course_id\n        )?.user_status === UserExamStatus.Editing ||\n          this.props.candidateExam.user_exams_done.find(\n            (itm) => itm.course === check.course_id\n          )?.user_status === UserExamStatus.Paused)\n    );\n    return (\n      <>\n        {ActiveExamsFilter.length > 0 ? (\n          <div className=\"bg-white px-2 py-2\">\n            <div className=\"bg-gray-100 rounded px-2 py-2\">\n              <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n                <span className=\"font-bold \">Active exam</span>\n                <span className=\"font-bold bg-white text-green-600 rounded-full px-2 text-base border border-gray-200\">\n                  {this.props.selectedPosition !== null &&\n                    this.props.selectedExams !== null &&\n                    this.props.loadingExams === false &&\n                    ActiveExamsFilter.length}\n                </span>\n              </div>\n              <div className=\"flex flex-col gap-2\">\n                {this.props.selectedPosition === null ||\n                this.props.selectedExams === null ||\n                this.props.loadingExams === true ? (\n                  <Loading />\n                ) : ActiveExamsFilter.length === 0 ? (\n                  <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                    <div className=\"flex justify-center items-center w-full text-4xl\">\n                      <IoMdInformationCircleOutline />\n                    </div>\n                    <div className=\"text-gray-500\">No exams found!</div>\n                  </div>\n                ) : (\n                  ActiveExamsFilter.map((item, i) => (\n                    <div\n                      key={i + 1}\n                      className={`px-3 py-2 rounded group bg-white border-2 border-green-600 hover:bg-green-50`}\n                    >\n                      <div className=\"grid md:grid-cols-12 gap-2\">\n                        {/* First col */}\n                        <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex fex-row items-center gap-3\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Editing && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-green-600 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <HiInformationCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Done && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdCheckCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Removed && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-yellow-800 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdCheckCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Paused && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-green-500 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdPauseCircleFilled className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined &&\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.id !==\n                              undefined && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2 animate-ping`}\n                                >\n                                  <HiInformationCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined &&\n                            (this.props.findExam(item.course_id) === null ||\n                              this.props.findExam(item.course_id)?.id ===\n                                undefined) && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <RiCheckboxBlankCircleFill className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          <div className=\"flex flex-col\">\n                            <div className={`font-bold text-gray-600 truncate`}>\n                              {item.course_name}\n                            </div>\n                            <div className=\"flex flex-row justify-start items-center gap-2\">\n                              <span className=\"text-gray-500 text-xs\">\n                                Exam date:{\" \"}\n                              </span>\n                              <div className=\"flex flex-row items-center gap-2\">\n                                <span className=\"font-bold text-green-600 text-sm\">\n                                  {DATE(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    \"DD/MM/YYYY\"\n                                  )}\n                                </span>\n                                <span\n                                  className={`bg-gray-100 text-green-600 font-bold px-2 py-1 rounded-full text-sm`}\n                                >\n                                  {\n                                    this.props.findExam(item.course_id)!\n                                      .start_time\n                                  }\n                                </span>\n                                <span\n                                  className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm underline`}\n                                >\n                                  {\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )?.user_status\n                                  }\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        {/* Second col */}\n                        <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex flex-col items-start justify-center\">\n                          {this.props.selectedExams === null ? (\n                            \"\"\n                          ) : this.props.selectedExams.find(\n                              (itm) => itm.course_id === item.course_id\n                            ) !== undefined ? (\n                            <>\n                              <div className=\"flex flex-row justify-start items-center gap-2\">\n                                <span className=\"text-gray-500 text-xs\">\n                                  Proctoring type:{\" \"}\n                                </span>\n                                <span className=\"text-gray-700 font-bold text-sm\">\n                                  {this.props.selectedExams === null\n                                    ? \"\"\n                                    : this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      ) !== undefined &&\n                                      this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )?.proctoring_type}\n                                </span>\n                              </div>\n                              <div className=\"flex flex-col justify-center items-start gap-2\">\n                                {/* <span className=\"text-gray-500 text-xs\">\n                                  Exam location:{\" \"}\n                                </span> */}\n                                <span\n                                  className={`text-gray-700 font-bold text-sm`}\n                                >\n                                  Center:{\" \"}\n                                  {this.props.selectedExams === null ? (\n                                    \"\"\n                                  ) : this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    ) !== undefined ? (\n                                    this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    )?.center_name\n                                  ) : (\n                                    <span className=\"italic text-xs\">\n                                      No location selected\n                                    </span>\n                                  )}\n                                </span>\n                                <span\n                                  className={`text-gray-700 font-bold text-sm`}\n                                >\n                                  Room:{\" \"}\n                                  {this.props.selectedExams === null ? (\n                                    \"\"\n                                  ) : this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    ) !== undefined ? (\n                                    this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    )?.room_number === 0 ? (\n                                      <span className=\"bg-yellow-100 text-yellow-700 font-bold px-2 py-1 rounded\">\n                                        Waiting room, you are advised to choose\n                                        another center\n                                      </span>\n                                    ) : (\n                                      <span className=\"text-blue-600 bg-blue-100 px-2 py-1 rounded\">\n                                        No:{\" \"}\n                                        {\n                                          this.props.selectedExams.find(\n                                            (itm) =>\n                                              itm.course_id === item.course_id\n                                          )?.room_number\n                                        }\n                                      </span>\n                                    )\n                                  ) : (\n                                    <span className=\"italic text-xs\">\n                                      No location selected\n                                    </span>\n                                  )}\n                                </span>\n                              </div>\n                            </>\n                          ) : (\n                            <div className=\"flex flex-row gap-2 items-center justify-start\">\n                              <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                              <span className=\"text-yellow-700 italic text-sm\">\n                                No location selected\n                              </span>\n                            </div>\n                          )}\n                        </div>\n                        {/* Third col */}\n                        <div className=\"col-span-12 md:col-span-12 lg:col-span-4 flex items-center justify-start lg:justify-end\">\n                          {this.props.selectedExams === null ? (\n                            \"\"\n                          ) : this.props.selectedExams.find(\n                              (itm) => itm.course_id === item.course_id\n                            ) !== undefined ? (\n                            <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                              {this.props.loadingExams === true ||\n                              this.props.loadingExamsDone === true ? (\n                                <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                                  Checking...\n                                </div>\n                              ) : (\n                                this.props.candidateExam.user_exams_done.find(\n                                  (itm) => itm.course === item.course_id\n                                ) === undefined && (\n                                  <div\n                                    onClick={() => {\n                                      this.setState({\n                                        selectedCourse: item,\n                                        centersModal: true,\n                                      });\n                                      this.props.setMaxExamModal(true);\n                                    }}\n                                    className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                                  >\n                                    Change location\n                                  </div>\n                                )\n                              )}\n                              {this.props.loadingExams === true ||\n                              this.props.loadingExamsDone === true ? (\n                                <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                                  Checking...\n                                </div>\n                              ) : (\n                                this.props.periods.selected_period !== null &&\n                                this.props.periods.selected_period.is_active ===\n                                  true &&\n                                this.props.findExam(item.course_id) !== null &&\n                                this.props.findExam(item.course_id)?.id !==\n                                  undefined &&\n                                this.props.selectedApplicationDetails\n                                  .application_status ===\n                                  ApplicationStates.Shortlisted && (\n                                  <div\n                                    onClick={() => {\n                                      if (\n                                        this.props.selectedPosition !== null\n                                      ) {\n                                        if (\n                                          this.props.positions\n                                            .selected_position === null ||\n                                          this.props.positions.selected_position\n                                            .position_id !==\n                                            this.props.selectedPosition\n                                              .position_id\n                                        ) {\n                                          this.props.setSelectedPosition(\n                                            this.props.selectedPosition\n                                          );\n                                        }\n                                        this.props.selectedExams !== null &&\n                                          this.props.course.courses &&\n                                          this.props.setSelectedCourse(\n                                            this.props.course.courses.find(\n                                              (itm) =>\n                                                itm.course_id === item.course_id\n                                            )!\n                                          );\n                                        this.props.selectedExams !== null &&\n                                          this.props.findExam(\n                                            item.course_id\n                                          ) !== null &&\n                                          this.props.setSelectedCandidateExam(\n                                            this.props.findExam(item.course_id)\n                                          );\n                                        this.props.setDoingExam(true);\n                                        this.props.selectedExams &&\n                                          this.props.InitializeExamDetails(\n                                            this.props\n                                              .selectedApplicationDetails\n                                              .application_session\n                                              .session_plan_id,\n                                            item.course_id,\n                                            this.props.selectedExams.find(\n                                              (itm) =>\n                                                itm.course_id === item.course_id\n                                            )!.district_id,\n                                            this.props.selectedExams.find(\n                                              (itm) =>\n                                                itm.course_id === item.course_id\n                                            )!.center_id,\n                                            this.props.selectedExams.find(\n                                              (itm) =>\n                                                itm.course_id === item.course_id\n                                            )!.room_id,\n                                            this.props.selectedPosition,\n                                            true,\n                                            this.props.setLoadingExams\n                                          );\n                                      }\n                                    }}\n                                    className={`btn border border-green-500 bg-green-600 hover:text-green-600 text-white cursor-pointer hover:bg-white text-sm w-max text-center`}\n                                  >\n                                    Back to exam\n                                  </div>\n                                )\n                              )}\n                            </div>\n                          ) : (\n                            <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                              {this.props.candidateExam.user_exams_done.find(\n                                (itm) => itm.course === item.course_id\n                              ) === undefined && (\n                                <div\n                                  onClick={() =>\n                                    this.setState({\n                                      selectedCourse: item,\n                                      centersModal: true,\n                                    })\n                                  }\n                                  className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                                >\n                                  Choose location\n                                </div>\n                              )}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default ActiveExams;\n","import React, { Component } from \"react\";\nimport { HiInformationCircle } from \"react-icons/hi\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { MdCheckCircle, MdPauseCircleFilled } from \"react-icons/md\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { applicationExamAPI } from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamAnswerSheetDone, UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\nimport { ExamDoneDetailsAnswers } from \"../../CandidateExams/CandidateExams\";\n\ninterface ExamsDoneProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  viewMarksDetails: (selectedExamDetails: ExamDoneDetailsAnswers) => void;\n}\ninterface ExamsDoneState {\n  loading: boolean;\n  selectedCourse: PositionAPICourse | null;\n  centersModal: boolean;\n}\n\nexport class ExamsDone extends Component<ExamsDoneProps, ExamsDoneState> {\n  constructor(props: ExamsDoneProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      centersModal: false,\n      selectedCourse: null,\n    };\n  }\n  viewMarksDetailsFn = (Exam: ExamAnswerSheetDone) => {\n    const examTest = this.props.candidateExam.user_exams_temp.find(\n      (itm) => itm.course === Exam.course && itm.period === Exam.period\n    );\n    if (examTest !== undefined) {\n      let courseSelected = this.props.selectedPosition.courses.find(\n        (itm) => itm.course_id === examTest.course\n      );\n      if (courseSelected !== undefined) {\n        this.props.viewMarksDetails({\n          course: examTest.course,\n          course_name: courseSelected.course_name,\n          discription: examTest.discription,\n          termes: examTest.termes,\n          rules: examTest.rules,\n          period: Exam.period,\n          exam_date: Exam.exam_date,\n          exam_id: Exam.exam_paper,\n        });\n      }\n    }\n  };\n  render() {\n    let ExamsDoneFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.findExam(itm.course_id) !== null &&\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) =>\n            ex.course === itm.course_id &&\n            (ex.user_status === UserExamStatus.Done ||\n              ex.user_status === UserExamStatus.Removed ||\n              validateExamDate(\n                ex.exam_date,\n                ex.exam_start_time,\n                ex.exam_end_time\n              ) === ExamTimeStatus.Expired)\n        ).length > 0\n    );\n    // console.log(\"Done ex: \", ExamsDoneFilter);\n    return (\n      <div className=\"bg-white px-2 py-2\">\n        <div className=\"bg-gray-100 rounded px-2 py-2\">\n          <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n            <span className=\"font-bold \">Completed exams</span>\n            <span className=\"font-bold bg-white text-gray-600 rounded-full px-2 text-base border border-gray-200\">\n              {this.props.selectedPosition !== null &&\n                this.props.selectedExams !== null &&\n                this.props.loadingExams === false &&\n                ExamsDoneFilter.length}\n            </span>\n          </div>\n          <div className=\"flex flex-col gap-2\">\n            {this.props.selectedPosition === null ||\n            this.props.selectedExams === null ||\n            this.props.loadingExams === true ? (\n              <Loading />\n            ) : ExamsDoneFilter.length === 0 ? (\n              <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                <div className=\"flex justify-center items-center w-full text-4xl\">\n                  <IoMdInformationCircleOutline />\n                </div>\n                <div className=\"text-gray-500\">No exams found!</div>\n              </div>\n            ) : (\n              ExamsDoneFilter.map((item, i) => (\n                <div key={i + 1} className={`px-3 py-2 rounded group bg-white`}>\n                  <div className=\"grid md:grid-cols-12 gap-2\">\n                    {/* First col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex fex-row items-center gap-3\">\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Editing && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <HiInformationCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Done && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdCheckCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Removed && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdCheckCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Paused && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdPauseCircleFilled className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) === undefined &&\n                        this.props.findExam(item.course_id) !== null &&\n                        this.props.findExam(item.course_id)?.id !==\n                          undefined && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2 animate-ping`}\n                            >\n                              <HiInformationCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) === undefined &&\n                        (this.props.findExam(item.course_id) === null ||\n                          this.props.findExam(item.course_id)?.id ===\n                            undefined) && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <RiCheckboxBlankCircleFill className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      <div className=\"flex flex-col\">\n                        <div className={`font-bold text-gray-600 truncate`}>\n                          {item.course_name}\n                        </div>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">\n                            Exam date:{\" \"}\n                          </span>\n                          <div className=\"flex flex-row items-center gap-2\">\n                            <span className=\"font-bold text-gray-800 text-sm\">\n                              {DATE(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                \"DD/MM/YYYY\"\n                              )}\n                            </span>\n                            <span\n                              className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm`}\n                            >\n                              {this.props.findExam(item.course_id)!.start_time}\n                            </span>\n                            <span\n                              className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm underline`}\n                            >\n                              {this.props.candidateExam.user_exams_done.find(\n                                (x) => x.course === item.course_id\n                              ) !== undefined\n                                ? validateExamDate(\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_date,\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_start_time,\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_end_time\n                                  ) === ExamTimeStatus.Expired &&\n                                  (this.props.candidateExam.user_exams_done.find(\n                                    (x) => x.course === item.course_id\n                                  )?.user_status === UserExamStatus.Editing\n                                    ? \"Not submitted\"\n                                    : this.props.candidateExam.user_exams_done.find(\n                                        (x) => x.course === item.course_id\n                                      )?.user_status === UserExamStatus.Paused)\n                                  ? \"Paused\"\n                                  : this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )?.user_status\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Second col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex flex-col items-start justify-center\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <>\n                          <div className=\"flex flex-row justify-start items-center gap-2\">\n                            <span className=\"text-gray-500 text-xs\">\n                              Proctoring type:{\" \"}\n                            </span>\n                            <span className=\"text-gray-700 font-bold text-sm\">\n                              {this.props.selectedExams === null\n                                ? \"\"\n                                : this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  ) !== undefined &&\n                                  this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  )?.proctoring_type}\n                            </span>\n                          </div>\n                          <div className=\"flex flex-col justify-center items-start gap-2\">\n                            {/* <span className=\"text-gray-500 text-xs\">\n                              Exam location:{\" \"}\n                            </span> */}\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Center:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.center_name\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Room:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.room_number === 0 ? (\n                                  <span className=\"bg-yellow-100 text-yellow-700 font-bold px-2 py-1 rounded\">\n                                    Waiting room, you are advised to choose\n                                    another center\n                                  </span>\n                                ) : (\n                                  <span className=\"text-blue-600 bg-blue-100 px-2 py-1 rounded\">\n                                    No:{\" \"}\n                                    {\n                                      this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                          </div>\n                        </>\n                      ) : (\n                        <div className=\"flex flex-row gap-2 items-center justify-start\">\n                          <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                          <span className=\"text-yellow-700 italic text-sm\">\n                            No location selected\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    {/* Third col */}\n                    <div className=\"col-span-12 md:col-span-12 lg:col-span-4 items-center justify-start lg:justify-end\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            ) === undefined && (\n                              <div\n                                onClick={() => {\n                                  this.setState({\n                                    selectedCourse: item,\n                                    centersModal: true,\n                                  });\n                                  this.props.setMaxExamModal(true);\n                                }}\n                                className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                              >\n                                Change location\n                              </div>\n                            )\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined && (\n                            <div\n                              onClick={() =>\n                                this.setState({\n                                  selectedCourse: item,\n                                  centersModal: true,\n                                })\n                              }\n                              className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                            >\n                              Choose location\n                            </div>\n                          )}\n                        </div>\n                      )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined && (\n                        // this.props.candidateExam.user_exams_done.find(\n                        //   (itm) => itm.course === item.course_id\n                        // )?.user_status !== UserExamStatus.Editing &&\n                        <div className=\"flex flex-row gap-2 items-center justify-end h-full\">\n                          <div\n                            className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                          >\n                            <div className=\"flex flex-col gap-0\">\n                              <span className=\"text-sm\">Marks</span>\n                              <span className=\"text-lg font-bold -mt-1\">\n                                {this.props.candidateExam.user_exams_done\n                                  .find((itm) => itm.course === item.course_id)\n                                  ?.total_marks.toFixed(2)}\n                                %\n                              </span>\n                            </div>\n                            <div\n                              onClick={() =>\n                                this.viewMarksDetailsFn(\n                                  this.props.candidateExam.user_exams_done.find(\n                                    (itm) => itm.course === item.course_id\n                                  )!\n                                )\n                              }\n                              className=\"btn bg-blue-100 hover:bg-blue-200 cursor-pointer text-blue-700 hover:text-blue-900\"\n                            >\n                              Details\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExamsDone;\n","import React, { Component } from \"react\";\n\nimport { Fragment } from \"react\";\nimport { MdClose, MdHistory } from \"react-icons/md\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport ChooseExamCenter, {\n  LocationTableInterface,\n} from \"../Application/ExamCenter/ChooseExamCenter\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadExam,\n  examDataInterface,\n  PrepareExamsStoreInterface,\n  loadExamsList,\n  LocationsDataStoreInterface,\n  loadAllLocationsData,\n  setSelectedLocationData,\n  applicationPeriodsStoreInterface,\n  loadApplicationPeriods,\n  candidateExamStoreInterface,\n  setSelectedCandidateExam,\n  courseStoreInterface,\n  loadCourses,\n  setSelectedCourse,\n  InitializeExamDetails,\n  InitialExamDetails,\n  setSelectedPeriod,\n  setSelectedPosition,\n  positionsStoreInterface,\n  loadExamsDone,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  ExamInterface,\n  examStatus,\n  UserExamStatus,\n} from \"../../interfaces/exam\";\nimport {\n  CandidateClaimInterface,\n  course,\n  PlansTypeKeys,\n  PositionAPI,\n  PositionAPICourse,\n} from \"../../interfaces/index\";\nimport {\n  applicationExamAPI,\n  applicationHistory,\n  ApplicationPeriodGet,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport { BsFileEarmarkText } from \"react-icons/bs\";\nimport { IoMdTrash } from \"react-icons/io\";\nimport ApplicationHistory from \"./ApplicationHistory/ApplicationHistory\";\nimport ExamDetails from \"./ExamDetails/ExamDetails\";\nimport { CheckIfExamDone, findTotalMarks } from \"../../utils/question_bank\";\nimport PreparedExams from \"./ExamStatus/PreparedExams\";\nimport ActiveExams from \"./ExamStatus/ActiveExams\";\nimport ExamsDone from \"./ExamStatus/ExamsDone\";\nimport { IoHandLeftSharp } from \"react-icons/io5\";\nimport { isClaimAllowed } from \"../Claimings/Candidate/ClaimForm\";\nimport ClaimFormComponent from \"../../components/ClaimForm/ClaimFormComponent\";\nimport { ClaimingReducerType } from \"../../reducers/claiming\";\nimport { getMyClaims } from \"../../actions/claiming\";\nimport { ExamDoneDetailsAnswers } from \"../CandidateExams/CandidateExams\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\n\ninterface PostExamsProps {\n  doExam: examDataInterface;\n  auth: Auth;\n  loadExam: (user_id: string, exam: ExamInterface) => void;\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  selected_application: string | null;\n  updateLocation: (application_id: string, exams: sentExamInterface[]) => void;\n  changeLocationError: string | null;\n  loading: boolean;\n  incrementIncomplete: () => void;\n  applicationHistory: applicationHistory[] | undefined;\n  deleteApplication: (id: string) => void;\n  selectedApplicationDetails: GetApplicationsAPI | null;\n  locationsData: LocationsDataStoreInterface;\n  loadAllLocationsData: (callback: (loading: boolean) => void) => void;\n  setSelectedLocationData: (locationData: LocationTableInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  course: courseStoreInterface;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  setSelectedCourse: (course: course | null) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  positions: positionsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setMaxExamModal: (status: boolean) => void;\n  setDisplayDetailsModal: (status: boolean) => void;\n  claiming: ClaimingReducerType;\n  getMyClaims: Function;\n  setDoingExam: (status: boolean) => void;\n  doing_exam: boolean;\n}\ninterface PostExamsState {\n  appointmentDetailsModal: {\n    status: boolean;\n    item: InitialExamDetails | null;\n  };\n  redirect: boolean;\n  displayResults: boolean;\n  changeLocation: {\n    status: boolean;\n    location: ExamInterface | null;\n  };\n  centersModal: boolean;\n  selectedCourse: course | null;\n  selectedLocation: applicationExamAPI | null;\n  applicationHistoryState: boolean;\n  loading: boolean;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  claim: boolean;\n  selectedExamDetails: ExamDoneDetailsAnswers | null;\n}\n\nclass _PostExams extends Component<PostExamsProps, PostExamsState> {\n  constructor(props: PostExamsProps) {\n    super(props);\n\n    this.state = {\n      appointmentDetailsModal: {\n        status: false,\n        item: null,\n      },\n      redirect: false,\n      displayResults: false,\n      changeLocation: {\n        status: false,\n        location: null,\n      },\n      centersModal: false,\n      selectedCourse: null,\n      selectedLocation: null,\n      applicationHistoryState: false,\n      loading: false,\n      loadingExams: false,\n      loadingExamsDone: true,\n      claim: false,\n      selectedExamDetails: null,\n    };\n  }\n\n  renderExam = (user_id: string, exam: ExamInterface) => {\n    exam.status = examStatus.Editing;\n    this.props.loadExam(user_id, exam);\n    this.setState({ redirect: true });\n  };\n\n  setClaim = (status: boolean) => {\n    this.setState({ claim: status });\n  };\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n    this.props.setMaxExamModal(false);\n  };\n\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.props.selected_application !== null) {\n      this.props.updateLocation(this.props.selected_application, exams);\n    }\n  };\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setLoadingExams = (status: boolean) => {\n    this.setState({ loadingExams: status });\n  };\n  setLoadingExamsDone = (status: boolean) => {\n    this.setState({ loadingExamsDone: status });\n  };\n\n  showTotalMarks = (position: PositionAPI): boolean => {\n    for (let item of position.courses) {\n      let test = this.props.candidateExam.user_exams_done.find(\n        (itm) => itm.course === item.course_id\n      );\n      if (test !== undefined) {\n        if (\n          test.user_status === UserExamStatus.Paused ||\n          test.user_status === UserExamStatus.Editing\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n\n  numberOfIncomplete = (\n    exams: sentExamInterface[],\n    courses: {\n      course_name: string;\n      course_code: string;\n      description: string;\n      school_levels: string[];\n      course_id: string;\n    }[]\n  ) => {\n    let count: number = 0;\n    for (let i in courses) {\n      if (\n        exams.filter((item) => item.course_id === courses[i].course_id)\n          .length === 0\n      ) {\n        count = count + 1;\n      }\n    }\n    return count;\n  };\n\n  findLocation = (\n    course_id: string,\n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string\n  ) => {\n    return this.updateLocationFunction([\n      {\n        course_id: course_id,\n        proctoring_type: \"Center\",\n        center_id: location.center_id,\n        district_id: location.district_id,\n      },\n    ]);\n  };\n\n  findExam = (courseId: string) => {\n    if (this.props.candidateExam.user_exams_temp !== null) {\n      let current_temp = this.props.candidateExam.user_exams_temp.find(\n        (itm) => itm.course === courseId\n      );\n      let testDone = this.props.candidateExam.user_exams_done.find(\n        (itm) => itm.course === courseId\n      );\n      if (\n        current_temp !== undefined &&\n        (testDone === undefined ||\n          testDone.user_status === UserExamStatus.Editing ||\n          testDone.user_status === UserExamStatus.Paused ||\n          testDone.user_status === UserExamStatus.Done ||\n          testDone.user_status === UserExamStatus.Removed)\n      ) {\n        return current_temp;\n      }\n    }\n    return null;\n  };\n\n  findCourse = (course_id: string): applicationExamAPI | null => {\n    if (this.props.selectedExams !== null) {\n      let x: applicationExamAPI | null | undefined =\n        this.props.selectedExams.find(\n          (itm) =>\n            this.state.appointmentDetailsModal && itm.course_id === course_id\n        );\n      if (x !== undefined && x !== null) {\n        return x;\n      }\n    }\n    return null;\n  };\n\n  pendingCourses = () => {\n    let count = 0;\n    for (let course of this.props.selectedPosition.courses) {\n      if (this.props.candidateExam.user_exams_temp !== null) {\n        // let current_temp = this.props.candidateExam.user_exams_temp.find(itm => itm.course === course.course_id);\n        let testDone = this.props.candidateExam.user_exams_done.find(\n          (itm) => itm.course === course.course_id\n        );\n        if (testDone === undefined) {\n          count = count + 1;\n        }\n      }\n    }\n    return count;\n  };\n\n  changeLocation = (item: PositionAPICourse) => {\n    this.setState({ selectedCourse: item, centersModal: true });\n    this.props.setMaxExamModal(true);\n  };\n\n  InitializationFn = () => {\n    if (\n      this.props.periods.selected_period !== null &&\n      this.props.selectedPosition !== null\n    ) {\n      this.props.loadExamsDone(\n        this.props.periods.selected_period.session_plan_id,\n        this.props.auth.user.user_id,\n        this.setLoadingExamsDone\n      );\n      // if (this.state.loadingExamsDone === false) {\n      for (let course of this.props.selectedPosition.courses) {\n        let testDone = this.props.candidateExam.user_exams_temp.find(\n          (itm) => itm.course === course.course_id\n        );\n        if (testDone === undefined) {\n          let center_id = this.props.selectedExams?.find(\n            (itm) => itm.course_id === course.course_id\n          );\n          if (center_id !== undefined) {\n            this.props.setSelectedCourse(course);\n            return this.props.InitializeExamDetails(\n              this.props.periods.selected_period.session_plan_id,\n              course.course_id,\n              center_id.district_id,\n              center_id.center_id,\n              center_id.room_id,\n              this.props.selectedPosition,\n              false,\n              this.setLoadingExams\n            );\n          }\n        }\n      }\n      // }\n    }\n  };\n\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.setLoading);\n    if (\n      this.props.course.courses === null ||\n      this.props.course.courses.length === 0\n    ) {\n      this.props.loadCourses(this.setLoading);\n    }\n    this.InitializationFn();\n    if (this.props.doExam.exam_answers) {\n      if (this.props.doExam.exam_answers.status === examStatus.Editing) {\n        this.setState({ redirect: true });\n      }\n    }\n    if (\n      this.props.claiming.myClaims === null &&\n      this.props.periods.selected_period !== null\n    ) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        this.props.periods.selected_period.session_plan_id,\n        (status: boolean, msg: string, data?: CandidateClaimInterface[]) => {\n          this.setState({ loading: status });\n          if (msg !== \"\") {\n            alert(msg);\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    if (\n      this.props.candidateExam.selected_exam_id !== null &&\n      this.props.candidateExam.selected_exam_details !== null &&\n      (this.props.candidateExam.doing_exam === true ||\n        this.props.doing_exam === true)\n    ) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (\n      this.state.redirect === true &&\n      (this.props.candidateExam.doing_exam === true ||\n        this.props.doing_exam === true)\n    ) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (\n      this.props.loading === true ||\n      this.state.loadingExams === true ||\n      this.state.loadingExamsDone === true\n    ) {\n      return (\n        <div className=\"bg-white border my-4 mx-4 rounded px-4 py-4 flex flex-col\">\n          <span className=\"mx-4 animate-pulse\">Loading, Please wait...</span>\n          <Loading />\n        </div>\n      );\n    }\n    return this.props.selectedExams === null ? (\n      \"No result found!\"\n    ) : (\n      <Fragment>\n        {this.state.selectedExamDetails !== null ? (\n          <>\n            <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n                <div className=\"flex flex-col w-full\">\n                  <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                    <span className=\"font-bold text-xl text-gray-800\">\n                      Exam answers details\n                    </span>\n                    <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                      <MdClose\n                        className=\"cursor-pointer font-extrabold text-3xl\"\n                        onClick={() => {\n                          this.setState({\n                            selectedExamDetails: null,\n                          });\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <CandidateAnswersDetails\n                exam_id={this.state.selectedExamDetails}\n                showAnswers={false}\n              />\n            </div>\n          </>\n        ) : this.state.appointmentDetailsModal.status === true &&\n          this.state.appointmentDetailsModal.item !== null ? (\n          <>\n            <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Exam:{\" \"}\n                    {this.state.appointmentDetailsModal.item !== null && (\n                      <>\n                        {\n                          this.findCourse(\n                            this.state.appointmentDetailsModal.item!.course\n                          )?.course_name\n                        }\n                      </>\n                    )}\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() =>\n                        this.setState({\n                          appointmentDetailsModal: {\n                            status: false,\n                            item: null,\n                          },\n                          displayResults: false,\n                        })\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n              {this.findExam(this.state.appointmentDetailsModal.item.course) ===\n              null ? (\n                <div className=\"text-yellow-700 font-bold text-center text-3xl bg-yellow-50 border border-yellow-200 rounded px-4 py-4 mx-4 my-4\">\n                  No exam found for selected course\n                </div>\n              ) : this.props.periods.applicationPeriods &&\n                (this.props.periods.applicationPeriods.find(\n                  (itm) =>\n                    this.state.appointmentDetailsModal.item &&\n                    itm.session_plan_id ===\n                      this.state.appointmentDetailsModal.item.period\n                )?.is_active === false ||\n                  this.props.periods.applicationPeriods.find(\n                    (itm) =>\n                      this.state.appointmentDetailsModal.item &&\n                      itm.session_plan_id ===\n                        this.state.appointmentDetailsModal.item.period\n                  )?.is_active === undefined) ? (\n                <div className=\"text-yellow-700 font-bold text-center text-3xl bg-yellow-50 border border-yellow-200 rounded px-4 py-4 mx-4 my-4 flex flex-col items-center\">\n                  <div>No exam for the selected period</div>\n                  <div\n                    onClick={() =>\n                      this.props.loadApplicationPeriods(this.setLoading)\n                    }\n                    className=\"btn bg-white text-gray-700 w-max text-base border border-gray-700 mt-4 cursor-pointer\"\n                  >\n                    Reload\n                  </div>\n                </div>\n              ) : (\n                <ExamDetails\n                  locationDetails={this.props.selectedExams.find(\n                    (itm) =>\n                      this.state.appointmentDetailsModal.item &&\n                      itm.course_id ===\n                        this.state.appointmentDetailsModal.item.course\n                  )}\n                  examDetails={this.findExam(\n                    this.state.appointmentDetailsModal.item.course\n                  )}\n                  locationsData={this.props.locationsData}\n                  loadAllLocationsData={this.props.loadAllLocationsData}\n                  setSelectedLocationData={this.props.setSelectedLocationData}\n                  periods={this.props.periods}\n                  loadApplicationPeriods={this.props.loadApplicationPeriods}\n                  candidateExam={this.props.candidateExam}\n                  setSelectedCandidateExam={this.props.setSelectedCandidateExam}\n                />\n              )}\n            </div>\n          </>\n        ) : this.state.centersModal === true &&\n          this.state.selectedCourse !== null ? (\n          <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Change exam location\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() => {\n                        this.setState({\n                          centersModal: false,\n                          selectedCourse: null,\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ChooseExamCenter\n              positionCourses={this.state.selectedCourse}\n              addLocation={this.findLocation}\n              closeModal={this.closeModal}\n            />\n          </div>\n        ) : this.state.applicationHistoryState === true ? (\n          this.props.applicationHistory === undefined ? (\n            <div className=\"text-yellow-700 font-bold text-2xl text-center\">\n              No application history found!\n            </div>\n          ) : (\n            <div className=\"animate__animated animate__fadeInUp animate__faster bg-white mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Application history\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() =>\n                        this.setState({ applicationHistoryState: false })\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n              <ApplicationHistory\n                applicationHistory={this.props.applicationHistory}\n              />\n            </div>\n          )\n        ) : (\n          <div className=\"\">\n            <div className=\"px-2 md:py-2\">\n              <div className=\"flex flex-col md:flex-row justify-between items-center md:items-center\">\n                <div className=\"flex flex-row items-center gap-3 mb-3 pt-4 lg:pt-0\">\n                  <span className=\"bg-blue-50  text-gray-600 font-base rounded-md px-3 py-1 mt-0\">\n                    Status:{\" \"}\n                    <span className=\"font-extrabold text-blue-700 underline\">\n                      {\n                        this.props.selectedApplicationDetails\n                          ?.application_status\n                      }\n                    </span>\n                  </span>\n                  <div\n                    onClick={() =>\n                      this.setState({ applicationHistoryState: true })\n                    }\n                    className=\"btn bg-gray-100 text-gray-600 border border-gray-300 text-sm flex flex-row items-center gap-2 cursor-pointer hover:border-blue-500 hover:bg-blue-50 hover:text-blue-600 md:mt-0\"\n                  >\n                    <MdHistory className=\"text-xl\" />\n                    <span>View application history</span>\n                  </div>\n                </div>\n                <div\n                  className={`grid ${\n                    this.pendingCourses() > 0 ? \"grid-cols-3\" : \"grid-cols-2\"\n                  } gap-4 w-full md:w-max bg-gray-100 md:bg-white p-2 md:p-0 rounded mb-2 md:mb-0`}\n                >\n                  <div className=\"col-span-1 flex justify-start md:justify-end\">\n                    <div className=\"flex flex-row items-center\">\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                          Total\n                        </span>\n                        <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                          {this.props.selectedExams.length}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  {this.pendingCourses() > 0 && (\n                    <div className=\"col-span-1 flex justify-start md:justify-end\">\n                      <div className=\"flex flex-row items-center\">\n                        <div className=\"flex flex-col\">\n                          <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                            Pending\n                          </span>\n                          <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                            {this.props.selectedPosition !== null &&\n                              this.pendingCourses()}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  <div className=\"col-span-1 flex justify-start md:justify-end\">\n                    <div className=\"flex flex-row items-center\">\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                          Total marks\n                        </span>\n                        {this.showTotalMarks(this.props.selectedPosition) ===\n                        true ? (\n                          // this.state.loadingExams === true || this.state.loadingExamsDone === true ? <span>Wait...</span> :\n                          <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                            {parseFloat(\n                              findTotalMarks(\n                                this.props.selectedPosition.courses,\n                                this.props.candidateExam.user_exams_done\n                              )\n                            ) > 0\n                              ? (\n                                  parseFloat(\n                                    findTotalMarks(\n                                      this.props.selectedPosition.courses,\n                                      this.props.candidateExam.user_exams_done\n                                    )\n                                  ) / this.props.selectedPosition.courses.length\n                                ).toFixed(2)\n                              : 0}\n                            %\n                          </span>\n                        ) : (\n                          <div\n                            title=\"You can not view marks because one of your exams is not completed\"\n                            className=\"py-1 text-center bg-yellow-100 rounded w-max px-4 my-1\"\n                          >\n                            Hidden\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"font-bold flex flex-col md:flex-row items-start md:items-center justify-start md:justify-between gap-2\">\n                {this.props.selectedApplicationDetails &&\n                this.props.selectedApplicationDetails.application_status !==\n                  ApplicationStates.Rejected ? (\n                  <div className=\"text-xl flex flex-row items-center gap-2\">\n                    <BsFileEarmarkText className=\"text-2xl\" />\n                    <span>Exams list: </span>\n                  </div>\n                ) : (\n                  <div>\n                    {this.state.loadingExams === false &&\n                    this.state.loadingExamsDone === false &&\n                    CheckIfExamDone(\n                      this.props.selectedPosition.courses,\n                      this.props.candidateExam.user_exams_done\n                    ) === false &&\n                    this.props.periods.selected_period &&\n                    this.props.selected_application &&\n                    this.props.claiming.myClaims &&\n                    isClaimAllowed(\n                      this.props.claiming.myClaims,\n                      this.props.periods.selected_period.session_plan_id,\n                      this.props.selected_application\n                    ) === true ? (\n                      <div\n                        onClick={() => this.setClaim(!this.state.claim)}\n                        className=\"btn flex flex-row gap-2 items-center text-green-700 bg-green-50 cursor-pointer hover:bg-green-100 hover:text-green-900 border border-green-600 hover:border-green-800\"\n                      >\n                        <IoHandLeftSharp className=\"text-xl \" />\n                        <span className=\"text-sm\">Claim now</span>\n                      </div>\n                    ) : this.props.claiming.myClaims === null ? (\n                      <div>Loading...</div>\n                    ) : (\n                      this.props.claiming.myClaims.length > 0 && (\n                        <div\n                          onClick={() => this.setClaim(!this.state.claim)}\n                          className=\"btn flex flex-row gap-2 items-center text-white bg-blue-600 cursor-pointer hover:bg-blue-800\"\n                        >\n                          <IoHandLeftSharp className=\"text-xl \" />\n                          <span className=\"text-sm\">\n                            {this.state.claim === true\n                              ? \"Hide details\"\n                              : \"View claim details\"}\n                          </span>\n                        </div>\n                      )\n                    )}\n                  </div>\n                )}\n                {this.state.loadingExams === false &&\n                  this.state.loadingExamsDone === false &&\n                  CheckIfExamDone(\n                    this.props.selectedPosition.courses,\n                    this.props.candidateExam.user_exams_done\n                  ) === false && (\n                    <div\n                      onClick={() =>\n                        this.props.selected_application &&\n                        this.props.deleteApplication(\n                          this.props.selected_application\n                        )\n                      }\n                      className=\"btn flex flex-row gap-2 items-center text-red-700 bg-red-50 cursor-pointer hover:bg-red-100 hover:text-red-900\"\n                    >\n                      <IoMdTrash className=\"text-xl \" />\n                      <span className=\"text-sm\">Remove application</span>\n                    </div>\n                  )}\n              </div>\n              {this.state.claim === true &&\n                this.props.selected_application !== null && (\n                  <div className=\"bg-gray-100 mt-4 pt-2 rounded\">\n                    <ClaimFormComponent\n                      setFormState={this.setClaim}\n                      claim_type={PlansTypeKeys.APPLICATION}\n                      file_id={this.props.selected_application}\n                    />\n                  </div>\n                )}\n            </div>\n            {this.props.selectedApplicationDetails &&\n              this.props.selectedApplicationDetails.application_status !==\n                ApplicationStates.Rejected && (\n                <>\n                  <ActiveExams\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    selectedApplicationDetails={\n                      this.props.selectedApplicationDetails\n                    }\n                    setDoingExam={this.props.setDoingExam}\n                    InitializeExamDetails={this.props.InitializeExamDetails}\n                    setLoadingExams={this.setLoadingExams}\n                  />\n                  <PreparedExams\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    changeLocation={this.changeLocation}\n                    selectedApplicationDetails={\n                      this.props.selectedApplicationDetails\n                    }\n                    setDoingExam={this.props.setDoingExam}\n                    InitializeExamDetails={this.props.InitializeExamDetails}\n                    setLoadingExams={this.setLoadingExams}\n                  />\n                  <ExamsDone\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    viewMarksDetails={(\n                      selectedExamDetails: ExamDoneDetailsAnswers\n                    ) => {\n                      this.setState({\n                        selectedExamDetails: selectedExamDetails,\n                      });\n                    }}\n                  />\n                </>\n              )}\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  doExam,\n  prepareExam,\n  locationsData,\n  periods,\n  candidateExam,\n  course,\n  positions,\n  claiming,\n}: StoreState): {\n  auth: Auth;\n  doExam: examDataInterface;\n  prepareExam: PrepareExamsStoreInterface;\n  locationsData: LocationsDataStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n  course: courseStoreInterface;\n  positions: positionsStoreInterface;\n  claiming: ClaimingReducerType;\n} => {\n  return {\n    auth: auth,\n    doExam: doExam,\n    prepareExam: prepareExam,\n    locationsData: locationsData,\n    periods: periods,\n    candidateExam: candidateExam,\n    course: course,\n    positions: positions,\n    claiming: claiming,\n  };\n};\n\nconst PostExams = connect(mapStateToProps, {\n  loadExam,\n  loadExamsList,\n  loadAllLocationsData,\n  setSelectedLocationData,\n  loadApplicationPeriods,\n  setSelectedCandidateExam,\n  loadCourses,\n  setSelectedCourse,\n  InitializeExamDetails,\n  setSelectedPeriod,\n  setSelectedPosition,\n  loadExamsDone,\n  getMyClaims,\n})(_PostExams);\n\nexport default PostExams;\n","import React, { Component } from \"react\";\nimport { GetApplicationsAPI } from \"../../interfaces/application\";\nimport { CandidateInterface } from \"../../interfaces/candidatesInterfaces\";\nimport { PlacedCandidateStatus } from \"../../interfaces/marks_publication\";\nimport { UserInfoInterface } from \"../../shared/interfaces\";\n\ninterface CandidatePlacementCheckProps {\n  position: GetApplicationsAPI;\n  user: CandidateInterface;\n}\ninterface CandidatePlacementCheckState {\n  loading: boolean;\n}\ninterface SchoolItemPlacement {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\nexport interface SchoolPlacementInterface {\n  n_id: string;\n  phone_number: string;\n  email: string;\n  user_info: UserInfoInterface;\n  placed: {\n    _id: string;\n    comment: string;\n    status: PlacedCandidateStatus;\n    waiting_list_id: string;\n    user_id: string;\n    school_id: string;\n    district_id: string;\n    position_id: string;\n    request_id: string;\n    createdAt: string;\n    updatedAt: string;\n    school: SchoolItemPlacement;\n    __v: number;\n  };\n}\n\n// interface CandidatePlacementSchool {}\n\nexport class CandidatePlacementCheck extends Component<\n  CandidatePlacementCheckProps,\n  CandidatePlacementCheckState\n> {\n  constructor(props: CandidatePlacementCheckProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  render() {\n    return <div>Candidate Placement check</div>;\n  }\n}\n\nexport default CandidatePlacementCheck;\n","import React, { Component, Fragment } from \"react\";\nimport { MdAdd } from \"react-icons/md\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n  setSelectedPeriod,\n  System,\n  PushPopupAlert,\n  positionsStoreInterface,\n  loadAllPositions,\n  FC_Access,\n  CandidateApplicationsStoreInterface,\n  LoadCandidateApplications,\n  candidateExamStoreInterface,\n  InitializeExamDetails,\n  loadExamsDone,\n  setSelectedPosition,\n  setSelectedCourse,\n  courseStoreInterface,\n  setSelectedCandidateExam,\n  examDataInterface,\n  AddUserApplication,\n  RemoveUserApplication,\n  SelectUserApplication,\n  InitialExamDetails,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  applicationStoreInterface,\n  initialApplicationInterface,\n} from \"../../actions/application\";\nimport { ApplicationStepsTypes } from \"../Application/ApplicationSteps/ApplicationSteps\";\nimport {\n  applicationExamAPI,\n  ApplicationPeriodGet,\n  ApplicationStates,\n  ApplicationStatesDescription,\n  GetApplicationsAPI,\n  NoRoomsInterface,\n} from \"../../interfaces/application\";\nimport Exams from \"./Exams\";\nimport { course, PositionAPI } from \"../../interfaces/index\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { AiOutlineFilter } from \"react-icons/ai\";\nimport { IoBriefcase, IoBriefcaseOutline } from \"react-icons/io5\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../components/Navigation/SideNavigation\";\nimport { BsCaretRightFill } from \"react-icons/bs\";\nimport LoadingV2, { LoadingType } from \"../../components/Loading/LoadingV2\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { RiFileForbidLine } from \"react-icons/ri\";\nimport { IoMdList } from \"react-icons/io\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport ApplicationPeriods from \"../../components/ApplicationPeriods/ApplicationPeriods\";\nimport { DATE } from \"../../utils/functions\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { InitializeExamsDone } from \"../../utils/question_bank\";\nimport { examStatus } from \"../../interfaces/exam\";\nimport CandidatePlacementCheck from \"../../components/CandidatePlacementCheck/CandidatePlacementCheck\";\n\ninterface ApplicationsDashboardState {\n  selectedPosition: PositionAPI | null;\n  selectedExams: applicationExamAPI[] | null;\n  applications: GetApplicationsAPI[] | [] | null;\n  selected_application: string | null;\n  noRoomsApplication: NoRoomsInterface[] | null | [];\n  loading: boolean;\n  applicationError: string | null;\n  number_of_incomplete: number;\n  applicationDetails: boolean;\n  selectedApplicationStatus: ApplicationStates | null;\n  showPeriodFilter: boolean;\n  maxExamModal: boolean;\n  loadingErr: string;\n  displayDetailsModal: boolean;\n  viewSchools: GetApplicationsAPI | null;\n  doing_exam: boolean;\n}\ninterface ApplicationsDashboardProps {\n  auth: Auth;\n  application: applicationStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  initiateApplication: (initial: initialApplicationInterface) => void;\n  removeLocation: (course_id: string) => void;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  system: System;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  positions: positionsStoreInterface;\n  loadAllPositions: (callback: (loading: boolean) => void) => void;\n  FC_Access: Function;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  LoadCandidateApplications: (\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  doExam: examDataInterface;\n  AddUserApplication: (application: GetApplicationsAPI) => void;\n  RemoveUserApplication: (application_id: string) => void;\n  SelectUserApplication: (application: GetApplicationsAPI | null) => void;\n}\n\nclass _ApplicationsDashboard extends Component<\n  ApplicationsDashboardProps,\n  ApplicationsDashboardState\n> {\n  constructor(props: ApplicationsDashboardProps) {\n    super(props);\n\n    this.state = {\n      selectedPosition: null,\n      selectedExams: null,\n      applications: null,\n      selected_application: null,\n      noRoomsApplication: null,\n      loading: false,\n      applicationError: null,\n      number_of_incomplete: 0,\n      applicationDetails: false,\n      selectedApplicationStatus: null,\n      showPeriodFilter: false,\n      maxExamModal: false,\n      loadingErr: \"\",\n      displayDetailsModal: false,\n      viewSchools: null,\n      doing_exam: false,\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  filteredApplications = (\n    applications: GetApplicationsAPI[],\n    Status: ApplicationStates | null,\n    searchPeriod?: ApplicationPeriodGet | null\n  ) => {\n    let appl: GetApplicationsAPI[];\n    if (searchPeriod !== undefined && searchPeriod !== null) {\n      appl = applications.filter(\n        (itm) =>\n          itm.application_session.session_plan_id ===\n          searchPeriod.session_plan_id\n      );\n    } else {\n      appl = applications;\n    }\n    if (Status === null) {\n      return appl;\n    } else {\n      return appl.filter((item) => item.application_status === Status);\n    }\n  };\n\n  closeApplicationDetails = () => {\n    this.setState({ selected_application: null });\n    this.setState({ selectedPosition: null, selected_application: null });\n    this.setState({ selectedExams: null });\n    this.setState({ displayDetailsModal: false });\n  };\n\n  setDisplayDetailsModal = (status: boolean) => {\n    this.setState({ displayDetailsModal: status });\n  };\n\n  applicationStatuses = (\n    application: GetApplicationsAPI[]\n  ): { title: string; count: number; status: ApplicationStates }[] => {\n    let output: { title: string; count: number; status: ApplicationStates }[] =\n      [];\n    for (let i in ApplicationStatesDescription) {\n      output.push({\n        title: ApplicationStatesDescription[i].caption,\n        count: application.filter(\n          (itm) =>\n            itm.application_status === ApplicationStatesDescription[i].key\n        ).length,\n        status: ApplicationStatesDescription[i].key,\n      });\n    }\n    return output;\n  };\n\n  setMaxExamModal = (status: boolean) => {\n    this.setState({ maxExamModal: status });\n  };\n\n  LoadApplications = async () => {\n    this.setState({ loadingErr: \"\" });\n    this.setState({ number_of_incomplete: 0 });\n    if (this.props.auth.user.user_id) {\n      const selected_position = this.state.selectedPosition;\n      this.setState({ applications: null });\n      this.setState({ selectedPosition: null });\n      this.setState({ selectedExams: null });\n      let response: GetApplicationsAPI[] | null = null;\n      if (\n        this.props.candidateApplications.candidate_applications === null &&\n        this.props.auth.user\n      ) {\n        try {\n          const res = await axios.get<GetApplicationsAPI[]>(\n            `${API.APPLICATION}/application/${this.props.auth.user.user_id}`\n          );\n          // console.log(\"Applications list: \", res.data);\n          if (res.status === 200) {\n            response = res.data;\n            if (res.data.length === 0) {\n              response = [];\n            } else {\n              for (let application of response) {\n                this.props.AddUserApplication(application);\n              }\n            }\n          } else {\n            response = [];\n          }\n        } catch (error: any) {\n          response = [];\n          console.log(\"Appl Err: \", { ...error });\n        }\n      } else {\n        response = this.props.candidateApplications.candidate_applications;\n      }\n      this.setState({ applications: response });\n      if (response !== null) {\n        if (response.length > 0) {\n          // let done = false;\n          for (let i in response) {\n            let courses = response[i].position.courses;\n            let exams = response[i].exams;\n            if (\n              response[i].position.position_id ===\n              selected_position?.position_id\n            ) {\n              this.setState({ selectedPosition: response[i].position });\n              this.setState({ selectedExams: exams });\n            }\n            // Load Exams done:: need to be improved\n            // InitializeExamsDone(\n            //   this.props.periods.selected_period,\n            //   response[i].position,\n            //   this.props.candidateExam,\n            //   this.props.loadExamsDone,\n            //   this.props.auth.user.user_id,\n            //   this.setLoading,\n            //   response[i].exams,\n            //   this.props.InitializeExamDetails,\n            //   this.setLoading\n            // );\n            for (let x in courses) {\n              if (\n                exams.filter((itm) => itm.course_id === courses[x].course_id)\n                  .length === 0 &&\n                response[i].application_status === ApplicationStates.Incomplete\n              ) {\n                this.setState({\n                  selected_application: response[i].application_id,\n                });\n                this.setState({\n                  selectedPosition: response[i].position,\n                  selected_application: response[i].application_id,\n                });\n                this.setState({ selectedExams: response[i].exams });\n                this.setState({ displayDetailsModal: true });\n                this.incrementIncomplete();\n              }\n            }\n          }\n        } else {\n          this.props.LoadCandidateApplications(\n            this.props.auth.user.user_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n\n  updateLocation = async (\n    application_id: string,\n    exams: sentExamInterface[]\n  ) => {\n    this.setState({ loading: true });\n    this.setState({ applicationError: null });\n    console.log(application_id);\n    for (let i in exams) {\n      try {\n        const res = await axios.post(\n          `${API.APPLICATION}/application/updatemissed`,\n          {\n            application_id: application_id,\n            exams: exams[i],\n          }\n        );\n        if (res.status === 200 && this.state.noRoomsApplication !== null) {\n          this.setState({\n            noRoomsApplication: this.state.noRoomsApplication?.filter(\n              (itm) => itm.course_id !== exams[i].course_id\n            ),\n          });\n        }\n        if (res.status === 200) {\n          this.props.LoadCandidateApplications(\n            this.props.auth.user.user_id,\n            this.setLoading\n          );\n          this.LoadApplications();\n          this.setState({ displayDetailsModal: false });\n          this.setState({ selectedPosition: null, selected_application: null });\n          this.setState({ selectedExams: null });\n          this.props.PushPopupAlert({\n            title: `Location updated successfully`,\n            description:\n              \"Location has updated successfully! You can continue to update before starting of the examination!\",\n            theme: PopupAlertTheme.success,\n          });\n        }\n      } catch (error: any) {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.errors !== undefined) {\n              if (error.response.data.errors.length > 0) {\n                if (this.state.noRoomsApplication) {\n                  let newArr: sentExamInterface[];\n                  if (error.response.data.errors[0].field !== undefined) {\n                    newArr = this.state.noRoomsApplication?.filter(\n                      (itm) =>\n                        itm.course_id ===\n                        error.response.data.errors[0].field.course_id\n                    );\n                    if (newArr !== undefined) {\n                      for (let i in newArr) {\n                        this.props.removeLocation(newArr[i].course_id);\n                      }\n                    }\n                  }\n                }\n                this.setState({\n                  applicationError: error.response.data.errors[0].message,\n                });\n                this.props.PushPopupAlert({\n                  title: error.response.data.errors[0].message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            } else {\n              this.props.PushPopupAlert({\n                title: \"Something went wrong! Please try again\",\n                theme: PopupAlertTheme.danger,\n              });\n              this.setState({\n                applicationError: \"Something went wrong! Please try again\",\n              });\n            }\n          }\n        }\n        console.log(\"Change error: \", { ...error });\n      }\n    }\n    if (this.state.selectedPosition) {\n      this.setState({ selectedPosition: this.state.selectedPosition });\n    }\n    this.setState({ selected_application: application_id });\n    this.setState({ loading: false });\n  };\n\n  incrementIncomplete = () => {\n    this.setState({\n      number_of_incomplete: this.state.number_of_incomplete + 1,\n    });\n  };\n\n  changeLoadingState = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  deleteApplication = async (id: string) => {\n    if (\n      window.confirm(\"Are you sure do you want to delete this application?\") &&\n      id\n    ) {\n      this.changeLoadingState(true);\n      try {\n        await axios.delete(`${API.APPLICATION}/application/${id}`);\n        this.props.RemoveUserApplication(id);\n        this.LoadApplications();\n        this.props.PushPopupAlert({\n          title: `Application deleted successfully!`,\n          theme: PopupAlertTheme.success,\n        });\n        this.setState({ selectedExams: null });\n      } catch (error: any) {\n        this.props.PushPopupAlert({\n          title: `Failed to delete application!`,\n          theme: PopupAlertTheme.warning,\n        });\n      }\n      this.changeLoadingState(false);\n    }\n  };\n\n  setShowFilterStatus = (status: boolean) => {\n    this.setState({ showPeriodFilter: status });\n  };\n\n  setDoingExam = (status: boolean) => {\n    this.setState({ doing_exam: status });\n  };\n\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.changeLoadingState);\n    this.LoadApplications();\n    this.props.loadAllPositions(this.changeLoadingState);\n    if (\n      this.props.application.apply === undefined ||\n      this.props.application.apply.currentStep === ApplicationStepsTypes.Step3\n    ) {\n      this.props.initiateApplication({\n        user_id: this.props.auth.user.user_id,\n        selectedPosition: null,\n        currentStep: ApplicationStepsTypes.Step1,\n        positions: null,\n        doTestStatus: {\n          status: false,\n        },\n        selectedLocation: [],\n      });\n    }\n    // if (this.props.candidateApplications.candidate_applications !== null) {\n    //   if (this.props.candidateApplications.candidate_applications.length > 0) {\n    //     if (this.state.selectedPosition === null) {\n    //       this.setState({ selectedPosition: this.props.candidateApplications.candidate_applications[0].position, selected_application: this.props.candidateApplications.candidate_applications[0].application_id })\n    //     }\n    //     if (this.state.selectedExams === null) {\n    //       this.setState({ selectedExams: this.props.candidateApplications.candidate_applications[0].exams })\n    //     }\n    //   }\n    // }\n  };\n  render() {\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />;\n    }\n    if (\n      this.props.candidateExam.selected_exam_id !== null &&\n      this.props.candidateExam.selected_exam_details !== null &&\n      (this.props.candidateExam.doing_exam === true ||\n        this.state.doing_exam === true)\n    ) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (\n      this.props.doExam.exam_answers &&\n      (this.props.candidateExam.doing_exam === true ||\n        this.state.doing_exam === true)\n    ) {\n      if (\n        this.props.doExam.exam_answers.status === examStatus.Editing ||\n        this.props.doExam.exam_answers.status === examStatus.Paused\n      ) {\n        return <Redirect to=\"/do-exam\" />;\n      }\n    }\n    return (\n      <Fragment>\n        {this.state.selectedPosition !== null &&\n        this.state.selectedExams !== null &&\n        this.state.displayDetailsModal === true ? (\n          <div className=\"border-t border-gray-200 my-2 pb-2 bg-white rounded animate__animated animate__fadeInUp animate__faster -ml-2 mr-1\">\n            <div className=\"flex flex-col md:flex-row gap-4 items-center md:justify-between bg-blue-600 rounded-t py-2 px-2\">\n              <div className=\"flex flex-row gap-4 w-full\">\n                <div>\n                  <div className=\"h-12 w-12 rounded-full bg-blue-500 hover:bg-blue-700 cursor-pointer flex items-center justify-center\">\n                    <BiArrowBack\n                      className=\"text-3xl text-white\"\n                      onClick={() => this.closeApplicationDetails()}\n                    />\n                  </div>\n                </div>\n                <div className=\"flex flex-col w-full\">\n                  <span className=\"font-bold text-xl text-white\">\n                    {this.state.selectedPosition.position_title}\n                  </span>\n                  <span className=\"text-sm text-gray-100 font-normal pl-1\">\n                    {this.props.candidateApplications.candidate_applications &&\n                      this.state.selectedPosition !== null &&\n                      this.props.candidateApplications.candidate_applications.find(\n                        (itm) =>\n                          itm.application_id === this.state.selected_application\n                      )?.application_session.session_plan_name}{\" \"}\n                    -{\" \"}\n                    {this.props.candidateApplications.candidate_applications !==\n                      null &&\n                      this.state.selectedPosition !== null &&\n                      this.props.candidateApplications.candidate_applications.find(\n                        (itm) =>\n                          itm.application_id === this.state.selected_application\n                      )?.application_session.period}\n                  </span>\n                </div>\n              </div>\n              {this.props.candidateApplications.candidate_applications !==\n                null &&\n              this.props.candidateApplications.candidate_applications.find(\n                (itm) =>\n                  itm.application_id === this.state.selected_application &&\n                  (itm.application_status === ApplicationStates.Shortlisted ||\n                    itm.application_status === ApplicationStates.Pass)\n              ) !== undefined ? (\n                <div\n                  title=\"Choose the Province, Choose the District, etc.\"\n                  className=\"mb-3 md:mb-0\"\n                  onClick={() => {\n                    if (\n                      this.props.candidateApplications\n                        .candidate_applications !== null\n                    ) {\n                      let checkApplication =\n                        this.props.candidateApplications.candidate_applications.find(\n                          (itm) =>\n                            itm.application_id ===\n                            this.state.selected_application\n                        );\n                      if (checkApplication !== undefined) {\n                        this.props.SelectUserApplication(checkApplication);\n                      }\n                    }\n                  }}\n                >\n                  <Link\n                    to=\"/placement-contract\"\n                    className=\"bg-blue-500 px-4 py-3 font-bold rounded-md border-2 border-white text-white hover:bg-blue-800\"\n                  >\n                    Placement\n                  </Link>\n                </div>\n              ) : (\n                <div\n                  title=\"Wait for being shortlisted to fill placement agreement\"\n                  className=\"bg-blue-500 text-blue-300 rounded px-3 py-2 cursor-not-allowed hidden md:block\"\n                >\n                  Placement\n                </div>\n              )}\n            </div>\n            {/* Check application */}\n            <div className=\"bg-gray-100\"></div>\n            <Exams\n              selectedExams={this.state.selectedExams}\n              selectedPosition={this.state.selectedPosition}\n              selected_application={this.state.selected_application}\n              updateLocation={this.updateLocation}\n              changeLocationError={this.state.applicationError}\n              loading={this.state.loading}\n              incrementIncomplete={this.incrementIncomplete}\n              applicationHistory={\n                this.props.candidateApplications.candidate_applications !==\n                  null && this.state.selectedPosition !== null\n                  ? this.props.candidateApplications.candidate_applications.find(\n                      (itm) =>\n                        itm.position.position_id ===\n                        this.state.selectedPosition?.position_id\n                    )?.application_history\n                  : undefined\n              }\n              deleteApplication={this.deleteApplication}\n              selectedApplicationDetails={\n                this.props.candidateApplications.candidate_applications &&\n                this.props.candidateApplications.candidate_applications.find(\n                  (itm) =>\n                    itm.application_id === this.state.selected_application\n                )!\n              }\n              setMaxExamModal={this.setMaxExamModal}\n              setDisplayDetailsModal={this.setDisplayDetailsModal}\n              doing_exam={this.state.doing_exam}\n              setDoingExam={this.setDoingExam}\n            />\n          </div>\n        ) : (\n          <>\n            <SideNavigation>\n              {this.props.positions.positions_list === null ? (\n                <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 cursor-not-allowed animate__animated animate__zoomIn\">\n                  <RiFileForbidLine className=\"text-2xl text-white\" /> Please\n                  wait...\n                </div>\n              ) : this.props.positions.positions_list.length > 0 &&\n                this.props.periods.applicationPeriods &&\n                this.props.periods.applicationPeriods.filter(\n                  (itm) => itm.is_active === true\n                ).length !== 0 ? (\n                <Link to=\"/apply\">\n                  <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn\">\n                    <MdAdd className=\"text-2xl text-white\" /> Apply\n                  </div>\n                </Link>\n              ) : (\n                <div className=\"btn bg-gray-200 cursor-not-allowed text-gray-500 mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\">\n                  No vacancies!\n                </div>\n              )}\n              {/* <div className=\"mb-6\"></div> */}\n              {/* <Search data={[1, 2, 3]} /> */}\n              <div\n                onClick={() =>\n                  this.setState({ selectedApplicationStatus: null })\n                }\n                className={`cursor-pointer ${\n                  this.state.selectedApplicationStatus !== null\n                    ? \"text-gray-600 hover:text-blue-600 border border-gray-200 hover:border-blue-600 hover:bg-blue-100 bg-white\"\n                    : \"text-blue-600 border border-blue-600 hover:bg-blue-100 bg-blue-100\"\n                } flex flex-row items-center gap-2 px-2 py-1 rounded font-bold`}\n              >\n                <IoMdList className=\"text-xl\" />\n                <span>\n                  View all (\n                  {this.props.candidateApplications.candidate_applications ===\n                  null\n                    ? 0\n                    : this.props.candidateApplications.candidate_applications.filter(\n                        (itm) =>\n                          itm.application_session.session_plan_id ===\n                          this.props.periods.selected_period?.session_plan_id\n                      ).length}\n                  )\n                </span>\n              </div>\n              <div className=\"pt-1\">\n                {this.props.candidateApplications.candidate_applications &&\n                this.filteredApplications(\n                  this.props.candidateApplications.candidate_applications,\n                  null,\n                  this.props.periods.selected_period\n                ) === null ? (\n                  <Loading />\n                ) : (\n                  this.props.candidateApplications.candidate_applications &&\n                  this.applicationStatuses(\n                    this.filteredApplications(\n                      this.props.candidateApplications.candidate_applications,\n                      null,\n                      this.props.periods.selected_period\n                    )\n                  ).map(\n                    (\n                      itm: {\n                        title: string;\n                        count: number;\n                        status: ApplicationStates;\n                      },\n                      i: number\n                    ) =>\n                      itm.count > 0 && (\n                        <Fragment key={itm.title}>\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selectedApplicationStatus: itm.status,\n                              })\n                            }\n                          >\n                            <MainItem\n                              title={itm.title}\n                              count={itm.count}\n                              active={\n                                this.state.selectedApplicationStatus ===\n                                itm.status\n                                  ? true\n                                  : false\n                              }\n                            />\n                          </div>\n                        </Fragment>\n                      )\n                  )\n                )}\n              </div>\n            </SideNavigation>\n            <div className=\"px-2 -ml-2 lg:ml-0\">\n              <div className=\"mt-2 rounded px-2 md:px-0 py-3 md:py-3\">\n                <div className=\"flex flex-col\">\n                  <div className=\"flex flex-col md:flex-row justify-between md:items-center\">\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-3xl font-bold\">\n                        My Applications{\" \"}\n                        <span className=\"md:hidden\">\n                          (\n                          {this.props.candidateApplications\n                            .candidate_applications &&\n                          this.filteredApplications(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            this.state.selectedApplicationStatus,\n                            this.props.periods.selected_period\n                          )\n                            ? this.filteredApplications(\n                                this.props.candidateApplications\n                                  .candidate_applications,\n                                this.state.selectedApplicationStatus,\n                                this.props.periods.selected_period\n                              ).length\n                            : 0}\n                          )\n                        </span>\n                      </span>\n                      <div className=\"text-gray-700 font-bold text-xs md:text-sm lg:text-md flex flex-row gap-1 items-center\">\n                        <AiOutlineFilter className=\"text-2xl\" /> Selected period{\" \"}\n                        <span\n                          onClick={() =>\n                            this.setState({ showPeriodFilter: true })\n                          }\n                          className={`px-2 ${\n                            this.props.periods.selected_period !== null\n                              ? \"text-blue-600 hover:bg-blue-100 border-2 border-gray-200 hover:border-blue-600 underline\"\n                              : \"bg-white text-gray-600 hover:bg-gray-100 border border-gray-300\"\n                          }  rounded-full py-1 flex flex-row justify-center items-center font-bold cursor-pointer`}\n                        >\n                          {this.props.periods.selected_period !== null ? (\n                            <>\n                              <BsCaretRightFill className=\"mr-3\" />\n                              {\n                                this.props.periods.selected_period\n                                  .session_plan_name\n                              }\n                            </>\n                          ) : (\n                            \"Choose period\"\n                          )}\n                        </span>\n                      </div>\n                    </div>\n                    <div>\n                      <div\n                        onClick={() =>\n                          this.setState({ showPeriodFilter: true })\n                        }\n                        className=\"bg-white border border-white hover:border-blue-600 text-blue-600 font-bold items-center btn w-max cursor-pointer hover:bg-blue-100 my-2 md:my-0\"\n                      >\n                        {this.props.periods.selected_period === null\n                          ? \"Choose period\"\n                          : \"Change period\"}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {this.state.loadingErr !== \"\" && (\n                <div className=\"bg-yellow-100 text-yellow-700 font-extrabold text-2xl mx-4 px-3 py-3 rounded\">\n                  {this.state.loadingErr}\n                </div>\n              )}\n              <div className=\"mb-2\">\n                <div className=\"grid grid-cols-12 gap-3\">\n                  <div className=\"col-span-12\">\n                    <div className={`grid md:grid-cols-1 lg:grid-cols-1 gap-2`}>\n                      <div className=\"-my-2 md:hidden lg:hidden xl:hidden\">\n                        {this.props.positions.positions_list === null ? (\n                          <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                            <RiFileForbidLine className=\"text-2xl text-white\" />{\" \"}\n                            Please wait...\n                          </div>\n                        ) : this.props.positions.positions_list.length > 0 ? (\n                          <Link to=\"/apply\">\n                            <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                              <MdAdd className=\"text-2xl text-white\" /> Create\n                              application\n                            </div>\n                          </Link>\n                        ) : (\n                          <div className=\"btn bg-gray-400 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                            <RiFileForbidLine className=\"text-2xl text-white\" />{\" \"}\n                            No vacancies!\n                          </div>\n                        )}\n                      </div>\n                      {this.props.candidateApplications\n                        .candidate_applications === null ? (\n                        <LoadingV2 type={LoadingType.dark} />\n                      ) : this.filteredApplications(\n                          this.props.candidateApplications\n                            .candidate_applications,\n                          this.state.selectedApplicationStatus,\n                          this.props.periods.selected_period\n                        ).length === 0 ? (\n                        <div className=\"\">\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value=\"No Applications found!\"\n                            component={\n                              <div className=\"-my-2 hidden md:block\">\n                                {this.props.positions.positions_list !== null &&\n                                  this.props.positions.positions_list.length >\n                                    0 &&\n                                  this.props.periods.applicationPeriods &&\n                                  this.props.periods.applicationPeriods.filter(\n                                    (itm) => itm.is_active === true\n                                  ).length !== 0 && (\n                                    <Link to=\"/apply\">\n                                      <div className=\"text-blue-600 font-bold underline mb-2 hover:text-blue-800 animate__animated animate__zoomIn\">\n                                        Click here to create new application\n                                      </div>\n                                    </Link>\n                                  )}\n                              </div>\n                            }\n                          />\n                        </div>\n                      ) : (\n                        this.filteredApplications(\n                          this.props.candidateApplications\n                            .candidate_applications,\n                          this.state.selectedApplicationStatus,\n                          this.props.periods.selected_period\n                        ).map((item, i) => (\n                          <div\n                            key={i + 1}\n                            onClick={() => {\n                              this.setState({\n                                selectedPosition: item.position,\n                                selected_application: item.application_id,\n                              });\n                              this.setState({ selectedExams: item.exams });\n                              this.setState({ displayDetailsModal: true });\n                            }}\n                            className={`bg-white rounded-md animate__animated animate__fadeIn animate__faster\n                      ${\n                        this.state.selectedPosition?.position_id ===\n                        item.position.position_id\n                          ? \"border-2 border-blue-600 shadow\"\n                          : item.application_status ===\n                            ApplicationStates.Initiated\n                          ? \"border-gray-200 bg-gray-50 hover:border-gray-600\"\n                          : item.application_status ===\n                            ApplicationStates.Rejected\n                          ? \"bg-white border-white\"\n                          : item.application_status ===\n                            ApplicationStates.Shortlisted\n                          ? \"border-gray-200 bg-white hover:border-blue-600\"\n                          : \"bg-white border-yellow-600 hover:border-yellow-500\"\n                      } flex flex-col cursor-pointer font-normal hover:font-bold border-2`}\n                          >\n                            <div\n                              className={`grid md:grid-cols-12 group px-3 py-3 rounded-md gap-2 ${\n                                this.state.selectedPosition?.position_id ===\n                                item.position.position_id\n                                  ? \"bg-gray-100 rounded-t\"\n                                  : \"bg-white\"\n                              }`}\n                            >\n                              <div className=\"col-span-1 flex items-center justify-center\">\n                                {item.application_status ===\n                                ApplicationStates.Initiated ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Rejected ? (\n                                  <IoBriefcase className=\"text-5xl text-gray-400 group-hover:text-gray-700\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Shortlisted ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Incomplete ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-yellow-800\" />\n                                ) : (\n                                  <IoBriefcase className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                )}\n                              </div>\n                              <div className=\"col-span-7\">\n                                <span\n                                  className={`font-extrabold \n                          ${\n                            item.application_status !==\n                            ApplicationStates.Initiated\n                              ? item.application_status ===\n                                ApplicationStates.Rejected\n                                ? \"text-gray-900 group-hover:text-gray-900\"\n                                : item.application_status ===\n                                  ApplicationStates.Shortlisted\n                                ? \"text-gray-900 group-hover:text-blue-600\"\n                                : item.application_status ===\n                                  ApplicationStates.Incomplete\n                                ? \"text-gray-900 group-hover:text-yellow-800\"\n                                : \"text-gray-900 group-hover:text-blue-600\"\n                              : \"text-gray-900 group-hover:text-blue-600\"\n                          }`}\n                                >\n                                  {item.position.position_title}\n                                </span>\n                                <div className=\"flex flex-col text-xs text-gray-600\">\n                                  <div className=\"flex flex-row gap-2\">\n                                    <div>\n                                      <div className=\"flex flex-col float-left text-sm md:justify-end pt-2\">\n                                        <span\n                                          className={`${\n                                            item.application_status ===\n                                            ApplicationStates.Rejected\n                                              ? \"text-yellow-700\"\n                                              : \"text-gray-500\"\n                                          } md:text-right`}\n                                        >\n                                          {/* Status */}\n                                        </span>\n                                        {item.application_status ===\n                                        ApplicationStates.Initiated ? (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-gray-600 text-gray-100 border border-gray-500 rounded-full\"\n                                                : \"bg-gray-50 text-gray-800 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        ) : item.application_status ===\n                                          ApplicationStates.Rejected ? (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-yellow-900 text-yellow-100 border border-yellow-700 rounded-full\"\n                                                : \"bg-yellow-100 text-yellow-900 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        ) : item.application_status ===\n                                          ApplicationStates.Shortlisted ? (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-blue-900 text-blue-100 border border-blue-700 rounded-full\"\n                                                : \"bg-blue-100 text-blue-900 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        ) : (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-yellow-600 text-yellow-100 border border-yellow-500 rounded-full\"\n                                                : \"bg-yellow-100 text-yellow-700 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        )}\n                                      </div>\n                                    </div>\n                                    <div className=\"flex flex-col\">\n                                      <span\n                                        className={`${\n                                          item.application_status !==\n                                          ApplicationStates.Initiated\n                                            ? item.application_status ===\n                                              ApplicationStates.Rejected\n                                              ? \"text-gray-500\"\n                                              : item.application_status ===\n                                                ApplicationStates.Shortlisted\n                                              ? \"text-gray-500\"\n                                              : \"text-gray-500\"\n                                            : \"text-gray-500\"\n                                        }`}\n                                      >\n                                        {/* Application period: */}\n                                      </span>\n                                      <span\n                                        className={`${\n                                          item.application_status !==\n                                          ApplicationStates.Initiated\n                                            ? item.application_status ===\n                                              ApplicationStates.Rejected\n                                              ? \"text-gray-800\"\n                                              : item.application_status ===\n                                                ApplicationStates.Shortlisted\n                                              ? \"text-gray-800\"\n                                              : \"text-gray-800\"\n                                            : \"text-black\"\n                                        } font-bold`}\n                                      >\n                                        {item.application_session &&\n                                          item.application_session\n                                            .session_plan_name}{\" \"}\n                                        -{\" \"}\n                                        {item.application_session &&\n                                          item.application_session.period}\n                                      </span>\n                                      <div className=\"flex flex-row gap-2\">\n                                        <span\n                                          className={`${\n                                            item.application_status !==\n                                            ApplicationStates.Initiated\n                                              ? item.application_status ===\n                                                ApplicationStates.Rejected\n                                                ? \"text-gray-500\"\n                                                : item.application_status ===\n                                                  ApplicationStates.Shortlisted\n                                                ? \"text-gray-500\"\n                                                : \"text-gray-500\"\n                                              : \"text-gray-500\"\n                                          }`}\n                                        >\n                                          Date:\n                                        </span>\n                                        <span\n                                          className={`${\n                                            item.application_status !==\n                                            ApplicationStates.Initiated\n                                              ? item.application_status ===\n                                                ApplicationStates.Rejected\n                                                ? \"text-gray-800\"\n                                                : item.application_status ===\n                                                  ApplicationStates.Shortlisted\n                                                ? \"text-gray-800\"\n                                                : \"text-gray-800\"\n                                              : \"text-black\"\n                                          } font-bold`}\n                                        >\n                                          {DATE(item.createdAt, \"DD/MM/YYYY\")}\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                              <div className=\"col-span-12 md:col-span-4 flex md:justify-end items-center\">\n                                {/* Action */}\n                                <div className=\"flex flex-row items-center justify-end gap-2 w-full\">\n                                  {/* <div className=\"btn bg-gray-100 text-gray-600\">\n                                    Details\n                                  </div> */}\n                                  {item.application_status ===\n                                    ApplicationStates.Shortlisted && (\n                                    <div\n                                      className=\"mt-2 md:mt-0\"\n                                      title=\"Choose the Province, Choose the District, etc.\"\n                                      onClick={() => {\n                                        this.props.SelectUserApplication(item);\n                                      }}\n                                    >\n                                      <Link to=\"/placement-contract\">\n                                        <div className=\"rounded px-2 py-1 font-bold bg-blue-50 text-blue-600 group-hover:bg-blue-600 group-hover:text-white\">\n                                          <span>Placement agreement</span>\n                                        </div>\n                                      </Link>\n                                    </div>\n                                  )}\n                                  {item.application_status ===\n                                  ApplicationStates.Rejected ? (\n                                    <div className=\"rounded border border-blue-500 px-2 py-1 bg-blue-100 group-hover:bg-blue-600 text-blue-600 group-hover:text-white cursor-pointer mt-2 md:mt-0 font-bold\">\n                                      Rejection Claiming\n                                    </div>\n                                  ) : (\n                                    <div className=\"rounded px-2 py-2 bg-gray-100 hover:bg-gray-200 text-gray-600 cursor-pointer mt-2 md:mt-0 font-bold\">\n                                      Details\n                                    </div>\n                                  )}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        ))\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n\n        {this.state.showPeriodFilter === true && (\n          <Modal\n            title={<div className=\"text-2xl\">Choose a period</div>}\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ showPeriodFilter: false })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true, body: false }}\n          >\n            <ApplicationPeriods\n              applicationPeriods={this.props.periods.applicationPeriods}\n              setSelectedPeriod={this.props.setSelectedPeriod}\n              showPeriodFilter={this.setShowFilterStatus}\n            />\n          </Modal>\n        )}\n        {this.state.viewSchools !== null && (\n          <Modal\n            title={\n              <div className=\"flex flex-col\">\n                <span className=\"text-4xl font-extrabold text-blue-600\">\n                  {this.state.viewSchools.position.position_title}\n                </span>\n                <span className=\"text-base\">View placement schools</span>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ viewSchools: null })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true, body: false }}\n          >\n            <CandidatePlacementCheck\n              position={this.state.viewSchools}\n              user={this.props.auth.user}\n            />\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  application,\n  periods,\n  system,\n  positions,\n  candidateApplications,\n  candidateExam,\n  course,\n  doExam,\n}: StoreState): {\n  auth: Auth;\n  application: applicationStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  system: System;\n  positions: positionsStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n  course: courseStoreInterface;\n  doExam: examDataInterface;\n} => {\n  return {\n    auth: auth,\n    application: application,\n    periods,\n    system: system,\n    positions: positions,\n    candidateApplications: candidateApplications,\n    candidateExam: candidateExam,\n    course: course,\n    doExam: doExam,\n  };\n};\n\nexport const ApplicationsDashboard = connect(mapStateToProps, {\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  PushPopupAlert,\n  loadAllPositions,\n  FC_Access,\n  LoadCandidateApplications,\n  InitializeExamDetails,\n  loadExamsDone,\n  setSelectedPosition,\n  setSelectedCourse,\n  setSelectedCandidateExam,\n  AddUserApplication,\n  RemoveUserApplication,\n  SelectUserApplication,\n})(_ApplicationsDashboard);\n","import React, { FC, ReactElement } from \"react\";\nimport { ApplicationsDashboard } from \"../ApplicationsDashboard/ApplicationsDashboard\";\ntype UserDashboardProps = {};\n\nexport const UserDashboard: FC<UserDashboardProps> = (): ReactElement => {\n  /* function body */\n  return (\n    <div className=\"\">\n      {/* Applications Dashboard */}\n      <ApplicationsDashboard />\n    {/* <div className=\"p-6\">\n      <h1 className=\"text-6xl text-center font-bold text-gray-400\">\n        Dashboard{\" \"}\n      </h1>\n\n      <br />\n      <br />\n      <div className=\"text-center\">\n        <Link to=\"/admin-center\">\n          <button className=\"text-blue-900 bg-blue-200 rounded py-1 px-2\">\n            Access Center as Admin\n          </button>\n        </Link>\n\n        <Link to=\"/candidate-center\">\n          <button className=\"text-yellow-900 bg-yellow-200 ml-1 rounded py-1 px-2\">\n            Access Center as a candidate\n          </button>\n        </Link>\n      </div>\n      <br />\n      <br />\n      <br />\n\n      <SystemDevelopmentProgress /> */}\n    </div>\n  );\n};\n","import { candidateExamStoreInterface } from \"../actions/candidate_exam\";\nimport {\n  applicationExamAPI,\n  ApplicationPeriodGet,\n} from \"../interfaces/application\";\nimport { ExamAnswerSheetDone } from \"../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../interfaces/position\";\nimport { questionType, questionTypeElements } from \"../interfaces/question\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"./app.config\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\nconst today = moment().tz(TimeZone);\n\nexport const getQuestionType = (\n  question_types: questionType[] | null,\n  type_id: string\n) => {\n  let type: questionTypeElementsType | null = null;\n  if (question_types !== null) {\n    let check = question_types.find((itm) => itm.id === type_id);\n    if (check !== undefined) {\n      let check_type = questionTypeElements.find(\n        (itm) => check && itm.key === check.element\n      );\n      if (check_type !== undefined) {\n        type = check_type.key;\n      }\n    }\n  }\n  return type;\n};\n\nexport const findTotalMarks = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  if (results !== null) {\n    let sum: number = 0;\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        sum = sum + test.total_marks;\n      }\n    }\n    return sum.toFixed(2);\n  } else {\n    return \"Wait...\";\n  }\n};\n\nexport const CheckIfExamDone = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  let res: boolean = false;\n  if (results !== null) {\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        res = true;\n      }\n    }\n  }\n  return res;\n};\n\nexport const CheckIfNoPendingExam = (\n  //NOT COMPLETE --> TO BE DONE\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  let res: boolean = false;\n  if (results !== null) {\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        res = true;\n      }\n    }\n  }\n  return res;\n};\n\nexport const validateCalculatedFormula = (\n  formula: string\n): { status: boolean; msg: string } => {\n  let characters: string[] = [];\n  if (\n    formula === undefined ||\n    formula === \"\" ||\n    formula.length === undefined ||\n    formula.length === 0\n  ) {\n    return {\n      status: false,\n      msg: `Please type a formula`,\n    };\n  }\n  if (formula.length < 3) {\n    return {\n      status: false,\n      msg: `The formula in not valid, it is not complete!`,\n    };\n  }\n  for (let el of formula) {\n    characters = [...characters, el];\n  }\n  if (characters[0] !== `\"`) {\n    return {\n      status: false,\n      msg: `Formula should start with (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length < 2) {\n    return {\n      status: false,\n      msg: `Formula is missing closing (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length > 2) {\n    return {\n      status: false,\n      msg: `Formula is invalid, because it has many (\") characters (${\n        characters.filter((itm) => itm === `\"`).length\n      })`,\n    };\n  }\n  if (\n    characters[characters.length - 1] !== `\"` &&\n    characters.filter((itm) => itm === `\"`).length === 2\n  ) {\n    let nextCharacter: string = \"\";\n    for (let i = 0; i < characters.length; i++) {\n      if (characters[i] === `\"` && i !== 0) {\n        nextCharacter = characters[i + 1];\n      }\n    }\n    if (nextCharacter !== `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing separation character (;) between formula and error`,\n      };\n    }\n    if (characters[characters.length - 1] === `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing error after (;) character`,\n      };\n    }\n  }\n  return {\n    status: true,\n    msg: `Formula is valid`,\n  };\n};\n\nexport function convertFromStringToDate(responseDate: string) {\n  let dateComponents = responseDate.split(\"T\");\n  let datePieces = dateComponents[0].split(\"-\");\n  let timePieces = dateComponents[1].split(\":\");\n  return new Date(\n    parseInt(datePieces[2]),\n    parseInt(datePieces[1]) - 1,\n    parseInt(datePieces[0]),\n    parseInt(timePieces[0]),\n    parseInt(timePieces[1]),\n    parseInt(timePieces[2])\n  );\n}\n\nexport enum ExamTimeStatus {\n  Waiting = \"Waiting\",\n  Online = \"Online\",\n  Expired = \"Expired\",\n}\n\nexport const validateExamDate = (\n  exam_date: string,\n  start_time: string,\n  end_time: string\n) => {\n  let status: ExamTimeStatus = ExamTimeStatus.Expired;\n  // Dates\n  const toDay: Date = new Date(today.toString());\n  const examDate = new Date(exam_date);\n\n  // Time\n  const startTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      start_time +\n      \":0\"\n  );\n  const endTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      end_time +\n      \":0\"\n  );\n\n  // check exam date\n  if (\n    examDate.getDate() > toDay.getDate() ||\n    examDate.getMonth() > toDay.getMonth() ||\n    examDate.getFullYear() > toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Waiting;\n  }\n\n  if (\n    examDate.getDate() < toDay.getDate() ||\n    examDate.getMonth() < toDay.getMonth() ||\n    examDate.getFullYear() < toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Expired;\n  }\n\n  if (\n    examDate.getDate() === toDay.getDate() &&\n    examDate.getMonth() === toDay.getMonth() &&\n    examDate.getFullYear() === toDay.getFullYear()\n  ) {\n    if (startTime.getTime() > toDay.getTime()) {\n      status = ExamTimeStatus.Waiting;\n    } else if (\n      startTime.getTime() <= toDay.getTime() &&\n      endTime.getTime() >= toDay.getTime()\n    ) {\n      status = ExamTimeStatus.Online;\n    } else {\n      status = ExamTimeStatus.Expired;\n    }\n  }\n  // console.log(\n  //   \"Dates comparison: \" + examDate.getDate() + \"=>\" + toDay.getDate()\n  // );\n  // console.log(\"Exam Status: \", status);\n  return status;\n};\n\nexport const InitializeExamsDone = (\n  selected_period: ApplicationPeriodGet | null,\n  selectedPosition: PositionAPI | null,\n  candidateExam: candidateExamStoreInterface,\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void,\n  user_id: string,\n  setLoadingExamsDone: (status: boolean) => void,\n  selectedExams: applicationExamAPI[] | null,\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void,\n  setLoadingExams: (status: boolean) => void\n) => {\n  if (selected_period !== null && selectedPosition !== null) {\n    loadExamsDone(\n      selected_period.session_plan_id,\n      user_id,\n      setLoadingExamsDone\n    );\n    for (let course of selectedPosition.courses) {\n      let testDone = candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = selectedExams?.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          InitializeExamDetails(\n            selected_period.session_plan_id,\n            course.course_id,\n            center_id.district_id,\n            center_id.center_id,\n            center_id.room_id,\n            selectedPosition,\n            false,\n            setLoadingExams\n          );\n        }\n      }\n    }\n  }\n};\n\nexport const getActiveExam = (\n  candidateExam: candidateExamStoreInterface\n): ExamAnswerSheetDone | null => {\n  if (candidateExam.user_exams_done.length > 0) {\n    for (let exam of candidateExam.user_exams_done) {\n      if (\n        validateExamDate(\n          exam.exam_date,\n          exam.exam_start_time,\n          exam.exam_end_time\n        ) === ExamTimeStatus.Online\n      ) {\n        return exam;\n      }\n    }\n  }\n  return null;\n};\n\nexport const proctoringDefaultRules: {\n  rule: string;\n  status: boolean;\n  caption: string;\n}[] = [\n  {\n    rule: \"right_click_enabled\",\n    status: false,\n    caption: \"Enable right click\",\n  },\n  {\n    rule: \"copy_enabled\",\n    status: false,\n    caption: \"Enable copy\",\n  },\n  {\n    rule: \"paste_enabled\",\n    status: false,\n    caption: \"Enable paste\",\n  },\n  {\n    rule: \"stop_candidate_when_comeback\",\n    status: false,\n    caption: \"Enable Candidate when coming back\",\n  },\n  {\n    rule: \"allow_to_leave_browser\",\n    status: false,\n    caption: \"Enable to leave browser\",\n  },\n];\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { IoHandLeftSharp } from \"react-icons/io5\";\nimport {\n  compareWithToday,\n  ExamDoneDetailsAnswers,\n} from \"../../containers/CandidateExams/CandidateExams\";\nimport { PlansTypeKeys } from \"../../interfaces\";\nimport { TimeZone } from \"../../utils/app.config\";\nimport { DATE } from \"../../utils/functions\";\nimport ClaimFormComponent from \"../ClaimForm/ClaimFormComponent\";\nimport { AnswersDetails } from \"./AnswersDetails\";\n\ninterface CandidateAnswersDetailsProps {\n  exam_id: ExamDoneDetailsAnswers;\n  showAnswers: boolean;\n}\n\nconst CandidateAnswersDetails = (props: CandidateAnswersDetailsProps) => {\n  const today = moment().tz(TimeZone);\n  let tomorrow = new Date();\n  tomorrow.setDate(today.date() + 1);\n  const [claim, setClaim] = useState<boolean>(false);\n  return (\n    <div>\n      {/* Check if period is open for claims */}\n      {compareWithToday(today, props.exam_id.exam_date) === false ? (\n        <div className=\"bg-yellow-100 text-yellow-800 font-extrabold text-center flex flex-col items-center justify-center text-lg px-2 py-6\">\n          <div className=\"mb-5 text-3xl\">\n            Please wait, the exam details will be visible soon!\n          </div>\n          <div className=\"text-gray-600\">Exam details will be visible from</div>\n          <div className=\"bg-white rounded-full px-3 py-1 text-gray-700\">\n            {DATE(tomorrow.toString())}\n          </div>\n        </div>\n      ) : claim === false ? (\n        <div className=\"mb-20\">\n          <AnswersDetails\n            exam_id={props.exam_id}\n            showAnswers={props.showAnswers}\n          />\n          {/* <div\n            onClick={() => setClaim(true)}\n            className=\"bg-blue-100 flex flex-row items-center px-3 py-2 -mt-10\"\n          >\n            <div className=\"btn bg-green-600 text-white text-center w-max px-6 text-2xl flex flex-row item-center justify-center gap-3 cursor-pointer\">\n              <IoHandLeftSharp className=\"text-3xl \" />{\" \"}\n              <span>Exam marks Claim</span>\n            </div>\n          </div> */}\n        </div>\n      ) : (\n        <div className=\"bg-gray-100 mt-4 pt-2 rounded\">\n          <ClaimFormComponent\n            setFormState={setClaim}\n            claim_type={PlansTypeKeys.EXAMINATION}\n            file_id={props.exam_id.exam_id}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CandidateAnswersDetails;\n","import React, { Component, Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { BsFillFileEarmarkTextFill } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"../../utils/app.config\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Auth,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n  FC_Access,\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n  InitialExamDetails,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { UserExamStatus, UserExamsListInterface } from \"../../interfaces/exam\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { DATE, getMinutesFromTwoDates } from \"../../utils/functions\";\nimport { CountDown } from \"../../components/CountDown/CountDown\";\nimport { ExamTimeStatus, validateExamDate } from \"../../utils/question_bank\";\nimport { course, PositionAPI, PositionAPICourse } from \"../../interfaces\";\nimport {\n  ApplicationPeriodGet,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport { MdClose } from \"react-icons/md\";\nimport ChooseExamCenter, {\n  LocationTableInterface,\n} from \"../Application/ExamCenter/ChooseExamCenter\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\n\nexport const compareWithToday = (tooday: moment.Moment, date: string) => {\n  const myDate = DATE(date, \"MM/DD/YYYY\");\n  let todayConverted =\n    (tooday.get(\"month\") < 9 ? \"0\" : \"\") +\n    (tooday.get(\"month\") + 1).toString() +\n    \"/\" +\n    tooday.get(\"date\") +\n    \"/\" +\n    tooday.get(\"year\");\n  if (new Date(myDate).getTime() < new Date(todayConverted).getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport interface ExamDoneDetailsAnswers {\n  exam_id: string;\n  course: string;\n  course_name: string;\n  discription: string;\n  termes: string;\n  rules: {\n    right_click_enabled: boolean;\n    copy_enabled: boolean;\n    paste_enabled: boolean;\n    stop_candidate_when_comeback: boolean;\n    allow_to_leave_browser: boolean;\n  };\n  period: string;\n  exam_date: string;\n}\n\ninterface NotPreparedExam {\n  course: string;\n  course_name: string;\n  course_code: string;\n  position: string;\n}\ninterface changeLocProps {\n  changeLocation: () => void;\n}\ninterface CandidateExamsProps {\n  FC_GetProfileDetails: Function;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  LoadCandidateApplications: (\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void; // Not used\n  setSelectedCourse: (course: course | null) => void;\n  setSelectedPosition: (position: PositionAPI) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  AddUserApplication: (application: GetApplicationsAPI) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n}\n\nconst ChangeLocationComponent = (props: changeLocProps): JSX.Element => {\n  const [display, setDisplay] = useState<boolean>(true);\n  if (display === false) {\n    return <div></div>;\n  }\n  return (\n    <div className=\"absolute right-2 left-2 md:right-1/4 md:left-1/4 lg:left-1/2 lg:right-auto bg-yellow-50 shadow-xl rounded py-1 px-1 flex flex-row justify-between items-center gap-2 text-yellow-800 -mt-5 lg:-mt-8\">\n      <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-1\">\n        <span className=\"font-bold\">You are advised to change location</span>\n        <div\n          onClick={props.changeLocation}\n          className=\"px-2 py-1 rounded bg-blue-100 text-blue-600 w-max cursor-pointer\"\n        >\n          Change\n        </div>\n      </div>\n      <div\n        onClick={() => setDisplay(false)}\n        className=\"bg-yellow-100 text-yellow-600 rounded-full flex items-center justify-center p-1 h-8 w-8 cursor-pointer\"\n      >\n        <MdClose className=\"text-4xl\" />\n      </div>\n    </div>\n  );\n};\n\ninterface candidatePendingExamsList {\n  preparedExam: UserExamsListInterface[];\n  notPreparedExam: NotPreparedExam[];\n}\ninterface CandidateExamsState {\n  loading: boolean;\n  loadingExamsDone: boolean;\n  candidateExams: candidatePendingExamsList | null;\n  activeExams: string[];\n  candidateApplications: GetApplicationsAPI[] | null;\n  selectedCourse: course | null;\n  centersModal: boolean;\n  maxExamModal: boolean;\n  selectedPosition: string;\n  successMessage: string;\n  selectedExam: ExamDoneDetailsAnswers | null;\n  doing_exam: boolean;\n}\n\nexport class _CandidateExams extends Component<\n  CandidateExamsProps,\n  CandidateExamsState\n> {\n  constructor(props: CandidateExamsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingExamsDone: false,\n      candidateExams: null,\n      activeExams: [],\n      candidateApplications: null,\n      selectedCourse: null,\n      centersModal: false,\n      maxExamModal: false,\n      selectedPosition: \"\",\n      successMessage: \"\",\n      selectedExam: null,\n      doing_exam: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setloadingExamsDone = (status: boolean) => {\n    this.setState({ loadingExamsDone: status });\n  };\n  loadCandidateExams = async (user: string, period: string) => {\n    this.setLoading(true);\n    setAxiosToken();\n    try {\n      const res = await axios.get<candidatePendingExamsList>(\n        `${API.QBank}/exam/user/${user}/${period}`\n      );\n      this.setState({ candidateExams: res.data });\n      // console.log(\"My exams list: \", res.data);\n    } catch (error: any) {\n      console.log(\"My exams error: \", { ...error });\n      alert(errorToText(error));\n    }\n    this.setLoading(false);\n  };\n  loadUserProfileDetails = () => {\n    this.setLoading(true);\n    this.props.FC_GetProfileDetails(\n      this.props.auth.user.user_id,\n      (status: boolean, msg: string) => {\n        if (status === true) {\n          this.setLoading(false);\n        } else {\n          this.setLoading(true);\n        }\n      }\n    );\n  };\n\n  InitializationFn = (\n    application: GetApplicationsAPI,\n    item: UserExamsListInterface\n  ) => {\n    for (let course of application.position.courses) {\n      let testDone = this.props.candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = application.exams.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          if (\n            application.application_status === ApplicationStates.Shortlisted\n          ) {\n            // Select exam\n            this.props.setSelectedPosition(application.position);\n            this.props.setSelectedCourse(\n              application.position.courses.find(\n                (itm) => itm.course_id === item.course\n              )!\n            );\n            this.setState({ doing_exam: true });\n            return (\n              this.props.periods.selected_period &&\n              this.props.InitializeExamDetails(\n                application.application_session.session_plan_id,\n                course.course_id,\n                center_id.district_id,\n                center_id.center_id,\n                center_id.room_id,\n                application.position,\n                true,\n                this.setLoading\n              )\n            );\n          } else {\n            alert(\"Corresponding application is not shortlisted!\");\n          }\n        }\n      }\n    }\n  };\n  loadUserApplications = async () => {\n    this.props.LoadCandidateApplications(\n      this.props.auth.user.user_id,\n      this.setLoading\n    );\n  };\n  findLocation = (position_id: string, course_id: string) => {\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      const test = this.props.candidateApplications.candidate_applications.find(\n        (item) =>\n          item.position.position_id === position_id &&\n          item.exams.filter((itm) => itm.course_id === course_id)\n      );\n      if (test !== undefined) {\n        let course = test.exams.find((itm) => itm.course_id === course_id);\n        if (course !== undefined) {\n          return course;\n        }\n      }\n    }\n    return null;\n  };\n  updateLocation = async (\n    application_id: string,\n    exams: sentExamInterface[]\n  ) => {\n    this.setState({ loading: true });\n    for (let i in exams) {\n      try {\n        const res = await axios.post(\n          `${API.APPLICATION}/application/updatemissed`,\n          {\n            application_id: application_id,\n            exams: exams[i],\n          }\n        );\n        if (res.status === 200) {\n          this.setState({\n            selectedCourse: null,\n            centersModal: false,\n            maxExamModal: false,\n            selectedPosition: \"\",\n            successMessage: \"Location updated successfully!\",\n          });\n          this.loadUserApplications();\n        }\n      } catch (error: any) {\n        console.log(\"Update loc err: \", { ...error });\n      }\n    }\n  };\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      let application =\n        this.props.candidateApplications.candidate_applications.find(\n          (item) => item.position.position_id === this.state.selectedPosition\n        );\n      if (application !== undefined) {\n        this.updateLocation(application.application_id, exams);\n      } else {\n        alert(\"Invalid application\");\n      }\n    } else {\n      alert(\"Missing application\");\n    }\n  };\n  addLocation = (\n    course_id: string,\n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string\n  ) => {\n    return this.updateLocationFunction([\n      {\n        course_id: course_id,\n        proctoring_type: \"Center\",\n        center_id: location.center_id,\n        district_id: location.district_id,\n      },\n    ]);\n  };\n  componentDidMount = () => {\n    const selPeriod =\n      this.props.periods.selected_period === null\n        ? this.props.auth.application_session?.session_plan_id\n        : this.props.periods.selected_period.session_plan_id;\n\n    if (selPeriod !== undefined && this.state.candidateExams === null) {\n      this.loadCandidateExams(this.props.auth.user.user_id, selPeriod);\n    }\n    if (\n      this.props.auth.user.sex === \"\" ||\n      this.props.auth.user.sex.length === 0\n    ) {\n      this.loadUserProfileDetails();\n    }\n    if (this.props.periods.applicationPeriods === null) {\n      this.props.loadApplicationPeriods(this.setLoading);\n    }\n    if (this.props.candidateApplications.candidate_applications === null) {\n      this.loadUserApplications();\n    }\n  };\n\n  removeDuplicatesExams = (\n    exams: UserExamsListInterface[]\n  ): UserExamsListInterface[] => {\n    let temp: UserExamsListInterface[] = [];\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      for (let item of exams) {\n        if (\n          this.props.candidateApplications.candidate_applications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm._id === item._id) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n\n  removeDuplicatesNotPreparedExams = (\n    exams: NotPreparedExam[]\n  ): NotPreparedExam[] => {\n    let temp: NotPreparedExam[] = [];\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      for (let item of exams) {\n        if (\n          this.props.candidateApplications.candidate_applications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm.course === item.course) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n  setTimeOut = (exam_id: string) => {\n    let temps: string[] = this.state.activeExams;\n    this.setState({\n      activeExams: [...temps, exam_id],\n    });\n  };\n  selectApplication = (\n    applications: GetApplicationsAPI[] | null,\n    position_id: string,\n    course_id: string,\n    selected_period: ApplicationPeriodGet | null\n  ): GetApplicationsAPI | null => {\n    if (applications !== null && selected_period !== null) {\n      let temp = applications.find(\n        (item) =>\n          item.position.position_id === position_id &&\n          item.application_session.session_plan_id ===\n            selected_period.session_plan_id\n      );\n      if (temp !== undefined) {\n        if (\n          temp.position.courses.find((itm) => itm.course_id === course_id) !==\n          undefined\n        ) {\n          return temp;\n        }\n      }\n    }\n    return null;\n  };\n  setMaxExamModal = (status: boolean) => {\n    this.setState({ maxExamModal: status });\n  };\n\n  changeLocation = (item: PositionAPICourse) => {\n    this.setState({ selectedCourse: item, centersModal: true });\n    this.setMaxExamModal(true);\n  };\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n    this.setMaxExamModal(false);\n  };\n\n  render() {\n    const today = moment().tz(TimeZone);\n    // console.log(\"TODAY: \", today.get(\"days\"));\n    const selPeriod =\n      this.props.periods.selected_period === null\n        ? this.props.auth.application_session\n        : this.props.periods.selected_period;\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />;\n    }\n    if (\n      this.props.candidateExam.selected_exam_id !== null &&\n      this.props.candidateExam.selected_exam_details !== null &&\n      (this.props.candidateExam.doing_exam === true ||\n        this.state.doing_exam === true)\n    ) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    return (\n      <Fragment>\n        {this.state.selectedCourse === null ? (\n          <div className=\"mt-2 -ml-2 mr-3 pb-5\">\n            <div className=\"rounded mt-2\">\n              <div className=\"flex flex-row items-center gap-3\">\n                <Link\n                  to=\"/apps-page\"\n                  title=\"Back to menus\"\n                  className=\"bg-white group hover:bg-blue-50 h-10 w-10 flex items-center justify-center rounded-full cursor-pointer\"\n                >\n                  <BiArrowBack className=\"text-3xl text-blue-600 group-hover:text-blue-800\" />\n                </Link>\n                <div className=\"flex flex-col\">\n                  <span className=\"font-extrabold text-3xl\">My exams</span>\n                  <span className=\"text-gray-600 text-sm\">\n                    List of exams that are assigned to you\n                  </span>\n                </div>\n              </div>\n            </div>\n            {this.state.successMessage !== \"\" && (\n              <div\n                title=\"Click to close the message\"\n                onClick={() => this.setState({ successMessage: \"\" })}\n                className=\"animate__animated animate__zoomIn px-3 py-2 bg-green-500 text-white my-2 rounded cursor-pointer\"\n              >\n                {this.state.successMessage}\n              </div>\n            )}\n            {console.log(\"Not found: \", this.state.candidateExams)}\n            {this.state.loading === true ||\n            this.state.loadingExamsDone === true ||\n            this.state.candidateExams === null ||\n            this.props.candidateApplications.candidate_applications == null ? (\n              <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n                <Loading />\n              </div>\n            ) : this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).length === 0 ? (\n              <div className=\"bg-gray-50 rounded px-4 py-5 text-center font-bold mt-2 text-2xl text-gray-400\">\n                No exams found\n              </div>\n            ) : (\n              this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).map((item, i) => (\n                <div key={i + 1} className=\"my-2 rounded bg-white p-2 group\">\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div>\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-300 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col w-full\">\n                        <span className=\"text-base text-gray-800 font-extrabold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center justify-start w-full gap-3 -mt-1\">\n                          <div className=\"text-sm text-gray-500 group-hover:text-blue-600\">\n                            Date: {DATE(item.exam_date, \"DD/MM/YYYY\")}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-gray-100 underline text-gray-500  font-bold rounded-full px-2\">\n                            Start time: {item.start_time}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-blue-100 text-blue-900  font-bold rounded-full px-2\">\n                            Status: {item.user_status}\n                          </div>\n                        </div>\n                        {this.findLocation(item.position, item.course) !==\n                          null && (\n                          <div className=\"flex flex-row items-center gap-2 mt-2\">\n                            <div>\n                              Exam center:{\" \"}\n                              <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                {\n                                  this.findLocation(item.position, item.course)\n                                    ?.center_name\n                                }\n                              </span>\n                            </div>\n                            <div className=\"w-max flex flex-col md:flex-row\">\n                              Room number:{\" \"}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 ? (\n                                <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                  Waiting room\n                                </span>\n                              ) : (\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.room_number\n                                  }\n                                </span>\n                              )}\n                              {/* Change loc */}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 &&\n                                validateExamDate(\n                                  item.exam_date,\n                                  item.start_time,\n                                  item.end_time\n                                ) !== ExamTimeStatus.Expired && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"lg:w-full flex flex-row items-center justify-end\">\n                      {this.state.activeExams.find(\n                        (itm) => itm === item._id\n                      ) !== undefined ||\n                      item.user_status === UserExamStatus.Editing ||\n                      item.user_status === UserExamStatus.Paused ? (\n                        validateExamDate(\n                          item.exam_date,\n                          item.start_time,\n                          item.end_time\n                        ) !== ExamTimeStatus.Expired ? (\n                          this.selectApplication(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            item.position,\n                            item.course,\n                            selPeriod\n                          )?.application_status !==\n                          ApplicationStates.Shortlisted ? (\n                            <div className=\"text-yellow-800 font-extrabold text-base bg-yellow-100 rounded px-3 py-1 cursor-not-allowed\">\n                              Not shortlisted\n                            </div>\n                          ) : (\n                            <div\n                              onClick={() => {\n                                let application = this.selectApplication(\n                                  this.props.candidateApplications\n                                    .candidate_applications,\n                                  item.position,\n                                  item.course,\n                                  selPeriod\n                                );\n                                if (application !== null) {\n                                  this.InitializationFn(application, item);\n                                } else {\n                                  alert(\"Invalid exam!\");\n                                }\n                              }}\n                              className={`${\n                                item.user_status === UserExamStatus.Editing ||\n                                item.user_status === UserExamStatus.Paused\n                                  ? \"bg-green-600 group-hover:bg-green-800\"\n                                  : \"bg-blue-600 group-hover:bg-blue-800\"\n                              } btn  text-white cursor-pointer w-max`}\n                            >\n                              {item.user_status === UserExamStatus.Editing\n                                ? \"Back to Exam\"\n                                : item.user_status === UserExamStatus.Paused\n                                ? \"Paused, back to exam\"\n                                : \"Start Exam\"}\n                            </div>\n                          )\n                        ) : item.user_status === UserExamStatus.Editing ||\n                          item.user_status === UserExamStatus.Done ||\n                          item.user_status === UserExamStatus.Paused ||\n                          item.user_status === UserExamStatus.Removed ? (\n                          <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                            <span>Marks</span>\n                            <span className=\"text-2xl font-extrabold -mt-2\">\n                              {item.user_marks.toFixed(\n                                item.user_marks === 100 || item.user_marks === 0\n                                  ? 0\n                                  : 2\n                              )}\n                              %\n                            </span>\n                            <div\n                              onClick={() =>\n                                this.setState({\n                                  selectedExam: {\n                                    course: item.course,\n                                    course_name: item.course_name,\n                                    discription: item.discription,\n                                    termes: item.termes,\n                                    rules: item.rules,\n                                    period: item.period,\n                                    exam_date: item.exam_date,\n                                    exam_id: item._id,\n                                  },\n                                })\n                              }\n                              className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                            >\n                              Check details\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"bg-yellow-100 text-yellow-700 font-extrabold text-base px-3 py-1 rounded-md w-max\">\n                            Expired\n                          </div>\n                        )\n                      ) : item.found === false ? (\n                        <div\n                          title=\"Please wait for the exam time\"\n                          className=\"text-lg lg:text-xl font-extrabold bg-green-100 text-green-700 px-3 py-1 rounded cursor-not-allowed w-max\"\n                        >\n                          <CountDown\n                            start_time={new Date(today.toString()).toString()}\n                            duration_min={getMinutesFromTwoDates(\n                              new Date(today.toString()),\n                              new Date(\n                                DATE(item.exam_date, \"MM/DD/YYYY\") +\n                                  \" \" +\n                                  item.start_time\n                              )\n                            )}\n                            timeout={() => this.setTimeOut(item._id)}\n                            returnString={true}\n                            labels={true}\n                            days\n                          />\n                        </div>\n                      ) : (\n                        <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                          <span>Marks</span>\n                          <span className=\"text-2xl font-extrabold -mt-2\">\n                            {item.user_marks.toFixed(\n                              item.user_marks === 100 || item.user_marks === 0\n                                ? 0\n                                : 2\n                            )}\n                            %\n                          </span>\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selectedExam: {\n                                  course: item.course,\n                                  course_name: item.course_name,\n                                  discription: item.discription,\n                                  termes: item.termes,\n                                  rules: item.rules,\n                                  period: item.period,\n                                  exam_date: item.exam_date,\n                                  exam_id: item._id,\n                                },\n                              })\n                            }\n                            className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                          >\n                            Check details\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n            {/* Not prepared exams */}\n            {this.state.candidateExams !== null &&\n              this.state.loading !== true &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).length > 0 &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).map((item, i) => (\n                <div\n                  key={i + 1}\n                  className=\"my-2 rounded bg-white p-2 py-3 group\"\n                >\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div className=\"\">\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-300 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-base text-gray-600 font-bold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center gap-3 -mt-1\">\n                          {this.findLocation(item.position, item.course) !==\n                            null && (\n                            <div className=\"flex flex-row items-center gap-2 mt-2\">\n                              <div className=\"flex flex-col md:flex-row md:items-center\">\n                                Exam center:{\" \"}\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.center_name\n                                  }\n                                </span>\n                              </div>\n                              <div className=\"w-max flex flex-col md:flex-row md:items-center\">\n                                Room number:{\" \"}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 ? (\n                                  <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                    Waiting room\n                                  </span>\n                                ) : (\n                                  <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                    {\n                                      this.findLocation(\n                                        item.position,\n                                        item.course\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )}\n                                {/* Change loc */}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-100 text-gray-600 font-extrabold text-base px-3 py-1 rounded-md\">\n                      Not prepared\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        ) : this.state.loading === true ? (\n          <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n            <Loading />\n          </div>\n        ) : (\n          <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mr-1 -ml-3 rounded-t-md bg-white shadow-md pb-5\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Change exam location\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() => {\n                        this.setState({\n                          centersModal: false,\n                          selectedCourse: null,\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ChooseExamCenter\n              positionCourses={this.state.selectedCourse}\n              addLocation={this.addLocation}\n              closeModal={this.closeModal}\n            />\n          </div>\n        )}\n        {this.state.selectedExam !== null && (\n          <Modal\n            title={\n              <div className=\"text-2xl font-extrabold text-blue-600 px-2\">\n                Exam result details\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ selectedExam: null })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <CandidateAnswersDetails\n              exam_id={this.state.selectedExam}\n              showAnswers={false}\n            />\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  candidateExam,\n  candidateApplications,\n  periods,\n}: StoreState): {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    candidateExam: candidateExam,\n    candidateApplications: candidateApplications,\n    periods: periods,\n  };\n};\n\nexport const CandidateExams = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n})(_CandidateExams);\n"],"sourceRoot":""}
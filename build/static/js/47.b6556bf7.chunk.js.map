{"version":3,"sources":["utils/question_bank.ts","components/ClaimForm/ClaimFormComponent.tsx","containers/ApplicationsDashboard/ApplicationHistory/ApplicationHistory.tsx","containers/ApplicationsDashboard/ExamDetails/ExamDetails.tsx","containers/ApplicationsDashboard/ExamStatus/PreparedExams.tsx","containers/ApplicationsDashboard/ExamStatus/ActiveExams.tsx","containers/ApplicationsDashboard/ExamStatus/ExamsDone.tsx","containers/ApplicationsDashboard/Exams.tsx","containers/ApplicationsDashboard/ApplicationsDashboard.tsx","containers/UserDashboard/UserDashboard.tsx"],"names":["ExamTimeStatus","today","moment","tz","TimeZone","getQuestionType","question_types","type_id","type","check","find","itm","id","undefined","check_type","questionTypeElements","key","element","findTotalMarks","courses","results","sum","course","test","course_id","total_marks","toFixed","CheckIfExamDone","res","validateCalculatedFormula","formula","characters","length","status","msg","el","filter","nextCharacter","i","convertFromStringToDate","responseDate","dateComponents","split","datePieces","timePieces","Date","parseInt","validateExamDate","exam_date","start_time","end_time","Expired","toDay","toString","examDate","startTime","getDate","getMonth","getFullYear","endTime","Waiting","getTime","Online","console","log","InitializeExamsDone","selected_period","selectedPosition","candidateExam","loadExamsDone","user_id","setLoadingExamsDone","selectedExams","InitializeExamDetails","setLoadingExams","session_plan_id","user_exams_temp","center_id","district_id","room_id","position_id","proctoringDefaultRules","rule","caption","ClaimFormComponent","props","isDocumentIdValid","documents","doc_id","doc","item","validated_by","validation_status","alert","PopupAlertTheme","info","claiming","myClaims","state","activeSession","isClaimAllowed","success","warning","isApplicationIdValid","applications","app_id","app","application_id","application_status","ApplicationStates","Rejected","setLoading","setState","loading","setLoadingForm","loadingForm","setFormError","data","formError","setAlertError","alertError","setClaimFileId","claimFileId","setViewThisFile","viewThisFile","setChooseClaimFile","chooseClaimFile","setClaimComment","claimComment","isClaimTypeOpen","thisSession","thisType","PlansTypeKeys","APPLICATION","plans","type_key","isPlanActive","DOCUMENT_VALIDATION","PLACEMENT_TRANSFER","isClaimBtnValid","file_id","claim_type","PushPopupAlert","title","theme","setFormState","thisClaimType","thisClaimTypeId","formType","displayClaimType","claimType","result","EXAMINATION","MARKS_PUBLICATION","isClaimsAllowed","thisPeriod","getMyClaims","auth","user","danger","claim","claiming_on_id","period_id","found_claim","componentDidMount","sessionPlan","activeSessionPlan","getActiveSessionPlan","_isClaimsAllowed","documentReducer","documentCategory","getDocumentCategory","documentSubCategory","getDocumentSubCategory","documentFields","getDocumentFields","candidateApplications","getMyRejectedApplications","_isApplicationIdValid","candidateDocuments","getMyRejectedDocuments","_isDocumentIdValid","getDocumentById","getApplicationById","getValidation","thisId","old_reason","old_status","old_evaluated_by","comment","override_by","cleanToClose","handleSubmit","e","a","preventDefault","isEmptyOrSpaces","toLocaleLowerCase","setAxiosToken","axios","post","API","CLAIMING","reason","createClaim","error","errorToText","selectClaimType","thisClaim","generateChooseFileTitle","this","className","claims","map","date_created","evaluation_comment","decision_taken_status","onSubmit","onClick","onChange","target","value","disabled","Object","values","index","capitalizeFirstLetter","replace","ClaimGetDocTitle","main","position","position_title","documentCategories","placeholder","style","resize","rows","thisDoc","thisApplication","Component","connect","document","GetClaimingTypes","getApplicationSessions","ApplicationHistory","applicationHistory","DATE","date","ApplicationStatesDescription","ExamDetails","locationsData","Locations_list","loadAllLocationsData","loadApplicationPeriods","selected_exam_id","to","examDetails","locationDetails","Loading","LoadingType","dark","setSelectedCandidateExam","duration","discription","dangerouslySetInnerHTML","__html","termes","province_name","district_name","center_name","room_number","proctoring_type","PreparedExams","NotPreparedExamsFilter","user_exams_done","ex","findExam","PreparedExamsFilter","AllPendingExams","totalPending","loadingExams","course_name","loadingExamsDone","changeLocation","user_status","UserExamStatus","Editing","selectedApplicationDetails","Shortlisted","setSelectedCourse","appointmentDetailsModal","periods","is_active","positions","selected_position","setSelectedPosition","Initiated","ActiveExams","ActiveExamsFilter","exam_start_time","exam_end_time","Paused","Done","Removed","x","selectedCourse","centersModal","setMaxExamModal","ExamsDone","ExamsDoneFilter","_PostExams","renderExam","exam","examStatus","loadExam","redirect","setClaim","closeModal","updateLocationFunction","exams","selected_application","updateLocation","numberOfIncomplete","count","findLocation","course_code","location","exam_id","courseId","current_temp","testDone","findCourse","pendingCourses","InitializationFn","loadCourses","doExam","exam_answers","displayResults","selectedLocation","applicationHistoryState","applicationPeriods","period","setSelectedLocationData","ChooseExamCenter","positionCourses","addLocation","deleteApplication","PostExams","prepareExam","loadExamsList","setSelectedPeriod","_ApplicationsDashboard","filteredApplications","Status","searchPeriod","appl","application_session","closeApplicationDetails","displayDetailsModal","setDisplayDetailsModal","applicationStatuses","application","output","push","maxExamModal","LoadApplications","loadingErr","number_of_incomplete","response","candidate_applications","get","AddUserApplication","Incomplete","incrementIncomplete","LoadCandidateApplications","applicationError","noRoomsApplication","description","errors","field","newArr","removeLocation","message","changeLoadingState","window","confirm","delete","RemoveUserApplication","setShowFilterStatus","showPeriodFilter","loadAllPositions","apply","currentStep","ApplicationStepsTypes","Step3","initiateApplication","Step1","doTestStatus","applicationDetails","selectedApplicationStatus","FC_Access","UserAccessList","MY_APPLICATION","view","session_plan_name","checkApplication","SelectUserApplication","Exams","changeLocationError","application_history","SideNavigation","positions_list","active","LoadingV2","NoResult","NoResultThemes","Dark","component","createdAt","Modal","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","body","ApplicationPeriods","ApplicationsDashboard","system","UserDashboard"],"mappings":"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","file":"static/js/47.b6556bf7.chunk.js","sourcesContent":["import { candidateExamStoreInterface } from \"../actions/candidate_exam\";\nimport {\n  applicationExamAPI,\n  ApplicationPeriodGet,\n} from \"../interfaces/application\";\nimport { ExamAnswerSheetDone } from \"../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../interfaces/position\";\nimport {\n  questionType,\n  questionTypeElements,\n  questionTypeElementsType,\n} from \"../interfaces/question\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"./app.config\";\n\nconst today = moment().tz(TimeZone);\n\nexport const getQuestionType = (\n  question_types: questionType[] | null,\n  type_id: string\n) => {\n  let type: questionTypeElementsType | null = null;\n  if (question_types !== null) {\n    let check = question_types.find((itm) => itm.id === type_id);\n    if (check !== undefined) {\n      let check_type = questionTypeElements.find(\n        (itm) => check && itm.key === check.element\n      );\n      if (check_type !== undefined) {\n        type = check_type.key;\n      }\n    }\n  }\n  return type;\n};\n\nexport const findTotalMarks = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  if (results !== null) {\n    let sum: number = 0;\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        sum = sum + test.total_marks;\n      }\n    }\n    return sum.toFixed(2);\n  } else {\n    return \"Wait...\";\n  }\n};\n\nexport const CheckIfExamDone = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  let res: boolean = false;\n  if (results !== null) {\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        res = true;\n      }\n    }\n  }\n  return res;\n};\n\nexport const validateCalculatedFormula = (\n  formula: string\n): { status: boolean; msg: string } => {\n  let characters: string[] = [];\n  if (\n    formula === undefined ||\n    formula === \"\" ||\n    formula.length === undefined ||\n    formula.length === 0\n  ) {\n    return {\n      status: false,\n      msg: `Please type a formula`,\n    };\n  }\n  if (formula.length < 3) {\n    return {\n      status: false,\n      msg: `The formula in not valid, it is not complete!`,\n    };\n  }\n  for (let el of formula) {\n    characters = [...characters, el];\n  }\n  if (characters[0] !== `\"`) {\n    return {\n      status: false,\n      msg: `Formula should start with (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length < 2) {\n    return {\n      status: false,\n      msg: `Formula is missing closing (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length > 2) {\n    return {\n      status: false,\n      msg: `Formula is invalid, because it has many (\") characters (${\n        characters.filter((itm) => itm === `\"`).length\n      })`,\n    };\n  }\n  if (\n    characters[characters.length - 1] !== `\"` &&\n    characters.filter((itm) => itm === `\"`).length === 2\n  ) {\n    let nextCharacter: string = \"\";\n    for (let i = 0; i < characters.length; i++) {\n      if (characters[i] === `\"` && i !== 0) {\n        nextCharacter = characters[i + 1];\n      }\n    }\n    if (nextCharacter !== `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing separation character (;) between formula and error`,\n      };\n    }\n    if (characters[characters.length - 1] === `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing error after (;) character`,\n      };\n    }\n  }\n  return {\n    status: true,\n    msg: `Formula is valid`,\n  };\n};\n\nexport function convertFromStringToDate(responseDate: string) {\n  let dateComponents = responseDate.split(\"T\");\n  let datePieces = dateComponents[0].split(\"-\");\n  let timePieces = dateComponents[1].split(\":\");\n  return new Date(\n    parseInt(datePieces[2]),\n    parseInt(datePieces[1]) - 1,\n    parseInt(datePieces[0]),\n    parseInt(timePieces[0]),\n    parseInt(timePieces[1]),\n    parseInt(timePieces[2])\n  );\n}\n\nexport enum ExamTimeStatus {\n  Waiting = \"Waiting\",\n  Online = \"Online\",\n  Expired = \"Expired\",\n}\n\nexport const validateExamDate = (\n  exam_date: string,\n  start_time: string,\n  end_time: string\n) => {\n  let status: ExamTimeStatus = ExamTimeStatus.Expired;\n  // Dates\n  const toDay: Date = new Date(today.toString());\n  const examDate = new Date(exam_date);\n\n  // Time\n  const startTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      start_time +\n      \":0\"\n  );\n  const endTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      end_time +\n      \":0\"\n  );\n\n  // check exam date\n  if (\n    examDate.getDate() > toDay.getDate() ||\n    examDate.getMonth() > toDay.getMonth() ||\n    examDate.getFullYear() > toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Waiting;\n  }\n\n  if (\n    examDate.getDate() < toDay.getDate() ||\n    examDate.getMonth() < toDay.getMonth() ||\n    examDate.getFullYear() < toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Expired;\n  }\n\n  if (\n    examDate.getDate() === toDay.getDate() &&\n    examDate.getMonth() === toDay.getMonth() &&\n    examDate.getFullYear() === toDay.getFullYear()\n  ) {\n    if (startTime.getTime() > toDay.getTime()) {\n      status = ExamTimeStatus.Waiting;\n    } else if (\n      startTime.getTime() <= toDay.getTime() &&\n      endTime.getTime() >= toDay.getTime()\n    ) {\n      status = ExamTimeStatus.Online;\n    } else {\n      status = ExamTimeStatus.Expired;\n    }\n  }\n  console.log(\n    \"Dates comparison: \" + examDate.getDate() + \"=>\" + toDay.getDate()\n  );\n  console.log(\"Exam Status: \", status);\n  return status;\n};\n\nexport const InitializeExamsDone = (\n  selected_period: ApplicationPeriodGet | null,\n  selectedPosition: PositionAPI | null,\n  candidateExam: candidateExamStoreInterface,\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void,\n  user_id: string,\n  setLoadingExamsDone: (status: boolean) => void,\n  selectedExams: applicationExamAPI[] | null,\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void,\n  setLoadingExams: (status: boolean) => void\n) => {\n  if (selected_period !== null && selectedPosition !== null) {\n    loadExamsDone(\n      selected_period.session_plan_id,\n      user_id,\n      setLoadingExamsDone\n    );\n    for (let course of selectedPosition.courses) {\n      let testDone = candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = selectedExams?.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          InitializeExamDetails(\n            selected_period.session_plan_id,\n            course.course_id,\n            center_id.district_id,\n            center_id.center_id,\n            center_id.room_id,\n            selectedPosition.position_id,\n            setLoadingExams\n          );\n        }\n      }\n    }\n  }\n};\n\nexport const getActiveExam = (\n  candidateExam: candidateExamStoreInterface\n): ExamAnswerSheetDone | null => {\n  if (candidateExam.user_exams_done.length > 0) {\n    for (let exam of candidateExam.user_exams_done) {\n      if (\n        validateExamDate(\n          exam.exam_date,\n          exam.exam_start_time,\n          exam.exam_end_time\n        ) === ExamTimeStatus.Online\n      ) {\n        return exam;\n      }\n    }\n  }\n  return null;\n};\n\nexport const proctoringDefaultRules: {\n  rule: string;\n  status: boolean;\n  caption: string;\n}[] = [\n  {\n    rule: \"right_click_enabled\",\n    status: false,\n    caption: \"Enable right click\",\n  },\n  {\n    rule: \"copy_enabled\",\n    status: false,\n    caption: \"Enable copy\",\n  },\n  {\n    rule: \"paste_enabled\",\n    status: false,\n    caption: \"Enable paste\",\n  },\n  {\n    rule: \"stop_candidate_when_comeback\",\n    status: false,\n    caption: \"Enable Candidate when coming back\",\n  },\n  {\n    rule: \"allow_to_leave_browser\",\n    status: false,\n    caption: \"Enable to leave browser\",\n  },\n];\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getMyClaims,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../actions/document\";\nimport { getActiveSessionPlan } from \"../../actions/session\";\nimport { getApplicationSessions } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../Alert/Popup\";\nimport ApplicationFormView from \"../../containers/Claimings/Candidate/ApplicationFormView\";\nimport {\n  isClaimAllowed,\n  ClaimGetDocTitle,\n} from \"../../containers/Claimings/Candidate/ClaimForm\";\nimport DocFormView from \"../../containers/Claimings/Candidate/DocFormView\";\nimport FormApplicationList from \"../../containers/Claimings/Candidate/FormApplicationList\";\nimport FormDocumentList from \"../../containers/Claimings/Candidate/FormDocumentList\";\nimport { isPlanActive } from \"../../containers/SessionSettings/SessionDetails\";\nimport {\n  PlansTypeKeys,\n  SessionPlanInterface,\n  claimApplicationsInterface,\n  PlansInterface,\n  CandidateClaimInterface,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { ClaimingReducerType } from \"../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { SessionPlanReducerInterface } from \"../../reducers/session\";\nimport { isEmptyOrSpaces, capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText } from \"../../utils/errors\";\n\ntype ClaimFormProps = {\n  // FOR SHORTCUT BUTTONS CALL\n  // REQUIRED PROPS\n  claim_type: PlansTypeKeys;\n  file_id: string;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  getActiveSessionPlan: Function;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n  activeSession: SessionPlanInterface | null;\n  found_claim: CandidateClaimInterface | null;\n};\n\nclass ClaimFormComponent extends Component<ClaimFormProps, ClaimFormState> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      activeSession: null,\n      found_claim: null,\n    };\n  }\n\n  isDocumentIdValid = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let doc = documents.find((item) => item.doc_id === doc_id);\n    if (doc) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (doc.validated_by.validation_status !== \"rejected\") {\n        return {\n          status: false,\n          msg: \"Only rejected document are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.state.activeSession &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.state.activeSession.session_plan_id,\n          doc_id\n        )\n      ) {\n        return {\n          status: false,\n          msg: \"This document already in claiming list!\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.success };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid document id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Documents, please try again\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  isApplicationIdValid = (\n    applications: claimApplicationsInterface[],\n    app_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let app = applications.find((item) => item.application_id === app_id);\n    console.log(\"====================================\");\n    console.log({ app, app_id });\n    console.log(\"====================================\");\n    if (app) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (app.application_status !== ApplicationStates.Rejected) {\n        return {\n          status: false,\n          msg: \"Only rejected application are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.state.activeSession &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.state.activeSession.session_plan_id,\n          app.application_id\n        )\n      ) {\n        return {\n          status: false,\n          msg: \"This application already in claiming list!\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid application id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Application, please try again!\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  isClaimTypeOpen = (\n    thisSession: SessionPlanInterface,\n    thisType: PlansTypeKeys\n  ): boolean => {\n    let data: PlansInterface | undefined;\n    if (thisType === PlansTypeKeys.APPLICATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.PLACEMENT_TRANSFER) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  isClaimBtnValid = (thisSession: SessionPlanInterface) => {\n    if (this.props.file_id || this.props.claim_type) {\n      // CHECK IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n      if (!this.props.claim_type) {\n        this.props.PushPopupAlert({\n          title: \"Claim type is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.props.file_id) {\n        this.props.PushPopupAlert({\n          title: \"Claim file is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.isClaimTypeOpen(thisSession, this.props.claim_type)) {\n        // IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n        // CHECK IF CLAIM TYPE IS OPEN ================\n        this.props.PushPopupAlert({\n          title: \"Claim type is closed!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      }\n    }\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  isClaimsAllowed = (\n    thisPeriod: SessionPlanInterface\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      this.props.claiming.myClaims === null &&\n      this.props.file_id &&\n      this.props.claim_type\n    ) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string, data?: CandidateClaimInterface[]) => {\n          // !status && setLoadingClaims(status);\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data) {\n            let claim = data.find(\n              (item) =>\n                item.claiming_on_id === this.props.file_id &&\n                item.period_id === thisPeriod.session_plan_id\n            );\n            if (claim) {\n              this.setState({ found_claim: claim });\n              return {\n                status: true,\n                msg: `You have already claimed on this ${this.displayClaimType(\n                  this.props.claim_type!\n                )}`,\n                alert: PopupAlertTheme.info,\n              };\n            }\n          }\n        }\n      );\n    } else if (\n      this.props.claiming.myClaims &&\n      this.props.file_id &&\n      this.props.claim_type\n    ) {\n      let claim = this.props.claiming.myClaims.find(\n        (item) =>\n          item.claiming_on_id === this.props.file_id &&\n          item.period_id === thisPeriod.session_plan_id\n      );\n      if (claim) {\n        this.setState({ found_claim: claim });\n\n        return {\n          status: true,\n          msg: `You have already claimed on this ${this.displayClaimType(\n            this.props.claim_type!\n          )}`,\n          alert: PopupAlertTheme.info,\n        };\n      }\n    }\n\n    return {\n      status: true,\n      msg: \"\",\n      alert: PopupAlertTheme.success,\n    };\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.sessionPlan.activeSessionPlan === null ||\n      this.props.sessionPlan.activeSessionPlan === \"none\"\n    ) {\n      this.props.getActiveSessionPlan(\n        (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data === \"none\") {\n            this.props.PushPopupAlert({\n              title: \"No session active session\",\n              theme: PopupAlertTheme.danger,\n            });\n            this.props.setFormState(false);\n            this.setState({\n              claimFileId: \"\",\n              thisClaimType: null,\n              thisClaimTypeId: \"\",\n              claimComment: \"\",\n              chooseClaimFile: false,\n              formType: \"DEFAULT\",\n              viewThisFile: \"\",\n              formError: null,\n            });\n          } else if (data) {\n            let _isClaimsAllowed = this.isClaimsAllowed(data);\n            if (!_isClaimsAllowed.status) {\n              this.props.PushPopupAlert({\n                title: _isClaimsAllowed.msg,\n                theme: _isClaimsAllowed.alert,\n              });\n            }\n            // this.props.setFormState(false);\n            this.setState({ activeSession: data });\n            this.isClaimBtnValid(data);\n          }\n        }\n      );\n    } else {\n      this.setState({\n        activeSession: this.props.sessionPlan.activeSessionPlan,\n      });\n      this.isClaimBtnValid(this.props.sessionPlan.activeSessionPlan);\n      let _isClaimsAllowed = this.isClaimsAllowed(\n        this.props.sessionPlan.activeSessionPlan\n      );\n      if (!_isClaimsAllowed.status) {\n        this.props.PushPopupAlert({\n          title: _isClaimsAllowed.msg,\n          theme: _isClaimsAllowed.alert,\n        });\n        this.props.setFormState(false);\n      }\n      this.setLoading(false);\n    }\n\n    if (this.props.documentReducer.documentCategory === null) {\n      this.props.getDocumentCategory();\n    }\n    if (this.props.documentReducer.documentSubCategory === null) {\n      this.props.getDocumentSubCategory();\n    }\n    if (this.props.documentReducer.documentFields === null) {\n      this.props.getDocumentFields();\n    }\n\n    if (this.props.claiming.candidateApplications === null) {\n      this.props.getMyRejectedApplications(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string, data?: claimApplicationsInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              // PROPS VALIDATION PROCESS ###############\n              if (\n                this.props.claim_type &&\n                this.props.file_id &&\n                this.state.formType === \"DEFAULT\"\n              ) {\n                if (this.props.claim_type === PlansTypeKeys.APPLICATION) {\n                  let _isApplicationIdValid = this.isApplicationIdValid(\n                    data,\n                    this.props.file_id\n                  );\n                  if (!_isApplicationIdValid.status) {\n                    this.props.PushPopupAlert({\n                      title: _isApplicationIdValid.msg,\n                      theme: _isApplicationIdValid.alert,\n                    });\n                    this.props.setFormState(false);\n                  } else {\n                    this.setState({\n                      thisClaimType: this.props.claim_type,\n                      claimFileId: this.props.file_id,\n                      formType: \"PROPS\",\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    if (this.props.claiming.candidateDocuments === null) {\n      this.props.getMyRejectedDocuments(\n        (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              // PROPS VALIDATION PROCESS ###############\n              if (\n                this.props.claim_type &&\n                this.props.file_id &&\n                this.state.formType === \"DEFAULT\"\n              ) {\n                if (\n                  this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n                ) {\n                  let _isDocumentIdValid = this.isDocumentIdValid(\n                    data,\n                    this.props.file_id\n                  );\n                  if (!_isDocumentIdValid.status) {\n                    this.props.PushPopupAlert({\n                      title: _isDocumentIdValid.msg,\n                      theme: _isDocumentIdValid.alert,\n                    });\n                    // setAlertError(_isDocumentIdValid.msg);\n                    this.props.setFormState(false);\n                  } else {\n                    this.setState({\n                      thisClaimType: this.props.claim_type,\n                      claimFileId: this.props.file_id,\n                      formType: \"PROPS\",\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    // PROPS VALIDATION PROCESS ###############\n    if (\n      this.props.claim_type &&\n      this.props.file_id &&\n      this.state.formType === \"DEFAULT\"\n    ) {\n      this.setState({ thisClaimType: this.props.claim_type });\n      if (\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION &&\n        this.props.claiming.candidateDocuments\n      ) {\n        let _isDocumentIdValid = this.isDocumentIdValid(\n          this.props.claiming.candidateDocuments,\n          this.props.file_id\n        );\n        if (!_isDocumentIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isDocumentIdValid.msg,\n            theme: _isDocumentIdValid.alert,\n          });\n          // setAlertError(_isDocumentIdValid.msg);\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n      if (\n        this.props.claim_type === PlansTypeKeys.APPLICATION &&\n        this.props.claiming.candidateApplications\n      ) {\n        let _isApplicationIdValid = this.isApplicationIdValid(\n          this.props.claiming.candidateApplications,\n          this.props.file_id\n        );\n        if (!_isApplicationIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isApplicationIdValid.msg,\n            theme: _isApplicationIdValid.alert,\n          });\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  cleanToClose = () => {\n    this.props.setFormState(false);\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.state.activeSession) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n\n    this.setLoadingForm(true);\n    try {\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.state.activeSession.session_plan_id,\n          reason: this.state.claimComment,\n          old_reason: this.getValidation(this.state.claimFileId).old_reason,\n          old_status: this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by: this.getValidation(this.state.claimFileId)\n            .old_evaluated_by,\n        }\n      );\n      console.log({ createClaim: res.data });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose();\n        this.props.setFormState(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setFormState(false);\n    this.setLoadingForm(false);\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  render() {\n    if (this.state.found_claim !== null) {\n      return (\n        <div>\n          <h2 className=\"text-center text-2xl font-bold p-3 text-gray-500\">\n            Claims on this {this.displayClaimType(this.props.claim_type!)}\n          </h2>\n          {this.state.found_claim.claims.length >= 1 ? (\n            <div>\n              {this.state.found_claim.claims.map((itm) => (\n                <div className=\"p-2 border rounded mb-2\">\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Created date:</span>{\" \"}\n                    <b>{itm.date_created}</b>\n                  </div>\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Reason:</span>{\" \"}\n                    <p>{itm.reason}</p>\n                  </div>\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Evaluation comment:</span>{\" \"}\n                    <p>{itm.evaluation_comment}</p>\n                  </div>\n                  <div className=\"p-1\">\n                    <span className=\"text-gray-400 block\">decision:</span>{\" \"}\n                    <h3 className=\"text-xl font-bold\">\n                      {itm.decision_taken_status}\n                    </h3>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div>No claims found!</div>\n          )}\n        </div>\n      );\n    }\n\n    if (\n      this.state.loading ||\n      this.state.activeSession === null ||\n      (this.props.claiming.myClaims === null &&\n        this.props.file_id &&\n        this.props.claim_type)\n    ) {\n      return null;\n    }\n    return (\n      <div className=\"pb-3\">\n        {/* CLAIM FORM ============================================== */}\n        {this.state.viewThisFile.length <= 0 && (\n          <form onSubmit={(e) => this.handleSubmit(e)}>\n            <div className=\"px-6 pb-3\">\n              {this.state.alertError && (\n                <div\n                  className=\"alert-warning cursor-pointer\"\n                  onClick={() => this.setAlertError(null)}\n                >\n                  {this.state.alertError}\n                </div>\n              )}\n              <div className=\"text-base text-gray-700 sm:text-lg\">\n                {/* SELECT CLAIM TYPE ============================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>Claim type</label>\n                  <select\n                    className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                      this.state.formType === \"PROPS\" && \"cursor-not-allowed\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_type\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                      this.selectClaimType(e.target.value);\n                      this.setClaimFileId(\"\");\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_type\" &&\n                        this.setFormError(null);\n                    }}\n                    value={\n                      this.state.thisClaimType ? this.state.thisClaimType : \"\"\n                    }\n                    disabled={\n                      this.state.loadingForm || this.state.formType === \"PROPS\"\n                    }\n                  >\n                    <option value=\"\">Choose claim type</option>\n                    {Object.values(PlansTypeKeys).map((item, index) => (\n                      <option value={item} key={index + item}>\n                        {capitalizeFirstLetter(\n                          item.toLocaleLowerCase().replace(/_/g, \" \")\n                        )}\n                      </option>\n                    ))}\n                  </select>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_type\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END SELECT CLAIM TYPE ============================================== */}\n\n                {/* SELECT FILE TO CLAIM ON ============================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>\n                    {this.generateChooseFileTitle(this.state.thisClaimType)}\n                  </label>\n                  <div\n                    className={`text-left bg-white border-2 ${\n                      this.state.formType !== \"PROPS\"\n                        ? \"border-gray-700\"\n                        : \"border-gray-400 text-gray-500\"\n                    } rounded w-full ${\n                      this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_file\"\n                        ? \"border-red-500\"\n                        : \"\"\n                    } border-2 ${\n                      this.state.thisClaimType &&\n                      !this.state.chooseClaimFile &&\n                      this.state.formType !== \"PROPS\"\n                        ? \"cursor-pointer\"\n                        : !this.state.chooseClaimFile && \"cursor-not-allowed\"\n                    }`}\n                    title={\n                      !this.state.thisClaimType\n                        ? \"Choose claim type first!\"\n                        : \"\"\n                    }\n                    onClick={() => {\n                      this.state.formType === \"DEFAULT\" &&\n                        this.state.thisClaimType &&\n                        !this.state.chooseClaimFile &&\n                        this.setChooseClaimFile(true);\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_file\" &&\n                        this.setFormError(null);\n                    }}\n                  >\n                    {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                    {this.state.claimFileId.length > 0 &&\n                    !this.state.chooseClaimFile ? (\n                      <p className=\"my-1 mx-2\">\n                        {this.state.thisClaimType ===\n                          PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          ClaimGetDocTitle(\n                            this.props.documentReducer,\n                            this.getDocumentById(\n                              this.props.claiming.candidateDocuments,\n                              this.state.claimFileId\n                            )\n                          ).main}\n                        {this.state.thisClaimType ===\n                          PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.getApplicationById(\n                            this.props.claiming.candidateApplications,\n                            this.state.claimFileId\n                          ).position.position_title}\n                      </p>\n                    ) : (\n                      !this.state.chooseClaimFile && (\n                        <p className=\"my-1 mx-2\">\n                          Select Claim{\" \"}\n                          {this.state.thisClaimType &&\n                            this.state.thisClaimType\n                              .toLocaleLowerCase()\n                              .replace(/_/g, \" \")}\n                        </p>\n                      )\n                    )}\n                    {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                    {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                    {this.state.chooseClaimFile &&\n                      this.state.thisClaimType ===\n                        PlansTypeKeys.DOCUMENT_VALIDATION &&\n                      this.props.claiming.candidateDocuments &&\n                      this.props.claiming.myClaims &&\n                      this.props.sessionPlan.activeSessionPlan &&\n                      this.props.sessionPlan.activeSessionPlan !== \"none\" && (\n                        <FormDocumentList\n                          setChooseClaimFile={this.setChooseClaimFile}\n                          setClaimFileId={this.setClaimFileId}\n                          setViewThisFile={this.setViewThisFile}\n                          viewThisFile={this.state.viewThisFile}\n                          candidateDocuments={\n                            this.props.claiming.candidateDocuments\n                          }\n                          documentCategories={this.props.documentReducer}\n                          myClaims={this.props.claiming.myClaims}\n                          activeSession={\n                            this.props.sessionPlan.activeSessionPlan\n                          }\n                        />\n                      )}\n                    {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                    {/* LISTING OF REJECTED APPLICATION ============================ */}\n                    {this.state.chooseClaimFile &&\n                      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                      this.props.claiming.candidateApplications &&\n                      this.props.claiming.myClaims &&\n                      this.props.sessionPlan.activeSessionPlan &&\n                      this.props.sessionPlan.activeSessionPlan !== \"none\" && (\n                        <FormApplicationList\n                          setChooseClaimFile={this.setChooseClaimFile}\n                          setClaimFileId={this.setClaimFileId}\n                          setViewThisFile={this.setViewThisFile}\n                          viewThisFile={this.state.viewThisFile}\n                          candidateApplications={\n                            this.props.claiming.candidateApplications\n                          }\n                          myClaims={this.props.claiming.myClaims}\n                          activeSession={\n                            this.props.sessionPlan.activeSessionPlan\n                          }\n                        />\n                      )}\n                    {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                  </div>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_file\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                {/* CLAIM COMMENT ============================================== */}\n                <div className=\"flex flex-col\">\n                  <label>Comment</label>\n                  <textarea\n                    className={`text-left input-white w-20 inline-block ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_comment\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    placeholder={`Claim comment`}\n                    style={{ resize: \"none\" }}\n                    value={this.state.claimComment}\n                    onChange={(e) => {\n                      this.setClaimComment(e.target.value);\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" &&\n                        this.setFormError(null);\n                    }}\n                    rows={3}\n                    disabled={this.state.loadingForm}\n                  ></textarea>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_comment\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END CLAIM COMMENT ============================================== */}\n              </div>\n              <div className=\"pt-3 flex justify-between\">\n                <button\n                  onClick={() => this.cleanToClose()}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                    this.state.loadingForm && \"cursor-not-allowed\"\n                  }`}\n                  type=\"button\"\n                  disabled={this.state.loadingForm}\n                >\n                  Exit\n                </button>\n                <button\n                  className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                    this.state.loadingForm && \"cursor-wait\"\n                  }`}\n                  type=\"submit\"\n                  disabled={this.state.loadingForm}\n                >\n                  {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                </button>\n              </div>\n            </div>\n          </form>\n        )}\n        {/* END CLAIM FORM ============================================== */}\n\n        {/* CLAIM DOCUMENT VIEW ============================================== */}\n        {this.state.viewThisFile.length > 0 &&\n          this.props.claiming.candidateDocuments &&\n          this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION && (\n            <DocFormView\n              thisDoc={this.getDocumentById(\n                this.props.claiming.candidateDocuments,\n                this.state.viewThisFile\n              )}\n              setViewThisFile={this.setViewThisFile}\n              documentCategories={this.props.documentReducer}\n              setChooseClaimFile={this.setChooseClaimFile}\n              setClaimFileId={this.setClaimFileId}\n            />\n          )}\n        {/* END CLAIM DOCUMENT VIEW ============================================== */}\n        {/* CLAIM APPLICATION VIEW ============================================== */}\n        {this.state.viewThisFile.length > 0 &&\n          this.props.claiming.candidateApplications &&\n          this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n            <ApplicationFormView\n              thisApplication={this.getApplicationById(\n                this.props.claiming.candidateApplications,\n                this.state.viewThisFile\n              )}\n              documentCategories={this.props.documentReducer}\n              setChooseClaimFile={this.setChooseClaimFile}\n              setClaimFileId={this.setClaimFileId}\n              setViewThisFile={this.setViewThisFile}\n            />\n          )}\n        {/* END CLAIM APPLICATION VIEW ============================================== */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  sessionPlan,\n}: StoreState): {\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n} => {\n  return {\n    auth: auth,\n    sessionPlan,\n    documentReducer: document,\n    claiming,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getActiveSessionPlan,\n  getMyClaims,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  getApplicationSessions,\n  PushPopupAlert,\n})(ClaimFormComponent);\n","import React from 'react'\nimport { applicationHistory, ApplicationStatesDescription } from '../../../interfaces/application'\nimport { DATE } from '../../../utils/functions'\n\ninterface ApplicationHistoryProps {\n  applicationHistory: applicationHistory[];\n}\n\nconst ApplicationHistory = (props: ApplicationHistoryProps) => {\n  return (\n    <div className=\"flex flex-col justify-between items-start gap-1 bg-white px-3 py-2\">\n      {/* <span className=\"text-sm text-blue-800 font-bold\">Application status history</span> */}\n      <hr className=\"bg-blue-600\" />\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-3\">\n      {props.applicationHistory !== undefined &&\n        props.applicationHistory.length > 0 && \n        props.applicationHistory.map((item, i) => (\n          <div key={i + 1} className=\"col-span-1 flex flex-col border border-blue-500 rounded px-3 py-2\">\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Date:</span>\n              <span className=\"font-bold\">{DATE(item.date, \"DD/MM/YYYY\")}</span>\n            </div>\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Action:</span>\n              <span className=\"font-bold\">{item.comment}</span>\n            </div>\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Application status:</span>\n              <span className=\"font-bold\">{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption}</span>\n            </div>\n          </div>\n        ))}\n      </div> \n    </div>\n  )\n}\n\nexport default ApplicationHistory\n","import React, { Component } from \"react\";\nimport { MdInfo, MdLocationOn } from \"react-icons/md\";\nimport { Redirect } from \"react-router-dom\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { LocationsDataStoreInterface } from \"../../../actions/locations_data\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { LoadingType } from \"../../../components/Loading/LoadingV2\";\nimport { applicationExamAPI } from \"../../../interfaces/application\";\nimport { DATE } from \"../../../utils/functions\";\nimport { LocationTableInterface } from \"../../Application/ExamCenter/ChooseExamCenter\";\n\ninterface ExamDetailsProps {\n  locationDetails: applicationExamAPI | undefined;\n  examDetails: InitialExamDetails | null;\n  locationsData: LocationsDataStoreInterface;\n  loadAllLocationsData: (callback: (loading: boolean) => void) => void;\n  setSelectedLocationData: (locationData: LocationTableInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  // selectedCourse: course;\n}\ninterface ExamDetailsState {\n  loading: boolean;\n}\n\nclass ExamDetails extends Component<ExamDetailsProps, ExamDetailsState> {\n  constructor(props: ExamDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  componentDidMount = () => {\n    if (\n      this.props.locationsData.Locations_list === null ||\n      this.props.locationsData.Locations_list.length === 0\n    ) {\n      this.props.loadAllLocationsData(this.setLoading);\n    }\n    // if (this.props.periods.applicationPeriods === null || this.props.periods.applicationPeriods.length === 0 || this.props.periods.selected_period === null) {\n    this.props.loadApplicationPeriods(this.setLoading);\n    // }\n  };\n  render() {\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (this.props.examDetails === null) {\n      return (\n        <div className=\"bg-yellow-50 text-yellow-800 font-bold rounded px-2 py-4 text-center text-3xl border border-yellow-600 mx-4 my-4\">\n          No Exam details found!\n        </div>\n      );\n    }\n    if (this.props.locationDetails === undefined) {\n      return (\n        <div className=\"bg-yellow-50 text-yellow-800 font-bold rounded px-2 py-4 text-center text-3xl border border-yellow-600 mx-4 my-4\">\n          No exam location details found!\n        </div>\n      );\n    }\n    return (\n      <div>\n        {this.state.loading === true ? (\n          <div className=\"px-4 py-4 rounded bg-gray-100\">\n            <Loading type={LoadingType.dark} />\n          </div>\n        ) : (\n          <div>\n            <div className=\"bg-gray-100 rounded mx-2 mb-2 px-2 py-2\">\n              <div className=\"font-bold text-xl text-blue-600 mb-4 flex flex-row items-center justify-between gap-2 bg-white py-2 px-2 rounded\">\n                <div className=\"flex flex-row items-center gap-2\">\n                  <MdInfo className=\"text-4xl text-blue-600\" />\n                  Exam information\n                </div>\n                <button\n                  onClick={() => {\n                    // this.props.setSelectedCourse(this.props.selectedCourse);\n                    this.props.examDetails &&\n                      this.props.setSelectedCandidateExam(\n                        this.props.examDetails.id\n                      );\n                  }}\n                  type=\"button\"\n                  className={`btn ${\n                    this.props.candidateExam.selected_exam_id !== null\n                      ? \"bg-yellow-700 hover:bg-yellow-900\"\n                      : \"bg-blue-600 hover:bg-blue-700\"\n                  } text-white cursor-pointer text-base`}\n                >\n                  {this.props.candidateExam.selected_exam_id !== null\n                    ? \"Return to Exam\"\n                    : \"Start Exam\"}\n                </button>\n              </div>\n              <div className=\"grid md:grid-cols-3 gap-4\">\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam date:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {DATE(this.props.examDetails.exam_date, \"DD/MM/YYYY\")}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam start time:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.examDetails.start_time}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam duration:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.examDetails.duration / 60} hours{\" \"}\n                      {this.props.examDetails.duration % 60 > 0 && (\n                        <div>{this.props.examDetails.duration % 60} mins</div>\n                      )}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-3\">\n                  <div className=\"flex flex-col px-2 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam description:\n                    </span>\n                    <span className=\"text-gray-700 font-bold px-2 py-2 rounded bg-white mt-2\">\n                      {this.props.examDetails.discription}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-3\">\n                  <div className=\"flex flex-col px-2 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Terms and conditions / Rules:\n                    </span>\n                    <div\n                      className=\"px-2 py-2 rounded bg-white mt-2\"\n                      dangerouslySetInnerHTML={{\n                        __html: this.props.examDetails.termes,\n                      }}\n                    ></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"bg-gray-100 rounded mx-2 mb-2 px-2 py-2\">\n              <div className=\"font-bold text-xl text-blue-600 mb-4 flex flex-row items-center justify-between gap-2 bg-white py-2 px-2 rounded\">\n                <div className=\"flex flex-row items-center gap-2\">\n                  <MdLocationOn className=\"text-4xl text-blue-600\" />\n                  Examination location\n                </div>\n              </div>\n              <div className=\"grid md:grid-cols-3 gap-4 px-2\">\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Province:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationsData.Locations_list &&\n                        this.props.locationsData.Locations_list.find(\n                          (itm) =>\n                            this.props.locationDetails !== undefined &&\n                            itm.center_id ===\n                              this.props.locationDetails.center_id\n                        )?.province_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      District:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationsData.Locations_list &&\n                        this.props.locationsData.Locations_list.find(\n                          (itm) =>\n                            this.props.locationDetails !== undefined &&\n                            itm.center_id ===\n                              this.props.locationDetails.center_id\n                        )?.district_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Center:{\" \"}\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.center_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Room number:{\" \"}\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.room_number}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Proctoring type\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.proctoring_type}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ExamDetails;\n","import React, { Component } from \"react\";\nimport { CgCheckO } from \"react-icons/cg\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  applicationExamAPI,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\n\ninterface PreparedExamsProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  changeLocation: (item: PositionAPICourse) => void;\n  selectedApplicationDetails: GetApplicationsAPI;\n}\ninterface PreparedExamsState {}\n\nexport class PreparedExams extends Component<\n  PreparedExamsProps,\n  PreparedExamsState\n> {\n  render() {\n    let NotPreparedExamsFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) => ex.course === itm.course_id\n        ).length === 0 && this.props.findExam(itm.course_id) === null\n    );\n    let PreparedExamsFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) => ex.course === itm.course_id\n        ).length === 0 && this.props.findExam(itm.course_id) !== null\n    );\n    let AllPendingExams = [...PreparedExamsFilter, ...NotPreparedExamsFilter];\n    let totalPending =\n      NotPreparedExamsFilter.length + PreparedExamsFilter.length;\n    return (\n      <div className=\"bg-white px-2 py-2\">\n        <div className=\"bg-gray-100 rounded px-2 py-2\">\n          <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n            <span className=\"font-bold \">Waiting exams</span>\n            <span className=\"font-bold bg-white text-blue-600 rounded-full px-2 text-base border border-blue-200\">\n              {this.props.selectedPosition !== null &&\n                this.props.selectedExams !== null &&\n                this.props.loadingExams === false &&\n                totalPending}\n            </span>\n          </div>\n          <div className=\"flex flex-col gap-2\">\n            {this.props.selectedPosition === null ||\n            this.props.selectedExams === null ||\n            this.props.loadingExams === true ? (\n              <Loading />\n            ) : AllPendingExams.length === 0 ? (\n              <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                <div className=\"flex justify-center items-center w-full text-4xl\">\n                  <IoMdInformationCircleOutline />\n                </div>\n                <div className=\"text-gray-500\">No exams found!</div>\n              </div>\n            ) : (\n              AllPendingExams.map((item, i) => (\n                <div\n                  key={i + 1}\n                  className={`px-3 py-2 rounded group bg-white border`}\n                >\n                  <div className=\"grid md:grid-cols-12 gap-2\">\n                    {/* First col */}\n                    <div className=\"col-span-4 flex fex-row items-center gap-3\">\n                      <div className=\"flex flex-row gap-2 items-center\">\n                        <div\n                          className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                        >\n                          {this.props.findExam(item.course_id) !== null ? (\n                            <CgCheckO className=\"text-4xl text-blue-600\" />\n                          ) : (\n                            <RiCheckboxBlankCircleFill className=\"text-4xl text-blue-100\" />\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"flex flex-col\">\n                        <div className={`font-bold text-gray-600 truncate`}>\n                          {item.course_name}\n                        </div>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">\n                            Exam date:{\" \"}\n                          </span>\n                          {this.props.findExam(item.course_id) !== null ? (\n                            <div className=\"flex flex-row items-center gap-2\">\n                              {validateExamDate(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                this.props.findExam(item.course_id)!.start_time,\n                                this.props.findExam(item.course_id)!.end_time\n                              ) === ExamTimeStatus.Online ? (\n                                <span className=\"bg-blue-100 text-blue-600 font-bold px-2 rounded-full\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              ) : validateExamDate(\n                                  this.props.findExam(item.course_id)!\n                                    .exam_date,\n                                  this.props.findExam(item.course_id)!\n                                    .start_time,\n                                  this.props.findExam(item.course_id)!.end_time\n                                ) === ExamTimeStatus.Expired ? (\n                                <span className=\"italic text-yellow-700 underline\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              ) : (\n                                <span className=\"italic\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              )}\n                              <span className=\"font-bold text-blue-600 text-sm\">\n                                {DATE(\n                                  this.props.findExam(item.course_id)!\n                                    .exam_date,\n                                  \"DD/MM/YYYY\"\n                                )}\n                              </span>\n                              <span\n                                className={`bg-blue-100 text-blue-600 font-bold px-2 py-1 rounded-full text-sm`}\n                              >\n                                {\n                                  this.props.findExam(item.course_id)!\n                                    .start_time\n                                }\n                              </span>\n                            </div>\n                          ) : (\n                            <span className=\"text-gray-500 text-sm\">\n                              Waiting for preparation\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    {/* Second col */}\n                    <div className=\"col-span-4 flex flex-col items-start justify-center\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <>\n                          <div className=\"flex flex-row justify-start items-center gap-2\">\n                            <span className=\"text-gray-500 text-xs\">\n                              Proctoring type:{\" \"}\n                            </span>\n                            <span className=\"text-gray-700 font-bold text-sm\">\n                              {this.props.selectedExams === null\n                                ? \"\"\n                                : this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  ) !== undefined &&\n                                  this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  )?.proctoring_type}\n                            </span>\n                          </div>\n                          <div className=\"flex flex-row justify-start items-center gap-2\">\n                            <span className=\"text-gray-500 text-xs\">\n                              Exam location:{\" \"}\n                            </span>\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Center:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.center_name\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Room:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.room_number\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                          </div>\n                        </>\n                      ) : (\n                        <div className=\"flex flex-row gap-2 items-center justify-start\">\n                          <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                          <span className=\"text-yellow-700 italic text-sm\">\n                            No location selected\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    {/* Third col */}\n                    <div className=\"col-span-4 flex items-center justify-start md:justify-end\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            ((this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            ) === undefined &&\n                              this.props.findExam(item.course_id) !== null &&\n                              validateExamDate(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                this.props.findExam(item.course_id)!.start_time,\n                                this.props.findExam(item.course_id)!.end_time\n                              ) === ExamTimeStatus.Waiting) ||\n                              this.props.findExam(item.course_id) === null) && (\n                              <div\n                                onClick={() => this.props.changeLocation(item)}\n                                className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                              >\n                                Change location\n                              </div>\n                            )\n                          )}\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.course !==\n                              undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status !== UserExamStatus.Editing &&\n                            validateExamDate(\n                              this.props.findExam(item.course_id)!.exam_date,\n                              this.props.findExam(item.course_id)!.start_time,\n                              this.props.findExam(item.course_id)!.end_time\n                            ) === ExamTimeStatus.Online &&\n                            this.props.selectedApplicationDetails\n                              .application_status ===\n                              ApplicationStates.Shortlisted && (\n                              <div\n                                onClick={() => {\n                                  this.props.course.courses &&\n                                    this.props.setSelectedCourse(\n                                      this.props.course.courses.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )!\n                                    );\n                                  this.props.findExam(item.course_id) !==\n                                    null &&\n                                    this.setState({\n                                      appointmentDetailsModal: {\n                                        status: true,\n                                        item: this.props.findExam(\n                                          item.course_id\n                                        ),\n                                      },\n                                    });\n                                }}\n                                className=\"hidden btn border border-blue-500 text-blue-600 cursor-pointer hover:bg-blue-600 hover:text-white text-sm text-center\"\n                              >\n                                Details\n                              </div>\n                            )\n                          )}\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.periods.selected_period !== null &&\n                            this.props.periods.selected_period.is_active ===\n                              true &&\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.id !==\n                              undefined &&\n                            validateExamDate(\n                              this.props.findExam(item.course_id)!.exam_date,\n                              this.props.findExam(item.course_id)!.start_time,\n                              this.props.findExam(item.course_id)!.end_time\n                            ) === ExamTimeStatus.Online &&\n                            this.props.selectedApplicationDetails\n                              .application_status ===\n                              ApplicationStates.Shortlisted && (\n                              <div\n                                onClick={() => {\n                                  if (this.props.selectedPosition !== null) {\n                                    if (\n                                      this.props.positions.selected_position ===\n                                        null ||\n                                      this.props.positions.selected_position\n                                        .position_id !==\n                                        this.props.selectedPosition.position_id\n                                    ) {\n                                      this.props.setSelectedPosition(\n                                        this.props.selectedPosition\n                                      );\n                                    }\n                                    this.props.selectedExams !== null &&\n                                      this.props.course.courses &&\n                                      this.props.setSelectedCourse(\n                                        this.props.course.courses.find(\n                                          (itm) =>\n                                            itm.course_id === item.course_id\n                                        )!\n                                      );\n                                    this.props.selectedExams !== null &&\n                                      this.props.findExam(item.course_id) !==\n                                        null &&\n                                      this.props.setSelectedCandidateExam(\n                                        this.props.findExam(item.course_id)!.id\n                                      );\n                                  }\n                                }}\n                                className={`btn border ${\n                                  this.props.candidateExam.user_exams_done.find(\n                                    (itm) => itm.course === item.course_id\n                                  )?.user_status !== UserExamStatus.Editing\n                                    ? \"border-blue-500 bg-blue-600 hover:text-blue-600\"\n                                    : \"border-green-500 bg-green-600 hover:text-green-600\"\n                                } text-white cursor-pointer hover:bg-white text-sm w-max text-center`}\n                              >\n                                {this.props.candidateExam.user_exams_done.find(\n                                  (itm) => itm.course === item.course_id\n                                )?.user_status !== UserExamStatus.Editing\n                                  ? \"Start exam\"\n                                  : \"Back to Exam\"}\n                              </div>\n                            )\n                          )}\n                          {this.props.selectedApplicationDetails\n                            .application_status ===\n                            ApplicationStates.Initiated && (\n                            <div className=\"font-semibold text-yellow-800 bg-yellow-50 py-2 px-4 text-base\">\n                              Waiting for shortlisting\n                            </div>\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined && (\n                            <div\n                              onClick={() => this.props.changeLocation(item)}\n                              className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                            >\n                              Choose location\n                            </div>\n                          )}\n                        </div>\n                      )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status !== UserExamStatus.Editing && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <div className=\"flex flex-col gap-0\">\n                                <span className=\"text-sm\">Marks</span>\n                                <span className=\"text-lg font-bold -mt-1\">\n                                  {this.props.candidateExam.user_exams_done\n                                    .find(\n                                      (itm) => itm.course === item.course_id\n                                    )\n                                    ?.total_marks.toFixed(2)}\n                                  %\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PreparedExams;\n","import React, { Component } from \"react\";\nimport { HiInformationCircle } from \"react-icons/hi\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { MdCheckCircle, MdPauseCircleFilled } from \"react-icons/md\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  applicationExamAPI,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\n\ninterface ActiveExamsProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  selectedApplicationDetails: GetApplicationsAPI;\n}\ninterface ActiveExamsState {}\n\nexport class ActiveExams extends Component<ActiveExamsProps, ActiveExamsState> {\n  render() {\n    let ExamsDoneFilterTemp = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.findExam(itm.course_id) !== null &&\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) =>\n            ex.course === itm.course_id &&\n            validateExamDate(\n              ex.exam_date,\n              ex.exam_start_time,\n              ex.exam_end_time\n            ) === ExamTimeStatus.Online\n        ).length > 0\n    );\n    let ActiveExamsFilter = ExamsDoneFilterTemp.filter(\n      (check) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (itm) => itm.course === check.course_id\n        ) !== undefined &&\n        (this.props.candidateExam.user_exams_done.find(\n          (itm) => itm.course === check.course_id\n        )?.user_status === UserExamStatus.Editing ||\n          this.props.candidateExam.user_exams_done.find(\n            (itm) => itm.course === check.course_id\n          )?.user_status === UserExamStatus.Paused)\n    );\n    return (\n      <>\n        {ActiveExamsFilter.length > 0 ? (\n          <div className=\"bg-white px-2 py-2\">\n            <div className=\"bg-gray-100 rounded px-2 py-2\">\n              <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n                <span className=\"font-bold \">Active exam</span>\n                <span className=\"font-bold bg-white text-green-600 rounded-full px-2 text-base border border-gray-200\">\n                  {this.props.selectedPosition !== null &&\n                    this.props.selectedExams !== null &&\n                    this.props.loadingExams === false &&\n                    ActiveExamsFilter.length}\n                </span>\n              </div>\n              <div className=\"flex flex-col gap-2\">\n                {this.props.selectedPosition === null ||\n                this.props.selectedExams === null ||\n                this.props.loadingExams === true ? (\n                  <Loading />\n                ) : ActiveExamsFilter.length === 0 ? (\n                  <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                    <div className=\"flex justify-center items-center w-full text-4xl\">\n                      <IoMdInformationCircleOutline />\n                    </div>\n                    <div className=\"text-gray-500\">No exams found!</div>\n                  </div>\n                ) : (\n                  ActiveExamsFilter.map((item, i) => (\n                    <div\n                      key={i + 1}\n                      className={`px-3 py-2 rounded group bg-white border-2 border-green-600 hover:bg-green-50`}\n                    >\n                      <div className=\"grid md:grid-cols-12 gap-2\">\n                        {/* First col */}\n                        <div className=\"col-span-4 flex fex-row items-center gap-3\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Editing && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-green-600 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <HiInformationCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Done && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdCheckCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Removed && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-yellow-800 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdCheckCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Paused && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-green-500 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdPauseCircleFilled className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined &&\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.id !==\n                              undefined && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2 animate-ping`}\n                                >\n                                  <HiInformationCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined &&\n                            (this.props.findExam(item.course_id) === null ||\n                              this.props.findExam(item.course_id)?.id ===\n                                undefined) && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <RiCheckboxBlankCircleFill className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          <div className=\"flex flex-col\">\n                            <div className={`font-bold text-gray-600 truncate`}>\n                              {item.course_name}\n                            </div>\n                            <div className=\"flex flex-row justify-start items-center gap-2\">\n                              <span className=\"text-gray-500 text-xs\">\n                                Exam date:{\" \"}\n                              </span>\n                              <div className=\"flex flex-row items-center gap-2\">\n                                <span className=\"font-bold text-green-600 text-sm\">\n                                  {DATE(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    \"DD/MM/YYYY\"\n                                  )}\n                                </span>\n                                <span\n                                  className={`bg-gray-100 text-green-600 font-bold px-2 py-1 rounded-full text-sm`}\n                                >\n                                  {\n                                    this.props.findExam(item.course_id)!\n                                      .start_time\n                                  }\n                                </span>\n                                <span\n                                  className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm underline`}\n                                >\n                                  {\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )?.user_status\n                                  }\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        {/* Second col */}\n                        <div className=\"col-span-4 flex flex-col items-start justify-center\">\n                          {this.props.selectedExams === null ? (\n                            \"\"\n                          ) : this.props.selectedExams.find(\n                              (itm) => itm.course_id === item.course_id\n                            ) !== undefined ? (\n                            <>\n                              <div className=\"flex flex-row justify-start items-center gap-2\">\n                                <span className=\"text-gray-500 text-xs\">\n                                  Proctoring type:{\" \"}\n                                </span>\n                                <span className=\"text-gray-700 font-bold text-sm\">\n                                  {this.props.selectedExams === null\n                                    ? \"\"\n                                    : this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      ) !== undefined &&\n                                      this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )?.proctoring_type}\n                                </span>\n                              </div>\n                              <div className=\"flex flex-row justify-start items-center gap-2\">\n                                <span className=\"text-gray-500 text-xs\">\n                                  Exam location:{\" \"}\n                                </span>\n                                <span\n                                  className={`text-gray-700 font-bold text-sm`}\n                                >\n                                  Center:{\" \"}\n                                  {this.props.selectedExams === null ? (\n                                    \"\"\n                                  ) : this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    ) !== undefined ? (\n                                    this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    )?.center_name\n                                  ) : (\n                                    <span className=\"italic text-xs\">\n                                      No location selected\n                                    </span>\n                                  )}\n                                </span>\n                                <span\n                                  className={`text-gray-700 font-bold text-sm`}\n                                >\n                                  Room:{\" \"}\n                                  {this.props.selectedExams === null ? (\n                                    \"\"\n                                  ) : this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    ) !== undefined ? (\n                                    this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    )?.room_number\n                                  ) : (\n                                    <span className=\"italic text-xs\">\n                                      No location selected\n                                    </span>\n                                  )}\n                                </span>\n                              </div>\n                            </>\n                          ) : (\n                            <div className=\"flex flex-row gap-2 items-center justify-start\">\n                              <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                              <span className=\"text-yellow-700 italic text-sm\">\n                                No location selected\n                              </span>\n                            </div>\n                          )}\n                        </div>\n                        {/* Third col */}\n                        <div className=\"col-span-4 flex items-center justify-start md:justify-end\">\n                          {this.props.selectedExams === null ? (\n                            \"\"\n                          ) : this.props.selectedExams.find(\n                              (itm) => itm.course_id === item.course_id\n                            ) !== undefined ? (\n                            <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                              {this.props.loadingExams === true ||\n                              this.props.loadingExamsDone === true ? (\n                                <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                                  Checking...\n                                </div>\n                              ) : (\n                                this.props.candidateExam.user_exams_done.find(\n                                  (itm) => itm.course === item.course_id\n                                ) === undefined && (\n                                  <div\n                                    onClick={() => {\n                                      this.setState({\n                                        selectedCourse: item,\n                                        centersModal: true,\n                                      });\n                                      this.props.setMaxExamModal(true);\n                                    }}\n                                    className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                                  >\n                                    Change location\n                                  </div>\n                                )\n                              )}\n                              {this.props.loadingExams === true ||\n                              this.props.loadingExamsDone === true ? (\n                                <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                                  Checking...\n                                </div>\n                              ) : (\n                                this.props.periods.selected_period !== null &&\n                                this.props.periods.selected_period.is_active ===\n                                  true &&\n                                this.props.findExam(item.course_id) !== null &&\n                                this.props.findExam(item.course_id)?.id !==\n                                  undefined &&\n                                this.props.selectedApplicationDetails\n                                  .application_status ===\n                                  ApplicationStates.Shortlisted && (\n                                  <div\n                                    onClick={() => {\n                                      if (\n                                        this.props.selectedPosition !== null\n                                      ) {\n                                        if (\n                                          this.props.positions\n                                            .selected_position === null ||\n                                          this.props.positions.selected_position\n                                            .position_id !==\n                                            this.props.selectedPosition\n                                              .position_id\n                                        ) {\n                                          this.props.setSelectedPosition(\n                                            this.props.selectedPosition\n                                          );\n                                        }\n                                        this.props.selectedExams !== null &&\n                                          this.props.course.courses &&\n                                          this.props.setSelectedCourse(\n                                            this.props.course.courses.find(\n                                              (itm) =>\n                                                itm.course_id === item.course_id\n                                            )!\n                                          );\n                                        this.props.selectedExams !== null &&\n                                          this.props.findExam(\n                                            item.course_id\n                                          ) !== null &&\n                                          this.props.setSelectedCandidateExam(\n                                            this.props.findExam(item.course_id)!\n                                              .id\n                                          );\n                                      }\n                                    }}\n                                    className={`btn border border-green-500 bg-green-600 hover:text-green-600 text-white cursor-pointer hover:bg-white text-sm w-max text-center`}\n                                  >\n                                    Back to exam\n                                  </div>\n                                )\n                              )}\n                            </div>\n                          ) : (\n                            <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                              {this.props.candidateExam.user_exams_done.find(\n                                (itm) => itm.course === item.course_id\n                              ) === undefined && (\n                                <div\n                                  onClick={() =>\n                                    this.setState({\n                                      selectedCourse: item,\n                                      centersModal: true,\n                                    })\n                                  }\n                                  className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                                >\n                                  Choose location\n                                </div>\n                              )}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default ActiveExams;\n","import React, { Component } from \"react\";\nimport { HiInformationCircle } from \"react-icons/hi\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { MdCheckCircle, MdPauseCircleFilled } from \"react-icons/md\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { applicationExamAPI } from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\n\ninterface ExamsDoneProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n}\ninterface ExamsDoneState {}\n\nexport class ExamsDone extends Component<ExamsDoneProps, ExamsDoneState> {\n  render() {\n    let ExamsDoneFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.findExam(itm.course_id) !== null &&\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) =>\n            ex.course === itm.course_id &&\n            (ex.user_status === UserExamStatus.Done ||\n              ex.user_status === UserExamStatus.Removed ||\n              validateExamDate(\n                ex.exam_date,\n                ex.exam_start_time,\n                ex.exam_end_time\n              ) === ExamTimeStatus.Expired)\n        ).length > 0\n    );\n    console.log(\"Done ex: \", ExamsDoneFilter);\n    return (\n      <div className=\"bg-white px-2 py-2\">\n        <div className=\"bg-gray-100 rounded px-2 py-2\">\n          <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n            <span className=\"font-bold \">Completed exams</span>\n            <span className=\"font-bold bg-white text-gray-600 rounded-full px-2 text-base border border-gray-200\">\n              {this.props.selectedPosition !== null &&\n                this.props.selectedExams !== null &&\n                this.props.loadingExams === false &&\n                ExamsDoneFilter.length}\n            </span>\n          </div>\n          <div className=\"flex flex-col gap-2\">\n            {this.props.selectedPosition === null ||\n            this.props.selectedExams === null ||\n            this.props.loadingExams === true ? (\n              <Loading />\n            ) : ExamsDoneFilter.length === 0 ? (\n              <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                <div className=\"flex justify-center items-center w-full text-4xl\">\n                  <IoMdInformationCircleOutline />\n                </div>\n                <div className=\"text-gray-500\">No exams found!</div>\n              </div>\n            ) : (\n              ExamsDoneFilter.map((item, i) => (\n                <div key={i + 1} className={`px-3 py-2 rounded group bg-white`}>\n                  <div className=\"grid md:grid-cols-12 gap-2\">\n                    {/* First col */}\n                    <div className=\"col-span-4 flex fex-row items-center gap-3\">\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Editing && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <HiInformationCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Done && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdCheckCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Removed && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdCheckCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Paused && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdPauseCircleFilled className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) === undefined &&\n                        this.props.findExam(item.course_id) !== null &&\n                        this.props.findExam(item.course_id)?.id !==\n                          undefined && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2 animate-ping`}\n                            >\n                              <HiInformationCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) === undefined &&\n                        (this.props.findExam(item.course_id) === null ||\n                          this.props.findExam(item.course_id)?.id ===\n                            undefined) && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <RiCheckboxBlankCircleFill className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      <div className=\"flex flex-col\">\n                        <div className={`font-bold text-gray-600 truncate`}>\n                          {item.course_name}\n                        </div>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">\n                            Exam date:{\" \"}\n                          </span>\n                          <div className=\"flex flex-row items-center gap-2\">\n                            <span className=\"font-bold text-gray-800 text-sm\">\n                              {DATE(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                \"DD/MM/YYYY\"\n                              )}\n                            </span>\n                            <span\n                              className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm`}\n                            >\n                              {this.props.findExam(item.course_id)!.start_time}\n                            </span>\n                            <span\n                              className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm underline`}\n                            >\n                              {this.props.candidateExam.user_exams_done.find(\n                                (x) => x.course === item.course_id\n                              ) !== undefined\n                                ? validateExamDate(\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_date,\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_start_time,\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_end_time\n                                  ) === ExamTimeStatus.Expired &&\n                                  (this.props.candidateExam.user_exams_done.find(\n                                    (x) => x.course === item.course_id\n                                  )?.user_status === UserExamStatus.Editing\n                                    ? \"Not submitted\"\n                                    : this.props.candidateExam.user_exams_done.find(\n                                        (x) => x.course === item.course_id\n                                      )?.user_status === UserExamStatus.Paused)\n                                  ? \"Paused\"\n                                  : this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )?.user_status\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Second col */}\n                    <div className=\"col-span-4 flex flex-col items-start justify-center\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <>\n                          <div className=\"flex flex-row justify-start items-center gap-2\">\n                            <span className=\"text-gray-500 text-xs\">\n                              Proctoring type:{\" \"}\n                            </span>\n                            <span className=\"text-gray-700 font-bold text-sm\">\n                              {this.props.selectedExams === null\n                                ? \"\"\n                                : this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  ) !== undefined &&\n                                  this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  )?.proctoring_type}\n                            </span>\n                          </div>\n                          <div className=\"flex flex-row justify-start items-center gap-2\">\n                            <span className=\"text-gray-500 text-xs\">\n                              Exam location:{\" \"}\n                            </span>\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Center:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.center_name\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Room:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.room_number\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                          </div>\n                        </>\n                      ) : (\n                        <div className=\"flex flex-row gap-2 items-center justify-start\">\n                          <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                          <span className=\"text-yellow-700 italic text-sm\">\n                            No location selected\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    {/* Third col */}\n                    <div className=\"col-span-4 flex items-center justify-start md:justify-end\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            ) === undefined && (\n                              <div\n                                onClick={() => {\n                                  this.setState({\n                                    selectedCourse: item,\n                                    centersModal: true,\n                                  });\n                                  this.props.setMaxExamModal(true);\n                                }}\n                                className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                              >\n                                Change location\n                              </div>\n                            )\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined && (\n                            <div\n                              onClick={() =>\n                                this.setState({\n                                  selectedCourse: item,\n                                  centersModal: true,\n                                })\n                              }\n                              className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                            >\n                              Choose location\n                            </div>\n                          )}\n                        </div>\n                      )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined && (\n                        // this.props.candidateExam.user_exams_done.find(\n                        //   (itm) => itm.course === item.course_id\n                        // )?.user_status !== UserExamStatus.Editing &&\n                        <div className=\"flex flex-row gap-2 items-center\">\n                          <div\n                            className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                          >\n                            <div className=\"flex flex-col gap-0\">\n                              <span className=\"text-sm\">Marks</span>\n                              <span className=\"text-lg font-bold -mt-1\">\n                                {this.props.candidateExam.user_exams_done\n                                  .find((itm) => itm.course === item.course_id)\n                                  ?.total_marks.toFixed(2)}\n                                %\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExamsDone;\n","import React, { Component } from \"react\";\n\nimport { Fragment } from \"react\";\nimport { MdClose, MdHistory } from \"react-icons/md\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport ChooseExamCenter, {\n  LocationTableInterface,\n} from \"../Application/ExamCenter/ChooseExamCenter\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadExam,\n  examDataInterface,\n  PrepareExamsStoreInterface,\n  loadExamsList,\n  LocationsDataStoreInterface,\n  loadAllLocationsData,\n  setSelectedLocationData,\n  applicationPeriodsStoreInterface,\n  loadApplicationPeriods,\n  candidateExamStoreInterface,\n  setSelectedCandidateExam,\n  courseStoreInterface,\n  loadCourses,\n  setSelectedCourse,\n  InitializeExamDetails,\n  InitialExamDetails,\n  setSelectedPeriod,\n  setSelectedPosition,\n  positionsStoreInterface,\n  loadExamsDone,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  ExamInterface,\n  examStatus,\n  UserExamStatus,\n} from \"../../interfaces/exam\";\nimport {\n  CandidateClaimInterface,\n  course,\n  PlansTypeKeys,\n  PositionAPI,\n  PositionAPICourse,\n} from \"../../interfaces/index\";\nimport {\n  applicationExamAPI,\n  applicationHistory,\n  ApplicationPeriodGet,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport { BsFileEarmarkText } from \"react-icons/bs\";\nimport { IoMdTrash } from \"react-icons/io\";\nimport ApplicationHistory from \"./ApplicationHistory/ApplicationHistory\";\nimport ExamDetails from \"./ExamDetails/ExamDetails\";\nimport { CheckIfExamDone, findTotalMarks } from \"../../utils/question_bank\";\nimport PreparedExams from \"./ExamStatus/PreparedExams\";\nimport ActiveExams from \"./ExamStatus/ActiveExams\";\nimport ExamsDone from \"./ExamStatus/ExamsDone\";\nimport { IoHandLeftSharp } from \"react-icons/io5\";\nimport { isClaimAllowed } from \"../Claimings/Candidate/ClaimForm\";\nimport ClaimFormComponent from \"../../components/ClaimForm/ClaimFormComponent\";\nimport { ClaimingReducerType } from \"../../reducers/claiming\";\nimport { getMyClaims } from \"../../actions/claiming\";\n\ninterface PostExamsProps {\n  doExam: examDataInterface;\n  auth: Auth;\n  loadExam: (user_id: string, exam: ExamInterface) => void;\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  selected_application: string | null;\n  updateLocation: (application_id: string, exams: sentExamInterface[]) => void;\n  changeLocationError: string | null;\n  loading: boolean;\n  incrementIncomplete: () => void;\n  applicationHistory: applicationHistory[] | undefined;\n  deleteApplication: (id: string) => void;\n  selectedApplicationDetails: GetApplicationsAPI | null;\n  locationsData: LocationsDataStoreInterface;\n  loadAllLocationsData: (callback: (loading: boolean) => void) => void;\n  setSelectedLocationData: (locationData: LocationTableInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  course: courseStoreInterface;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  setSelectedCourse: (course: course | null) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  positions: positionsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setMaxExamModal: (status: boolean) => void;\n  setDisplayDetailsModal: (status: boolean) => void;\n  claiming: ClaimingReducerType;\n  getMyClaims: Function;\n}\ninterface PostExamsState {\n  appointmentDetailsModal: {\n    status: boolean;\n    item: InitialExamDetails | null;\n  };\n  redirect: boolean;\n  displayResults: boolean;\n  changeLocation: {\n    status: boolean;\n    location: ExamInterface | null;\n  };\n  centersModal: boolean;\n  selectedCourse: course | null;\n  selectedLocation: applicationExamAPI | null;\n  applicationHistoryState: boolean;\n  loading: boolean;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  claim: boolean;\n}\n\nclass _PostExams extends Component<PostExamsProps, PostExamsState> {\n  constructor(props: PostExamsProps) {\n    super(props);\n\n    this.state = {\n      appointmentDetailsModal: {\n        status: false,\n        item: null,\n      },\n      redirect: false,\n      displayResults: false,\n      changeLocation: {\n        status: false,\n        location: null,\n      },\n      centersModal: false,\n      selectedCourse: null,\n      selectedLocation: null,\n      applicationHistoryState: false,\n      loading: false,\n      loadingExams: false,\n      loadingExamsDone: true,\n      claim: false,\n    };\n  }\n\n  renderExam = (user_id: string, exam: ExamInterface) => {\n    exam.status = examStatus.Editing;\n    this.props.loadExam(user_id, exam);\n    this.setState({ redirect: true });\n  };\n\n  setClaim = (status: boolean) => {\n    this.setState({ claim: status });\n  };\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n    this.props.setMaxExamModal(false);\n  };\n\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.props.selected_application !== null) {\n      this.props.updateLocation(this.props.selected_application, exams);\n    }\n  };\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setLoadingExams = (status: boolean) => {\n    this.setState({ loadingExams: status });\n  };\n  setLoadingExamsDone = (status: boolean) => {\n    this.setState({ loadingExamsDone: status });\n  };\n\n  numberOfIncomplete = (\n    exams: sentExamInterface[],\n    courses: {\n      course_name: string;\n      course_code: string;\n      description: string;\n      school_levels: string[];\n      course_id: string;\n    }[]\n  ) => {\n    let count: number = 0;\n    for (let i in courses) {\n      if (\n        exams.filter((item) => item.course_id === courses[i].course_id)\n          .length === 0\n      ) {\n        count = count + 1;\n      }\n    }\n    return count;\n  };\n\n  findLocation = (\n    course_id: string,\n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string\n  ) => {\n    return this.updateLocationFunction([\n      {\n        course_id: course_id,\n        proctoring_type: \"Center\",\n        center_id: location.center_id,\n        district_id: location.district_id,\n      },\n    ]);\n  };\n\n  findExam = (courseId: string) => {\n    if (this.props.candidateExam.user_exams_temp !== null) {\n      let current_temp = this.props.candidateExam.user_exams_temp.find(\n        (itm) => itm.course === courseId\n      );\n      let testDone = this.props.candidateExam.user_exams_done.find(\n        (itm) => itm.course === courseId\n      );\n      if (\n        current_temp !== undefined &&\n        (testDone === undefined ||\n          testDone.user_status === UserExamStatus.Editing ||\n          testDone.user_status === UserExamStatus.Paused ||\n          testDone.user_status === UserExamStatus.Done ||\n          testDone.user_status === UserExamStatus.Removed)\n      ) {\n        return current_temp;\n      }\n    }\n    return null;\n  };\n\n  findCourse = (course_id: string): applicationExamAPI | null => {\n    if (this.props.selectedExams !== null) {\n      let x: applicationExamAPI | null | undefined =\n        this.props.selectedExams.find(\n          (itm) =>\n            this.state.appointmentDetailsModal && itm.course_id === course_id\n        );\n      if (x !== undefined && x !== null) {\n        return x;\n      }\n    }\n    return null;\n  };\n\n  pendingCourses = () => {\n    let count = 0;\n    for (let course of this.props.selectedPosition.courses) {\n      if (this.props.candidateExam.user_exams_temp !== null) {\n        // let current_temp = this.props.candidateExam.user_exams_temp.find(itm => itm.course === course.course_id);\n        let testDone = this.props.candidateExam.user_exams_done.find(\n          (itm) => itm.course === course.course_id\n        );\n        if (testDone === undefined) {\n          count = count + 1;\n        }\n      }\n    }\n    return count;\n  };\n\n  changeLocation = (item: PositionAPICourse) => {\n    this.setState({ selectedCourse: item, centersModal: true });\n    this.props.setMaxExamModal(true);\n  };\n\n  InitializationFn = () => {\n    if (\n      this.props.periods.selected_period !== null &&\n      this.props.selectedPosition !== null\n    ) {\n      this.props.loadExamsDone(\n        this.props.periods.selected_period.session_plan_id,\n        this.props.auth.user.user_id,\n        this.setLoadingExamsDone\n      );\n      // if (this.state.loadingExamsDone === false) {\n      for (let course of this.props.selectedPosition.courses) {\n        let testDone = this.props.candidateExam.user_exams_temp.find(\n          (itm) => itm.course === course.course_id\n        );\n        if (testDone === undefined) {\n          let center_id = this.props.selectedExams?.find(\n            (itm) => itm.course_id === course.course_id\n          );\n          if (center_id !== undefined) {\n            this.props.InitializeExamDetails(\n              this.props.periods.selected_period.session_plan_id,\n              course.course_id,\n              center_id.district_id,\n              center_id.center_id,\n              center_id.room_id,\n              this.props.selectedPosition.position_id,\n              this.setLoadingExams\n            );\n          }\n        }\n      }\n      // }\n    }\n  };\n\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.setLoading);\n    if (\n      this.props.course.courses === null ||\n      this.props.course.courses.length === 0\n    ) {\n      this.props.loadCourses(this.setLoading);\n    }\n    this.InitializationFn();\n    if (this.props.doExam.exam_answers) {\n      if (this.props.doExam.exam_answers.status === examStatus.Editing) {\n        this.setState({ redirect: true });\n      }\n    }\n    if (\n      this.props.claiming.myClaims === null &&\n      this.props.periods.selected_period !== null\n    ) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        this.props.periods.selected_period.session_plan_id,\n        (status: boolean, msg: string, data?: CandidateClaimInterface[]) => {\n          this.setState({ loading: status });\n          if (msg !== \"\") {\n            alert(msg);\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (this.state.redirect === true) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (\n      this.props.loading === true ||\n      this.state.loadingExams === true ||\n      this.state.loadingExamsDone === true\n    ) {\n      return (\n        <div className=\"bg-white border my-4 mx-4 rounded px-4 py-4 flex flex-col\">\n          <span className=\"mx-4 animate-pulse\">Loading, Please wait...</span>\n          <Loading />\n        </div>\n      );\n    }\n    return this.props.selectedExams === null ? (\n      \"No result found!\"\n    ) : (\n      <Fragment>\n        {this.state.appointmentDetailsModal.status === true &&\n        this.state.appointmentDetailsModal.item !== null ? (\n          <>\n            <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Exam:{\" \"}\n                    {this.state.appointmentDetailsModal.item !== null && (\n                      <>\n                        {\n                          this.findCourse(\n                            this.state.appointmentDetailsModal.item!.course\n                          )?.course_name\n                        }\n                      </>\n                    )}\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() =>\n                        this.setState({\n                          appointmentDetailsModal: {\n                            status: false,\n                            item: null,\n                          },\n                          displayResults: false,\n                        })\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n              {this.findExam(this.state.appointmentDetailsModal.item.course) ===\n              null ? (\n                <div className=\"text-yellow-700 font-bold text-center text-3xl bg-yellow-50 border border-yellow-200 rounded px-4 py-4 mx-4 my-4\">\n                  No exam found for selected course\n                </div>\n              ) : this.props.periods.applicationPeriods &&\n                (this.props.periods.applicationPeriods.find(\n                  (itm) =>\n                    this.state.appointmentDetailsModal.item &&\n                    itm.session_plan_id ===\n                      this.state.appointmentDetailsModal.item.period\n                )?.is_active === false ||\n                  this.props.periods.applicationPeriods.find(\n                    (itm) =>\n                      this.state.appointmentDetailsModal.item &&\n                      itm.session_plan_id ===\n                        this.state.appointmentDetailsModal.item.period\n                  )?.is_active === undefined) ? (\n                <div className=\"text-yellow-700 font-bold text-center text-3xl bg-yellow-50 border border-yellow-200 rounded px-4 py-4 mx-4 my-4 flex flex-col items-center\">\n                  <div>No exam for the selected period</div>\n                  <div\n                    onClick={() =>\n                      this.props.loadApplicationPeriods(this.setLoading)\n                    }\n                    className=\"btn bg-white text-gray-700 w-max text-base border border-gray-700 mt-4 cursor-pointer\"\n                  >\n                    Reload\n                  </div>\n                </div>\n              ) : (\n                <ExamDetails\n                  locationDetails={this.props.selectedExams.find(\n                    (itm) =>\n                      this.state.appointmentDetailsModal.item &&\n                      itm.course_id ===\n                        this.state.appointmentDetailsModal.item.course\n                  )}\n                  examDetails={this.findExam(\n                    this.state.appointmentDetailsModal.item.course\n                  )}\n                  locationsData={this.props.locationsData}\n                  loadAllLocationsData={this.props.loadAllLocationsData}\n                  setSelectedLocationData={this.props.setSelectedLocationData}\n                  periods={this.props.periods}\n                  loadApplicationPeriods={this.props.loadApplicationPeriods}\n                  candidateExam={this.props.candidateExam}\n                  setSelectedCandidateExam={this.props.setSelectedCandidateExam}\n                />\n              )}\n            </div>\n          </>\n        ) : this.state.centersModal === true &&\n          this.state.selectedCourse !== null ? (\n          <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Change exam location\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() => {\n                        this.setState({\n                          centersModal: false,\n                          selectedCourse: null,\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ChooseExamCenter\n              positionCourses={this.state.selectedCourse}\n              addLocation={this.findLocation}\n              closeModal={this.closeModal}\n            />\n          </div>\n        ) : this.state.applicationHistoryState === true ? (\n          this.props.applicationHistory === undefined ? (\n            <div className=\"text-yellow-700 font-bold text-2xl text-center\">\n              No application history found!\n            </div>\n          ) : (\n            <div className=\"animate__animated animate__fadeInUp animate__faster bg-white mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Application history\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() =>\n                        this.setState({ applicationHistoryState: false })\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n              <ApplicationHistory\n                applicationHistory={this.props.applicationHistory}\n              />\n            </div>\n          )\n        ) : (\n          <div className=\"\">\n            <div className=\"px-2 md:py-2\">\n              <div className=\"flex flex-col md:flex-row justify-between items-center md:items-center\">\n                <div className=\"flex flex-row items-center gap-3 mb-3 pt-4 lg:pt-0\">\n                  <span className=\"bg-blue-50  text-blue-700 font-bold rounded-md px-3 py-1 mt-0\">\n                    Status:{\" \"}\n                    {this.props.selectedApplicationDetails?.application_status}\n                  </span>\n                  <div\n                    onClick={() =>\n                      this.setState({ applicationHistoryState: true })\n                    }\n                    className=\"btn bg-gray-100 text-gray-600 border border-gray-300 text-sm flex flex-row items-center gap-2 cursor-pointer hover:border-blue-500 hover:bg-blue-50 hover:text-blue-600 md:mt-0\"\n                  >\n                    <MdHistory className=\"text-xl\" />\n                    <span>View application history</span>\n                  </div>\n                </div>\n                <div\n                  className={`grid ${\n                    this.pendingCourses() > 0 ? \"grid-cols-3\" : \"grid-cols-2\"\n                  } gap-4`}\n                >\n                  <div className=\"col-span-1 flex justify-start md:justify-end\">\n                    <div className=\"flex flex-row items-center\">\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                          Total\n                        </span>\n                        <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                          {this.props.selectedExams.length}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  {this.pendingCourses() > 0 && (\n                    <div className=\"col-span-1 flex justify-start md:justify-end\">\n                      <div className=\"flex flex-row items-center\">\n                        <div className=\"flex flex-col\">\n                          <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                            Pending\n                          </span>\n                          <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                            {this.props.selectedPosition !== null &&\n                              this.pendingCourses()}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  <div className=\"col-span-1 flex justify-start md:justify-end\">\n                    <div className=\"flex flex-row items-center\">\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                          Total marks\n                        </span>\n                        {\n                          // this.state.loadingExams === true || this.state.loadingExamsDone === true ? <span>Wait...</span> :\n                          <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                            {(\n                              parseInt(\n                                findTotalMarks(\n                                  this.props.selectedPosition.courses,\n                                  this.props.candidateExam.user_exams_done\n                                )\n                              ) / this.props.selectedPosition.courses.length\n                            ).toFixed(1)}\n                            %\n                          </span>\n                        }\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"font-bold flex flex-col md:flex-row items-start md:items-center justify-start md:justify-between gap-2\">\n                {this.props.selectedApplicationDetails &&\n                this.props.selectedApplicationDetails.application_status !==\n                  ApplicationStates.Rejected ? (\n                  <div className=\"text-xl flex flex-row items-center gap-2\">\n                    <BsFileEarmarkText className=\"text-2xl\" />\n                    <span>Exams list: </span>\n                  </div>\n                ) : (\n                  <div>\n                    {this.state.loadingExams === false &&\n                    this.state.loadingExamsDone === false &&\n                    CheckIfExamDone(\n                      this.props.selectedPosition.courses,\n                      this.props.candidateExam.user_exams_done\n                    ) === false &&\n                    this.props.periods.selected_period &&\n                    this.props.selected_application &&\n                    this.props.claiming.myClaims &&\n                    isClaimAllowed(\n                      this.props.claiming.myClaims,\n                      this.props.periods.selected_period.session_plan_id,\n                      this.props.selected_application\n                    ) === true ? (\n                      <div\n                        onClick={() => this.setClaim(!this.state.claim)}\n                        className=\"btn flex flex-row gap-2 items-center text-green-700 bg-green-50 cursor-pointer hover:bg-green-100 hover:text-green-900 border border-green-600 hover:border-green-800\"\n                      >\n                        <IoHandLeftSharp className=\"text-xl \" />\n                        <span className=\"text-sm\">Claim now</span>\n                      </div>\n                    ) : this.props.claiming.myClaims === null ? (\n                      <div>Loading...</div>\n                    ) : (\n                      this.props.claiming.myClaims.length > 0 && (\n                        <Link\n                          to=\"claiming-candidate\"\n                          className=\"text-lg font-bold text-blue-600 bg-white hover:bg-blue-100 border border-blue-600 rounded px-3 py-2\"\n                        >\n                          Go to claims list\n                        </Link>\n                      )\n                    )}\n                  </div>\n                )}\n                {this.state.loadingExams === false &&\n                  this.state.loadingExamsDone === false &&\n                  CheckIfExamDone(\n                    this.props.selectedPosition.courses,\n                    this.props.candidateExam.user_exams_done\n                  ) === false && (\n                    <div\n                      onClick={() =>\n                        this.props.selected_application &&\n                        this.props.deleteApplication(\n                          this.props.selected_application\n                        )\n                      }\n                      className=\"btn flex flex-row gap-2 items-center text-red-700 bg-red-50 cursor-pointer hover:bg-red-100 hover:text-red-900\"\n                    >\n                      <IoMdTrash className=\"text-xl \" />\n                      <span className=\"text-sm\">Remove application</span>\n                    </div>\n                  )}\n              </div>\n              {this.state.claim === true &&\n                this.props.selected_application !== null && (\n                  <div className=\"bg-gray-100 mt-4 pt-2 rounded\">\n                    <div className=\"font-bold text-xl px-3 pb-2\">\n                      Submit application claim\n                    </div>\n                    <ClaimFormComponent\n                      setFormState={this.setClaim}\n                      claim_type={PlansTypeKeys.APPLICATION}\n                      file_id={this.props.selected_application}\n                    />\n                  </div>\n                )}\n            </div>\n            {this.props.selectedApplicationDetails &&\n              this.props.selectedApplicationDetails.application_status !==\n                ApplicationStates.Rejected && (\n                <>\n                  <ActiveExams\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    selectedApplicationDetails={\n                      this.props.selectedApplicationDetails\n                    }\n                  />\n                  <PreparedExams\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    changeLocation={this.changeLocation}\n                    selectedApplicationDetails={\n                      this.props.selectedApplicationDetails\n                    }\n                  />\n                  <ExamsDone\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                  />\n                </>\n              )}\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  doExam,\n  prepareExam,\n  locationsData,\n  periods,\n  candidateExam,\n  course,\n  positions,\n  claiming,\n}: StoreState): {\n  auth: Auth;\n  doExam: examDataInterface;\n  prepareExam: PrepareExamsStoreInterface;\n  locationsData: LocationsDataStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n  course: courseStoreInterface;\n  positions: positionsStoreInterface;\n  claiming: ClaimingReducerType;\n} => {\n  return {\n    auth: auth,\n    doExam: doExam,\n    prepareExam: prepareExam,\n    locationsData: locationsData,\n    periods: periods,\n    candidateExam: candidateExam,\n    course: course,\n    positions: positions,\n    claiming: claiming,\n  };\n};\n\nconst PostExams = connect(mapStateToProps, {\n  loadExam,\n  loadExamsList,\n  loadAllLocationsData,\n  setSelectedLocationData,\n  loadApplicationPeriods,\n  setSelectedCandidateExam,\n  loadCourses,\n  setSelectedCourse,\n  InitializeExamDetails,\n  setSelectedPeriod,\n  setSelectedPosition,\n  loadExamsDone,\n  getMyClaims,\n})(_PostExams);\n\nexport default PostExams;\n","import React, { Component, Fragment } from \"react\";\nimport { MdAdd } from \"react-icons/md\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n  setSelectedPeriod,\n  System,\n  PushPopupAlert,\n  positionsStoreInterface,\n  loadAllPositions,\n  FC_Access,\n  CandidateApplicationsStoreInterface,\n  LoadCandidateApplications,\n  candidateExamStoreInterface,\n  InitializeExamDetails,\n  loadExamsDone,\n  setSelectedPosition,\n  setSelectedCourse,\n  courseStoreInterface,\n  setSelectedCandidateExam,\n  examDataInterface,\n  AddUserApplication,\n  RemoveUserApplication,\n  SelectUserApplication,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  applicationStoreInterface,\n  initialApplicationInterface,\n} from \"../../actions/application\";\nimport { ApplicationStepsTypes } from \"../Application/ApplicationSteps/ApplicationSteps\";\nimport {\n  applicationExamAPI,\n  ApplicationPeriodGet,\n  ApplicationStates,\n  ApplicationStatesDescription,\n  GetApplicationsAPI,\n  NoRoomsInterface,\n} from \"../../interfaces/application\";\nimport Exams from \"./Exams\";\nimport { course, PositionAPI } from \"../../interfaces/index\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { AiOutlineFilter } from \"react-icons/ai\";\nimport { IoBriefcase, IoBriefcaseOutline } from \"react-icons/io5\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../components/Navigation/SideNavigation\";\nimport { BsCaretRightFill } from \"react-icons/bs\";\nimport LoadingV2, { LoadingType } from \"../../components/Loading/LoadingV2\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { RiFileForbidLine } from \"react-icons/ri\";\nimport { IoMdList } from \"react-icons/io\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport ApplicationPeriods from \"../../components/ApplicationPeriods/ApplicationPeriods\";\nimport { DATE } from \"../../utils/functions\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { InitializeExamsDone } from \"../../utils/question_bank\";\nimport { examStatus } from \"../../interfaces/exam\";\n\ninterface ApplicationsDashboardState {\n  selectedPosition: PositionAPI | null;\n  selectedExams: applicationExamAPI[] | null;\n  applications: GetApplicationsAPI[] | [] | null;\n  selected_application: string | null;\n  noRoomsApplication: NoRoomsInterface[] | null | [];\n  loading: boolean;\n  applicationError: string | null;\n  number_of_incomplete: number;\n  applicationDetails: boolean;\n  selectedApplicationStatus: ApplicationStates | null;\n  showPeriodFilter: boolean;\n  maxExamModal: boolean;\n  loadingErr: string;\n  displayDetailsModal: boolean;\n}\ninterface ApplicationsDashboardProps {\n  auth: Auth;\n  application: applicationStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  initiateApplication: (initial: initialApplicationInterface) => void;\n  removeLocation: (course_id: string) => void;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  system: System;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  positions: positionsStoreInterface;\n  loadAllPositions: (callback: (loading: boolean) => void) => void;\n  FC_Access: Function;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  LoadCandidateApplications: (\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  doExam: examDataInterface;\n  AddUserApplication: (application: GetApplicationsAPI) => void;\n  RemoveUserApplication: (application_id: string) => void;\n  SelectUserApplication: (application: GetApplicationsAPI | null) => void;\n}\n\nclass _ApplicationsDashboard extends Component<\n  ApplicationsDashboardProps,\n  ApplicationsDashboardState\n> {\n  constructor(props: ApplicationsDashboardProps) {\n    super(props);\n\n    this.state = {\n      selectedPosition: null,\n      selectedExams: null,\n      applications: null,\n      selected_application: null,\n      noRoomsApplication: null,\n      loading: false,\n      applicationError: null,\n      number_of_incomplete: 0,\n      applicationDetails: false,\n      selectedApplicationStatus: null,\n      showPeriodFilter: false,\n      maxExamModal: false,\n      loadingErr: \"\",\n      displayDetailsModal: false,\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  filteredApplications = (\n    applications: GetApplicationsAPI[],\n    Status: ApplicationStates | null,\n    searchPeriod?: ApplicationPeriodGet | null\n  ) => {\n    let appl: GetApplicationsAPI[];\n    if (searchPeriod !== undefined && searchPeriod !== null) {\n      appl = applications.filter(\n        (itm) =>\n          itm.application_session.session_plan_id ===\n          searchPeriod.session_plan_id\n      );\n    } else {\n      appl = applications;\n    }\n    if (Status === null) {\n      return appl;\n    } else {\n      return appl.filter((item) => item.application_status === Status);\n    }\n  };\n\n  closeApplicationDetails = () => {\n    this.setState({ selected_application: null });\n    this.setState({ selectedPosition: null, selected_application: null });\n    this.setState({ selectedExams: null });\n    this.setState({ displayDetailsModal: false });\n  };\n\n  setDisplayDetailsModal = (status: boolean) => {\n    this.setState({ displayDetailsModal: status });\n  };\n\n  applicationStatuses = (\n    application: GetApplicationsAPI[]\n  ): { title: string; count: number; status: ApplicationStates }[] => {\n    let output: { title: string; count: number; status: ApplicationStates }[] =\n      [];\n    for (let i in ApplicationStatesDescription) {\n      output.push({\n        title: ApplicationStatesDescription[i].caption,\n        count: application.filter(\n          (itm) =>\n            itm.application_status === ApplicationStatesDescription[i].key\n        ).length,\n        status: ApplicationStatesDescription[i].key,\n      });\n    }\n    return output;\n  };\n\n  setMaxExamModal = (status: boolean) => {\n    this.setState({ maxExamModal: status });\n  };\n\n  LoadApplications = async () => {\n    this.setState({ loadingErr: \"\" });\n    this.setState({ number_of_incomplete: 0 });\n    if (this.props.auth.user.user_id) {\n      const selected_position = this.state.selectedPosition;\n      this.setState({ applications: null });\n      this.setState({ selectedPosition: null });\n      this.setState({ selectedExams: null });\n      let response: GetApplicationsAPI[] | null = null;\n      if (\n        this.props.candidateApplications.candidate_applications === null &&\n        this.props.auth.user\n      ) {\n        try {\n          const res = await axios.get<GetApplicationsAPI[]>(\n            `${API.APPLICATION}/application/${this.props.auth.user.user_id}`\n          );\n          console.log(\"Applications list: \", res.data);\n          if (res.status === 200) {\n            response = res.data;\n            if (res.data.length === 0) {\n              response = [];\n            } else {\n              for (let application of response) {\n                this.props.AddUserApplication(application);\n              }\n            }\n          } else {\n            response = [];\n          }\n        } catch (error: any) {\n          response = [];\n          console.log(\"Appl Err: \", { ...error });\n        }\n      } else {\n        response = this.props.candidateApplications.candidate_applications;\n      }\n      this.setState({ applications: response });\n      if (response !== null) {\n        if (response.length > 0) {\n          // let done = false;\n          for (let i in response) {\n            let courses = response[i].position.courses;\n            let exams = response[i].exams;\n            if (\n              response[i].position.position_id ===\n              selected_position?.position_id\n            ) {\n              this.setState({ selectedPosition: response[i].position });\n              this.setState({ selectedExams: exams });\n            }\n            // Load Exams done\n            InitializeExamsDone(\n              this.props.periods.selected_period,\n              response[i].position,\n              this.props.candidateExam,\n              this.props.loadExamsDone,\n              this.props.auth.user.user_id,\n              this.setLoading,\n              response[i].exams,\n              this.props.InitializeExamDetails,\n              this.setLoading\n            );\n            for (let x in courses) {\n              if (\n                exams.filter((itm) => itm.course_id === courses[x].course_id)\n                  .length === 0 &&\n                response[i].application_status === ApplicationStates.Incomplete\n              ) {\n                this.setState({\n                  selected_application: response[i].application_id,\n                });\n                this.setState({\n                  selectedPosition: response[i].position,\n                  selected_application: response[i].application_id,\n                });\n                this.setState({ selectedExams: response[i].exams });\n                this.setState({ displayDetailsModal: true });\n                this.incrementIncomplete();\n              }\n            }\n          }\n        } else {\n          this.props.LoadCandidateApplications(\n            this.props.auth.user.user_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n\n  updateLocation = async (\n    application_id: string,\n    exams: sentExamInterface[]\n  ) => {\n    this.setState({ loading: true });\n    this.setState({ applicationError: null });\n    console.log(application_id);\n    for (let i in exams) {\n      try {\n        const res = await axios.post(\n          `${API.APPLICATION}/application/updatemissed`,\n          {\n            application_id: application_id,\n            exams: exams[i],\n          }\n        );\n        if (res.status === 200 && this.state.noRoomsApplication !== null) {\n          this.setState({\n            noRoomsApplication: this.state.noRoomsApplication?.filter(\n              (itm) => itm.course_id !== exams[i].course_id\n            ),\n          });\n        }\n        if (res.status === 200) {\n          this.props.LoadCandidateApplications(\n            this.props.auth.user.user_id,\n            this.setLoading\n          );\n          this.LoadApplications();\n          this.setState({ displayDetailsModal: false });\n          this.setState({ selectedPosition: null, selected_application: null });\n          this.setState({ selectedExams: null });\n          this.props.PushPopupAlert({\n            title: `Location updated successfully`,\n            description:\n              \"Location has updated successfully! You can continue to update before starting of the examination!\",\n            theme: PopupAlertTheme.success,\n          });\n        }\n      } catch (error: any) {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.errors !== undefined) {\n              if (error.response.data.errors.length > 0) {\n                if (this.state.noRoomsApplication) {\n                  let newArr: sentExamInterface[];\n                  if (error.response.data.errors[0].field !== undefined) {\n                    newArr = this.state.noRoomsApplication?.filter(\n                      (itm) =>\n                        itm.course_id ===\n                        error.response.data.errors[0].field.course_id\n                    );\n                    if (newArr !== undefined) {\n                      for (let i in newArr) {\n                        this.props.removeLocation(newArr[i].course_id);\n                      }\n                    }\n                  }\n                }\n                this.setState({\n                  applicationError: error.response.data.errors[0].message,\n                });\n                this.props.PushPopupAlert({\n                  title: error.response.data.errors[0].message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            } else {\n              this.props.PushPopupAlert({\n                title: \"Something went wrong! Please try again\",\n                theme: PopupAlertTheme.danger,\n              });\n              this.setState({\n                applicationError: \"Something went wrong! Please try again\",\n              });\n            }\n          }\n        }\n        console.log(\"Change error: \", { ...error });\n      }\n    }\n    if (this.state.selectedPosition) {\n      this.setState({ selectedPosition: this.state.selectedPosition });\n    }\n    this.setState({ selected_application: application_id });\n    this.setState({ loading: false });\n  };\n\n  incrementIncomplete = () => {\n    this.setState({\n      number_of_incomplete: this.state.number_of_incomplete + 1,\n    });\n  };\n\n  changeLoadingState = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  deleteApplication = async (id: string) => {\n    if (\n      window.confirm(\"Are you sure do you want to delete this application?\") &&\n      id\n    ) {\n      this.changeLoadingState(true);\n      try {\n        await axios.delete(`${API.APPLICATION}/application/${id}`);\n        this.props.RemoveUserApplication(id);\n        this.LoadApplications();\n        this.props.PushPopupAlert({\n          title: `Application deleted successfully!`,\n          theme: PopupAlertTheme.success,\n        });\n        this.setState({ selectedExams: null });\n      } catch (error: any) {\n        this.props.PushPopupAlert({\n          title: `Failed to delete application!`,\n          theme: PopupAlertTheme.warning,\n        });\n      }\n      this.changeLoadingState(false);\n    }\n  };\n\n  setShowFilterStatus = (status: boolean) => {\n    this.setState({ showPeriodFilter: status });\n  };\n\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.changeLoadingState);\n    this.LoadApplications();\n    this.props.loadAllPositions(this.changeLoadingState);\n    if (\n      this.props.application.apply === undefined ||\n      this.props.application.apply.currentStep === ApplicationStepsTypes.Step3\n    ) {\n      this.props.initiateApplication({\n        user_id: this.props.auth.user.user_id,\n        selectedPosition: null,\n        currentStep: ApplicationStepsTypes.Step1,\n        positions: null,\n        doTestStatus: {\n          status: false,\n        },\n        selectedLocation: [],\n      });\n    }\n    // if (this.props.candidateApplications.candidate_applications !== null) {\n    //   if (this.props.candidateApplications.candidate_applications.length > 0) {\n    //     if (this.state.selectedPosition === null) {\n    //       this.setState({ selectedPosition: this.props.candidateApplications.candidate_applications[0].position, selected_application: this.props.candidateApplications.candidate_applications[0].application_id })\n    //     }\n    //     if (this.state.selectedExams === null) {\n    //       this.setState({ selectedExams: this.props.candidateApplications.candidate_applications[0].exams })\n    //     }\n    //   }\n    // }\n  };\n  render() {\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />;\n    }\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (this.props.doExam.exam_answers) {\n      if (\n        this.props.doExam.exam_answers.status === examStatus.Editing ||\n        this.props.doExam.exam_answers.status === examStatus.Paused\n      ) {\n        return <Redirect to=\"/do-exam\" />;\n      }\n    }\n    return (\n      <Fragment>\n        {this.state.selectedPosition !== null &&\n        this.state.selectedExams !== null &&\n        this.state.displayDetailsModal === true ? (\n          <div className=\"border-t border-gray-200 my-2 pb-2 bg-white rounded animate__animated animate__fadeInUp animate__faster\">\n            <div className=\"flex flex-row gap-4 items-center bg-blue-600 rounded-t py-2 px-2\">\n              <div>\n                <div className=\"h-12 w-12 rounded-full bg-blue-500 hover:bg-blue-700 cursor-pointer flex items-center justify-center\">\n                  <BiArrowBack\n                    className=\"text-3xl text-white\"\n                    onClick={() => this.closeApplicationDetails()}\n                  />\n                </div>\n              </div>\n              <div className=\"flex flex-col w-full\">\n                <span className=\"font-bold text-xl text-white\">\n                  {this.state.selectedPosition.position_title}\n                </span>\n                <span className=\"text-sm text-gray-100 font-normal pl-1\">\n                  {this.props.candidateApplications.candidate_applications &&\n                    this.state.selectedPosition !== null &&\n                    this.props.candidateApplications.candidate_applications.find(\n                      (itm) =>\n                        itm.position.position_id ===\n                        this.state.selectedPosition?.position_id\n                    )?.application_session.session_plan_name}{\" \"}\n                  -{\" \"}\n                  {this.props.candidateApplications.candidate_applications !==\n                    null &&\n                    this.state.selectedPosition !== null &&\n                    this.props.candidateApplications.candidate_applications.find(\n                      (itm) =>\n                        itm.position.position_id ===\n                        this.state.selectedPosition?.position_id\n                    )?.application_session.period}\n                </span>\n              </div>\n              <div\n                onClick={() => {\n                  if (\n                    this.props.candidateApplications.candidate_applications !==\n                    null\n                  ) {\n                    let checkApplication =\n                      this.props.candidateApplications.candidate_applications.find(\n                        (itm) =>\n                          itm.application_id === this.state.selected_application\n                      );\n                    if (checkApplication !== undefined) {\n                      this.props.SelectUserApplication(checkApplication);\n                    }\n                  }\n                }}\n              >\n                <Link\n                  to=\"/placement-contract\"\n                  className=\"bg-blue-500 px-4 py-3 font-bold rounded-md border-2 border-white text-white hover:bg-blue-800\"\n                >\n                  Placement\n                </Link>\n              </div>\n            </div>\n            {/* Check application */}\n            <div className=\"bg-gray-100\"></div>\n            <Exams\n              selectedExams={this.state.selectedExams}\n              selectedPosition={this.state.selectedPosition}\n              selected_application={this.state.selected_application}\n              updateLocation={this.updateLocation}\n              changeLocationError={this.state.applicationError}\n              loading={this.state.loading}\n              incrementIncomplete={this.incrementIncomplete}\n              applicationHistory={\n                this.props.candidateApplications.candidate_applications !==\n                  null && this.state.selectedPosition !== null\n                  ? this.props.candidateApplications.candidate_applications.find(\n                      (itm) =>\n                        itm.position.position_id ===\n                        this.state.selectedPosition?.position_id\n                    )?.application_history\n                  : undefined\n              }\n              deleteApplication={this.deleteApplication}\n              selectedApplicationDetails={\n                this.props.candidateApplications.candidate_applications &&\n                this.props.candidateApplications.candidate_applications.find(\n                  (itm) =>\n                    itm.application_id === this.state.selected_application\n                )!\n              }\n              setMaxExamModal={this.setMaxExamModal}\n              setDisplayDetailsModal={this.setDisplayDetailsModal}\n            />\n          </div>\n        ) : (\n          <>\n            <SideNavigation>\n              {this.props.positions.positions_list === null ? (\n                <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 cursor-not-allowed animate__animated animate__zoomIn\">\n                  <RiFileForbidLine className=\"text-2xl text-white\" /> Please\n                  wait...\n                </div>\n              ) : this.props.positions.positions_list.length > 0 &&\n                this.props.periods.applicationPeriods &&\n                this.props.periods.applicationPeriods.filter(\n                  (itm) => itm.is_active === true\n                ).length !== 0 ? (\n                <Link to=\"/apply\">\n                  <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn\">\n                    <MdAdd className=\"text-2xl text-white\" /> Apply\n                  </div>\n                </Link>\n              ) : (\n                <div className=\"btn bg-gray-200 cursor-not-allowed text-gray-500 mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\">\n                  No vacancies!\n                </div>\n              )}\n              {/* <div className=\"mb-6\"></div> */}\n              {/* <Search data={[1, 2, 3]} /> */}\n              <div\n                onClick={() =>\n                  this.setState({ selectedApplicationStatus: null })\n                }\n                className={`cursor-pointer ${\n                  this.state.selectedApplicationStatus !== null\n                    ? \"text-gray-600 hover:text-blue-600 border border-gray-200 hover:border-blue-600 hover:bg-blue-100 bg-white\"\n                    : \"text-blue-600 border border-blue-600 hover:bg-blue-100 bg-blue-100\"\n                } flex flex-row items-center gap-2 px-2 py-1 rounded font-bold`}\n              >\n                <IoMdList className=\"text-xl\" />\n                <span>\n                  View all (\n                  {this.props.candidateApplications.candidate_applications ===\n                  null\n                    ? 0\n                    : this.props.candidateApplications.candidate_applications\n                        .length}\n                  )\n                </span>\n              </div>\n              <div className=\"pt-1\">\n                {this.props.candidateApplications.candidate_applications &&\n                this.filteredApplications(\n                  this.props.candidateApplications.candidate_applications,\n                  null,\n                  this.props.periods.selected_period\n                ) === null ? (\n                  <Loading />\n                ) : (\n                  this.props.candidateApplications.candidate_applications &&\n                  this.applicationStatuses(\n                    this.filteredApplications(\n                      this.props.candidateApplications.candidate_applications,\n                      null,\n                      this.props.periods.selected_period\n                    )\n                  ).map(\n                    (\n                      itm: {\n                        title: string;\n                        count: number;\n                        status: ApplicationStates;\n                      },\n                      i: number\n                    ) =>\n                      itm.count > 0 && (\n                        <Fragment key={itm.title}>\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selectedApplicationStatus: itm.status,\n                              })\n                            }\n                          >\n                            <MainItem\n                              title={itm.title}\n                              count={itm.count}\n                              active={\n                                this.state.selectedApplicationStatus ===\n                                itm.status\n                                  ? true\n                                  : false\n                              }\n                            />\n                          </div>\n                        </Fragment>\n                      )\n                  )\n                )}\n              </div>\n            </SideNavigation>\n            <div className=\"px-2\">\n              <div className=\"mt-2 rounded px-2 md:px-4 py-3 md:py-3\">\n                <div className=\"flex flex-col\">\n                  <div className=\"flex flex-col md:flex-row justify-between md:items-center\">\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-3xl font-bold\">\n                        My Applications{\" \"}\n                        <span className=\"md:hidden\">\n                          (\n                          {this.props.candidateApplications\n                            .candidate_applications &&\n                          this.filteredApplications(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            this.state.selectedApplicationStatus,\n                            this.props.periods.selected_period\n                          )\n                            ? this.filteredApplications(\n                                this.props.candidateApplications\n                                  .candidate_applications,\n                                this.state.selectedApplicationStatus,\n                                this.props.periods.selected_period\n                              ).length\n                            : 0}\n                          )\n                        </span>\n                      </span>\n                      <div className=\"text-gray-700 font-bold text-xs md:text-sm lg:text-md flex flex-row gap-1 items-center\">\n                        <AiOutlineFilter className=\"text-2xl\" /> Selected period{\" \"}\n                        <span\n                          onClick={() =>\n                            this.setState({ showPeriodFilter: true })\n                          }\n                          className={`px-2 ${\n                            this.props.periods.selected_period !== null\n                              ? \"text-blue-600 hover:bg-blue-100 border-2 border-gray-200 hover:border-blue-600 underline\"\n                              : \"bg-white text-gray-600 hover:bg-gray-100 border border-gray-300\"\n                          }  rounded-full py-1 flex flex-row justify-center items-center font-bold cursor-pointer`}\n                        >\n                          {this.props.periods.selected_period !== null ? (\n                            <>\n                              <BsCaretRightFill className=\"mr-3\" />\n                              {\n                                this.props.periods.selected_period\n                                  .session_plan_name\n                              }\n                            </>\n                          ) : (\n                            \"Choose period\"\n                          )}\n                        </span>\n                      </div>\n                    </div>\n                    <div>\n                      <div\n                        onClick={() =>\n                          this.setState({ showPeriodFilter: true })\n                        }\n                        className=\"bg-white border border-white hover:border-blue-600 text-blue-600 font-bold items-center btn w-max cursor-pointer hover:bg-blue-100 my-2 md:my-0\"\n                      >\n                        {this.props.periods.selected_period === null\n                          ? \"Choose period\"\n                          : \"Change period\"}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {this.state.loadingErr !== \"\" && (\n                <div className=\"bg-yellow-100 text-yellow-700 font-extrabold text-2xl mx-4 px-3 py-3 rounded\">\n                  {this.state.loadingErr}\n                </div>\n              )}\n              <div className=\"mb-2\">\n                <div className=\"grid grid-cols-12 gap-3\">\n                  <div className=\"col-span-12\">\n                    <div className={`grid md:grid-cols-1 lg:grid-cols-1 gap-2`}>\n                      <div className=\"-my-2 md:hidden lg:hidden xl:hidden\">\n                        {this.props.positions.positions_list === null ? (\n                          <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                            <RiFileForbidLine className=\"text-2xl text-white\" />{\" \"}\n                            Please wait...\n                          </div>\n                        ) : this.props.positions.positions_list.length > 0 ? (\n                          <Link to=\"/apply\">\n                            <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                              <MdAdd className=\"text-2xl text-white\" /> Create\n                              application\n                            </div>\n                          </Link>\n                        ) : (\n                          <div className=\"btn bg-gray-400 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                            <RiFileForbidLine className=\"text-2xl text-white\" />{\" \"}\n                            No vacancies!\n                          </div>\n                        )}\n                      </div>\n                      {this.props.candidateApplications\n                        .candidate_applications === null ? (\n                        <LoadingV2 type={LoadingType.dark} />\n                      ) : this.filteredApplications(\n                          this.props.candidateApplications\n                            .candidate_applications,\n                          this.state.selectedApplicationStatus,\n                          this.props.periods.selected_period\n                        ).length === 0 ? (\n                        <div className=\"\">\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value=\"No Applications found!\"\n                            component={\n                              <div className=\"-my-2 hidden md:block\">\n                                {this.props.positions.positions_list !== null &&\n                                  this.props.positions.positions_list.length >\n                                    0 &&\n                                  this.props.periods.applicationPeriods &&\n                                  this.props.periods.applicationPeriods.filter(\n                                    (itm) => itm.is_active === true\n                                  ).length !== 0 && (\n                                    <Link to=\"/apply\">\n                                      <div className=\"text-blue-600 font-bold underline mb-2 hover:text-blue-800 animate__animated animate__zoomIn\">\n                                        Click here to create new application\n                                      </div>\n                                    </Link>\n                                  )}\n                              </div>\n                            }\n                          />\n                        </div>\n                      ) : (\n                        this.filteredApplications(\n                          this.props.candidateApplications\n                            .candidate_applications,\n                          this.state.selectedApplicationStatus,\n                          this.props.periods.selected_period\n                        ).map((item, i) => (\n                          <div\n                            onClick={() => {\n                              this.setState({\n                                selectedPosition: item.position,\n                                selected_application: item.application_id,\n                              });\n                              this.setState({ selectedExams: item.exams });\n                              this.setState({ displayDetailsModal: true });\n                            }}\n                            className={`bg-white rounded-md animate__animated animate__fadeIn animate__faster\n                      ${\n                        this.state.selectedPosition?.position_id ===\n                        item.position.position_id\n                          ? \"border-2 border-blue-600 shadow\"\n                          : item.application_status ===\n                            ApplicationStates.Initiated\n                          ? \"border-gray-200 bg-gray-50 hover:border-gray-600\"\n                          : item.application_status ===\n                            ApplicationStates.Rejected\n                          ? \"bg-white border-white\"\n                          : item.application_status ===\n                            ApplicationStates.Shortlisted\n                          ? \"border-gray-200 bg-white hover:border-blue-600\"\n                          : \"bg-white border-yellow-600 hover:border-yellow-500\"\n                      } flex flex-col cursor-pointer font-normal hover:font-bold border-2`}\n                          >\n                            <div\n                              className={`grid md:grid-cols-12 group px-3 py-3 rounded-md ${\n                                this.state.selectedPosition?.position_id ===\n                                item.position.position_id\n                                  ? \"bg-gray-100 rounded-t\"\n                                  : \"bg-white\"\n                              }`}\n                            >\n                              <div className=\"col-span-1 flex items-center justify-center\">\n                                {item.application_status ===\n                                ApplicationStates.Initiated ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Rejected ? (\n                                  <IoBriefcase className=\"text-5xl text-gray-400 group-hover:text-gray-700\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Shortlisted ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Incomplete ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-yellow-800\" />\n                                ) : (\n                                  <IoBriefcase className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                )}\n                              </div>\n                              <div className=\"col-span-7\">\n                                <span\n                                  className={`font-extrabold \n                          ${\n                            item.application_status !==\n                            ApplicationStates.Initiated\n                              ? item.application_status ===\n                                ApplicationStates.Rejected\n                                ? \"text-gray-900 group-hover:text-gray-900\"\n                                : item.application_status ===\n                                  ApplicationStates.Shortlisted\n                                ? \"text-gray-900 group-hover:text-blue-600\"\n                                : item.application_status ===\n                                  ApplicationStates.Incomplete\n                                ? \"text-gray-900 group-hover:text-yellow-800\"\n                                : \"text-gray-900 group-hover:text-blue-600\"\n                              : \"text-gray-900 group-hover:text-blue-600\"\n                          }`}\n                                >\n                                  {item.position.position_title}\n                                </span>\n                                <div className=\"flex flex-col text-xs text-gray-600 mt-2\">\n                                  <div className=\"flex flex-row gap-2\">\n                                    <span\n                                      className={`${\n                                        item.application_status !==\n                                        ApplicationStates.Initiated\n                                          ? item.application_status ===\n                                            ApplicationStates.Rejected\n                                            ? \"text-gray-500\"\n                                            : item.application_status ===\n                                              ApplicationStates.Shortlisted\n                                            ? \"text-gray-500\"\n                                            : \"text-gray-500\"\n                                          : \"text-gray-500\"\n                                      }`}\n                                    >\n                                      Date:\n                                    </span>\n                                    <span\n                                      className={`${\n                                        item.application_status !==\n                                        ApplicationStates.Initiated\n                                          ? item.application_status ===\n                                            ApplicationStates.Rejected\n                                            ? \"text-gray-800\"\n                                            : item.application_status ===\n                                              ApplicationStates.Shortlisted\n                                            ? \"text-gray-800\"\n                                            : \"text-gray-800\"\n                                          : \"text-black\"\n                                      } font-bold`}\n                                    >\n                                      {DATE(item.createdAt, \"DD/MM/YYYY\")}\n                                    </span>\n                                  </div>\n                                  <div className=\"flex flex-row gap-2\">\n                                    <span\n                                      className={`${\n                                        item.application_status !==\n                                        ApplicationStates.Initiated\n                                          ? item.application_status ===\n                                            ApplicationStates.Rejected\n                                            ? \"text-gray-500\"\n                                            : item.application_status ===\n                                              ApplicationStates.Shortlisted\n                                            ? \"text-gray-500\"\n                                            : \"text-gray-500\"\n                                          : \"text-gray-500\"\n                                      }`}\n                                    >\n                                      Application period:\n                                    </span>\n                                    <span\n                                      className={`${\n                                        item.application_status !==\n                                        ApplicationStates.Initiated\n                                          ? item.application_status ===\n                                            ApplicationStates.Rejected\n                                            ? \"text-gray-800\"\n                                            : item.application_status ===\n                                              ApplicationStates.Shortlisted\n                                            ? \"text-gray-800\"\n                                            : \"text-gray-800\"\n                                          : \"text-black\"\n                                      } font-bold`}\n                                    >\n                                      {item.application_session &&\n                                        item.application_session\n                                          .session_plan_name}{\" \"}\n                                      -{\" \"}\n                                      {item.application_session &&\n                                        item.application_session.period}\n                                    </span>\n                                  </div>\n                                </div>\n                              </div>\n                              <div className=\"col-span-4 flex md:justify-end items-center\">\n                                <div className=\"flex flex-col float-left text-sm md:justify-end\">\n                                  <span\n                                    className={`${\n                                      item.application_status ===\n                                      ApplicationStates.Rejected\n                                        ? \"text-yellow-700\"\n                                        : \"text-gray-500\"\n                                    } md:text-right`}\n                                  >\n                                    Status\n                                  </span>\n                                  {item.application_status ===\n                                  ApplicationStates.Initiated ? (\n                                    <span\n                                      className={`font-bold ${\n                                        this.state.selectedPosition\n                                          ?.position_id ===\n                                        item.position.position_id\n                                          ? \"bg-gray-600 text-gray-100 border border-gray-500 rounded-full\"\n                                          : \"bg-gray-50 text-gray-800 rounded\"\n                                      } px-3 py-1`}\n                                    >\n                                      {\n                                        ApplicationStatesDescription.find(\n                                          (itm) =>\n                                            itm.key === item.application_status\n                                        )?.caption\n                                      }\n                                    </span>\n                                  ) : item.application_status ===\n                                    ApplicationStates.Rejected ? (\n                                    <span\n                                      className={`font-bold ${\n                                        this.state.selectedPosition\n                                          ?.position_id ===\n                                        item.position.position_id\n                                          ? \"bg-yellow-900 text-yellow-100 border border-yellow-700 rounded-full\"\n                                          : \"bg-yellow-100 text-yellow-900 rounded\"\n                                      } px-3 py-1`}\n                                    >\n                                      {\n                                        ApplicationStatesDescription.find(\n                                          (itm) =>\n                                            itm.key === item.application_status\n                                        )?.caption\n                                      }\n                                    </span>\n                                  ) : item.application_status ===\n                                    ApplicationStates.Shortlisted ? (\n                                    <span\n                                      className={`font-bold ${\n                                        this.state.selectedPosition\n                                          ?.position_id ===\n                                        item.position.position_id\n                                          ? \"bg-blue-900 text-blue-100 border border-blue-700 rounded-full\"\n                                          : \"bg-blue-100 text-blue-900 rounded\"\n                                      } px-3 py-1`}\n                                    >\n                                      {\n                                        ApplicationStatesDescription.find(\n                                          (itm) =>\n                                            itm.key === item.application_status\n                                        )?.caption\n                                      }\n                                    </span>\n                                  ) : (\n                                    <span\n                                      className={`font-bold ${\n                                        this.state.selectedPosition\n                                          ?.position_id ===\n                                        item.position.position_id\n                                          ? \"bg-yellow-600 text-yellow-100 border border-yellow-500 rounded-full\"\n                                          : \"bg-yellow-100 text-yellow-700 rounded\"\n                                      } px-3 py-1`}\n                                    >\n                                      {\n                                        ApplicationStatesDescription.find(\n                                          (itm) =>\n                                            itm.key === item.application_status\n                                        )?.caption\n                                      }\n                                    </span>\n                                  )}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        ))\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n\n        {this.state.showPeriodFilter === true && (\n          <Modal\n            title={<div className=\"text-2xl\">Choose a period</div>}\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ showPeriodFilter: false })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true, body: false }}\n          >\n            <ApplicationPeriods\n              applicationPeriods={this.props.periods.applicationPeriods}\n              setSelectedPeriod={this.props.setSelectedPeriod}\n              showPeriodFilter={this.setShowFilterStatus}\n            />\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  application,\n  periods,\n  system,\n  positions,\n  candidateApplications,\n  candidateExam,\n  course,\n  doExam,\n}: StoreState): {\n  auth: Auth;\n  application: applicationStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  system: System;\n  positions: positionsStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n  course: courseStoreInterface;\n  doExam: examDataInterface;\n} => {\n  return {\n    auth: auth,\n    application: application,\n    periods,\n    system: system,\n    positions: positions,\n    candidateApplications: candidateApplications,\n    candidateExam: candidateExam,\n    course: course,\n    doExam: doExam,\n  };\n};\n\nexport const ApplicationsDashboard = connect(mapStateToProps, {\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  PushPopupAlert,\n  loadAllPositions,\n  FC_Access,\n  LoadCandidateApplications,\n  InitializeExamDetails,\n  loadExamsDone,\n  setSelectedPosition,\n  setSelectedCourse,\n  setSelectedCandidateExam,\n  AddUserApplication,\n  RemoveUserApplication,\n  SelectUserApplication,\n})(_ApplicationsDashboard);\n","import React, { FC, ReactElement } from \"react\";\nimport { ApplicationsDashboard } from \"../ApplicationsDashboard/ApplicationsDashboard\";\ntype UserDashboardProps = {};\n\nexport const UserDashboard: FC<UserDashboardProps> = (): ReactElement => {\n  /* function body */\n  return (\n    <div className=\"\">\n      {/* Applications Dashboard */}\n      <ApplicationsDashboard />\n    {/* <div className=\"p-6\">\n      <h1 className=\"text-6xl text-center font-bold text-gray-400\">\n        Dashboard{\" \"}\n      </h1>\n\n      <br />\n      <br />\n      <div className=\"text-center\">\n        <Link to=\"/admin-center\">\n          <button className=\"text-blue-900 bg-blue-200 rounded py-1 px-2\">\n            Access Center as Admin\n          </button>\n        </Link>\n\n        <Link to=\"/candidate-center\">\n          <button className=\"text-yellow-900 bg-yellow-200 ml-1 rounded py-1 px-2\">\n            Access Center as a candidate\n          </button>\n        </Link>\n      </div>\n      <br />\n      <br />\n      <br />\n\n      <SystemDevelopmentProgress /> */}\n    </div>\n  );\n};\n"],"sourceRoot":""}
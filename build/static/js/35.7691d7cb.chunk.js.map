{"version":3,"sources":["components/Table/Table.tsx","actions/settings.ts","shared/interfaces.tsx","actions/location.ts","containers/Positions/ViewRequirements.tsx","actions/schools.ts","interfaces/marks_publication.ts","containers/Positions/ViewPosition.tsx","containers/district/Schools/index.tsx","containers/HeadTeacher/ReceivePost.tsx","containers/HeadTeacher/ViewRequest.tsx","containers/HeadTeacher/RequestList.tsx","containers/HeadTeacher/StepsHeader.tsx","containers/HeadTeacher/RequestPostForm.tsx","containers/HeadTeacher/RequestTeacher.tsx","containers/district/index.tsx"],"names":["Table","props","table","tr","tableId","length","result","characters","charactersLength","i","charAt","Math","floor","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","pagination","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","map","style","display","className","tableSize","search","searchBG","type","placeholder","onChange","e","data","filterType","filter","td","rows","cols","toLowerCase","columns","textContent","innerText","indexOf","filterTable","target","value","disabled","loading","Number","tableClass","rounded","id","hideColumns","thColor","column","index","padding","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","getSystemSettings","callback","dispatch","a","setAxiosToken","axios","get","API","AUTH","res","ActionTypes","GET_SYSTEM_SETTINGS","payload","console","log","code_error","errorToText","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","task","title","key","permitted","GET_TASK_ACCESS","getPositions","APPLICATION","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","PostRequestStatusInterface","DocumentAttributesInterface","DocValidationStatusInterface","SESSION_PLAN_KEYS","DOCUMENT_VALIDATION","EXAMINATION","MARKS_PUBLICATION","PLACEMENT_TRANSFER","getAllRoom","GET_ALL_ROOM","error","FC_CreateProvince","CREATE_PROVINCE","FC_UpdateProvince","UPDATE_PROVINCE","FC_DeleteProvince","DELETE_PROVINCE","FC_CreateDistrict","CREATE_DISTRICT","FC_UpdateDistrict","UPDATE_DISTRICT","FC_DeleteDistrict","DELETE_DISTRICT","FC_CreateSector","CREATE_SECTOR","FC_UpdateSector","UPDATE_SECTOR","FC_DeleteSector","DELETE_SECTOR","FC_CreateCenter","CREATE_CENTER","FC_UpdateCenter","UPDATE_CENTER","FC_DeleteCenter","DELETE_CENTER","FC_CreateRoom","CREATE_ROOM","FC_UpdateRoom","UPDATE_ROOM","FC_DeleteRoom","delete_room","DELETE_ROOM","ViewRequirements","requirements","colSpan","item","subcategory_title","field_title","required","field_id","getSchools","GET_SCHOOLS","createSchool","schools","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","school_id","PLACEMENT","schoolPosts","FETCH_SCHOOL_POSTS","getSchoolPlacement","GET_SCHOOL_PLACEMENT","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","TYPE","UPDATE_SCHOOL_POST","fetchDistrictPosts","district_id","districtPosts","FETCH_DISTRICT_POSTS","getDistrictPlacement","GET_DISTRICT_PLACEMENT","MarksPublicationCandidateStatus","marksPublicationCandidateReportContentKeyInterface","PlacedCandidateStatus","placementReportContentKeyInterface","FC_PositionDistinctCategory","PositionData","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","pos","req","thisRequirements","thisCategory","category","thisSubCategory","subcategory","field","position_requirement","thisField","push","category_id","user_detail_category_id","category_title","subcategory_id","user_detail_subcategory_id","_id","includes","connect","PushPopupAlert","loadingRequest","setLoadingRequest","position_id","status","name","window","confirm","patch","isPublished","theme","PopupAlertTheme","info","thisPositionCopy","thisPosition","setThisPosition","danger","position_title","description","school_level_id","school_level_name","education_institute_id","education_category_title","courses","course_name","course_code","course_id","isGuest","NoResultThemes","Dark","LocationsSectorInArray","LocationData","locationTemp","p","districts","d","sectors","s","province_id","province_name","province_code","district_name","district_code","sector_id","sector_name","sector_code","getSchoolById","find","school","setLoading","state","setState","setLoadingSchool","loadingSchool","setError","componentDidMount","allRoom","msg","education_categories","loadEducationCategories","loadingCandidatesError","schoolList","handleSubmit","preventDefault","isEmptyOrSpaces","schoolName","element","schoolCode","instituteId","districtId","sectorId","thisSector","getSectors","modalState","post","school_name","school_code","education_category_id","shool_id","success","provinceId","thisSchool","doc_category_error","handleDelete","schoolId","delete","province_error","countSchool","FILTER_TYPE","FILTER_VALUE","counts","toTwoDigit","getProvinceByCode","getDistrictByCode","province","undefined","getSectorByCode","district","getDistrictData","toString","forEach","Object","prototype","hasOwnProperty","call","filterSchools","institute","searchInput","districtFilterStatus","edicationCategoryFilterStatus","provinceFilterStatus","thisEdication","thisProvince","thisDistrict","this","Fragment","education","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","medium","body","footer","onSubmit","sector","Component","Schools","auth","schoolLevels","locations","roomLocation","ReceivePost","submitRequest","thisPlacement","action","comment","setFormError","received","thisPost","received_posts","requested_post_id","confirmed_posts","confirmed_by","user","user_id","approval_date","needed_posts","male_number","female_number","occupied_posts","requested_by","requested_post_status","RECEIVED","confirmPlacement","role_error","placedStatus","waiting_list_id","placed_candidate_id","REJECTED","PLACED","user_access","message","loadingPost","setLoadingPost","getSchoolPlacementError","placement_id","viewPost","setThisPost","setReceivedPosts","setModalState","getPositionById","systemPositions","CONFIRMED","getPlacementByRequest","placementList","INITIATED","capitalizeFirstLetter","src","AUTH_FILES","user_info","photo","alt","fname","lname","phone_number","email","formError","resize","ViewRequest","Modal","setViewPost","large","schoolPlacements","setPostId","setPositionId","setRequestedPosts","setRequestExplanation","setFemaleOnPosition","setMaleOnPosition","setFormSteps","ONE","TWO","setStepState","RequestList","setSearchInput","setFilterByPosition","filterByPosition","position","schoolPost","NoResult","StepsHeader","currentStep","stepState","RequestPostForm","GetAllowedPositions","postPositionIds","requestedPosts","requestExplanation","positionId","maleOnPosition","femaleOnPosition","setSchoolLevel","selectedLevel","getPositionByLevelId","allPosition","levelId","formSteps","school_levels","ViewPosition","htmlFor","system_settings","placements","request","PENDING","request_id","RequestTeacher","postId","receivedPosts","to","loadSchoolLevels","PostRequest","District","districtPlacements","loadingPosition","setLoadingPosition","loadingPlacement","setLoadingPlacement","approvedPosts","setApprovedPosts","doPlacement","msgAlert","doPlacement_reply","reDoPlacement","addSchoolRequest","dataForm","gender","available_places","requested_teacher","requested_teachers","addSchoolRequest_reply","Date","post_relpy","DATE","request_date","max"],"mappings":"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","file":"static/js/35.7691d7cb.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = (props) => {\n  const startPage = 1;\n  const tableId =\n    !props.tableId || props.tableId === \"myTable\" ? FC_makeID() : props.tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    props.pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId!)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < props.columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${props.tableSize} overflow-x-auto`}>\n      {/* search box  */}\n      {props.search && (\n        <div className={`${props.searchBG} w-full mb-2`}>\n          {props.search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={props.loading}\n              />\n\n              {props.pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={props.loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"overflow-x-auto w-full\">\n        <table\n          className={\n            props.tableClass\n              ? props.tableClass\n              : `w-full shadow ${\n                  props.rounded && \"sm:rounded-lg\"\n                } table-auto order-table`\n          }\n          id={tableId}\n        >\n          {!props.hideColumns && (\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n              <tr\n                className={`text-left tracking-wide bg-${props.thColor}-100 border-b-2 border-${props.thColor}-500 text-${props.thColor}-600`}\n              >\n                {props.columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className={`${column.padding} text-${\n                      column.alignText\n                    } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                    onClick={() =>\n                      column.isSortAllowed && sortThisColumn(tableId, index)\n                    }\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      {column.columnTitle}\n                      {column.isSortAllowed && <BiSort />}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n            {props.rows()}\n          </tbody>\n        </table>\n        {props.pagination && (\n          <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n            <div>\n              <span className=\"text-xs xs:text-sm text-gray-900\">\n                Showing 1 to {pageSize} of {totalItems - 1} Entries\n              </span>\n            </div>\n            <div>\n              <nav className=\"inline-flex shadow-sm\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                      currentPage !== 1 && \"bg-white\"\n                    }`}\n                    aria-label=\"Previous\"\n                    disabled={currentPage === 1 || props.loading}\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                  >\n                    <MdNavigateBefore className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <div>\n                  {pages &&\n                    pages.map((page, pageIndex) => (\n                      <button\n                        key={pageIndex}\n                        className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                          page !== currentPage\n                            ? \"bg-white\"\n                            : \"bg-gray-100 cursor-default\"\n                        }`}\n                        disabled={page === currentPage || props.loading}\n                        onClick={() => setCurrentPage(page)}\n                      >\n                        {page}\n                      </button>\n                    ))}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                      currentPage !== totalPages && \"bg-white\"\n                    }`}\n                    aria-label=\"Next\"\n                    disabled={currentPage === totalPages || props.loading}\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                  >\n                    <MdNavigateNext className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${API.AUTH}/allroleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active?: boolean;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  in_education?: boolean;\n  disability?: boolean;\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: boolean;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  _id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  _id: string;\n  center_name: string;\n  center_code: number;\n  district_id: string;\n}\n\nexport interface SectorInterface {\n  district_code: number;\n  district_id: string;\n  sector_name: string;\n  sector_code: number;\n  sector_id: string;\n}\n\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  sectors: SectorInterface[];\n  province_code: number;\n  province_id: string;\n  district_name: string;\n  district_code: number;\n  _id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_code: number;\n  _id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  requested_post_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  school_code: number;\n  province_id: string;\n  province_code: number;\n  district_id: string;\n  district_code: number;\n  sector_id: string;\n  sector_code: number;\n  education_category_id: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: string;\n  application_status: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  district: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface LocationSectorTableInterface {\n  province_id: string;\n  province_name: string;\n  province_code: number;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n  SectorInterface,\n} from \"../shared/interfaces\";\nimport { errorToText } from \"../utils/errors\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface getAllRoomActions {\n  type: ActionTypes.GET_ALL_ROOM;\n  payload: RoomLocationInterface[];\n}\n\nexport interface createProvinceActions {\n  type: ActionTypes.CREATE_PROVINCE;\n  payload: RoomLocationInterface;\n}\n\nexport interface updateProvinceActions {\n  type: ActionTypes.UPDATE_PROVINCE;\n  payload: {\n    province_id: string;\n    province_name: string;\n    provice_code: number;\n  };\n}\n\nexport interface deleteProvinceActions {\n  type: ActionTypes.DELETE_PROVINCE;\n  payload: string;\n}\n\n// ============ DISTRICT =================\nexport interface createDistrictActions {\n  type: ActionTypes.CREATE_DISTRICT;\n  payload: { province_id: string; data: DistrictInterface };\n}\n\nexport interface updateDistrictActions {\n  type: ActionTypes.UPDATE_DISTRICT;\n  payload: {\n    province_id: string;\n    district_id: string;\n    district_name: string;\n    district_code: number;\n  };\n}\n\nexport interface deleteDistrictActions {\n  type: ActionTypes.DELETE_DISTRICT;\n  payload: { province_id: string; district_id: string };\n}\n\n// ============ SECTOR =================\nexport interface createSectorActions {\n  type: ActionTypes.CREATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: SectorInterface;\n  };\n}\n\nexport interface updateSectorActions {\n  type: ActionTypes.UPDATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    sector_id: string;\n    sector_name: string;\n    sector_code: number;\n  };\n}\n\nexport interface deleteSectorActions {\n  type: ActionTypes.DELETE_SECTOR;\n  payload: { province_id: string; district_id: string; sector_id: string };\n}\n\n// ============ CENTERS =================\nexport interface createCenterActions {\n  type: ActionTypes.CREATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: CentersInterface;\n  };\n}\n\nexport interface updateCenterActions {\n  type: ActionTypes.UPDATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    examination_center_id: string;\n    center_name: string;\n  };\n}\n\nexport interface deleteCenterActions {\n  type: ActionTypes.DELETE_CENTER;\n  payload: { province_id: string; district_id: string; center_id: string };\n}\n\n// ============ ROOMS =================\nexport interface createRoomActions {\n  type: ActionTypes.CREATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    data: RoomsInterface;\n  };\n}\n\nexport interface updateRoomActions {\n  type: ActionTypes.UPDATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n    room_number: number;\n    capacity: number;\n  };\n}\n\nexport interface deleteRoomActions {\n  type: ActionTypes.DELETE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n  };\n}\n\nexport type RoomActionType =\n  | getAllRoomActions\n  | createProvinceActions\n  | updateProvinceActions\n  | deleteProvinceActions\n  | createDistrictActions\n  | updateDistrictActions\n  | deleteDistrictActions\n  | createSectorActions\n  | updateSectorActions\n  | deleteSectorActions\n  | createCenterActions\n  | updateCenterActions\n  | deleteCenterActions\n  | createRoomActions\n  | updateRoomActions\n  | deleteRoomActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getAllRoom = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<RoomLocationInterface[]>(\n        `${API.APPLICATION}/roomlocation`\n      );\n      dispatch<getAllRoomActions>({\n        type: ActionTypes.GET_ALL_ROOM,\n        payload: res.data,\n      });\n      console.log(\"====================================\");\n      console.log({ res: res.data });\n      console.log(\"====================================\");\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.error(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const FC_CreateProvince = (data: RoomLocationInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createProvinceActions>({\n      type: ActionTypes.CREATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateProvince = (data: {\n  province_id: string;\n  province_name: string;\n  provice_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateProvinceActions>({\n      type: ActionTypes.UPDATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteProvince = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteProvinceActions>({\n      type: ActionTypes.DELETE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\n// DISTRICT =================\nexport const FC_CreateDistrict = (data: {\n  province_id: string;\n  data: DistrictInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createDistrictActions>({\n      type: ActionTypes.CREATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateDistrict = (data: {\n  province_id: string;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateDistrictActions>({\n      type: ActionTypes.UPDATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteDistrict = (data: {\n  province_id: string;\n  district_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteDistrictActions>({\n      type: ActionTypes.DELETE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\n// SECTOR =================\nexport const FC_CreateSector = (data: {\n  province_id: string;\n  district_id: string;\n  data: SectorInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createSectorActions>({\n      type: ActionTypes.CREATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateSectorActions>({\n      type: ActionTypes.UPDATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteSectorActions>({\n      type: ActionTypes.DELETE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\n// CENTERS =================\nexport const FC_CreateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  data: CentersInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createCenterActions>({\n      type: ActionTypes.CREATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  examination_center_id: string;\n  center_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateCenterActions>({\n      type: ActionTypes.UPDATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteCenter = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteCenterActions>({\n      type: ActionTypes.DELETE_CENTER,\n      payload: data,\n    });\n  };\n};\n\n// ROOM =================\nexport const FC_CreateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  data: RoomsInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createRoomActions>({\n      type: ActionTypes.CREATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n  room_number: number;\n  capacity: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateRoomActions>({\n      type: ActionTypes.UPDATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n}) => {\n  console.log({ delete_room: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteRoomActions>({\n      type: ActionTypes.DELETE_ROOM,\n      payload: data,\n    });\n  };\n};\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title + \" in \" + item.field_title}</span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default ViewRequirements;\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { data_school } from \"../shared/dataTest\";\nimport {\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\nimport { placedCandidateInterface } from \"../interfaces/marks_publication\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\n// School Placements interfaces\nexport interface GetSchoolPlacementAction {\n  type: ActionTypes.GET_SCHOOL_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetDistrictPlacementAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetSessionPlacementAction {\n  type: ActionTypes.GET_SESSION_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | GetSchoolPlacementAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction\n  | GetDistrictPlacementAction\n  | GetSessionPlacementAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolsInfo = () => {\n  return async (dispatch: Dispatch) => {\n    setAxiosToken();\n    // const response = await axios.get<AccessRoleType[]>(url);\n\n    dispatch<GetSchoolsInfoAction>({\n      type: ActionTypes.GET_SCHOOLS_INFO,\n      payload: data_school,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log({ schoolPosts: res.data });\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolPlacement = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/school/${school_id}`\n      );\n\n      console.log({ getSchoolPlacement: res.data });\n\n      dispatch<GetSchoolPlacementAction>({\n        type: ActionTypes.GET_SCHOOL_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log({ districtPosts: res });\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacement = (\n  district_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\nexport const getSessionPlacement = (session_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/session/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getSessionPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetSessionPlacementAction>({\n        type: ActionTypes.GET_SESSION_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n","export interface marksPublicationInterface {\n  publication_id: string;\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_status: \"PENDING\" | \"PUBLISHED\";\n  status: number;\n  publication_position_marks: publicationInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface publicationInterface {\n  _id: string;\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport interface marksPublicationFormInterface {\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_position_marks: publicationFormInterface[];\n}\n\nexport interface publicationFormInterface {\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport enum MarksPublicationCandidateStatus {\n  Failed = \"Failed\",\n  Passed = \"Passed\",\n}\n\nexport interface MarksPublicationCandidate {\n  user: {\n    in_eduction: boolean;\n    disability: boolean;\n    is_active: boolean;\n    n_id: string;\n    phone_number: string;\n    email: string;\n    createdAt: string;\n    updatedAt: string;\n    user_id: string;\n    user_info: placedCandidateUserInfo;\n  };\n  period: string;\n  position: string;\n  courses: {\n    id: string;\n    marks: number;\n    _id: string;\n  }[];\n  waiting_status: MarksPublicationCandidateStatus;\n  status: number;\n  user_position_marks: number;\n  createdAt: string;\n  updatedAt: string;\n  disability: boolean;\n  gender: string;\n  in_education: boolean;\n  id: string;\n}\n\nexport interface MarksPublicationCandidateToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  gender: string;\n  position_name: string;\n  marks: number;\n  status: MarksPublicationCandidateStatus;\n}\n\nexport enum marksPublicationCandidateReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  gender = \"gender\",\n  position_name = \"position_name\",\n  marks = \"marks\",\n  status = \"status\",\n}\n\nexport interface marksPublicationReportContentInterface {\n  key: marksPublicationCandidateReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n// ---------------------------------------------------------------------------------------------\n\nexport interface placedCandidateInterface {\n  _id: string;\n  status: PlacedCandidateStatus;\n  user_id: string;\n  school_id: string;\n  position_id: string;\n  waiting_list_id: string;\n  request_id: string;\n  createdAt: string;\n  comment: string;\n  updatedAt: string;\n  __v: number;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  user_info: placedCandidateUserInfo;\n}\n\nexport interface placedCandidateUserInfo {\n  document_type: string;\n  issue_number: string;\n  date_of_issue: string;\n  date_of_expiry: string;\n  place_of_issue: string;\n  application_number: string;\n  fname: string;\n  lname: string;\n  father_names: string;\n  mother_names: string;\n  sex: string;\n  date_of_birth: string;\n  place_of_birth: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  civil_status: string;\n  spouse: null;\n  status: string;\n  photo: string;\n}\n\nexport enum PlacedCandidateStatus {\n  PENDING = \"pending\",\n  PLACED = \"placed\",\n  REJECTED = \"rejected\",\n}\n\nexport interface PlacementToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  school_name: string;\n  position_name: string;\n  status: PlacedCandidateStatus;\n}\n\nexport enum placementReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  school_name = \"school_name\",\n  position_name = \"position_name\",\n  status = \"status\",\n}\n\nexport interface placementReportContentInterface {\n  key: placementReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { publishPosition } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { PositionAPI } from \"../../interfaces/position\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/functions\";\nimport ViewRequirements from \"./ViewRequirements\";\n\nexport interface PositionRequirementTableInterface {\n  category_id: string;\n  category_title: string;\n  subcategory_id: string;\n  subcategory_title: string;\n  field_title: string;\n  field_id: string;\n  // _id: string;\n  required: boolean;\n}\n\nexport const FC_PositionDistinctCategory = (\n  PositionData: PositionAPI[]\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // LOOP IN ALL POSITIONS ==========================\n  for (let pos in PositionData) {\n    // GET CURRENT POSITION ====================\n    let thisPosition = PositionData[pos];\n    // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n    let requirements = thisPosition.requirements;\n    // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n    for (let req in requirements) {\n      let thisRequirements = requirements[req];\n      // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n      let thisCategory = thisRequirements.category;\n      // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n      let thisSubCategory = thisRequirements.subcategory;\n      // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n      if (thisCategory) {\n        for (let field in thisRequirements.position_requirement) {\n          // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n          let thisField = thisRequirements.position_requirement[field];\n          // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n          PositionsTemp.push({\n            category_id: thisCategory.user_detail_category_id,\n            category_title: thisCategory.title,\n            subcategory_id: thisSubCategory.user_detail_subcategory_id,\n            subcategory_title: thisSubCategory.title,\n            field_title: thisField.title,\n            field_id: thisField._id,\n            required: thisField.required,\n          });\n        }\n\n        // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n        if (\n          !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n        ) {\n          DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n          DistinctCategoriesTemp.push({\n            category_id: thisCategory.user_detail_category_id,\n            category_title: thisCategory.title,\n            subcategory_id: \"\",\n            subcategory_title: \"\",\n            field_title: \"\",\n            field_id: \"\",\n            required: false,\n          });\n        }\n\n        // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n        if (\n          !DistinctSubCategoriesIds.includes(\n            thisSubCategory.user_detail_subcategory_id\n          )\n        ) {\n          DistinctSubCategoriesIds.push(\n            thisSubCategory.user_detail_subcategory_id\n          );\n          DistinctSubCategoriesTemp.push({\n            category_id: thisSubCategory.category_id,\n            category_title: \"\",\n            subcategory_id: thisSubCategory.user_detail_subcategory_id,\n            subcategory_title: thisSubCategory.title,\n            field_title: \"\",\n            field_id: \"\",\n            required: false,\n          });\n        }\n      }\n    }\n    // DistinctCategoriesIds.;\n  }\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport interface ViewPositionProps {\n  thisPosition: PositionAPI;\n  setThisPosition?: (value: PositionAPI | null) => void;\n  publishPosition: Function;\n  isGuest?: boolean;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewPosition = (props: ViewPositionProps) => {\n  const [loadingRequest, setLoadingRequest] = useState<string>(\"\");\n\n  const publishPosition = async (\n    position_id: string,\n    status: boolean,\n    name: string\n  ) => {\n    if (\n      window.confirm(\n        `Are you sure do you want to ${\n          status ? \"publish\" : \"unpublish\"\n        } this position?`\n      )\n    ) {\n      setLoadingRequest(position_id);\n      try {\n        const res = await axios.patch(\n          `${API.APPLICATION}/publishposition/${position_id}`,\n          {\n            isPublished: status,\n          }\n        );\n        props.publishPosition({ position_id, status });\n        props.PushPopupAlert({\n          title: `${name} ${\n            status ? \" published\" : \" stopped on application\"\n          } successfully`,\n          theme: PopupAlertTheme.info,\n        });\n        let thisPositionCopy = { ...props.thisPosition };\n        thisPositionCopy.isPublished = status;\n        props.setThisPosition && props.setThisPosition(thisPositionCopy);\n        console.log(\"Position publish: \", res);\n      } catch (error) {\n        console.error(\"err: \", error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(\"\");\n    }\n  };\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <span className=\"text-blue-600 font-bold text-2xl\">\n            {props.thisPosition.position_title}\n          </span>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisPosition.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisPosition.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisPosition.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisPosition.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !== props.thisPosition.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Status:</span>\n\n            <div className=\"flex flex-row items-center gap-2 mt-1\">\n              {!props.isGuest ? (\n                <div\n                  className={`relative ${\n                    loadingRequest.length > 0\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } flex items-center gap-1`}\n                  onClick={() =>\n                    !loadingRequest.length &&\n                    !props.isGuest &&\n                    publishPosition(\n                      props.thisPosition.position_id,\n                      !props.thisPosition.isPublished,\n                      props.thisPosition.position_title\n                    )\n                  }\n                >\n                  <span className=\"block w-14 h-8 bg-gray-100 hover:border-gray-100 rounded-full shadow-inner\"></span>\n                  <span\n                    className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                      !props.thisPosition.isPublished\n                        ? \"bg-yellow-500\"\n                        : \"bg-green-500 transform translate-x-full\"\n                    }`}\n                  ></span>\n                  {loadingRequest === props.thisPosition.position_id ? (\n                    <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                  ) : (\n                    <span className=\"font-medium\">\n                      {props.thisPosition.isPublished\n                        ? \"Published\"\n                        : \"Unpublished\"}\n                    </span>\n                  )}\n                </div>\n              ) : props.thisPosition.isPublished ? (\n                <span className=\"text-green-600 font-semibold text-xl italic\">\n                  Published\n                </span>\n              ) : (\n                <span className=\"text-yellow-600 font-semibold text-xl italic\">\n                  Not Published\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-blue-500 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisPosition.requirements.length > 0 ? (\n            FC_PositionDistinctCategory([\n              props.thisPosition,\n            ]).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100 rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_PositionDistinctCategory([\n                      props.thisPosition,\n                    ]).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(null, { publishPosition, PushPopupAlert })(ViewPosition);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { BiBuildingHouse } from \"react-icons/bi\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadEducationCategories,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport { getAllRoom } from \"../../../actions/location\";\nimport {\n  createSchool,\n  getSchools,\n  updateSchool,\n  deleteSchool,\n} from \"../../../actions/schools\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { education_category } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { isEmptyOrSpaces, toTwoDigit } from \"../../../shared/dataTest\";\nimport {\n  SchoolsInterface,\n  RoomLocationInterface,\n  DistrictInterface,\n  LocationSectorTableInterface,\n  SectorInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { search } from \"../../../utils/functions\";\n\nexport const LocationsSectorInArray = (\n  LocationData: RoomLocationInterface[]\n): LocationSectorTableInterface[] | [] => {\n  let locationTemp: LocationSectorTableInterface[] = [];\n  for (let p in LocationData) {\n    let districts = LocationData[p].districts;\n    for (let d in districts) {\n      let sectors = districts[d].sectors;\n      for (let s in sectors) {\n        locationTemp.push({\n          province_id: LocationData[p]._id,\n          province_name: LocationData[p].province_name,\n          province_code: LocationData[p].province_code,\n          district_id: districts[d]._id,\n          district_name: districts[d].district_name,\n          district_code: districts[d].district_code,\n          sector_id: sectors[s].sector_id,\n          sector_name: sectors[s].sector_name,\n          sector_code: sectors[s].sector_code,\n        });\n      }\n    }\n  }\n  return locationTemp;\n};\n\nexport const getSchoolById = (\n  schools: SchoolsInterface[],\n  school_id: string\n): SchoolsInterface | undefined => {\n  return schools.find((school) => school._id === school_id);\n};\ninterface AppProps {\n  auth: Auth;\n  education_categories: education_category[] | null;\n  allRoom: RoomLocationInterface[];\n  schools: SchoolsInterface[];\n  getSchools: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  createSchool: Function;\n  getAllRoom: Function;\n  updateSchool: Function;\n  deleteSchool: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingSchool: boolean;\n  loadingRequest: boolean;\n  districtFilterStatus: boolean;\n  edicationCategoryFilterStatus: boolean;\n  provinceFilterStatus: boolean;\n  searchInput: string;\n  thisEdication: string | \"ALL\";\n  thisProvince: number | \"ALL\";\n  thisDistrict: number | \"ALL\";\n  district: DistrictInterface[];\n  schoolList: SchoolsInterface[];\n  modalState: \"\" | \"CREATE\" | \"UPDATE\";\n  error: { element: string; msg: string } | null;\n  schoolName: string;\n  schoolCode: number;\n  thisSchool: SchoolsInterface | null;\n  instituteId: string;\n  provinceId: string;\n  districtId: string;\n  sectorId: string;\n}\n\nclass index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingSchool: true,\n      loadingRequest: false,\n      searchInput: \"\",\n      districtFilterStatus: false,\n      edicationCategoryFilterStatus: false,\n      provinceFilterStatus: false,\n      thisEdication: \"ALL\",\n      thisProvince: \"ALL\",\n      thisDistrict: \"ALL\",\n      district: [],\n      schoolList: this.props.schools,\n      modalState: \"\",\n      error: null,\n      schoolName: \"\",\n      schoolCode: 0,\n      thisSchool: null,\n      instituteId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      sectorId: \"\",\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingSchool = (state: boolean) => {\n    this.setState({ loadingSchool: state });\n  };\n\n  setLoadingRequest = (state: boolean) => {\n    this.setState({ loadingRequest: state });\n  };\n\n  setError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ error: data });\n  };\n\n  componentDidMount = () => {\n    if (!this.props.allRoom.length && this.state.loading) {\n      this.props.getAllRoom((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status && msg.length > 0) console.error(msg);\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.education_categories === null ||\n      this.props.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoading);\n    }\n\n    if (!this.props.schools.length && this.state.loadingSchool) {\n      this.props.getSchools(\n        (status: boolean, msg: string, data?: SchoolsInterface[]) => {\n          console.log(status, msg);\n          this.setLoadingSchool(status);\n          if (!status) {\n            if (msg.length > 0) {\n              console.error({ loadingCandidatesError: msg });\n            }\n            if (data) {\n              this.setState({ schoolList: data });\n            }\n          }\n        }\n      );\n    } else {\n      this.setLoadingSchool(false);\n    }\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (isEmptyOrSpaces(this.state.schoolName)) {\n      return this.setError({\n        element: \"school_name\",\n        msg: \"School name is required\",\n      });\n    }\n    if (this.state.schoolCode <= 0) {\n      return this.setError({\n        element: \"school_code\",\n        msg: \"Invalid school code, School code less than 0\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.instituteId)) {\n      return this.setError({\n        element: \"edication_id\",\n        msg: \"Education Institute is required\",\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.districtId)) {\n      return this.setError({\n        element: \"districtId_id\",\n        msg: \"District is required\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.sectorId)) {\n      return this.setError({\n        element: \"sector_id\",\n        msg: \"Sector is required\",\n      });\n    }\n\n    const thisSector = this.getSectors()!.find(\n      (item) => item.sector_id === this.state.sectorId\n    );\n    if (!thisSector) {\n      return this.setError({\n        element: \"sector_id\",\n        msg: \"Unknown selected sector\",\n      });\n    }\n\n    this.setLoadingRequest(true);\n    try {\n      let res;\n      if (this.state.modalState === \"CREATE\") {\n        res = await axios.post<{\n          data: {\n            status: boolean;\n            school_name: string;\n            school_code: number;\n            district_id: string;\n            sector_id: string;\n            sector_code: number;\n            education_category_id: string;\n            shool_id: string;\n          };\n        }>(`${API.APPLICATION}/schools`, {\n          school_name: this.state.schoolName,\n          school_code: this.state.schoolCode,\n          district_id: this.state.districtId,\n          sector_id: this.state.sectorId,\n          sector_code: thisSector.sector_code,\n          education_category_id: this.state.instituteId,\n        });\n        if (res.data) {\n          console.log({ res });\n          // this.setState({\n          //   schoolList: [\n          //     ...this.props.schools,\n          //     {\n          //       _id: res.data.data.shool_id,\n          //       status: res.data.data.status,\n          //       school_name: res.data.data.school_name,\n          //       school_code: res.data.data.school_code,\n          //       sector_id: res.data.data.sector_id,\n          //       sector_code: res.data.data.sector_code,\n          //       district_id: res.data.data.district_id,\n          //       district_code: res.data.data.district_code,\n          //       province_id: res.data.data.province_id,\n          //       province_code: res.data.data.province_code,\n          //       education_category_id: res.data.data.education_category_id,\n          //     },\n          //   ],\n          // });\n          this.props.createSchool({\n            _id: res.data.data.shool_id,\n            status: res.data.data.status,\n            school_name: res.data.data.school_name,\n            school_code: res.data.data.school_code,\n            sector_code: res.data.data.sector_code,\n            district_id: res.data.data.district_id,\n            sector_id: res.data.data.sector_id,\n            education_category_id: res.data.data.education_category_id,\n          });\n          this.props.PushPopupAlert({\n            title: \"New School created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          this.setLoadingRequest(false);\n          this.setState({\n            schoolName: \"\",\n            schoolCode: 0,\n            districtId: \"\",\n            sectorId: \"\",\n            instituteId: \"\",\n            provinceId: \"\",\n            thisSchool: null,\n            modalState: \"\",\n          });\n        }\n      } else if (this.state.thisSchool && this.state.modalState === \"UPDATE\") {\n        res = await axios.patch<{ update: SchoolsInterface }>(\n          `${API.APPLICATION}/schools`,\n          {\n            school_id: this.state.thisSchool._id,\n            school_name: this.state.schoolName,\n            school_code: this.state.schoolCode,\n            district_id: this.state.districtId,\n            sector_id: this.state.sectorId,\n            sector_code: thisSector.sector_code,\n            education_category_id: this.state.instituteId,\n          }\n        );\n        if (res.data) {\n          console.log({ res });\n          this.props.updateSchool({\n            _id: this.state.thisSchool._id,\n            status: true,\n            sector_code: thisSector.sector_code,\n            school_name: this.state.schoolName,\n            school_code: this.state.schoolCode,\n            district_id: this.state.districtId,\n            sector_id: this.state.sectorId,\n            education_category_id: this.state.instituteId,\n          });\n          this.props.PushPopupAlert({\n            title: \"School updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          this.setLoadingRequest(false);\n          this.setState({\n            schoolName: \"\",\n            schoolCode: 0,\n            districtId: \"\",\n            sectorId: \"\",\n            instituteId: \"\",\n            provinceId: \"\",\n            thisSchool: null,\n            modalState: \"\",\n          });\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      this.setLoadingRequest(false);\n    }\n  };\n\n  handleDelete = async (schoolId: string) => {\n    if (window.confirm(\"Are you sure do you want to delete this room?\")) {\n      this.setLoadingRequest(true);\n      try {\n        const res = await axios.delete<SchoolsInterface>(\n          `${API.APPLICATION}/schools/${schoolId}`\n        );\n\n        if (res.data) {\n          console.log({ res });\n          this.props.deleteSchool(schoolId);\n          this.props.PushPopupAlert({\n            title: \"School deleted successfully\",\n            theme: PopupAlertTheme.success,\n          });\n        }\n      } catch (error) {\n        console.log({ province_error: error });\n        this.props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      this.setLoadingRequest(false);\n    }\n  };\n\n  countSchool = (\n    FILTER_TYPE: \"DEFAULT\" | \"EDUCATION\" | \"DISTRICT\" = \"DEFAULT\",\n    FILTER_VALUE: string = \"ALL\"\n  ): string => {\n    let counts: number = 0;\n    if (FILTER_TYPE === \"DEFAULT\") {\n      counts = this.props.schools.length;\n    } else if (FILTER_TYPE === \"EDUCATION\") {\n      counts = this.props.schools.filter(\n        (item) => item.education_category_id === FILTER_VALUE\n      ).length;\n    } else if (FILTER_TYPE === \"DISTRICT\") {\n      counts = this.props.schools.filter(\n        (item) => item.district_id === FILTER_VALUE\n      ).length;\n    }\n    return toTwoDigit(counts);\n  };\n\n  getProvinceByCode = (\n    province_code: number\n  ): RoomLocationInterface | undefined => {\n    return this.props.allRoom.find(\n      (item) => item.province_code === province_code\n    );\n  };\n\n  getDistrictByCode = (\n    province_code: number,\n    district_code: number\n  ): DistrictInterface | undefined => {\n    let province = this.props.allRoom.find(\n      (item) => item.province_code === province_code\n    );\n    return province\n      ? province.districts.find((item) => item.district_code === district_code)\n      : undefined;\n  };\n\n  getSectorByCode = (\n    province_code: number,\n    district_code: number,\n    sector_code: number\n  ): SectorInterface | undefined => {\n    const province = this.props.allRoom.find(\n      (item) => item.province_code === province_code\n    );\n\n    if (province && province.districts) {\n      const district = province.districts.find(\n        (item) => item.district_code === district_code\n      );\n      return district && district.sectors\n        ? district.sectors.find((item) => item.sector_code === sector_code)\n        : undefined;\n    }\n  };\n  getSectors = () => {\n    let province = this.props.allRoom.find(\n      (province) => province._id === this.state.provinceId\n    );\n    if (province && province.districts.length > 0) {\n      let district = province.districts.find(\n        (item) => item._id === this.state.districtId\n      );\n      if (district) {\n        return district.sectors;\n      }\n    }\n    return null;\n  };\n\n  getDistrictData = (province_code: number | null): DistrictInterface[] => {\n    let result: DistrictInterface[] = [];\n    if (province_code) {\n      let province = this.props.allRoom.find(\n        (item) => item.province_code.toString() === province_code.toString()\n      );\n      result = province ? province.districts : [];\n    } else {\n      this.props.allRoom.forEach((element) => {\n        for (const key in element.districts) {\n          if (Object.prototype.hasOwnProperty.call(element.districts, key)) {\n            result.push(element.districts[key]);\n          }\n        }\n      });\n    }\n\n    return result;\n  };\n\n  filterSchools = (\n    institute: string | \"ALL\",\n    province: number | \"ALL\",\n    district: number | \"ALL\"\n  ): SchoolsInterface[] => {\n    let result: SchoolsInterface[] = this.props.schools;\n\n    if (institute !== \"ALL\") {\n      result = result.filter(\n        (item) => item.education_category_id === institute\n      );\n    }\n\n    if (province !== \"ALL\") {\n      result = result.filter(\n        (item) => item.province_code.toString() === province.toString()\n      );\n    }\n\n    if (district !== \"ALL\") {\n      result = result.filter(\n        (item) => item.district_code.toString() === district.toString()\n      );\n    }\n\n    return result;\n  };\n\n  render() {\n    if (this.state.loadingSchool || this.state.loading) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading schools...\n        </div>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        {/* BODY =================================== */}\n        <div className=\"w-full my-5 px-1\">\n          {/* header title */}\n          <div className=\"flex items-start justify-between my-4\">\n            <div className=\"flex flex-row items-center\">\n              <BiBuildingHouse className=\"text-blue-500 text-5xl\" />\n              <div className=\"flex flex-col\">\n                <h1 className=\"text-4xl font-semibold\">Schools Management</h1>\n                {/* <div className=\"flex flex-row items-center mx-2 md:gap-3 gap-2\">\n                  <div className=\"flex flex-col mt-1\">\n                    <span className=\"text-gray-600 text-base\">\n                      All School(s)\n                    </span>\n                    <span className=\"text-gray-600 text-2xl font-bold\">\n                      {this.countSchool()}\n                    </span>\n                  </div>\n                  {this.props.education_categories &&\n                    this.props.education_categories.length > 0 &&\n                    this.props.education_categories.map((education, index) => (\n                      <div\n                        className=\"flex flex-col mt-1\"\n                        key={index + education.education_institute_id}\n                      >\n                        <span className=\"text-gray-600 text-base\">\n                          {education.education_category_title}\n                        </span>\n                        <span className=\"text-gray-600 text-2xl font-bold\">\n                          {this.countSchool(\n                            \"EDUCATION\",\n                            education.education_institute_id\n                          )}\n                        </span>\n                      </div>\n                    ))}\n                </div> */}\n              </div>\n            </div>\n          </div>\n          {/* end header title */}\n\n          <div className=\"md:w-98 bg-white mx-auto md:p-2\">\n            {/* FILTER FORM =================================== */}\n            <section className=\"flex flex-col-reverse sm:flex-row items-center gap-2 w-full my-2\">\n              <div className=\"w-full sm:w-3/4\">\n                <input\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    this.setState({ searchInput: e.target.value })\n                  }\n                  type=\"text\"\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Search school with name or code`}\n                  value={this.state.searchInput}\n                  disabled={this.props.allRoom.length > 0 ? false : true}\n                />\n              </div>\n              <div className=\"w-full sm:w-1/4\">\n                <select\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Filter by status`}\n                  onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                    this.setState({\n                      thisProvince:\n                        e.target.value === \"ALL\"\n                          ? \"ALL\"\n                          : Number(e.target.value),\n                    })\n                  }\n                  value={this.state.thisProvince}\n                  disabled={this.props.allRoom.length > 0 ? false : true}\n                >\n                  <option value=\"ALL\">All province</option>\n                  {this.props.allRoom.length > 0 ? (\n                    this.props.allRoom.map((item, index) => (\n                      <option value={item.province_code} key={index + item._id}>\n                        {item.province_name}\n                      </option>\n                    ))\n                  ) : (\n                    <option value=\"\" disabled>\n                      No province found!\n                    </option>\n                  )}\n                </select>\n              </div>\n              <div className=\"w-full sm:w-1/4\">\n                <select\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Filter by status`}\n                  onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                    this.setState({\n                      thisDistrict:\n                        e.target.value !== \"ALL\"\n                          ? Number(e.target.value)\n                          : \"ALL\",\n                    })\n                  }\n                  value={this.state.thisDistrict}\n                  disabled={this.props.allRoom.length > 0 ? false : true}\n                >\n                  <option value=\"ALL\">All district</option>\n                  {this.getDistrictData(\n                    this.state.thisProvince !== \"ALL\"\n                      ? this.state.thisProvince\n                      : null\n                  ).length > 0 ? (\n                    this.getDistrictData(\n                      this.state.thisProvince !== \"ALL\"\n                        ? this.state.thisProvince\n                        : null\n                    ).map((item, index) => (\n                      <option value={item.district_code} key={index + item._id}>\n                        {item.district_name}\n                      </option>\n                    ))\n                  ) : (\n                    <option value=\"\" disabled>\n                      No district found!\n                    </option>\n                  )}\n                </select>\n              </div>\n              <div className=\"w-full sm:w-1/4\">\n                <select\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Filter by institute`}\n                  onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                    this.setState({ thisEdication: e.target.value })\n                  }\n                  value={this.state.thisEdication}\n                  disabled={this.props.allRoom.length > 0 ? false : true}\n                >\n                  <option value=\"ALL\">All institute</option>\n                  {this.props.education_categories &&\n                  this.props.education_categories.length > 0 ? (\n                    this.props.education_categories.map((item, index) => (\n                      <option\n                        value={item.education_institute_id}\n                        key={index + item.education_institute_id}\n                      >\n                        {item.education_category_title}\n                      </option>\n                    ))\n                  ) : (\n                    <option value=\"\" disabled>\n                      No institute found!\n                    </option>\n                  )}\n                </select>\n              </div>\n            </section>\n            {/* END FILTER FORM =================================== */}\n\n            <div className=\"rounded border border-gray-100 my-1 shadow-sm animate__animated animate__fadeIn\">\n              <table className=\"w-full z-0\">\n                <thead className=\"bg-gray-50\">\n                  <tr className=\"text-left\">\n                    <th className=\"px-3 py-3\">#</th>\n                    <th>School code</th>\n                    <th>School name</th>\n                    <th>Institute</th>\n                    <th>Province</th>\n                    <th>District</th>\n                    {/* <th>Sector</th> */}\n                    {/* <th>Status</th> */}\n                  </tr>\n                </thead>\n                <tbody className=\"text-sm\">\n                  {!search(\n                    this.filterSchools(\n                      this.state.thisEdication,\n                      this.state.thisProvince,\n                      this.state.thisDistrict\n                    ),\n                    this.state.searchInput\n                  ).length && (\n                    <tr\n                      key={1}\n                      className=\"border-b border-gray-200 hover:bg-gray-100\"\n                    >\n                      <td className=\"p-3 text-center\" colSpan={8}>\n                        No School Found\n                      </td>\n                    </tr>\n                  )}\n                  {this.props.schools.length > 0 &&\n                    !this.state.loading &&\n                    search(\n                      this.filterSchools(\n                        this.state.thisEdication,\n                        this.state.thisProvince,\n                        this.state.thisDistrict\n                      ),\n                      this.state.searchInput\n                    ).map((school: SchoolsInterface, index: number) => (\n                      <tr\n                        key={index + school._id}\n                        className=\"border-b border-gray-200 hover:bg-gray-100\"\n                      >\n                        <td className=\"p-3 text-left whitespace-nowrap\">\n                          {index + 1}\n                        </td>\n                        <td className=\"py-3 text-left\">{school.school_code}</td>\n                        <td className=\"py-3 text-left\">{school.school_name}</td>\n                        <td className=\"py-3 text-left\">\n                          {this.props.education_categories &&\n                          this.props.education_categories.filter(\n                            (education) =>\n                              education.education_institute_id ===\n                              school.education_category_id\n                          ).length > 0\n                            ? this.props.education_categories.filter(\n                                (education) =>\n                                  education.education_institute_id ===\n                                  school.education_category_id\n                              )[0].education_category_title\n                            : \"No Institute\"}\n                        </td>\n                        <td className=\"py-3 text-left\">\n                          {this.getProvinceByCode(school.province_code)\n                            ? this.getProvinceByCode(school.province_code)!\n                                .province_name\n                            : \"No province \"}\n                        </td>\n                        <td className=\"py-3 text-left\">\n                          {this.getDistrictByCode(\n                            school.province_code,\n                            school.district_code\n                          )\n                            ? this.getDistrictByCode(\n                                school.province_code,\n                                school.district_code\n                              )!.district_name\n                            : \"No district\"}\n                        </td>\n                        {/* <td className=\"py-3 text-left\">\n                          {this.getSectorByCode(\n                            school.province_code,\n                            school.district_code,\n                            school.sector_code\n                          )\n                            ? this.getSectorByCode(\n                                school.province_code,\n                                school.district_code,\n                                school.sector_code\n                              )!.sector_name\n                            : \"No sector \"+school.sector_code}\n                        </td> */}\n                        {/* <td className=\"py-3\">\n                          <div className=\"flex items-center gap-2 float-right\">\n                            <button\n                              className={`bg-blue-600 text-white font-bold py-1 px-2 flex items-center rounded focus:outline-none ${\n                                this.state.loadingRequest\n                                  ? \"cursor-not-allowed\"\n                                  : null\n                              }`}\n                              title=\"Edit School\"\n                              disabled={this.state.loadingRequest}\n                              onClick={() => {\n                                this.setState({\n                                  modalState: \"UPDATE\",\n                                  thisSchool: school,\n                                  schoolName: school.school_name,\n                                  schoolCode: school.school_code,\n                                  instituteId: school.education_category_id,\n                                  districtId: school.district_id,\n                                  sectorId: school.sector_id,\n                                  provinceId: this.props.allRoom.find((item) =>\n                                    item.districts.find(\n                                      (d) => d._id === school.district_id\n                                    )\n                                  )\n                                    ? this.props.allRoom.find((item) =>\n                                        item.districts.find(\n                                          (d) => d._id === school.district_id\n                                        )\n                                      )!._id\n                                    : \"\",\n                                });\n                              }}\n                            >\n                              <MdModeEdit className=\"w-4 h-4\" />\n                              Edit\n                            </button>\n                            <button\n                              className={`bg-red-700 text-white font-bold py-1 px-2 flex items-center rounded focus:outline-none ${\n                                this.state.loadingRequest\n                                  ? \"cursor-not-allowed\"\n                                  : null\n                              }`}\n                              title=\"Delete\"\n                              disabled={this.state.loadingRequest}\n                              onClick={() => this.handleDelete(school._id)}\n                            >\n                              <MdModeEdit className=\"w-4 h-4\" />\n                              Delete\n                            </button>\n                          </div>\n                        </td> */}\n                      </tr>\n                    ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n\n        {/* modal control */}\n        {this.state.modalState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void =>\n              this.setState({\n                modalState: \"\",\n                thisSchool: null,\n                schoolName: \"\",\n                instituteId: \"\",\n                districtId: \"\",\n                provinceId: \"\",\n              })\n            }\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-600 font-bold text-3xl md:ml-4 inline-flex items-center gap-2\">\n                <BiBuildingHouse className=\"w-11 h-11 text-gray-500 hover:bg-gray-500 hover:text-gray-50 rounded-full p-0 foucs:outline-none\" />\n                {this.state.modalState === \"CREATE\" ? \"CREATE \" : \"UPDATE \"}{\" \"}\n                SCHOOL\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-8 mb-8\">\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"py-4 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                  <div className=\"flex flex-col\">\n                    <label>School name</label>\n                    <input\n                      type=\"text\"\n                      className={`text-left input-white w-20 inline-block border-2 ${\n                        this.state.error &&\n                        this.state.error.element === \"school_name\"\n                          ? \"border-red-700\"\n                          : \"border-gray-500\"\n                      }`}\n                      placeholder=\"School name\"\n                      value={this.state.schoolName}\n                      onChange={(e) => {\n                        this.setError(null);\n                        this.setState({ schoolName: e.target.value });\n                      }}\n                      disabled={this.state.loadingRequest}\n                    />\n                    {this.state.error &&\n                      this.state.error.element === \"school_name\" && (\n                        <span className=\"text-red-700\">\n                          {this.state.error.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  <div className=\"flex flex-col\">\n                    <label>School code</label>\n                    <input\n                      type=\"number\"\n                      className={`text-left input-white w-20 inline-block border-2 ${\n                        this.state.error &&\n                        this.state.error.element === \"school_code\"\n                          ? \"border-red-700\"\n                          : \"border-gray-500\"\n                      }`}\n                      placeholder=\"School code\"\n                      value={this.state.schoolCode}\n                      onChange={(e) => {\n                        this.setError(null);\n                        this.setState({ schoolCode: Number(e.target.value) });\n                      }}\n                      disabled={this.state.loadingRequest}\n                    />\n                    {this.state.error &&\n                      this.state.error.element === \"school_code\" && (\n                        <span className=\"text-red-700\">\n                          {this.state.error.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {/* INSTITUTES ================= */}\n                  <div className=\"flex flex-col\">\n                    <label>Institutes</label>\n                    {/* block appearance-none w-full bg-grey-lighter border\n                  border-grey-lighter text-grey-darker py-3 px-4 pr-8 rounded */}\n                    <select\n                      className={`text-left input-white w-full block border-2 py-3 px-4 pr-8 ${\n                        this.state.error &&\n                        this.state.error.element === \"edication_id\"\n                          ? \"border-red-700\"\n                          : \"border-gray-500\"\n                      }`}\n                      value={this.state.instituteId}\n                      onChange={(e) =>\n                        this.setState({\n                          instituteId: e.target.value,\n                        })\n                      }\n                      disabled={this.state.loadingRequest}\n                    >\n                      <option value=\"\" disabled>\n                        Choose Institute\n                      </option>\n                      {this.props.education_categories &&\n                        this.props.education_categories.map(\n                          (institute, index) => (\n                            <option\n                              value={institute.education_institute_id}\n                              key={index + institute.education_institute_id}\n                            >\n                              {institute.education_category_title}\n                            </option>\n                          )\n                        )}\n                    </select>\n                    {this.state.error &&\n                      this.state.error.element === \"edication_id\" && (\n                        <span className=\"text-red-700\">\n                          {this.state.error.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {/* PROVINCE ================= */}\n                  <div className=\"flex flex-col\">\n                    <label>Province</label>\n                    <select\n                      className={`text-left input-white w-20 inline-block border-2 border-gray-500`}\n                      value={this.state.provinceId}\n                      onChange={(e) =>\n                        this.setState({ provinceId: e.target.value })\n                      }\n                      disabled={this.state.loadingRequest}\n                    >\n                      <option value=\"\" disabled>\n                        Choose province\n                      </option>\n                      {this.props.allRoom &&\n                        this.props.allRoom.map((province, index) => (\n                          <option\n                            value={province._id}\n                            key={index + province._id}\n                          >\n                            {province.province_name}\n                          </option>\n                        ))}\n                    </select>\n                  </div>\n\n                  {/* DISTRICT ================= */}\n                  {this.state.provinceId.length > 0 && (\n                    <div className=\"flex flex-col\">\n                      <label>Sector</label>\n                      <select\n                        className={`text-left input-white w-20 inline-block border-2 ${\n                          this.state.error &&\n                          this.state.error.element === \"districtId_id\"\n                            ? \"border-red-700\"\n                            : \"border-gray-500\"\n                        }`}\n                        value={this.state.districtId}\n                        onChange={(e) =>\n                          this.setState({ districtId: e.target.value })\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <option value=\"\" disabled>\n                          Choose district\n                        </option>\n                        {this.props.allRoom &&\n                        this.props.allRoom.filter(\n                          (province) => province._id === this.state.provinceId\n                        )[0].districts.length > 0 ? (\n                          this.props.allRoom\n                            .filter(\n                              (province) =>\n                                province._id === this.state.provinceId\n                            )[0]\n                            .districts.map((district, index) => (\n                              <option\n                                value={district._id}\n                                key={index + district._id}\n                              >\n                                {district.district_name}\n                              </option>\n                            ))\n                        ) : (\n                          <option key={702} disabled={true}>\n                            No District Found\n                          </option>\n                        )}\n                      </select>\n                      {this.state.error &&\n                        this.state.error.element === \"districtId_id\" && (\n                          <span className=\"text-red-700\">\n                            {this.state.error.msg}\n                          </span>\n                        )}\n                    </div>\n                  )}\n\n                  {/* DISTRICT ================= */}\n                  {this.state.provinceId.length > 0 && (\n                    <div className=\"flex flex-col\">\n                      <label>Sector</label>\n                      <select\n                        className={`text-left input-white w-20 inline-block border-2 ${\n                          this.state.error &&\n                          this.state.error.element === \"sector_id\"\n                            ? \"border-red-700\"\n                            : \"border-gray-500\"\n                        }`}\n                        value={this.state.sectorId}\n                        onChange={(e) =>\n                          this.setState({ sectorId: e.target.value })\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <option value=\"\" disabled>\n                          Choose sector\n                        </option>\n                        {this.props.allRoom && this.getSectors() ? (\n                          this.getSectors()!.map((sector, index) => (\n                            <option\n                              value={sector.sector_id}\n                              key={index + sector.sector_id}\n                            >\n                              {sector.sector_name}\n                            </option>\n                          ))\n                        ) : (\n                          <option key={702} disabled={true}>\n                            No Sector Found\n                          </option>\n                        )}\n                      </select>\n                      {this.state.error &&\n                        this.state.error.element === \"sector_id\" && (\n                          <span className=\"text-red-700\">\n                            {this.state.error.msg}\n                          </span>\n                        )}\n                    </div>\n                  )}\n                </div>\n                <div className=\"pt-4 flex justify-between\">\n                  <button\n                    onClick={() =>\n                      this.setState({\n                        modalState: \"\",\n                        thisSchool: null,\n                        schoolName: \"\",\n                        instituteId: \"\",\n                        districtId: \"\",\n                        provinceId: \"\",\n                      })\n                    }\n                    className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none`}\n                    type=\"button\"\n                    disabled={this.state.loadingRequest}\n                  >\n                    Exit\n                  </button>\n                  <button\n                    className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                      this.state.loadingRequest ? \"animate-pulse\" : null\n                    }`}\n                    type=\"submit\"\n                    disabled={this.state.loadingRequest}\n                  >\n                    {this.state.loadingRequest ? \"Loading...\" : \"Save\"}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </Modal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  schoolLevels,\n  locations,\n}: StoreState): {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  education_categories: education_category[] | null;\n  allRoom: RoomLocationInterface[];\n} => {\n  return {\n    auth: auth,\n    schools: schools.schools,\n    education_categories: schoolLevels.education_categories,\n    allRoom: locations.roomLocation,\n  };\n};\n\nexport const Schools = connect(mapStateToProps, {\n  createSchool,\n  getSchools,\n  updateSchool,\n  getAllRoom,\n  deleteSchool,\n  loadEducationCategories,\n  PushPopupAlert,\n})(index);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport {\n  MdArrowBack,\n  MdErrorOutline,\n  MdMail,\n  MdSmartphone,\n  MdTaskAlt,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport { fetchSchoolPosts, getSchoolPlacement } from \"../../actions/schools\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI } from \"../../interfaces\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  getPositionById,\n  isEmptyOrSpaces,\n} from \"../../shared/dataTest\";\nimport {\n  PostSchoolInterface,\n  PostRequestStatusInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\n\ntype ReceivePostProps = {\n  viewPost: boolean;\n  placementList: placedCandidateInterface[];\n  thisPost: PostSchoolInterface;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n  receivedPosts: number;\n  setReceivedPosts: (value: number) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  loadingPost: boolean;\n  setLoadingPost: (value: boolean) => void;\n  positionId: string;\n  systemPositions: PositionAPI[];\n\n  // REDUX ==========\n  auth: Auth;\n  fetchSchoolPosts: Function;\n  getSchoolPlacement: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ReceivePostState = {\n  placement_id: string;\n  action: \"RECEIVED\" | \"NOT_RECEIVED\" | null;\n  comment: string;\n};\n\nclass ReceivePost extends Component<ReceivePostProps, ReceivePostState> {\n  constructor(props: ReceivePostProps) {\n    super(props);\n\n    this.state = {\n      placement_id: \"\",\n      action: null,\n      comment: \"\",\n    };\n  }\n  submitRequest = async (\n    thisPlacement: placedCandidateInterface,\n    action: \"RECEIVED\" | \"NOT_RECEIVED\"\n  ) => {\n    if (action === \"NOT_RECEIVED\" && isEmptyOrSpaces(this.state.comment)) {\n      return this.props.setFormError({\n        element: \"received_comment\",\n        msg: \"Reason of your decision is required!\",\n      });\n    }\n\n    let received: number = 0;\n    if (action === \"NOT_RECEIVED\") {\n      received = this.props.thisPost.received_posts\n        ? this.props.thisPost.received_posts\n        : 0;\n    } else {\n      received = this.props.thisPost.received_posts\n        ? this.props.thisPost.received_posts + 1\n        : 1;\n    }\n\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.thisPost) {\n        const res = await axios.patch<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpost/${this.props.thisPost.requested_post_id}`,\n          {\n            confirmed_posts: this.props.thisPost.confirmed_posts,\n            confirmed_by: this.props.auth.user.user_id,\n            received_posts: received,\n            approval_date: this.props.thisPost.approval_date,\n            school_id: this.props.thisPost.school_id,\n            position_id: this.props.thisPost.position_id,\n            district_id: this.props.thisPost.district_id,\n            needed_posts: this.props.thisPost.needed_posts,\n            male_number: this.props.thisPost.male_number,\n            female_number: this.props.thisPost.female_number,\n            description: this.props.thisPost.description,\n            occupied_posts: this.props.thisPost.occupied_posts,\n            requested_by: this.props.auth.user.user_id,\n            requested_post_status: PostRequestStatusInterface.RECEIVED,\n          }\n        );\n        if (res) {\n          // props.updateSchoolPost(\"SCHOOL\", res.data.data);\n          this.confirmPlacement(thisPlacement);\n\n          // !this.props.viewPost && this.props.setThisPost(null);\n          // this.props.setReceivedPosts(0);\n          // this.props.setModalState(null);\n          // this.props.PushPopupAlert({\n          //   title: `Post request has been received!`,\n          //   theme: PopupAlertTheme.info,\n          // });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  confirmPlacement = async (thisPlacement: placedCandidateInterface) => {\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.thisPost) {\n        const res = await axios.post<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/confirmreceived`,\n          {\n            placedStatus: [\n              {\n                waiting_list_id: thisPlacement.waiting_list_id,\n                placed_candidate_id: thisPlacement._id,\n                status:\n                  this.state.action === \"NOT_RECEIVED\"\n                    ? PlacedCandidateStatus.REJECTED\n                    : PlacedCandidateStatus.PLACED,\n              },\n            ],\n          }\n        );\n        if (res) {\n          this.props.fetchSchoolPosts(\n            this.props.auth.user_access.school_id,\n            (status: boolean, message: string) => {\n              if (!status) {\n                if (message.length > 0 && this.props.loadingPost) {\n                  console.error(\"error loading school post: \", message);\n                  this.props.PushPopupAlert({\n                    title: message,\n                    theme: PopupAlertTheme.danger,\n                  });\n                }\n                this.props.setLoadingPost(false);\n              }\n            }\n          );\n\n          this.props.getSchoolPlacement(\n            this.props.auth.user_access.school_id,\n            (\n              status: boolean,\n              msg: string,\n              data?: placedCandidateInterface[]\n            ) => {\n              this.props.setLoadingPost(status);\n              if (!status && msg.length > 0) {\n                console.error({ getSchoolPlacementError: msg });\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          );\n\n          this.props.setFormError(null);\n          this.setState({ comment: \"\", placement_id: \"\", action: null });\n          !this.props.viewPost && this.props.setThisPost(null);\n          this.props.setReceivedPosts(0);\n          this.props.setModalState(null);\n          this.props.PushPopupAlert({\n            title: `Request has been done completely!`,\n            theme: PopupAlertTheme.info,\n          });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  render() {\n    return (\n      <section>\n        <div className=\"border-b-2 border-gray-200 mb-2 pb-1 flex items-center gap-3\">\n          <button\n            className={`ml-3 bg-gray-100 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n              this.props.loadingRequest ? \"cursor-wait\" : \"cursor-pointer\"\n            } animate__animated animate__fadeIn`}\n            disabled={this.props.loadingRequest}\n            onClick={() => {\n              this.props.setThisPost(null);\n              this.props.setReceivedPosts(0);\n              this.props.setModalState(null);\n            }}\n          >\n            <MdArrowBack className=\"text-4xl\" />\n          </button>\n\n          <span className=\"font-bold text-2xl md:text-3xl text-gray-700\">\n            Confirm teacher arrival\n          </span>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 divide-x-0 divide-y md:divide-x md:divide-y-0\">\n          <div className=\"px-1 mb-4 mt-3\">\n            <div className=\"text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Position: </span>\n                <span className=\"font-bold\">\n                  {getPositionById(\n                    this.props.systemPositions,\n                    this.props.thisPost.position_id\n                  )\n                    ? getPositionById(\n                        this.props.systemPositions,\n                        this.props.thisPost.position_id\n                      )!.position_title\n                    : \"Unknown position\"}\n                </span>\n              </div>\n\n              <table className=\"w-full shadow\" id=\"report_content\">\n                <thead className=\"bg-blue-50 border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">Requested posts</td>\n                    <td className=\"px-2 py-2\">Approved posts</td>\n                    <td className=\"px-2 py-2\">Post posts</td>\n                    <td className=\"px-2 py-2\">Received posts</td>\n                    <td className=\"px-2 py-2\">Occupation</td>\n                    <td className=\"px-2 py-2\">Status</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.needed_posts}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.CONFIRMED ? (\n                        <div className=\"flex items-center gap-1\">\n                          {this.props.thisPost.confirmed_posts}\n                        </div>\n                      ) : (\n                        \"-\"\n                      )}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.CONFIRMED ? (\n                        <span>\n                          {\n                            getPlacementByRequest(\n                              this.props.placementList,\n                              this.props.thisPost.requested_post_id\n                            ).length\n                          }\n                        </span>\n                      ) : (\n                        \"-\"\n                      )}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.RECEIVED\n                        ? this.props.thisPost.received_posts\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.female_number +\n                        this.props.thisPost.male_number}\n                    </td>\n\n                    <td className=\"px-2 py-2\">\n                      <span\n                        className={`px-2 py-1 mx-1 font-semibold rounded ${\n                          this.props.thisPost.requested_post_status ===\n                          PostRequestStatusInterface.INITIATED\n                            ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                            : this.props.thisPost.requested_post_status ===\n                              PostRequestStatusInterface.CONFIRMED\n                            ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                            : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                        }`}\n                      >\n                        {this.props.thisPost.requested_post_status ===\n                        PostRequestStatusInterface.INITIATED\n                          ? \"Pending\"\n                          : capitalizeFirstLetter(\n                              this.props.thisPost.requested_post_status\n                            )}\n                      </span>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          <div className=\"px-4 mt-3 mb-4\">\n            {getPlacementByRequest(\n              this.props.placementList,\n              this.props.thisPost.requested_post_id\n            ).map((item, index) => (\n              <div\n                className=\"relative grid grid-cols-1 gap-4 px-4 py-1 mb-8 border rounded bg-white shadow\"\n                key={index + item._id}\n              >\n                <div className=\"relative flex gap-4\">\n                  {/* IMG ================== */}\n                  <img\n                    src={API.AUTH_FILES + \"/\" + item.user_info.photo}\n                    className=\"object-center object-cover relative rounded-lg -top-4 -mb-3 bg-white border h-20 w-20\"\n                    alt=\"\"\n                    loading=\"lazy\"\n                  />\n                  <div className=\"flex flex-col w-full\">\n                    <div className=\"flex flex-row justify-between\">\n                      <p className=\"relative text-xl whitespace-nowrap truncate overflow-hidden\">\n                        {item.user_info.fname + \" \" + item.user_info.lname}\n                      </p>\n                    </div>\n                    <p className=\"text-gray-500 text-sm flex items-center gap-1\">\n                      <MdSmartphone /> {item.phone_number}\n                    </p>\n                    <p className=\"text-gray-500 text-sm flex items-center gap-1\">\n                      <MdMail /> {item.email}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"-mt-3\">\n                  {this.state.action !== \"NOT_RECEIVED\" && (\n                    <div className=\"flex flex-row-reverse gap-2\">\n                      <div className=\"flex-initial\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-blue flex items-center font-medium tracking-wide capitalize transition duration-300 transform active:scale-95 ease-in-out\"\n                          disabled={this.props.loadingRequest}\n                          onClick={() => {\n                            this.setState({\n                              placement_id: item._id,\n                              action: \"RECEIVED\",\n                            });\n                            this.submitRequest(item, \"RECEIVED\");\n                          }}\n                        >\n                          <MdTaskAlt />\n                          <span className=\"pl-2 mx-1\">\n                            {this.props.loadingRequest\n                              ? \"Loading...\"\n                              : \"Received\"}\n                          </span>\n                        </button>\n                      </div>\n                      <div className=\"flex-initial\">\n                        <button\n                          type=\"button\"\n                          className=\"btn flex items-center px-5 py-2.5 font-medium tracking-wide text-black capitalize hover:bg-red-200 hover:fill-current hover:text-red-600 focus:outline-none transition duration-300 transform active:scale-95 ease-in-out\"\n                          disabled={this.props.loadingRequest}\n                          onClick={() =>\n                            this.setState({\n                              placement_id: item._id,\n                              action: \"NOT_RECEIVED\",\n                            })\n                          }\n                        >\n                          <MdErrorOutline />\n                          <span className=\"pl-2 mx-1\">Not received</span>\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                  {this.state.action === \"NOT_RECEIVED\" &&\n                    this.state.placement_id === item._id && (\n                      <div className=\"flex flex-col md:flex-row items-end md:items-start gap-2 animate__animated animate__fadeInRight animate__faster mt-2\">\n                        <div className=\"w-full\">\n                          <textarea\n                            className={`border-2 rounded p-2 md:text-base w-full ${\n                              this.props.formError &&\n                              this.props.formError.element ===\n                                \"received_comment\"\n                                ? \"border-red-500\"\n                                : \"border-gray-300\"\n                            } focus:border-gray-500`}\n                            placeholder=\"comment\"\n                            onChange={(e) => {\n                              this.setState({ comment: e.target.value });\n                              this.props.formError &&\n                                this.props.formError.element ===\n                                  \"received_comment\" &&\n                                this.props.setFormError(null);\n                            }}\n                            value={this.state.comment}\n                            style={{ resize: \"none\" }}\n                          ></textarea>\n                          {this.props.formError &&\n                            this.props.formError.element ===\n                              \"received_comment\" && (\n                              <span className=\"text-red-700 text-sm\">\n                                {this.props.formError.msg}\n                              </span>\n                            )}\n                        </div>\n\n                        <button\n                          type=\"button\"\n                          className=\"btn bg-gray-100 hover:bg-gray-400 font-medium tracking-wide capitalize transition duration-300 transform active:scale-95 ease-in-out\"\n                          disabled={this.props.loadingRequest}\n                          onClick={() =>\n                            this.submitRequest(item, \"NOT_RECEIVED\")\n                          }\n                        >\n                          {this.props.loadingRequest ? \"Loading...\" : \"Confirm\"}\n                        </button>\n                      </div>\n                    )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\nexport default connect(mapStateToProps, {\n  fetchSchoolPosts,\n  getSchoolPlacement,\n  PushPopupAlert,\n})(ReceivePost);\n","import React, { Component } from \"react\";\nimport { BiReply } from \"react-icons/bi\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { placedCandidateInterface } from \"../../interfaces/marks_publication\";\nimport { capitalizeFirstLetter, getPositionById } from \"../../shared/dataTest\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n} from \"../../shared/interfaces\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\n\ninterface ViewRequestProps {\n  thisPost: PostSchoolInterface;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setViewPost: (value: boolean) => void;\n  systemPositions: PositionAPI[];\n  schoolPlacements: placedCandidateInterface[];\n  setPostId: (value: string) => void;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  setRequestExplanation: (value: string) => void;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n}\n\nexport class ViewRequest extends Component<ViewRequestProps> {\n  render() {\n    return (\n      <Modal\n        backDrop={true}\n        theme={Themes.default}\n        close={(): void => {\n          this.props.setThisPost(null);\n          this.props.setViewPost(false);\n        }}\n        displayClose={true}\n        backDropClose={false}\n        title={\n          <div className=\"flex flex-row gap-4 items-center\">\n            <div className=\"flex flex-col\">\n              <span className=\"font-bold text-2xl text-gray-500\">\n                Viewing Post Request\n              </span>\n            </div>\n          </div>\n        }\n        widthSizeClass={ModalSize.large}\n        padding={{ title: true, body: false, footer: false }}\n      >\n        <section className=\"px-4 mx-auto mb-4 mt-3 flex items-start\">\n          <section className=\"w-full\">\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Position: </span>\n              <span className=\"font-bold\">\n                {getPositionById(\n                  this.props.systemPositions,\n                  this.props.thisPost.position_id\n                )\n                  ? getPositionById(\n                      this.props.systemPositions,\n                      this.props.thisPost.position_id\n                    )!.position_title\n                  : \"Unknown position\"}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Requested posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.needed_posts}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Approved posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status !==\n                PostRequestStatusInterface.INITIATED ? (\n                  <div\n                    className=\"flex items-center gap-1 cursor-pointer\"\n                    onClick={() => this.props.setModalState(\"RECEIVE\")}\n                  >\n                    {this.props.thisPost.confirmed_posts}\n                    {getPlacementByRequest(\n                      this.props.schoolPlacements,\n                      this.props.thisPost.requested_post_id\n                    ).length > 0 && (\n                      <BiReply className=\"bg-yellow-600 w-5 h-5 text-white\" />\n                    )}\n                  </div>\n                ) : (\n                  \"-\"\n                )}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Placed posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status !==\n                PostRequestStatusInterface.INITIATED ? (\n                  <div\n                    className=\"flex items-center gap-1 cursor-pointer\"\n                    onClick={() => this.props.setModalState(\"RECEIVE\")}\n                  >\n                    {\n                      getPlacementByRequest(\n                        this.props.schoolPlacements,\n                        this.props.thisPost.requested_post_id\n                      ).length\n                    }\n                    {getPlacementByRequest(\n                      this.props.schoolPlacements,\n                      this.props.thisPost.requested_post_id\n                    ).length > 0 && (\n                      <BiReply className=\"bg-yellow-600 w-5 h-5 text-white\" />\n                    )}\n                  </div>\n                ) : (\n                  \"-\"\n                )}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Received posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status ===\n                PostRequestStatusInterface.RECEIVED\n                  ? this.props.thisPost.received_posts\n                  : \"-\"}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Number of female: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.female_number}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Number of male: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.male_number}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Request reason: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.description}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Status: </span>\n              <span\n                className={`px-2 py-1 mx-1 font-semibold rounded ${\n                  this.props.thisPost.requested_post_status ===\n                  PostRequestStatusInterface.INITIATED\n                    ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                    : this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.CONFIRMED\n                    ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                    : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                }`}\n              >\n                {this.props.thisPost.requested_post_status ===\n                PostRequestStatusInterface.INITIATED\n                  ? \"Pending\"\n                  : capitalizeFirstLetter(\n                      this.props.thisPost.requested_post_status\n                    )}\n              </span>\n            </div>\n          </section>\n          <div className=\"mb-3 flex items-center justify-end gap-2\">\n            {this.props.thisPost.requested_post_status ===\n              PostRequestStatusInterface.INITIATED && (\n              <button\n                className=\"font-bold py-1 px-4 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                onClick={() => {\n                  this.props.setModalState(\"UPDATE\");\n                  this.props.setPostId(this.props.thisPost.requested_post_id);\n                  this.props.setPositionId(this.props.thisPost.position_id);\n                  this.props.setRequestedPosts(\n                    this.props.thisPost.needed_posts\n                  );\n                  this.props.setRequestExplanation(\n                    this.props.thisPost.description\n                  );\n                  this.props.setFemaleOnPosition(\n                    this.props.thisPost.female_number\n                  );\n                  this.props.setMaleOnPosition(this.props.thisPost.male_number);\n                  this.props.setFormSteps({ ONE: true, TWO: false });\n                  this.props.setStepState({ ONE: false, TWO: false });\n                }}\n                disabled={\n                  this.props.thisPost.requested_post_status !==\n                  PostRequestStatusInterface.INITIATED\n                }\n              >\n                Edit\n              </button>\n            )}\n            {this.props.thisPost.requested_post_status !==\n              PostRequestStatusInterface.INITIATED &&\n              getPlacementByRequest(\n                this.props.schoolPlacements,\n                this.props.thisPost.requested_post_id\n              ).length > 0 && (\n                <button\n                  className=\"font-bold py-1 px-2 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                  onClick={() => this.props.setModalState(\"RECEIVE\")}\n                >\n                  Receive\n                </button>\n              )}\n          </div>\n        </section>\n      </Modal>\n    );\n  }\n}\n\nexport default ViewRequest;\n","import React, { Component } from \"react\";\nimport { BiReply } from \"react-icons/bi\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { placedCandidateInterface } from \"../../interfaces/marks_publication\";\nimport { capitalizeFirstLetter, getPositionById } from \"../../shared/dataTest\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n} from \"../../shared/interfaces\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\nimport ViewRequest from \"./ViewRequest\";\n\ninterface RequestListProps {\n  schoolPosts: PostSchoolInterface[];\n  systemPositions: PositionAPI[] | null;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  loadingRequest: boolean;\n  filterByPosition: string;\n  setFilterByPosition: (value: string) => void;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setViewPost: (value: boolean) => void;\n\n  schoolPlacements: placedCandidateInterface[];\n\n  thisPost: PostSchoolInterface | null;\n  setPostId: (value: string) => void;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  setRequestExplanation: (value: string) => void;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n  viewPost: boolean;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n}\n\ninterface RequestListState {\n  searchInput: string;\n}\n\nclass RequestList extends Component<RequestListProps, RequestListState> {\n  constructor(props: RequestListProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n          <div className=\"flex flex-col md:flex-row\">\n            <select\n              className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none\"\n              onChange={(e) => this.props.setFilterByPosition(e.target.value)}\n              value={this.props.filterByPosition}\n            >\n              <option value=\"all\">All Position</option>\n              {this.props.systemPositions &&\n              this.props.systemPositions.length > 0 ? (\n                this.props.systemPositions.map((position, index) => (\n                  <option key={index + 1} value={position.position_id}>\n                    {position.position_title}\n                  </option>\n                ))\n              ) : (\n                <option value=\"\">No Position found</option>\n              )}\n            </select>\n          </div>\n          <div className=\"block relative\">\n            <div className=\"pt-6 md:pt-0 md:pl-6\">\n              <button\n                className=\"btn bg-primary text-white hover:bg-blue-600\"\n                onClick={() => this.props.setModalState(\"CREATE\")}\n                disabled={this.props.loadingRequest}\n              >\n                Request Teacher\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"w-full py-2\">\n          <input\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            type=\"text\"\n            value={this.state.searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-50 border-2 border-gray-400 py-2 px-3 rounded focus:border-gray-800\"\n            disabled={\n              this.props.schoolPosts.length <= 0 || this.props.loadingRequest\n            }\n          />\n        </div>\n\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td className=\"px-2 py-2\">Position</td>\n              <td className=\"px-2 py-2\">Request</td>\n              <td className=\"px-2 py-2\">Approved</td>\n              <td className=\"px-2 py-2\">Placed</td>\n              <td className=\"px-2 py-2\">Occupied</td>\n              <td className=\"px-2 py-2\">Vacant</td>\n              <td className=\"px-2 py-2\">Status</td>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.schoolPosts.length > 0 ? (\n              this.props.schoolPosts.map((schoolPost, index) => (\n                <tr\n                  key={index + schoolPost.requested_post_id}\n                  className=\"border-b border-gray-200 hover:bg-gray-100\"\n                >\n                  <td className=\"px-2 py-3 text-left font-medium\">\n                    {index + 1}\n                  </td>\n                  <td className=\"py-3 px-1 text-left font-medium\">\n                    {this.props.systemPositions &&\n                    getPositionById(\n                      this.props.systemPositions,\n                      schoolPost.position_id\n                    )\n                      ? getPositionById(\n                          this.props.systemPositions,\n                          schoolPost.position_id\n                        )!.position_title\n                      : \"Unknown position\"}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.needed_posts}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.requested_post_status !==\n                    PostRequestStatusInterface.INITIATED ? (\n                      <div className=\"flex items-center gap-1\">\n                        {schoolPost.confirmed_posts}\n                        {getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost.requested_post_id\n                        ).length > 0 && (\n                          <BiReply\n                            className=\"bg-yellow-600 w-5 h-5 text-white cursor-pointer\"\n                            onClick={() => {\n                              this.props.setModalState(\"RECEIVE\");\n                              this.props.setThisPost(schoolPost);\n                            }}\n                          />\n                        )}\n                      </div>\n                    ) : (\n                      \"-\"\n                    )}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.requested_post_status !==\n                    PostRequestStatusInterface.INITIATED ? (\n                      <div className=\"flex items-center gap-1\">\n                        {\n                          getPlacementByRequest(\n                            this.props.schoolPlacements,\n                            schoolPost.requested_post_id\n                          ).length\n                        }\n                        {getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost.requested_post_id\n                        ).length > 0 && (\n                          <BiReply\n                            className=\"bg-yellow-600 w-5 h-5 text-white cursor-pointer\"\n                            onClick={() => {\n                              this.props.setModalState(\"RECEIVE\");\n                              this.props.setThisPost(schoolPost);\n                            }}\n                          />\n                        )}\n                      </div>\n                    ) : (\n                      \"-\"\n                    )}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.occupied_posts\n                      ? schoolPost.occupied_posts +\n                        (schoolPost.received_posts\n                          ? schoolPost.received_posts\n                          : 0)\n                      : \"-\"}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.requested_post_status ===\n                    PostRequestStatusInterface.RECEIVED\n                      ? (schoolPost.confirmed_posts\n                          ? schoolPost.confirmed_posts\n                          : 0) -\n                        (schoolPost.received_posts\n                          ? schoolPost.received_posts\n                          : 0)\n                      : \"-\"}\n                  </td>\n                  <td>\n                    <span\n                      className={`px-2 py-1 font-semibold rounded ${\n                        schoolPost.requested_post_status ===\n                        PostRequestStatusInterface.INITIATED\n                          ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                          : schoolPost.requested_post_status ===\n                            PostRequestStatusInterface.CONFIRMED\n                          ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                          : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                      }`}\n                    >\n                      {schoolPost.requested_post_status ===\n                      PostRequestStatusInterface.INITIATED\n                        ? \"Pending\"\n                        : capitalizeFirstLetter(\n                            schoolPost.requested_post_status\n                          )}\n                    </span>\n                  </td>\n                  <td className=\"py- text-left\">\n                    <div className=\"flex item-center justify-end gap-1\">\n                      <button\n                        className=\"btn btn-blue transition ease-out duration-500 flex items-center\"\n                        title=\"View User Profile\"\n                        onClick={() => {\n                          this.props.setThisPost(schoolPost);\n                          this.props.setViewPost(true);\n                        }}\n                      >\n                        Details\n                      </button>\n                      {schoolPost.requested_post_status ===\n                        PostRequestStatusInterface.INITIATED && (\n                        <button\n                          className=\"btn bg-gray-500 text-white hover:bg-gray-700\"\n                          onClick={() => {\n                            this.props.setModalState(\"UPDATE\");\n                            this.props.setPostId(schoolPost.requested_post_id);\n                            this.props.setPositionId(schoolPost.position_id);\n                            this.props.setRequestedPosts(\n                              schoolPost.needed_posts\n                            );\n                            this.props.setRequestExplanation(\n                              schoolPost.description\n                            );\n                            this.props.setFemaleOnPosition(\n                              schoolPost.female_number\n                            );\n                            this.props.setMaleOnPosition(\n                              schoolPost.male_number\n                            );\n                            this.props.setFormSteps({ ONE: true, TWO: false });\n                            this.props.setStepState({ ONE: false, TWO: false });\n                          }}\n                          disabled={this.props.loadingRequest}\n                        >\n                          Edit\n                        </button>\n                      )}\n                    </div>\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan={8}>\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No request have been made!\"}\n                  />\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n\n        {this.props.viewPost &&\n          this.props.modalState === null &&\n          this.props.thisPost &&\n          this.props.systemPositions && (\n            <ViewRequest\n              thisPost={this.props.thisPost}\n              setThisPost={this.props.setThisPost}\n              setViewPost={this.props.setViewPost}\n              systemPositions={this.props.systemPositions}\n              schoolPlacements={this.props.schoolPlacements}\n              setPostId={this.props.setPostId}\n              setModalState={this.props.setModalState}\n              setPositionId={this.props.setPositionId}\n              setRequestedPosts={this.props.setRequestedPosts}\n              setRequestExplanation={this.props.setRequestExplanation}\n              setFemaleOnPosition={this.props.setFemaleOnPosition}\n              setMaleOnPosition={this.props.setMaleOnPosition}\n              setFormSteps={this.props.setFormSteps}\n              setStepState={this.props.setStepState}\n            />\n          )}\n      </div>\n    );\n  }\n}\n\nexport default RequestList;\n","import React, { Fragment } from \"react\";\nimport { FaSchool } from \"react-icons/fa\";\nimport { VscOpenPreview } from \"react-icons/vsc\";\n\ninterface StepsHeaderProps {\n  currentStep: number;\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n}\n\nconst StepsHeader: React.FC<StepsHeaderProps> = (props) => {\n  return (\n    <Fragment>\n      <div className=\"p-5\">\n        <div className=\"mx-4 p-4\">\n          <div className=\"flex items-center\">\n            {/* STEP ONE ================================== */}\n            <div\n              className={`flex items-center ${\n                props.currentStep === 1\n                  ? \"text-white\"\n                  : props.stepState.ONE\n                  ? \"text-blue-500 cursor-pointer\"\n                  : \"text-gray-500\"\n              } relative`}\n              onClick={() =>\n                props.stepState.ONE &&\n                props.setFormSteps({\n                  ONE: true,\n                  TWO: false,\n                })\n              }\n            >\n              <div\n                className={`rounded-full transition duration-500 ease-in-out h-12 w-12 py-3 border-2 ${\n                  props.currentStep === 1\n                    ? \"border-blue-500 bg-blue-500\"\n                    : props.stepState.ONE\n                    ? \"border-blue-500 cursor-pointer\"\n                    : \"border-gray-500\"\n                }`}\n              >\n                <FaSchool className=\"feather feather-bookmark w-full h-full\" />\n              </div>\n              <div\n                className={`absolute top-0 -ml-10 text-center mt-16 w-32 text-xs font-semibold uppercase ${\n                  props.currentStep === 1\n                    ? \"text-blue-500\"\n                    : props.stepState.ONE\n                    ? \"text-blue-500 cursor-pointer\"\n                    : \"text-gray-500\"\n                }`}\n              >\n                Position\n              </div>\n            </div>\n            <div\n              className={`flex-auto border-t-2 transition duration-500 ease-in-out ${\n                props.stepState.ONE ? \"border-blue-500\" : \"border-gray-300\"\n              }`}\n            ></div>\n\n            {/* STEP TWO ================================== */}\n            <div\n              className={`flex items-center ${\n                props.currentStep === 4\n                  ? \"text-white\"\n                  : props.stepState.TWO\n                  ? \"text-blue-500 cursor-pointer\"\n                  : \"text-gray-500\"\n              } relative`}\n              onClick={() =>\n                props.stepState.TWO &&\n                props.setFormSteps({\n                  ONE: false,\n                  TWO: false,\n                })\n              }\n            >\n              <div\n                className={`rounded-full transition duration-500 ease-in-out h-12 w-12 py-3 border-2 ${\n                  props.currentStep === 4\n                    ? \"border-blue-500 bg-blue-500\"\n                    : props.stepState.TWO\n                    ? \"border-blue-500 cursor-pointer\"\n                    : \"border-gray-500\"\n                }`}\n              >\n                <VscOpenPreview className=\"feather feather-database w-full h-full\" />\n              </div>\n              <div\n                className={`absolute top-0 -ml-10 text-center mt-16 w-32 text-xs font-semibold uppercase ${\n                  props.currentStep === 4\n                    ? \"text-blue-500\"\n                    : props.stepState.TWO\n                    ? \"text-blue-500\"\n                    : \"text-gray-500\"\n                }`}\n              >\n                Description\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default StepsHeader;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../actions\";\nimport { createSchoolPost } from \"../../actions/schools\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { getPositionById, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n  SchoolsInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport ViewPosition from \"../Positions/ViewPosition\";\nimport StepsHeader from \"./StepsHeader\";\n\ninterface RequestPostFormProps {\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  formSteps: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n  positionId: string;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  requestedPosts: number;\n  maleOnPosition: number;\n  femaleOnPosition: number;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  requestExplanation: string;\n  setRequestExplanation: (value: string) => void;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  //   REDUX =================\n  auth: Auth;\n  schools: SchoolsInterface[];\n  schoolPosts: PostSchoolInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n  createSchoolPost: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface RequestPostFormState {\n  selectedLevel: string;\n}\n\nexport class RequestPostForm extends Component<\n  RequestPostFormProps,\n  RequestPostFormState\n> {\n  constructor(props: RequestPostFormProps) {\n    super(props);\n\n    this.state = {\n      selectedLevel: \"\",\n    };\n  }\n\n  GetAllowedPositions = (position_id?: string): PositionAPI[] => {\n    if (this.props.systemPositions) {\n      if (this.props.schoolPosts.length > 0) {\n        let postPositionIds: string[] = [];\n        for (const key in this.props.schoolPosts) {\n          if (\n            Object.prototype.hasOwnProperty.call(this.props.schoolPosts, key)\n          ) {\n            if (\n              this.props.schoolPosts[key].requested_post_status !==\n                PostRequestStatusInterface.RECEIVED ||\n              (this.props.schoolPosts[key].requested_post_status !==\n                PostRequestStatusInterface.CONFIRMED &&\n                this.props.schoolPosts[key].confirmed_posts &&\n                this.props.schoolPosts[key].confirmed_posts === 0)\n            ) {\n              if (\n                !position_id ||\n                position_id !== this.props.schoolPosts[key].position_id\n              ) {\n                postPositionIds.push(this.props.schoolPosts[key].position_id);\n              }\n            }\n          }\n        }\n        if (position_id) {\n          postPositionIds = postPositionIds.filter(\n            (item) => item !== position_id\n          );\n        }\n        return this.props.systemPositions.filter(\n          (item) => !postPositionIds.includes(item.position_id)\n        );\n      }\n      return this.props.systemPositions;\n    }\n    return [];\n  };\n\n  submitRequest = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // if (this.props.modalState === \"RECEIVE\" && this.props.receivedPosts < 0) {\n    //   return this.props.setFormError({\n    //     element: \"received_posts\",\n    //     msg: \"Invalid number of received post\",\n    //   });\n    // }\n    // if (\n    //   this.props.modalState === \"RECEIVE\" &&\n    //   this.props.thisPost &&\n    //   this.props.receivedPosts > this.props.thisPost.needed_posts\n    // ) {\n    //   return this.props.setFormError({\n    //     element: \"received_posts\",\n    //     msg: \"Invalid number of received post\",\n    //   });\n    // }\n\n    if (this.props.requestedPosts <= 0) {\n      return this.props.setFormError({\n        element: \"requested_posts\",\n        msg: \"Needed post must be greater than 0\",\n      });\n    }\n\n    if (isEmptyOrSpaces(this.props.requestExplanation)) {\n      return this.props.setFormError({\n        element: \"comment\",\n        msg: \"Explanation is required!\",\n      });\n    }\n\n    const thisSchool = this.props.schools.find(\n      (item) => item._id === this.props.auth.user_access.school_id\n    );\n\n    if (!thisSchool) {\n      return this.props.PushPopupAlert({\n        title: \"No district id found\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.modalState === \"CREATE\") {\n        const res = await axios.post<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpost`,\n          {\n            school_id: this.props.auth.user_access.school_id,\n            position_id: this.props.positionId,\n            district_id: thisSchool.district_id,\n            needed_posts: this.props.requestedPosts,\n            male_number: this.props.maleOnPosition,\n            female_number: this.props.femaleOnPosition,\n            // description: 44,\n            description: this.props.requestExplanation,\n            occupied_posts:\n              Number(this.props.maleOnPosition) +\n              Number(this.props.femaleOnPosition),\n            requested_by: this.props.auth.user.user_id,\n          }\n        );\n        if (res) {\n          this.props.createSchoolPost(res.data.data);\n          this.props.setPositionId(\"\");\n          this.props.setRequestedPosts(0);\n          this.props.setFemaleOnPosition(0);\n          this.props.setMaleOnPosition(0);\n          this.props.setRequestExplanation(\"\");\n          this.props.setFormSteps({ ONE: true, TWO: false });\n          this.props.setStepState({ ONE: false, TWO: false });\n          this.props.PushPopupAlert({\n            title: `Post(s) has been requested!`,\n            theme: PopupAlertTheme.success,\n          });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  setSchoolLevel = (value: string) => {\n    this.setState({ selectedLevel: value });\n  };\n\n  getPositionByLevelId = (\n    allPosition: PositionAPI[],\n    levelId: string\n  ): PositionAPI[] => {\n    if (isEmptyOrSpaces(levelId)) {\n      return allPosition;\n    }\n    return allPosition.filter(\n      (item) => item.school_level_id.school_level_id === levelId\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <StepsHeader\n          currentStep={this.props.formSteps.TWO ? 2 : 1}\n          stepState={this.props.stepState}\n          setFormSteps={this.props.setFormSteps}\n        />\n        <div className=\"px-4 mx-auto mb-4 mt-3\">\n          {this.props.formSteps.ONE && (\n            <section>\n              <div className=\"flex flex-col mb-4\">\n                <label>School level</label>\n                <select\n                  className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none focus:bg-gray-100\"\n                  value={this.state.selectedLevel}\n                  onChange={(e) => {\n                    this.setSchoolLevel(e.target.value);\n                  }}\n                >\n                  <option value=\"\">Choose level</option>\n                  {this.props.schoolLevels.school_levels &&\n                  this.props.schoolLevels.school_levels.length > 0 ? (\n                    this.props.schoolLevels.school_levels.map((item, index) => (\n                      <option key={index + 11} value={item.school_level_id}>\n                        {item.school_level_name}\n                      </option>\n                    ))\n                  ) : (\n                    <option>No school level found</option>\n                  )}\n                </select>\n              </div>\n\n              <div className=\"flex flex-col\">\n                <label>Select Position</label>\n                <select\n                  className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none focus:bg-gray-100\"\n                  value={this.props.positionId}\n                  onChange={(e) => {\n                    this.props.setPositionId(e.target.value);\n                  }}\n                >\n                  <option value=\"\">Choose Position</option>\n                  {this.props.systemPositions &&\n                  this.getPositionByLevelId(\n                    this.GetAllowedPositions(\n                      this.props.positionId.length > 0\n                        ? this.props.positionId\n                        : \"\"\n                    ),\n                    this.state.selectedLevel\n                  ).length > 0 ? (\n                    this.getPositionByLevelId(\n                      this.GetAllowedPositions(\n                        this.props.positionId.length > 0\n                          ? this.props.positionId\n                          : \"\"\n                      ),\n                      this.state.selectedLevel\n                    ).map((position, index) => (\n                      <option key={index + 11} value={position.position_id}>\n                        {position.position_title}\n                      </option>\n                    ))\n                  ) : (\n                    <option>No position found</option>\n                  )}\n                </select>\n              </div>\n              {this.props.positionId.length > 0 &&\n                this.props.systemPositions &&\n                getPositionById(\n                  this.props.systemPositions,\n                  this.props.positionId\n                ) && (\n                  <div className=\"my-2 rounded border\">\n                    <ViewPosition\n                      thisPosition={\n                        getPositionById(\n                          this.props.systemPositions,\n                          this.props.positionId\n                        )!\n                      }\n                      isGuest={true}\n                    />\n                  </div>\n                )}\n              <div className=\"bg-white w-full flex justify-end\">\n                {this.props.positionId.length > 0 && (\n                  <button\n                    className=\"btn btn-blue m-1 mr-2 mb-2 animate__animated animate__fadeIn focus:outline-none\"\n                    onClick={() => {\n                      this.props.setFormSteps({\n                        ONE: false,\n                        TWO: true,\n                      });\n                      this.props.setStepState({\n                        ONE: true,\n                        TWO: false,\n                      });\n                    }}\n                  >\n                    Continue\n                  </button>\n                )}\n              </div>\n            </section>\n          )}\n          <form onSubmit={this.submitRequest}>\n            <div className=\"bg-white\">\n              {this.props.formSteps.TWO && (\n                <div className=\"text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                  <div className=\"mb-4 md:flex md:justify-between\">\n                    <div className=\"mb-4 md:mr-2 md:mb-0 w-full\">\n                      <label\n                        className=\"block mb-2 text-sm font-bold text-gray-700\"\n                        htmlFor=\"female\"\n                      >\n                        Current number of Female on this position\n                      </label>\n                      <input\n                        className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                        id=\"female\"\n                        type=\"number\"\n                        min={0}\n                        value={this.props.femaleOnPosition}\n                        onChange={(e) =>\n                          this.props.setFemaleOnPosition(Number(e.target.value))\n                        }\n                        placeholder=\"Current number of Female on this position\"\n                      />\n                      {/* <p className=\"text-xs italic text-red-500\">\n                          Please choose a password.\n                        </p> */}\n                    </div>\n                    <div className=\"md:ml-2 w-full\">\n                      <label\n                        className=\"block mb-2 text-sm font-bold text-gray-700\"\n                        htmlFor=\"male\"\n                      >\n                        Current number of Male on this position\n                      </label>\n                      <input\n                        className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                        id=\"male\"\n                        type=\"number\"\n                        min={0}\n                        value={this.props.maleOnPosition}\n                        onChange={(e) =>\n                          this.props.setMaleOnPosition(Number(e.target.value))\n                        }\n                        placeholder=\"Current number of Male on this post\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Needed posts (number)</label>\n                    <input\n                      type=\"number\"\n                      className={`appearance-none rounded w-full py-1 px-4 border-2 bg-white focus:outline-none focus:bg-gray-100 ${\n                        this.props.formError &&\n                        this.props.formError.element === \"requested_posts\"\n                          ? \"border-red-700\"\n                          : \"border-gray-700\"\n                      }`}\n                      value={this.props.requestedPosts}\n                      onChange={(e) => {\n                        this.props.setRequestedPosts(Number(e.target.value));\n                        this.props.formError &&\n                          this.props.formError.element === \"requested_posts\" &&\n                          this.props.setFormError(null);\n                      }}\n                      placeholder=\"1\"\n                    />\n                    {this.props.formError &&\n                      this.props.formError.element === \"requested_posts\" && (\n                        <span className=\"text-xs italic text-red-700 mt-1\">\n                          {this.props.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Explanation</label>\n                    <textarea\n                      name=\"description\"\n                      className={`appearance-none rounded w-full py-1 px-4 border-2 bg-white focus:outline-none focus:bg-gray-100 ${\n                        this.props.formError &&\n                        this.props.formError.element === \"comment\"\n                          ? \"border-red-700\"\n                          : \"border-gray-700\"\n                      }`}\n                      id=\"description\"\n                      placeholder=\"Explanation\"\n                      value={this.props.requestExplanation}\n                      onChange={(e) => {\n                        this.props.setRequestExplanation(e.target.value);\n                        this.props.formError &&\n                          this.props.formError.element === \"comment\" &&\n                          this.props.setFormError(null);\n                      }}\n                      rows={2}\n                    ></textarea>\n                    {this.props.formError &&\n                      this.props.formError.element === \"comment\" && (\n                        <span className=\"text-xs italic text-red-700 mt-1\">\n                          {this.props.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                </div>\n              )}\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  className=\"btn bg-gray-400 text-white hover:bg-gray-600\"\n                  onClick={() => {\n                    this.props.setPositionId(\"\");\n                    this.props.setRequestedPosts(0);\n                    this.props.setFemaleOnPosition(0);\n                    this.props.setMaleOnPosition(0);\n                    this.props.setRequestExplanation(\"\");\n                    this.props.setModalState(null);\n                    this.props.setFormError(null);\n                    this.props.setFormSteps({ ONE: true, TWO: false });\n                    this.props.setStepState({ ONE: false, TWO: false });\n                  }}\n                >\n                  Exit\n                </button>\n                {this.props.formSteps.TWO && (\n                  <button\n                    className=\"btn bg-primary text-white hover:bg-blue-600\"\n                    disabled={this.props.loadingRequest}\n                  >\n                    {this.props.loadingRequest ? \"Loading...\" : \"Request\"}\n                  </button>\n                )}\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  system_settings,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  schoolPosts: PostSchoolInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    schools: schools.schools,\n    schoolPosts: schools.schoolPosts,\n    schoolLevels,\n    systemPositions: system_settings.systemPositions,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createSchoolPost,\n  PushPopupAlert,\n})(RequestPostForm);\n","import React, { Component } from \"react\";\nimport { GiTeacher } from \"react-icons/gi\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Auth,\n  loadSchoolLevels,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../actions\";\nimport {\n  getSchools,\n  fetchSchoolPosts,\n  createSchoolPost,\n  updateSchoolPost,\n  getSchoolPlacement,\n} from \"../../actions/schools\";\nimport { getPositions } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI } from \"../../interfaces\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { SchoolsInterface, PostSchoolInterface } from \"../../shared/interfaces\";\nimport ReceivePost from \"./ReceivePost\";\nimport RequestList from \"./RequestList\";\nimport RequestPostForm from \"./RequestPostForm\";\n\nexport const getPlacementByRequest = (\n  placements: placedCandidateInterface[],\n  request: string,\n  status: PlacedCandidateStatus = PlacedCandidateStatus.PENDING\n): placedCandidateInterface[] => {\n  // position id must be replaced with request id\n  return placements.filter(\n    (item) => item.request_id === request && item.status === status\n  );\n};\n\ninterface RequestTeacherProps {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n  schoolPosts: PostSchoolInterface[];\n  schoolPlacements: placedCandidateInterface[] | null;\n  getPositions: Function;\n  fetchSchoolPosts: Function;\n  getSchoolPlacement: Function;\n  createSchoolPost: Function;\n  updateSchoolPost: Function;\n  getSchools: Function;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface RequestTeacherState {\n  loading: boolean;\n  loadingPost: boolean;\n  loadingRequest: boolean;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n  filterByPosition: string;\n  positionId: string;\n  requestedPosts: number;\n  femaleOnPosition: number;\n  maleOnPosition: number;\n  requestExplanation: string;\n  formSteps: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  thisPost: PostSchoolInterface | null;\n  viewPost: boolean;\n  postId: string;\n  receivedPosts: number;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n}\nclass RequestTeacher extends Component<\n  RequestTeacherProps,\n  RequestTeacherState\n> {\n  constructor(props: RequestTeacherProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingPost: true,\n      loadingRequest: false,\n      modalState: null,\n      filterByPosition: \"\",\n      positionId: \"\",\n      requestedPosts: 0,\n      femaleOnPosition: 0,\n      maleOnPosition: 0,\n      requestExplanation: \"\",\n      formSteps: { ONE: true, TWO: false },\n      stepState: { ONE: false, TWO: false },\n      thisPost: null,\n      viewPost: false,\n      postId: \"\",\n      receivedPosts: 0,\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoadingPost = (value: boolean) => {\n    this.setState({ loadingPost: value });\n  };\n\n  setViewPost = (value: boolean) => {\n    this.setState({ viewPost: value });\n  };\n\n  setPostId = (value: string) => {\n    this.setState({ postId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setPositionId = (value: string) => {\n    this.setState({ positionId: value });\n  };\n  setRequestedPosts = (value: number) => {\n    this.setState({ requestedPosts: value });\n  };\n  setFemaleOnPosition = (value: number) => {\n    this.setState({ femaleOnPosition: value });\n  };\n  setMaleOnPosition = (value: number) => {\n    this.setState({ maleOnPosition: value });\n  };\n  setRequestExplanation = (value: string) => {\n    this.setState({ requestExplanation: value });\n  };\n  setFormSteps = (value: { ONE: boolean; TWO: boolean }) => {\n    this.setState({ formSteps: value });\n  };\n  setStepState = (value: { ONE: boolean; TWO: boolean }) => {\n    this.setState({ stepState: value });\n  };\n  setFilterByPosition = (value: string) => {\n    this.setState({ filterByPosition: value });\n  };\n\n  setThisPost = (value: PostSchoolInterface | null) => {\n    this.setState({ thisPost: value });\n  };\n\n  setModalState = (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => {\n    this.setState({ modalState: value });\n  };\n\n  setReceivedPosts = (value: number) => {\n    this.setState({ receivedPosts: value });\n  };\n\n  componentDidMount = () => {\n    if (this.props.auth.user_access.school_id.length <= 0) {\n      return <Redirect to=\"/apps-page\" />;\n    }\n    if (!this.props.schools.length && this.state.loading) {\n      this.props.getSchools((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (msg.length > 0) {\n          console.error({ loadingCandidatesError: msg });\n          this.setLoading(false);\n        }\n      });\n    } else {\n      this.setLoading(false);\n    }\n\n    if (!this.props.schoolPlacements) {\n      this.props.getSchoolPlacement(\n        this.props.auth.user_access.school_id,\n        (status: boolean, msg: string, data?: placedCandidateInterface[]) => {\n          this.setLoading(status);\n          if (!status && msg.length > 0) {\n            console.error({ getSchoolPlacementError: msg });\n          }\n        }\n      );\n    } else {\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.systemPositions === null ||\n      (this.props.systemPositions.length === 0 && this.state.loading)\n    ) {\n      this.setLoading(true);\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else {\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      (this.props.schoolLevels.school_levels.length === 0 && this.state.loading)\n    ) {\n      this.props.loadSchoolLevels(this.setLoading);\n    }\n\n    if (!this.props.schoolPosts.length && this.state.loadingPost) {\n      this.props.fetchSchoolPosts(\n        this.props.auth.user_access.school_id,\n        (status: boolean, message: string) => {\n          if (!status) {\n            if (message.length > 0 && this.state.loadingPost) {\n              console.error(\"error loading school post: \", message);\n              this.props.PushPopupAlert({\n                title: message,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setState({ loadingPost: false });\n          }\n        }\n      );\n    } else {\n      this.setState({ loadingPost: false });\n    }\n  };\n\n  getPositionById = (\n    systemPositions: PositionAPI[],\n    positionId: string\n  ): PositionAPI | undefined => {\n    return systemPositions.find((item) => item.position_id === positionId);\n  };\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* header title */}\n        <div className=\"flex flex-row items-start gap-3 my-2\">\n          <GiTeacher className=\"text-blue-700 w-10 h-10 md:block hidden\" />\n          <div className=\"w-full\">\n            <div className=\"flex justify-between w-full\">\n              <div className=\"flex flex-col gap-1 justify-between\">\n                <h1 className=\"md:text-4xl text-3xl font-semibold\">\n                  Teacher Request\n                </h1>\n\n                <div className=\"flex-row items-center md:gap-3 gap-2 hidden\">\n                  <div className=\"flex flex-row items-center mt-1 gap-1\">\n                    <span className=\"text-gray-600 text-xl\">level:</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        <div className=\"bg-white shadow p-2 rounded\">\n          {!this.state.modalState && this.props.schoolPlacements && (\n            <RequestList\n              systemPositions={this.props.systemPositions}\n              setModalState={this.setModalState}\n              loadingRequest={this.state.loadingRequest}\n              setFilterByPosition={this.setFilterByPosition}\n              schoolPosts={this.props.schoolPosts}\n              setThisPost={this.setThisPost}\n              setViewPost={this.setViewPost}\n              setPostId={this.setPostId}\n              setPositionId={this.setPositionId}\n              setRequestedPosts={this.setRequestedPosts}\n              setRequestExplanation={this.setRequestExplanation}\n              setFemaleOnPosition={this.setFemaleOnPosition}\n              setMaleOnPosition={this.setMaleOnPosition}\n              setFormSteps={this.setFormSteps}\n              setStepState={this.setStepState}\n              thisPost={this.state.thisPost}\n              viewPost={this.state.viewPost}\n              modalState={this.state.modalState}\n              schoolPlacements={this.props.schoolPlacements}\n              filterByPosition={this.state.filterByPosition}\n            />\n          )}\n\n          {(this.state.modalState === \"CREATE\" ||\n            this.state.modalState === \"UPDATE\") && (\n            <RequestPostForm\n              loadingRequest={this.state.loadingRequest}\n              setLoadingRequest={this.setLoadingRequest}\n              formSteps={this.state.formSteps}\n              setFormSteps={this.setFormSteps}\n              stepState={this.state.stepState}\n              setStepState={this.setStepState}\n              positionId={this.state.positionId}\n              setPositionId={this.setPositionId}\n              setRequestedPosts={this.setRequestedPosts}\n              requestedPosts={this.state.requestedPosts}\n              maleOnPosition={this.state.maleOnPosition}\n              femaleOnPosition={this.state.femaleOnPosition}\n              setFemaleOnPosition={this.setFemaleOnPosition}\n              setMaleOnPosition={this.setMaleOnPosition}\n              requestExplanation={this.state.requestExplanation}\n              setRequestExplanation={this.setRequestExplanation}\n              modalState={this.state.modalState}\n              setModalState={this.setModalState}\n              formError={this.state.formError}\n              setFormError={this.setFormError}\n            />\n          )}\n\n          {this.state.modalState === \"RECEIVE\" &&\n            this.state.thisPost &&\n            this.props.systemPositions &&\n            this.props.schoolPlacements && (\n              <ReceivePost\n                loadingPost={this.state.loadingPost}\n                loadingRequest={this.state.loadingRequest}\n                positionId={this.state.positionId}\n                thisPost={this.state.thisPost}\n                viewPost={this.state.viewPost}\n                receivedPosts={this.state.receivedPosts}\n                formError={this.state.formError}\n                systemPositions={this.props.systemPositions}\n                setThisPost={this.setThisPost}\n                setModalState={this.setModalState}\n                setFormError={this.setFormError}\n                setReceivedPosts={this.setReceivedPosts}\n                setLoadingRequest={this.setLoadingRequest}\n                setLoadingPost={this.setLoadingPost}\n                placementList={this.props.schoolPlacements}\n              />\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  system_settings,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  schoolPosts: PostSchoolInterface[];\n  schoolPlacements: placedCandidateInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    schools: schools.schools,\n    schoolPosts: schools.schoolPosts,\n    schoolPlacements: schools.schoolPlacements,\n    schoolLevels,\n    systemPositions: system_settings.systemPositions,\n  };\n};\n\nexport const PostRequest = connect(mapStateToProps, {\n  loadSchoolLevels,\n  getPositions,\n  getSchools,\n  fetchSchoolPosts,\n  getSchoolPlacement,\n  createSchoolPost,\n  updateSchoolPost,\n  PushPopupAlert,\n})(RequestTeacher);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport Table from \"../../components/Table/Table\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n  SchoolsInterface,\n} from \"../../shared/interfaces\";\nimport {\n  fetchDistrictPosts,\n  createSchoolPost,\n  getSchools,\n  updateSchoolPost,\n  getDistrictPlacement,\n} from \"../../actions/schools\";\nimport {\n  capitalizeFirstLetter,\n  getPositionById,\n  isEmptyOrSpaces,\n} from \"../../shared/dataTest\";\nimport { GiTeacher } from \"react-icons/gi\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { getPositions } from \"../../actions/settings\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { getSchoolById } from \"../district/Schools\";\nimport { DATE } from \"../../utils/functions\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { getPlacementByRequest } from \"../HeadTeacher/RequestTeacher\";\n\ninterface AppProps {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  systemPositions: PositionAPI[] | null;\n  districtPosts: PostSchoolInterface[];\n  districtPlacements: placedCandidateInterface[] | null;\n  getPositions: Function;\n  fetchDistrictPosts: Function;\n  createSchoolPost: Function;\n  updateSchoolPost: Function;\n  getSchools: Function;\n  getDistrictPlacement: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst _District: React.FC<AppProps> = (props) => {\n  const [loadingPosition, setLoadingPosition] = useState<boolean>(false);\n  const [loadingPost, setLoadingPost] = useState<boolean>(true);\n  const [loadingPlacement, setLoadingPlacement] = useState<boolean>(true);\n  const [modalState, setModalState] = useState<\"CONFIRM\" | \"UPDATE\" | null>(\n    null\n  );\n  const [filterByPosition, setFilterByPosition] = useState<string>(\"all\");\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [thisPost, setThisPost] = useState<PostSchoolInterface | null>(null);\n  const [viewPost, setViewPost] = useState<boolean>(false);\n  const [approvedPosts, setApprovedPosts] = useState<number>(0);\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n\n  useEffect(() => {\n    if (!isEmptyOrSpaces(props.auth.user_access.district_id)) {\n      if (!props.schools.length && loading) {\n        props.getSchools((status: boolean, msg: string) => {\n          setLoading(status);\n          if (msg.length > 0) {\n            console.error({ loadingCandidatesError: msg });\n          }\n        });\n      } else if (loading) {\n        setLoading(false);\n        loadingPosition && setLoadingPosition(false);\n      }\n\n      if (props.systemPositions === null) {\n        setLoadingPosition(true);\n        props.getPositions((status: boolean, msg: string) => {\n          setLoadingPosition(status);\n          console.log({ status: status, msg: msg });\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        });\n      }\n      if (!props.districtPosts.length && loadingPost) {\n        props.fetchDistrictPosts(\n          props.auth.user_access.district_id,\n          (status: boolean, message: string) => {\n            if (!status) {\n              if (message.length > 0 && loadingPost) {\n                console.error(\"error loading school post: \", message);\n                props.PushPopupAlert({\n                  title: message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              setLoadingPost(false);\n            }\n          }\n        );\n      } else if (loadingPost) {\n        setLoadingPost(false);\n      }\n\n      if (!props.districtPlacements) {\n        props.getDistrictPlacement(\n          props.auth.user_access.district_id,\n          (status: boolean, message: string) => {\n            if (!status) {\n              if (message.length > 0 && loadingPlacement) {\n                console.error(\"error loading school post: \", message);\n                props.PushPopupAlert({\n                  title: message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              setLoadingPlacement(false);\n            }\n          }\n        );\n      } else if (loadingPlacement) {\n        setLoadingPlacement(false);\n      }\n    }\n  }, [loading, loadingPlacement, loadingPosition, loadingPost, props]);\n\n  if (isEmptyOrSpaces(props.auth.user_access.district_id)) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading data...\n      </div>\n    );\n  }\n\n  const tableData = (): JSX.Element[] => {\n    if (loadingPost) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={8}>\n            Loading post request(s)\n          </td>\n        </tr>,\n      ];\n    }\n\n    let data = props.districtPosts;\n\n    data =\n      filterByPosition !== \"\" && filterByPosition !== \"all\"\n        ? data.filter(\n            (schoolPost) => schoolPost.position_id === filterByPosition\n          )\n        : data;\n\n    if (data.length === 0) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={8}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((schoolPost, index) => (\n      <tr\n        key={index + 1}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"py-3 px-4 text-left\">\n          {getSchoolById(props.schools, schoolPost.school_id)\n            ? getSchoolById(props.schools, schoolPost.school_id)!.school_name\n            : \"Unknown school\"}\n        </td>\n        <td className=\"py-3 px-4 text-left\">\n          {props.systemPositions &&\n          getPositionById(props.systemPositions, schoolPost.position_id)\n            ? getPositionById(props.systemPositions, schoolPost.position_id)!\n                .position_title\n            : \"Unknown position\"}\n        </td>\n        <td className=\"py-3 px-4 text-left text-base font-bold\">\n          {schoolPost.needed_posts}\n        </td>\n        <td className=\"py-3 px-4 text-left text-base font-medium\">\n          {schoolPost.requested_post_status !==\n          PostRequestStatusInterface.INITIATED\n            ? schoolPost.confirmed_posts\n            : \"-\"}\n        </td>\n        <td className=\"py-3 px-4 text-left text-base font-medium\">\n          {schoolPost.occupied_posts\n            ? schoolPost.occupied_posts +\n              (schoolPost.requested_post_status ===\n              PostRequestStatusInterface.RECEIVED\n                ? schoolPost.received_posts\n                  ? schoolPost.received_posts\n                  : 0\n                : 0)\n            : \"-\"}\n        </td>\n        <td className=\"py-3 px-4 text-left text-base font-medium\">\n          {schoolPost.requested_post_status !==\n          PostRequestStatusInterface.INITIATED\n            ? (schoolPost.confirmed_posts ? schoolPost.confirmed_posts : 0) -\n              (schoolPost.requested_post_status ===\n              PostRequestStatusInterface.RECEIVED\n                ? schoolPost.received_posts\n                  ? schoolPost.received_posts\n                  : 0\n                : 0)\n            : \"-\"}\n        </td>\n        <td>\n          <span\n            className={`px-2 py-1 font-semibold rounded ${\n              schoolPost.requested_post_status ===\n              PostRequestStatusInterface.INITIATED\n                ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                : schoolPost.requested_post_status ===\n                  PostRequestStatusInterface.CONFIRMED\n                ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n            }`}\n          >\n            {schoolPost.requested_post_status ===\n            PostRequestStatusInterface.INITIATED\n              ? \"Pending\"\n              : capitalizeFirstLetter(schoolPost.requested_post_status)}\n          </span>\n        </td>\n        <td className=\"py- text-left\">\n          <div className=\"flex item-center justify-end gap-1\">\n            {schoolPost.requested_post_status ===\n              PostRequestStatusInterface.INITIATED && (\n              <button\n                className=\"\n                btn\n                btn-blue\n                transition\n                ease-out\n                duration-500\n                flex items-center\n              \"\n                title=\"View User Profile\"\n                onClick={() => {\n                  setThisPost(schoolPost);\n                  setModalState(\"CONFIRM\");\n                }}\n              >\n                Reply\n              </button>\n            )}\n            <button\n              className=\"\n                btn\n                bg-gray-400\n                text-gray-50\n                hover:bg-gray-600\n                transition\n                ease-out\n                duration-500\n                flex items-center\n              \"\n              title=\"Request details\"\n              onClick={() => {\n                setThisPost(schoolPost);\n                setViewPost(true);\n              }}\n            >\n              Details\n            </button>\n            {/* {schoolPost.requested_post_status ===\n              PostRequestStatusInterface.INITIATED && (\n              <button\n                className=\"btn bg-gray-500 text-white hover:bg-gray-700\"\n                onClick={() => {\n                  setModalState(\"UPDATE\");\n                }}\n                disabled={loadingRequest}\n              >\n                Edit\n              </button>\n            )} */}\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  const doPlacement = async (thisPost: PostSchoolInterface) => {\n    try {\n      const res = await axios.post<any[]>(\n        `${API.PLACEMENT}/doplace/${thisPost.school_id}/${thisPost.position_id}`,\n        { request_id: thisPost.requested_post_id }\n      );\n\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ doPlacement: res });\n        console.log(\"====================================\");\n        props.fetchDistrictPosts(\n          props.auth.user_access.district_id,\n          (status: boolean, message: string) => {\n            if (!status) {\n              if (message.length > 0 && loadingPost) {\n                console.error(\"error loading school post: \", message);\n                props.PushPopupAlert({\n                  title: message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              setLoadingPost(false);\n            }\n          }\n        );\n\n        let msgAlert: string = \"\";\n        if (res.data.length > 0) {\n          if (res.data.length === approvedPosts) {\n            msgAlert = \"All confirmed posts has been placed on school!\";\n          } else {\n            msgAlert = `${res.data.length} of ${approvedPosts} post(s) has been placed on school!`;\n          }\n        } else {\n          msgAlert = \"Post request has been confirmed but no placement done!\";\n        }\n\n        setThisPost(null);\n        setApprovedPosts(0);\n        setModalState(null);\n        props.PushPopupAlert({\n          title: msgAlert,\n          theme:\n            res.data.length > 0\n              ? PopupAlertTheme.success\n              : PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ doPlacement_reply: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const reDoPlacement = async (thisPost: PostSchoolInterface) => {\n    try {\n      const res = await axios.post<any[]>(\n        `${API.PLACEMENT}/doplace/${thisPost.school_id}/${thisPost.position_id}`,\n        { request_id: thisPost.requested_post_id }\n      );\n\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ reDoPlacement: res });\n        console.log(\"====================================\");\n        props.fetchDistrictPosts(\n          props.auth.user_access.district_id,\n          (status: boolean, message: string) => {\n            if (!status) {\n              if (message.length > 0 && loadingPost) {\n                console.error(\"error loading school post: \", message);\n                props.PushPopupAlert({\n                  title: message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              setLoadingPost(false);\n            }\n          }\n        );\n\n        let msgAlert: string = \"\";\n        if (res.data.length > 0) {\n          if (res.data.length === approvedPosts) {\n            msgAlert = \"All confirmed posts has been placed on school!\";\n          } else {\n            msgAlert = `${res.data.length} of ${\n              thisPost.occupied_posts\n                ? thisPost.occupied_posts -\n                  (thisPost.received_posts ? thisPost.received_posts : 0)\n                : 0\n            } post(s) has been placed on school!`;\n          }\n        } else {\n          msgAlert =\n            \"Placement failed, Please wait for the next application period!\";\n        }\n\n        props.PushPopupAlert({\n          title: msgAlert,\n          theme:\n            res.data.length > 0\n              ? PopupAlertTheme.success\n              : PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ doPlacement_reply: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const addSchoolRequest = async (thisPost: PostSchoolInterface) => {\n    let thisSchool = getSchoolById(props.schools, thisPost.school_id);\n    if (thisSchool) {\n      const dataForm: {\n        school_id: string;\n        school_name: string;\n        district_id: string;\n        sector_id: string;\n        province_id: string;\n        gender: \"M\" | \"F\";\n        available_places: {\n          position_id: string;\n          requested_teacher: number;\n        }[];\n      }[] = [\n        {\n          school_id: thisSchool._id,\n          school_name: thisSchool.school_name,\n          district_id: thisSchool.district_id,\n          sector_id: thisSchool.sector_id,\n          province_id: thisSchool.district_id,\n          gender: thisPost.male_number > thisPost.female_number ? \"F\" : \"M\",\n          available_places: [\n            {\n              position_id: thisPost.position_id,\n              requested_teacher: approvedPosts,\n            },\n          ],\n        },\n      ];\n\n      let data = { requested_teachers: dataForm };\n      console.log(\"====================================\");\n      console.log({ requested_teachers: dataForm, data });\n      console.log(\"====================================\");\n\n      try {\n        const res = await axios.post(`${API.PLACEMENT}/requestteachers/`, data);\n\n        if (res) {\n          console.log(\"====================================\");\n          console.log({ addSchoolRequest: res });\n          console.log(\"====================================\");\n          await doPlacement(thisPost);\n        }\n      } catch (error) {\n        console.error({ addSchoolRequest_reply: error });\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    }\n  };\n\n  const submitRequest = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!thisPost) {\n      return;\n    }\n\n    if (approvedPosts < 0) {\n      return setFormError({\n        element: \"approved_posts\",\n        msg: \"Invalid number of approved post\",\n      });\n    }\n\n    if (approvedPosts > thisPost.needed_posts) {\n      return setFormError({\n        element: \"approved_posts\",\n        msg: \"Approved post can't be greater than needed post\",\n      });\n    }\n\n    setLoadingRequest(true);\n    try {\n      if (modalState === \"CONFIRM\") {\n        const res = await axios.patch<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpost/${thisPost.requested_post_id}`,\n          {\n            confirmed_posts: approvedPosts,\n            confirmed_by: props.auth.user.user_id,\n            received_posts: 0,\n            approval_date: new Date(),\n            school_id: thisPost.school_id,\n            position_id: thisPost.position_id,\n            district_id: thisPost.district_id,\n            needed_posts: thisPost.needed_posts,\n            male_number: thisPost.male_number,\n            female_number: thisPost.female_number,\n            description: thisPost.description,\n            occupied_posts: thisPost.occupied_posts,\n            requested_by: props.auth.user.user_id,\n            requested_post_status: PostRequestStatusInterface.CONFIRMED,\n          }\n        );\n        if (res) {\n          // props.updateSchoolPost(\"SCHOOL\", res.data.data);\n          await addSchoolRequest(thisPost);\n        }\n      }\n    } catch (error) {\n      console.error({ post_relpy: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    setLoadingRequest(false);\n  };\n\n  return (\n    <React.Fragment>\n      {/* header title */}\n      <div className=\"flex flex-row items-center gap-4 my-2 overflow-x-auto\">\n        <GiTeacher className=\"text-blue-600 text-5xl md:block hidden\" />\n        <div className=\"w-full\">\n          <div className=\"flex justify-between w-full\">\n            <div className=\"flex flex-col gap-1 justify-between\">\n              <h1 className=\"md:text-4xl text-3xl font-semibold\">\n                Schools requests\n              </h1>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* end header title */}\n      <div className=\"bg-white shadow-md p-2 rounded overflow-x-auto\">\n        <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n          <div className=\"flex flex-col md:flex-row\">\n            <select\n              className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none\"\n              value={filterByPosition}\n              onChange={(e) => setFilterByPosition(e.target.value)}\n            >\n              <option value=\"all\">All Position</option>\n              {props.systemPositions && props.systemPositions.length > 0 ? (\n                props.systemPositions.map((position, index) => (\n                  <option key={index + 1} value={position.position_id}>\n                    {position.position_title}\n                  </option>\n                ))\n              ) : (\n                <option value=\"\">No Position found</option>\n              )}\n            </select>\n          </div>\n        </div>\n        <Table\n          columns={[\n            { columnTitle: \"SCHOOL\", alignText: \"left\", padding: \"p-3\" },\n            { columnTitle: \"POSITION\", alignText: \"left\", padding: \"p-3\" },\n            { columnTitle: \"REQUEST\", alignText: \"left\", padding: \"p-3\" },\n            { columnTitle: \"APPROVED\", alignText: \"left\", padding: \"p-3\" },\n            { columnTitle: \"OCCUPIED\", alignText: \"left\", padding: \"p-3\" },\n            { columnTitle: \"VACCANTS\", alignText: \"left\", padding: \"p-3\" },\n            { columnTitle: \"STATUS\", alignText: \"left\", padding: \"p-3\" },\n            { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n          ]}\n          rows={tableData}\n          pagination={true}\n          search={true}\n          thColor=\"gray\"\n        />\n      </div>\n\n      {/* responde Modal */}\n      {modalState && thisPost && props.systemPositions && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => {\n            setThisPost(null);\n            setModalState(null);\n          }}\n          displayClose={true}\n          backDropClose={false}\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-2xl text-gray-500\">\n                  Responding to requested post\n                </span>\n              </div>\n            </div>\n          }\n          widthSizeClass={ModalSize.large}\n          padding={{ title: true, body: false, footer: false }}\n        >\n          <div className=\"px-4 mx-auto mb-4 mt-3\">\n            <div className=\"flex flex-col gap-3\">\n              {/* LEFT SIDE OF THE SYSTEM ================================== */}\n              <div className=\"rounded bg-gray-100 border p-2\">\n                <table>\n                  <tbody>\n                    <tr>\n                      <td className=\"text-lg text-gray-700\">School:</td>\n                      <td className=\"font-medium px-4 text-lg text-gray-700\">\n                        {\n                          getSchoolById(props.schools, thisPost.school_id)\n                            ?.school_name\n                        }\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"text-lg text-gray-700\">Position:</td>\n                      <td className=\"font-medium px-4 text-lg text-gray-700\">\n                        {getPositionById(\n                          props.systemPositions,\n                          thisPost.position_id\n                        )\n                          ? getPositionById(\n                              props.systemPositions,\n                              thisPost.position_id\n                            )!.position_title\n                          : \"\"}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"text-lg text-gray-700\">\n                        Needed posts (number):\n                      </td>\n                      <td className=\"font-medium px-4 text-lg text-gray-700\">\n                        {thisPost.needed_posts}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"text-lg text-gray-700\">\n                        Occupation (number):\n                      </td>\n                      <td className=\"font-medium px-4 text-lg text-gray-700\">\n                        {thisPost.occupied_posts}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"text-lg text-gray-700\">Explanation:</td>\n                      <td className=\"font-medium px-4 text-lg text-gray-700\">\n                        {thisPost.description}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"text-lg text-gray-700\">Requested date:</td>\n                      <td className=\"font-medium px-4 text-lg text-gray-700\">\n                        {DATE(thisPost.request_date.toString())}\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n              {/* END LEFT SIDE OF THE SYSTEM ================================== */}\n\n              {/* --------------------------------------------------------------------- */}\n\n              <div className=\"bg-white\">\n                <form onSubmit={submitRequest}>\n                  <div className=\"text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                    <div className=\"flex flex-col\">\n                      <label>Approved posts (number)</label>\n                      <input\n                        type=\"number\"\n                        className={`appearance-none rounded w-full py-1 px-4 border-2 bg-white focus:outline-none focus:bg-gray-100 ${\n                          formError !== null &&\n                          formError.element === \"approved_posts\"\n                            ? \"border-red-500\"\n                            : \"border-gray-700\"\n                        }`}\n                        value={approvedPosts}\n                        onChange={(e) => {\n                          setApprovedPosts(Number(e.target.value));\n                        }}\n                        min={0}\n                        max={thisPost.needed_posts}\n                        placeholder=\"1\"\n                        disabled={loadingRequest}\n                      />\n                      {formError !== null &&\n                        formError.element === \"approved_posts\" && (\n                          <span className=\"text-red-600 font-bold text-xs\">\n                            {formError.msg}\n                          </span>\n                        )}\n                    </div>\n                  </div>\n                  <div className=\"pt-4 flex justify-between\">\n                    <button\n                      className=\"btn bg-gray-400 text-white hover:bg-gray-600\"\n                      onClick={() => {\n                        setThisPost(null);\n                        setApprovedPosts(0);\n                        setModalState(null);\n                      }}\n                    >\n                      Exit\n                    </button>\n                    <button\n                      className=\"btn bg-primary text-white hover:bg-blue-600\"\n                      disabled={loadingRequest}\n                    >\n                      {loadingRequest ? \"Loading...\" : \"Respond\"}\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* End of responde Modal */}\n\n      {viewPost && modalState === null && thisPost && props.systemPositions && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => {\n            setThisPost(null);\n            setViewPost(false);\n          }}\n          displayClose={true}\n          backDropClose={false}\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-2xl text-gray-500\">\n                  Viewing Post Request\n                </span>\n              </div>\n            </div>\n          }\n          widthSizeClass={ModalSize.large}\n          padding={{ title: true, body: false, footer: false }}\n        >\n          <section className=\"px-4 mx-auto mb-4 mt-3 flex items-start\">\n            <section className=\"w-full\">\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Position: </span>\n                <span className=\"font-bold\">\n                  {getPositionById(props.systemPositions, thisPost.position_id)\n                    ? getPositionById(\n                        props.systemPositions,\n                        thisPost.position_id\n                      )!.position_title\n                    : \"Unknown position\"}\n                </span>\n                <button className=\"rounded-full border-2 px-3 border-blue-500 hover:bg-blue-50 hidden\">\n                  more\n                </button>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Requested posts: </span>\n                <span className=\"font-bold text-xl\">\n                  {thisPost.needed_posts}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Confirmed posts: </span>\n                <span className=\"font-bold text-xl\">\n                  {thisPost.confirmed_posts}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Received posts: </span>\n                <span className=\"font-bold text-xl\">\n                  {thisPost.requested_post_status ===\n                  PostRequestStatusInterface.RECEIVED\n                    ? thisPost.received_posts\n                    : \"-\"}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Occupation: </span>\n                <span className=\"font-bold text-xl\">\n                  {thisPost.occupied_posts\n                    ? thisPost.occupied_posts +\n                      (thisPost.requested_post_status ===\n                      PostRequestStatusInterface.RECEIVED\n                        ? thisPost.received_posts\n                          ? thisPost.received_posts\n                          : 0\n                        : 0)\n                    : 0}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Not received posts: </span>\n                <span className=\"font-bold text-xl\">\n                  {props.districtPlacements\n                    ? getPlacementByRequest(\n                        props.districtPlacements,\n                        thisPost.requested_post_id,\n                        PlacedCandidateStatus.REJECTED\n                      ).length\n                    : \"-\"}\n                  {props.districtPlacements &&\n                    getPlacementByRequest(\n                      props.districtPlacements,\n                      thisPost.requested_post_id,\n                      PlacedCandidateStatus.REJECTED\n                    ).length > 0 && (\n                      <button\n                        className=\"font-bold ml-2 py-1 px-4 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                        onClick={() => reDoPlacement(thisPost)}\n                        disabled={loadingRequest}\n                      >\n                        Do placement\n                      </button>\n                    )}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Request reason: </span>\n                <span className=\"font-bold text-xl\">\n                  {thisPost.description}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Status: </span>\n                <span\n                  className={`px-2 py-1 mx-1 font-semibold rounded ${\n                    thisPost.requested_post_status ===\n                    PostRequestStatusInterface.INITIATED\n                      ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                      : thisPost.requested_post_status ===\n                        PostRequestStatusInterface.CONFIRMED\n                      ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                      : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                  }`}\n                >\n                  {thisPost.requested_post_status ===\n                  PostRequestStatusInterface.INITIATED\n                    ? \"Pending\"\n                    : capitalizeFirstLetter(thisPost.requested_post_status)}\n                </span>\n              </div>\n            </section>\n            <div className=\"mb-3 flex items-center justify-end gap-2\">\n              {thisPost.requested_post_status ===\n                PostRequestStatusInterface.INITIATED && (\n                <button\n                  className=\"font-bold py-1 px-4 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                  onClick={() => {\n                    setModalState(\"UPDATE\");\n                  }}\n                  disabled={\n                    thisPost.requested_post_status !==\n                    PostRequestStatusInterface.INITIATED\n                  }\n                >\n                  Reply\n                </button>\n              )}\n            </div>\n          </section>\n        </Modal>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  system_settings,\n}: StoreState): {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  districtPosts: PostSchoolInterface[];\n  districtPlacements: placedCandidateInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    schools: schools.schools,\n    districtPosts: schools.districtPosts,\n    districtPlacements: schools.districtPlacements,\n    systemPositions: system_settings.systemPositions,\n  };\n};\n\nexport const District = connect(mapStateToProps, {\n  getPositions,\n  getSchools,\n  fetchDistrictPosts,\n  getDistrictPlacement,\n  createSchoolPost,\n  updateSchoolPost,\n  PushPopupAlert,\n})(_District);\n"],"sourceRoot":""}
{"version":3,"sources":["containers/QuestionBank/QuestionSettings/QuestionSettings.tsx"],"names":["SettingsType","QuestionSettings","props","state","loading","settings","settingType","questionTypes","caption","courses","educationCategory","schoolLevels","selectedSetting","className","this","map","item","i","onClick","setState","Component"],"mappings":"sNAOKA,E,oGAAAA,K,8BAAAA,E,kBAAAA,E,sCAAAA,E,4BAAAA,E,qBAAAA,M,KAkBE,IAAMC,EAAb,kDACE,WAAYC,GAA+B,IAAD,8BACxC,cAAMA,IAEDC,MAAQ,CACXC,SAAS,EACTC,SAAU,CACR,CACEC,YAAaN,EAAaO,cAC1BC,QAAS,kBAEX,CACEF,YAAaN,EAAaS,QAC1BD,QAAS,WAEX,CACEF,YAAaN,EAAaU,kBAC1BF,QAAS,wBAEX,CACEF,YAAaN,EAAaW,aAC1BH,QAAS,kBAGbI,gBAAiBZ,EAAaU,mBAvBQ,EAD5C,0CA2BE,WAAU,IAAD,OACP,OACE,sBAAKG,UAAU,GAAf,UACE,sBAAKA,UAAU,0DAAf,UACE,sBAAKA,UAAU,mCAAf,UACE,cAAC,IAAD,CAAsBA,UAAU,2BAChC,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,mCAAhB,oCACA,sBAAMA,UAAU,wBAAhB,uHAGJ,qBAAKA,UAAU,qBAKjB,qBAAKA,UAAU,gBAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKA,UAAU,8BAAf,SACE,sBAAKA,UAAU,8CAAf,UACE,qBAAKA,UAAU,6BAAf,SACGC,KAAKX,MAAME,SAASU,KAAI,SAACC,EAAMC,GAAP,OACvB,qBAAKC,QAAS,kBAAM,EAAKC,SAAS,CAAEP,gBAAiBI,EAAKV,eAAgBO,UAAS,4BAAuB,EAAKV,MAAMS,kBAAoBI,EAAKV,YAAc,4DAA8D,sCAAvI,kIAAnF,SACGU,EAAKR,eAIZ,sBAAKK,UAAU,qBAAf,UACGC,KAAKX,MAAMS,kBAAoBZ,EAAaO,eAAiB,cAAC,IAAD,IAC7DO,KAAKX,MAAMS,kBAAoBZ,EAAaU,mBAAqB,cAAC,IAAD,IACjEI,KAAKX,MAAMS,kBAAoBZ,EAAaW,cAAgB,cAAC,IAAD,IAC5DG,KAAKX,MAAMS,kBAAoBZ,EAAaS,SAAW,cAAC,IAAD,uBA1D1E,GAAsCW","file":"static/js/59.7166b7dc.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { RiFolderSettingsFill } from 'react-icons/ri';\nimport Courses from './Courses/Courses';\nimport EducationCategories from './EducationCategories/EducationCategories';\nimport QuestionTypes from './QuestionTypes/QuestionTypes';\nimport SchoolLevels from './SchoolLevels/SchoolLevels';\n\nenum SettingsType {\n  questionTypes = \"questionTypes\",\n  courses = \"courses\",\n  educationCategory = \"educationCategory\",\n  schoolLevels = \"schoolLevels\",\n  chapters = \"chapters\",\n}\n\ninterface QuestionSettingsState {\n  loading: boolean;\n  settings: {\n    settingType: SettingsType;\n    caption: string;\n  }[],\n  selectedSetting: SettingsType | null;\n}\ninterface QuestionSettingsProps {}\n\nexport class QuestionSettings extends Component<QuestionSettingsProps, QuestionSettingsState> {\n  constructor(props: QuestionSettingsProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      settings: [\n        {\n          settingType: SettingsType.questionTypes,\n          caption: \"Question Types\"\n        },\n        {\n          settingType: SettingsType.courses,\n          caption: \"Courses\"\n        },\n        {\n          settingType: SettingsType.educationCategory,\n          caption: \"Education categories\"\n        },\n        {\n          settingType: SettingsType.schoolLevels,\n          caption: \"School levels\"\n        },\n      ],\n      selectedSetting: SettingsType.educationCategory,\n    };\n  }\n  render() {\n    return (\n      <div className=\"\">\n        <div className=\"mt-3 rounded flex flex-row justify-between items-center\">\n          <div className=\"flex flex-row items-center gap-3\">\n            <RiFolderSettingsFill className=\"text-6xl text-blue-600\" />\n            <div className=\"flex flex-col\">\n              <span className=\"text-blue-600 text-2xl font-bold\">Question Bank settings</span>\n              <span className=\"text-gray-600 text-sm\">Customization of question bank predefined settings including courses, chapters, question types, etc</span>\n            </div>\n          </div>\n          <div className=\"flex flex-row\">\n            {/* <Link to=\"/method-add-question\" className={`btn bg-blue-100 hover:bg-white text-blue-700 border-2 border-white`}>Add questions</Link> */}\n            {/* <div className=\"btn bg-black bg-opacity-30 text-white border-2 border-white\">Change course</div> */}\n          </div>\n        </div>\n        <div className=\"mt-3 flex-col\">\n          <div className=\"flex flex-col\">\n            <div className=\"bg-white flex rounded mb-20\">\n              <div className=\"bg-white w-full border border-white rounded\">\n                <div className=\"flex flex-row items-center\">\n                  {this.state.settings.map((item, i) => (\n                    <div onClick={() => this.setState({ selectedSetting: item.settingType })} className={`animate__animated ${this.state.selectedSetting === item.settingType ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\" : \"bg-white border-white text-gray-600\"} hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mx-1`}>\n                      {item.caption}\n                    </div>\n                  ))}\n                </div>\n                <div className=\"=rounded mx-1 mb-1\">\n                  {this.state.selectedSetting === SettingsType.questionTypes && <QuestionTypes />}\n                  {this.state.selectedSetting === SettingsType.educationCategory && <EducationCategories />}\n                  {this.state.selectedSetting === SettingsType.schoolLevels && <SchoolLevels />}\n                  {this.state.selectedSetting === SettingsType.courses && <Courses />}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}
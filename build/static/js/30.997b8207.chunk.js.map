{"version":3,"sources":["actions/session.ts","components/Navigation/SideNavigation.tsx","actions/settings.ts","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","containers/SessionSettings/ChooseSession.tsx","components/Loading/TableLoading.tsx","interfaces/marks_publication.ts","containers/Admin/MarksPublication/MarksPublicationReport.tsx"],"names":["GetPlansTypes","callback","dispatch","a","setAxiosToken","axios","get","API","CLAIMING","res","console","log","GET_PLANS_TYPES","data","plan_types","status","length","type","ActionTypes","payload","error","errorToText","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","undefined","is_active","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","_SideNavigation","props","componentDidMount","PageHasSubNav","componentWillUnmount","state","loading","this","auth","isAuthenticated","navActive","system","navigation","className","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","SubItemContainer","SubItem","getSystemSettings","AUTH","GET_SYSTEM_SETTINGS","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","getApplicationSessions","APPLICATION","GET_APPLICATION_SESSIONS","getPositions","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","ExportToExcel","fileData","fileName","btnName","showIcon","onClick","e","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","require","addFooters","doc","pageCount","internal","getNumberOfPages","setFont","setFontSize","i","setPage","text","String","pageSize","width","align","generatePDF","reportSettings","table","callBack","orientation","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","institute","lines","splitTextToSize","subject","pdfInMM","y","subjectTitle","getTextWidth","addPage","period","autoTable","html","startY","margin","horizontal","cellPadding","rowHeight","bodyStyles","valign","columnStyles","email","cellWidth","theme","tableWidth","finalY","lastAutoTable","doneBy","DATE","Date","toString","save","returnPromise","then","isPlansActive","plans","today","activePlans","plan","startDate","start_date","endDate","end_date","getTime","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","useState","selectedPlan","setSelectedPlan","search","setSearch","onChange","target","value","placeholder","disabled","allSession","chooseAll","currentSelected","setSelectSession","searchData","map","item","session_plan_id","session_plan_name","find","itm","type_key","type_title","TableLoading","displayCols","colsArray","index","cols","push","element","MarksPublicationCandidateStatus","marksPublicationCandidateReportContentKeyInterface","PlacedCandidateStatus","WaitingListStatus","placementReportContentKeyInterface","defaultReportContent","key","applicant_name","national_id","phone_number","gender","position_name","marks","_MarksPublicationReport","setLoading","setState","setLoadingData","loadingData","setSelectAll","selectAll","selectSession","setSelectedSession","thisSession","selectedSession","reportTitle","setSelectPosition","selectPosition","setSelectedPosition","thisPosition","selectedPosition","setReportTitle","thisTitle","setFormError","formError","setSortOrder","thisOrder","sortOrder","setSortProperty","thisProperty","sortProperty","setIsSorted","isSorted","setGenerateReportModal","generateReportModal","setDownloading","downloading","setSort","loadReportMainData","DO_EXAM","reportMainData","reportMainData_error","PushPopupAlert","PopupAlertTheme","danger","systemPositions","msg","application_sessions","errorMsg","sessionData","isEmptyOrSpaces","warning","activeSession","FC_GeneratePDF","document","querySelectorAll","getElementById","user","fname","lname","footer","updateContentToPrint","arrayNew","n","Object","prototype","hasOwnProperty","call","position_id","position","dataArray","no","names","user_info","n_id","phone","position_title","user_position_marks","waiting_status","reportContentExport","dataToPrint","updateReportContent","findIndex","newArray","isChangeAllowed","resetReportContent","currentState","dataToShow","allData","result","Math","random","FC_FilterReportData","filter","toLocaleLowerCase","ReportStatuses","output","capitalizeFirstLetter","Passed","Failed","selectedStatus","searchInput","searchPositionInput","reportType","id","colSpan","sortThisArray","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","LoadingType","dark","to","style","fontStyle","school_level_id","school_level_name","education_institute_id","education_category_title","medium","MarksPublicationReport","system_settings","sessionPlan","allSessionPlans"],"mappings":"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","file":"static/js/30.997b8207.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PlansTypeInterface, SessionPlanInterface } from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  ApplicationSessionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// APPLICATION SETTINGS ===================================\nexport interface GetApplicationSessionAction {\n  type: ActionTypes.GET_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface[];\n}\n\nexport interface CreateApplicationSessionAction {\n  type: ActionTypes.CREATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface UpdateApplicationSessionAction {\n  type: ActionTypes.UPDATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface DisableApplicationSessionAction {\n  type: ActionTypes.DISABLE_APPLICATION_SESSION;\n  payload: {\n    application_session_id: string;\n    status: boolean;\n  };\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetApplicationSessionAction\n  | CreateApplicationSessionAction\n  | UpdateApplicationSessionAction\n  | DisableApplicationSessionAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ PERIODS =======================\n\nexport const getApplicationSessions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<ApplicationSessionInterface[]>(\n        `${API.APPLICATION}/applicationsesion`\n      );\n      dispatch<GetApplicationSessionAction>({\n        type: ActionTypes.GET_APPLICATION_SESSIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createAplicationSession = (data: ApplicationSessionInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateApplicationSessionAction>({\n      type: ActionTypes.CREATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateAplicationSession = (data: ApplicationSessionInterface) => {\n  console.log({ check: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateApplicationSessionAction>({\n      type: ActionTypes.UPDATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const disableApplicationSession = (data: {\n  application_session_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableApplicationSessionAction>({\n      type: ActionTypes.DISABLE_APPLICATION_SESSION,\n      payload: data,\n    });\n  };\n};\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected.session_plan_id === item.session_plan_id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected.session_plan_id ===\n                      item.session_plan_id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected.session_plan_id ===\n                            item.session_plan_id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan.session_plan_id !==\n                        item.session_plan_id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null &&\n                      selectedPlan.session_plan_id === item.session_plan_id && (\n                        <div\n                          onClick={() => setSelectedPlan(null)}\n                          className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                        >\n                          Close\n                        </div>\n                      )}\n                  </div>\n                </div>\n                {selectedPlan !== null &&\n                  selectedPlan.session_plan_id === item.session_plan_id && (\n                    <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                      <table className=\"w-full\">\n                        <thead className=\"bg-blue-50\">\n                          <tr className=\"text-left\">\n                            <th className=\"px-3 py-3\">#</th>\n                            <th>Plan</th>\n                            <th>Start date</th>\n                            <th>Ending date</th>\n                            <th>Status</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"text-sm\">\n                          {selectedPlan !== null &&\n                            selectedPlan.session_plan_id ===\n                              item.session_plan_id &&\n                            selectedPlan.plans.length > 0 &&\n                            item.plans.map((plan, i) => (\n                              <tr\n                                key={i + 1}\n                                className={`${\n                                  isPlansActive(item.plans).find(\n                                    (itm) => itm.type_key === plan.type_key\n                                  ) !== undefined\n                                    ? \"bg-blue-100 text-blue-600 font-bold\"\n                                    : \"\"\n                                } text-left border-b border-blue-50`}\n                              >\n                                <td className=\"px-3 py-1\">{i + 1}</td>\n                                <td>{plan.type_title}</td>\n                                <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                                <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                                <td>{plan.type_status}</td>\n                              </tr>\n                            ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChooseSession;\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","export interface marksPublicationInterface {\n  publication_id: string;\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_status: \"PENDING\" | \"PUBLISHED\";\n  status: number;\n  publication_position_marks: publicationInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface publicationInterface {\n  _id: string;\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport interface marksPublicationFormInterface {\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_position_marks: publicationFormInterface[];\n}\n\nexport interface publicationFormInterface {\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport enum MarksPublicationCandidateStatus {\n  Failed = \"Failed\",\n  Passed = \"Passed\",\n}\n\nexport interface MarksPublicationCandidate {\n  user: {\n    in_eduction: boolean;\n    disability: boolean;\n    is_active: boolean;\n    n_id: string;\n    phone_number: string;\n    email: string;\n    createdAt: string;\n    updatedAt: string;\n    user_id: string;\n    user_info: placedCandidateUserInfo;\n  };\n  period: string;\n  position: string;\n  courses: {\n    id: string;\n    marks: number;\n    _id: string;\n  }[];\n  waiting_status: MarksPublicationCandidateStatus;\n  status: number;\n  user_position_marks: number;\n  createdAt: string;\n  updatedAt: string;\n  disability: boolean;\n  gender: string;\n  in_education: boolean;\n  id: string;\n}\n\nexport interface MarksPublicationCandidateToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  gender: string;\n  position_name: string;\n  marks: number;\n  status: MarksPublicationCandidateStatus;\n}\n\nexport enum marksPublicationCandidateReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  gender = \"gender\",\n  position_name = \"position_name\",\n  marks = \"marks\",\n  status = \"status\",\n}\n\nexport interface marksPublicationReportContentInterface {\n  key: marksPublicationCandidateReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n// ---------------------------------------------------------------------------------------------\n\nexport interface placedCandidateInterface {\n  _id: string;\n  status: PlacedCandidateStatus;\n  user_id: string;\n  school_id: string;\n  position_id: string;\n  waiting_list_id: string;\n  request_id: string;\n  createdAt: string;\n  comment: string;\n  updatedAt: string;\n  __v: number;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  user_info: placedCandidateUserInfo;\n}\n\nexport interface placedCandidateUserInfo {\n  document_type: string;\n  issue_number: string;\n  date_of_issue: string;\n  date_of_expiry: string;\n  place_of_issue: string;\n  application_number: string;\n  fname: string;\n  lname: string;\n  father_names: string;\n  mother_names: string;\n  sex: string;\n  date_of_birth: string;\n  place_of_birth: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  civil_status: string;\n  spouse: null;\n  status: string;\n  photo: string;\n}\n\nexport enum PlacedCandidateStatus {\n  PENDING = \"pending\",\n  PLACED = \"placed\",\n  REJECTED = \"rejected\",\n}\n\nexport enum WaitingListStatus {\n  WAITING = \"waiting\",\n  PENDING = \"pending\",\n  PLACED = \"placed\",\n}\n\nexport interface PlacementToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  school_name: string;\n  position_name: string;\n  status: PlacedCandidateStatus;\n}\n\nexport enum placementReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  school_name = \"school_name\",\n  position_name = \"position_name\",\n  status = \"status\",\n}\n\nexport interface placementReportContentInterface {\n  key: placementReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n","import React, { Component, Fragment } from \"react\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdSearch,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { PositionAPI, SessionPlanInterface } from \"../../../interfaces\";\nimport {\n  MarksPublicationCandidateStatus,\n  marksPublicationReportContentInterface,\n  marksPublicationCandidateReportContentKeyInterface,\n  MarksPublicationCandidateToPrintInterface,\n  MarksPublicationCandidate,\n} from \"../../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport { BiExport, BiSort } from \"react-icons/bi\";\nimport {\n  MainItem,\n  SideNavigation,\n} from \"../../../components/Navigation/SideNavigation\";\nimport { FiEdit } from \"react-icons/fi\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport { errorToText, search, sortThisArray } from \"../../../utils/functions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport axios from \"axios\";\nimport { API } from \"../../../utils/api\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport LoadingV2, { LoadingType } from \"../../../components/Loading/LoadingV2\";\nimport { Link } from \"react-router-dom\";\nimport { IoFilter } from \"react-icons/io5\";\nimport { IoIosBriefcase } from \"react-icons/io\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\n\nconst defaultReportContent: marksPublicationReportContentInterface[] = [\n  {\n    key: marksPublicationCandidateReportContentKeyInterface.applicant_name,\n    title: \"Applicant name\",\n    status: true,\n  },\n  {\n    key: marksPublicationCandidateReportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  {\n    key: marksPublicationCandidateReportContentKeyInterface.email,\n    title: \"Email\",\n    status: true,\n  },\n  {\n    key: marksPublicationCandidateReportContentKeyInterface.phone_number,\n    title: \"Phone\",\n    status: true,\n  },\n  {\n    key: marksPublicationCandidateReportContentKeyInterface.gender,\n    title: \"Gender\",\n    status: true,\n  },\n  {\n    key: marksPublicationCandidateReportContentKeyInterface.position_name,\n    title: \"Position\",\n    status: true,\n  },\n  {\n    key: marksPublicationCandidateReportContentKeyInterface.marks,\n    title: \"Marks\",\n    status: true,\n  },\n  {\n    key: marksPublicationCandidateReportContentKeyInterface.status,\n    title: \"Status\",\n    status: true,\n  },\n];\n\ninterface MarksPublicationReportProps {\n  //   REDUX ############################\n  auth: Auth;\n  systemPositions: PositionAPI[] | null;\n  application_sessions: SessionPlanInterface[] | null;\n\n  GetAllSessionPlans: Function;\n  getSchools: Function;\n  getPositions: Function;\n  getAllRoom: Function;\n  selectDistrict: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface MarksPublicationReportState {\n  loading: boolean;\n  loadingData: boolean;\n  selectAll: boolean;\n  reportMainData: MarksPublicationCandidate[] | null;\n  reportContentExport: marksPublicationReportContentInterface[];\n  reportTitle: string;\n  dataToPrint: MarksPublicationCandidateToPrintInterface[] | null;\n  sortProperty: string;\n  isSorted: boolean;\n  sortOrder: \"ASC\" | \"DESC\";\n  searchInput: string;\n  searchPositionInput: string;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  selectedStatus: MarksPublicationCandidateStatus | \"all\";\n  selectPosition: boolean;\n  selectedPosition: PositionAPI | null;\n  selectedSession: SessionPlanInterface | null;\n  selectSession: boolean;\n  downloading: boolean;\n}\n\nexport class _MarksPublicationReport extends Component<\n  MarksPublicationReportProps,\n  MarksPublicationReportState\n> {\n  constructor(props: MarksPublicationReportProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingData: true,\n      selectedStatus: \"all\",\n      selectAll: true,\n      // selectedReportTitle: centerReportTitleType;\n      reportMainData: null,\n      reportContentExport: defaultReportContent,\n      reportTitle: \"\",\n      dataToPrint: null,\n      sortProperty: \"\",\n      isSorted: false,\n      sortOrder: \"ASC\",\n      searchInput: \"\",\n      searchPositionInput: \"\",\n      generateReportModal: null,\n      formError: null,\n      selectPosition: false,\n      selectedPosition: null,\n      selectedSession: null,\n      selectSession: false,\n      downloading: false,\n    };\n  }\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n\n  setLoadingData = (status: boolean) => {\n    this.setState({ loadingData: status });\n  };\n\n  setSelectAll = (status: boolean) => {\n    this.setState({ selectAll: status });\n  };\n\n  setSelectSession = (status: boolean) => {\n    this.setState({ selectSession: status });\n  };\n\n  setSelectedSession = (thisSession: SessionPlanInterface) => {\n    this.setState({\n      selectedSession: thisSession,\n      reportTitle:\n        \"Application marks publication Report - \" +\n        thisSession!.session_plan_name,\n    });\n  };\n\n  setSelectPosition = (status: boolean) => {\n    this.setState({ selectPosition: status });\n  };\n\n  setSelectedPosition = (thisPosition: PositionAPI | null) => {\n    this.setState({ selectedPosition: thisPosition });\n  };\n\n  setReportTitle = (thisTitle: string) => {\n    this.setState({ reportTitle: thisTitle });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setSortOrder = (thisOrder: \"ASC\" | \"DESC\") => {\n    this.setState({ sortOrder: thisOrder });\n  };\n\n  setSortProperty = (thisProperty: string) => {\n    this.setState({ sortProperty: thisProperty });\n  };\n\n  setIsSorted = (status: boolean) => {\n    this.setState({ isSorted: status });\n  };\n\n  setGenerateReportModal = (\n    data: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => {\n    this.setState({ generateReportModal: data });\n  };\n\n  setDownloading = (value: boolean) => {\n    this.setState({ downloading: value });\n  };\n\n  setSort = (thisProperty: string) => {\n    if (\n      this.state.sortProperty === thisProperty &&\n      this.state.sortOrder === \"ASC\"\n    ) {\n      this.setSortOrder(\"DESC\");\n    } else {\n      this.setSortOrder(\"ASC\");\n    }\n    this.setSortProperty(thisProperty);\n    this.setIsSorted(true);\n  };\n\n  loadReportMainData = async (thisSession: SessionPlanInterface) => {\n    this.setLoadingData(true);\n    try {\n      const res = await axios.get<MarksPublicationCandidate[]>(\n        `${API.DO_EXAM}/waiting/publication/${thisSession.session_plan_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ reportMainData: res });\n      console.log(\"====================================\");\n      this.setState({ reportMainData: res.data });\n    } catch (error) {\n      console.error({ reportMainData_error: error });\n      // callback(false, errorToText(error));\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingData(false);\n  };\n\n  componentDidMount = () => {\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (\n          status: boolean,\n          errorMsg: string,\n          sessionData: SessionPlanInterface[]\n        ) => {\n          this.setLoading(status);\n          if (!status) {\n            if (!isEmptyOrSpaces(errorMsg)) {\n              this.props.PushPopupAlert({\n                title: errorMsg,\n                theme: PopupAlertTheme.warning,\n              });\n            }\n\n            if (sessionData && sessionData.length > 0) {\n              let activeSession = sessionData.find((item) => item.is_active);\n              if (activeSession) {\n                this.setSelectedSession(activeSession);\n                if (this.state.reportMainData === null) {\n                  this.loadReportMainData(activeSession);\n                }\n              } else {\n                this.setSelectSession(true);\n              }\n            }\n          }\n        }\n      );\n    } else {\n      this.setLoading(false);\n      if (this.props.application_sessions.length > 0) {\n        let activeSession = this.props.application_sessions.find(\n          (item) => item.is_active\n        );\n        if (activeSession) {\n          this.setSelectedSession(activeSession);\n          if (this.state.reportMainData === null) {\n            this.loadReportMainData(activeSession);\n          }\n        } else {\n          this.setSelectSession(true);\n        }\n      }\n    }\n  };\n\n  FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      this.props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return false;\n    }\n\n    if (this.state.selectedSession) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: this.props.auth.user.fname + \" \" + this.props.auth.user.lname,\n        title: \"Marks publication Report\",\n        subjectTitle: `Application marks publication`,\n        subject: \"All position\",\n        period: this.state.selectedSession.session_plan_name,\n        footer: \"Online Recruitment\",\n        institute: \"All institute\",\n        orientation: \"l\",\n      };\n      table && generatePDF(reportSettings, table, this.setDownloading);\n    }\n  };\n\n  updateContentToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (this.state.selectedSession) {\n      let title =\n        \"Application marks publication Report - \" +\n        this.state.selectedSession.session_plan_name;\n      this.setReportTitle(title);\n    }\n    // UPDATE CONTENT =============================\n    if (this.state.reportMainData) {\n      let arrayNew: MarksPublicationCandidateToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in this.state.reportMainData) {\n        if (\n          Object.prototype.hasOwnProperty.call(this.state.reportMainData, key)\n        ) {\n          let thisPosition = this.props.systemPositions\n            ? this.props.systemPositions.find(\n                (item) =>\n                  item.position_id === this.state.reportMainData![key].position\n              )\n            : undefined;\n          let dataArray: MarksPublicationCandidateToPrintInterface | null =\n            null;\n          dataArray = {\n            no: n,\n            names:\n              this.state.reportMainData![key].user.user_info.fname +\n              \" \" +\n              this.state.reportMainData![key].user.user_info.lname,\n            national_id: this.state.reportMainData![key].user.n_id,\n            phone: this.state.reportMainData![key].user.phone_number,\n            email: this.state.reportMainData![key].user.email,\n            gender: this.state.reportMainData![key].gender,\n            position_name: thisPosition ? thisPosition.position_title : \"\",\n            marks: this.state.reportMainData![key].user_position_marks,\n            status: this.state.reportMainData![key].waiting_status,\n          };\n\n          for (const key in this.state.reportContentExport) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                this.state.reportContentExport,\n                key\n              )\n            ) {\n              if (!this.state.reportContentExport[key].status && dataArray) {\n                delete dataArray[this.state.reportContentExport[key].key];\n              }\n            }\n          }\n          dataArray && arrayNew.push(dataArray);\n          n++;\n        }\n      }\n      this.setState({ dataToPrint: arrayNew });\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  updateReportContent = (\n    key: marksPublicationCandidateReportContentKeyInterface\n  ) => {\n    let index: number = this.state.reportContentExport.findIndex(\n      (item) => item.key === key\n    );\n    let newArray: marksPublicationReportContentInterface[] =\n      this.state.reportContentExport;\n    newArray[index].status = !newArray[index].status;\n    this.setState({ reportContentExport: newArray });\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      this.setSelectAll(false);\n    } else {\n      this.setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    this.updateContentToPrint();\n  };\n\n  isChangeAllowed = (\n    key: marksPublicationCandidateReportContentKeyInterface\n  ): boolean => {\n    if (\n      key ===\n        marksPublicationCandidateReportContentKeyInterface.applicant_name ||\n      key ===\n        marksPublicationCandidateReportContentKeyInterface.position_name ||\n      key === marksPublicationCandidateReportContentKeyInterface.national_id\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  resetReportContent = (currentState: boolean) => {\n    let newArray: marksPublicationReportContentInterface[] =\n      this.state.reportContentExport;\n    for (const key in newArray) {\n      if (this.isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    this.setState({ reportContentExport: newArray });\n    this.setSelectAll(!currentState);\n    this.updateContentToPrint();\n  };\n\n  dataToShow = (\n    allData: MarksPublicationCandidate[]\n  ): MarksPublicationCandidateToPrintInterface[] => {\n    let result: MarksPublicationCandidateToPrintInterface[] = [];\n    for (const key in allData) {\n      if (Object.prototype.hasOwnProperty.call(allData, key)) {\n        let thisPosition = this.props.systemPositions\n          ? this.props.systemPositions.find(\n              (item) => item.position_id === allData[key].position\n            )\n          : undefined;\n        result.push({\n          no: Math.random(),\n          names:\n            allData![key].user.user_info.fname +\n            \" \" +\n            allData![key].user.user_info.lname,\n          national_id: allData![key].user.n_id,\n          phone: allData![key].user.phone_number,\n          email: allData![key].user.email,\n          gender: allData![key].gender,\n          position_name: thisPosition ? thisPosition.position_title : \"\",\n          marks: allData![key].user_position_marks,\n          status: allData![key].waiting_status,\n        });\n      }\n    }\n    return result;\n  };\n\n  FC_FilterReportData = (\n    allData: MarksPublicationCandidateToPrintInterface[],\n    status: MarksPublicationCandidateStatus | \"all\",\n    position: PositionAPI | null\n  ): MarksPublicationCandidateToPrintInterface[] => {\n    let result: MarksPublicationCandidateToPrintInterface[] = allData;\n    if (status !== \"all\") {\n      result = result.filter((item) => item.status === status);\n    }\n\n    if (position) {\n      result = result.filter(\n        (item) =>\n          item.position_name.toLocaleLowerCase() ===\n          position.position_title.toLocaleLowerCase()\n      );\n    }\n\n    return result;\n  };\n\n  ReportStatuses = (\n    allData: MarksPublicationCandidate[]\n  ): {\n    title: string;\n    count: number;\n    status: MarksPublicationCandidateStatus | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: number;\n      status: MarksPublicationCandidateStatus | \"all\";\n    }[] = [{ title: \"All\", count: allData.length, status: \"all\" }];\n    output.push(\n      {\n        title: capitalizeFirstLetter(\n          MarksPublicationCandidateStatus.Passed.toLocaleLowerCase()\n        ),\n        count: allData.filter(\n          (itm) => itm.waiting_status === MarksPublicationCandidateStatus.Passed\n        ).length,\n        status: MarksPublicationCandidateStatus.Passed,\n      },\n      {\n        title: capitalizeFirstLetter(\n          MarksPublicationCandidateStatus.Failed.toLocaleLowerCase()\n        ),\n        count: allData.filter(\n          (itm) => itm.waiting_status === MarksPublicationCandidateStatus.Failed\n        ).length,\n        status: MarksPublicationCandidateStatus.Failed,\n      }\n    );\n    return output;\n  };\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <SideNavigation>\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">Session:</div>\n            <div\n              onClick={() => this.setSelectSession(true)}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline justify-between text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n            >\n              {this.state.selectedSession !== null\n                ? `${this.state.selectedSession.session_plan_name}`\n                : \"Filter by session\"}\n              <FiEdit className=\"text-lg text-blue-600\" />\n            </div>\n          </div>\n\n          <div className=\"pt-1\">\n            <div className=\"text-sm text-gray-700 pb-2 pt-2\">\n              Performance statuses:\n            </div>\n            {this.state.reportMainData === null || this.state.loadingData ? (\n              <Loading />\n            ) : (\n              this.ReportStatuses(this.state.reportMainData!).map(\n                (\n                  itm: {\n                    title: string;\n                    count: number;\n                    status: MarksPublicationCandidateStatus | \"all\";\n                  },\n                  i: number\n                ) => (\n                  // itm.count > 0 &&\n                  <Fragment key={itm.title}>\n                    <div\n                      onClick={() =>\n                        this.setState({ selectedStatus: itm.status })\n                      }\n                    >\n                      <MainItem\n                        title={itm.title}\n                        count={itm.count}\n                        active={\n                          this.state.selectedStatus === itm.status\n                            ? true\n                            : false\n                        }\n                      />\n                    </div>\n                  </Fragment>\n                )\n              )\n            )}\n          </div>\n        </SideNavigation>\n\n        {/* BODY CONTENT--------------------------------- */}\n        <section>\n          {/* REPORT TITLE ============================================ */}\n          <div className=\"grid md:grid-cols-12\">\n            <div className=\"col-span-8\">\n              <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n                <span className=\"text-3xl font-bold text-gray-700\">\n                  Applications marks publication Report\n                </span>\n                <div\n                  onClick={() => this.setState({ selectPosition: true })}\n                  className=\"flex flex-row gap-2 items-end\"\n                >\n                  <span className=\"text-gray-500 text-xl\">Position:</span>\n                  <span className=\"text-blue-600 font-bold underline cursor-pointer text-xl\">\n                    {this.state.selectedPosition !== null\n                      ? this.state.selectedPosition.position_title\n                      : \"All position\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-span-4\">\n              <div className=\"float-right mt-2\">\n                {this.state.reportMainData &&\n                  this.state.reportMainData.length > 0 && (\n                    <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                      <BiExport className=\"text-2xl text-gray-500\" />\n                      <span className=\"text-gray-500\">Export as</span>\n                      <button\n                        className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                        disabled={\n                          this.state.reportMainData && !this.state.downloading\n                            ? false\n                            : true\n                        }\n                        onClick={() => {\n                          // this.updateContentToPrint();\n                          this.setGenerateReportModal({\n                            reportType: \"EXCEL\",\n                            status: true,\n                          });\n                        }}\n                      >\n                        EXCEL\n                      </button>\n                      <button\n                        className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                          this.state.downloading && \"cursor-wait\"\n                        }`}\n                        onClick={() => this.FC_GeneratePDF()}\n                        disabled={this.state.reportMainData ? false : true}\n                      >\n                        PDF\n                      </button>\n                    </div>\n                  )}\n              </div>\n            </div>\n          </div>\n          {/* END REPORT TITLE ============================================ */}\n\n          {/* ######################################################## */}\n          <div className=\"bg-white my-4\">\n            <div className=\"w-full px-2 py-2\">\n              <input\n                onChange={(e) => this.setState({ searchInput: e.target.value })}\n                type=\"text\"\n                value={this.state.searchInput}\n                placeholder=\"Search...\"\n                className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n                disabled={\n                  this.state.loadingData === null ||\n                  this.state.reportMainData === null ||\n                  this.FC_FilterReportData(\n                    this.dataToShow(this.state.reportMainData),\n                    this.state.selectedStatus,\n                    this.state.selectedPosition\n                  ).length <= 0\n                }\n              />\n            </div>\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"names\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Names <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"national_id\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      National Id <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"phone\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Phone <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"email\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Email <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"gender\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Gender <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"position_name\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Position <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"status\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Status <BiSort />\n                    </div>\n                  </td>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.reportMainData === null ||\n                this.state.loadingData ? (\n                  <TableLoading cols={8} />\n                ) : this.FC_FilterReportData(\n                    this.dataToShow(this.state.reportMainData),\n                    this.state.selectedStatus,\n                    this.state.selectedPosition\n                  ).length === 0 ? (\n                  <tr>\n                    <td colSpan={8} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          No result found! Please try to search again\n                        </span>\n                        <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                          <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                            <li\n                              onClick={() =>\n                                this.setState({ selectSession: true })\n                              }\n                              className=\"underline text-gray-500 cursor-pointer\"\n                            >\n                              Choose another district\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                ) : (\n                  sortThisArray(\n                    this.state.isSorted,\n                    search(\n                      this.FC_FilterReportData(\n                        this.dataToShow(this.state.reportMainData),\n                        this.state.selectedStatus,\n                        this.state.selectedPosition\n                      ),\n                      this.state.searchInput\n                    ),\n                    this.state.sortProperty,\n                    this.state.sortOrder\n                  ).map(\n                    (item: MarksPublicationCandidateToPrintInterface, i) => (\n                      <tr\n                        key={i + item.no}\n                        className={`${\n                          i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                        } hover:bg-blue-100 hover:text-blue-700 border-b hover:border-blue-500 text-sm ${\n                          item.status === MarksPublicationCandidateStatus.Failed\n                            ? \"border-yellow-500 text-gray-700 bg-yellow-200\"\n                            : \"border-gray-500 text-gray-700 bg-gray-200\"\n                        }`}\n                      >\n                        <td className=\"px-2 py-2\">{i + 1}</td>\n                        <td className=\"px-2 py-2\">{item.names}</td>\n                        <td className=\"px-2 py-2\">{item.national_id}</td>\n                        <td className=\"px-2 py-2\">{item.phone}</td>\n                        <td className=\"px-2 py-2\">{item.email}</td>\n                        <td className=\"px-2 py-2\">{item.gender}</td>\n                        <td className=\"px-2 py-2\">{item.position_name}</td>\n                        <td className=\"px-2 py-2\">{item.marks}</td>\n                        <td className=\"px-2 py-2\">{item.status}</td>\n                      </tr>\n                    )\n                  )\n                )}\n              </tbody>\n            </table>\n          </div>\n        </section>\n        {/* END BODY CONTENT--------------------------------- */}\n\n        {/* ---------------------------------------------------------------------------- */}\n        {/* SELECT SESSION MODAL =========================== */}\n        {this.state.selectSession && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <MdHistory className=\"text-5xl text-blue-600\" />\n                <span className=\"flex flex-col\">Choose session</span>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() =>\n              this.state.selectedSession !== null &&\n              this.setSelectSession(false)\n            }\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <ChooseSession\n              allSession={this.props.application_sessions}\n              setSelectSession={(value: SessionPlanInterface | \"all\") => {\n                if (value !== \"all\") {\n                  this.setSelectedSession(value);\n                  this.loadReportMainData(value);\n                  this.setSelectSession(false);\n                }\n              }}\n              chooseAll={false}\n              currentSelected={\n                this.state.selectedSession ? this.state.selectedSession : \"all\"\n              }\n            />\n          </Modal>\n        )}\n\n        {/* ---------------------------------------------------------------------------- */}\n\n        {/* POSITION CONTENT MODAL */}\n        {this.state.selectPosition === true && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <IoFilter className=\"text-5xl text-blue-600\" />\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    Filter by a position\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ selectPosition: false })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-2 pb-2\">\n              {this.state.selectPosition === true &&\n              this.props.systemPositions === null ? (\n                <LoadingV2 type={LoadingType.dark} />\n              ) : this.props.systemPositions!.length === 0 ? (\n                <div className=\"flex flex-col text-gray-400 items-center justify-center\">\n                  <MdSearch className=\"text-6xl\" />\n                  <div className=\"flex flex-col items-center justify-center\">\n                    <span>No positions found! Please go back!</span>\n                    <Link\n                      to=\"/\"\n                      className=\"btn bg-yellow-100 text-yellow-700 my-4 hover:bg-yellow-200\"\n                    >\n                      Go back\n                    </Link>\n                  </div>\n                </div>\n              ) : (\n                <>\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-gray-600 text-xs font-bold\">\n                      Filter by position name\n                    </span>\n                    <input\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                        this.setState({ searchPositionInput: e.target.value })\n                      }\n                      type=\"text\"\n                      className=\"mb-4 bg-gray-100 px-3 py-2 rounded\"\n                      placeholder=\"Keyword...\"\n                    />\n                  </div>\n                  <div\n                    onClick={() => {\n                      this.setSelectedPosition(null);\n                      this.setState({\n                        selectPosition: false,\n                        reportTitle:\n                          \"Application marks publication Report - \" +\n                          this.state.selectedSession\n                            ? this.state.selectedSession!.session_plan_name\n                            : \"\",\n                      });\n                    }}\n                    className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                  >\n                    <div className=\"grid lg:grid-cols-12\">\n                      <div className=\"col-span-12 lg:col-span-10\">\n                        <div className=\"flex flex-row items-center gap-3\">\n                          <div>\n                            <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                          </div>\n                          <div className=\"flex flex-col\">\n                            <span className=\"text-xs lg:text-base font-bold text-gray-700\">\n                              All positions\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                        <div className=\"h-full flex items-center justify-end\">\n                          <div className=\"btn bg-blue-600 text-white float-right\">\n                            Choose\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {search(\n                    this.props.systemPositions!,\n                    this.state.searchPositionInput\n                  ).map((item: PositionAPI, key: number) => (\n                    <div\n                      key={key + 1}\n                      onClick={() => {\n                        this.setSelectedPosition(item);\n                        this.setState({\n                          selectPosition: false,\n                          reportTitle:\n                            \"Application marks publication Report - \" +\n                            this.state.selectedSession\n                              ? this.state.selectedSession!.session_plan_name +\n                                \" on \" +\n                                item.position_title\n                              : \"\",\n                        });\n                      }}\n                      className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                    >\n                      <div className=\"grid lg:grid-cols-12\">\n                        <div className=\"col-span-12 lg:col-span-10\">\n                          <div className=\"flex flex-row items-center gap-3\">\n                            <div>\n                              <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                            </div>\n                            <div className=\"flex flex-col\">\n                              <span className=\"text-xs lg:text-sm font-bold text-gray-700\">\n                                {item.position_title}\n                              </span>\n                              <span className=\"text-xs text-gray-500 italic\">\n                                School level:{\" \"}\n                                <span\n                                  className=\"text-gray-800 font-light\"\n                                  style={{ fontStyle: \"normal\" }}\n                                >\n                                  {item.school_level_id.school_level_name}\n                                </span>\n                              </span>\n                              <span className=\"text-xs font-bold text-blue-600 bg-blue-100 w-max px-3 py-1 rounded-full\">\n                                {\n                                  item.education_institute_id\n                                    .education_category_title\n                                }\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                          <div className=\"h-full flex items-center justify-end\">\n                            <div className=\"btn bg-blue-600 text-white float-right\">\n                              Choose\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </>\n              )}\n            </div>\n          </Modal>\n        )}\n        {/* END POSITION CONTENT MODAL */}\n\n        {/* GENERATE REPORT MODAL CONTENT MODAL */}\n        {this.state.generateReportModal !== null &&\n          this.state.generateReportModal.status === true && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-bold text-2xl text-gray-500\">\n                      Generating Report contents\n                    </span>\n                    <span className=\"text-sm text-blue-600 font-normal\">\n                      Generating {this.state.generateReportModal.reportType}{\" \"}\n                      Report\n                    </span>\n                  </div>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => this.setGenerateReportModal(null)}\n              backDropClose={false}\n              widthSizeClass={ModalSize.medium}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <div className=\"px-6\">\n                <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                  <div className=\"flex flex-col\">\n                    <label>Title</label>\n                    <input\n                      type=\"text\"\n                      className={`text-left input-white w-20 inline-block ${\n                        this.state.formError &&\n                        this.state.formError.element === \"report_title\"\n                          ? \"border-red-500\"\n                          : \"border-gray-500\"\n                      } border-2`}\n                      placeholder=\"Sub Category Title\"\n                      value={this.state.reportTitle}\n                      onChange={(e) => {\n                        this.setFormError(null);\n                        this.setReportTitle(e.target.value);\n                      }}\n                      disabled={this.state.reportMainData ? false : true}\n                    />\n                    {this.state.formError &&\n                      this.state.formError.element === \"report_title\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                  <div className=\"flex flex-col mt-2\">\n                    <label>Report content</label>\n                    <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                      {this.state.reportContentExport.map((item, index) => (\n                        <div\n                          key={index}\n                          className={`flex items-center gap-1 ${\n                            this.isChangeAllowed(item.key)\n                              ? \"cursor-pointer\"\n                              : \"cursor-not-allowed\"\n                          }`}\n                          onClick={() =>\n                            this.isChangeAllowed(item.key) &&\n                            this.updateReportContent(item.key)\n                          }\n                          title={\n                            !this.isChangeAllowed(item.key)\n                              ? \"Required for every report!\"\n                              : \"\"\n                          }\n                        >\n                          {item.status ? (\n                            <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                          ) : (\n                            <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                          )}\n                          <span>{item.title}</span>\n                        </div>\n                      ))}\n                    </div>\n                    {this.state.formError &&\n                      this.state.formError.element === \"report_content\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                </div>\n                <div className=\"flex justify-between mb-2 mt-4\">\n                  <div\n                    className={`flex items-center gap-1 cursor-pointer`}\n                    onClick={() =>\n                      this.resetReportContent(this.state.selectAll)\n                    }\n                  >\n                    {this.state.selectAll ? (\n                      <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                    ) : (\n                      <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                    )}\n                    <span>Select all</span>\n                  </div>\n\n                  {this.state.dataToPrint && this.state.reportMainData && (\n                    <ExportToExcel\n                      fileData={this.state.dataToPrint}\n                      fileName={this.state.reportTitle}\n                      btnName=\"Generate\"\n                    />\n                  )}\n                </div>\n              </div>\n            </Modal>\n          )}\n        {/* END GENERATE REPORT MODAL CONTENT MODAL */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    systemPositions: system_settings.systemPositions,\n    application_sessions: sessionPlan.allSessionPlans,\n  };\n};\n\nexport const MarksPublicationReport = connect(mapStateToProps, {\n  GetAllSessionPlans,\n  getPositions,\n  PushPopupAlert,\n})(_MarksPublicationReport);\n"],"sourceRoot":""}
{"version":3,"sources":["utils/question_bank.ts","components/Table/Table.tsx","actions/session.ts","actions/document.ts","components/Navigation/SideNavigation.tsx","containers/Claimings/Candidate/FormPlacementList.tsx","containers/Claimings/Candidate/ClaimForm.tsx","containers/DoExam/QuestionDetails/ConvertingAnswers.ts","components/Loading/TableLoading.tsx","containers/SessionSettings/NoSession.tsx","containers/Positions/ViewRequirements.tsx","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","containers/Claimings/Candidate/FormExamList.tsx","containers/Claimings/ClaimDocView.tsx","containers/Claimings/Candidate/ApplicationFormView.tsx","components/AnswersDetails/AnswersDetails.tsx","containers/Claimings/Candidate/ExaminationFormView.tsx","components/AnswersDetails/CandidateAnswersDetails.tsx","containers/SessionSettings/ChooseSession.tsx","containers/DoExam/DoExamTitle/FindAnswer.tsx","containers/Claimings/Candidate/ChooseReason.tsx","containers/Claimings/Candidate/DocFormView.tsx","components/QuestionPreview/QuestionPreview.tsx","containers/Claimings/Candidate/FormApplicationList.tsx","containers/Claimings/Candidate/FormDocumentList.tsx","containers/SessionSettings/ApplicationSession/SessionDetails.tsx","containers/DoExam/QuestionDetails/Answers/MultipleChoice.tsx","containers/DoExam/QuestionDetails/Answers/TrueFalse.tsx","containers/DoExam/QuestionDetails/Answers/SimpleCalculated.tsx","containers/DoExam/QuestionDetails/Answers/ShortAnswer.tsx","containers/DoExam/QuestionDetails/Answers/Numerical.tsx","containers/DoExam/QuestionDetails/Answers/CalculatedMultipleChoice.tsx","containers/DoExam/QuestionDetails/Answers/Essay.tsx","containers/DoExam/QuestionDetails/Answers/MatchingSelect.tsx","containers/DoExam/QuestionDetails/Answers/Matching.tsx","containers/CandidateExams/CandidateExams.tsx","containers/DoExam/DoExamTitle/FindAnswerHybrid.tsx","containers/DoExam/QuestionDetails/Answers/AnswersTypesCollection.tsx","containers/DoExam/QuestionDetails/Answers/HybridAnswers.tsx","containers/Claimings/Admin/AdminFilterByType.tsx","containers/Claimings/ClaimHeaderTitle.tsx","containers/Claimings/Candidate/index.tsx","containers/Claimings/ClaimApplView.tsx","containers/Claimings/ClaimExamView.tsx","containers/Claimings/ClaimPlacementView.tsx","containers/Claimings/Candidate/FilterByType.tsx","containers/Admin/Claiming/ClaimingReport.tsx"],"names":["ExamTimeStatus","today","moment","tz","TimeZone","getQuestionType","question_types","type_id","type","check","find","itm","id","undefined","check_type","questionTypeElements","key","element","findTotalMarks","courses","results","sum","course","test","course_id","total_marks","toFixed","CheckIfExamDone","res","validateCalculatedFormula","formula","characters","length","status","msg","el","filter","nextCharacter","i","convertFromStringToDate","responseDate","dateComponents","split","datePieces","timePieces","Date","parseInt","validateExamDate","exam_date","start_time","end_time","Expired","toDay","toString","examDate","startTime","getDate","getMonth","getFullYear","endTime","Waiting","getTime","Online","InitializeExamsDone","selected_period","selectedPosition","candidateExam","loadExamsDone","user_id","setLoadingExamsDone","selectedExams","InitializeExamDetails","setLoadingExams","session_plan_id","user_exams_temp","center_id","district_id","room_id","position_id","proctoringDefaultRules","rule","caption","Table","props","table","tr","tableId","result","charactersLength","charAt","Math","floor","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","pagination","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","map","style","display","className","tableSize","search","searchBG","placeholder","onChange","e","data","filterType","td","rows","cols","toLowerCase","columns","textContent","innerText","indexOf","filterTable","target","value","disabled","loading","Number","tableClass","rounded","hideColumns","thColor","column","index","padding","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","GetPlansTypes","callback","dispatch","a","setAxiosToken","axios","get","API","CLAIMING","console","log","GET_PLANS_TYPES","plan_types","ActionTypes","payload","error","errorToText","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","is_active","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","createAcademicSession","CREATE_ACADEMIC_SESSION","GetAllAcademicSession","PLACEMENT","GET_ALL_ACADEMIC_SESSION","updateAcademicSession","UPDATE_ACADEMIC_SESSION","academicSessionActivation","ACADEMIC_SESSION_ACTIVATION","deleteAcademicSession","DELETE_ACADEMIC_SESSION","getActiveAcademicSession","GET_ACTIVE_ACADEMIC_SESSION","getDocumentCategory","AUTH","docCategory","GET_DOCUMENT_CATEGORY","createDocumentCategory","CREATE_DOCUMENT_CATEGORY","updateDocumentCategory","UPDATE_DOCUMENT_CATEGORY","deleteDocumentCategory","DELETE_DOCUMENT_CATEGORY","getDocumentSubCategory","docSubCategory","GET_DOCUMENT_SUB_CATEGORY","doc_SUB_category_error","createDocumentSubCategory","CREATE_DOCUMENT_SUB_CATEGORY","updateDocumentSubCategory","UPDATE_DOCUMENT_SUB_CATEGORY","deleteDocumentSubCategory","DELETE_DOCUMENT_SUB_CATEGORY","getDocumentFields","docFields","GET_DOCUMENT_FIELDS","createDocumentFields","CREATE_DOCUMENT_FIELDS","updateDocumentFields","reducer","UPDATE_DOCUMENT_FIELDS","deleteDocumentFields","DELETE_DOCUMENT_FIELDS","distinctCandidates","candidatesData","user_ids","candidate","forEach","includes","push","getCandidatesInInstitute","educatin_type_id","session_id","APPLICATION","GET_CANDIDATE_IN_INSTITUTE","verifyDocument","VERIFY_DOCUMENT","_SideNavigation","componentDidMount","PageHasSubNav","componentWillUnmount","state","this","auth","isAuthenticated","navActive","system","navigation","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","searchInput","setSearchInput","myPlacement","isClaimAllowed","myClaims","activeSession","placed","_id","setChooseClaimFile","setViewThisFile","setClaimFileId","school","school_name","ClaimGetDocTitle","documentCategories","doc","DocCategory","DocSubCategory","DocField","DocTitle","sub_category_id","documentSubCategory","c","user_detail_subcategory_id","category_id","documentCategory","user_detail_category_id","category_subcategory_data","category_subcategory_Data_id","documentFields","category","sub_category","field","main","allClaim","period_id","claimOnId","item","claiming_on_id","ClaimForm","setLoading","setState","setLoadingForm","loadingForm","setFormError","formError","setAlertError","alertError","claimFileId","viewThisFile","chooseClaimFile","setChooseClaimReason","chooseClaimReason","setClaimReason","claimReason","setClaimComment","claimComment","isClaimTypeOpen","thisSession","PlansTypeKeys","plans","type_key","isPlanActive","DOCUMENT_VALIDATION","PLACEMENT_TRANSFER","displayClaimType","claimType","EXAMINATION","MARKS_PUBLICATION","loadExamAnswers","activeSessionPlan","getMyAnswers","PushPopupAlert","theme","PopupAlertTheme","danger","application_session","setFormState","thisClaimType","thisClaimTypeId","formType","documentReducer","claiming","claimReasons","getClaimReasons","getDocumentById","documents","doc_id","getApplicationById","applications","application_id","getExamById","exams","answer_sheet_id","getValidation","thisId","old_reason","old_status","old_evaluated_by","candidateDocuments","validated_by","comment","validation_status","candidateApplications","override_by","application_status","cleanToClose","response","loadUserById","isEmptyOrSpaces","getClaimTitle","position","position_title","myAnswer","getCourseIdBySheetId","getCourseById","course_name","getClaimInstitute","education_institute_id","handleSubmit","preventDefault","toLocaleLowerCase","old_evaluator_email","old_evaluator_name","evaluator_email","evaluator_name","institute_id","email","user_info","fname","lname","post","user","default_claim_resaons","reason","createClaim","success","selectClaimType","thisClaim","getMyRejectedApplications","loadCourses","getMyRejectedDocuments","getMyPlacement","generateChooseFileTitle","formState","Modal","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","extraLarge","medium","body","footer","onSubmit","Object","values","capitalizeFirstLetter","replace","FormDocumentList","FormApplicationList","FormExamList","candidateAnswers","ChooseReason","allClaimReasons","resize","DocFormView","thisDoc","ApplicationFormView","thisApplication","ExaminationFormView","thisAnswerSheet","getMyClaims","GetClaimingTypes","toMultipleChoice","answers","answer","toTrueFalse","toMatching","toSimpleCalculated","toShortAnswer","toNumerical","toCalculatedMultipleChoice","toEssay","TableLoading","displayCols","colsArray","NoSession","ViewRequirements","requirements","colSpan","subcategory_title","field_id","field_title","subcategory_required","required","ExportToExcel","fileData","fileName","btnName","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","require","addFooters","pageCount","internal","getNumberOfPages","setFont","setFontSize","setPage","text","String","width","align","generatePDF","reportSettings","callBack","orientation","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","institute","lines","splitTextToSize","subject","pdfInMM","subjectTitle","getTextWidth","addPage","period","autoTable","html","startY","margin","horizontal","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","doneBy","DATE","save","returnPromise","then","getFailedExam","allData","allCourses","sheet_id","isReclaimAllowed","claim_level","_thisClaim","claims","level","decision_taken_status","ClaimDecisionStatus","REJECTED","isClaimEvaluated","claim_status","ClaimStatus","EVALUATED","createReClaim","reClaimingMsg","warning","setLoadingRequest","put","setReClaimingMsg","setReClaiming","getReasonById","reason_id","setViewImage","viewImage","previous","evaluater","name","src","AUTH_FILES","files","alt","claim","showDate","createdAt","evaluation_comment","reClaiming","last_claim_status","PENDING","DELETED","loadingRequest","FC_ApplicationPositionDistinctCategory","thisPosition","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","req","thisRequirements","thisCategory","thisSubCategory","thisField","position_requirement","category_subcategory_data_id","category_title","subcategory_id","ApplicationStates","Rejected","description","school_level_id","school_level_name","education_category_title","course_code","NoResultThemes","Dark","_AnswersDetails","setLoadingStatus","loadingStatus","questionTypes","loadQuestionTypes","exam_id","user_exams_done","allAnswers","exam_paper","requestUserAnswers","userAnswersTotalMarks","user_answers","total","user_marks","user_exam_details","dangerouslySetInnerHTML","__html","discription","termes","questions","question_id","question","language","selectedLanguage","is_deleted","chapters","customNumber","marks","answersList","showCorrectAnswer","showAnswers","exam_total_marks","AnswersDetails","FC_GetProfileDetails","LoadCandidateApplications","setSelectedCandidateExam","setSelectedCourse","setSelectedPosition","AddUserApplication","loadApplicationPeriods","claimShowAnswer","rules","right_click_enabled","copy_enabled","paste_enabled","stop_candidate_when_comeback","allow_to_leave_browser","CandidateAnswersDetails","tomorrow","setDate","date","compareWithToday","isPlansActive","activePlans","plan","startDate","start_date","endDate","end_date","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","selectedPlan","setSelectedPlan","setSearch","allSession","chooseAll","currentSelected","setSelectSession","searchData","session_plan_name","type_title","resultDiv","question_answers","subQuestionType","findQuestionType","questionTypeElementsType","MultipleChoice","userAnswer","SingleMultiple","userAnswerSingle","CalculatedMultipleChoice","userAnswer1","Matching","userAnswerMatch","TrueFalse","userAnswerTureFalse","Numeric","userAnswerNumerical","SimpleCalculate","userAnswerSimpleCalculate","ShortAnswer","userAnswerShortAnswer","Essay","userAnswerEssay","Embedded","Hybrid","FindAnswer","UserAnswersSel","SubQ","sub_question","findQType","typeShort","reference","user_answer","testQ","EmbeddedQuestion","selectedQuestion","questionAnswers","addAnswer","newTextResult","answeredQuestions","userQuestionAnswers","originalText","answerCheck","answered","QuestionForEmbedded","select","alert","returnSelect","QuestionPreview","doExam","setSelectedExamQuestion","setQuestionLanguage","selectLang","setSelectLang","setSelectedLanguage","filterLanguages","langs","langItem","testLangQ","QuestionLanguages","l","LoadingType","white","available_answers","selectedQuestionAnswer","selectedAns","answerQuestionFn","candidate_exam","selectedExam","shuffledAnswers","Shuffle","wholeQuestion","getRejectedApplicants","applicationData","objList","product","flag","prop","DocumentTitleData","documentData","documentTemp","company","end_year","names","phone_number","school_id","start_year","year","doc_title","getRejectedDocuments","rejected","isActivationAllowed","thisPlans","getPlanTypeByKey","allPlanTypes","viewThisSession","thisPlan","planEndDate","planStartDate","CLOSED","SessionDetails","handlePlanActivation","session","newState","window","confirm","newData","updatedAt","prototype","hasOwnProperty","call","allowed_claim_level","history","setViewThisSession","info","checkAnswer","checkA","tes","addAnswerItemFn","newAnswers","questionAnswer","oldAnswers","selAns","tester","temp","t","newAnswersMultiple","xItem","SimpleCalculated","answeredValue","checkB","minHeight","Numerical","getRandomArbitrary","MatchingSelect","closeWindow","selectedAnswer","findWord","checkIfSelected","displayWindow","setDisplayWindow","setSelectedAnswer","ans","selectedQuestionId","selectedLang","ansi","testing","lang","testLang","checkE","testAnswerLang","it","checkAnswerStatus","arr","ReturnMatchingStatus","newItem","selectedStatus","tooday","myDate","todayConverted","ChangeLocationComponent","setDisplay","changeLocation","_CandidateExams","setloadingExamsDone","loadingExamsDone","loadCandidateExams","QBank","candidateExams","loadUserProfileDetails","InitializationFn","application","loadUserApplications","candidate_applications","findLocation","updateLocation","selectedCourse","centersModal","maxExamModal","successMessage","updateLocationFunction","addLocation","location","proctoring_type","sex","removeDuplicatesExams","removeDuplicatesNotPreparedExams","setTimeOut","temps","activeExams","selectApplication","setMaxExamModal","closeModal","FC_Access","UserAccessList","MY_APPLICATION","view","selected_exam_id","to","preparedExam","user_status","center_name","room_number","school_levels","UserExamStatus","Editing","Paused","Shortlisted","Done","Removed","found","duration_min","getMinutesFromTwoDates","timeout","returnString","labels","days","notPreparedExam","positionCourses","CandidateExams","periods","changed","QuestionForHybrid","Calculated","FindAnswerHybrid","submitQuestionAnswer","maxHeight","stri","fromCharCode","charCodeAt","AnswersTypesCollection","HybridAnswers","hybrid","filterClaimsByClaimType","claimList","setSelectedClaimType","getAllClaims","loadingClaimTypes","setLoadingClaimTypes","claimTypes","countClaims","allClaims","Fragment","loadingClaims","selectedClaimType","ClaimHeaderTitle","isLoading","loadingSession","periodChanged","headerTitle","thisPeriod","sessions","application_sessions","selectPeriod","setThisPeriod","setLoadingSession","onPeriodChange","ClaimTypesEnum","setViewPosition","viewPosition","NoResult","thisExam","thisExamSheet","userDetails","district_name","loadingRejectedApplications","setLoadingRejectedApplications","loadingRejectedDocuments","setLoadingRejectedDocuments","COMPLETED","document_id","whichClaimType","exam","marks_publication","placement","whichClaimStatus","classes","getClaimById","claim_id","displayDocClaimTitle","displayClaimTitle","allCourse","thisAnswer","Index","setViewClaim","viewClaim","setPeriodChanged","setClaimForm","claimForm","setClaimId","claimId","loadClaims","setSession","isDeleteAllowed","thisCLaim","Light","ClaimApplView","ClaimExamView","CandidateClaim","sessionPlan","allSessionPlans","reportClaimType","defaultReportContent","claimReportContentKeyInterface","national_id","gender","phone","claim_session","education_category","decision","claim_title","claim_type","ClaimingReport","schoolLevels","getAllApplications","loadEducationCategories","thisLevel","setThisLevel","setLoadingClaims","loadingInstitutes","setLoadingInstitutes","downloading","setDownloading","claimToPrint","setClaimToPrint","sortProperty","setSortProperty","isSorted","setIsSorted","sortOrder","setSortOrder","generateReportModal","setGenerateReportModal","reportTitle","setReportTitle","reportContent","setReportContent","selectAll","setSelectAll","setSelectPeriod","thisEducation","setThisEducation","education_categories","setSort","thisProperty","updateClaimToPrint","arrayNew","n","keyClaim","dataArray","n_id","FC_ClaimData","isChangeAllowed","FC_FilterClaims","claimLevel","output","PlansKey","ClaimTypes","selectedType","currentType","levels","ClaimLevels","reportType","querySelectorAll","FC_GeneratePDF","sortThisArray","findIndex","newArray","isSelectAllNeeded","updateReportContent","currentState","resetReportContent"],"mappings":"wbA0JYA,E,iDA9INC,EAAQC,MAASC,GAAGC,KAEbC,EAAkB,SAC7BC,EACAC,GAEA,IAAIC,EAAwC,KAC5C,GAAuB,OAAnBF,EAAyB,CAC3B,IAAIG,EAAQH,EAAeI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOL,KACpD,QAAcM,IAAVJ,EAAqB,CACvB,IAAIK,EAAaC,IAAqBL,MACpC,SAACC,GAAD,OAASF,GAASE,EAAIK,MAAQP,EAAMQ,gBAEnBJ,IAAfC,IACFN,EAAOM,EAAWE,MAIxB,OAAOR,GAGIU,EAAiB,SAC5BC,EACAC,GAEA,GAAgB,OAAZA,EAAkB,CACpB,IADoB,EAChBC,EAAc,EADE,cAEDF,GAFC,yBAEXG,EAFW,QAGdC,EAAOH,EAAQV,MAAK,SAACC,GAAD,OAASA,EAAIW,SAAWA,EAAOE,kBAC1CX,IAATU,IACFF,GAAYE,EAAKE,cAHrB,2BAA6B,IAFT,8BAQpB,OAAOJ,EAAIK,QAAQ,GAEnB,MAAO,WAIEC,EAAkB,SAC7BR,EACAC,GAEA,IAAIQ,GAAe,EACnB,GAAgB,OAAZR,EAAkB,CAAC,IAAD,gBACDD,GADC,yBACXG,EADW,aAGLT,IADFO,EAAQV,MAAK,SAACC,GAAD,OAASA,EAAIW,SAAWA,EAAOE,eAErDI,GAAM,IAHV,2BAA6B,IADT,+BAQtB,OAAOA,GAGIC,EAA4B,SACvCC,GAEA,IAAIC,EAAuB,GAC3B,QACclB,IAAZiB,GACY,KAAZA,QACmBjB,IAAnBiB,EAAQE,QACW,IAAnBF,EAAQE,OAER,MAAO,CACLC,QAAQ,EACRC,IAAI,yBAGR,GAAIJ,EAAQE,OAAS,EACnB,MAAO,CACLC,QAAQ,EACRC,IAAI,iDAhB6B,oBAmBtBJ,GAnBsB,IAmBrC,2BAAwB,CAAC,IAAhBK,EAAe,QACtBJ,EAAU,sBAAOA,GAAP,CAAmBI,KApBM,8BAsBrC,GAAI,MAAAJ,EAAW,GACb,MAAO,CACLE,QAAQ,EACRC,IAAI,2CAGR,GAAIH,EAAWK,QAAO,SAACzB,GAAD,MAAY,MAAHA,KAAaqB,OAAS,EACnD,MAAO,CACLC,QAAQ,EACRC,IAAI,4CAGR,GAAIH,EAAWK,QAAO,SAACzB,GAAD,MAAY,MAAHA,KAAaqB,OAAS,EACnD,MAAO,CACLC,QAAQ,EACRC,IAAI,2DAAD,OACDH,EAAWK,QAAO,SAACzB,GAAD,MAAY,MAAHA,KAAaqB,OADvC,MAKP,GACE,MAAAD,EAAWA,EAAWC,OAAS,IACoB,IAAnDD,EAAWK,QAAO,SAACzB,GAAD,MAAY,MAAHA,KAAaqB,OACxC,CAEA,IADA,IAAIK,EAAwB,GACnBC,EAAI,EAAGA,EAAIP,EAAWC,OAAQM,IACjC,MAAAP,EAAWO,IAAoB,IAANA,IAC3BD,EAAgBN,EAAWO,EAAI,IAGnC,GAAiB,MAAbD,EACF,MAAO,CACLJ,QAAQ,EACRC,IAAI,yEAGR,GAAI,MAAAH,EAAWA,EAAWC,OAAS,GACjC,MAAO,CACLC,QAAQ,EACRC,IAAI,gDAIV,MAAO,CACLD,QAAQ,EACRC,IAAI,qBAID,SAASK,EAAwBC,GACtC,IAAIC,EAAiBD,EAAaE,MAAM,KACpCC,EAAaF,EAAe,GAAGC,MAAM,KACrCE,EAAaH,EAAe,GAAGC,MAAM,KACzC,OAAO,IAAIG,KACTC,SAASH,EAAW,IACpBG,SAASH,EAAW,IAAM,EAC1BG,SAASH,EAAW,IACpBG,SAASF,EAAW,IACpBE,SAASF,EAAW,IACpBE,SAASF,EAAW,M,SAIZ5C,K,kBAAAA,E,gBAAAA,E,mBAAAA,M,KAML,IAAM+C,EAAmB,SAC9BC,EACAC,EACAC,GAEA,IAAIjB,EAAyBjC,EAAemD,QAEtCC,EAAc,IAAIP,KAAK5C,EAAMoD,YAC7BC,EAAW,IAAIT,KAAKG,GAGpBO,EAAYhB,EAChBe,EAASE,UACP,KACCF,EAASG,WAAa,GACvB,IACAH,EAASI,cACT,IACAT,EACA,MAEEU,EAAUpB,EACde,EAASE,UACP,KACCF,EAASG,WAAa,GACvB,IACAH,EAASI,cACT,IACAR,EACA,MAwCJ,OAnCEI,EAASE,UAAYJ,EAAMI,WAC3BF,EAASG,WAAaL,EAAMK,YAC5BH,EAASI,cAAgBN,EAAMM,iBAE/BzB,EAASjC,EAAe4D,UAIxBN,EAASE,UAAYJ,EAAMI,WAC3BF,EAASG,WAAaL,EAAMK,YAC5BH,EAASI,cAAgBN,EAAMM,iBAE/BzB,EAASjC,EAAemD,SAIxBG,EAASE,YAAcJ,EAAMI,WAC7BF,EAASG,aAAeL,EAAMK,YAC9BH,EAASI,gBAAkBN,EAAMM,gBAG/BzB,EADEsB,EAAUM,UAAYT,EAAMS,UACrB7D,EAAe4D,QAExBL,EAAUM,WAAaT,EAAMS,WAC7BF,EAAQE,WAAaT,EAAMS,UAElB7D,EAAe8D,OAEf9D,EAAemD,SAOrBlB,GAGI8B,EAAsB,SACjCC,EACAC,EACAC,EACAC,EAKAC,EACAC,EACAC,EACAC,EASAC,GAEA,GAAwB,OAApBR,GAAiD,OAArBC,EAA2B,CACzDE,EACEH,EAAgBS,gBAChBL,EACAC,GAJuD,oBAMtCJ,EAAiB9C,SANqB,yBAMhDG,EANgD,QAUvD,QAAiBT,IAHFqD,EAAcQ,gBAAgBhE,MAC3C,SAACC,GAAD,OAASA,EAAIW,SAAWA,EAAOE,aAEL,CAC1B,IAAImD,EAAS,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAe5D,MAC7B,SAACC,GAAD,OAASA,EAAIa,YAAcF,EAAOE,kBAElBX,IAAd8D,GACFJ,EACEP,EAAgBS,gBAChBnD,EAAOE,UACPmD,EAAUC,YACVD,EAAUA,UACVA,EAAUE,QACVZ,EAAiBa,YACjBN,KAhBR,2BAA8C,IANW,iCAiDhDO,EAIP,CACJ,CACEC,KAAM,sBACN/C,QAAQ,EACRgD,QAAS,sBAEX,CACED,KAAM,eACN/C,QAAQ,EACRgD,QAAS,eAEX,CACED,KAAM,gBACN/C,QAAQ,EACRgD,QAAS,gBAEX,CACED,KAAM,+BACN/C,QAAQ,EACRgD,QAAS,qCAEX,CACED,KAAM,yBACN/C,QAAQ,EACRgD,QAAS,6B,4ECrBEC,IA9MqB,SAACC,GACnC,IAGIC,EAAoBC,EAFlBC,EACHH,EAAMG,SAA6B,YAAlBH,EAAMG,QAAsCH,EAAMG,QAxGtD,WAKhB,IALiD,IAAhCtD,EAA+B,uDAAd,EAC9BuD,EAAiB,GACjBxD,EACF,iEACEyD,EAAmBzD,EAAWC,OACzBM,EAAY,EAAGA,EAAIN,EAAQM,IAClCiD,GAAUxD,EAAW0D,OAAOC,KAAKC,MAAMD,KAAKE,SAAWJ,IAEzD,OAAOD,EAgG2CM,GAElD,EAAoCC,mBAAiB,GAArD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,mBAAiB,GAArD,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAsCJ,mBAAiB,GAAvD,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA0BN,qBAA1B,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAAgCR,mBAAiB,IAAjD,mBAAOS,EAAP,KAAiBC,EAAjB,KACA,EAAoCV,mBAAiB,GAArD,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAgCZ,mBAAiB,GAAjD,mBAAOa,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACR1B,EAAM2B,YAAcC,OAGtB,IAyBMA,EAAkB,WACtB3B,EAAQ4B,SAASC,eAAe3B,GAChCD,EAAKD,EAAM8B,qBAAqB,MAChClB,EAAcX,EAAGrD,QACjBkE,EAAcR,KAAKyB,KAAKpB,EAAaQ,IAGrCG,GAAeP,EAAc,GAAKI,GAClCK,EAAYlB,KAAK0B,IAAIX,EAAaF,EAAW,EAAGR,EAAa,IAM7D,IAAIsB,EAASC,MAAMC,KAAKD,MAAMrB,EAAa,EAvD3B,GAuD0CuB,QAAQC,KAChE,SAACnF,GAAD,OAxDc,EAwDKA,KAEhB+D,GAASgB,EAAOrF,SAAWqE,EAAMrE,QACpCsE,EAASe,GAGX,IAAK,IAAI/E,EAAY,EAAGA,EAAI+C,EAAGrD,OAAQM,IAEnC+C,EAAG/C,GAAGoF,MAAMC,QADVrF,GAAKmE,GAAcnE,GAAKqE,EACJ,GAEA,QAK5B,OACE,sBAAKiB,UAAS,UAAKzC,EAAM0C,UAAX,oBAAd,UAEG1C,EAAM2C,QACL,qBAAKF,UAAS,UAAKzC,EAAM4C,SAAX,gBAAd,SACG5C,EAAM2C,QACL,sBAAKF,UAAU,yEAAf,UACE,cAAC,KAAD,CAAUA,UAAU,uCACpB,uBACEpH,KAAK,SACLwH,YAAY,SACZC,SAAU,SAACC,GAAD,OAlEJ,SAClBC,EACAC,GAEA,IAAIhG,EAAQiD,EAAIgD,EAAIC,EAAcC,EAKlC,IAJmB,UAAfH,GAAmC,QAATD,IAAgBA,EAAO,IACrD/F,EAAS+F,EAAKK,cAEdnD,GADAD,EAAQ4B,SAASC,eAAe3B,IACrB4B,qBAAqB,MAC3BoB,EAAO,EAAGA,EAAOjD,EAAGrD,OAAQsG,IAC/B,IAAKC,EAAO,EAAGA,EAAOpD,EAAMsD,QAAQzG,OAAQuG,IAE1C,GADAF,EAAKhD,EAAGiD,GAAMpB,qBAAqB,MAAMqB,GACjC,CAEN,IADWF,EAAGK,aAAeL,EAAGM,WACnBH,cAAcI,QAAQxG,IAAW,EAAG,CAC/CiD,EAAGiD,GAAMZ,MAAMC,QAAU,GACzB,MAEAtC,EAAGiD,GAAMZ,MAAMC,QAAU,QAgDJkB,CAAYX,EAAEY,OAAOC,QACtCnB,UAAU,mEACVoB,SAAU7D,EAAM8D,UAGjB9D,EAAM2B,YACL,qBAAKc,UAAU,SAAf,SACE,yBACEA,UAAU,qDACVK,SAAU,SAACC,GAAD,OAAO1B,EAAY0C,OAAOhB,EAAEY,OAAOC,SAC7CC,SAAU7D,EAAM8D,QAHlB,UAKE,wBAAQF,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,MAAd,2BAQd,sBAAKnB,UAAU,yBAAf,UACE,wBACEA,UACEzC,EAAMgE,WACFhE,EAAMgE,WADV,wBAGMhE,EAAMiE,SAAW,gBAHvB,2BAMFxI,GAAI0E,EARN,WAUIH,EAAMkE,aACN,uBAAOzB,UAAU,wEAAjB,SACE,oBACEA,UAAS,qCAAgCzC,EAAMmE,QAAtC,kCAAuEnE,EAAMmE,QAA7E,qBAAiGnE,EAAMmE,QAAvG,QADX,SAGGnE,EAAMsD,QAAQhB,KAAI,SAAC8B,EAAQC,GAAT,OACjB,oBAEE5B,UAAS,UAAK2B,EAAOE,QAAZ,iBACPF,EAAOG,UADA,sBAEKH,EAAOI,eAAiB,kBACtCC,QAAS,kBACPL,EAAOI,eA3NC,SAC5BrE,GAGI,IACAF,EACFkD,EACAuB,EACAvH,EACAwH,EACAC,EACAC,EATFC,EAEG,uDAFgB,EACnBC,EACG,uDADmB,MASpBC,EAAc,EAKhB,GAHAN,GAAY,EADZzE,EAAQ4B,SAASC,eAAe3B,GAK9B,KAAOuE,GAAW,CAMhB,IAJAA,GAAY,EACZvB,EAAOlD,EAAMkD,KAGRhG,EAAI,EAAGA,EAAIgG,EAAKtG,OAAS,EAAGM,IAS/B,GAPA0H,GAAe,EAGfF,EAAIxB,EAAKhG,GAAG4E,qBAAqB,MAAM+C,GACvCF,EAAIzB,EAAKhG,EAAI,GAAG4E,qBAAqB,MAAM+C,GAG/B,QAARC,GAAiBJ,GAAKC,GACxB,GAAID,EAAEM,UAAU5B,cAAgBuB,EAAEK,UAAU5B,cAAe,CAEzDwB,GAAe,EACf,YAEG,GAAY,SAARE,GAAkBJ,GAAKC,GAC5BD,EAAEM,UAAU5B,cAAgBuB,EAAEK,UAAU5B,cAAe,CAEzDwB,GAAe,EACf,MAIFA,GAAgB1B,EAAKhG,GAAG+H,YAG1B/B,EAAKhG,GAAG+H,WAAYC,aAAahC,EAAKhG,EAAI,GAAIgG,EAAKhG,IACnDuH,GAAY,EAEZM,KAIoB,IAAhBA,GAA6B,QAARD,IACvBA,EAAM,OACNL,GAAY,IAgKwBU,CAAejF,EAASkE,IANpD,SASE,sBAAK5B,UAAU,0BAAf,UACG2B,EAAOiB,YACPjB,EAAOI,eAAiB,cAAC,IAAD,QAVtBH,UAiBf,uBAAO5I,GAAG,aAAagH,UAAU,gCAAjC,SACGzC,EAAMmD,YAGVnD,EAAM2B,YACL,sBAAKc,UAAU,sEAAf,UACE,8BACE,uBAAMA,UAAU,mCAAhB,0BACgBrB,EADhB,OAC8BR,EAAa,EAD3C,gBAIF,8BACE,sBAAK6B,UAAU,wBAAf,UACE,8BACE,wBACEpH,KAAK,SACLoH,UAAS,mHACS,IAAhBzB,GAAqB,YAEvBsE,aAAW,WACXzB,SAA0B,IAAhB7C,GAAqBhB,EAAM8D,QACrCW,QAAS,kBAAMxD,EAAeD,EAAc,IAP9C,SASE,cAAC,KAAD,CAAkByB,UAAU,gBAGhC,8BACGvB,GACCA,EAAMoB,KAAI,SAACiD,EAAMC,GAAP,OACR,wBAEE/C,UAAS,6GACP8C,IAASvE,EACL,WACA,8BAEN6C,SAAU0B,IAASvE,GAAehB,EAAM8D,QACxCW,QAAS,kBAAMxD,EAAesE,IARhC,SAUGA,GATIC,QAab,8BACE,wBACEnK,KAAK,SACLoH,UAAS,6HACPzB,IAAgBF,GAAc,YAEhCwE,aAAW,OACXzB,SAAU7C,IAAgBF,GAAcd,EAAM8D,QAC9CW,QAAS,kBAAMxD,EAAeD,EAAc,IAP9C,SASE,cAAC,KAAD,CAAgByB,UAAU,gC,skBCtJjCgD,EAAgB,SAACC,GAE5B,OADAA,GAAS,EAAM,IACf,uCAAO,WAAOC,GAAP,iBAAAC,EAAA,sEAEHC,cAFG,SAGeC,IAAMC,IAAN,UACbC,IAAIC,SADS,kBAHf,OAGGxJ,EAHH,OAMHyJ,QAAQC,IAAI,CAAEC,gBAAiB3J,EAAIuG,OAC/BqD,EAAmC,GACpB,MAAf5J,EAAIK,QAEW,OAAbL,EAAIuG,MAAiBvG,EAAIuG,KAAKnG,OAAS,IACzCwJ,EAAa5J,EAAIuG,MAGrB2C,EAA8B,CAC5BtK,KAAMiL,IAAYF,gBAClBG,QAASF,IAEXX,GAAS,EAAO,IAlBb,kDAoBHQ,QAAQM,MAAM,CAAEA,MAAOC,YAAY,EAAD,MAClCf,GAAS,EAAOe,YAAY,EAAD,KArBxB,0DAAP,uDAsFWC,EAAsB,SACjCC,GAGA,OADAT,QAAQC,IAAI,CAAEQ,aACP,CACLtL,KAAMiL,IAAYM,iBAClBL,QAASI,IAKAE,EAAuB,SAACnB,GAEnC,OADAA,GAAS,EAAM,IACf,uCAAO,WAAOC,GAAP,iBAAAC,EAAA,sEAEHC,cAFG,SAGeC,IAAMC,IAAN,UACbC,IAAIC,SADS,qBAHf,OAGGxJ,EAHH,OAMHyJ,QAAQC,IAAI,CAAEW,yBAA0BrK,EAAIuG,OACxC+D,OAAiDrL,EAIjDe,EAAIuG,WAA+BtH,IAAvBe,EAAIuG,KAAKgE,YACvBD,EAAetK,EAAIuG,MAErBkD,QAAQC,IAAI,CAAEY,aAActK,EAAIuG,OAEhC2C,EAAqC,CACnCtK,KAAMiL,IAAYQ,yBAClBP,QAASQ,GAA8B,SAEzCrB,GAAS,EAAO,GAAIqB,GAA8B,QApB/C,kDAsBHb,QAAQM,MAAM,CAAEA,MAAOC,YAAY,EAAD,MAClCf,GAAS,EAAOe,YAAY,EAAD,KAvBxB,0DAAP,uDA6BWQ,EAAqB,SAACvB,GAEjC,OADAA,GAAS,EAAM,IACf,uCAAO,WAAOC,GAAP,iBAAAC,EAAA,sEAEHC,cAFG,SAGeC,IAAMC,IAAN,UACbC,IAAIC,SADS,cAHf,OAGGxJ,EAHH,OAMHyJ,QAAQC,IAAI,CAAEe,sBAAuBzK,EAAIuG,OACrCmE,EAAuC,GACxB,MAAf1K,EAAIK,QAEW,OAAbL,EAAIuG,MAAiBvG,EAAIuG,KAAKnG,OAAS,IACzCsK,EAAe1K,EAAIuG,MAGvB2C,EAAmC,CACjCtK,KAAMiL,IAAYY,sBAClBX,QAASY,IAEXzB,GAAS,EAAO,GAAIyB,GAlBjB,kDAoBHjB,QAAQM,MAAM,CAAEA,MAAOC,YAAY,EAAD,MAClCf,GAAS,EAAOe,YAAY,EAAD,KArBxB,0DAAP,uDA2BWW,EAAoB,SAC/BpE,GAEA,MAAO,CACL3H,KAAMiL,IAAYe,oBAClBd,QAASvD,IAKAsE,EAAoB,SAC/BtE,GAEA,MAAO,CACL3H,KAAMiL,IAAYiB,oBAClBhB,QAASvD,IAKAwE,EAAoB,SAC/BxE,GAEA,MAAO,CACL3H,KAAMiL,IAAYmB,mBAClBlB,QAASvD,IAKA0E,EAAoB,SAAC1E,GAChC,MAAO,CACL3H,KAAMiL,IAAYqB,oBAClBpB,QAASvD,IAKA4E,EAAwB,SACnC5E,GAEA,MAAO,CACL3H,KAAMiL,IAAYuB,wBAClBtB,QAASvD,IAKA8E,EAAwB,SAACpC,GAEpC,OADAA,GAAS,EAAM,IACf,uCAAO,WAAOC,GAAP,iBAAAC,EAAA,sEAEHC,cAFG,SAGeC,IAAMC,IAAN,UACbC,IAAI+B,UADS,wBAHf,OAGGtL,EAHH,OAMHyJ,QAAQC,IAAI,CAAEe,sBAAuBzK,EAAIuG,OACrCmE,EAA2C,GAC5B,MAAf1K,EAAIK,QAEW,OAAbL,EAAIuG,MAAiBvG,EAAIuG,KAAKnG,OAAS,IACzCsK,EAAe1K,EAAIuG,MAGvBkD,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAE2B,sBAAuBrL,IACrCyJ,QAAQC,IAAI,wCACZR,EAAsC,CACpCtK,KAAMiL,IAAY0B,yBAClBzB,QAASY,IAEXzB,GAAS,EAAO,GAAIyB,GArBjB,kDAuBHjB,QAAQM,MAAM,CAAEA,MAAOC,YAAY,EAAD,MAClCf,GAAS,EAAOe,YAAY,EAAD,KAxBxB,0DAAP,uDA8BWwB,EAAwB,SACnCjF,GAEA,MAAO,CACL3H,KAAMiL,IAAY4B,wBAClB3B,QAASvD,IAKAmF,EAA4B,SACvCnF,GAEA,MAAO,CACL3H,KAAMiL,IAAY8B,4BAClB7B,QAASvD,IAKAqF,EAAwB,SACnCrF,GAEA,MAAO,CACL3H,KAAMiL,IAAYgC,wBAClB/B,QAASvD,IAKAuF,EAA2B,SAAC7C,GAEvC,OADAA,GAAS,EAAM,IACf,uCAAO,WAAOC,GAAP,iBAAAC,EAAA,sEAEHC,cAFG,SAGeC,IAAMC,IAAN,UACbC,IAAI+B,UADS,2BAHf,OAGGtL,EAHH,OAMHyJ,QAAQC,IAAI,CAAEqC,4BAA6B/L,EAAIuG,OAC3C+D,OAAqDrL,EAIrDe,EAAIuG,OACN+D,EAAetK,EAAIuG,MAErBkD,QAAQC,IAAI,CAAEY,aAActK,EAAIuG,OAEhC2C,EAAyC,CACvCtK,KAAMiL,IAAYkC,4BAClBjC,QAASQ,GAA8B,SAEzCrB,GAAS,EAAO,GAAIqB,GAA8B,QApB/C,kDAsBHb,QAAQM,MAAM,CAAEA,MAAOC,YAAY,EAAD,MAClCf,GAAS,EAAOe,YAAY,EAAD,KAvBxB,0DAAP,wD,skBClTWgC,EAAsB,WACjC,8CAAO,WAAO9C,GAAP,eAAAC,EAAA,sEAEHC,cAFG,SAGeC,IAAMC,IAAN,UAAaC,IAAI0C,KAAjB,oBAHf,OAGGjM,EAHH,OAIHyJ,QAAQC,IAAI,CAAEwC,YAAalM,IAC3BkJ,EAAoC,CAClCtK,KAAMiL,IAAYsC,sBAClBrC,QAAS9J,EAAIuG,OAPZ,gDAUHkD,QAAQM,MAAM,CAAEA,MAAOC,YAAY,EAAD,MAV/B,yDAAP,uDAeWoC,EAAyB,SAAC7F,GACrC,8CAAO,WAAO2C,GAAP,SAAAC,EAAA,sDACLD,EAAuC,CACrCtK,KAAMiL,IAAYwC,yBAClBvC,QAASvD,IAHN,2CAAP,uDAQW+F,EAAyB,SAAC/F,GACrC,8CAAO,WAAO2C,GAAP,SAAAC,EAAA,sDACLD,EAAuC,CACrCtK,KAAMiL,IAAY0C,yBAClBzC,QAASvD,IAHN,2CAAP,uDAQWiG,EAAyB,SAACjG,GACrC,8CAAO,WAAO2C,GAAP,SAAAC,EAAA,sDACLD,EAAuC,CACrCtK,KAAMiL,IAAY4C,yBAClB3C,QAASvD,IAHN,2CAAP,uDASWmG,EAAyB,WACpC,8CAAO,WAAOxD,GAAP,eAAAC,EAAA,sEAEHC,cAFG,SAGeC,IAAMC,IAAN,UACbC,IAAI0C,KADS,uBAHf,OAGGjM,EAHH,OAMHyJ,QAAQC,IAAI,CAAEiD,eAAgB3M,IAC9BkJ,EAAuC,CACrCtK,KAAMiL,IAAY+C,0BAClB9C,QAAS9J,EAAIuG,OATZ,gDAaHkD,QAAQC,IAAI,CAAEmD,uBAAuB,EAAD,KAbjC,yDAAP,uDAkBWC,EAA4B,SACvCvG,GAEA,8CAAO,WAAO2C,GAAP,SAAAC,EAAA,sDACLD,EAA0C,CACxCtK,KAAMiL,IAAYkD,6BAClBjD,QAASvD,IAHN,2CAAP,uDAQWyG,EAA4B,SACvCzG,GAEA,8CAAO,WAAO2C,GAAP,SAAAC,EAAA,sDACLD,EAA0C,CACxCtK,KAAMiL,IAAYoD,6BAClBnD,QAASvD,IAHN,2CAAP,uDAQW2G,EAA4B,SAAC3G,GACxC,8CAAO,WAAO2C,GAAP,SAAAC,EAAA,sDACLD,EAA0C,CACxCtK,KAAMiL,IAAYsD,6BAClBrD,QAASvD,IAHN,2CAAP,uDASW6G,EAAoB,WAC/B,8CAAO,WAAOlE,GAAP,eAAAC,EAAA,sEAEHC,cAFG,SAGeC,IAAMC,IAAN,UACbC,IAAI0C,KADS,yBAHf,OAGGjM,EAHH,OAMHyJ,QAAQC,IAAI,CAAE2D,UAAWrN,IACzBkJ,EAAkC,CAChCtK,KAAMiL,IAAYyD,oBAClBxD,QAAS9J,EAAIuG,OATZ,gDAaHkD,QAAQC,IAAI,CAAEmD,uBAAuB,EAAD,KAbjC,yDAAP,uDAkBWU,EAAuB,SAAChH,GACnC,8CAAO,WAAO2C,GAAP,SAAAC,EAAA,sDACLD,EAAqC,CACnCtK,KAAMiL,IAAY2D,uBAClB1D,QAASvD,IAHN,2CAAP,uDAQWkH,EAAuB,SAAClH,GAEnC,OADAkD,QAAQC,IAAI,CAAEgE,QAASnH,IACvB,uCAAO,WAAO2C,GAAP,SAAAC,EAAA,sDACLD,EAAqC,CACnCtK,KAAMiL,IAAY8D,uBAClB7D,QAASvD,IAHN,2CAAP,uDAQWqH,EAAuB,SAACrH,GACnC,8CAAO,WAAO2C,GAAP,SAAAC,EAAA,sDACLD,EAAqC,CACnCtK,KAAMiL,IAAYgE,uBAClB/D,QAASvD,IAHN,2CAAP,uDASIuH,EAAqB,SACzBC,GAEA,IAAIpK,EAAgC,GAChCqK,EAAqB,GAUzB,OATwCD,EAAevN,QAAO,SAACyN,GAC7D,OAAqB,OAAdA,QAAoChP,IAAdgP,KAEtBC,SAAQ,SAACD,GACXD,EAASG,SAASF,EAAUzL,WAC/BmB,EAAOyK,KAAKH,GACZD,EAASI,KAAKH,EAAUzL,aAGrBmB,GAGI0K,EAA2B,SACtCC,EACAC,EACAtF,GAEA,8CAAO,WAAOC,GAAP,eAAAC,EAAA,6DACLF,GAAS,EAAM,GAAI,MADd,SAGHG,cAHG,SAIeC,IAAMC,IAAN,UACbC,IAAIiF,YADS,kCAC4BF,EAD5B,YACgDC,IAL/D,OAIGvO,EAJH,OAQHyJ,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CACV2E,yBAA0BrO,EAC1B8N,mBAAoBA,EAAmB9N,EAAIuG,QAE7CkD,QAAQC,IAAI,wCACZR,EAAwC,CACtCtK,KAAMiL,IAAY4E,2BAClB3E,QAASgE,EAAmB9N,EAAIuG,QAGlC0C,GAAS,EAAO,GAAI6E,EAAmB9N,EAAIuG,OAnBxC,kDAqBHkD,QAAQC,IAAI,CAAE2E,yBAAyB,EAAD,KACtCpF,GAAS,EAAOe,YAAY,EAAD,IAAS,MAtBjC,0DAAP,uDA2BW0E,EAAiB,SAACnI,GAI7B,OAHAkD,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEgF,eAAgBnI,IAC9BkD,QAAQC,IAAI,wCACZ,uCAAO,WAAOR,GAAP,SAAAC,EAAA,sDACLD,EAA+B,CAC7BtK,KAAMiL,IAAY8E,gBAClB7E,QAASvD,IAHN,2CAAP,wD,uLClSIqI,E,kDACJ,WAAYrL,GAAkB,IAAD,8BAC3B,cAAMA,IAORsL,kBAAoB,kBAAM,EAAKtL,MAAMuL,eAAc,IARtB,EAS7BC,qBAAuB,kBAAM,EAAKxL,MAAMuL,eAAc,IANpD,EAAKE,MAAQ,CACX3H,SAAS,GAJgB,E,0CAW7B,WAGE,IAAwB,IAFA4H,KAAK1L,MAAM2L,KAAKC,gBAGtC,OAAO,KAGT,IAAMC,EAAYH,KAAK1L,MAAM8L,OAAOC,WACpC,OACE,qBACEtJ,UAAS,2DACO,IAAdoJ,EAAqB,sBAAwB,uBADtC,kGADX,SAKGH,KAAK1L,MAAMgM,e,GA1BUC,IAAMC,WAuCvBC,EAAiBC,aAPN,SAAC,GAIvB,MAAO,CAAET,KADuC,EAFhDA,KAGqBG,OAD2B,EADhDA,UAKqD,CACrDO,eACAd,oBAF4Ba,CAG3Bf,GAwCUiB,EAA2C,SAAC,GAKpC,IAAD,IAJlBC,aAIkB,MAJV,GAIU,MAHlBC,YAGkB,MAHXC,IAGW,MAFlBC,cAEkB,aADlBC,aACkB,MADV,EACU,EACZC,EAAcJ,EACpB,OACE,0BACE/J,UAAS,WACI,IAAXiK,EACI,mCACA,4BAHG,+HADX,UAOE,0BAASjK,UAAU,SAAnB,UACE,cAACmK,EAAD,CAAanK,UAAU,8BACvB,+BAAO8J,OAGRI,EAAQ,EACP,sBAAMlK,UAAU,0DAAhB,SACGkK,IAED,U,+WC2BKP,cAAQ,KAAM,GAAdA,EAzF6C,SAACpM,GAC3D,MAAsCW,mBAAiB,IAAvD,mBAAOkM,EAAP,KAAoBC,EAApB,KAEA,OACE,oCAEE,sBAAKrK,UAAU,gCAAf,UACE,cAAC,KAAD,CAAUA,UAAU,0BACpB,uBACEpH,KAAK,OACLwH,YAAY,SACZJ,UAAU,qFACVK,SAAU,SAACC,GAAD,OAAO+J,EAAe/J,EAAEY,OAAOC,QACzCA,MAAOiJ,EACPhJ,SACwB,OAAtB7D,EAAM+M,cACNC,EACEhN,EAAMiN,SACNjN,EAAMkN,cAAc5N,gBACpBU,EAAM+M,YAAYI,OAAOC,OAM/B,wBACE3K,UAAU,4EACVpH,KAAK,SACLoJ,QAAS,WACPzE,EAAMqN,oBAAmB,GACzBrN,EAAMsN,gBAAgB,KAL1B,sBAWwC,IAE1C,qBAAK7K,UAAU,4DAAf,SACGzC,EAAM+M,YACLC,EACEhN,EAAMiN,SACNjN,EAAMkN,cAAc5N,gBACpBU,EAAM+M,YAAYI,OAAOC,MAEzB,sBAAK3K,UAAU,iEAAf,UACE,qBACEA,UAAU,iCACVgC,QAAS,WACPzE,EAAMqN,oBAAmB,GACzBrN,EAAMuN,eAAevN,EAAM+M,YAAaI,OAAOC,MAJnD,SAOE,oBAAG3K,UAAU,mCAAb,uBACazC,EAAM+M,YAAYI,OAAOK,OAAOC,iBAG/C,wBACEpS,KAAK,SACLoH,UAAU,uGACVgC,QAAS,WACPzE,EAAMsN,gBAAgBtN,EAAM+M,YAAaI,OAAOC,MAJpD,qBAYJ,qBAAK3K,UAAU,kBAAf,SACE,mBAAGA,UAAU,mCAAb,iDC5ECiL,EAAmB,SAC9BC,EACAC,GAEA,IAAIC,EAAsB,GACxBC,EAAyB,GACzBC,EAAmB,GACnBC,EAAmB,GA+BrB,OA7BEJ,EAAIK,gBAAgBpR,OAAS,GAC7B8Q,EAAmBO,oBAKnBJ,EAHAE,EAAWL,EAAmBO,oBAAoBjR,QAChD,SAACkR,GAAD,OAAOA,EAAEC,6BAA+BR,EAAIK,mBAC5C,GAAG1B,MAGLqB,EAAIS,YAAYxR,OAAS,GACzB8Q,EAAmBW,mBAKnBT,EAHAG,EAAWL,EAAmBW,iBAAiBrR,QAC7C,SAACkR,GAAD,OAAOA,EAAEI,0BAA4BX,EAAIS,eACzC,GAAG9B,OAILqB,EAAIY,2BACJZ,EAAIY,0BAA0BC,6BAA6B5R,OAAS,GACpE8Q,EAAmBe,iBAEnBxI,QAAQC,IAAI,CAAEyH,QAKdI,GAAY,QAJZD,EAAWJ,EAAmBe,eAAezR,QAC3C,SAACkR,GAAD,aACEA,EAAEf,OAAF,UAAUQ,EAAIY,iCAAd,aAAU,EAA+BC,iCAC3C,GAAGlC,QAIA,CACLoC,SAAUd,EACVe,aAAcd,EACde,MAAOd,EACPe,KAAMd,IAIGhB,EAAiB,SAC5B+B,EACAC,EACAC,GAEA,OACEF,EAASxT,MACP,SAAC2T,GAAD,OACEA,EAAKF,YAAcA,GAAaE,EAAKC,iBAAmBF,MAmD1DG,E,kDACJ,WAAYpP,GAAwB,IAAD,8BACjC,cAAMA,IAoBRqP,WAAa,SAAC5D,GACZ,EAAK6D,SAAS,CAAExL,QAAS2H,KAtBQ,EAyBnC8D,eAAiB,SAAC9D,GAChB,EAAK6D,SAAS,CAAEE,YAAa/D,KA1BI,EA6BnCgE,aAAe,SACbzM,GAKA,EAAKsM,SAAS,CAAEI,UAAW1M,KAnCM,EAsCnC2M,cAAgB,SAAC3M,GACf,EAAKsM,SAAS,CAAEM,WAAY5M,KAvCK,EA0CnCuK,eAAiB,SAACvK,GAChB,EAAKsM,SAAS,CAAEO,YAAa7M,KA3CI,EA8CnCsK,gBAAkB,SAACtK,GACjB,EAAKsM,SAAS,CAAEQ,aAAc9M,KA/CG,EAkDnCqK,mBAAqB,SAACrK,GACpB,EAAKsM,SAAS,CAAES,gBAAiB/M,KAnDA,EAsDnCgN,qBAAuB,SAAChN,GACtB,EAAKsM,SAAS,CAAEW,kBAAmBjN,KAvDF,EA0DnCkN,eAAiB,SAACtM,GAChB,EAAK0L,SAAS,CAAEa,YAAavM,KA3DI,EA8DnCwM,gBAAkB,SAACpN,GACjB,EAAKsM,SAAS,CAAEe,aAAcrN,KA/DG,EAkEnCsN,gBAAkB,SAChBC,EACA5J,GAEA,IAAI3D,EACJ,GAAI2D,IAAa6J,IAAcvF,aAI7B,IAHAjI,EAAOuN,EAAYE,MAAMlV,MACvB,SAAC2T,GAAD,OAAUA,EAAKwB,WAAaF,IAAcvF,iBAEI,SAApC0F,YAAaJ,EAAavN,GACpC,OAAO,OAEJ,GAAI2D,IAAa6J,IAAcI,qBAIpC,IAHA5N,EAAOuN,EAAYE,MAAMlV,MACvB,SAAC2T,GAAD,OAAUA,EAAKwB,WAAaF,IAAcI,yBAEI,SAApCD,YAAaJ,EAAavN,GACpC,OAAO,OAEJ,GAAI2D,IAAa6J,IAAcK,qBACpC7N,EAAOuN,EAAYE,MAAMlV,MACvB,SAAC2T,GAAD,OAAUA,EAAKwB,WAAaF,IAAcK,wBAEI,SAApCF,YAAaJ,EAAavN,GACpC,OAAO,EAGX,OAAO,GA7F0B,EAgGnC8N,iBAAmB,SAACC,GAClB,IAAI3Q,EAAiB,GACrB,OAAQ2Q,GACN,KAAKP,IAAcvF,YACjB7K,EAAS,cACT,MACF,KAAKoQ,IAAcI,oBACjBxQ,EAAS,WACT,MACF,KAAKoQ,IAAcQ,YACjB5Q,EAAS,OACT,MACF,KAAKoQ,IAAcS,kBACjB7Q,EAAS,oBACT,MACF,KAAKoQ,IAAcK,mBACjBzQ,EAAS,YACT,MACF,QACEA,EAAS,GAIb,OAAOA,GAvH0B,EA0HnC8Q,gBAAkB,SAChBC,EACAlS,GAEA,EAAKe,MAAMoR,aACTD,EAAkB7R,gBAClBL,GACA,SAACnC,EAAiBC,EAAaiG,GAC7B,EAAKqM,WAAWvS,IACXA,GAAUC,EAAIF,QACjB,EAAKmD,MAAMqR,eAAe,CACxB9E,MAAOxP,EACPuU,MAAOC,IAAgBC,SAGvBxO,IACFkD,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAE+K,gBAAiBlO,IAC/BkD,QAAQC,IAAI,6CA5Ie,EAkJnCmF,kBAAoB,WAC0B,OAAxC,EAAKtL,MAAM2L,KAAK8F,qBAClB,EAAKzR,MAAMqR,eAAe,CACxB9E,MAAO,4BACP+E,MAAOC,IAAgBC,SAEzB,EAAKxR,MAAM0R,cAAa,GACxB,EAAKpC,SAAS,CACZO,YAAa,GACb8B,cAAe,KACfC,gBAAiB,GACjBvB,aAAc,GACdN,iBAAiB,EACjB8B,SAAU,UACV/B,aAAc,GACdJ,UAAW,SAGuC,OAAhD,EAAK1P,MAAM8R,gBAAgBxD,kBAC7B,EAAKtO,MAAMyI,sBAE0C,OAAnD,EAAKzI,MAAM8R,gBAAgB5D,qBAC7B,EAAKlO,MAAMmJ,yBAEqC,OAA9C,EAAKnJ,MAAM8R,gBAAgBpD,gBAC7B,EAAK1O,MAAM6J,oBAE4B,OAArC,EAAK7J,MAAM+R,SAASC,cACtB,EAAKhS,MAAMiS,iBAAgB,SAACnV,EAAiBC,GAC3C,EAAKsS,WAAWvS,GACXA,GACCC,EAAIF,OAAS,GACf,EAAKmD,MAAMqR,eAAe,CACxB9E,MAAOxP,EACPuU,MAAOC,IAAgBC,cApLF,EA6LnCU,gBAAkB,SAChBC,EACAC,GAEA,OAAOD,EAAUlV,QAAO,SAACiS,GAAD,OAAUA,EAAKkD,SAAWA,KAAQ,IAjMzB,EAoMnCC,mBAAqB,SACnBC,EACAC,GAEA,OAAOD,EAAarV,QAClB,SAACiS,GAAD,OAAUA,EAAKqD,iBAAmBA,KAClC,IA1M+B,EA6MnCC,YAAc,SACZC,EACAC,GAEA,OAAOD,EAAMlX,MAAK,SAAC2T,GAAD,OAAUA,EAAKwD,kBAAoBA,MAjNpB,EAoNnCC,cAAgB,SACdC,GAMA,IAAIxS,EAIA,CAAEyS,WAAY,GAAIC,WAAY,GAAIC,iBAAkB,IAwCxD,OArCE,EAAKtH,MAAMkG,gBAAkBnB,IAAcI,qBAC3C,EAAK5Q,MAAM+R,SAASiB,mBAEpB5S,EAAS,CACPyS,WAAY,EAAKX,gBACf,EAAKlS,MAAM+R,SAASiB,mBACpBJ,GACAK,aAAaC,QACfJ,WAAY,EAAKZ,gBACf,EAAKlS,MAAM+R,SAASiB,mBACpBJ,GACAK,aAAaE,kBACfJ,iBAAkB,EAAKb,gBACrB,EAAKlS,MAAM+R,SAASiB,mBACpBJ,GACAK,aAAahU,SAGjB,EAAKwM,MAAMkG,gBAAkBnB,IAAcvF,aAC3C,EAAKjL,MAAM+R,SAASqB,wBAEpBhT,EAAS,CACPyS,WAAY,EAAKR,mBACf,EAAKrS,MAAM+R,SAASqB,sBACpBR,GACAS,YAAYH,QACdJ,WAAY,EAAKT,mBACf,EAAKrS,MAAM+R,SAASqB,sBACpBR,GACAS,YAAYC,mBACdP,iBAAkB,EAAKV,mBACrB,EAAKrS,MAAM+R,SAASqB,sBACpBR,GACAS,YAAYpU,UAIXmB,GAvQ0B,EA0QnCmT,aAAe,SAACC,GACd,EAAKxT,MAAM0R,cAAa,GACxB,EAAKpC,SAAS,CACZO,YAAa,GACb8B,cAAe,KACfC,gBAAiB,GACjBvB,aAAc,GACdN,iBAAiB,EACjB8B,SAAU,UACV/B,aAAc,GACdJ,UAAW,QApRoB,EAwRnC+D,aAxRmC,uCAwRpB,WAAOxU,EAAiByG,GAAxB,eAAAE,EAAA,0DACT8N,YAAgBzU,GADP,yCAEJ,EAAKe,MAAMqR,eAAe,CAC/B9E,MAAO,sBACP+E,MAAOC,IAAgBC,UAJd,uBAQX3L,cARW,SASOC,IAAMC,IAAN,UACbC,IAAI0C,KADS,kBACKzJ,IAVZ,OASLxC,EATK,OAYXyJ,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEsN,aAAchX,IAC5ByJ,QAAQC,IAAI,wCACR1J,GACFiJ,EAASjJ,EAAIuG,MAhBJ,kDAmBXkD,QAAQM,MAAM,CAAEA,MAAK,OACrB,EAAKxG,MAAMqR,eAAe,CACxB9E,MAAO9F,YAAY,EAAD,IAClB6K,MAAOC,IAAgBC,SAtBd,0DAxRoB,0DAmTnCmC,cAAgB,SAAC5C,GACf,IAAI3Q,EAAiB,GAqDrB,OAnDE2Q,IAAcP,IAAcI,qBAC5B,EAAK5Q,MAAM+R,SAASiB,qBAEpB5S,EAASsN,EACP,EAAK1N,MAAM8R,gBACX,EAAKI,gBACH,EAAKlS,MAAM+R,SAASiB,mBACpB,EAAKvH,MAAMoE,cAEbf,MAGFiC,IAAcP,IAAcvF,aAC5B,EAAKjL,MAAM+R,SAASqB,wBAEpBhT,EAAS,EAAKiS,mBACZ,EAAKrS,MAAM+R,SAASqB,sBACpB,EAAK3H,MAAMoE,aACX+D,SAASC,gBAGX9C,IAAcP,IAAcQ,aAC5B,EAAKhR,MAAMhE,SACX,EAAKgE,MAAM+R,SAAS+B,UACpBC,YACE,EAAK/T,MAAM+R,SAAS+B,SACpB,EAAKrI,MAAMoE,cAEbmE,YACE,EAAKhU,MAAMhE,QACX+X,YACE,EAAK/T,MAAM+R,SAAS+B,SACpB,EAAKrI,MAAMoE,aACV1T,UAGLiE,EAAS4T,YACP,EAAKhU,MAAMhE,QACX+X,YACE,EAAK/T,MAAM+R,SAAS+B,SACpB,EAAKrI,MAAMoE,aACV1T,QACF8X,aAGHlD,IAAcP,IAAcK,oBAC5B,EAAKpF,MAAMsB,cAEX3M,EAAS,aAAe,EAAKqL,MAAMsB,YAAYI,OAAOK,OAAOC,aAGxDrN,GAzW0B,EA4WnC8T,kBAAoB,SAACnD,GACnB,IAAI3Q,EAAiB,GAWrB,OATE2Q,IAAcP,IAAcvF,aAC5B,EAAKjL,MAAM+R,SAASqB,wBAEpBhT,EAAS,EAAKiS,mBACZ,EAAKrS,MAAM+R,SAASqB,sBACpB,EAAK3H,MAAMoE,aACX+D,SAASO,uBAAuBA,wBAG7B/T,GAxX0B,EA2XnCgU,aA3XmC,uCA2XpB,WAAOrR,GAAP,2BAAA6C,EAAA,yDACb7C,EAAEsR,iBACG,EAAK5I,MAAMkG,cAFH,yCAGJ,EAAKlC,aAAa,CACvB3T,QAAS,aACTiB,IAAK,6BALI,WAQT2W,YAAgB,EAAKjI,MAAMoE,aARlB,yCASJ,EAAKJ,aAAa,CACvB3T,QAAS,aACTiB,IAAI,iBAAD,OAAmB,EAAK0O,MAAMkG,cAAc2C,oBAA5C,4BAXM,UAeR,EAAK7I,MAAM0E,YAfH,yCAgBJ,EAAKV,aAAa,CACvB3T,QAAS,eACTiB,IAAI,6CAlBK,WAsBT2W,YAAgB,EAAKjI,MAAM4E,cAtBlB,yCAuBJ,EAAKZ,aAAa,CACvB3T,QAAS,gBACTiB,IAAI,gCAzBK,UA6BR,EAAKiD,MAAM2L,KAAK8F,oBA7BR,0CA8BJ,EAAK9B,cAAL,6CA9BI,WAiCb,EAAKJ,gBAAe,GAChBgF,EAA8B,kBAC9BC,EAA6B,SAC7BC,EAA0B,GAC1BC,EAAyB,GACzBnI,EAAgB,EAAKoH,cAAc,EAAKlI,MAAMkG,eAC9CgD,EAAuB,EAAKT,kBAAkB,EAAKzI,MAAMkG,eAG3D,EAAKlG,MAAMkG,gBAAkBnB,IAAcQ,aACqB,WAAhE,EAAK2B,cAAc,EAAKlH,MAAMoE,aAAakD,iBA3ChC,kCA6CL,EAAKU,aACT,EAAKd,cAAc,EAAKlH,MAAMoE,aAAakD,kBAC3C,SAAC/P,GACCuR,EAAsBvR,EAAK4R,MAC3BJ,EACExR,EAAK6R,UAAUC,MAAQ,IAAM9R,EAAK6R,UAAUE,SAlDvC,eAuDT,EAAKtJ,MAAMkG,cAAkBnB,IAAcQ,YAvDlC,UA0FXnL,cA1FW,UA2FOC,IAAMkP,KAAN,UACbhP,IAAIC,SADS,gBAEhB,CACEkJ,eAAgB,EAAK1D,MAAMoE,YAC3Ba,SAAU,EAAKjF,MAAMkG,cACrBsD,KAAM,EAAKjV,MAAM2L,KAAKsJ,KAAKhW,QAC3B+P,UAAW,EAAKhP,MAAM2L,KAAK8F,oBAAoBnS,gBAC/C4V,sBAAuB,EAAKzJ,MAAM0E,YAAY1U,GAC9C0Z,OAAQ,EAAK1J,MAAM4E,aACnBwC,WACE,EAAKpH,MAAMkG,gBAAkBnB,IAAcQ,aAC3C,EAAKvF,MAAMkG,gBAAkBnB,IAAcK,mBACvC,SACA,EAAK8B,cAAc,EAAKlH,MAAMoE,aAAagD,WACjDC,WACE,EAAKrH,MAAMkG,gBAAkBnB,IAAcQ,aAC3C,EAAKvF,MAAMkG,gBAAkBnB,IAAcK,mBACvC,SACA,EAAK8B,cAAc,EAAKlH,MAAMoE,aAAaiD,WACjDC,iBACE,EAAKtH,MAAMkG,gBAAkBnB,IAAcQ,aAC3C,EAAKvF,MAAMkG,gBAAkBnB,IAAcK,mBACvC,GACA,EAAK8B,cAAc,EAAKlH,MAAMoE,aAAakD,iBACjDwB,sBACAC,qBACAC,kBACAC,iBACAnI,QACAoI,iBAxHO,QA2FLlY,EA3FK,OA2HXyJ,QAAQC,IAAI,CAAEiP,YAAa3Y,IACR,MAAfA,EAAIK,QAAiC,MAAfL,EAAIK,SAC5B,EAAKkD,MAAMoV,YAAY3Y,EAAIuG,MAC3B,EAAKhD,MAAMqR,eAAe,CACxB9E,MAAO,wBACP+E,MAAOC,IAAgB8D,UAEzB,EAAK9B,cAAa,IAlIT,mDAqIXrN,QAAQM,MAAM,CAAEA,MAAK,OACrB,EAAKxG,MAAMqR,eAAe,CACxB9E,MAAO9F,YAAY,EAAD,IAClB6K,MAAOC,IAAgBC,SAxId,QA2Ib,EAAKjC,gBAAe,GA3IP,2DA3XoB,wDAygBnC+F,gBAAkB,SAACC,GACjB,EAAKjG,SAAS,CACZqC,cAAe+B,YAAgB6B,GAC3B,KACCA,IAGFA,IAAgC/E,IAAcvF,aACC,OAA9C,EAAKjL,MAAM+R,SAASqB,uBACtB,EAAKpT,MAAMwV,0BACT,EAAKxV,MAAM2L,KAAKsJ,KAAKhW,SACrB,SACEnC,EACAC,EACAiG,GAEA,EAAKqM,WAAWvS,GACXA,GACCC,EAAIF,OAAS,GACf,EAAKmD,MAAMqR,eAAe,CACxB9E,MAAOxP,EACPuU,MAAOC,IAAgBC,YAQV,OAAvB,EAAKxR,MAAMhE,SACoB,IAA9B,EAAKgE,MAAMhE,QAAQa,QAAgB,EAAK4O,MAAM3H,SAE/C,EAAK9D,MAAMyV,YAAY,EAAKpG,YAC5B,EAAKA,YAAW,IAEhB,EAAKA,YAAW,IAERkG,IAAgC/E,IAAcQ,YAE/B,OAAvB,EAAKhR,MAAMhE,SACoB,IAA9B,EAAKgE,MAAMhE,QAAQa,QAAgB,EAAK4O,MAAM3H,SAE/C,EAAK9D,MAAMyV,YAAY,EAAKpG,YAC5B,EAAKA,YAAW,IAEhB,EAAKA,YAAW,GAGjBkG,IAAgC/E,IAAcI,oBAEA,OAA3C,EAAK5Q,MAAM+R,SAASiB,oBACtB,EAAKhT,MAAM0V,wBACT,SAAC5Y,EAAiBC,EAAaiG,GAC7B,EAAKqM,WAAWvS,GACXA,GACCC,EAAIF,OAAS,GACf,EAAKmD,MAAMqR,eAAe,CACxB9E,MAAOxP,EACPuU,MAAOC,IAAgBC,YAQlC+D,IAAgC/E,IAAcK,oBAEP,OAApC,EAAK7Q,MAAM+R,SAAShF,aACtB,EAAK/M,MAAM2V,eACT,EAAK3V,MAAM2L,KAAKsJ,KAAKhW,SACrB,SACEnC,EACAC,EACAiG,GAEA,EAAKqM,WAAWvS,GACXA,GACCC,EAAIF,OAAS,GACf,EAAKmD,MAAMqR,eAAe,CACxB9E,MAAOxP,EACPuU,MAAOC,IAAgBC,SAIzBxO,GACF,EAAKsM,SAAS,CAAEvC,YAAa/J,QA/lBN,EAumBnC4S,wBAA0B,SAACjE,GACzB,IAAIvR,EAAiB,GAErB,OAAQuR,GACN,KAAKnB,IAAcvF,YACjB7K,EAAM,0CACN,MACF,KAAKoQ,IAAcI,oBACjBxQ,EAAM,uCACN,MACF,KAAKoQ,IAAcQ,YACjB5Q,EAAM,mCACN,MACF,KAAKoQ,IAAcS,kBACjB7Q,EAAM,gDACN,MACF,KAAKoQ,IAAcK,mBACjBzQ,EAAM,wCACN,MACF,QACEA,EAAS,mCAIb,OAAOA,GA5nBP,EAAKqL,MAAQ,CACX3H,SAAS,EACT0L,aAAa,EACbE,UAAW,KACXiC,cAAe,KACfC,gBAAiB,GACjBvB,aAAc,GACdR,YAAa,GACbE,iBAAiB,EACjBD,aAAc,GACd+B,SAAU,UACVjC,WAAY,KACZ7C,YAAa,EAAK/M,MAAM+R,SAAShF,YACjCkD,mBAAmB,EACnBE,YAAa,MAjBkB,E,0CAkoBnC,WAAU,IAAD,OACP,OAC0C,OAAxCzE,KAAK1L,MAAM2L,KAAK8F,qBACiB,OAAjC/F,KAAK1L,MAAM+R,SAAS9E,SAEb,KAIP,qBAAKxK,UAAU,OAAf,SACGiJ,KAAK1L,MAAM6V,WACV,eAACC,EAAA,EAAD,CACEC,UAAU,EACVzE,MAAO0E,IAAOC,QACdC,MAAO,YACJ,EAAKzK,MAAM+D,aACV,EAAK/D,MAAMqE,aAAajT,QAAU,GAClC,EAAK0W,gBACN,EAAK9H,MAAM+D,aACV,EAAK/D,MAAMqE,aAAajT,OAAS,GACjC,EAAKyQ,gBAAgB,KAEzB6I,cAAc,EACdC,eAAe,EACf7J,MACE,sBAAK9J,UAAU,0CAAf,UACGiJ,KAAKD,MAAMqE,aAAajT,QAAU,GAAK,gBACvC6O,KAAKD,MAAMqE,aAAajT,OAAS,GAChC6O,KAAKD,MAAMkG,gBACTnB,IAAcI,qBAChB,mBACDlF,KAAKD,MAAMqE,aAAajT,OAAS,GAChC6O,KAAKD,MAAMkG,gBAAkBnB,IAAcvF,aAC3C,yBAGNoL,eACE3K,KAAKD,MAAMqE,aAAajT,OAAS,EAC7ByZ,IAAUC,WACVD,IAAUE,OAEhBlS,QAAS,CAAEiI,OAAO,EAAMkK,MAAM,EAAOC,QAAQ,GA9B/C,UAiCGhL,KAAKD,MAAMqE,aAAajT,QAAU,GACjC,sBAAM8Z,SAAU,SAAC5T,GAAD,OAAO,EAAKqR,aAAarR,IAAzC,SACE,sBAAKN,UAAU,YAAf,UACGiJ,KAAKD,MAAMmE,YACV,qBACEnN,UAAU,+BACVgC,QAAS,kBAAM,EAAKkL,cAAc,OAFpC,SAIGjE,KAAKD,MAAMmE,aAGhB,sBAAKnN,UAAU,qCAAf,UAEE,sBAAKA,UAAU,qBAAf,UACE,+CACA,yBACEA,UAAS,+DACiB,UAAxBiJ,KAAKD,MAAMoG,UACX,qBAFO,YAIPnG,KAAKD,MAAMiE,WACsB,eAAjChE,KAAKD,MAAMiE,UAAU5T,QACjB,iBACA,kBAPG,aASTgH,SAAU,SAACC,GACT,EAAKuS,gBAAgBvS,EAAEY,OAAOC,OAC9B,EAAK2J,eAAe,IACpB,EAAK9B,MAAMiE,WACwB,eAAjC,EAAKjE,MAAMiE,UAAU5T,SACrB,EAAK2T,aAAa,OAEtB7L,MACE8H,KAAKD,MAAMkG,cACPjG,KAAKD,MAAMkG,cACX,GAEN9N,SACE6H,KAAKD,MAAM+D,aACa,UAAxB9D,KAAKD,MAAMoG,SAxBf,UA2BE,wBAAQjO,MAAM,GAAd,+BACCgT,OAAOC,OAAOrG,KAAelO,KAAI,SAAC4M,EAAM7K,GAAP,OAChC,wBACET,MAAOsL,EAEPzM,UAAS,UACPyM,IAASsB,IAAcS,mBACvB/B,IAASsB,IAAcK,mBACnB,SACA,SAPR,SAUGiG,YACC5H,EAAKoF,oBAAoByC,QAAQ,KAAM,OATpC1S,EAAQ6K,SAclBxD,KAAKD,MAAMiE,WACuB,eAAjChE,KAAKD,MAAMiE,UAAU5T,SACnB,sBAAM2G,UAAU,eAAhB,SACGiJ,KAAKD,MAAMiE,UAAU3S,SAO9B,sBAAK0F,UAAU,qBAAf,UACE,gCACGiJ,KAAKkK,wBAAwBlK,KAAKD,MAAMkG,iBAE3C,sBACElP,UAAS,sCACiB,UAAxBiJ,KAAKD,MAAMoG,SACP,kBACA,gCAHG,2BAKPnG,KAAKD,MAAMsE,gBAAkB,OAAS,OAL/B,YAOPrE,KAAKD,MAAMiE,WACsB,eAAjChE,KAAKD,MAAMiE,UAAU5T,QACjB,iBACA,GAVG,qBAYP4P,KAAKD,MAAM3H,QACP,iBACA4H,KAAKD,MAAMkG,gBACVjG,KAAKD,MAAMsE,iBACY,UAAxBrE,KAAKD,MAAMoG,SACX,kBACCnG,KAAKD,MAAMsE,iBACZ,sBAENxD,MACGb,KAAKD,MAAMkG,cAER,GADA,2BAGNlN,QAAS,YACN,EAAKgH,MAAM3H,SACc,YAAxB,EAAK2H,MAAMoG,UACX,EAAKpG,MAAMkG,gBACV,EAAKlG,MAAMsE,iBACZ,EAAK1C,oBAAmB,IACzB,EAAK5B,MAAM3H,SACV,EAAK2H,MAAMiE,WACsB,eAAjC,EAAKjE,MAAMiE,UAAU5T,SACrB,EAAK2T,aAAa,OApCxB,UAwCG/D,KAAKD,MAAMoE,YAAYhT,OAAS,GACjC6O,KAAKD,MAAMkG,gBACVjG,KAAKD,MAAMsE,gBACV,mBAAGtN,UAAU,YAAb,SACGiJ,KAAKiI,cAAcjI,KAAKD,MAAMkG,kBAGhCjG,KAAKD,MAAMsE,iBACV,oBAAGtN,UAAU,YAAb,yBACe,IACZiJ,KAAKD,MAAMkG,eACVjG,KAAKD,MAAMkG,cACR2C,oBACAyC,QAAQ,KAAM,QAOxBrL,KAAKD,MAAMsE,iBACVrE,KAAKD,MAAMkG,gBACTnB,IAAcI,qBAChBlF,KAAK1L,MAAM+R,SAASiB,oBACpBtH,KAAK1L,MAAM+R,SAAS9E,UACpBvB,KAAK1L,MAAM2L,KAAK8F,qBACd,cAACuF,EAAA,EAAD,CACE3J,mBAAoB3B,KAAK2B,mBACzBE,eAAgB7B,KAAK6B,eACrBD,gBAAiB5B,KAAK4B,gBACtBuC,YAAanE,KAAKD,MAAMoE,YACxBC,aAAcpE,KAAKD,MAAMqE,aACzBkD,mBACEtH,KAAK1L,MAAM+R,SAASiB,mBAEtBrF,mBAAoBjC,KAAK1L,MAAM8R,gBAC/B7E,SAAUvB,KAAK1L,MAAM+R,SAAS9E,SAC9BC,cACExB,KAAK1L,MAAM2L,KAAK8F,sBAOvB/F,KAAKD,MAAMsE,iBACVrE,KAAKD,MAAMkG,gBACTnB,IAAcvF,aAChBS,KAAK1L,MAAM+R,SAASqB,uBACpB1H,KAAK1L,MAAM+R,SAAS9E,UACpBvB,KAAK1L,MAAM2L,KAAK8F,qBACd,cAACwF,EAAA,EAAD,CACE5J,mBAAoB3B,KAAK2B,mBACzBE,eAAgB7B,KAAK6B,eACrBD,gBAAiB5B,KAAK4B,gBACtBuC,YAAanE,KAAKD,MAAMoE,YACxBC,aAAcpE,KAAKD,MAAMqE,aACzBsD,sBACE1H,KAAK1L,MAAM+R,SAASqB,sBAEtBnG,SAAUvB,KAAK1L,MAAM+R,SAAS9E,SAC9BC,cACExB,KAAK1L,MAAM2L,KAAK8F,sBAOvB/F,KAAKD,MAAMsE,iBACVrE,KAAKD,MAAMkG,gBACTnB,IAAcQ,aAChBtF,KAAK1L,MAAM+R,SAAS+B,UACpBpI,KAAK1L,MAAM+R,SAAS9E,UACpBvB,KAAK1L,MAAM2L,KAAK8F,qBACd,cAACyF,EAAA,EAAD,CACE7J,mBAAoB3B,KAAK2B,mBACzBE,eAAgB7B,KAAK6B,eACrBD,gBAAiB5B,KAAK4B,gBACtBuC,YAAanE,KAAKD,MAAMoE,YACxBC,aAAcpE,KAAKD,MAAMqE,aACzBqH,iBAAkBzL,KAAK1L,MAAM+R,SAAS+B,SACtC7G,SAAUvB,KAAK1L,MAAM+R,SAAS9E,SAC9BC,cACExB,KAAK1L,MAAM2L,KAAK8F,sBAOvB/F,KAAKD,MAAMsE,iBACVrE,KAAKD,MAAMkG,gBACTnB,IAAcK,oBAChBnF,KAAK1L,MAAM+R,SAAS9E,UACpBvB,KAAK1L,MAAM2L,KAAK8F,qBACd,cAAC,EAAD,CACEpE,mBAAoB3B,KAAK2B,mBACzBE,eAAgB7B,KAAK6B,eACrBD,gBAAiB5B,KAAK4B,gBACtBuC,YAAanE,KAAKD,MAAMoE,YACxBC,aAAcpE,KAAKD,MAAMqE,aACzB7C,SAAUvB,KAAK1L,MAAM+R,SAAS9E,SAC9BC,cACExB,KAAK1L,MAAM2L,KAAK8F,oBAElB1E,YAAarB,KAAKD,MAAMsB,iBAK/BrB,KAAKD,MAAMiE,WACuB,eAAjChE,KAAKD,MAAMiE,UAAU5T,SACnB,sBAAM2G,UAAU,eAAhB,SACGiJ,KAAKD,MAAMiE,UAAU3S,SAO9B,sBAAK0F,UAAU,qBAAf,UACE,gEACA,sBACEA,UAAS,qEACPiJ,KAAKD,MAAMwE,kBAAoB,OAAS,SADjC,YAGPvE,KAAKD,MAAMiE,WACsB,iBAAjChE,KAAKD,MAAMiE,UAAU5T,QACjB,iBACA,GANG,qBAQ8B,OAArC4P,KAAK1L,MAAM+R,SAASC,aAChB,cACA,kBAENzF,MAAM,oCACN9H,QAAS,YACN,EAAKgH,MAAMwE,mBACV,EAAKX,SAAS,CAAEW,mBAAmB,IACrC,EAAKxE,MAAMiE,WACwB,iBAAjC,EAAKjE,MAAMiE,UAAU5T,SACrB,EAAK2T,aAAa,OAnBxB,UAuBG/D,KAAKD,MAAM0E,cACXzE,KAAKD,MAAMwE,kBACV,mBAAGxN,UAAU,YAAb,SACGiJ,KAAKD,MAAM0E,YAAYgF,UAGzBzJ,KAAKD,MAAMwE,mBACV,mBAAGxN,UAAU,YAAb,2BAMHiJ,KAAKD,MAAMwE,mBACVvE,KAAK1L,MAAM+R,SAASC,cAClB,cAACoF,EAAA,EAAD,CACEpH,qBAAsBtE,KAAKsE,qBAC3BE,eAAgBxE,KAAKwE,eACrBC,YAAazE,KAAKD,MAAM0E,YACxBkH,gBAAiB3L,KAAK1L,MAAM+R,SAASC,kBAK5CtG,KAAKD,MAAMiE,WACuB,iBAAjChE,KAAKD,MAAMiE,UAAU5T,SACnB,sBAAM2G,UAAU,eAAhB,SACGiJ,KAAKD,MAAMiE,UAAU3S,SAO9B,sBAAK0F,UAAU,gBAAf,UACE,4CACA,0BACEA,UAAS,kDACPiJ,KAAKD,MAAMiE,WACsB,kBAAjChE,KAAKD,MAAMiE,UAAU5T,QACjB,iBACA,kBAJG,aAMT+G,YAAW,gBACXN,MAAO,CAAE+U,OAAQ,QACjB1T,MAAO8H,KAAKD,MAAM4E,aAClBvN,SAAU,SAACC,GACT,EAAKqN,gBAAgBrN,EAAEY,OAAOC,OAC9B,EAAK6H,MAAMiE,WACwB,kBAAjC,EAAKjE,MAAMiE,UAAU5T,SACrB,EAAK2T,aAAa,OAEtBtM,KAAM,EACNU,SAAU6H,KAAKD,MAAM+D,cAEtB9D,KAAKD,MAAMiE,WACuB,kBAAjChE,KAAKD,MAAMiE,UAAU5T,SACnB,sBAAM2G,UAAU,eAAhB,SACGiJ,KAAKD,MAAMiE,UAAU3S,YAOhC,sBAAK0F,UAAU,4BAAf,UACE,wBACEgC,QAAS,kBAAM,EAAK8O,gBACpB9Q,UAAS,0EACPiJ,KAAKD,MAAM+D,aAAe,sBAE5BnU,KAAK,SACLwI,SAAU6H,KAAKD,MAAM+D,aAAe9D,KAAKD,MAAM3H,QANjD,kBAUA,wBACErB,UAAS,yEACPiJ,KAAKD,MAAM+D,aAAe,eAE5BnU,KAAK,SACLwI,SAAU6H,KAAKD,MAAM+D,aAAe9D,KAAKD,MAAM3H,QALjD,SAOG4H,KAAKD,MAAM+D,YAAc,aAAe,kBASlD9D,KAAKD,MAAMqE,aAAajT,OAAS,GAChC6O,KAAK1L,MAAM+R,SAASiB,oBACpBtH,KAAKD,MAAMkG,gBACTnB,IAAcI,qBACd,cAAC2G,EAAA,EAAD,CACEC,QAAS9L,KAAKwG,gBACZxG,KAAK1L,MAAM+R,SAASiB,mBACpBtH,KAAKD,MAAMqE,cAEbxC,gBAAiB5B,KAAK4B,gBACtBK,mBAAoBjC,KAAK1L,MAAM8R,gBAC/BzE,mBAAoB3B,KAAK2B,mBACzBE,eAAgB7B,KAAK6B,iBAM1B7B,KAAKD,MAAMqE,aAAajT,OAAS,GAChC6O,KAAK1L,MAAM+R,SAASqB,uBACpB1H,KAAKD,MAAMkG,gBAAkBnB,IAAcvF,aACzC,cAACwM,EAAA,EAAD,CACEC,gBAAiBhM,KAAK2G,mBACpB3G,KAAK1L,MAAM+R,SAASqB,sBACpB1H,KAAKD,MAAMqE,cAEbnC,mBAAoBjC,KAAK1L,MAAM8R,gBAC/BzE,mBAAoB3B,KAAK2B,mBACzBE,eAAgB7B,KAAK6B,eACrBD,gBAAiB5B,KAAK4B,kBAM3B5B,KAAKD,MAAMqE,aAAajT,OAAS,GAChC6O,KAAK1L,MAAM+R,SAAS+B,UACpBpI,KAAKD,MAAMkG,gBAAkBnB,IAAcQ,aAC3CtF,KAAK8G,YACH9G,KAAK1L,MAAM+R,SAAS+B,SACpBpI,KAAKD,MAAMqE,eAEX,cAAC6H,EAAA,EAAD,CACEC,gBACElM,KAAK8G,YACH9G,KAAK1L,MAAM+R,SAAS+B,SACpBpI,KAAKD,MAAMqE,cAGfzC,mBAAoB3B,KAAK2B,mBACzBE,eAAgB7B,KAAK6B,eACrBD,gBAAiB5B,KAAK4B,2B,GAlkChBpB,aAomCTE,iBAnBS,SAAC,GAWvB,MAAO,CACLT,KAFC,EATHA,KAYEmG,gBAHC,EARHjQ,SAYEkQ,SAJC,EAPHA,SAYE/V,QALC,EANHG,OAWkBH,WAIoB,CACtCyZ,iBACAoC,gBACA5F,oBACAb,iBACAuE,mBACAP,gBACA0C,qBACAtC,8BACAE,2BACAjN,wBACAU,2BACAU,sBACAwH,qBAbajF,CAcZgD,I,qUCzwCU2I,EAAmB,SAC9BC,GAEA,IAD4C,EACxCvb,EAA+C,GADP,cAEzBub,GAFyB,IAE5C,2BAA4B,CAAC,IAApBC,EAAmB,QAC1Bxb,EAAG,sBACEA,GADF,CAED,CACEhB,GAAIwc,EAAOxc,GACXmI,MAAOqU,EAAOrU,MACd9G,OAAQmb,EAAOnb,WARuB,8BAY5C,OAAOL,GAGIyb,EAAc,SACzBF,GAEA,IADuC,EACnCvb,EAA0C,GADP,cAEpBub,GAFoB,IAEvC,2BAA4B,CAAC,IAApBC,EAAmB,QAC1Bxb,EAAG,sBACEA,GADF,CAED,CACEhB,GAAIwc,EAAOxc,GACXmI,MAAOqU,EAAOrU,MACd9G,OAAQmb,EAAOnb,WARkB,8BAYvC,OAAOL,GAGI0b,EAAa,SACxBH,GAEA,IADsC,EAClCvb,EAAyC,GADP,cAEnBub,GAFmB,IAEtC,2BAA4B,CAAC,IAApBC,EAAmB,QAC1Bxb,EAAG,sBACEA,GADF,CAED,CACEhB,GAAIwc,EAAOxc,GACXmI,MAAOqU,EAAOrU,MACd9G,OAAQmb,EAAOnb,WARiB,8BAYtC,OAAOL,GAGI2b,EAAqB,SAChCJ,GAEA,IAD8C,EAC1Cvb,EAAiD,GADP,cAE3Bub,GAF2B,IAE9C,2BAA4B,CAAC,IAApBC,EAAmB,QAC1Bxb,EAAG,sBACEA,GADF,CAED,CACEhB,GAAIwc,EAAOxc,GACXmI,MAAOqU,EAAOrU,MACd9G,OAAQmb,EAAOnb,WARyB,8BAY9C,OAAOL,GAGI4b,EAAgB,SAC3BL,GAEA,IADyC,EACrCvb,EAA4C,GADP,cAEtBub,GAFsB,IAEzC,2BAA4B,CAAC,IAApBC,EAAmB,QAC1Bxb,EAAG,sBACEA,GADF,CAED,CACEhB,GAAIwc,EAAOxc,GACXmI,MAAOqU,EAAOrU,MACd9G,OAAQmb,EAAOnb,WARoB,8BAYzC,OAAOL,GAGI6b,EAAc,SACzBN,GAEA,IADuC,EACnCvb,EAA0C,GADP,cAEpBub,GAFoB,IAEvC,2BAA4B,CAAC,IAApBC,EAAmB,QAC1Bxb,EAAG,sBACEA,GADF,CAED,CACEhB,GAAIwc,EAAOxc,GACXmI,MAAOqU,EAAOrU,MACd9G,OAAQmb,EAAOnb,WARkB,8BAYvC,OAAOL,GAGI8b,EAA6B,SACxCP,GAEA,IADsD,EAClDvb,EAAyD,GADP,cAEnCub,GAFmC,IAEtD,2BAA4B,CAAC,IAApBC,EAAmB,QAC1Bxb,EAAG,sBACEA,GADF,CAED,CACEhB,GAAIwc,EAAOxc,GACXmI,MAAOqU,EAAOrU,MACd9G,OAAQmb,EAAOnb,WARiC,8BAYtD,OAAOL,GAGI+b,EAAU,SAACR,GACtB,IADyE,EACrEvb,EAAsC,GAD+B,cAEtDub,GAFsD,IAEzE,2BAA4B,CAAC,IAApBC,EAAmB,QAC1Bxb,EAAG,sBACEA,GADF,CAED,CACEhB,GAAIwc,EAAOxc,GACXmI,MAAOqU,EAAOrU,MACd9G,OAAQmb,EAAOnb,WARoD,8BAYzE,OAAOL,I,iCC/IT,gBAoCegc,IA/BmC,SAACzY,GACjD,IAAM0Y,EAAc,WAElB,IADA,IAAIC,EAAsB,GACjBtU,EAAQ,EAAGA,EAAQrE,EAAMoD,KAAMiB,IACtCsU,EAAU9N,KAAKxG,GAUjB,OARasU,EAAUrW,KAAI,SAACxG,GAC1B,OACE,oBAAI2G,UAAU,oCAAd,SACE,qBAAKA,UAAU,yGADsC3G,OAQ7D,OACE,qCACE,oBAAI2G,UAAU,2BAAd,SACGiW,KAD2C,KAG9C,oBAAIjW,UAAU,2BAAd,SACGiW,KAD2C,OAG9C,oBAAIjW,UAAU,2BAAd,SACGiW,KAD2C,a,iCC7BpD,wBAsBeE,IAnBG,WAChB,OACE,qBAAKnW,UAAU,OAAf,SACE,sBAAKA,UAAU,oHAAf,UACE,cAAC,IAAD,CAAeA,UAAU,yBACzB,sBAAKA,UAAU,4BAAf,UACE,sBAAMA,UAAU,sCAAhB,kCAGA,sBAAMA,UAAU,UAAhB,uG,iCCZV,kCA+EeoW,IAtEsC,SAAC7Y,GA8CpD,OACE,8BACE,cAAC,IAAD,CACEsD,QAAS,CACP,CAAE+B,YAAa,IAAKd,UAAW,OAAQD,QAAS,OAChD,CAAEe,YAAa,gBAAiBd,UAAW,OAAQD,QAAS,OAM5D,CAAEe,YAAa,WAAYd,UAAW,OAAQD,QAAS,OACvD,CAAEe,YAAa,SAAUd,UAAW,OAAQD,QAAS,QAGvDnB,KA5DY,WAChB,IAAIH,EAA4ChD,EAAM8Y,aAGtD,OAAoB,IAAhB9V,EAAKnG,OACA,CACL,oBAAc4F,UAAU,6CAAxB,SACE,oBAAIA,UAAU,kBAAkBsW,QAAS,EAAzC,4BADO,MAQN/V,EAAKV,KAAI,SAAC4M,EAAM7K,GAAP,OACd,qBAEE5B,UAAU,6CAFZ,UAIE,oBAAIA,UAAU,kCAAd,SAAiD4B,EAAQ,IACzD,oBAAI5B,UAAU,gBAAd,SACE,+BAAOyM,EAAK8J,sBAEd,oBAAIvW,UAAU,gBAAd,SACE,+BACGiR,YAAgBxE,EAAK+J,UAAY,eAAiB/J,EAAKgK,gBAG5D,oBAAIzW,UAAU,+BAAd,SACGiR,YAAgBxE,EAAK+J,UACpB/J,EAAKiK,qBACH,sBAAM1W,UAAU,kBAAhB,sBAEA,WAEAyM,EAAKkK,SACP,sBAAM3W,UAAU,kBAAhB,sBAEA,eAtBC4B,EAAQ6K,EAAK+J,cA6ClBtX,YAAY,EACZgB,QAAQ,EACRwB,QAAQ,a,iCCzEhB,0CA2CekV,IA9BqC,SAAC,GAM9C,IALLC,EAKI,EALJA,SACAC,EAII,EAJJA,SAII,IAHJC,eAGI,MAHM,QAGN,MAFJ/W,iBAEI,MAFQ,0IAER,MADJgX,gBACI,SAaJ,OACE,yBACEhV,QAAS,SAAC1B,GAAD,OAVO,SAAC2W,EAAgBH,GACnC,IACMI,EAAK,CAAEC,OAAQ,CAAE5W,KADZ6W,QAAWC,cAAcJ,IACDK,WAAY,CAAC,SAC1CC,EAAcH,QAAWF,EAAI,CAAEM,SAAU,OAAQ5e,KAAM,UACvD2H,EAAO,IAAIkX,KAAK,CAACF,GAAc,CAAE3e,KAPvC,oFAQA8e,SAAiBnX,EAAMuW,EAPH,SAYFa,CAAYd,EAAUC,IACtC9W,UAAWA,EAFb,UAIGgX,GAAY,cAAC,IAAD,IACZD,O,+GCtCQ,MAA0B,oCCGzCa,EAAQ,KAED,IAAMC,EAAa,SAAC1M,GACzB,IAAM2M,EAAY3M,EAAI4M,SAASC,mBAE/B7M,EAAI8M,QAAQ,YAAa,UACzB9M,EAAI+M,YAAY,GAChB,IAAK,IAAIxd,EAAI,EAAGA,GAAKod,EAAWpd,IAC9ByQ,EAAIgN,QAAQzd,GACZyQ,EAAIiN,KACF,QAAUC,OAAO3d,GAAK,OAAS2d,OAAOP,GACtC3M,EAAI4M,SAASpZ,SAAS2Z,MAAQ,EAC9B,IACA,CACEC,MAAO,YAiBFC,EAAW,uCAAG,WACzBC,EACAjb,EACAkb,GAHyB,6BAAAvV,EAAA,sDA8EzB,IAzEAuV,GAAS,GACHC,EAAyBF,EAAeE,YAC1CF,EAAeE,YACf,IACAC,EAAkB,GACA,GACA,KAGlBzN,EAAW,IAAI0N,UAAMF,EAAa,KAAM,OAExCG,aAAa,GAAI,GAAI,IACzB3N,EAAI+M,YAAY,IAQhB/M,EAAI4N,SAASC,EAAM,MAAO,GAAI,GAAI,GAAI,IACtC7N,EAAIiN,KAAK,UAAW,GAAI,UAAMnf,EAAW,QAEzCkS,EAAI+M,YAAY,IAChB/M,EAAIiN,KACFK,EAAe3O,MACfqB,EAAI4M,SAASpZ,SAASsa,WAAa,EACnC,UACAhgB,EACA,UAGFkS,EAAI+M,YAAY,IAChB/M,EAAIiN,KACFK,EAAeS,UACf/N,EAAI4M,SAASpZ,SAASsa,WAAa,EACnC,UACAhgB,EACA,UAIFkgB,EAAQhO,EAAIiO,gBACVX,EAAeY,QACfC,KAWFnO,EAAI+M,YAAY,IAMZ/V,EAAI,GAERgJ,EAAI2N,aAAa,GAAI,GAAI,IACzB3N,EAAIiN,KAAJ,UAAYK,EAAec,aAA3B,MAA6CX,EAASzW,GACtDmW,EAAQnN,EAAIqO,aAAJ,UAAoBf,EAAec,aAAnC,OAORpO,EAAI2N,aAAa,GAAI,GAAI,IAChBpe,EAAI,EAAGA,EAAIye,EAAM/e,OAAQM,IAC5ByH,EAAI,MACNA,EAAI,GACJgJ,EAAIsO,WAGNtO,EAAIiN,KAAKe,EAAMze,GAAIke,EAAUN,EAAOnW,GACpCA,GAAQ,EArFe,OAuFzBgJ,EAAI2N,aAAa,GAAI,GAAI,IACzB3N,EAAIiN,KAAK,WAAYQ,EAASzW,EAAI,GAClCmW,EAAQnN,EAAIqO,aAAa,YACzBrO,EAAI2N,aAAa,GAAI,GAAI,IACzB3N,EAAIiN,KAAKK,EAAeiB,OAAQd,EAAUN,EAAOnW,EAAI,GAErDgJ,EAAIwO,UAAU,CACZC,KAAMpc,EACNqc,OAAQ,GACRC,OAAQ,CAAEC,WAAY,IACtBC,YAAa,EAEbC,UAAW,GAEXC,WAAY,CAAEC,OAAQ,OACtBC,aAAc,CAAEjI,MAAO,CAAEkI,UAAW,SACpCxL,MAAO,UACPyL,YAAY,IAGdnP,EAAI+M,YAAY,IACZqC,EAASpP,EAAIqP,cAAcD,OAC/BpP,EAAIiN,KAAJ,uBAAyBK,EAAegC,QAAU7B,EAAS2B,EAAS,IACpEpP,EAAIiN,KACF,wBAA0BsC,aAAK,IAAIzf,MAAOQ,YAC1Cmd,EACA2B,EAAS,IAGX1C,EAAW1M,GApHc,UAqHnBA,EACHwP,KADG,UAGAlC,EAAe3O,MACf,KACA2O,EAAeY,QACf,KACAZ,EAAeiB,OAPf,QASF,CAAEkB,eAAe,IAElBC,KAAKnC,GAAS,IAhIQ,4CAAH,2D,gKCpBlBoC,EAAgB,SACpBC,EACAC,GAEA,IAAIrd,EAAoC,GAWxC,OAVAod,EAAQ7S,SAAQ,SAAC7O,GACf,GAAIA,EAAQQ,YAAc,IAAK,CAC7B,IAAI0G,EAAOlH,EACXkH,EAAKiR,YAAcD,EAAcyJ,EAAY3hB,EAAQK,QACjD6X,EAAcyJ,EAAY3hB,EAAQK,QAAS8X,YAC3C,eACJ7T,EAAOyK,KAAK7H,OAIT5C,GAGI4T,EAAgB,SAAChY,EAAmBK,GAC/C,OAAOL,EAAQT,MAAK,SAAC2T,GAAD,OAAUA,EAAK7S,YAAcA,MAGtC0X,EAAuB,SAClCyJ,EACAE,GAEA,OAAOF,EAAQjiB,MAAK,SAAC2T,GAAD,OAAUA,EAAKwD,kBAAoBgL,MA2J1CtR,iBATS,SAAC,GAKvB,MAAO,CACLpQ,QAFC,EAHHG,OAKkBH,WAGoB,GAAzBoQ,EA/GmC,SAACpM,GACjD,MAAsCW,mBAAiB,IAAvD,mBAAOkM,EAAP,KAAoBC,EAApB,KAEA,OACE,oCAEE,sBAAKrK,UAAU,gCAAf,UACE,cAAC,KAAD,CAAUA,UAAU,0BACpB,uBACEpH,KAAK,OACLwH,YAAY,SACZJ,UAAU,qFACVK,SAAU,SAACC,GAAD,OAAO+J,EAAe/J,EAAEY,OAAOC,QACzCA,MAAOiJ,EACPhJ,YACG7D,EAAMhE,SACPuhB,EAAcvd,EAAMmX,iBAAkBnX,EAAMhE,SAASiB,QACnD,SAACiS,GAAD,OACElC,YACEhN,EAAMiN,SACNjN,EAAMkN,cAAc5N,gBACpB4P,EAAKwD,oBAET7V,OAAS,KAKf,wBACE4F,UAAU,4EACVpH,KAAK,SACLoJ,QAAS,WACPzE,EAAMqN,oBAAmB,GACzBrN,EAAMsN,gBAAgB,KAL1B,sBAWwC,IAE1C,qBAAK7K,UAAU,4DAAf,SACGzC,EAAMhE,SACPuhB,EAAcvd,EAAMmX,iBAAkBnX,EAAMhE,SAASiB,QAAO,SAACiS,GAAD,OAC1DlC,YACEhN,EAAMiN,SACNjN,EAAMkN,cAAc5N,gBACpB4P,EAAKwD,oBAEP7V,OAAS,EACT8F,YACE4a,EAAcvd,EAAMmX,iBAAkBnX,EAAMhE,SAASiB,QACnD,SAACiS,GAAD,OACElC,YACEhN,EAAMiN,SACNjN,EAAMkN,cAAc5N,gBACpB4P,EAAKwD,oBAGX7F,GACAvK,KAAI,SAAC4M,EAA+B7K,GAAhC,OACJ,sBACE5B,UAAS,yEACPzC,EAAM6P,cAAgBX,EAAKwD,iBAC3B,yCAHJ,UAOE,qBACEjQ,UAAU,iCACVgC,QAAS,WACPzE,EAAMqN,oBAAmB,GACzBrN,EAAMuN,eAAe2B,EAAKwD,kBAJ9B,SAOE,mBAAGjQ,UAAU,mCAAb,SACGyM,EAAK+E,gBAGV,wBACE5Y,KAAK,SACLoH,UAAU,uGACVgC,QAAS,WACPzE,EAAMsN,gBAAgB4B,EAAKwD,kBAJ/B,oBAbKrO,EAAQ6K,EAAKwD,oBAyBtB,qBAAKjQ,UAAU,kBAAf,SACE,mBAAGA,UAAU,mCAAb,iD,sOC1JNkb,EAAmB,SAACpI,GACxB,GAA8B,IAA1BA,EAAUqI,YAAmB,CAC/B,IAAMC,EAAatI,EAAUuI,OAAOviB,MAAK,SAAC2T,GAAD,OAAyB,IAAfA,EAAK6O,SACxD,GAAIF,GACEA,EAAWG,wBAA0BC,IAAoBC,SAC3D,OAAO,EAIb,OAAO,GAGIC,EAAmB,SAC9B5I,EACAwI,GAMA,QAJmBxI,EAAUuI,OAAOviB,MAClC,SAAC2T,GAAD,OACEA,EAAK6O,QAAUA,GAAS7O,EAAKkP,eAAiBC,IAAYC,cA8SjDlS,gBAAQ,KAAM,CAC3BmS,kBACAlN,qBAFajF,EAxQmC,SAACpM,GACjD,IAAMoU,EAAY,uCAAG,4BAAAxO,EAAA,0DACf8N,YAAgB1T,EAAMwe,eADP,yCAEVxe,EAAMyP,aAAa,CACxB3T,QAAS,UACTiB,IAAK,gCAJU,UAOdiD,EAAMuV,UAPQ,yCAQVvV,EAAMqR,eAAe,CAC1B9E,MAAO,wBACP+E,MAAOC,IAAgBkN,WAVR,cAcnBze,EAAM0e,mBAAkB,GAdL,SAgBjB7Y,cAhBiB,SAiBCC,IAAM6Y,IAAN,UACb3Y,IAAIC,SADS,yBACgBjG,EAAMuV,UAAUnI,KAChD,CACE+H,OAAQnV,EAAMwe,gBApBD,OAiBX/hB,EAjBW,OAuBjByJ,QAAQC,IAAI,CAAE1J,IAAKA,EAAIuG,OACJ,MAAfvG,EAAIK,QAAiC,MAAfL,EAAIK,SAC5BkD,EAAMue,cAAc9hB,EAAIuG,MACxBhD,EAAMqR,eAAe,CACnB9E,MAAO,wBACP+E,MAAOC,IAAgB8D,UAEzBrV,EAAM4e,iBAAiB,IACvB5e,EAAM6e,eAAc,IA/BL,kDAkCjB3Y,QAAQM,MAAM,CAAEA,MAAK,OACrBxG,EAAMqR,eAAe,CACnB9E,MAAO9F,YAAY,EAAD,IAClB6K,MAAOC,IAAgBC,SArCR,QAwCnBxR,EAAM0e,mBAAkB,GAxCL,0DAAH,qDA2CZI,EAAgB,SACpBC,GAEA,GAAI/e,EAAMgS,aACR,OAAOhS,EAAMgS,aAAazW,MAAK,SAAC2T,GAAD,OAAUA,EAAKzT,KAAOsjB,MAKzD,OACE,0BAAStc,UAAU,GAAnB,UACE,sBAAKA,UAAU,iDAAf,UAEE,0BAASA,UAAU,gBAAnB,UACE,sBAAKA,UAAU,oCAAf,UACE,sBAAKA,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,oBACA,sBAAMA,UAAU,kCAAhB,SACGiL,YAAiB1N,EAAM2N,mBAAoB3N,EAAMwX,SAAS1I,UAG/D,wBACEzT,KAAK,SACLoH,UAAU,uGACVgC,QAAS,kBAAMzE,EAAMgf,cAAchf,EAAMif,YAH3C,SAKGjf,EAAMif,UAAY,OAAS,YAGhC,sBAAKxc,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBACEA,UAAS,oBAC6B,aAApCzC,EAAMwX,QAAQrE,kBACV,kBACA,gBAHG,sBADX,SAOG2D,YAAsB9W,EAAMwX,QAAQrE,wBAGzC,sBAAK1Q,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,SACGzC,EAAMuV,UAAU2J,SAASC,UAAUC,UAGxC,sBAAK3c,UAAU,+CAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBAAMA,UAAU,cAAhB,SACGzC,EAAMwX,QAAQvE,aAAaC,aAK/BlT,EAAMif,WACL,qBAAKxc,UAAU,gDAAf,SACE,qBACE4c,IAAG,UAAKrZ,IAAIsZ,WAAT,YAAuBtf,EAAMwX,QAAQ+H,OACxCC,IAAI,WACJ/c,UAAS,kDAWhBzC,EAAMuV,UAAUuI,OAAOjhB,OAAS,GAC/BmD,EAAMuV,UAAUuI,OAAOxb,KAAI,SAACmd,EAAOpb,GAAR,OACzB,0BAAS5B,UAAU,0BAAnB,UAEE,sBAAKA,UAAU,kCAAf,UACE,sBAAKA,UAAU,wDAAf,UACE,cAAC,IAAD,IACCqc,EAAc9e,EAAMuV,UAAUL,uBAC3B4J,EAAc9e,EAAMuV,UAAUL,uBAC3BC,OACH,MAEN,4BAAIsK,EAAMtK,SACV,sBAAM1S,UAAU,wBAAhB,SACGid,YAASD,EAAME,gBAKnBxB,EAAiBne,EAAMuV,UAAWkK,EAAM1B,QACvC,0BAAStb,UAAU,OAAnB,UACE,uBAAMA,UAAU,qCAAhB,6BACmB4B,EAAQ,EAD3B,OAGA,sBAAK5B,UAAU,aAAf,UACE,sBAAKA,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBACEA,UAAS,oBACPgd,EAAMzB,wBACNC,IAAoBC,SAChB,kBACA,gBAJG,sBADX,SAQGpH,YACC2I,EAAMzB,sBAAsB1J,0BAIlC,sBAAK7R,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,SACGgd,EAAMN,UAAUC,UAGrB,sBAAK3c,UAAU,+CAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBAAMA,UAAU,cAAhB,SACGgd,EAAMG,gCA/C+Bvb,EAAQob,EAAMhkB,UA0DtE,qCACIuE,EAAM6f,YACN,sBAAKpd,UAAU,mDAAf,UACE,sBACEA,UAAS,UACPzC,EAAMuV,UAAUuK,oBAAsBzB,IAAY0B,QAC9C,kBACA/f,EAAMuV,UAAUuK,oBAAsBzB,IAAY2B,QAClD,eACA,iBALG,yBADX,SASGlJ,YACC9W,EAAMuV,UAAUuK,kBAAkBxL,uBAIrCqJ,EAAiB3d,EAAMuV,YACtB,wBACE9S,UAAU,eACVgC,QAAS,kBAAMzE,EAAM6e,eAAc,IACnChb,SAAU7D,EAAMigB,eAHlB,wBAWLjgB,EAAM6f,YACL,sBAAKpd,UAAU,kEAAf,UACE,sBAAKA,UAAU,cAAf,UACE,0BACEI,YAAW,4BACXO,KAAM,GACND,KAAM,EACNV,UAAS,wBACPzC,EAAM0P,WAAyC,YAA5B1P,EAAM0P,UAAU5T,QAC/B,MACA,OAHG,oDAKTyG,MAAO,CAAE+U,OAAQ,QACjB1T,MAAO5D,EAAMwe,cACb1b,SAAU,SAACC,GACT/C,EAAM4e,iBAAiB7b,EAAEY,OAAOC,OAChC5D,EAAMyP,aAAa,OAErB5L,SAAU7D,EAAMigB,iBAEjBjgB,EAAM0P,WAAyC,YAA5B1P,EAAM0P,UAAU5T,SAClC,mBAAG2G,UAAU,eAAb,SAA6BzC,EAAM0P,UAAU3S,SAGjD,sBAAK0F,UAAU,kDAAf,UACE,yBACEA,UAAU,iIACVgC,QAAS,WACPzE,EAAM4e,iBAAiB,IACvB5e,EAAM6e,eAAc,GACpB7e,EAAMyP,aAAa,OAErB5L,SAAU7D,EAAMigB,eAPlB,UASE,cAAC,IAAD,CAAmBxd,UAAU,YAC7B,2CAEF,wBACEA,UAAU,iIACVoB,SAAU7D,EAAMigB,eAChBxb,QAAS,kBAAM2P,KAHjB,SAKGpU,EAAMigB,eACL,qBAAKxd,UAAU,GAAf,wBAEA,sBAAKA,UAAU,2CAAf,UACE,cAAC,IAAD,CAAkBA,UAAU,YAC5B,gE,iCCzUpB,oHAmBayd,EAAyC,SACpDC,EACAxS,GAMA,IAAIyS,EAAqD,GACrDC,EAA8D,GAChEC,EAAkC,GAChCC,EAAiE,GACnEC,EAAqC,GAEnC1H,EAAeqH,EAAarH,aAP7B,WASM2H,GACP,IAAIC,EAAmB5H,EAAa2H,GAEhCE,EAAehT,EAAmBW,iBAClCX,EAAmBW,iBAAiB/S,MAClC,SAAC2T,GAAD,OACEA,EAAKX,0BACLmS,EAAiBnS,4BAChB,CACHhC,MAAOoB,EAAmBW,iBAAiB/S,MACzC,SAAC2T,GAAD,OACEA,EAAKX,0BACLmS,EAAiBnS,2BAClBhC,MACHgC,wBAAyBZ,EAAmBW,iBAAiB/S,MAC3D,SAAC2T,GAAD,OACEA,EAAKX,0BACLmS,EAAiBnS,2BAClBA,yBAEL,CACEhC,MAAO,GACPgC,wBAAyBmS,EAAiBnS,yBAG5CqS,EAAkBjT,EAAmBO,qBACrCP,EAAmBO,oBAAoB3S,MACrC,SAAC2T,GAAD,OACEA,EAAKd,6BACLsS,EAAiBtS,8BAEnB,CACE7B,MAAOoB,EAAmBO,oBAAoB3S,MAC5C,SAAC2T,GAAD,OACEA,EAAKd,6BACLsS,EAAiBtS,8BAClB7B,MACH6B,2BACET,EAAmBO,oBAAoB3S,MACrC,SAAC2T,GAAD,OACEA,EAAKd,6BACLsS,EAAiBtS,8BAClBA,2BACLC,YAAaV,EAAmBO,oBAAoB3S,MAClD,SAAC2T,GAAD,OACEA,EAAKd,6BACLsS,EAAiBtS,8BAClBC,aAQP,CACE9B,MAAO,GACP6B,2BACEsS,EAAiBtS,2BACnBC,YAAa,IAGnB,GAAIsS,EAAc,CAAC,IAAD,WACP9R,GAEP,IAAIgS,EAAYlT,EAAmBe,gBAC/Bf,EAAmBe,eAAenT,MAChC,SAAC2T,GAAD,OACEA,EAAK9B,MACLsT,EAAiBI,qBAAqBjS,GACnCkS,gCAEL,CACExU,MAAOoB,EAAmBe,eAAenT,MACvC,SAAC2T,GAAD,OACEA,EAAK9B,MACLsT,EAAiBI,qBAAqBjS,GACnCkS,gCACJxU,MACHa,IAAKO,EAAmBe,eAAenT,MACrC,SAAC2T,GAAD,OACEA,EAAK9B,MACLsT,EAAiBI,qBAAqBjS,GACnCkS,gCACJ3T,IACHgM,SAAUsH,EAAiBI,qBAAqBjS,GAAOuK,UAO3D,CACE7M,MAAO,GACPa,IAAKsT,EAAiBtS,2BACtBgL,SAAUsH,EAAiBI,qBAAqBjS,GAAOuK,UAG7DgH,EAAcvV,KAAK,CACjBwD,YAAasS,EAAapS,wBAC1ByS,eAAgBL,EAAapU,MAC7B0U,eAAgBL,EAAgBxS,2BAChC4K,kBAAmB4H,EAAgBrU,MACnC4M,qBAAsBuH,EAAiBtH,SACvCF,YAAa2H,EAAUtU,MACvB0M,SAAU4H,EAAUzT,IACpBgM,SAAUyH,EAAUzH,YA3CxB,IAAK,IAAIvK,KAAS6R,EAAiBI,qBAAuB,EAAjDjS,GAiDNyR,EAAsB1V,SAAS+V,EAAapS,2BAE7C+R,EAAsBzV,KAAK8V,EAAapS,yBACxC8R,EAAuBxV,KAAK,CAC1BwD,YAAasS,EAAapS,wBAC1ByS,eAAgBL,EAAapU,MAC7B0U,eAAgB,GAChBjI,kBAAmB,GACnBG,qBAAsBuH,EAAiBtH,SACvCF,YAAa,GACbD,SAAU,GACVG,UAAU,KAMXoH,EAAyB5V,SACxBgW,EAAgBxS,8BAGlBoS,EAAyB3V,KACvB+V,EAAgBxS,4BAElBmS,EAA0B1V,KAAK,CAC7BwD,YAAauS,EAAgBvS,YAC7B2S,eAAgB,GAChBC,eAAgBL,EAAgBxS,2BAChC4K,kBAAmB4H,EAAgBrU,MACnC4M,qBAAsBuH,EAAiBtH,SACvCF,YAAa,GACbD,SAAU,GACVG,UAAU,OAhJlB,IAAK,IAAIqH,KAAO3H,EAAe,EAAtB2H,GAuJT,MAAO,CAAEL,gBAAeC,yBAAwBE,8BAgLnCnU,gBAAQ,KAAM,CAAEiF,qBAAhBjF,EAnJiD,SAACpM,GAC/D,OACE,yBAASyC,UAAU,GAAnB,SACE,sBAAKA,UAAU,iEAAf,UACE,sBAAKA,UAAU,qBAAf,UAEE,0BAASA,UAAU,oCAAnB,UACE,sBAAMA,UAAU,mCAAhB,SACGzC,EAAM0X,gBAAgB9D,SAASC,iBAElC,wBACExY,KAAK,SACLoH,UAAU,eACVgC,QAAS,WACPzE,EAAMqN,oBAAmB,GACzBrN,EAAMuN,eAAevN,EAAM0X,gBAAgBnF,gBAC3CvS,EAAMsN,gBAAgB,KAN1B,uBAYF,sBAAK7K,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,mBACA,sBAAMA,UAAU,+BAAhB,SACG0a,YAAKnd,EAAM0X,gBAAgBiI,iBAG/B,EAWD,sBAAKld,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBACEA,UAAS,oBACPzC,EAAM0X,gBAAgBpE,qBACtB4N,IAAkBC,SACd,kBACA,gBAJG,SADX,SAQGrK,YAAsB9W,EAAM0X,gBAAgBpE,yBASjD,sBAAK7Q,UAAU,+CAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBAAMA,UAAU,8BAAhB,SACGzC,EAAM0X,gBAAgBrE,YAAYH,gBAIzC,sBAAKzQ,UAAU,mCAAf,UACE,qBAAKA,UAAU,wCAAf,8BAGA,sBAAKA,UAAU,kDAAf,UACE,sBAAMA,UAAS,SAAf,mBACA,sBAAMA,UAAU,gBAAhB,SACGzC,EAAM0X,gBAAgB9D,SAASwN,iBAGpC,sBAAK3e,UAAU,kDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,SACGzC,EAAM0X,gBAAgB9D,SAASyN,gBAAgBC,uBAGpD,sBAAK7e,UAAU,kDAAf,UACE,sBAAMA,UAAS,SAAf,wBACA,sBAAMA,UAAU,gBAAhB,SAEIzC,EAAM0X,gBAAgB9D,SAASO,uBAC5BoN,8BAIT,sBAAK9e,UAAU,kDAAf,UACE,sBAAMA,UAAS,SAAf,sBACA,sBAAMA,UAAU,0BAAhB,SACGzC,EAAM0X,gBAAgB9D,SAAS5X,QAAQsG,KAAI,SAAC4M,EAAM7K,GAAP,OAC1C,sBAEE5B,UAAU,0BAFZ,UAIE,sBAAMA,UAAU,gBAAhB,SAAiCyM,EAAK+E,cACtC,uBAAMxR,UAAU,gBAAhB,cAAkCyM,EAAKsS,YAAvC,OACCnd,IACCrE,EAAM0X,gBAAgB9D,SAAS5X,QAAQa,OAAS,GAAK,MANlDwH,EAAQ6K,EAAK7S,mBAY1B,qBAAKoG,UAAU,wCAAf,mCAGCzC,EAAM0X,gBAAgB9D,SAASkF,aAAajc,OAAS,EACpDqjB,EACElgB,EAAM0X,gBAAgB9D,SACtB5T,EAAM2N,oBACN0S,uBAAuB/d,KAAI,SAAC4M,EAAM7K,GAAP,OAC3B,sBACE5B,UAAU,wDADZ,UAIE,sBAAKA,UAAU,2DAAf,UACE,cAAC,KAAD,IACA,+BAAOyM,EAAK8R,oBAEd,qBAAKve,UAAU,uBAAf,SACE,cAAC,IAAD,CACEqW,aAAcoH,EACZlgB,EAAM0X,gBAAgB9D,SACtB5T,EAAM2N,oBACNyS,cAAcnjB,QACd,SAACwjB,GAAD,OAASA,EAAIpS,cAAgBa,EAAKb,qBAZnChK,EAAQ6K,EAAKb,gBAmBtB,cAAC,IAAD,CACEiD,MAAOmQ,IAAeC,KACtB9d,MAAO,gC,8KC5SR+d,EAAb,kDAIE,WAAY3hB,GAA6B,IAAD,8BACtC,cAAMA,IAORqP,WAAa,SAACvS,GACZ,EAAKwS,SAAS,CAAExL,QAAShH,KATa,EAWxC8kB,iBAAmB,SAAC9kB,GAClB,EAAKwS,SAAS,CAAEuS,cAAe/kB,KAZO,EAcxCwO,kBAAoB,WAOlB,GAL6C,OAA3C,EAAKtL,MAAM8hB,cAAcA,eACyB,IAAlD,EAAK9hB,MAAM8hB,cAAcA,cAAcjlB,QAEvC,EAAKmD,MAAM+hB,kBAAkB,EAAK1S,YAEhC,EAAKrP,MAAMgiB,QAAS,CACtB,IAAI1mB,EAAQ,EAAK0E,MAAMjB,cAAckjB,gBAAgB1mB,MACnD,SAACC,GAAD,OACEA,EAAIW,SAAW,EAAK6D,MAAMgiB,QAAQ7lB,QAClCX,EAAI2gB,SAAW,EAAKnc,MAAMgiB,QAAQ7F,QAClCgB,YAAK3hB,EAAIqC,aAAesf,YAAK,EAAKnd,MAAMgiB,QAAQnkB,cAIG,IAApD,EAAKmC,MAAMjB,cAAckjB,gBAAgBplB,aAC9BnB,IAAVJ,QACwBI,IAA1B,EAAKsE,MAAMkiB,YAEX,EAAKliB,MAAMhB,cACT,EAAKgB,MAAMgiB,QAAQ7F,OACnB,EAAKnc,MAAM2L,KAAKsJ,KAAKhW,QACrB,EAAK2iB,uBAGKlmB,IAAVJ,QAIMI,IAFN,EAAKsE,MAAMjB,cAAckjB,gBAAgB1mB,MACvC,SAAC2T,GAAD,OAAUA,EAAKiT,cAAL,OAAoB7mB,QAApB,IAAoBA,OAApB,EAAoBA,EAAO6mB,gBAGvC,EAAKniB,MAAMoiB,mBACT9mB,EAAM6mB,gBACiBzmB,IAAvB,EAAKsE,MAAMf,QACP,EAAKe,MAAM2L,KAAKsJ,KAAKhW,QACrB,EAAKe,MAAMf,QACf,EAAKoQ,cAnDyB,EAyDxCgT,sBAAwB,SAACC,GACvB,IAD6D,EACzDC,EAAgB,EADyC,cAE5CD,EAAaA,cAF+B,IAE7D,2BAA4C,CAC1CC,GAD0C,QAC5BC,YAH6C,8BAK7D,OAAOD,GA3DP,EAAK9W,MAAQ,CACX3H,SAAS,EACT+d,eAAe,GALqB,EAJ1C,0CAoEE,WAAU,IAAD,OACHY,OACwB/mB,IAA1BgQ,KAAK1L,MAAMkiB,WACPxW,KAAK1L,MAAMjB,cAAckjB,gBAAgB1mB,MACvC,SAACC,GAAD,OACEA,EAAIW,SAAW,EAAK6D,MAAMgiB,QAAQ7lB,QAClCX,EAAI2gB,SAAW,EAAKnc,MAAMgiB,QAAQ7F,QAClCgB,YAAK3hB,EAAIqC,aAAesf,YAAK,EAAKnd,MAAMgiB,QAAQnkB,cAEpD6N,KAAK1L,MAAMkiB,WAAW3mB,MACpB,SAACC,GAAD,OACEA,EAAIW,SAAW,EAAK6D,MAAMgiB,QAAQ7lB,QAClCX,EAAI2gB,SAAW,EAAKnc,MAAMgiB,QAAQ7F,QAClCgB,YAAK3hB,EAAIqC,aAAesf,YAAK,EAAKnd,MAAMgiB,QAAQnkB,cAE1D,OAA2B,IAAvB6N,KAAKD,MAAM3H,UAAiD,IAA7B4H,KAAKD,MAAMoW,cAE1C,qBAAKpf,UAAU,4BAAf,SACE,cAAC,IAAD,WAIoB/G,IAAtB+mB,EAEA,qBAAKhgB,UAAU,4BAAf,SACE,sBAAMA,UAAU,qBAAhB,uCAKJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,aAAf,cACyB/G,IAAtB+mB,GACC,sBAAKhgB,UAAU,OAAf,UACE,sBAAKA,UAAU,6CAAf,UACE,8BACE,cAAC,IAAD,CAAmBA,UAAU,6BAE/B,qBACEA,UAAU,0BACVigB,wBAAyB,CACvBC,OAAQ,YAAcjX,KAAK1L,MAAMgiB,QAAQ/N,kBAI/C,sBAAKxR,UAAU,wCAAf,UACE,qBAAKA,UAAU,kCAAf,wBAGA,qBACEA,UAAU,sBACVigB,wBAAyB,CACvBC,OAAQxF,YAAKzR,KAAK1L,MAAMgiB,QAAQnkB,iBAItC,sBAAK4E,UAAU,8BAAf,UACE,qBAAKA,UAAU,kCAAf,+BAGA,qBACEA,UAAU,sBACVigB,wBAAyB,CACvBC,OAAQjX,KAAK1L,MAAMgiB,QAAQY,kBAIjC,sBAAKngB,UAAU,+BAAf,UACE,qBAAKA,UAAU,kCAAf,wCAGA,qBACEA,UAAU,sBACVigB,wBAAyB,CACvBC,OAAQjX,KAAK1L,MAAMgiB,QAAQa,kBAOvC,qBAAKpgB,UAAU,kDAAf,uCAGuB/G,IAAtB+mB,EACG,YACAA,EAAkBH,aAAahgB,KAAI,SAAC4M,EAAM/R,GAAP,aACjC,sBAEEsF,UAAU,kJAFZ,UAIE,qBAAKA,UAAU,8BAAf,SACE,sBAAKA,UAAU,+CAAf,UACE,qBAEEA,UAAU,oHAFZ,SAIGtF,EAAI,GAHAA,EAAI,GAKVslB,QAGO/mB,IAFN+mB,EAAkBK,UAAUvnB,MAC1B,SAACC,GAAD,OAASA,EAAIunB,cAAgB7T,EAAK8T,aAElC,sBAAKvgB,UAAU,iBAAf,UACE,qBACEA,UAAU,oCACVigB,wBAAyB,CACvBC,OAAQF,EAAkBK,UACvBvnB,MACC,SAACC,GAAD,OAASA,EAAIunB,cAAgB7T,EAAK8T,YAEnCA,SAASznB,MACR,SAACa,GAAD,OAAUA,EAAK6mB,WAAa/T,EAAK+T,YAChC7B,eAGT,sBAAK3e,UAAU,yCAAf,wBACgB,IAC8B,OAA3C,EAAKzC,MAAM8hB,cAAcA,eACxBW,EAAkBH,aAAa/mB,MAC7B,SAACC,GAAD,OAASA,EAAIwnB,WAAa9T,EAAK8T,aAE/B,qBAAKvgB,UAAU,OAAf,SACE,cAAC,IAAD,CACEygB,iBAAkBhU,EAAK+T,SACvBD,SAAU,CACRG,WACEV,EAAkBK,UAAUvnB,MAC1B,SAACC,GAAD,OACEA,EAAIunB,cAAgB7T,EAAK8T,YAC1BG,WACLJ,YAAa7T,EAAK8T,SAClB7mB,OAAQsmB,EAAkBK,UAAUvnB,MAClC,SAACC,GAAD,OACEA,EAAIunB,cAAgB7T,EAAK8T,YAC1B7mB,OACH6mB,SACEP,EAAkBK,UAAUvnB,MAC1B,SAACC,GAAD,OACEA,EAAIunB,cAAgB7T,EAAK8T,YAC1BA,SACL3nB,KAAMonB,EAAkBK,UAAUvnB,MAChC,SAACC,GAAD,OACEA,EAAIunB,cAAgB7T,EAAK8T,YAC1B3nB,KACH+nB,SACEX,EAAkBK,UAAUvnB,MAC1B,SAACC,GAAD,OACEA,EAAIunB,cAAgB7T,EAAK8T,YAC1BI,SACLC,aACEZ,EAAkBK,UAAUvnB,MAC1B,SAACC,GAAD,OACEA,EAAIunB,cAAgB7T,EAAK8T,YAC1BK,aACLC,MAAOb,EAAkBK,UAAUvnB,MACjC,SAACC,GAAD,OACEA,EAAIunB,cAAgB7T,EAAK8T,YAC1BM,MACHtL,QAASyK,EAAkBK,UAAUvnB,MACnC,SAACC,GAAD,OACEA,EAAIunB,cAAgB7T,EAAK8T,YAC1BhL,SAELuL,YAAa,CACX,CACER,YAAa7T,EAAK8T,SAClBlmB,QAAQ,EACRkb,QACEyK,EAAkBH,aAAa/mB,MAC7B,SAACC,GAAD,OACEA,EAAIwnB,WAAa9T,EAAK8T,YACvBhL,UAGT8J,cACE,EAAK9hB,MAAM8hB,cAAcA,cAE3B0B,kBAAmB,EAAKxjB,MAAMyjB,YAC9Bhf,QAAS,4BAS7B,sBAAKhC,UAAU,+CAAf,UACE,wBAEA,sBAAKA,UAAU,uGAAf,UACE,qBAAKA,UAAU,sCAAf,mBAGA,sBAAKA,UAAU,6CAAf,UACE,sBAAMA,UAAU,gBAAhB,SACGyM,EAAKsT,WAAWjmB,QAAQ,KACnB,IAHV,IAII,IACDkmB,IAAiB,UAChBA,EAAkBK,UAAUvnB,MAC1B,SAACC,GAAD,OAASA,EAAIunB,cAAgB7T,EAAK8T,mBAFpB,aAChB,EAEGM,kBAnHNnmB,EAAI,MAyHjB,sBAAKsF,UAAU,yDAAf,UACE,sBAAKA,UAAU,+GAAf,UACE,sBAAMA,UAAU,gBAAhB,oCACA,uBAAMA,UAAU,0BAAhB,UACGggB,GAAqBA,EAAkBnmB,YAAYC,QAAQ,GAD9D,UAIF,8BACE,sBAAKkG,UAAU,0BAAf,UACE,qBAAKA,UAAU,+CAAf,mCAGuB/G,IAAtB+mB,GACC,sBAAKhgB,UAAU,mDAAf,UACGiJ,KAAK2W,sBAAsBI,GAAmBlmB,QAAQ,GADzD,KAC+D,IAC5DkmB,EAAkBiB,mCApSrC,GAAqCxX,aAkUxByX,EAAiBvX,aAnBN,SAAC,GAWvB,MAAO,CACLT,KAFC,EATHA,KAYE5M,cAHC,EARHA,cAYEqU,sBAJC,EAPHA,sBAYE0O,cALC,EANHA,iBAeqD,CACrD8B,yBACAC,+BACAC,8BACAC,uBACAC,yBACA5kB,2BACAJ,mBACAilB,uBACAC,4BACA9B,wBACAL,wBAX4B3V,CAY3BuV,I,iCCnYH,mEAuMawC,EAAkB,SAC7BlM,EACAhE,GAiBA,MAfuC,CACrC9X,OAAQ8b,EAAO9b,OACf8X,YAAaA,EACb2O,YAAa3K,EAAO2K,YACpBC,OAAQ5K,EAAO4K,OACfuB,MAAO,CACLC,qBAAqB,EACrBC,cAAc,EACdC,eAAe,EACfC,8BAA8B,EAC9BC,wBAAwB,GAE1BtI,OAAQlE,EAAOkE,OACfte,UAAWoa,EAAOpa,YAwDP8Z,IA5CiD,SAAC3X,GAC/D,OACE,yBAASyC,UAAU,GAAnB,SACE,sBAAKA,UAAU,iEAAf,UACE,sBAAKA,UAAU,qBAAf,UAEE,0BAASA,UAAU,oCAAnB,UACE,sBAAMA,UAAU,mCAAhB,SACGzC,EAAM4X,gBAAgB3D,cAEzB,wBACE5Y,KAAK,SACLoH,UAAU,eACVgC,QAAS,WACPzE,EAAMqN,oBAAmB,GACzBrN,EAAMuN,eAAevN,EAAM4X,gBAAgBlF,iBAC3C1S,EAAMsN,gBAAgB,KAN1B,uBAaF,sBAAK7K,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,mBACA,sBAAMA,UAAU,+BAAhB,SACG0a,YAAKnd,EAAM4X,gBAAgB+H,mBAKlC,cAAC,IAAD,CACE8D,aAAa,EACbzB,QAASmC,EACPnkB,EAAM4X,gBACN5X,EAAM4X,gBAAgB3D,sB,iCCvQlC,sEA0CeyQ,IA3BiB,SAAC1kB,GAC/B,IAAMlF,EAAQC,MAASC,GAAGC,KACtB0pB,EAAW,IAAIjnB,KAEnB,OADAinB,EAASC,QAAQ9pB,EAAM+pB,OAAS,GAE9B,+BAEwD,IAArDC,2BAAiBhqB,EAAOkF,EAAMgiB,QAAQnkB,WACrC,sBAAK4E,UAAU,uHAAf,UACE,qBAAKA,UAAU,gBAAf,iEAGA,qBAAKA,UAAU,gBAAf,+CACA,qBAAKA,UAAU,gDAAf,SACG0a,YAAKwH,EAASzmB,iBAInB,cAAC,IAAD,CACE8jB,QAAShiB,EAAMgiB,QACfyB,YAAazjB,EAAMyjB,kB,mHCpBhBsB,EAAgB,SAACtU,GAC5B,IAD0E,EACtE3V,EAAQ,IAAI4C,KACZsnB,EAAgC,GAFsC,cAGzDvU,GAHyD,IAG1E,2BAAwB,CAAC,IAAhBwU,EAAe,QAClBC,EAAY,IAAIxnB,KAAKunB,EAAKE,YAC1BC,EAAU,IAAI1nB,KAAKunB,EAAKI,UAE1BH,EAAUxmB,WAAa5D,EAAM4D,WAC7B0mB,EAAQ1mB,WAAa5D,EAAM4D,WAC3BumB,EAAKK,cAAgBC,IAAsBC,OAE3CR,EAAW,sBAAOA,GAAP,CAAoBC,MAXuC,8BAc1E,OAAOD,GA4MMS,IAlMO,SAACzlB,GACrB,IAKEmc,EACAuJ,EANF,EAAwC/kB,mBACtC,MADF,mBAAOglB,EAAP,KAAqBC,EAArB,KAGA,EAA4BjlB,mBAAiB,IAA7C,mBAAOgC,EAAP,KAAekjB,EAAf,KAQA,OACE,sBAAKpjB,UAAU,GAAf,UACE,qBAAKA,UAAU,OAAf,SACE,uBACEK,SAAU,SAACC,GAAD,OACR8iB,EAAU9iB,EAAEY,OAAOC,QAErBvI,KAAK,OACLoH,UAAU,uDACVI,YAAY,uBACZgB,SAA+B,OAArB7D,EAAM8lB,YAAmD,IAA5B9lB,EAAM8lB,WAAWjpB,WAI5D,qBAAK4F,UAAU,uCAAf,SACwB,OAArBzC,EAAM8lB,WACL,cAAC,IAAD,IAC8B,IAA5B9lB,EAAM8lB,WAAWjpB,OACnB,sBAAK4F,UAAU,6EAAf,UACE,cAAC,KAAD,CAAUA,UAAU,aACpB,qBAAKA,UAAU,4CAAf,SACE,0DAIJ,oCACGzC,EAAM+lB,WACL,sBACEtjB,UAAS,yBACmB,QAA1BzC,EAAMgmB,gBACF,6BACA,yBAHG,wHADX,UAOE,sBAAKvjB,UAAU,mCAAf,UAC6B,QAA1BzC,EAAMgmB,gBACL,cAAC,IAAD,CAAevjB,UAAS,2BAExB,cAAC,KAAD,CACEA,UAAS,2BAGb,qBAAKA,UAAU,gBAAf,SACE,qBAAKA,UAAS,0BAAd,8BAGJ,qBACEgC,QAAS,WACPzE,EAAMimB,iBAAiB,QAEzBxjB,UAAU,yHAJZ,wBApDZ0Z,EA8DmBnc,EAAM8lB,WA7DzBJ,EA6DqC/iB,EA3D9BujB,YAAW/J,EAAQuJ,IA2DmBpjB,KAAI,SAAC4M,EAAM/R,GAAP,OACvC,sBAEEsF,UAAS,yBACmB,QAA1BzC,EAAMgmB,iBACNhmB,EAAMgmB,gBAAgB1mB,kBAAoB4P,EAAK5P,gBAC3C,6BACA,yBAJG,+CAFX,UASE,sBAAKmD,UAAU,4EAAf,UACE,sBAAKA,UAAU,mCAAf,UAC6B,QAA1BzC,EAAMgmB,iBACPhmB,EAAMgmB,gBAAgB1mB,kBACpB4P,EAAK5P,gBACL,cAAC,IAAD,CAAemD,UAAS,2BAExB,cAAC,KAAD,CACEA,UAAS,2BAGb,sBAAKA,UAAU,gBAAf,UACE,qBACEA,UAAS,UACmB,QAA1BzC,EAAMgmB,iBACNhmB,EAAMgmB,gBAAgB1mB,kBACpB4P,EAAK5P,gBACH,gBACA,gBALG,cADX,SASG4P,EAAKiX,oBAER,sBAAK1jB,UAAU,wBAAf,UACE,4CACA,sBACEA,UAAS,WACY,IAAnByM,EAAKlI,UACD,oCACA,wBAJR,UAOsB,IAAnBkI,EAAKlI,UAAqB,SAAW,qBAK9C,sBAAKvE,UAAU,mCAAf,WACqB,OAAjBkjB,GACAA,EAAarmB,kBACX4P,EAAK5P,kBACP,qBACEmF,QAAS,kBAAMmhB,EAAgB1W,IAC/BzM,UAAU,4HAFZ,qBAOF,qBACEgC,QAAS,WACPzE,EAAMimB,iBAAiB/W,IAEzBzM,UAAU,yHAJZ,oBAQkB,OAAjBkjB,GACCA,EAAarmB,kBAAoB4P,EAAK5P,iBACpC,qBACEmF,QAAS,kBAAMmhB,EAAgB,OAC/BnjB,UAAU,yHAFZ,yBASU,OAAjBkjB,GACCA,EAAarmB,kBAAoB4P,EAAK5P,iBACpC,qBAAKmD,UAAU,gFAAf,SACE,wBAAOA,UAAU,SAAjB,UACE,uBAAOA,UAAU,aAAjB,SACE,qBAAIA,UAAU,YAAd,UACE,oBAAIA,UAAU,YAAd,eACA,sCACA,4CACA,6CACA,6CAGJ,uBAAOA,UAAU,UAAjB,SACoB,OAAjBkjB,GACCA,EAAarmB,kBACX4P,EAAK5P,iBACPqmB,EAAalV,MAAM5T,OAAS,GAC5BqS,EAAKuB,MAAMnO,KAAI,SAAC2iB,EAAM9nB,GAAP,OACb,qBAEEsF,UAAS,eAGD/G,IAFNqpB,EAAc7V,EAAKuB,OAAOlV,MACxB,SAACC,GAAD,OAASA,EAAIkV,WAAauU,EAAKvU,YAE7B,sCACA,GALG,sCAFX,UAUE,oBAAIjO,UAAU,YAAd,SAA2BtF,EAAI,IAC/B,6BAAK8nB,EAAKmB,aACV,6BAAKjJ,YAAK8H,EAAKE,WAAY,gBAC3B,6BAAKhI,YAAK8H,EAAKI,SAAU,gBACzB,6BAAKJ,EAAKK,gBAbLnoB,EAAI,eA/FpBA,EAAI,gB,iCC7GzB,2DAoDMkpB,EAAY,SAChB/D,EACAgE,EACAtmB,GAEA,YAC4BtE,IAA1BsE,EAAMumB,gBACFC,YAAiBxmB,EAAMgjB,SAAS3nB,KAAM2E,EAAM8hB,eAC5C9hB,EAAMumB,iBAEV,KAAKE,2BAAyBC,eAC5B,IAAMC,EACJ5O,YAAiBuK,GACnB,OACE,sBAAK7f,UAAU,SAAf,UACGkkB,EACE1pB,QAAO,SAACzB,GAAD,OAAwB,IAAfA,EAAIsB,UACpBwF,KAAI,SAAC4M,EAAM/R,GAAP,OACH,sBAEEsH,QAASzE,EAAMyE,QACfhC,UAAU,iIAHZ,UAKE,qBAAKA,UAAU,wBAAf,SACE,cAAC,IAAD,MAEF,qBAAKigB,wBAAyB,CAAEC,OAAQzT,EAAKtL,WAPxCzG,EAAI,OAWc,IAA5B6C,EAAMwjB,mBACL,sBAAK/gB,UAAU,qDAAf,UACE,qBAAKA,UAAU,yBAAf,4BACA,8BACG6jB,EACErpB,QAAO,SAACzB,GAAD,OAAwB,IAAfA,EAAIsB,UACpBwF,KAAI,SAAC4M,EAAM/R,GAAP,OACH,sBAEEsH,QAASzE,EAAMyE,QACfhC,UAAU,gIAHZ,UAKE,qBAAKA,UAAU,wBAAf,SACE,cAAC,IAAD,MAEF,qBACEigB,wBAAyB,CAAEC,OAAQzT,EAAKtL,WARrCzG,EAAI,cAiB3B,KAAKspB,2BAAyBG,eAC5B,IAAMC,EACJ9O,YAAiBuK,GACnB,OACE,sBAAK7f,UAAU,SAAf,UACGokB,EACE5pB,QAAO,SAACzB,GAAD,OAAwB,IAAfA,EAAIsB,UACpBwF,KAAI,SAAC4M,EAAM/R,GAAP,OACH,sBAEEsH,QAASzE,EAAMyE,QACfhC,UAAU,iIAHZ,UAKE,qBAAKA,UAAU,wBAAf,SACE,cAAC,IAAD,MAEF,qBAAKigB,wBAAyB,CAAEC,OAAQzT,EAAKtL,WAPxCzG,EAAI,OAWc,IAA5B6C,EAAMwjB,mBACL,sBAAK/gB,UAAU,qDAAf,UACE,qBAAKA,UAAU,yBAAf,4BACA,8BACG6jB,EACErpB,QAAO,SAACzB,GAAD,OAAwB,IAAfA,EAAIsB,UACpBwF,KAAI,SAAC4M,EAAM/R,GAAP,OACH,sBAEEsH,QAASzE,EAAMyE,QACfhC,UAAU,gIAHZ,UAKE,qBAAKA,UAAU,wBAAf,SACE,cAAC,IAAD,MAEF,qBACEigB,wBAAyB,CAAEC,OAAQzT,EAAKtL,WARrCzG,EAAI,cAkB3B,KAAKspB,2BAAyBK,yBAC5B,IAAMC,EACJxO,YAA2B+J,GAC7B,OACE,sBAAK7f,UAAU,SAAf,UACGskB,EACE9pB,QAAO,SAACzB,GAAD,OAAwB,IAAfA,EAAIsB,UACpBwF,KAAI,SAAC4M,EAAM/R,GAAP,OACH,sBAEEsH,QAASzE,EAAMyE,QACfhC,UAAU,iIAHZ,UAKE,qBAAKA,UAAU,wBAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,sCAAf,SACGyM,EAAKtL,MAAM/G,OAAS,EACnB,+CACU,IACR,sBAAM4F,UAAU,yCAAhB,SACGyM,EAAKtL,MAAM,KACN,IAJV,MAKM,IACJ,sBAAMnB,UAAU,yCAAhB,SACGyM,EAAKtL,MAAM,QAIhB,sBAAMnB,UAAU,gBAAhB,SACGyM,EAAKtL,MAAM,GAAG1F,iBArBhBf,EAAI,OA4Bc,IAA5B6C,EAAMwjB,mBACL,sBAAK/gB,UAAU,qDAAf,UACE,qBAAKA,UAAU,yBAAf,4BACA,8BACG6jB,EACErpB,QAAO,SAACzB,GAAD,OAAwB,IAAfA,EAAIsB,UACpBwF,KAAI,SAAC4M,EAAM/R,GAAP,OACH,sBAEEsH,QAASzE,EAAMyE,QACfhC,UAAU,4GAHZ,UAKE,qBAAKA,UAAU,wBAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,sCAAf,SACGyM,EAAKtL,MAAM/G,OAAS,EACnB,+CACU,IACR,sBAAM4F,UAAU,yCAAhB,SACGyM,EAAKtL,MAAM,KACN,IAJV,MAKM,IACJ,sBAAMnB,UAAU,yCAAhB,SACGyM,EAAKtL,MAAM,QAIhB,sBAAMnB,UAAU,gBAAhB,SACGyM,EAAKtL,MAAM,GAAG1F,iBArBhBf,EAAI,cAiC3B,KAAKspB,2BAAyBO,SAC5B,IAAMC,EACJ9O,YAAWmK,GACb,OACE,sBAAK7f,UAAU,SAAf,UACGwkB,EAAgB3kB,KAAI,SAAC4M,EAAM/R,GAAP,OACnB,sBAEEsH,QAASzE,EAAMyE,QACfhC,UAAU,8IAHZ,UAKE,qBAAKA,UAAU,mDAAf,SACE,qBAAKA,UAAU,wEAAf,SACGtF,EAAI,MAGT,sBAAKsF,UAAU,sEAAf,UACE,qBACEA,UAAU,sBACVigB,wBAAyB,CAAEC,OAAQzT,EAAKtL,SAE1C,sBAAKnB,UAAU,uDAAf,UACE,qBAAKA,UAAU,mDAAf,SACE,cAAC,IAAD,MAEF,qBACEA,UAAU,cACVigB,wBAAyB,CAAEC,OAAQzT,EAAKpS,kBApBzCK,EAAI,OA2BgB,IAA5B6C,EAAMwjB,mBACL,sBAAK/gB,UAAU,qDAAf,UACE,qBAAKA,UAAU,yBAAf,4BACA,8BACG6jB,EAAiBhkB,KAAI,SAAC4M,EAAM/R,GAAP,OACpB,sBAEEsH,QAASzE,EAAMyE,QACfhC,UAAU,6IAHZ,UAKE,qBAAKA,UAAU,mDAAf,SACE,qBAAKA,UAAU,wEAAf,SACGtF,EAAI,MAGT,sBAAKsF,UAAU,sEAAf,UACE,qBACEA,UAAU,sBACVigB,wBAAyB,CAAEC,OAAQzT,EAAKtL,SAE1C,sBAAKnB,UAAU,uDAAf,UACE,qBAAKA,UAAU,mDAAf,SACE,cAAC,IAAD,MAEF,qBACEA,UAAU,cACVigB,wBAAyB,CAAEC,OAAQzT,EAAKpS,kBApBzCK,EAAI,cA+BzB,KAAKspB,2BAAyBS,UAC5B,IAAMC,EACJjP,YAAYoK,GACd,OACE,sBAAK7f,UAAU,SAAf,UACG0kB,EACElqB,QAAO,SAACzB,GAAD,OAAwB,IAAfA,EAAIsB,UACpBwF,KAAI,SAAC4M,EAAM/R,GAAP,OACH,sBAEEsH,QAASzE,EAAMyE,QACfhC,UAAU,iIAHZ,UAKE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,MAEF,qBAAKigB,wBAAyB,CAAEC,OAAQzT,EAAKtL,WAPxCzG,EAAI,OAWc,IAA5B6C,EAAMwjB,mBACL,sBAAK/gB,UAAU,qDAAf,UACE,qBAAKA,UAAU,yBAAf,4BACA,8BACG6jB,EACErpB,QAAO,SAACzB,GAAD,OAAwB,IAAfA,EAAIsB,UACpBwF,KAAI,SAAC4M,EAAM/R,GAAP,OACH,sBAEEsH,QAASzE,EAAMyE,QACfhC,UAAU,gIAHZ,UAKE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,MAEF,qBACEigB,wBAAyB,CAAEC,OAAQzT,EAAKtL,WARrCzG,EAAI,cAiB3B,KAAKspB,2BAAyBW,QAC5B,IAAMC,EACJ/O,YAAYgK,GACd,OACE,sBAAK7f,UAAU,SAAf,UACG4kB,EAAoB/kB,KAAI,SAAC4M,EAAM/R,GAAP,OACvB,sBAEEsH,QAASzE,EAAMyE,QACfhC,UAAU,iIAHZ,UAKE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,sCAAf,SACGyM,EAAKtL,MAAM/G,OAAS,EACnB,+CACU,IACR,sBAAM4F,UAAU,yCAAhB,SACGyM,EAAKtL,MAAM,KACN,IAJV,MAKM,IACJ,sBAAMnB,UAAU,yCAAhB,SACGyM,EAAKtL,MAAM,QAIhBsL,EAAKtL,MAAM/G,OAAS,GAClB,sBAAM4F,UAAU,gBAAhB,SACGyM,EAAKtL,MAAM,GAAG1F,iBAtBlBf,EAAI,OA8BgB,IAA5B6C,EAAMwjB,mBACL,sBAAK/gB,UAAU,qDAAf,UACE,qBAAKA,UAAU,yBAAf,4BACA,8BACG6jB,EAAiBhkB,KAAI,SAAC4M,EAAM/R,GAAP,OACpB,sBAEEsH,QAASzE,EAAMyE,QACfhC,UAAU,gIAHZ,UAKE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,sCAAf,SACGyM,EAAKtL,MAAM/G,OAAS,EACnB,+CACU,IACR,sBAAM4F,UAAU,yCAAhB,SACGyM,EAAKtL,MAAM,GAAKsL,EAAKtL,MAAM,KACtB,IAJV,MAKM,IACJ,sBAAMnB,UAAU,yCAAhB,SACGyM,EAAKtL,MAAM,GAAKsL,EAAKtL,MAAM,QAIhCsL,EAAKtL,MAAM/G,OAAS,GAClB,sBAAM4F,UAAU,gBAAhB,SACGyM,EAAKtL,MAAM,GAAG1F,iBAtBlBf,EAAI,cAkCzB,KAAKspB,2BAAyBa,gBAC5B,IAAMC,EACJnP,YAAmBkK,GACrB,OACE,sBAAK7f,UAAU,SAAf,UACG8kB,EAA0BjlB,KAAI,SAAC4M,EAAM/R,GAAP,OAC7B,sBAEEsH,QAASzE,EAAMyE,QACfhC,UAAU,iIAHZ,UAKE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,sCAAf,SACGyM,EAAKtL,MAAM/G,OAAS,EACnB,+CACU,IACR,sBAAM4F,UAAU,yCAAhB,SACGyM,EAAKtL,MAAM,KACN,IAJV,MAKM,IACJ,sBAAMnB,UAAU,yCAAhB,SACGyM,EAAKtL,MAAM,QAIhBsL,EAAKtL,MAAM/G,OAAS,GAClB,sBAAM4F,UAAU,gBAAhB,SACGyM,EAAKtL,MAAM,GAAG1F,iBAtBlBf,EAAI,OA8BgB,IAA5B6C,EAAMwjB,mBACL,sBAAK/gB,UAAU,qDAAf,UACE,qBAAKA,UAAU,yBAAf,4BACA,8BACG6jB,EAAiBhkB,KAAI,SAAC4M,EAAM/R,GAAP,OACpB,sBAEEsH,QAASzE,EAAMyE,QACfhC,UAAU,gIAHZ,UAKE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,sCAAf,SACGyM,EAAKtL,MAAM/G,OAAS,EACnB,+CACU,IACR,sBAAM4F,UAAU,yCAAhB,SACGyM,EAAKtL,MAAM,KACN,IAJV,MAKM,IACJ,sBAAMnB,UAAU,yCAAhB,SACGyM,EAAKtL,MAAM,QAIhBsL,EAAKtL,MAAM/G,OAAS,GAClB,sBAAM4F,UAAU,gBAAhB,SACGyM,EAAKtL,MAAM,GAAG1F,iBAtBlBf,EAAI,cAkCzB,KAAKspB,2BAAyBe,YAC5B,IAAMC,EACJpP,YAAciK,GAChB,OACE,sBAAK7f,UAAU,SAAf,UACGglB,EAAsBnlB,KAAI,SAAC4M,EAAM/R,GAAP,OACzB,sBAEEsH,QAASzE,EAAMyE,QACfhC,UAAU,iIAHZ,UAKE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,MAEF,qBACEigB,wBAAyB,CACvBC,OAAQzT,EAAKtL,WATZzG,EAAI,OAegB,IAA5B6C,EAAMwjB,mBACL,sBAAK/gB,UAAU,qDAAf,UACE,qBAAKA,UAAU,yBAAf,4BACA,8BACG6jB,EAAiBhkB,KAAI,SAAC4M,EAAM/R,GAAP,OACpB,sBAEEsH,QAASzE,EAAMyE,QACfhC,UAAU,gIAHZ,UAKE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,MAEF,qBACEigB,wBAAyB,CACvBC,OAAQzT,EAAKtL,WATZzG,EAAI,cAoBzB,KAAKspB,2BAAyBiB,MAC5B,IAAMC,EACJnP,YAAQ8J,GACV,OACE,sBAAK7f,UAAU,SAAf,UACGklB,EAAgBrlB,KAAI,SAAC4M,EAAM/R,GAAP,OACnB,sBAEEsH,QAASzE,EAAMyE,QACfhC,UAAU,iIAHZ,UAKE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,MAEF,qBACEigB,wBAAyB,CACvBC,OAAQzT,EAAKtL,WATZzG,EAAI,OAegB,IAA5B6C,EAAMwjB,mBACL,sBAAK/gB,UAAU,qDAAf,UACE,qBAAKA,UAAU,yBAAf,4BACA,8BACG6jB,EAAiBhkB,KAAI,SAAC4M,EAAM/R,GAAP,OACpB,sBAEEsH,QAASzE,EAAMyE,QACfhC,UAAU,gIAHZ,UAKE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,MAEF,qBACEigB,wBAAyB,CACvBC,OAAQzT,EAAKtL,WATZzG,EAAI,cAmBzB,KAAKspB,2BAAyBmB,SAE9B,KAAKnB,2BAAyBoB,OAC5B,OAAO,wBACT,QACE,OAAO,qBAAKplB,UAAU,+BAAf,4BA2DEqlB,IAvDI,SAAC9nB,GAClB,IAAMiY,EAASjY,EAAMujB,YAAYhoB,MAC/B,SAAC2T,GAAD,OAAUA,EAAK6T,cAAgB/iB,EAAMgjB,SAASD,eAE5CgF,EAAiB/nB,EAAMgjB,SAASA,SAASznB,MAC3C,SAACC,GAAD,OAASA,EAAIynB,WAAajjB,EAAMkjB,oBAYlC,QAVuBxnB,IAAnBqsB,GAAgC/nB,EAAMgjB,SAASA,SAASnmB,OAAS,IACnEkrB,OAGQrsB,IAFNsE,EAAMgjB,SAASA,SAASznB,MACtB,SAACC,GAAD,OAASA,EAAIynB,WAAajjB,EAAMkjB,oBAE9BljB,EAAMgjB,SAASA,SAAS,GACxBhjB,EAAMgjB,SAASA,SAASznB,MACtB,SAACC,GAAD,OAASA,EAAIynB,WAAajjB,EAAMkjB,0BAG3BxnB,IAAXuc,QAA2Cvc,IAAnBqsB,EAC1B,OACE,qBAAKtlB,UAAU,sDAAf,8BAKF,IAAIulB,EAAOD,EAAeE,aAAa1sB,MACrC,SAACC,GAAD,OAAS0sB,YAAU1sB,EAAI2sB,aAAenoB,EAAMumB,mBAG9C,OACE,mCACY7qB,IAATssB,EACG3B,EACEpO,EAAOD,QAAQ,GAAGC,OAClB8P,EAAe/P,QAAQ,GAAGC,OAC1BjY,GAEFiY,EAAOD,QACJ/a,QAAO,SAACzB,GAAD,OAASwsB,GAAQxsB,EAAI4sB,YAAcJ,EAAKI,aAC/C9lB,KAAI,SAAC+lB,GACJ,IAAMC,EAAQP,EAAgB/P,QAAQzc,MACpC,SAACC,GAAD,OACEA,EAAI4R,MAAQib,EAAYjb,KACxB5R,EAAI4sB,YAAcC,EAAYD,aAElC,YAAc1sB,IAAV4sB,EACKjC,EAAUgC,EAAYpQ,OAAQqQ,EAAMrQ,OAAQjY,GAE5C,+B,mGCtmBnBoX,E,kDACJ,WAAYpX,GAA2B,IAAD,8BACpC,cAAMA,IAOR8M,eAAiB,SAAClJ,GAChB,EAAK0L,SAAS,CAAEzC,YAAajJ,KAN7B,EAAK6H,MAAQ,CACXoB,YAAa,IAJqB,E,0CAYtC,WAAU,IAAD,OACP,OACE,gCAEE,sBAAKpK,UAAU,gCAAf,UACE,cAAC,KAAD,CAAUA,UAAU,0BACpB,uBACEpH,KAAK,OACLwH,YAAY,SACZJ,UAAU,qFACVK,SAAU,SAACC,GAAD,OAAO,EAAK+J,eAAe/J,EAAEY,OAAOC,QAC9CA,MAAO8H,KAAKD,MAAMoB,cAEpB,wBACEpK,UAAU,4EACVpH,KAAK,SACLoJ,QAAS,kBAAM,EAAKzE,MAAMgQ,sBAAqB,IAHjD,sBAUF,qBAAKvN,UAAU,4DAAf,SACGE,YAAO+I,KAAK1L,MAAMqX,gBAAiB3L,KAAKD,MAAMoB,aAAavK,KAC1D,SAAC4M,EAA4B7K,GAA7B,OACE,kCACE,qBACE5B,UAAS,4DACP,EAAKzC,MAAMmQ,aACX,EAAKnQ,MAAMmQ,YAAY1U,KAAOyT,EAAKzT,GAC/B,wCACA,QAENgJ,QAAS,WACP,EAAKzE,MAAMgQ,sBAAqB,GAChC,EAAKhQ,MAAMkQ,eAAehB,IAT9B,SAYE,mBAAGzM,UAAU,uBAAb,SAAqCyM,EAAKiG,YAbhC9Q,EAAMnG,WAAagR,EAAKzT,gB,GAvCzByQ,aA+DZkL,O,iCCrGf,yCAqFeG,IAtEiC,SAACvX,GAC/C,OACE,yBAASyC,UAAU,GAAnB,SACE,qBAAKA,UAAU,iEAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,sBAAKA,UAAU,oCAAf,UACE,sBAAMA,UAAU,kCAAhB,SACGiL,YAAiB1N,EAAM2N,mBAAoB3N,EAAMwX,SAAS1I,OAE7D,wBACEzT,KAAK,SACLoH,UAAU,eACVgC,QAAS,WACPzE,EAAMqN,oBAAmB,GACzBrN,EAAMuN,eAAevN,EAAMwX,QAAQpF,QACnCpS,EAAMsN,gBAAgB,KAN1B,uBAYF,sBAAK7K,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBAAMA,UAAU,8CAAhB,SACGqU,YAAsB9W,EAAMwX,QAAQrE,wBAGzC,sBAAK1Q,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,iCAsBF,sBAAKA,UAAU,+CAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBAAMA,UAAU,cAAhB,SACGzC,EAAMwX,QAAQvE,aAAaC,aAGhC,qBAAKzQ,UAAU,cAAf,SACE,qBACE4c,IAAG,UAAKrZ,IAAIsZ,WAAT,YAAuBtf,EAAMwX,QAAQ+H,OACxCC,IAAI,WACJ/c,UAAS,sB,ySCwGV8lB,EAAmB,SAC9BC,EACA1G,EACAmB,EACAwF,EACAC,GAEA,IAAIC,EAAgB,GAEhB3F,EAAWwF,EAAiBxF,SAASznB,MACvC,SAACC,GAAD,OAASA,EAAIynB,WAAaA,KAE5B,GAC6D,OAA3DuD,YAAiBgC,EAAiBntB,KAAMymB,IACxC0E,YAAiBgC,EAAiBntB,KAAMymB,KACtC2E,2BAAyBmB,SAC3B,CACA,IAAIgB,EAA+C,GACnD,QAAiBltB,IAAbsnB,EAAwB,CAC1B,IAAI6F,EAAsBJ,EAAgBltB,MACxC,SAACC,GAAD,OAASA,EAAIunB,cAAgByF,EAAiBzF,oBAEpBrnB,IAAxBmtB,IACFD,EAAoBC,EAAoB7Q,SAG1C,IAR0B,EAQtBA,EAAUgL,EAAShL,QACnB8Q,EAAe9F,EAAS5B,YAAY7jB,MAAM,KATpB,cAYRurB,GAZQ,yBAYjBxtB,EAZiB,QAapBc,EAAO4b,EAAQzc,MAAK,SAACC,GAAD,OAASA,EAAI4sB,YAAczqB,SAASrC,EAAM,OAClE,QAAaI,IAATU,EAAoB,CAEtB,IAAIf,EAAO2nB,EAASiF,aAAa1sB,MAC/B,SAACC,GAAD,OAASA,EAAI4sB,YAAczqB,SAASrC,EAAM,YAE/BI,IAATL,GACFstB,EAAc9d,KAzIL,SACnB7H,EACA3H,EACAotB,EACAC,GAEA,IADgB,EACZ1Q,EAAkC,GADtB,cAEGhV,EAAKiV,QAFR,IAEhB,2BAAgC,CAAC,IAAxBA,EAAuB,QAC9BD,EAAQnN,KAAK,CACXpP,GAAIwc,EAAOxc,GACXmI,MAAOqU,EAAOrU,MACd9G,OAAQmb,EAAOnb,UANH,8BAShB,IAAIisB,EAAmDN,EAAgBltB,MACrE,SAACC,GAAD,OAASA,EAAI4sB,YAAcplB,EAAKolB,aAE9BY,EAAmC,GAIvC,YAHoBttB,IAAhBqtB,IACFC,EAAWD,EAAY9Q,QAErBD,EAAQnb,OAAS,EACfxB,IAAS4tB,sBAAoBrC,eAE7B,sBAAMnkB,UAAU,QAAhB,SACE,yBACEA,UAAS,wEACa,IAApBumB,EAASnsB,aAC4CnB,IAArDsc,EAAQzc,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOutB,EAAS,GAAGvtB,MACzC,0BACA,2BAENmI,MAA2B,IAApBolB,EAASnsB,OAAe,GAAKmsB,EAAS,GAAGvtB,GAChDqH,SAAU,SAACC,GACT,IAAImmB,EAASlR,EAAQzc,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOsH,EAAEY,OAAOC,cACxClI,IAAXwtB,EACFR,EAAU,CACRtb,IAAKpK,EAAKoK,IACVgb,UAAWplB,EAAKolB,UAChBnQ,OAAQ,CACN,CACExc,GAAIytB,EAAOztB,GACXmI,MAAOslB,EAAOtlB,MACd9G,OAAQosB,EAAOpsB,WAKrBqsB,MAAM,oBAvBZ,UA2BE,wBAAQvlB,MAAO,GAAf,mCACCoU,EAAQ1V,KAAI,SAAC4M,EAAM/R,GAAP,OACX,wBAAQyG,MAAOsL,EAAKzT,GAApB,SACGyT,EAAKtL,OADqBzG,EAAI,WASvC,sBAAMsF,UAAU,qBAAhB,SACE,uBACEmB,MACsB,IAApBolB,EAASnsB,OACL,GACAxB,IAAS4tB,sBAAoBzB,YAC7BwB,EAAS,GAAGplB,MACZolB,EAAS,GAAGplB,MAAM,GAExBd,SAAU,SAACC,GACT2lB,EAAU,CACRtb,IAAKpK,EAAKoK,IACVgb,UAAWplB,EAAKolB,UAChBnQ,OAAQ,CACN,CACExc,GAAIuc,EAAQ,GAAGvc,GACfmI,MACEvI,IAAS4tB,sBAAoBzB,YACzBzkB,EAAEY,OAAOC,MACT,CAACb,EAAEY,OAAOC,OAChB9G,OAAQkb,EAAQ,GAAGlb,YAK3BzB,KAAK,OACLoH,UAAU,0FAMX,sDA2CG2mB,CAAahtB,EAAMf,EAAK8sB,UAAWS,EAAmBF,SAI1DC,EAAc9d,KAAKvP,IAbvB,2BAAiC,IAZP,gCA8B9B,OACE,qBAAKmH,UAAU,sCAAf,SACGkmB,EAAcrmB,KAAI,SAAC4M,EAAM/R,GAAP,OACjB,sBAAkBsF,UAAU,OAA5B,SACGyM,GADQ/R,EAAI,SAyiBjBksB,EAAkBjd,aAtBA,SAAC,GAavB,MAAO,CACLT,KAFC,EAXHA,KAcE2d,OAHC,EAVHA,OAcEvqB,cAJC,EATHA,cAcE+M,OALC,EARHA,OAcEgW,cANC,EAPHA,iBAiB+C,CAC/CyH,6BACAC,yBACAzH,wBAHsB3V,EAjiBC,SAACpM,GAAiC,IAAD,oCACxD,EAA8BW,oBAAkB,GAAhD,mBAAOmD,EAAP,KAAgBuL,EAAhB,KACA,EAAoC1O,oBAAkB,GAAtD,mBAAO8oB,EAAP,KAAmBC,EAAnB,KACA,EAAgD/oB,mBAC9CX,EAAMwoB,iBAAiBxF,SAAS,GAAGC,UADrC,oBAAOC,GAAP,MAAyByG,GAAzB,MAIMC,GAAkB,WACtB,IAD4B,EACxBC,EAGE,GAJsB,cAKP7pB,EAAMwoB,iBAAiBxF,UALhB,yBAKnB8G,EALmB,QAMtBC,EAAYC,IAAkBzuB,MAChC,SAAC0uB,GAAD,OAAOA,EAAEpuB,MAAQiuB,EAAS7G,iBAEVvnB,IAAdquB,IACFF,EAAK,sBAAOA,GAAP,CAAcE,MALvB,2BAAuD,IAL3B,8BAa5B,OAAOF,GAWT,OARAnoB,qBAAU,WAEgC,OAAtC1B,EAAM8hB,cAAcA,eACyB,IAA7C9hB,EAAM8hB,cAAcA,cAAcjlB,QAElCmD,EAAM+hB,kBAAkB1S,KAEzB,CAACrP,IAEF,qBAAKyC,UAAU,qBAAf,UACe,IAAZqB,EACC,qBAAKrB,UAAU,oEAAf,SACE,sBAAKA,UAAU,uCAAf,UACE,qBAAKA,UAAU,qBAAf,wBACA,cAAC,IAAD,CAASpH,KAAM6uB,IAAYC,aAI/B,sBAAK1nB,UAAU,4DAAf,UACE,qBAAKA,UAAU,2BAAf,SACE,qBAAKA,UAAU,uCAAf,SACGzC,EAAMwoB,iBAAiBxF,SAASznB,MAC/B,SAACC,GAAD,OAASA,EAAIynB,WAAaC,OAE1B,sBAAKzgB,UAAU,+BAAf,UACE,sBAAKA,UAAU,uCAAf,UACE,qBACEigB,wBAAyB,CACvBC,OAAQ3iB,EAAMwoB,iBAAiBxF,SAASznB,MACtC,SAACC,GAAD,OAASA,EAAIynB,WAAaC,MACzB3W,OAEL9J,UAAU,+BAIZ,sBAAKA,UAAU,sBAAf,UACE,sBAAKA,UAAU,qGAAf,UACGzC,EAAMwoB,iBAAiBlF,MAD1B,YAGA,sBAAK7gB,UAAU,sDAAf,UACE,sBACEgC,QAAS,kBAAMilB,GAAeD,IAC9BhnB,UAAU,mCAFZ,UAIE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,CAASA,UAAU,yBAErB,sBACEA,UAAU,gBACVF,MAAO,CAAEwY,MAAO,QAFlB,UAIE,sBAAMtY,UAAU,yCAAhB,sBAGA,sBACE8J,MAAK,UACHqd,KAAkBruB,MAChB,SAACC,GAAD,OAASA,EAAIK,MAAQqnB,aAFpB,aACH,EAEGtf,MAELnB,UAAU,2CACVF,MAAO,CAAEwY,MAAO,QAPlB,mBAUI6O,KAAkBruB,MAChB,SAACC,GAAD,OAASA,EAAIK,MAAQqnB,aAX3B,aAUI,EAEGtf,WAIT,qBACEnB,UAAS,WACQ,IAAfgnB,EACI,2BACA,+BAHG,yIADX,UAOkB,IAAfA,EACC,cAAC,IAAD,CAAShnB,UAAU,sBAEnB,cAAC,IAAD,CAAiBA,UAAU,iCAIjB,IAAfgnB,GACC,qBACEhnB,UAAU,mCACVF,MAAO,CAAEwY,MAAO,SAFlB,SAIE,qBAAKtY,UAAU,uGAAf,SACGmnB,KAAkBtnB,KAAI,SAAC4M,EAAM/R,GAAP,OACrB,uBACEsH,QAAS,WACPzE,EAAMwpB,oBAAoBta,EAAKrT,KAC/B6tB,GAAeD,GACfE,GAAoBza,EAAKrT,MAG3B4G,UAAS,iIACPygB,KAAqBhU,EAAKrT,IACtB,6CACA,qFAVR,UAaGqnB,KAAqBhU,EAAKrT,IACzB,cAAC,KAAD,CAAsB4G,UAAU,iBAEhC,cAAC,KAAD,CAAwBA,UAAU,iBACjC,IACFyM,EAAKtL,QAZDzG,EAAI,mBAqBe,OAAvC6C,EAAMwoB,iBAAiBzF,aAIlB,OAHNyD,YACExmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,gBAEtB0E,YACExmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,iBAChB2E,2BAAyBmB,SAC7BW,EACEvoB,EAAMwoB,iBACNxoB,EAAM8hB,cAAcA,cACpBoB,GACAljB,EAAMjB,cAAcunB,kBACpB,eAGF,qBACE5D,wBAAyB,CACvBC,OAAQ3iB,EAAMwoB,iBAAiBxF,SAASznB,MACtC,SAACC,GAAD,OAASA,EAAIynB,WAAaC,MACzB9B,aAEL3e,UAAU,gDAOtB,sBACEA,UAAS,yBACgC,OAAvCzC,EAAMwoB,iBAAiBzF,aAIjB,OAHNyD,YACExmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,gBAErB0E,YACCxmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,iBAChB2E,2BAAyBmB,UAC7BpB,YACExmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,iBAChB2E,2BAAyBoB,OAE7B,WADA,GAdG,YAiBTpjB,QAAS,kBAAqB,IAAfglB,GAAuBC,GAAc,IAlBtD,UAqB0C,OAAvC1pB,EAAMwoB,iBAAiBzF,aAIhB,OAHNyD,YACExmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,iBAErB0E,YACCxmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,iBAChB2E,2BAAyBC,gBAC7BF,YACExmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,iBAChB2E,2BAAyBG,iBAC/B,cAAC,IAAD,CACEvrB,KAAMmrB,YACJxmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,eAEtBsI,kBAAmBpqB,EAAMjB,cAAcunB,iBACvC+D,uBAAwB,CACtBtH,YAAa/iB,EAAMwoB,iBAAiBzF,YACpCC,cAAUtnB,EACVsc,QAASD,YACP/X,EAAMwoB,iBAAiBxF,SAASznB,MAC9B,SAACC,GAAD,OAASA,EAAIynB,WAAaC,MACzBlL,QAAQ,GAAGC,QAEhBqS,YAAatqB,EAAMwoB,iBAAiBxF,SAASznB,MAC3C,SAACC,GAAD,OAASA,EAAIynB,WAAaC,MACzBlL,QAAQ,IAEbuS,iBAAkBvqB,EAAMuqB,mBAIU,OAAvCvqB,EAAMwoB,iBAAiBzF,aAIhB,OAHNyD,YACExmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,gBAEtB0E,YACExmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,iBAChB2E,2BAAyBS,WAC7B,cAAC,IAAD,CACE7rB,KAAMmrB,YAAgB,UACpBxmB,EAAMjB,cAAcyrB,sBADA,iBACpB,EAAoC1H,UAAUvnB,MAC5C,SAACC,GAAD,OACEA,EAAIunB,cAAgB/iB,EAAMwoB,iBAAiBzF,sBAH3B,aACpB,EAGG1nB,KACH2E,EAAM8hB,cAAcA,eAEtBsI,kBAAmBpqB,EAAMjB,cAAcunB,iBACvC+D,uBAAwB,CACtBtH,YAAa/iB,EAAMwoB,iBAAiBzF,YACpCC,cAAUtnB,EACVsc,QAASE,YACPlY,EAAMwoB,iBAAiBxF,SAASznB,MAC9B,SAACC,GAAD,OAASA,EAAIynB,WAAaC,MACzBlL,QAAQ,GAAGC,QAEhBqS,YAAatqB,EAAMwoB,iBAAiBxF,SAASznB,MAC3C,SAACC,GAAD,OAASA,EAAIynB,WAAaC,MACzBlL,QAAQ,IAEbuS,iBAAkBvqB,EAAMuqB,mBAWU,OAAvCvqB,EAAMwoB,iBAAiBzF,aAIhB,OAHNyD,YACExmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,gBAEtB0E,YACExmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,iBAChB2E,2BAAyBO,UAC7B,cAAC,IAAD,CACE9D,iBAAkBA,GAClBuH,aAAczqB,EAAMjB,cAAcyrB,eAClCnvB,KAAMmrB,YAAgB,UACpBxmB,EAAMjB,cAAcyrB,sBADA,iBACpB,EAAoC1H,UAAUvnB,MAC5C,SAACC,GAAD,OACEA,EAAIunB,cAAgB/iB,EAAMwoB,iBAAiBzF,sBAH3B,aACpB,EAGG1nB,KACH2E,EAAM8hB,cAAcA,eAEtBsI,kBAAmBpqB,EAAMjB,cAAcunB,iBACvC+D,uBAAwB,CACtBtH,YAAa/iB,EAAMwoB,iBAAiBzF,YACpCC,cAAUtnB,EACVsc,QAASG,YACPnY,EAAMwoB,iBAAiBxF,SAASznB,MAC9B,SAACC,GAAD,OAASA,EAAIynB,WAAaC,MACzBlL,QAAQ,GAAGC,QAEhByS,gBAAiBC,YACfxS,YACEnY,EAAMwoB,iBAAiBxF,SAASznB,MAC9B,SAACC,GAAD,OAASA,EAAIynB,WAAaC,MACzBlL,QAAQ,GAAGC,SAGlBqS,YAAatqB,EAAMwoB,iBAAiBxF,SAASznB,MAC3C,SAACC,GAAD,OAASA,EAAIynB,WAAaC,MACzBlL,QAAQ,IAEbuS,iBAAkBvqB,EAAMuqB,mBAIU,OAAvCvqB,EAAMwoB,iBAAiBzF,aAIhB,OAHNyD,YACExmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,gBAEtB0E,YACExmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,iBAChB2E,2BAAyBa,iBAC7B,cAAC,IAAD,CACEjsB,KAAMmrB,YAAgB,UACpBxmB,EAAMjB,cAAcyrB,sBADA,iBACpB,EAAoC1H,UAAUvnB,MAC5C,SAACC,GAAD,OACEA,EAAIunB,cAAgB/iB,EAAMwoB,iBAAiBzF,sBAH3B,aACpB,EAGG1nB,KACH2E,EAAM8hB,cAAcA,eAEtBsI,kBAAmBpqB,EAAMjB,cAAcunB,iBACvC+D,uBAAwB,CACtBtH,YAAa/iB,EAAMwoB,iBAAiBzF,YACpCC,cAAUtnB,EACVsc,QAASI,YACPpY,EAAMwoB,iBAAiBxF,SAASznB,MAC9B,SAACC,GAAD,OAASA,EAAIynB,WAAaC,MACzBlL,QAAQ,GAAGC,QAEhBqS,YAAatqB,EAAMwoB,iBAAiBxF,SAASznB,MAC3C,SAACC,GAAD,OAASA,EAAIynB,WAAaC,MACzBlL,QAAQ,IAEbuS,iBAAkBvqB,EAAMuqB,mBAIU,OAAvCvqB,EAAMwoB,iBAAiBzF,aAIhB,OAHNyD,YACExmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,gBAEtB0E,YACExmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,iBAChB2E,2BAAyBe,aAC7B,cAAC,IAAD,CACEnsB,KAAMmrB,YAAgB,UACpBxmB,EAAMjB,cAAcyrB,sBADA,iBACpB,EAAoC1H,UAAUvnB,MAC5C,SAACC,GAAD,OACEA,EAAIunB,cAAgB/iB,EAAMwoB,iBAAiBzF,sBAH3B,aACpB,EAGG1nB,KACH2E,EAAM8hB,cAAcA,eAEtBsI,kBAAmBpqB,EAAMjB,cAAcunB,iBACvC+D,uBAAwB,CACtBtH,YAAa/iB,EAAMwoB,iBAAiBzF,YACpCC,cAAUtnB,EACVsc,QAASK,YACPrY,EAAMwoB,iBAAiBxF,SAASznB,MAC9B,SAACC,GAAD,OAASA,EAAIynB,WAAaC,MACzBlL,QAAQ,GAAGC,QAEhBqS,YAAatqB,EAAMwoB,iBAAiBxF,SAASznB,MAC3C,SAACC,GAAD,OAASA,EAAIynB,WAAaC,MACzBlL,QAAQ,IAEbuS,iBAAkBvqB,EAAMuqB,mBAKU,OAAvCvqB,EAAMwoB,iBAAiBzF,aAIhB,OAHNyD,YACExmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,gBAEtB0E,YACExmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,iBAChB2E,2BAAyBW,SAC7B,cAAC,IAAD,CACE/rB,KAAMmrB,YAAgB,UACpBxmB,EAAMjB,cAAcyrB,sBADA,iBACpB,EAAoC1H,UAAUvnB,MAC5C,SAACC,GAAD,OACEA,EAAIunB,cAAgB/iB,EAAMwoB,iBAAiBzF,sBAH3B,aACpB,EAGG1nB,KACH2E,EAAM8hB,cAAcA,eAEtBsI,kBAAmBpqB,EAAMjB,cAAcunB,iBACvC+D,uBAAwB,CACtBtH,YAAa/iB,EAAMwoB,iBAAiBzF,YACpCC,cAAUtnB,EACVsc,QAASM,YACPtY,EAAMwoB,iBAAiBxF,SAASznB,MAC9B,SAACC,GAAD,OAASA,EAAIynB,WAAaC,MACzBlL,QAAQ,GAAGC,QAEhBqS,YAAatqB,EAAMwoB,iBAAiBxF,SAASznB,MAC3C,SAACC,GAAD,OAASA,EAAIynB,WAAaC,MACzBlL,QAAQ,IAEbuS,iBAAkBvqB,EAAMuqB,mBAIU,OAAvCvqB,EAAMwoB,iBAAiBzF,aAIhB,OAHNyD,YACExmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,gBAEtB0E,YACExmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,iBAChB2E,2BAAyBK,0BAC7B,cAAC,IAAD,CACEzrB,KAAMmrB,YAAgB,UACpBxmB,EAAMjB,cAAcyrB,sBADA,iBACpB,EAAoC1H,UAAUvnB,MAC5C,SAACC,GAAD,OACEA,EAAIunB,cAAgB/iB,EAAMwoB,iBAAiBzF,sBAH3B,aACpB,EAGG1nB,KACH2E,EAAM8hB,cAAcA,eAEtBsI,kBAAmBpqB,EAAMjB,cAAcunB,iBACvC+D,uBAAwB,CACtBtH,YAAa/iB,EAAMwoB,iBAAiBzF,YACpCC,cAAUtnB,EACVsc,QAASO,YACPvY,EAAMwoB,iBAAiBxF,SAASznB,MAC9B,SAACC,GAAD,OAASA,EAAIynB,WAAaC,MACzBlL,QAAQ,GAAGC,QAEhBqS,YAAatqB,EAAMwoB,iBAAiBxF,SAASznB,MAC3C,SAACC,GAAD,OAASA,EAAIynB,WAAaC,MACzBlL,QAAQ,IAEbuS,iBAAkBvqB,EAAMuqB,mBAIU,OAAvCvqB,EAAMwoB,iBAAiBzF,aAIhB,OAHNyD,YACExmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,gBAEtB0E,YACExmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,iBAChB2E,2BAAyBiB,OAC7B,cAAC,IAAD,CACErsB,KAAMmrB,YAAgB,UACpBxmB,EAAMjB,cAAcyrB,sBADA,iBACpB,EAAoC1H,UAAUvnB,MAC5C,SAACC,GAAD,OACEA,EAAIunB,cAAgB/iB,EAAMwoB,iBAAiBzF,sBAH3B,aACpB,EAGG1nB,KACH2E,EAAM8hB,cAAcA,eAEtBsI,kBAAmBpqB,EAAMjB,cAAcunB,iBACvC+D,uBAAwB,CACtBtH,YAAa/iB,EAAMwoB,iBAAiBzF,YACpCC,cAAUtnB,EACVsc,QAASQ,YACPxY,EAAMwoB,iBAAiBxF,SAASznB,MAC9B,SAACC,GAAD,OAASA,EAAIynB,WAAaC,MACzBlL,QAAQ,GAAGC,QAEhBqS,YAAatqB,EAAMwoB,iBAAiBxF,SAASznB,MAC3C,SAACC,GAAD,OAASA,EAAIynB,WAAaC,MACzBlL,QAAQ,IAEbuS,iBAAkBvqB,EAAMuqB,mBAIU,OAAvCvqB,EAAMwoB,iBAAiBzF,aAIhB,OAHNyD,YACExmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,gBAEtB0E,YACExmB,EAAMwoB,iBAAiBntB,KACvB2E,EAAM8hB,cAAcA,iBAChB2E,2BAAyBoB,QAC7B,cAAC,IAAD,CACExsB,KAAMmrB,YAAgB,UACpBxmB,EAAMjB,cAAcyrB,sBADA,iBACpB,EAAoC1H,UAAUvnB,MAC5C,SAACC,GAAD,OACEA,EAAIunB,cAAgB/iB,EAAMwoB,iBAAiBzF,sBAH3B,aACpB,EAGG1nB,KACH2E,EAAM8hB,cAAcA,eAEtBsI,kBAAmBpqB,EAAMjB,cAAcunB,iBACvC+D,uBAAwB,CACtBtH,YAAa/iB,EAAMwoB,iBAAiBzF,YACpCC,cAAUtnB,EACVsc,QAAShY,EAAMwoB,iBAAiBxF,SAASznB,MACvC,SAACC,GAAD,OAASA,EAAIynB,WAAaC,MACzBlL,SAEL4S,cAAe5qB,EAAMwoB,iBAAiBxF,SAASznB,MAC7C,SAACC,GAAD,OAASA,EAAIynB,WAAaC,MAE5BqH,iBAAkBvqB,EAAMuqB,iBACxBrH,iBAAkBA,GAClBuH,aAAczqB,EAAMjB,cAAcyrB,4BAsCrCnB,O,oFC5wBTwB,EAAwB,SAC5BC,GAEA,OAAOA,EAAgB7tB,QACrB,SAACiS,GAAD,OAAUA,EAAKoE,qBAAuB4N,IAAkBC,aA2I7ClK,IAjGiD,SAACjX,GAC/D,IAtCA+qB,EACAlQ,EAqCA,EAAsCla,mBAAiB,IAAvD,mBAAOkM,EAAP,KAAoBC,EAApB,KACA,OACE,oCAEE,sBAAKrK,UAAU,gCAAf,UACE,cAAC,KAAD,CAAUA,UAAU,0BACpB,uBACEpH,KAAK,OACLwH,YAAY,SACZJ,UAAU,qFACVK,SAAU,SAACC,GAAD,OAAO+J,EAAe/J,EAAEY,OAAOC,QACzCA,MAAOiJ,EACPhJ,WACEgnB,EAAsB7qB,EAAMoT,uBAAuBnW,QAAO,SAACiS,GAAD,OACxDlC,YACEhN,EAAMiN,SACNjN,EAAMkN,cAAc5N,gBACpB4P,EAAKqD,mBAEP1V,OAAS,KAKf,wBACE4F,UAAU,4EACVpH,KAAK,SACLoJ,QAAS,WACPzE,EAAMqN,oBAAmB,GACzBrN,EAAMsN,gBAAgB,KAL1B,sBAWwC,IAE1C,qBAAK7K,UAAU,4DAAf,SACGooB,EAAsB7qB,EAAMoT,uBAAuBnW,QAAO,SAACiS,GAAD,OACzDlC,YACEhN,EAAMiN,SACNjN,EAAMkN,cAAc5N,gBACpB4P,EAAKqD,mBAEP1V,OAAS,GAlFjBkuB,EAoFUF,EAAsB7qB,EAAMoT,uBAAuBnW,QAAO,SAACiS,GAAD,OACxDlC,YACEhN,EAAMiN,SACNjN,EAAMkN,cAAc5N,gBACpB4P,EAAKqD,mBAvFnBsI,EA0FUhO,OAxFNnR,IAAcmf,GAAiB,KAATA,EAAoBkQ,EACvCA,EAAQ9tB,QAAO,SAAC+tB,GACrB,IAAIC,EAGJ,IAAK,IAAIC,KAAQF,EASf,GARAC,GAAO,EACM,aAATC,IACFD,EACED,EAAQpX,SAASC,eACd3V,WACAmF,cACAI,QAAQoX,EAAKxX,gBAAkB,GAElC4nB,EAAM,MAEZ,OAAOA,MAyEC3oB,KAAI,SAAC4M,EAAM7K,GAAP,OACJ,sBACE5B,UAAS,yEACPzC,EAAM6P,cAAgBX,EAAKqD,gBAC3B,yCAHJ,UAOE,qBACE9P,UAAU,iCACVgC,QAAS,WACPzE,EAAMqN,oBAAmB,GACzBrN,EAAMuN,eAAe2B,EAAKqD,iBAJ9B,SAOE,mBAAG9P,UAAU,mCAAb,SACGyM,EAAK0E,SAASC,mBAGnB,wBACExY,KAAK,SACLoH,UAAU,uGACVgC,QAAS,WACPzE,EAAMsN,gBAAgB4B,EAAKqD,iBAJ/B,oBAbKlO,EAAQ6K,EAAKqD,mBAyBtB,qBAAK9P,UAAU,kBAAf,SACE,mBAAGA,UAAU,mCAAb,qD,4EC/FC0oB,EAAoB,SAC/BC,EACAzd,GAEA,IAAI0d,EAAyC,GAC7C,IAAK,IAAIluB,KAAKiuB,EACZC,EAAaxgB,KAAK,CAChBwD,YAAa+c,EAAajuB,GAAGkR,YAC7Bid,QAASF,EAAajuB,GAAGmuB,QACzBlK,YAAagK,EAAajuB,GAAGikB,YAC7BxM,MAAOwW,EAAajuB,GAAGyX,MACvB2W,SAAUH,EAAajuB,GAAGouB,SAC1BhM,MAAO6L,EAAajuB,GAAGoiB,MACvBiM,MAAOJ,EAAajuB,GAAGquB,MACvBC,aAAcL,EAAajuB,GAAGsuB,aAC9Bje,OAAQ4d,EAAajuB,GAAGqQ,OACxBke,UAAWN,EAAajuB,GAAGuuB,UAC3BC,WAAYP,EAAajuB,GAAGwuB,WAC5B1d,gBAAiBmd,EAAajuB,GAAG8Q,gBACjC1B,MAAO6e,EAAajuB,GAAGoP,MACvBqf,KAAMR,EAAajuB,GAAGyuB,KACtBzY,kBAAmBiY,EAAajuB,GAAGgW,kBACnCF,aAAcmY,EAAajuB,GAAG8V,aAC9Bb,OAAQgZ,EAAajuB,GAAGiV,OACxByZ,UAAWne,YAAiBC,EAAoByd,EAAajuB,IAAI2R,KACjEN,0BAA2B4c,EAAajuB,GAAGqR,4BAG/C,OAAO6c,GAGHS,EAAuB,SAC3BV,GAOA,OALAllB,QAAQC,IAAI,CACV4lB,SAAUX,EAAanuB,QACrB,SAACiS,GAAD,MAAqC,aAA3BA,EAAKiE,uBAGZiY,EAAanuB,QAAO,SAACiS,GAAD,MAAqC,aAA3BA,EAAKiE,sBAoI7B6D,IAzG2C,SAAChX,GACzD,IAxBA+qB,EACAlQ,EAuBA,EAAsCla,mBAAiB,IAAvD,mBAAOkM,EAAP,KAAoBC,EAApB,KACA,OACE,oCAEE,sBAAKrK,UAAU,gCAAf,UACE,cAAC,KAAD,CAAUA,UAAU,0BACpB,uBACEpH,KAAK,OACLwH,YAAY,SACZJ,UAAU,qFACVK,SAAU,SAACC,GAAD,OAAO+J,EAAe/J,EAAEY,OAAOC,QACzCA,MAAOiJ,EACPhJ,WACEsnB,EACEW,EAAqB9rB,EAAMgT,oBAC3BhT,EAAM2N,oBACN1Q,QAAO,SAACiS,GAAD,OACPlC,YACEhN,EAAMiN,SACNjN,EAAMkN,cAAc5N,gBACpB4P,EAAKkD,WAEPvV,OAAS,KAKf,wBACE4F,UAAU,4EACVpH,KAAK,SACLoJ,QAAS,WACPzE,EAAMqN,oBAAmB,GACzBrN,EAAMsN,gBAAgB,KAL1B,sBAYF,qBAAK7K,UAAU,4DAAf,SACGzC,EAAMgT,mBAAmB/V,QAAO,SAACiS,GAAD,OAC/BlC,YACEhN,EAAMiN,SACNjN,EAAMkN,cAAc5N,gBACpB4P,EAAKkD,WAEPvV,OAAS,GAtEjBkuB,EAwEUI,EACEW,EAAqB9rB,EAAMgT,oBAC3BhT,EAAM2N,oBACN1Q,QAAO,SAACiS,GAAD,OACPlC,YACEhN,EAAMiN,SACNjN,EAAMkN,cAAc5N,gBACpB4P,EAAKkD,WA9EnByI,EAiFUhO,OA/ENnR,IAAcmf,GAAiB,KAATA,EAAoBkQ,EACvCA,EAAQ9tB,QACb,SAAC+tB,GAAD,OACEA,EAAQa,UAAU3tB,WAAWmF,cAAcI,QAAQoX,EAAKxX,gBACvD,MA4EKf,KAAI,SAACsL,EAAKvJ,GAAN,OACJ,kCACE,sBACE5B,UAAS,yEACPzC,EAAM6P,cAAgBjC,EAAIwE,QAC1B,yCAHJ,UAME,qBACE3P,UAAU,iCACVgC,QAAS,WACPzE,EAAMqN,oBAAmB,GACzBrN,EAAMuN,eAAeK,EAAIwE,SAJ7B,SAOE,mBAAG3P,UAAU,mCAAb,SACGiL,YAAiB1N,EAAM2N,mBAAoBC,GAAKkB,SAGrD,wBACEzT,KAAK,SACLoH,UAAU,uGACVgC,QAAS,WACPzE,EAAM8P,eAAiBlC,EAAIwE,OACvBpS,EAAMsN,gBAAgB,IACtBtN,EAAMsN,gBAAgBM,EAAIwE,SANlC,SASGpS,EAAM8P,eAAiBlC,EAAIwE,OAAS,QAAU,aA3BvC/N,EAAQuJ,EAAIwE,WAiC5B,qBAAK3P,UAAU,kBAAf,SACE,mBAAGA,UAAU,mCAAb,qD,qOC7LCupB,EAAsB,SAACC,GAClC,IAAInxB,EAAc,IAAI4C,KAEtB,OADa,IAAIA,KAAKuuB,EAAU5G,UACnB3mB,WAAa5D,EAAM4D,WAMrBwtB,EAAmB,SAC9Bxb,GAEA,OAAOyb,IAAa5wB,MAAK,SAAC2T,GAAD,OAAUA,EAAKwB,WAAaA,MAG1CC,EAAe,SAC1Byb,EACAC,GAEA,GAAID,EAAgBplB,UAAW,CAC7B,IAAIlM,EAAQ,IAAI4C,KACd4uB,EAAc,IAAI5uB,KAAK2uB,EAAShH,UAChCkH,EAAgB,IAAI7uB,KAAK2uB,EAASlH,YACpC,GACEmH,EAAY5tB,WAAa5D,EAAM4D,WAC/B6tB,EAAc7tB,WAAa5D,EAAM4D,WACjC2tB,EAAS/G,cAAgBC,IAAsBiH,OAE/C,MAAO,OACF,GACLD,EAAc7tB,UAAY5D,EAAM4D,WAChC2tB,EAAS/G,cAAgBC,IAAsBiH,OAE/C,MAAO,UAGX,MAAO,UAgBIC,EAAb,kDAIE,WAAYzsB,GAA6B,IAAD,8BACtC,cAAMA,IAOR0sB,qBARwC,uCAQjB,WACrBC,EACAN,GAFqB,uBAAAzmB,EAAA,yDAIfgnB,EAA6BD,EAAQ3lB,UAAY,QAAU,OAE5D6lB,OAAOC,QAAP,mCAA2CF,EAA3C,gBANgB,0CAOZ,GAPY,OA0BrB,IAAW/wB,KAhBNmwB,EAAoBK,IACvB,EAAKrsB,MAAMqR,eAAe,CACxB9E,MAAM,8DACN+E,MAAOC,IAAgBkN,UAIvBsO,EAAgC,CAClC5G,kBAAmBwG,EAAQxG,kBAC3BhK,OAAQwQ,EAAQxQ,OAChBnV,UAAW2lB,EAAQ3lB,UACnByJ,MAAO,GACPkP,UAAWgN,EAAQhN,UACnBqN,UAAWL,EAAQK,UACnB1tB,gBAAiBqtB,EAAQrtB,iBAETqtB,EAAQlc,MACpBmG,OAAOqW,UAAUC,eAAeC,KAAKR,EAAQlc,MAAO5U,KAChDC,EAAU6wB,EAAQlc,MAAM5U,GAC1BwwB,EAAS3b,WAAa5U,EAAQ4U,SAC5B2b,EAAS/G,cAAgBC,IAAsBC,KACjDuH,EAAQtc,MAAM5F,KAAK,CACjBzP,QAASixB,EAASjxB,QAClBgrB,WAAYiG,EAASjG,WACrB1V,SAAU2b,EAAS3b,SACnB4U,YAAaC,IAAsBiH,OACnCrH,WAAYkH,EAASlH,WACrBE,SAAUgH,EAAShH,SACnB+H,oBAAqBf,EAASe,oBAC9BhgB,IAAKif,EAASjf,IACdigB,QAAShB,EAASgB,UAGpBN,EAAQtc,MAAM5F,KAAK,CACjBzP,QAASixB,EAASjxB,QAClBgrB,WAAYiG,EAASjG,WACrB1V,SAAU2b,EAAS3b,SACnB4U,YAAaC,IAAsBC,KACnCL,WAAYkH,EAASlH,WACrBE,SAAUgH,EAAShH,SACnB+H,oBAAqBf,EAASe,oBAC9BhgB,IAAKif,EAASjf,IACdigB,QAAShB,EAASgB,UAItBN,EAAQtc,MAAM5F,KAAK/O,IAxDJ,OA6DrBoK,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAE4mB,YACd7mB,QAAQC,IAAI,wCAEZ,EAAKmJ,SAAS,CAAE2Q,eAAgBoM,EAAS3b,WAjEpB,oBAmED5K,IAAM6Y,IAAN,UACb3Y,IAAIC,SADS,oBACW0mB,EAAQrtB,iBACnCytB,GArEiB,QAmEbtwB,EAnEa,OAuEnB,EAAKuD,MAAMsH,kBAAkB7K,EAAIuG,MACjC,EAAKhD,MAAMstB,mBAAmB7wB,EAAIuG,MAClC,EAAKhD,MAAMqR,eAAe,CACxB9E,MAAM,WAAD,OAAaqgB,EAAb,kBACLtb,MAAOC,IAAgBgc,OAEzB,EAAKje,SAAS,CAAE2Q,eAAgB,KAChC/Z,QAAQC,IAAI,sBAAuB1J,GA9EhB,mDAgFnByJ,QAAQM,MAAM,CAAEA,MAAOC,YAAY,EAAD,MAClC,EAAKzG,MAAMqR,eAAe,CACxB9E,MAAO9F,YAAY,EAAD,IAClB6K,MAAOC,IAAgBkN,UAnFN,2DARiB,wDAGtC,EAAKhT,MAAQ,CACXwU,eAAgB,IAJoB,EAJ1C,0CAoGE,WAAU,IAAD,OACP,OACE,wBAAOxd,UAAU,6BAA6BhH,GAAG,kBAAjD,UACE,uBAAOgH,UAAU,sEAAjB,SACE,+BACE,oBAAIA,UAAU,MAAd,eACA,oBAAIA,UAAU,MAAd,uBACA,oBAAIA,UAAU,MAAd,wBACA,oBAAIA,UAAU,MAAd,sBACCiJ,KAAK1L,MAAMosB,gBAAgBplB,WAC1B,oBAAIvE,UAAU,MAAMsW,QAAS,EAA7B,yBAMN,gCAEGrN,KAAK1L,MAAMosB,gBAAgB3b,MAAMnO,KAAI,SAAC4M,EAAM7K,GAAP,OACpC,qBAEE5B,UAAS,6CAFX,UAIE,oBAAIA,UAAU,kCAAd,SAAiD4B,EAAQ,IACzD,oBAAI5B,UAAU,gBAAd,SACE,sBAAMA,UAAU,UAAhB,SACGypB,EAAiBhd,EAAKwB,WACrBoG,YACEoV,EAAiBhd,EAAKwB,UAAW0V,gBAIzC,oBAAI3jB,UAAU,gBAAd,SAA+B0a,YAAKjO,EAAKiW,cACzC,oBAAI1iB,UAAU,gBAAd,SAA+B0a,YAAKjO,EAAKmW,YACxC,EAAKrlB,MAAMosB,gBAAgBplB,WAC1B,6BACsD,SAAnD2J,EAAa,EAAK3Q,MAAMosB,gBAAiBld,GACxC,sBAAMzM,UAAS,yCAAf,kBAIA,YADEkO,EAAa,EAAK3Q,MAAMosB,gBAAiBld,GAE3C,sBAAMzM,UAAS,wCAAf,qBAIA,sBAAMA,UAAS,uCAAf,sBAML,EAAKzC,MAAMosB,gBAAgBplB,WAC1B,6BACGglB,EAAoB9c,IACnB,sBAAKzM,UAAU,yCAAf,UACE,sBACEA,UAAS,mBACP,EAAKgJ,MAAMwU,eAAepjB,OAAS,EAC/B,qBACA,kBAEN0P,MACE2C,EAAKoW,cAAgBC,IAAsBC,KACvC,uBACA,qBAEN/gB,QAAS,kBACP,EAAKgH,MAAMwU,eAAepjB,QAAU,GACpC,EAAK6vB,qBACH,EAAK1sB,MAAMosB,gBACXld,IAfN,UAmBE,sBAAMzM,UAAU,yDAChB,sBACEA,UAAS,0JACPyM,EAAKoW,cAAgBC,IAAsBiH,OACvC,aACA,gDAIT,EAAK/gB,MAAMwU,iBAAmB/Q,EAAKwB,UAClC,cAAC,IAAD,CAAYjO,UAAU,iEAjE3B4B,EAAQ6K,EAAK9B,iBAxHhC,GAAoClB,aAuMrBE,gBAAQ,KAAM,CAC3B9E,sBACA+J,qBAFajF,CAGZqgB,I,2FCvEY/F,IApLQ,SAAC1mB,GACtB,IAAMwtB,EAAc,SAClBte,GAEA,IAAIzS,GAAM,EACV,GAAIuD,EAAMoqB,kBAAkBvtB,OAAS,EAAG,CACtC,IAAIvB,EAAQ0E,EAAMoqB,kBAAkB7uB,MAClC,SAACC,GAAD,OAASA,EAAIunB,cAAgB/iB,EAAMqqB,uBAAuBtH,eAE5D,QAAcrnB,IAAVJ,EAAqB,CACvB,IAAImyB,EAASnyB,EAAM0c,QAAQzc,MACzB,SAACmyB,GAAD,OACEA,EAAItF,YAAcpoB,EAAMqqB,uBAAuBC,YAAYlC,aAE/D,QAAe1sB,IAAX+xB,EAAsB,CACxB,IAAI9oB,EAAI8oB,EAAOxV,OAAO1c,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOyT,EAAKzT,WAC1CC,IAANiJ,IAAgC,IAAbA,EAAE7H,SACvBL,GAAM,KAKd,OAAOA,GAGHkxB,EAAkB,SACtBC,EACAC,GAEiD,OAA7C7tB,EAAMqqB,uBAAuBtH,aAC/B/iB,EAAMuqB,iBAAiB,CACrBxH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CjmB,QAAQ,EACRkb,QAAS,CACP,CACE5K,IAAKygB,EAAezgB,IACpBgb,UAAWyF,EAAezF,UAC1BnQ,OAAQ2V,OAuGlB,OAxCAlsB,qBAAU,WACR,IAAItF,EAAO4D,EAAMoqB,kBAAkB7uB,MACjC,SAACC,GAAD,OAASA,EAAIunB,cAAgB/iB,EAAMqqB,uBAAuBtH,eAE5D,SACWrnB,IAATU,QACUV,IAATU,GAAwD,IAAlCA,EAAK4b,QAAQ,GAAGC,OAAOpb,cAGHnB,IAAzCsE,EAAMqqB,uBAAuBrS,cACItc,IAAjCsE,EAAMqqB,wBACuC,OAA7CrqB,EAAMqqB,uBAAuBtH,YAC7B,CACA,IADA,EACI6K,EAAsD,GAD1D,cAEc5tB,EAAMqqB,uBAAuBrS,SAF3C,IAEA,2BAAoD,CAAC,IAA5CpS,EAA2C,QAClDgoB,EAAU,sBACLA,GADK,CAER,CACEnyB,GAAImK,EAAEnK,GACNmI,MAAOgC,EAAEhC,MACT9G,QAAQ,MARd,mCAa0CpB,IAA1CsE,EAAMqqB,uBAAuBrH,UAC3BhjB,EAAMuqB,iBAAiB,CACrBxH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CjmB,QAAQ,EACRkb,QAAS,CACP,CACE5K,IAAKpN,EAAMqqB,uBAAuBC,YAAYld,IAC9Cgb,UAAWpoB,EAAMqqB,uBAAuBC,YAAYlC,UACpDnQ,OAAQ2V,SAMnB,CAAC5tB,IAEF,8BACoC,OAAjCA,EAAMqqB,6BACoC3uB,IAAzCsE,EAAMqqB,uBAAuBrS,SAC7BhY,EAAMqqB,uBAAuBrS,QAAQ1V,KAAI,SAAC4M,EAAM/R,GAAP,OACvC,sBACEoP,MAAM,8BAEN9H,QAAS,kBAzGD,SAEhByK,EACA6T,GAEA,IAAI+K,EAAa9tB,EAAMoqB,kBAAkB7uB,MACvC,SAACC,GAAD,OAASA,EAAIunB,cAAgBA,KAE/B,QAAmBrnB,IAAfoyB,EAA0B,CAC5B,IAAIC,EAASD,EAAW9V,QAAQzc,MAC9B,SAACyyB,GAAD,OACEA,EAAO5F,YACPpoB,EAAMqqB,uBAAuBC,YAAYlC,aAE7C,QAAe1sB,IAAXqyB,EAAsB,CAExB,IAAIE,EAAgD,GACpD,GAAIjuB,EAAM3E,OAASorB,2BAAyBG,eAAgB,CAAC,IAAD,gBAC5CmH,EAAO9V,QADqC,IAC1D,2BAA6B,CAAC,IAArBiW,EAAoB,QAC3BD,EAAI,sBACCA,GADD,CAEF,CACExyB,GAAIyyB,EAAEzyB,GACNmI,MAAOsqB,EAAEtqB,MACT9G,QAAQ,MAP4C,8BAW1D6wB,EAAgBM,EAAMjuB,EAAMqqB,uBAAuBC,aAErD,IAhBwB,EAgBpB6D,EAA8D,GAhB1C,cAkBU,IAAhBF,EAAKpxB,OAAekxB,EAAO9V,OAASgW,GAlB9B,IAkBxB,2BAA4D,CAAC,IAApDG,EAAmD,QAExDD,EADEC,EAAM3yB,KAAOyT,EAAKzT,GACF,sBACb0yB,GADa,CAEhB,CACE1yB,GAAI2yB,EAAM3yB,GACVmI,MAAOwqB,EAAMxqB,MACb9G,OACEkD,EAAM3E,OAASorB,2BAAyBG,iBAEnCwH,EAAMtxB,UAIC,sBAAOqxB,GAAP,CAA2BC,IAG/CT,EACEQ,EACAnuB,EAAMqqB,uBAAuBC,cArCT,iCA4FlB5B,CAAUxZ,EAAMlP,EAAMqqB,uBAAuBtH,cAE/CtgB,UAAS,qBACe,IAAtB+qB,EAAYte,GACR,wFACA,sDAHG,2DANX,WAYyB,IAAtBse,EAAYte,GACX,mCACGlP,EAAM3E,OAASorB,2BAAyBG,eACvC,cAAC,KAAD,CAAsBnkB,UAAU,aAEhC,cAAC,IAAD,CAAmBA,UAAU,eAG/BzC,EAAM3E,OAASorB,2BAAyBG,eAC1C,cAAC,KAAD,CAAwBnkB,UAAU,sBAElC,cAAC,IAAD,CAAqBA,UAAU,aAEjC,qBACEigB,wBAAyB,CAAEC,OAAQzT,EAAKtL,OACxCnB,UAAU,WAzBPtF,EAAI,U,2ECSN+pB,IA7JG,SAAClnB,GACjB,IAAMwtB,EAAc,SAACte,GACnB,IAAIzS,GAAM,EACV,GAAIuD,EAAMoqB,kBAAkBvtB,OAAS,EAAG,CACtC,IAAIvB,EAAQ0E,EAAMoqB,kBAAkB7uB,MAClC,SAACC,GAAD,OAASA,EAAIunB,cAAgB/iB,EAAMqqB,uBAAuBtH,eAE5D,QAAcrnB,IAAVJ,EAAqB,CACvB,IAAImyB,EAASnyB,EAAM0c,QAAQzc,MACzB,SAACmyB,GAAD,OACEA,EAAItF,YAAcpoB,EAAMqqB,uBAAuBC,YAAYlC,aAE/D,QAAe1sB,IAAX+xB,EAAsB,CACxB,IAAI9oB,EAAI8oB,EAAOxV,OAAO1c,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOyT,EAAKzT,WAC1CC,IAANiJ,IAAgC,IAAbA,EAAE7H,SACvBL,GAAM,KAKd,OAAOA,GAEHkxB,EAAkB,SACtBC,EACAC,GAEiD,OAA7C7tB,EAAMqqB,uBAAuBtH,aAC/B/iB,EAAMuqB,iBAAiB,CACrBxH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CjmB,QAAQ,EACRkb,QAAS,CACP,CACE5K,IAAKygB,EAAezgB,IACpBgb,UAAWyF,EAAezF,UAC1BnQ,OAAQ2V,OA+FlB,OAxCAlsB,qBAAU,WACR,IAAItF,EAAO4D,EAAMoqB,kBAAkB7uB,MACjC,SAACC,GAAD,OAASA,EAAIunB,cAAgB/iB,EAAMqqB,uBAAuBtH,eAE5D,SACWrnB,IAATU,QACUV,IAATU,GAAwD,IAAlCA,EAAK4b,QAAQ,GAAGC,OAAOpb,cAGHnB,IAAzCsE,EAAMqqB,uBAAuBrS,cACItc,IAAjCsE,EAAMqqB,wBACuC,OAA7CrqB,EAAMqqB,uBAAuBtH,YAC7B,CACA,IADA,EACI6K,EAAiD,GADrD,cAEc5tB,EAAMqqB,uBAAuBrS,SAF3C,IAEA,2BAAoD,CAAC,IAA5CpS,EAA2C,QAClDgoB,EAAU,sBACLA,GADK,CAER,CACEnyB,GAAImK,EAAEnK,GACNmI,MAAOgC,EAAEhC,MACT9G,QAAQ,MARd,mCAY0CpB,IAA1CsE,EAAMqqB,uBAAuBrH,UAC3BhjB,EAAMuqB,iBAAiB,CACrBxH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CjmB,QAAQ,EACRkb,QAAS,CACP,CACE5K,IAAKpN,EAAMqqB,uBAAuBC,YAAYld,IAC9Cgb,UAAWpoB,EAAMqqB,uBAAuBC,YAAYlC,UACpDnQ,OAAQ2V,SAMnB,CAAC5tB,IAGF,qBAAKyC,UAAU,GAAf,SACoC,OAAjCzC,EAAMqqB,6BACoC3uB,IAAzCsE,EAAMqqB,uBAAuBrS,SAC7BhY,EAAMqqB,uBAAuBrS,QAAQ1V,KAAI,SAAC4M,EAAM/R,GAAP,OACvC,sBAEEsH,QAAS,kBA/FD,SAEhByK,EACA6T,GAEA,IAAI+K,EAAa9tB,EAAMoqB,kBAAkB7uB,MACvC,SAACC,GAAD,OAASA,EAAIunB,cAAgBA,KAE/B,QAAmBrnB,IAAfoyB,EAA0B,CAE5B,IAAIC,EAASD,EAAW9V,QAAQzc,MAC9B,SAACyyB,GAAD,OACEA,EAAO5F,YACPpoB,EAAMqqB,uBAAuBC,YAAYlC,aAE7C,QAAe1sB,IAAXqyB,EAAsB,CACxB,IADwB,EACpBE,EAA2C,GADvB,cAEVF,EAAO9V,QAFG,IAExB,2BAA6B,CAAC,IAArBiW,EAAoB,QAC3BD,EAAI,sBACCA,GADD,CAEF,CACExyB,GAAIyyB,EAAEzyB,GACNmI,MAAOsqB,EAAEtqB,MACT9G,QAAQ,MARU,8BAYxB6wB,EAAgBM,EAAMF,GACtB,IAbwB,EAapBH,EAAiD,GAb7B,cAcM,IAAhBK,EAAKpxB,OAAekxB,EAAO9V,OAASgW,GAd1B,IAcxB,2BAAwD,CAAC,IAAhDtpB,EAA+C,QAEpDipB,EADEjpB,EAAElJ,KAAOyT,EAAKzT,GACN,sBACLmyB,GADK,CAER,CACEnyB,GAAIyT,EAAKzT,GACTmI,MAAOsL,EAAKtL,MACZ9G,QAAS6H,EAAE7H,UAIL,sBAAO8wB,GAAP,CAAmBjpB,KAzBT,8BA4BxBgpB,EAAgBC,EAAYG,KAqDtBrF,CAAUxZ,EAAMlP,EAAMqqB,uBAAuBtH,cAE/CtgB,UAAS,8BACe,IAAtB+qB,EAAYte,GACR,wFACA,sDAHG,2DALX,WAWyB,IAAtBse,EAAYte,GACX,cAAC,KAAD,CAAsBzM,UAAU,aAEhC,cAAC,KAAD,CAAwBA,UAAU,aAEpC,sBAAMA,UAAU,OAAhB,SAAwByM,EAAKtL,UAfxBzG,EAAI,U,iCC7JrB,kBAiLekxB,IA5JU,SAACruB,GACxB,IAAMwtB,EAAc,SAClBte,GAEA,IAAIzS,GAAM,EACV,GAAIuD,EAAMoqB,kBAAkBvtB,OAAS,EAAG,CACtC,IAAIvB,EAAQ0E,EAAMoqB,kBAAkB7uB,MAClC,SAACC,GAAD,OAASA,EAAIunB,cAAgB/iB,EAAMqqB,uBAAuBtH,eAE5D,QAAcrnB,IAAVJ,EAAqB,CACvB,IAAImyB,EAASnyB,EAAM0c,QAAQzc,MACzB,SAACmyB,GAAD,OACEA,EAAItF,YAAcpoB,EAAMqqB,uBAAuBC,YAAYlC,aAE/D,QAAe1sB,IAAX+xB,EAAsB,CACxB,IAAI9oB,EAAI8oB,EAAOxV,OAAO1c,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOyT,EAAKzT,WAC1CC,IAANiJ,GAAkC,KAAfA,EAAEf,MAAM,KAC7BnH,GAAM,KAKd,OAAOA,GA0BHisB,EAAY,SAChBxZ,EACA6T,GAEA,IA3BA6K,EACAC,OA6BmBnyB,IAHFsE,EAAMoqB,kBAAkB7uB,MACvC,SAACC,GAAD,OAASA,EAAIunB,cAAgBA,OA5B/B6K,EAiCI,CACE,CACEnyB,GAAIuE,EAAMqqB,uBAAuBC,YAAYrS,OAAO,GAAGxc,GACvDmI,MAAOsL,EAAKtL,MACZ9G,OAAQkD,EAAMqqB,uBAAuBC,YAAYrS,OAAO,GAAGnb,SApCnE+wB,EAuCI7tB,EAAMqqB,uBAAuBC,YArCgB,OAA7CtqB,EAAMqqB,uBAAuBtH,aAC/B/iB,EAAMuqB,iBAAiB,CACrBxH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CjmB,QAAQ,EACRkb,QAAS,CACP,CACE5K,IAAKygB,EAAezgB,IACpBgb,UAAWyF,EAAezF,UAC1BnQ,OAAQ,CACN,CACExc,GAAImyB,EAAW,GAAGnyB,GAClBmI,MAAO,CAACgqB,EAAW,GAAGhqB,OACtB9G,OAAQ8wB,EAAW,GAAG9wB,eA6B9BwxB,EAAgB,WACpB,IAGIC,EAHAtW,EAASjY,EAAMoqB,kBAAkB7uB,MACnC,SAACC,GAAD,OAASA,EAAIunB,cAAgB/iB,EAAMqqB,uBAAuBtH,eAW5D,OARAwL,OACa7yB,IAAXuc,OACIvc,EACAuc,EAAOD,QAAQzc,MACb,SAACmyB,GAAD,OACEA,EAAItF,YACJpoB,EAAMqqB,uBAAuBC,YAAYlC,kBAEjC1sB,IAAXuc,QAAmCvc,IAAX6yB,EACF,IAAzBA,EAAOtW,OAAOpb,QAAgB0xB,EAAOtW,OAAO,GAAGrU,MAAM,GACrD,IAsCN,OAnCAlC,qBAAU,WACR,IAAItF,EAAO4D,EAAMoqB,kBAAkB7uB,MACjC,SAACC,GAAD,OAASA,EAAIunB,cAAgB/iB,EAAMqqB,uBAAuBtH,qBAGjDrnB,IAATU,QACUV,IAATU,GAAwD,IAAlCA,EAAK4b,QAAQ,GAAGC,OAAOpb,cAGHnB,IAAzCsE,EAAMqqB,uBAAuBrS,cACItc,IAAjCsE,EAAMqqB,wBACuC,OAA7CrqB,EAAMqqB,uBAAuBtH,kBAEarnB,IAA1CsE,EAAMqqB,uBAAuBrH,UAC3BhjB,EAAMuqB,iBAAiB,CACrBxH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CjmB,QAAQ,EACRkb,QAAS,CACP,CACE5K,IAAKpN,EAAMqqB,uBAAuBC,YAAYld,IAC9Cgb,UAAWpoB,EAAMqqB,uBAAuBC,YAAYlC,UACpDnQ,OAAQ,CACN,CACExc,GAAIuE,EAAMqqB,uBAAuBrS,QAAQ,GAAGvc,GAC5CmI,MAAO,CAAC,IACR9G,OAAQkD,EAAMqqB,uBAAuBrS,QAAQ,GAAGlb,eAQ/D,CAACkD,IAGF,qBAAKyC,UAAU,GAAf,SACoC,OAAjCzC,EAAMqqB,6BACoC3uB,IAAzCsE,EAAMqqB,uBAAuBrS,SAC7BhY,EAAMqqB,uBAAuBrS,QAAQ1V,KAAI,SAAC4M,EAAM/R,GAAP,OACvC,qBAEEsF,UAAS,iDAFX,SAIE,uBACEK,SAAU,SAACC,GACT2lB,EACE,CACEjtB,GAAIyT,EAAKzT,GACTmI,MAAOb,EAAEY,OAAOC,MAChB9G,OAAQoS,EAAKpS,QAEfkD,EAAMqqB,uBAAuBtH,cAGjC1nB,KAAK,OACLuI,MAAO0qB,IACP7rB,UAAS,kEACe,IAAtB+qB,EAAYte,GACR,4DACA,sDAnBH/R,EAAI,U,iCCrJrB,kBAmLeqqB,IA9JK,SAACxnB,GACnB,IAAMwtB,EAAc,SAACte,GACnB,IAAIzS,GAAM,EACV,GAAIuD,EAAMoqB,kBAAkBvtB,OAAS,EAAG,CACtC,IAAIvB,EAAQ0E,EAAMoqB,kBAAkB7uB,MAClC,SAACC,GAAD,OAASA,EAAIunB,cAAgB/iB,EAAMqqB,uBAAuBtH,eAE5D,QAAcrnB,IAAVJ,EAAqB,CACvB,IAAImyB,EAASnyB,EAAM0c,QAAQzc,MACzB,SAACmyB,GAAD,OACEA,EAAItF,YAAcpoB,EAAMqqB,uBAAuBC,YAAYlC,aAE/D,QAAe1sB,IAAX+xB,EAAsB,CACxB,IAAI9oB,EAAI8oB,EAAOxV,OAAO1c,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOyT,EAAKzT,WAC1CC,IAANiJ,GAA+B,KAAZA,EAAEf,QACvBnH,GAAM,KAKd,OAAOA,GAoBHisB,EAAY,SAChBxZ,EACA6T,GAEA,IArBA6K,EACAC,OAuBmBnyB,IAHFsE,EAAMoqB,kBAAkB7uB,MACvC,SAACC,GAAD,OAASA,EAAIunB,cAAgBA,OAtB/B6K,EA2BI,CACE,CACEnyB,GAAIuE,EAAMqqB,uBAAuBC,YAAYrS,OAAO,GAAGxc,GACvDmI,MAAOsL,EAAKtL,MACZ9G,OAAQkD,EAAMqqB,uBAAuBC,YAAYrS,OAAO,GAAGnb,SA9BnE+wB,EAiCI7tB,EAAMqqB,uBAAuBC,YA/BgB,OAA7CtqB,EAAMqqB,uBAAuBtH,aAC/B/iB,EAAMuqB,iBAAiB,CACrBxH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CjmB,QAAQ,EACRkb,QAAS,CACP,CACE5K,IAAKygB,EAAezgB,IACpBgb,UAAWyF,EAAezF,UAC1BnQ,OAAQ2V,QA2BZU,EAAgB,WACpB,IAGIC,EAHAtW,EAASjY,EAAMoqB,kBAAkB7uB,MACnC,SAACC,GAAD,OAASA,EAAIunB,cAAgB/iB,EAAMqqB,uBAAuBtH,eAW5D,OARAwL,OACa7yB,IAAXuc,OACIvc,EACAuc,EAAOD,QAAQzc,MACb,SAACmyB,GAAD,OACEA,EAAItF,YACJpoB,EAAMqqB,uBAAuBC,YAAYlC,kBAEjC1sB,IAAXuc,QAAmCvc,IAAX6yB,EACF,IAAzBA,EAAOtW,OAAOpb,QAAgB0xB,EAAOtW,OAAO,GAAGrU,MAC/C,IAqCN,OAlCAlC,qBAAU,WACR,IAAItF,EAAO4D,EAAMoqB,kBAAkB7uB,MACjC,SAACC,GAAD,OAASA,EAAIunB,cAAgB/iB,EAAMqqB,uBAAuBtH,qBAGjDrnB,IAATU,QACUV,IAATU,GAAwD,IAAlCA,EAAK4b,QAAQ,GAAGC,OAAOpb,cAGHnB,IAAzCsE,EAAMqqB,uBAAuBrS,cACItc,IAAjCsE,EAAMqqB,wBACuC,OAA7CrqB,EAAMqqB,uBAAuBtH,kBAEarnB,IAA1CsE,EAAMqqB,uBAAuBrH,UAC3BhjB,EAAMuqB,iBAAiB,CACrBxH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CjmB,QAAQ,EACRkb,QAAS,CACP,CACE5K,IAAKpN,EAAMqqB,uBAAuBC,YAAYld,IAC9Cgb,UAAWpoB,EAAMqqB,uBAAuBC,YAAYlC,UACpDnQ,OAAQ,CACN,CACExc,GAAIuE,EAAMqqB,uBAAuBrS,QAAQ,GAAGvc,GAC5CmI,MAAO,GACP9G,OAAQkD,EAAMqqB,uBAAuBrS,QAAQ,GAAGlb,eAQ/D,CAACkD,IAEF,qBAAKyC,UAAU,GAAf,cACoC/G,IAAjCsE,EAAMqqB,uBACL,qBACE5nB,UAAS,gEADX,SAGE,0BACEmB,MAAO,GACPnB,UAAS,yGACTF,MAAO,CAAEisB,UAAW,iBAIiB9yB,IAAzCsE,EAAMqqB,uBAAuBrS,SAC7BhY,EAAMqqB,uBAAuBrS,QAAQ1V,KAAI,SAAC4M,EAAM/R,GAAP,OACvC,qBAEEsF,UAAS,gEAFX,SAIE,0BACEK,SAAU,SAACC,GACT2lB,EACE,CACEjtB,GAAIyT,EAAKzT,GACTmI,MAAOb,EAAEY,OAAOC,MAChB9G,OAAQoS,EAAKpS,QAEfkD,EAAMqqB,uBAAuBtH,cAGjCnf,MAAO0qB,IACP7rB,UAAS,kEACe,IAAtB+qB,EAAYte,GACR,4DACA,mDAEN3M,MAAO,CAAEisB,UAAW,WApBjBrxB,EAAI,U,iCCtJrB,kBAmLesxB,IA9JG,SAACzuB,GACjB,IAAMwtB,EAAc,SAACte,GACnB,IAAIzS,GAAM,EACV,GAAIuD,EAAMoqB,kBAAkBvtB,OAAS,EAAG,CACtC,IAAIvB,EAAQ0E,EAAMoqB,kBAAkB7uB,MAClC,SAACC,GAAD,OAASA,EAAIunB,cAAgB/iB,EAAMqqB,uBAAuBtH,eAE5D,QAAcrnB,IAAVJ,EAAqB,CACvB,IAAImyB,EAASnyB,EAAM0c,QAAQzc,MACzB,SAACmyB,GAAD,OACEA,EAAItF,YAAcpoB,EAAMqqB,uBAAuBC,YAAYlC,aAE/D,QAAe1sB,IAAX+xB,EAAsB,CACxB,IAAI9oB,EAAI8oB,EAAOxV,OAAO1c,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOyT,EAAKzT,WAC1CC,IAANiJ,GAAkC,KAAfA,EAAEf,MAAM,KAC7BnH,GAAM,KAKd,OAAOA,GAoBHisB,EAAY,SAChBxZ,EACA6T,GAEA,IArBA6K,EACAC,OAuBmBnyB,IAHFsE,EAAMoqB,kBAAkB7uB,MACvC,SAACC,GAAD,OAASA,EAAIunB,cAAgBA,OAtB/B6K,EA2BI,CACE,CACEnyB,GAAIuE,EAAMqqB,uBAAuBC,YAAYrS,OAAO,GAAGxc,GACvDmI,MAAO,CAACsL,EAAKtL,OACb9G,OAAQkD,EAAMqqB,uBAAuBC,YAAYrS,OAAO,GAAGnb,SA9BnE+wB,EAiCI7tB,EAAMqqB,uBAAuBC,YA/BgB,OAA7CtqB,EAAMqqB,uBAAuBtH,aAC/B/iB,EAAMuqB,iBAAiB,CACrBxH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CjmB,QAAQ,EACRkb,QAAS,CACP,CACE5K,IAAKygB,EAAezgB,IACpBgb,UAAWyF,EAAezF,UAC1BnQ,OAAQ2V,QA2BZU,EAAgB,WACpB,IAGIC,EAHAtW,EAASjY,EAAMoqB,kBAAkB7uB,MACnC,SAACC,GAAD,OAASA,EAAIunB,cAAgB/iB,EAAMqqB,uBAAuBtH,eAW5D,OARAwL,OACa7yB,IAAXuc,OACIvc,EACAuc,EAAOD,QAAQzc,MACb,SAACmyB,GAAD,OACEA,EAAItF,YACJpoB,EAAMqqB,uBAAuBC,YAAYlC,kBAEjC1sB,IAAXuc,QAAmCvc,IAAX6yB,EACF,IAAzBA,EAAOtW,OAAOpb,QAAgB0xB,EAAOtW,OAAO,GAAGrU,MAAM,GACrD,IAgDN,OA7CAlC,qBAAU,WACR,IAAItF,EAAO4D,EAAMoqB,kBAAkB7uB,MACjC,SAACC,GAAD,OAASA,EAAIunB,cAAgB/iB,EAAMqqB,uBAAuBtH,qBAGjDrnB,IAATU,QACUV,IAATU,GAAwD,IAAlCA,EAAK4b,QAAQ,GAAGC,OAAOpb,cAGHnB,IAAzCsE,EAAMqqB,uBAAuBrS,cACItc,IAAjCsE,EAAMqqB,wBACuC,OAA7CrqB,EAAMqqB,uBAAuBtH,kBAaarnB,IAA1CsE,EAAMqqB,uBAAuBrH,UAC3BhjB,EAAMuqB,iBAAiB,CACrBxH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CjmB,QAAQ,EACRkb,QAAS,CACP,CACE5K,IAAKpN,EAAMqqB,uBAAuBC,YAAYld,IAC9Cgb,UAAWpoB,EAAMqqB,uBAAuBC,YAAYlC,UACpDnQ,OAAQ,CACN,CACExc,GAAIuE,EAAMqqB,uBAAuBrS,QAAQ,GAAGvc,GAC5CmI,MAAO,CAAC,IACR9G,OAAQkD,EAAMqqB,uBAAuBrS,QAAQ,GAAGlb,eAQ/D,CAACkD,IAEF,qBAAKyC,UAAU,GAAf,SACoC,OAAjCzC,EAAMqqB,6BACoC3uB,IAAzCsE,EAAMqqB,uBAAuBrS,SAC7BhY,EAAMqqB,uBAAuBrS,QAAQ1V,KAAI,SAAC4M,EAAM/R,GAAP,OACvC,qBAEEsF,UAAS,gEAFX,SAIE,uBACEK,SAAU,SAACC,GACT2lB,EACE,CACEjtB,GAAIyT,EAAKzT,GACTmI,MAAOb,EAAEY,OAAOC,MAChB9G,OAAQoS,EAAKpS,QAEfkD,EAAMqqB,uBAAuBtH,cAGjC1nB,KAAK,OACLuI,MAAO0qB,IACP7rB,UAAS,kEACe,IAAtB+qB,EAAYte,GACR,mDACA,2CAnBH/R,EAAI,U,2FC2DN2pB,IA1LkB,SAAC9mB,GAChC,IAAMwtB,EAAc,SAClBte,GAEA,IAAIzS,GAAM,EACV,GAAIuD,EAAMoqB,kBAAkBvtB,OAAS,EAAG,CACtC,IAAIvB,EAAQ0E,EAAMoqB,kBAAkB7uB,MAClC,SAACC,GAAD,OAASA,EAAIunB,cAAgB/iB,EAAMqqB,uBAAuBtH,eAE5D,QAAcrnB,IAAVJ,EAAqB,CACvB,IAAImyB,EAASnyB,EAAM0c,QAAQzc,MACzB,SAACmyB,GAAD,OACEA,EAAItF,YAAcpoB,EAAMqqB,uBAAuBC,YAAYlC,aAE/D,QAAe1sB,IAAX+xB,EAAsB,CACxB,IAAI9oB,EAAI8oB,EAAOxV,OAAO1c,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOyT,EAAKzT,WAC1CC,IAANiJ,IAAgC,IAAbA,EAAE7H,SACvBL,GAAM,KAKd,OAAOA,GAGHkxB,EAAkB,SACtBC,EACAC,GAEiD,OAA7C7tB,EAAMqqB,uBAAuBtH,aAC/B/iB,EAAMuqB,iBAAiB,CACrBxH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CjmB,QAAQ,EACRkb,QAAS,CACP,CACE5K,IAAKygB,EAAezgB,IACpBgb,UAAWyF,EAAezF,UAC1BnQ,OAAQ2V,OAmGlB,OAvCAlsB,qBAAU,WACR,IAAItF,EAAO4D,EAAMoqB,kBAAkB7uB,MACjC,SAACC,GAAD,OAASA,EAAIunB,cAAgB/iB,EAAMqqB,uBAAuBtH,eAE5D,SACWrnB,IAATU,QACUV,IAATU,GAAwD,IAAlCA,EAAK4b,QAAQ,GAAGC,OAAOpb,cAGHnB,IAAzCsE,EAAMqqB,uBAAuBrS,cACItc,IAAjCsE,EAAMqqB,wBACuC,OAA7CrqB,EAAMqqB,uBAAuBtH,YAC7B,CACA,IADA,EACI6K,EAAgE,GADpE,cAEc5tB,EAAMqqB,uBAAuBrS,SAF3C,IAEA,2BAAoD,CAAC,IAA5CpS,EAA2C,QAClDgoB,EAAU,sBACLA,GADK,CAER,CACEnyB,GAAImK,EAAEnK,GACNmI,MAAOgC,EAAEhC,MACT9G,QAAQ,MARd,mCAY0CpB,IAA1CsE,EAAMqqB,uBAAuBrH,UAC3BhjB,EAAMuqB,iBAAiB,CACrBxH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CjmB,QAAQ,EACRkb,QAAS,CACP,CACE5K,IAAKpN,EAAMqqB,uBAAuBC,YAAYld,IAC9Cgb,UAAWpoB,EAAMqqB,uBAAuBC,YAAYlC,UACpDnQ,OAAQ2V,SAMnB,CAAC5tB,IAEF,8BACoC,OAAjCA,EAAMqqB,6BACoC3uB,IAAzCsE,EAAMqqB,uBAAuBrS,SAC7BhY,EAAMqqB,uBAAuBrS,QAAQ1V,KAAI,SAAC4M,EAAM/R,GAAP,OACvC,sBAEEsH,QAAS,kBApGD,SAChByK,EACA6T,GAKA,QAAmBrnB,IAHFsE,EAAMoqB,kBAAkB7uB,MACvC,SAACC,GAAD,OAASA,EAAIunB,cAAgBA,KAED,CAE5B,IAAIkL,EAA0D,GAC9D,QAC2CvyB,IAAzCsE,EAAMqqB,uBAAuBrS,SAGhB,IAFbhY,EAAMqqB,uBAAuBrS,QAAQ/a,QACnC,SAACzB,GAAD,OAAwB,IAAfA,EAAIsB,UACbD,OACF,CAAC,IAAD,gBACcmD,EAAMqqB,uBAAuBC,YAAYrS,QADvD,IACA,2BAA+D,CAAC,IAAvDiW,EAAsD,QAC7DD,EAAI,sBACCA,GADD,CAEF,CACExyB,GAAIyyB,EAAEzyB,GACNmI,MAAOsqB,EAAEtqB,MACT9G,QAAQ,MAPd,8BAWA6wB,EAAgBM,EAAMjuB,EAAMqqB,uBAAuBC,aAErD,IArB4B,EAqBxBsD,EAAgE,GArBxC,cAsBE,IAAhBK,EAAKpxB,OACfmD,EAAMqqB,uBAAuBC,YAAYrS,OACzCgW,GAxBwB,IAsB5B,2BAEU,CAAC,IAFFtpB,EAEC,QAENipB,EADEjpB,EAAElJ,KAAOyT,EAAKzT,GACN,sBACLmyB,GADK,CAER,CACEnyB,GAAIyT,EAAKzT,GACTmI,MAAOsL,EAAKtL,MACZ9G,YAC2CpB,IAAzCsE,EAAMqqB,uBAAuBrS,SAGhB,IAFbhY,EAAMqqB,uBAAuBrS,QAAQ/a,QACnC,SAACzB,GAAD,OAAwB,IAAfA,EAAIsB,UACbD,SAEG8H,EAAE7H,UAIH,sBAAO8wB,GAAP,CAAmBjpB,KAzCL,8BA4C5BgpB,EAAgBC,EAAY5tB,EAAMqqB,uBAAuBC,cAkDjD5B,CAAUxZ,EAAMlP,EAAMqqB,uBAAuBtH,cAE/CtgB,UAAS,8BACe,IAAtB+qB,EAAYte,GACR,wFACA,sDAHG,mEALX,WAWyB,IAAtBse,EAAYte,GACX,wCAC4CxT,IAAzCsE,EAAMqqB,uBAAuBrS,SAGjB,IAFbhY,EAAMqqB,uBAAuBrS,QAAQ/a,QACnC,SAACzB,GAAD,OAAwB,IAAfA,EAAIsB,UACbD,OACA,cAAC,KAAD,CAAsB4F,UAAU,aAEhC,cAAC,IAAD,CAAmBA,UAAU,oBAGU/G,IAAzCsE,EAAMqqB,uBAAuBrS,SAGlB,IAFbhY,EAAMqqB,uBAAuBrS,QAAQ/a,QACnC,SAACzB,GAAD,OAAwB,IAAfA,EAAIsB,UACbD,OACF,cAAC,KAAD,CAAwB4F,UAAU,aAElC,cAAC,IAAD,CAAqBA,UAAU,aAEjC,sBAAMA,UAAU,OAAhB,SACGyM,EAAKtL,MAAM/G,OAAS,EACjBqS,EAAKtL,MACiB,IAAtBsL,EAAKtL,MAAM/G,OACX6xB,YAAmBxf,EAAKtL,MAAM,GAAIsL,EAAKtL,MAAM,IAC1CrH,QAAQ,GACR2B,WACHgR,EAAKtL,MAAM,OApCZzG,EAAI,U,iCCtKrB,kBA8KeuqB,IAzJD,SAAC1nB,GACb,IAAMwtB,EAAc,SAACte,GACnB,IAAIzS,GAAM,EACV,GAAIuD,EAAMoqB,kBAAkBvtB,OAAS,EAAG,CACtC,IAAIvB,EAAQ0E,EAAMoqB,kBAAkB7uB,MAClC,SAACC,GAAD,OAASA,EAAIunB,cAAgB/iB,EAAMqqB,uBAAuBtH,eAE5D,QAAcrnB,IAAVJ,EAAqB,CACvB,IAAImyB,EAASnyB,EAAM0c,QAAQzc,MACzB,SAACmyB,GAAD,OACEA,EAAItF,YAAcpoB,EAAMqqB,uBAAuBC,YAAYlC,aAE/D,QAAe1sB,IAAX+xB,EAAsB,CACxB,IAAI9oB,EAAI8oB,EAAOxV,OAAO1c,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOyT,EAAKzT,WAC1CC,IAANiJ,GAA+B,KAAZA,EAAEf,QACvBnH,GAAM,KAKd,OAAOA,GAoBHisB,EAAY,SAChBxZ,EACA6T,GAEA,IArBA6K,EACAC,EAoBIC,EAAa9tB,EAAMoqB,kBAAkB7uB,MACvC,SAACC,GAAD,OAASA,EAAIunB,cAAgBA,KAE/B,QAAmBrnB,IAAfoyB,EAA0B,CAC5B,IAAIC,EAASD,EAAW9V,QAAQzc,MAC9B,SAACyyB,GAAD,OACEA,EAAO5F,YACPpoB,EAAMqqB,uBAAuBC,YAAYlC,kBAE9B1sB,IAAXqyB,IA9BNH,EAgCM,CACE,CACEnyB,GAAIsyB,EAAO9V,OAAO,GAAGxc,GACrBmI,MAAOsL,EAAKtL,MACZ9G,OAAQixB,EAAO9V,OAAO,GAAGnb,SAnCnC+wB,EAsCME,EApC2C,OAA7C/tB,EAAMqqB,uBAAuBtH,aAC/B/iB,EAAMuqB,iBAAiB,CACrBxH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CjmB,QAAQ,EACRkb,QAAS,CACP,CACE5K,IAAKygB,EAAezgB,IACpBgb,UAAWyF,EAAezF,UAC1BnQ,OAAQ2V,SAiCZU,EAAgB,WACpB,IAGIC,EAHAtW,EAASjY,EAAMoqB,kBAAkB7uB,MACnC,SAACC,GAAD,OAASA,EAAIunB,cAAgB/iB,EAAMqqB,uBAAuBtH,eAW5D,OARAwL,OACa7yB,IAAXuc,OACIvc,EACAuc,EAAOD,QAAQzc,MACb,SAACmyB,GAAD,OACEA,EAAItF,YACJpoB,EAAMqqB,uBAAuBC,YAAYlC,kBAEjC1sB,IAAXuc,QAAmCvc,IAAX6yB,EACF,IAAzBA,EAAOtW,OAAOpb,QAAgB0xB,EAAOtW,OAAO,GAAGrU,MAC/C,IAqCN,OAlCAlC,qBAAU,WACR,IAAItF,EAAO4D,EAAMoqB,kBAAkB7uB,MACjC,SAACC,GAAD,OAASA,EAAIunB,cAAgB/iB,EAAMqqB,uBAAuBtH,qBAGjDrnB,IAATU,QACUV,IAATU,GAAwD,IAAlCA,EAAK4b,QAAQ,GAAGC,OAAOpb,cAGHnB,IAAzCsE,EAAMqqB,uBAAuBrS,cACItc,IAAjCsE,EAAMqqB,wBACuC,OAA7CrqB,EAAMqqB,uBAAuBtH,kBAEarnB,IAA1CsE,EAAMqqB,uBAAuBrH,UAC3BhjB,EAAMuqB,iBAAiB,CACrBxH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CjmB,QAAQ,EACRkb,QAAS,CACP,CACE5K,IAAKpN,EAAMqqB,uBAAuBC,YAAYld,IAC9Cgb,UAAWpoB,EAAMqqB,uBAAuBC,YAAYlC,UACpDnQ,OAAQ,CACN,CACExc,GAAIuE,EAAMqqB,uBAAuBrS,QAAQ,GAAGvc,GAC5CmI,MAAO,GACP9G,OAAQkD,EAAMqqB,uBAAuBrS,QAAQ,GAAGlb,eAQ/D,CAACkD,IAEF,qBAAKyC,UAAU,GAAf,SACoC,OAAjCzC,EAAMqqB,6BACoC3uB,IAAzCsE,EAAMqqB,uBAAuBrS,SAC7BhY,EAAMqqB,uBAAuBrS,QAAQ1V,KAAI,SAAC4M,EAAM/R,GAAP,OACvC,qBAEEsF,UAAS,gEAFX,SAIE,0BACEK,SAAU,SAACC,GACT2lB,EACE,CACEjtB,GAAIyT,EAAKzT,GACTmI,MAAOb,EAAEY,OAAOC,MAChB9G,OAAQoS,EAAKpS,QAEfkD,EAAMqqB,uBAAuBtH,cAGjCnf,MAAO0qB,IACP7rB,UAAS,kEACe,IAAtB+qB,EAAYte,GACR,4DACA,mDAEN3M,MAAO,CAAEisB,UAAW,YApBjBrxB,EAAI,U,4GC1DNwxB,EA7DQ,SAAC3uB,GACtB,OAEE,cADA,CACA,OAAKyC,UAAU,uFAAf,UACE,qBAAKA,UAAU,yEAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,qBACE8J,MAAM,6BACN9H,QAAS,kBAAMzE,EAAM4uB,aAAY,IACjCnsB,UAAU,8LAHZ,SAKE,cAAC,IAAD,CAAaA,UAAU,eAEzB,sBAAMA,UAAU,gBAAhB,0CAGJ,qBAAKA,UAAU,uBAAf,SACGzC,EAAMqqB,uBAAuBK,gBAAgBpoB,KAAI,SAAC4M,EAAM/R,GAAP,OAChD,sBAEEsH,QAAS,WACPzE,EAAM0oB,UACJ,CACEjtB,GAAIuE,EAAM6uB,eAAepzB,GACzBmI,MAAO5D,EAAM6uB,eAAejrB,MAC5B9G,OAAQoS,EAAKpS,QAEfkD,EAAMqqB,uBAAuBtH,aAE/B/iB,EAAM4uB,aAAY,IAEpBnsB,UAAS,UACPyM,EAAKpS,SACLkD,EAAM8uB,SACJ9uB,EAAMkjB,iBACNljB,EAAM+uB,gBAAgB/uB,EAAM6uB,eAAepzB,KAEzC,4DACA,gEAPG,kHAbX,UAuBE,8BACGyT,EAAKpS,SACNkD,EAAM8uB,SACJ9uB,EAAMkjB,iBACNljB,EAAM+uB,gBAAgB/uB,EAAM6uB,eAAepzB,KAE3C,cAAC,IAAD,CAAsBgH,UAAU,2BAEhC,cAAC,KAAD,CAAwBA,UAAU,eAGtC,qBAAKigB,wBAAyB,CAAEC,OAAQzT,EAAKpS,YAjCxCK,EAAI,YCyVN6pB,IAxWE,SAAChnB,GAChB,MAA0CW,oBAAS,GAAnD,mBAAOquB,EAAP,KAAsBC,EAAtB,KACA,EACEtuB,mBAAiD,MADnD,mBAAOkuB,EAAP,KAAuBK,EAAvB,KAqBM1B,EAAc,SAACte,GACnB,IAAIzS,GAAM,EACV,GAAIuD,EAAMoqB,kBAAkBvtB,OAAS,EAAG,CACtC,IAAIvB,EAAQ0E,EAAMoqB,kBAAkB7uB,MAClC,SAACC,GAAD,OAASA,EAAIunB,cAAgB/iB,EAAMqqB,uBAAuBtH,eAE5D,QAAcrnB,IAAVJ,EAAqB,CACvB,IAAImyB,EAASnyB,EAAM0c,QAAQzc,MACzB,SAACmyB,GAAD,OACEA,EAAItF,YAAcpoB,EAAMqqB,uBAAuBC,YAAYlC,aAE/D,QAAe1sB,IAAX+xB,EAAsB,CACxB,IAAI9oB,EAAI8oB,EAAOxV,OAAO1c,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOyT,EAAKzT,WAC1CC,IAANiJ,GAAgC,KAAbA,EAAE7H,SACvBL,GAAM,KAKd,OAAOA,GAGHisB,EAAY,SAChBxZ,EACA6T,GAEA,IAAI+K,EAAa9tB,EAAMoqB,kBAAkB7uB,MACvC,SAACC,GAAD,OAASA,EAAIunB,cAAgBA,KAE/B,QAAmBrnB,IAAfoyB,EAA0B,CAC5B,IAAIC,EAASD,EAAW9V,QAAQzc,MAC9B,SAACyyB,GAAD,OACEA,EAAO5F,YACPpoB,EAAMqqB,uBAAuBC,YAAYlC,aAE7C,QAAe1sB,IAAXqyB,EAAsB,CACxB,IADwB,EACpBH,EAAgD,GAD5B,cAEVG,EAAO9V,QAFG,IAExB,2BAA6B,CAAC,IAArBtT,EAAoB,QAEzBipB,EADEjpB,EAAElJ,KAAOyT,EAAKzT,GACN,sBACLmyB,GADK,CAER,CACEnyB,GAAIyT,EAAKzT,GACTmI,MAAOsL,EAAKtL,MACZ9G,OAAQoS,EAAKpS,UAIP,sBAAO8wB,GAAP,CAAmBjpB,KAbT,+BAtDN,SACtBipB,EACAC,GAEiD,OAA7C7tB,EAAMqqB,uBAAuBtH,aAC/B/iB,EAAMuqB,iBAAiB,CACrBxH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CjmB,QAAQ,EACRkb,QAAS,CACP,CACE5K,IAAKygB,EAAezgB,IACpBgb,UAAWyF,EAAezF,UAC1BnQ,OAAQ2V,MA0DZD,CAAgBC,EAAYG,MAKlCrsB,qBAAU,WACR,IAAItF,EAAO4D,EAAMoqB,kBAAkB7uB,MACjC,SAACC,GAAD,OAASA,EAAIunB,cAAgB/iB,EAAMqqB,uBAAuBtH,eAE5D,SACWrnB,IAATU,QACUV,IAATU,GAAwD,IAAlCA,EAAK4b,QAAQ,GAAGC,OAAOpb,cAGHnB,IAAzCsE,EAAMqqB,uBAAuBrS,cACItc,IAAjCsE,EAAMqqB,wBACuC,OAA7CrqB,EAAMqqB,uBAAuBtH,YAC7B,CACA,IADA,EACI6K,EAAgD,GADpD,cAEc5tB,EAAMqqB,uBAAuBrS,SAF3C,IAEA,2BAAoD,CAAC,IAA5CpS,EAA2C,QAClDgoB,EAAU,sBACLA,GADK,CAER,CACEnyB,GAAImK,EAAEnK,GACNmI,MAAOgC,EAAEhC,MACT9G,OAAQ,OARd,mCAY0CpB,IAA1CsE,EAAMqqB,uBAAuBrH,UAC3BhjB,EAAMuqB,iBAAiB,CACrBxH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CjmB,QAAQ,EACRkb,QAAS,CACP,CACE5K,IAAKpN,EAAMqqB,uBAAuBC,YAAYld,IAC9Cgb,UAAWpoB,EAAMqqB,uBAAuBC,YAAYlC,UACpDnQ,OAAQ2V,SAMnB,CAAC5tB,IAEJ,IAmCM+uB,EAAkB,SAACpqB,GACvB,IAAIspB,EAAOjuB,EAAMoqB,kBAAkB7uB,MACjC,SAACC,GAAD,OAASA,EAAIunB,cAAgB/iB,EAAMqqB,uBAAuBtH,eAE5D,QAAarnB,IAATuyB,EAAoB,CACtB,IAAIF,EAASE,EAAKjW,QAAQzc,MACxB,SAACyyB,GAAD,OACEA,EAAO5F,YACPpoB,EAAMqqB,uBAAuBC,YAAYlC,aAE7C,QAAe1sB,IAAXqyB,EAAsB,CACxB,IAAIoB,EAAMpB,EAAO9V,OAAO1c,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOkJ,KACjD,QAAYjJ,IAARyzB,GAAoC,KAAfA,EAAIryB,QACsB,OAA7CkD,EAAMqqB,uBAAuBtH,YAC/B,OAjDgB,SACxBqM,EACAC,EACAC,GAEA,GAA2B,OAAvBtvB,EAAMyqB,aAAuB,CAC/B,IAAI8E,EAAUvvB,EAAMyqB,aAAa3H,UAAUvnB,MACzC,SAACa,GAAD,OAAUA,EAAK2mB,cAAgBqM,KAEjC,QAAgB1zB,IAAZ6zB,EAAuB,CAAC,IAAD,gBACRvF,KADQ,yBAChBwF,EADgB,QAEnBC,EAAWF,EAAQvM,SAASznB,MAC9B,SAACC,GAAD,OAASA,EAAIynB,WAAauM,EAAK3zB,OAEjC,QAAiBH,IAAb+zB,EAAwB,CAC1B,IAAIC,EAASD,EAASzX,QAAQzc,MAC5B,SAACmyB,GAAD,OACEA,EAAItF,YACJpoB,EAAMqqB,uBAAuBC,YAAYlC,aAE7C,QAAe1sB,IAAXg0B,EAAsB,CACxB,IAAIC,EAAiBD,EAAOzX,OAAO1c,MACjC,SAACq0B,GAAD,OAAQA,EAAG9yB,OAAOoB,aAAeoxB,EAAKxyB,UAExC,QAAuBpB,IAAnBi0B,EACF,MAAM,CAAN,EAAOA,EAAe7yB,OAAOoB,eAfrC,2BAAoC,CAAC,IAAD,yCADX,gCAuB7B,OAAO,EAiBQ2xB,CACL7vB,EAAMqqB,uBAAuBtH,YAC7B/iB,EAAMkjB,iBACNiM,IAMV,OAAO,GAmCHL,EAAW,SAACU,EAAwB1yB,GACxC,IAAIL,EAAc,GACdqzB,EAlCuB,WAA2B,IAAD,EACjDrzB,EAA0B,GAC1BumB,EAAuC,UACzChjB,EAAMyqB,oBADmC,aACzC,EAAoB3H,UAAUvnB,MAC5B,SAACC,GAAD,OAASA,EAAIunB,cAAgB/iB,EAAMqqB,uBAAuBtH,eAE9D,QAAiBrnB,IAAbsnB,EAAwB,CAAC,IAAD,gBACTA,EAASA,UADA,IAC1B,2BAAoC,CAAC,IAA5B9T,EAA2B,QAC9B6e,EAAS7e,EAAK8I,QAAQzc,MACxB,SAACyyB,GAAD,OACEA,EAAO5F,YACPpoB,EAAMqqB,uBAAuBC,YAAYlC,aAE7C,QAAe1sB,IAAXqyB,EAYF,MAZyB,IAAD,gBACRA,EAAO9V,QADC,IACxB,2BAA+B,CAAC,IAAvBkX,EAAsB,QAC7B1yB,EAAG,sBACEA,GADF,CAED,CACEhB,GAAI0zB,EAAI1zB,GACR+zB,KAAMtgB,EAAK+T,SACXnmB,OAAQqyB,EAAIryB,OAAOoB,eAPD,gCAPF,+BAuB5B,OAAOzB,EAKuBszB,GAC9B,GAAID,EAAIjzB,OAAS,EAAG,CAAC,IAAD,EACdqS,EAAI,UAAG4gB,EAAIv0B,MAAK,SAACC,GAAD,OAASA,EAAIsB,SAAWA,YAApC,aAAG,EAA0CrB,GACrD,QAAaC,IAATwT,EAAoB,CAAC,IAAD,EAClB8gB,EAAO,UAAGF,EAAIv0B,MAChB,SAACC,GAAD,OAASA,EAAIC,KAAOyT,GAAQ1T,EAAIg0B,OAASA,YADhC,aAAG,EAEX1yB,YACapB,IAAZs0B,IACFvzB,EAAMuzB,IAIZ,OAAOvzB,GAKT,OACE,qBAAKgG,UAAU,GAAf,SACoC,OAAjCzC,EAAMqqB,6BACoC3uB,IAAzCsE,EAAMqqB,uBAAuBrS,SAC7BhY,EAAMqqB,uBAAuBrS,QAAQ1V,KAAI,SAAC4M,EAAM/R,GAAP,OACvC,sBAEEsF,UAAS,WACe,IAAtB+qB,EAAYte,GACR,yBACA,YAHG,aAIiB,IAAtBse,EAAYte,GAAiB,iBAAmB,WAJ3C,aAKe,IAAtBse,EAAYte,GAAiB,gCAAkC,GALxD,sBAFX,UAUE,sBACEzM,UAAS,uBACe,IAAtB+qB,EAAYte,GAAiB,gBAAkB,gBADxC,qCADX,WAKyB,IAAtBse,EAAYte,GACX,qBAAKzM,UAAU,sGAAf,SACGtF,EAAI,IAGP,qBAAKsF,UAAU,sGAAf,SACGtF,EAAI,IAGT,qBACEulB,wBAAyB,CAAEC,OAAQzT,EAAKtL,OACxCnB,UAAS,eACY,OAAnBosB,GACAA,EAAepzB,KAAOyT,EAAKzT,KACT,IAAlBuzB,EACI,+BACA,uBAIa,IAAtBxB,EAAYte,GACX,sBACE3C,MAAM,kCACN9H,QAAS,WACPyqB,EAAkBhgB,GAClB+f,GAAkBD,IAEpBvsB,UAAU,8JANZ,UAQE,cAAC,IAAD,CACEA,UAAS,sCACY,OAAnBosB,GACAA,EAAepzB,KAAOyT,EAAKzT,KACT,IAAlBuzB,EAvDK,uBAyDD,MAGR,qBACEtM,wBAAyB,CACvBC,OAAQmM,EACN9uB,EAAMkjB,iBACN6L,EAAgB7f,EAAKzT,WAM7B,qBAAKgH,UAAU,4EAAf,SACE,qBACEgC,QAAS,WACPyqB,EAAkBhgB,GAClB+f,GAAkBD,IAEpBziB,OACwB,IAAtBihB,EAAYte,GACR,kCACA,mCAENzM,UAAS,uBACe,IAAtB+qB,EAAYte,IACQ,OAAnB2f,GACCA,EAAepzB,KAAOyT,EAAKzT,KACT,IAAlBuzB,EACE,aACA,oCANG,+BAVX,UAmByB,IAAtBxB,EAAYte,GACT4f,EAAS9uB,EAAMkjB,iBAAkB6L,EAAgB7f,EAAKzT,KACnC,OAAnBozB,GACAA,EAAepzB,KAAOyT,EAAKzT,KACT,IAAlBuzB,EACA,sBACA,sBAIV,qBAAKvsB,UAAU,6BAAf,SACgD,OAA7CzC,EAAMqqB,uBAAuBtH,kBACarnB,IAAzCsE,EAAMqqB,uBAAuBrS,cACoBtc,IAAjDsE,EAAMqqB,uBAAuBK,iBACV,OAAnBmE,IACkB,IAAlBG,GACAH,EAAepzB,KAAOyT,EAAKzT,IACzB,cAAC,EAAD,CACEozB,eAAgBA,EAChBoB,eAAgB,KAChB5F,uBAAwB,CACtBtH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1C/K,QAAShY,EAAMqqB,uBAAuBrS,QACtC0S,gBACE1qB,EAAMqqB,uBAAuBK,iBAEjC8C,YAAaA,EACb9E,UAAWA,EACXkG,YAAaK,EACbH,SAAUA,EACV5L,iBAAkBljB,EAAMkjB,iBACxB6L,gBAAiBA,QAjHpB5xB,EAAI,U,qfC5NR2nB,EAAmB,SAACoL,EAAuBrL,GACtD,IAAMsL,EAAShT,YAAK0H,EAAM,cACtBuL,GACDF,EAAOnqB,IAAI,SAAW,EAAI,IAAM,KAChCmqB,EAAOnqB,IAAI,SAAW,GAAG7H,WAC1B,IACAgyB,EAAOnqB,IAAI,QACX,IACAmqB,EAAOnqB,IAAI,QACb,OAAI,IAAIrI,KAAKyyB,GAAQzxB,UAAY,IAAIhB,KAAK0yB,GAAgB1xB,WA8DtD2xB,EAA0B,SAACrwB,GAC/B,MAA8BW,oBAAkB,GAAhD,mBAAO6B,EAAP,KAAgB8tB,EAAhB,KACA,OAAgB,IAAZ9tB,EACK,wBAGP,sBAAKC,UAAU,sMAAf,UACE,sBAAKA,UAAU,+DAAf,UACE,sBAAMA,UAAU,YAAhB,gDACA,qBACEgC,QAASzE,EAAMuwB,eACf9tB,UAAU,mEAFZ,uBAOF,qBACEgC,QAAS,kBAAM6rB,GAAW,IAC1B7tB,UAAU,yGAFZ,SAIE,cAAC,IAAD,CAASA,UAAU,mBAwBd+tB,EAAb,kDAIE,WAAYxwB,GAA6B,IAAD,8BACtC,cAAMA,IAgBRqP,WAAa,SAACvS,GACZ,EAAKwS,SAAS,CAAExL,QAAShH,KAlBa,EAoBxC2zB,oBAAsB,SAAC3zB,GACrB,EAAKwS,SAAS,CAAEohB,iBAAkB5zB,KArBI,EAuBxC6zB,mBAvBwC,uCAuBnB,WAAO1b,EAAckH,GAArB,eAAAvW,EAAA,6DACnB,EAAKyJ,YAAW,GAChBxJ,cAFmB,kBAICC,IAAMC,IAAN,UACbC,IAAI4qB,MADS,sBACU3b,EADV,YACkBkH,IALnB,OAIX1f,EAJW,OAOjB,EAAK6S,SAAS,CAAEuhB,eAAgBp0B,EAAIuG,OAPnB,gDAUjBkD,QAAQC,IAAI,mBAAZ,sBACAgjB,MAAM1iB,YAAY,EAAD,KAXA,QAanB,EAAK4I,YAAW,GAbG,yDAvBmB,0DAsCxCyhB,uBAAyB,WACvB,EAAKxhB,SAAS,CACZxL,SAAS,IAEX,EAAK9D,MAAM4jB,qBACT,EAAK5jB,MAAM2L,KAAKsJ,KAAKhW,SACrB,SAACnC,EAAiBC,GAEd,EAAKuS,SAAS,CACZxL,SAAS,OASjB,EAAKwL,SAAS,CACZxL,SAAS,KAzD2B,EA6DxCitB,iBAAmB,SAACC,GACsC,IAApD,EAAKhxB,MAAMjB,cAAckjB,gBAAgBplB,QAC3C,EAAKmD,MAAMhB,cACTgyB,EAAYvf,oBAAoBnS,gBAChC,EAAKU,MAAM2L,KAAKsJ,KAAKhW,QACrB,EAAKwxB,qBAL6C,oBAQnCO,EAAYpd,SAAS5X,SARc,yBAQ7CG,EAR6C,QAYpD,QAAiBT,IAHF,EAAKsE,MAAMjB,cAAcQ,gBAAgBhE,MACtD,SAACC,GAAD,OAASA,EAAIW,SAAWA,EAAOE,aAEL,CAC1B,IAAImD,EAAYwxB,EAAYve,MAAMlX,MAChC,SAACC,GAAD,OAASA,EAAIa,YAAcF,EAAOE,kBAElBX,IAAd8D,GACF,EAAKQ,MAAMZ,sBACT4xB,EAAYvf,oBAAoBnS,gBAChCnD,EAAOE,UACPmD,EAAUC,YACVD,EAAUA,UACVA,EAAUE,QACVsxB,EAAYpd,SAASjU,YACrB,EAAK0P,cAhBb,2BAAkD,IARI,gCA7DhB,EA2FxC4hB,qBA3FwC,sBA2FjB,wCAAArrB,EAAA,6DACrB,EAAKyJ,YAAW,GADK,kBAGDvJ,IAAMC,IAAN,UACbC,IAAIiF,YADS,wBACkB,EAAKjL,MAAM2L,KAAKsJ,KAAKhW,UAJtC,OAMnB,GAAmB,OAHbxC,EAHa,QAMXK,OAAgB,CACtB,EAAKwS,SAAS,CAAE8D,sBAAuB3W,EAAIuG,OADrB,cAEEvG,EAAIuG,MAFN,IAEtB,2BAASguB,EAAyB,QAChC,EAAKD,iBAAiBC,GAHF,8BAKtB,GAC8D,OAA5D,EAAKhxB,MAAMoT,sBAAsB8d,wBACkC,IAAnE,EAAKlxB,MAAMoT,sBAAsB8d,uBAAuBr0B,OACxD,CAAC,EAAD,YACwBJ,EAAIuG,MAD5B,IACA,2BAASguB,EAAyB,QAChC,EAAKhxB,MAAMikB,mBAAmB+M,GAFhC,gCAde,gDAqBnB9qB,QAAQC,IAAI,gBAAZ,sBArBmB,QAuBrB,EAAKkJ,YAAW,GAvBK,yDA3FiB,EAoHxC8hB,aAAe,SAACxxB,EAAqBtD,GACnC,GAAyC,OAArC,EAAKoP,MAAM2H,sBAAgC,CAC7C,IAAMhX,EAAO,EAAKqP,MAAM2H,sBAAsB7X,MAC5C,SAAC2T,GAAD,OACEA,EAAK0E,SAASjU,cAAgBA,GAC9BuP,EAAKuD,MAAMxV,QAAO,SAACzB,GAAD,OAASA,EAAIa,YAAcA,QAEjD,QAAaX,IAATU,EAAoB,CACtB,IAAID,EAASC,EAAKqW,MAAMlX,MAAK,SAACC,GAAD,OAASA,EAAIa,YAAcA,KACxD,QAAeX,IAAXS,EACF,OAAOA,GAIb,OAAO,MAlI+B,EAoIxCi1B,eApIwC,uCAoIvB,WACf7e,EACAE,GAFe,eAAA7M,EAAA,sDAIf,EAAK0J,SAAS,CAAExL,SAAS,IAJV,OAAA8B,EAAA,KAKD6M,GALC,qDAKNtV,EALM,6BAOO2I,IAAMkP,KAAN,UACbhP,IAAIiF,YADS,6BAEhB,CACEsH,eAAgBA,EAChBE,MAAOA,EAAMtV,KAXN,OAcQ,MAdR,OAcHL,SACN,EAAKwS,SAAS,CACZ+hB,eAAgB,KAChBC,cAAc,EACdC,cAAc,EACdzyB,iBAAkB,GAClB0yB,eAAgB,mCAElB,EAAKP,wBAtBI,kDAyBX/qB,QAAQC,IAAI,mBAAZ,sBAzBW,iFApIuB,0DAiKxCsrB,uBAAyB,SAAChf,GACxB,GAAyC,OAArC,EAAKhH,MAAM2H,sBAAgC,CAC7C,IAAI4d,EAAc,EAAKvlB,MAAM2H,sBAAsB7X,MACjD,SAAC2T,GAAD,OAAUA,EAAK0E,SAASjU,cAAgB,EAAK8L,MAAM3M,yBAEjCpD,IAAhBs1B,EACF,EAAKI,eAAeJ,EAAYze,eAAgBE,GAEhD0W,MAAM,4BAGRA,MAAM,wBA5K8B,EA+KxCuI,YAAc,SACZr1B,EACA4X,EACAuN,EACAmQ,EACA3P,GAEA,OAAO,EAAKyP,uBAAuB,CACjC,CACEp1B,UAAWA,EACXu1B,gBAAiB,SACjBpyB,UAAWmyB,EAASnyB,UACpBC,YAAakyB,EAASlyB,gBA3LY,EA+LxC6L,kBAAoB,WAClB,EAAKtL,MAAMkkB,uBAAuB,EAAK7U,YAGR,KAA7B,EAAKrP,MAAM2L,KAAKsJ,KAAK4c,KACe,IAApC,EAAK7xB,MAAM2L,KAAKsJ,KAAK4c,IAAIh1B,QAEzB,EAAKi0B,yBAEP,EAAKG,uBACuC,OAAxC,EAAKjxB,MAAM2L,KAAK8F,qBAClB,EAAKkf,mBACH,EAAK3wB,MAAM2L,KAAKsJ,KAAKhW,QACrB,EAAKe,MAAM2L,KAAK8F,oBAAoBnS,iBAGI,OAAxC,EAAKU,MAAM2L,KAAK8F,qBAClB,EAAKzR,MAAMhB,cACT,EAAKgB,MAAM2L,KAAK8F,oBAAoBnS,gBACpC,EAAKU,MAAM2L,KAAKsJ,KAAKhW,QACrB,EAAKwxB,sBAnN6B,EAwNxCqB,sBAAwB,SACtBrf,GAEA,IAAIwb,EAAiC,GACrC,GAAyC,OAArC,EAAKxiB,MAAM2H,sBAAgC,CAAC,IAAD,gBAC5BX,GAD4B,yBACpCvD,EADoC,aAKnCxT,IAFN,EAAK+P,MAAM2H,sBAAsB7X,MAC/B,SAACa,GAAD,OAAUA,EAAKwX,SAASjU,cAAgBuP,EAAK0E,kBAGElY,IAA7CuyB,EAAK1yB,MAAK,SAACC,GAAD,OAASA,EAAI4R,MAAQ8B,EAAK9B,SACtC6gB,EAAI,sBAAOA,GAAP,CAAa/e,MAPvB,2BAAyB,IADoB,+BAa/C,OAAO+e,GAzO+B,EA4OxC8D,iCAAmC,SACjCtf,GAEA,IAAIwb,EAA0B,GAC9B,GAAyC,OAArC,EAAKxiB,MAAM2H,sBAAgC,CAAC,IAAD,gBAC5BX,GAD4B,yBACpCvD,EADoC,aAKnCxT,IAFN,EAAK+P,MAAM2H,sBAAsB7X,MAC/B,SAACa,GAAD,OAAUA,EAAKwX,SAASjU,cAAgBuP,EAAK0E,kBAGQlY,IAAnDuyB,EAAK1yB,MAAK,SAACC,GAAD,OAASA,EAAIW,SAAW+S,EAAK/S,YACzC8xB,EAAI,sBAAOA,GAAP,CAAa/e,MAPvB,2BAAyB,IADoB,+BAa/C,OAAO+e,GA7P+B,EA+PxC+D,WAAa,SAAChQ,GACZ,IAAIiQ,EAAkB,EAAKxmB,MAAMymB,YACjC,EAAK5iB,SAAS,CACZ4iB,YAAY,GAAD,mBAAMD,GAAN,CAAajQ,OAlQY,EAqQxCmQ,kBAAoB,SAClB7f,EACA3S,EACAtD,GAEA,GAAqB,OAAjBiW,EAAuB,CACzB,IAAI2b,EAAO3b,EAAa/W,MACtB,SAAC2T,GAAD,OAAUA,EAAK0E,SAASjU,cAAgBA,KAE1C,QAAajE,IAATuyB,QAGAvyB,IADAuyB,EAAKra,SAAS5X,QAAQT,MAAK,SAACC,GAAD,OAASA,EAAIa,YAAcA,KAGtD,OAAO4xB,EAIb,OAAO,MAvR+B,EAyRxCmE,gBAAkB,SAACt1B,GACjB,EAAKwS,SAAS,CAAEiiB,aAAcz0B,KA1RQ,EA6RxCyzB,eAAiB,SAACrhB,GAChB,EAAKI,SAAS,CAAE+hB,eAAgBniB,EAAMoiB,cAAc,IACpD,EAAKc,iBAAgB,IA/RiB,EAkSxCC,WAAa,WACX,EAAK/iB,SAAS,CAAEgiB,cAAc,IAC9B,EAAKc,iBAAgB,IAjSrB,EAAK3mB,MAAQ,CACX3H,SAAS,EACT4sB,kBAAkB,EAClBG,eAAgB,KAChBqB,YAAa,GACb9e,sBAAuB,KACvBie,eAAgB,KAChBC,cAAc,EACdC,cAAc,EACdzyB,iBAAkB,GAClB0yB,eAAgB,GAChB/G,aAAc,MAdsB,EAJ1C,0CA2SE,WAAU,IAAD,OACD3vB,EAAQC,MAASC,GAAGC,KAE1B,OAAKq3B,YAAU5mB,KAAK1L,MAAM2L,KAAM4mB,IAAeC,gBAAgBC,KAGb,OAA9C/mB,KAAK1L,MAAMjB,cAAc2zB,iBACpB,cAAC,IAAD,CAAUC,GAAG,aAGpB,eAAC,WAAD,WACiC,OAA9BjnB,KAAKD,MAAM4lB,eACV,sBAAK5uB,UAAU,uBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,cAAC,IAAD,CACEkwB,GAAG,aACHpmB,MAAM,gBACN9J,UAAU,yGAHZ,SAKE,cAAC,IAAD,CAAaA,UAAU,uDAEzB,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,0BAAhB,sBACA,sBAAMA,UAAU,wBAAhB,2DAMyB,KAA9BiJ,KAAKD,MAAM+lB,gBACV,qBACEjlB,MAAM,6BACN9H,QAAS,kBAAM,EAAK6K,SAAS,CAAEkiB,eAAgB,MAC/C/uB,UAAU,kGAHZ,SAKGiJ,KAAKD,MAAM+lB,kBAGQ,IAAvB9lB,KAAKD,MAAM3H,UACoB,IAAhC4H,KAAKD,MAAMilB,kBACmB,OAA9BhlB,KAAKD,MAAMolB,gBACyB,MAApCnlB,KAAKD,MAAM2H,sBACT,qBAAK3Q,UAAU,uCAAf,SACE,cAAC,IAAD,MAIW,IAFXiJ,KAAKomB,sBACLpmB,KAAKD,MAAMolB,eAAe+B,cAC1B/1B,OACF,qBAAK4F,UAAU,iFAAf,4BAIAiJ,KAAKomB,sBACHpmB,KAAKD,MAAMolB,eAAe+B,cAC1BtwB,KAAI,SAAC4M,EAAM/R,GAAP,qBACJ,qBAAiBsF,UAAU,kCAA3B,SACE,sBAAKA,UAAU,yDAAf,UACE,sBAAKA,UAAU,sDAAf,UACE,8BACE,cAAC,IAAD,CAA2BA,UAAU,uEAEvC,sBAAKA,UAAU,uBAAf,UACE,sBAAMA,UAAU,mEAAhB,SACGyM,EAAK+E,cAER,sBAAKxR,UAAU,8DAAf,UACE,sBAAKA,UAAU,kDAAf,mBACS0a,YAAKjO,EAAKrR,UAAW,iBAE9B,sBAAK4E,UAAU,2FAAf,yBACeyM,EAAKpR,cAEpB,sBAAK2E,UAAU,iFAAf,qBACWyM,EAAK2jB,kBAIhB,OADD,EAAK1B,aAAajiB,EAAK0E,SAAU1E,EAAK/S,SAErC,sBAAKsG,UAAU,wCAAf,UACE,+CACe,IACb,sBAAMA,UAAU,gGAAhB,mBAEI,EAAK0uB,aAAajiB,EAAK0E,SAAU1E,EAAK/S,eAF1C,aAEI,EACI22B,iBAIV,sBAAKrwB,UAAU,kCAAf,yBACe,IAEO,KADnB,YAAK0uB,aAAajiB,EAAK0E,SAAU1E,EAAK/S,eAAtC,eACG42B,aACF,sBAAMtwB,UAAU,uIAAhB,0BAIA,sBAAMA,UAAU,gGAAhB,mBAEI,EAAK0uB,aACHjiB,EAAK0E,SACL1E,EAAK/S,eAJX,aAEI,EAGG42B,cAMW,KADnB,YAAK5B,aAAajiB,EAAK0E,SAAU1E,EAAK/S,eAAtC,eACG42B,cACFn1B,YACEsR,EAAKrR,UACLqR,EAAKpR,WACLoR,EAAKnR,YACDlD,IAAemD,SACnB,cAACqyB,EAAD,CACEE,eAAgB,WACd,EAAKjhB,SAAS,CACZ+hB,eAAgB,CACdpd,YAAa/E,EAAK+E,YAClBuN,YAAatS,EAAKsS,YAClBJ,YAAalS,EAAK+E,YAClB+e,cAAe,GACf32B,UAAW6S,EAAK/S,QAElB2C,iBAAkBoQ,EAAK0E,SACvB0d,cAAc,IAEhB,EAAKc,iBAAgB,kBASvC,qBAAK3vB,UAAU,mDAAf,cAGQ/G,IAFL,EAAK+P,MAAMymB,YAAY32B,MACtB,SAACC,GAAD,OAASA,IAAQ0T,EAAK9B,QAExB8B,EAAK2jB,cAAgBI,IAAeC,SACpChkB,EAAK2jB,cAAgBI,IAAeE,OAClCv1B,YACEsR,EAAKrR,UACLqR,EAAKpR,WACLoR,EAAKnR,YACDlD,IAAemD,SACnB,YAAKm0B,kBACH,EAAK1mB,MAAM2H,sBACXlE,EAAK0E,SACL1E,EAAK/S,eAHP,eAIGmX,sBACH4N,IAAkBkS,YAChB,qBAAK3wB,UAAU,8FAAf,6BAIA,qBACEgC,QAAS,WACP,IAAIusB,EAAc,EAAKmB,kBACrB,EAAK1mB,MAAM2H,sBACXlE,EAAK0E,SACL1E,EAAK/S,QAEa,OAAhB60B,EAEAA,EAAY1d,qBACZ4N,IAAkBkS,aAGlB,EAAKpzB,MAAMgkB,oBACTgN,EAAYpd,UAEd,EAAK5T,MAAM+jB,kBACTiN,EAAYpd,SAAS5X,QAAQT,MAC3B,SAACC,GAAD,OAASA,EAAIa,YAAc6S,EAAK/S,WAGpC,EAAK6D,MAAM8jB,yBACT5U,EAAK9B,MAGP+b,MACE,iDAIJA,MAAM,kBAGV1mB,UAAS,UACPyM,EAAK2jB,cAAgBI,IAAeC,SACpChkB,EAAK2jB,cAAgBI,IAAeE,OAChC,wCACA,sCAJG,yCAjCX,SAwCGjkB,EAAK2jB,cAAgBI,IAAeC,QACjC,eACAhkB,EAAK2jB,cAAgBI,IAAeE,OACpC,uBACA,eAGNjkB,EAAK2jB,cAAgBI,IAAeC,SACtChkB,EAAK2jB,cAAgBI,IAAeI,MACpCnkB,EAAK2jB,cAAgBI,IAAeE,QACpCjkB,EAAK2jB,cAAgBI,IAAeK,QACpC,sBAAK7wB,UAAU,6DAAf,UACE,yCACA,uBAAMA,UAAU,gCAAhB,UACGyM,EAAKsT,WAAWjmB,QAAQ,GAD3B,OAGA,qBACEkI,QAAS,kBACP,EAAK6K,SAAS,CACZmb,aAAc,CACZtuB,OAAQ+S,EAAK/S,OACb8X,YAAa/E,EAAK+E,YAClB2O,YAAa1T,EAAK0T,YAClBC,OAAQ3T,EAAK2T,OACbuB,MAAOlV,EAAKkV,MACZjI,OAAQjN,EAAKiN,OACbte,UAAWqR,EAAKrR,cAItB4E,UAAU,+CAdZ,8BAoBF,qBAAKA,UAAU,oFAAf,sBAIe,IAAfyM,EAAKqkB,MACP,qBACEhnB,MAAM,gCACN9J,UAAU,2GAFZ,SAIE,cAAC,IAAD,CACE3E,WAAY,IAAIJ,KAAK5C,EAAMoD,YAAYA,WACvCs1B,aAAcC,YACZ,IAAI/1B,KAAK5C,EAAMoD,YACf,IAAIR,KACFyf,YAAKjO,EAAKrR,UAAW,cACnB,IACAqR,EAAKpR,aAGX41B,QAAS,kBAAM,EAAK1B,WAAW9iB,EAAK9B,MACpCumB,cAAc,EACdC,QAAQ,EACRC,MAAI,MAIR,sBAAKpxB,UAAU,6DAAf,UACE,yCACA,uBAAMA,UAAU,gCAAhB,UACGyM,EAAKsT,WAAWjmB,QAAQ,GAD3B,OAGA,qBACEkI,QAAS,kBACP,EAAK6K,SAAS,CACZmb,aAAc,CACZtuB,OAAQ+S,EAAK/S,OACb8X,YAAa/E,EAAK+E,YAClB2O,YAAa1T,EAAK0T,YAClBC,OAAQ3T,EAAK2T,OACbuB,MAAOlV,EAAKkV,MACZjI,OAAQjN,EAAKiN,OACbte,UAAWqR,EAAKrR,cAItB4E,UAAU,+CAdZ,oCAhNAtF,EAAI,MA0Oa,OAA9BuO,KAAKD,MAAMolB,iBACa,IAAvBnlB,KAAKD,MAAM3H,SACX4H,KAAKqmB,iCACHrmB,KAAKD,MAAMolB,eAAeiD,iBAC1Bj3B,OAAS,GACX6O,KAAKqmB,iCACHrmB,KAAKD,MAAMolB,eAAeiD,iBAC1BxxB,KAAI,SAAC4M,EAAM/R,GAAP,mBACJ,qBAEEsF,UAAU,uCAFZ,SAIE,sBAAKA,UAAU,yDAAf,UACE,sBAAKA,UAAU,sDAAf,UACE,qBAAKA,UAAU,GAAf,SACE,cAAC,IAAD,CAA2BA,UAAU,uEAEvC,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,8DAAhB,SACGyM,EAAK+E,cAER,qBAAKxR,UAAU,yCAAf,SAEI,OADD,EAAK0uB,aAAajiB,EAAK0E,SAAU1E,EAAK/S,SAErC,sBAAKsG,UAAU,wCAAf,UACE,sBAAKA,UAAU,4CAAf,yBACe,IACb,sBAAMA,UAAU,gGAAhB,mBAEI,EAAK0uB,aACHjiB,EAAK0E,SACL1E,EAAK/S,eAJX,aAEI,EAGG22B,iBAIT,sBAAKrwB,UAAU,kDAAf,yBACe,IAEO,KADnB,YAAK0uB,aAAajiB,EAAK0E,SAAU1E,EAAK/S,eAAtC,eACG42B,aACF,sBAAMtwB,UAAU,uIAAhB,0BAIA,sBAAMA,UAAU,gGAAhB,mBAEI,EAAK0uB,aACHjiB,EAAK0E,SACL1E,EAAK/S,eAJX,aAEI,EAGG42B,cAMW,KADnB,YAAK5B,aAAajiB,EAAK0E,SAAU1E,EAAK/S,eAAtC,eACG42B,cACF,cAAC1C,EAAD,CACEE,eAAgB,WACd,EAAKjhB,SAAS,CACZ+hB,eAAgB,CACdpd,YAAa/E,EAAK+E,YAClBuN,YAAatS,EAAKsS,YAClBJ,YAAalS,EAAK+E,YAClB+e,cAAe,GACf32B,UAAW6S,EAAK/S,QAElB2C,iBAAkBoQ,EAAK0E,SACvB0d,cAAc,IAEhB,EAAKc,iBAAgB,oBAUvC,qBAAK3vB,UAAU,0EAAf,8BAtEGtF,EAAI,UA6EQ,IAAvBuO,KAAKD,MAAM3H,QACb,qBAAKrB,UAAU,uCAAf,SACE,cAAC,IAAD,MAGF,sBAAKA,UAAU,2GAAf,UACE,qBAAKA,UAAU,8EAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,sBAAKA,UAAU,+DAAf,UACE,sBAAMA,UAAU,kCAAhB,kCAGA,qBAAKA,UAAU,0JAAf,SACE,cAAC,IAAD,CACEA,UAAU,yCACVgC,QAAS,WACP,EAAK6K,SAAS,CACZgiB,cAAc,EACdD,eAAgB,mBAQ9B,cAAC,IAAD,CACE0C,gBAAiBroB,KAAKD,MAAM4lB,eAC5BK,YAAahmB,KAAKgmB,YAClBW,WAAY3mB,KAAK2mB,gBAIM,OAA5B3mB,KAAKD,MAAMgf,cACV,cAAC,IAAD,CACEle,MACE,qBAAK9J,UAAU,6CAAf,iCAIFsT,UAAU,EACVzE,MAAO0E,IAAOC,QACdC,MAAO,kBAAM,EAAK5G,SAAS,CAAEmb,aAAc,QAC3CrU,eAAe,EACfC,eAAgBC,IAAUC,WAC1BJ,cAAc,EACd7R,QAAS,CAAEiI,OAAO,GAZpB,SAcE,cAAC,IAAD,CACEyV,QAAStW,KAAKD,MAAMgf,aACpBhH,aAAa,SAtad,cAAC,IAAD,CAAUkP,GAAG,UA/S1B,GAAqCzmB,aAivBxB8nB,EAAiB5nB,aAnBN,SAAC,GAWvB,MAAO,CACLT,KAFC,EATHA,KAYE5M,cAHC,EARHA,cAYEqU,sBAJC,EAPHA,sBAYE6gB,QALC,EANHA,WAeqD,CACrDrQ,yBACAC,+BACAC,8BACAC,uBACAC,yBACA5kB,2BACAJ,mBACAilB,uBACAC,6BAT4B9X,CAU3BokB,I,iCC95BH,8FA6CatI,EAAY,SACvBC,GAEA,IAAI+L,EAAoCzN,2BAAyBoB,OACjE,OAAQM,GACN,KAAKgM,oBAAkBC,WACrBF,EAAUzN,2BAAyB2N,WACnC,MACF,KAAKD,oBAAkBrN,yBACrBoN,EAAUzN,2BAAyBK,yBACnC,MACF,KAAKqN,oBAAkBzM,MACrBwM,EAAUzN,2BAAyBiB,MACnC,MACF,KAAKyM,oBAAkBnN,SACrBkN,EAAUzN,2BAAyBO,SACnC,MACF,KAAKmN,oBAAkBzN,eACrBwN,EAAUzN,2BAAyBC,eACnC,MACF,KAAKyN,oBAAkB/M,QACrB8M,EAAUzN,2BAAyBW,QACnC,MACF,KAAK+M,oBAAkB3M,YACrB0M,EAAUzN,2BAAyBe,YACnC,MACF,KAAK2M,oBAAkB7M,gBACrB4M,EAAUzN,2BAAyBa,gBACnC,MACF,KAAK6M,oBAAkBvN,eACrBsN,EAAUzN,2BAAyBG,eACnC,MACF,KAAKuN,oBAAkBjN,UACrBgN,EAAUzN,2BAAyBS,UAGvC,OAAOgN,GAsHMG,IAnHU,SAACr0B,GAExB,OAAmC,IAA/BA,EAAMs0B,qBAEN,sBAAK7xB,UAAU,6BAAf,UACE,qBAAKA,UAAU,qBAAf,4CACA,cAAC,IAAD,OAKJ,qBAAKA,UAAS,yCAAd,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,OAAf,SACE,sBACEA,UAAU,sCACVF,MAAO,CAAEgyB,UAAW,QAFtB,UAIGruB,QAAQC,IAAI,UAAWnG,EAAM4qB,eAC9B,8BACGpE,YACCxmB,EAAM4qB,cAAcvvB,KACpB2E,EAAM8hB,cAAcA,iBAChB2E,2BAAyBoB,aAGvBnsB,IAFNsE,EAAM4qB,cAAc5H,SAASznB,MAC3B,SAACa,GAAD,OAAUA,EAAK6mB,WAAajjB,EAAMkjB,qBAEpCljB,EAAM4qB,cAAc5H,SACjBznB,MAAK,SAACa,GAAD,OAAUA,EAAK6mB,WAAajjB,EAAMkjB,oBACvC+E,aAAa3lB,KAAI,SAAC4M,EAAM/R,GACvB,IAAIq3B,EAAO1Z,OAAO2Z,aA7B1B,IA8BcC,WA9Bd,IA8B6B73B,OAAS,GAAKM,GAEnC,OACE,qBAEEsF,UAAU,6IAFZ,SAIE,qBAAKA,UAAU,8BAAf,SACE,sBAAKA,UAAU,+CAAf,UACE,qBAEEA,UAAU,uHAFZ,SAIG+xB,GAHIr3B,EAAI,GAKX,sBAAKsF,UAAU,iBAAf,eAIQ/G,IAHLsE,EAAM4qB,cAAc5H,SAASznB,MAC5B,SAACa,GAAD,OACEA,EAAK6mB,WAAajjB,EAAMkjB,oBAE1BsD,YACEtX,EAAK7T,KACL2E,EAAM8hB,cAAcA,iBAChB2E,2BAAyBmB,SAC7BW,YACEvoB,EAAM4qB,cACN5qB,EAAM8hB,cAAcA,cACpB9hB,EAAMkjB,iBACNljB,EAAMjB,cAAcunB,kBACpB,SAACtjB,OAGH,qBACEP,UAAU,oCACVigB,wBAAyB,CACvBC,OAAQzT,EAAKkS,eAKnBphB,EAAM4qB,cAAc5H,SAASnmB,OAAS,GACpC,qBACE4F,UAAU,sDACVigB,wBAAyB,CACvBC,OAAQzT,EAAKkS,eAKrB,sBAAK3e,UAAU,yCAAf,yBAEyC,OAAtCzC,EAAM8hB,cAAcA,eACnB,cAAC,IAAD,CACEoB,iBAAkBljB,EAAMkjB,iBACxBF,SAAUhjB,EAAM4qB,cAChBrH,YAAavjB,EAAMjB,cAAcunB,iBAAiBrpB,QAChD,SAACzB,GAAD,OACEA,EAAIunB,cACJ/iB,EAAM4qB,cAAc7H,eAExBjB,cACE9hB,EAAM8hB,cAAcA,cAEtBrd,QAAS,aACT+e,mBAAmB,EACnB+C,gBAAiB2B,EAAUhZ,EAAKiZ,WAChCC,UAAWlZ,EAAKkZ,wBA9DvBjrB,EAAI,mB,8MC6GlBw3B,EA7KgB,SAAC30B,GAC9B,OACE,qCAE2BtE,IAAxBsE,EAAM4qB,oBACoClvB,IAAzCsE,EAAMqqB,uBAAuBrS,SAC7BhY,EAAMkP,KAAKiZ,YAAcgM,oBAAkBjN,WAC3ClnB,EAAMqqB,uBAAuBrS,QAC1B/a,QAAO,SAACb,GAAD,OAAUA,EAAKgsB,YAAcpoB,EAAMkP,KAAKkZ,aAC/C9lB,KAAI,SAAC9G,EAAK2B,GAAN,OACH,cAAC+pB,EAAA,EAAD,CAEE7rB,KAAM2E,EAAM3E,KACZ+uB,kBAAmBpqB,EAAMoqB,kBACzBC,uBAAwB,CACtBtH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CC,SAAUhjB,EAAMqqB,uBAAuBrH,SACvChL,QAASE,YAAY1c,EAAIyc,QACzBqS,YAAa9uB,GAEf+uB,iBAAkBvqB,EAAMuqB,kBATnBptB,EAAI,WAaQzB,IAAxBsE,EAAM4qB,oBACoClvB,IAAzCsE,EAAMqqB,uBAAuBrS,UAC5BhY,EAAMkP,KAAKiZ,YAAcgM,oBAAkBC,YAC1Cp0B,EAAMkP,KAAKiZ,YAAcgM,oBAAkB7M,kBAC7CtnB,EAAMqqB,uBAAuBrS,QAC1B/a,QAAO,SAACb,GAAD,OAAUA,EAAKgsB,YAAcpoB,EAAMkP,KAAKkZ,aAC/C9lB,KAAI,SAAC9G,EAAK2B,GAAN,OACH,cAACkxB,EAAA,EAAD,CAEEhzB,KAAM2E,EAAM3E,KACZ+uB,kBAAmBpqB,EAAMoqB,kBACzBC,uBAAwB,CACtBtH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CC,SAAUhjB,EAAMqqB,uBAAuBrH,SACvChL,QAASI,YAAmB5c,EAAIyc,QAChCqS,YAAa9uB,GAEf+uB,iBAAkBvqB,EAAMuqB,kBATnBptB,EAAI,WAaQzB,IAAxBsE,EAAM4qB,oBACoClvB,IAAzCsE,EAAMqqB,uBAAuBrS,UAC5BhY,EAAMkP,KAAKiZ,YAAcgM,oBAAkBvN,gBAC1C5mB,EAAMkP,KAAKiZ,YAAcgM,oBAAkBzN,iBAC7C1mB,EAAMqqB,uBAAuBrS,QAC1B/a,QAAO,SAACb,GAAD,OAAUA,EAAKgsB,YAAcpoB,EAAMkP,KAAKkZ,aAC/C9lB,KAAI,SAAC9G,EAAK2B,GAAN,OACH,cAACupB,EAAA,EAAD,CAEErrB,KAAM2E,EAAM3E,KACZ+uB,kBAAmBpqB,EAAMoqB,kBACzBC,uBAAwB,CACtBtH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CC,SAAUhjB,EAAMqqB,uBAAuBrH,SACvChL,QAASD,YAAiBvc,EAAIyc,QAC9BqS,YAAa9uB,GAEf+uB,iBAAkBvqB,EAAMuqB,kBATnBptB,EAAI,WAaQzB,IAAxBsE,EAAM4qB,oBACoClvB,IAAzCsE,EAAMqqB,uBAAuBrS,SAC7BhY,EAAMkP,KAAKiZ,YAAcgM,oBAAkBrN,0BAC3C9mB,EAAMqqB,uBAAuBrS,QAC1B/a,QAAO,SAACb,GAAD,OAAUA,EAAKgsB,YAAcpoB,EAAMkP,KAAKkZ,aAC/C9lB,KAAI,SAAC9G,EAAK2B,GAAN,OACH,cAAC2pB,EAAA,EAAD,CAEEzrB,KAAM2E,EAAM3E,KACZ+uB,kBAAmBpqB,EAAMoqB,kBACzBC,uBAAwB,CACtBtH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CC,SAAUhjB,EAAMqqB,uBAAuBrH,SACvChL,QAASO,YAA2B/c,EAAIyc,QACxCqS,YAAa9uB,GAEf+uB,iBAAkBvqB,EAAMuqB,kBATnBptB,EAAI,WAcQzB,IAAxBsE,EAAM4qB,oBACoClvB,IAAzCsE,EAAMqqB,uBAAuBrS,SAC7BhY,EAAMkP,KAAKiZ,YAAcgM,oBAAkBnN,UAC3ChnB,EAAMqqB,uBAAuBrS,QAC1B/a,QAAO,SAACb,GAAD,OAAUA,EAAKgsB,YAAcpoB,EAAMkP,KAAKkZ,aAC/C9lB,KAAI,SAAC9G,EAAK2B,GAAN,OACH,cAAC6pB,EAAA,EAAD,CAEE3rB,KAAM2E,EAAM3E,KACZ+uB,kBAAmBpqB,EAAMoqB,kBACzBC,uBAAwB,CACtBtH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CC,SAAUhjB,EAAMqqB,uBAAuBrH,SACvChL,QAASG,YAAW3c,EAAIyc,QACxByS,gBAAiBC,YAAQxS,YAAW3c,EAAIyc,SACxCqS,YAAa9uB,GAEf+uB,iBAAkBvqB,EAAMuqB,iBACxBE,aAAczqB,EAAMyqB,aACpBvH,iBAAkBljB,EAAMkjB,kBAZnB/lB,EAAI,WAgBQzB,IAAxBsE,EAAM4qB,oBACoClvB,IAAzCsE,EAAMqqB,uBAAuBrS,SAC7BhY,EAAMkP,KAAKiZ,YAAcgM,oBAAkBzM,OAC3C1nB,EAAMqqB,uBAAuBrS,QAC1B/a,QAAO,SAACb,GAAD,OAAUA,EAAKgsB,YAAcpoB,EAAMkP,KAAKkZ,aAC/C9lB,KAAI,SAAC9G,EAAK2B,GAAN,OACH,cAACuqB,EAAA,EAAD,CAEErsB,KAAM2E,EAAM3E,KACZ+uB,kBAAmBpqB,EAAMoqB,kBACzBC,uBAAwB,CACtBtH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CC,SAAUhjB,EAAMqqB,uBAAuBrH,SACvChL,QAASQ,YAAQhd,EAAIyc,QACrBqS,YAAa9uB,GAEf+uB,iBAAkBvqB,EAAMuqB,kBATnBptB,EAAI,WAaQzB,IAAxBsE,EAAM4qB,oBACoClvB,IAAzCsE,EAAMqqB,uBAAuBrS,SAC7BhY,EAAMkP,KAAKiZ,YAAcgM,oBAAkB/M,SAC3CpnB,EAAMqqB,uBAAuBrS,QAC1B/a,QAAO,SAACb,GAAD,OAAUA,EAAKgsB,YAAcpoB,EAAMkP,KAAKkZ,aAC/C9lB,KAAI,SAAC9G,EAAK2B,GAAN,OACH,cAACsxB,EAAA,EAAD,CAEEpzB,KAAM2E,EAAM3E,KACZ+uB,kBAAmBpqB,EAAMoqB,kBACzBC,uBAAwB,CACtBtH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CC,SAAUhjB,EAAMqqB,uBAAuBrH,SACvChL,QAASM,YAAY9c,EAAIyc,QACzBqS,YAAa9uB,GAEf+uB,iBAAkBvqB,EAAMuqB,kBATnBptB,EAAI,WAaQzB,IAAxBsE,EAAM4qB,oBACoClvB,IAAzCsE,EAAMqqB,uBAAuBrS,SAC7BhY,EAAMkP,KAAKiZ,YAAcgM,oBAAkB3M,aAC3CxnB,EAAMqqB,uBAAuBrS,QAC1B/a,QAAO,SAACb,GAAD,OAAUA,EAAKgsB,YAAcpoB,EAAMkP,KAAKkZ,aAC/C9lB,KAAI,SAAC9G,EAAK2B,GAAN,OACH,cAACqqB,EAAA,EAAD,CAEEnsB,KAAM2E,EAAM3E,KACZ+uB,kBAAmBpqB,EAAMoqB,kBACzBC,uBAAwB,CACtBtH,YAAa/iB,EAAMqqB,uBAAuBtH,YAC1CC,SAAUhjB,EAAMqqB,uBAAuBrH,SACvChL,QAASK,YAAc7c,EAAIyc,QAC3BqS,YAAa9uB,GAEf+uB,iBAAkBvqB,EAAMuqB,kBATnBptB,EAAI,UCzERy3B,IAxFO,SAAC50B,GAuCrB,OACE,mCAC2BtE,IAAxBsE,EAAM4qB,eACL5qB,EAAM4qB,cAAc3C,aAAaprB,OAAS,GAC1CmD,EAAM4qB,cAAc3C,aAAa3lB,KAAI,SAAC4M,EAAM/R,GAC1C,IAAIq3B,EAAO1Z,OAAO2Z,aA3ChB,IA2CiCC,WA3CjC,IA2CgD73B,OAAS,GAAKM,GAChE,OACE,sBACEoP,MAAM,8BAEN9J,UAAS,6DAHX,UAOE,sBAAKA,UAAU,+CAAf,UACE,8BACE,qBAAKA,UAAU,qGAAf,SACG+xB,MAGL,sBAAK/xB,UAAU,0DAAf,UACE,qBAAKA,UAAU,YAAf,SAA4ByM,EAAKkS,cACjC,8BACE,sBAAK3e,UAAU,6DAAf,UACGyM,EAAKoU,MADR,oBAMN,qBAAK7gB,UAAU,qBAAf,SACE,cAAC,EAAD,CACEpH,KAAM2E,EAAM3E,KACZ+uB,kBAAmBpqB,EAAMoqB,kBACzBC,uBAAwBrqB,EAAMqqB,uBAC9BE,iBAAkBvqB,EAAMuqB,iBACxBK,cAAe5qB,EAAM4qB,cACrBH,aAAczqB,EAAMyqB,aACpBvH,iBAAkBljB,EAAMkjB,iBACxBhU,KAAMA,EACN2lB,QAAQ,QA9BP13B,EAAI,U,uJChFV23B,EAA0B,SACrCC,EACAhkB,GAEA,MAAkB,QAAdA,EACKgkB,EAGFA,EAAU93B,QAAO,SAACiS,GAAD,OAAUA,EAAKwB,WAAaK,MAqLvC3E,iBAPS,SAAC,GAIvB,MAAO,CAAET,KADsD,EAF/DA,KAGeoG,SADgD,EAD/DA,YAKsC,CACtC+F,qBACAkd,yBACAC,iBACA5jB,qBAJajF,EArK6C,SAACpM,GAC3D,MAA8BW,oBAAkB,GAAhD,mBAAOmD,EAAP,KAAgBuL,EAAhB,KACA,EAAkD1O,oBAAkB,GAApE,mBAAOu0B,EAAP,KAA0BC,EAA1B,KAEAzzB,qBAAU,WAC0B,OAA9B1B,EAAM+R,SAASqjB,WACjBp1B,EAAM8X,kBAAiB,SAAChb,EAAiBC,IACxB,IAAXD,IACEC,EAAIF,OAAS,GACfmD,EAAMqR,eAAe,CACnB9E,MAAOxP,EACPuU,MAAOC,IAAgBC,SAG3B2jB,GAAqB,GACrB9lB,GAAW,OAGN6lB,IACTC,GAAqB,GACrB9lB,GAAW,MAEZ,CAAC6lB,EAAmBl1B,IAEvB,IAAMq1B,EAAc,SAClBtjB,EACApL,GAEA,IAAIvG,EAAiB,EAerB,OAbI2R,EAASujB,WAA0B,QAAb3uB,IACxBvG,EAAS2R,EAASujB,UAAUr4B,QAC1B,SAACiS,GAAD,OAAUA,EAAK4Q,oBAAsBzB,IAAY0B,WACjDljB,QAEAkV,EAASujB,WAA0B,QAAb3uB,IACxBvG,EAAS2R,EAASujB,UAAUr4B,QAC1B,SAACiS,GAAD,OACEA,EAAKwB,WAAa/J,GAClBuI,EAAK4Q,oBAAsBzB,IAAY0B,WACzCljB,QAGGuD,GAGT,OACE,eAAC,IAAMm1B,SAAP,WACE,sBAAM9yB,UAAU,eAAhB,mCAEEqB,GAAW9D,EAAMw1B,gBACjB,0BAAS/yB,UAAU,YAAnB,UACE,qBAAKA,UAAU,wGACf,qBAAKA,UAAU,wGACf,qBAAKA,UAAU,wGACf,qBAAKA,UAAU,4GAMjBqB,IAAY9D,EAAMw1B,eAAiBx1B,EAAM+R,SAASqjB,YAClD,oCAEE,qBACE3yB,UAAU,OACVgC,QAAS,WAEPzE,EAAMg1B,qBAAqB,QAJ/B,SAOE,cAAC,IAAD,CACEzoB,MAAM,MACNG,OAA6C,QAArC1M,EAAM+R,SAAS0jB,kBACvB9oB,MAAO0oB,EAAYr1B,EAAM+R,SAAU,WAIvC,qBACEtP,UAAU,OACVgC,QAAS,WAEPzE,EAAMg1B,qBAAqBxkB,IAAcvF,cAJ7C,SAOE,cAAC,IAAD,CACEsB,MAAO,cACPG,OACuC,QAArC1M,EAAM+R,SAAS0jB,mBACfz1B,EAAM+R,SAAS0jB,oBAAsBjlB,IAAcvF,YAErD0B,MAAO0oB,EAAYr1B,EAAM+R,SAAUvB,IAAcvF,iBAIrD,qBACExI,UAAU,OACVgC,QAAS,WACPzE,EAAMg1B,qBAAqBxkB,IAAcI,sBAH7C,SAME,cAAC,IAAD,CACErE,MAAO,WACPG,OACuC,QAArC1M,EAAM+R,SAAS0jB,mBACfz1B,EAAM+R,SAAS0jB,oBACbjlB,IAAcI,oBAElBjE,MAAO0oB,EACLr1B,EAAM+R,SACNvB,IAAcI,yBAKpB,qBACEnO,UAAU,OACVgC,QAAS,WACPzE,EAAMg1B,qBAAqBxkB,IAAcQ,cAH7C,SAME,cAAC,IAAD,CACEzE,MAAO,OACPG,OACuC,QAArC1M,EAAM+R,SAAS0jB,mBACfz1B,EAAM+R,SAAS0jB,oBAAsBjlB,IAAcQ,YAErDrE,MAAO0oB,EAAYr1B,EAAM+R,SAAUvB,IAAcQ,kBAGpD,Y,iCC7KX,yBAgFe0kB,IAtD2C,SAAC11B,GACzD,IAAM21B,EAAY,WAChB,SAAI31B,EAAM8D,SAAW9D,EAAM41B,gBAAkB51B,EAAM61B,gBAMrD,OACE,sBAAKpzB,UAAU,wEAAf,UACE,sBAAKA,UAAU,wCAAf,UACE,cAAC,IAAD,CAAiBA,UAAU,2CAC3B,qBAAKA,UAAU,gBAAf,SACE,sBAAMA,UAAU,mCAAhB,SACGzC,EAAM81B,mBAMb,yBAASrzB,UAAU,gCAAnB,SACE,8BACE,wBACEA,UAAS,uFACPkzB,IAAc,cAAgB,kBAEhC/xB,MAAO5D,EAAM+1B,WAAa/1B,EAAM+1B,WAAWz2B,gBAAkB,GAC7DuE,SAAU8xB,IACV7yB,SAAU,SAACC,GAtCF,IACnBizB,EACAhnB,EADAgnB,EAuCch2B,EAAMi2B,qBAtCpBjnB,EAuCcjM,EAAEY,OAAOC,OAFXsyB,EAGEl2B,EAAMm2B,eApClBH,EAAS/4B,QAAO,SAACiS,GAAD,OAAUA,EAAK5P,kBAAoB0P,KAAW,IAsCpDhP,EAAMo2B,mBAAkB,GACxBp2B,EAAMq2B,eAAetzB,EAAEY,OAAOC,QAblC,SAgBG5D,EAAMi2B,qBAAqB3zB,KAAI,SAACqqB,EAASzd,GAAV,OAC9B,wBAEEtL,MAAO+oB,EAAQrtB,gBAFjB,SAIGqtB,EAAQxG,mBAHJwG,EAAQrtB,gBAAkB4P,iB,qeCrBnConB,E,+QClBN3Y,EAAmB,SAACpI,GACxB,GAA8B,IAA1BA,EAAUqI,YAAmB,CAC/B,IAAMC,EAAatI,EAAUuI,OAAOviB,MAAK,SAAC2T,GAAD,OAAyB,IAAfA,EAAK6O,SACxD,GAAIF,GACEA,EAAWG,wBAA0BC,IAAoBC,SAC3D,OAAO,EAIb,OAAO,GAwYM9R,cAAQ,KAAM,CAC3BmS,kBACAlN,qBAFajF,EAxWmC,SAACpM,GACjD,IAAMoU,EAAY,uCAAG,4BAAAxO,EAAA,0DACf8N,YAAgB1T,EAAMwe,eADP,yCAEVxe,EAAMyP,aAAa,CACxB3T,QAAS,UACTiB,IAAK,gCAJU,UAOdiD,EAAMuV,UAPQ,yCAQVvV,EAAMqR,eAAe,CAC1B9E,MAAO,oBACP+E,MAAOC,IAAgBkN,WAVR,cAcnBze,EAAM0e,mBAAkB,GAdL,SAgBjB7Y,cAhBiB,SAiBCC,IAAM6Y,IAAN,UACb3Y,IAAIC,SADS,yBACgBjG,EAAMuV,UAAUnI,KAChD,CACE+H,OAAQnV,EAAMwe,gBApBD,OAiBX/hB,EAjBW,OAuBjByJ,QAAQC,IAAI,CAAE1J,IAAKA,EAAIuG,OACJ,MAAfvG,EAAIK,QAAiC,MAAfL,EAAIK,SAC5BkD,EAAMue,cAAc9hB,EAAIuG,MACxBhD,EAAMqR,eAAe,CACnB9E,MAAO,wBACP+E,MAAOC,IAAgB8D,UAEzBrV,EAAM4e,iBAAiB,IACvB5e,EAAM6e,eAAc,IA/BL,kDAkCjB3Y,QAAQM,MAAM,CAAEA,MAAK,OACrBxG,EAAMqR,eAAe,CACnB9E,MAAO9F,YAAY,EAAD,IAClB6K,MAAOC,IAAgBC,SArCR,QAwCnBxR,EAAM0e,mBAAkB,GAxCL,0DAAH,qDA2CZI,EAAgB,SACpBC,GAEA,GAAI/e,EAAMgS,aACR,OAAOhS,EAAMgS,aAAazW,MAAK,SAAC2T,GAAD,OAAUA,EAAKzT,KAAOsjB,MAKzD,OACE,0BAAStc,UAAU,GAAnB,UACE,sBAAKA,UAAU,iDAAf,UAEE,0BAASA,UAAU,gBAAnB,UACE,sBAAKA,UAAU,oCAAf,UACE,sBAAMA,UAAU,mCAAhB,SACGzC,EAAM0X,gBAAgB9D,SAASC,iBAElC,wBACExY,KAAK,SACLoH,UAAU,uGACVgC,QAAS,kBAAMzE,EAAMu2B,iBAAiBv2B,EAAMw2B,eAH9C,SAKGx2B,EAAMw2B,aAAe,OAAS,YAGnC,sBAAK/zB,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBACEA,UAAS,oBACPzC,EAAMuV,UAAU2J,SAASpiB,SAAWokB,IAAkBC,SAClD,kBACA,gBAHG,sBADX,SAOGrK,YAAsB9W,EAAMuV,UAAU2J,SAASpiB,aAGpD,sBAAK2F,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,SACGzC,EAAMuV,UAAU2J,SAASC,UAAUC,WAGvC,EAWD,sBAAK3c,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,mBACA,sBAAMA,UAAU,+BAAhB,SACG0a,YAAKnd,EAAM0X,gBAAgBiI,gBAGhC,sBAAKld,UAAU,+CAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBAAMA,UAAU,cAAhB,SACGzC,EAAMuV,UAAU2J,SAAS/J,YAK7BnV,EAAMw2B,cACL,qBAAK/zB,UAAU,wDAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,wCAAf,8BAGA,sBAAKA,UAAU,kDAAf,UACE,sBAAMA,UAAS,SAAf,mBACA,sBAAMA,UAAU,gBAAhB,SACGzC,EAAM0X,gBAAgB9D,SAASwN,iBAGpC,sBAAK3e,UAAU,kDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,SAEIzC,EAAM0X,gBAAgB9D,SAASyN,gBAC5BC,uBAIT,sBAAK7e,UAAU,kDAAf,UACE,sBAAMA,UAAS,SAAf,wBACA,sBAAMA,UAAU,gBAAhB,SAEIzC,EAAM0X,gBAAgB9D,SAASO,uBAC5BoN,8BAIT,sBAAK9e,UAAU,kDAAf,UACE,sBAAMA,UAAS,SAAf,sBACA,sBAAMA,UAAU,0BAAhB,SACGzC,EAAM0X,gBAAgB9D,SAAS5X,QAAQsG,KACtC,SAAC4M,EAAM7K,GAAP,OACE,sBAEE5B,UAAU,0BAFZ,UAIE,sBAAMA,UAAU,gBAAhB,SACGyM,EAAK+E,cAER,uBAAMxR,UAAU,gBAAhB,cACIyM,EAAKsS,YADT,OAGCnd,IACCrE,EAAM0X,gBAAgB9D,SAAS5X,QAAQa,OAAS,GAChD,MAXGwH,EAAQ6K,EAAK7S,mBAkB5B,qBAAKoG,UAAU,wCAAf,mCAGCzC,EAAM0X,gBAAgB9D,SAASkF,aAAajc,OAAS,EACpDqjB,YACElgB,EAAM0X,gBAAgB9D,SACtB5T,EAAM2N,oBACN0S,uBAAuB/d,KAAI,SAAC4M,EAAM7K,GAAP,OAC3B,sBACE5B,UAAU,wDADZ,UAIE,sBAAKA,UAAU,2DAAf,UACE,cAAC,KAAD,IACA,+BAAOyM,EAAK8R,oBAEd,qBAAKve,UAAU,uBAAf,SACE,cAACoW,EAAA,EAAD,CACEC,aAAcoH,YACZlgB,EAAM0X,gBAAgB9D,SACtB5T,EAAM2N,oBACNyS,cAAcnjB,QACd,SAACwjB,GAAD,OAASA,EAAIpS,cAAgBa,EAAKb,qBAZnChK,EAAQ6K,EAAKb,gBAmBtB,cAACooB,EAAA,EAAD,CACEnlB,MAAOmQ,IAAeC,KACtB9d,MAAO,4BAalB5D,EAAMuV,UAAUuI,OAAOjhB,OAAS,GAC/BmD,EAAMuV,UAAUuI,OAAOxb,KAAI,SAACmd,EAAOpb,GAAR,OACzB,0BAAS5B,UAAU,0BAAnB,UAEE,sBAAKA,UAAU,kCAAf,UACE,sBAAKA,UAAU,wDAAf,UACE,cAAC,IAAD,IACCqc,EAAc9e,EAAMuV,UAAUL,uBAC3B4J,EAAc9e,EAAMuV,UAAUL,uBAC3BC,OACH,MAEN,4BAAIsK,EAAMtK,SACV,sBAAM1S,UAAU,wBAAhB,SACGid,YAASD,EAAME,gBAKnBxB,YAAiBne,EAAMuV,UAAWkK,EAAM1B,QACvC,0BAAStb,UAAU,OAAnB,UACE,uBAAMA,UAAU,qCAAhB,6BACmB4B,EAAQ,EAD3B,OAGA,sBAAK5B,UAAU,aAAf,UACE,sBAAKA,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBACEA,UAAS,oBACPgd,EAAMzB,wBACNC,IAAoBC,SAChB,kBACA,gBAJG,sBADX,SAQGpH,YACC2I,EAAMzB,sBAAsB1J,0BAIlC,sBAAK7R,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,SACGgd,EAAMN,UAAUC,UAGrB,sBAAK3c,UAAU,+CAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBAAMA,UAAU,cAAhB,SACGgd,EAAMG,gCA/C+Bvb,EAAQob,EAAMhkB,UA0DtE,qCACIuE,EAAM6f,YACN,sBAAKpd,UAAU,mDAAf,UACE,sBACEA,UAAS,UACPzC,EAAMuV,UAAUuK,oBAAsBzB,IAAY0B,QAC9C,kBACA/f,EAAMuV,UAAUuK,oBAAsBzB,IAAY2B,QAClD,eACA,iBALG,yBADX,SASGlJ,YACC9W,EAAMuV,UAAUuK,kBAAkBxL,uBAIrCqJ,EAAiB3d,EAAMuV,YACtB,wBACE9S,UAAU,eACVgC,QAAS,kBAAMzE,EAAM6e,eAAc,IACnChb,SAAU7D,EAAMigB,eAHlB,wBAWLjgB,EAAM6f,YACL,sBAAKpd,UAAU,kEAAf,UACE,sBAAKA,UAAU,cAAf,UACE,0BACEI,YAAW,4BACXO,KAAM,GACND,KAAM,EACNV,UAAS,wBACPzC,EAAM0P,WAAyC,YAA5B1P,EAAM0P,UAAU5T,QAC/B,MACA,OAHG,oDAKTyG,MAAO,CAAE+U,OAAQ,QACjB1T,MAAO5D,EAAMwe,cACb1b,SAAU,SAACC,GACT/C,EAAM4e,iBAAiB7b,EAAEY,OAAOC,OAChC5D,EAAMyP,aAAa,OAErB5L,SAAU7D,EAAMigB,iBAEjBjgB,EAAM0P,WAAyC,YAA5B1P,EAAM0P,UAAU5T,SAClC,mBAAG2G,UAAU,eAAb,SAA6BzC,EAAM0P,UAAU3S,SAGjD,sBAAK0F,UAAU,kDAAf,UACE,yBACEA,UAAU,iIACVgC,QAAS,WACPzE,EAAM4e,iBAAiB,IACvB5e,EAAM6e,eAAc,GACpB7e,EAAMyP,aAAa,OAErB5L,SAAU7D,EAAMigB,eAPlB,UASE,cAAC,IAAD,CAAmBxd,UAAU,YAC7B,2CAEF,wBACEA,UAAU,iIACVoB,SAAU7D,EAAMigB,eAChBxb,QAAS,kBAAM2P,KAHjB,SAKGpU,EAAMigB,eACL,qBAAKxd,UAAU,GAAf,wBAEA,sBAAKA,UAAU,2CAAf,UACE,cAAC,IAAD,CAAkBA,UAAU,YAC5B,+D,0BCjYdkb,EAAmB,SAACpI,GACxB,GAA8B,IAA1BA,EAAUqI,YAAmB,CAC/B,IAAMC,EAAatI,EAAUuI,OAAOviB,MAAK,SAAC2T,GAAD,OAAyB,IAAfA,EAAK6O,SACxD,GAAIF,GACEA,EAAWG,wBAA0BC,IAAoBC,SAC3D,OAAO,EAIb,OAAO,GA0SM9R,eARS,SAAC,GAKvB,MAAO,CAAE0V,cADN,EAHHA,iBAOsC,CACtCC,uBACAxD,kBACAlN,qBAHajF,EAxQmC,SAACpM,GACjD,MAA8BW,oBAAS,GAAvC,mBAAOmD,EAAP,KAAgBuL,EAAhB,KAEA3N,qBAAU,YAEgC,OAAtC1B,EAAM8hB,cAAcA,eAC0B,IAA7C9hB,EAAM8hB,cAAcA,cAAcjlB,QAAgBiH,IAEnD9D,EAAM+hB,kBAAkB1S,KAEzB,CAACvL,EAAS9D,IAEb,IAAMoU,EAAY,uCAAG,4BAAAxO,EAAA,0DACf8N,YAAgB1T,EAAMwe,eADP,yCAEVxe,EAAMyP,aAAa,CACxB3T,QAAS,UACTiB,IAAK,gCAJU,UAOdiD,EAAMuV,UAPQ,yCAQVvV,EAAMqR,eAAe,CAC1B9E,MAAO,oBACP+E,MAAOC,IAAgBkN,WAVR,cAcnBze,EAAM0e,mBAAkB,GAdL,SAgBjB7Y,cAhBiB,SAiBCC,IAAM6Y,IAAN,UACb3Y,IAAIC,SADS,yBACgBjG,EAAMuV,UAAUnI,KAChD,CACE+H,OAAQnV,EAAMwe,gBApBD,OAiBX/hB,EAjBW,OAuBjByJ,QAAQC,IAAI,CAAE1J,IAAKA,EAAIuG,OACJ,MAAfvG,EAAIK,QAAiC,MAAfL,EAAIK,SAC5BkD,EAAMue,cAAc9hB,EAAIuG,MACxBhD,EAAMqR,eAAe,CACnB9E,MAAO,wBACP+E,MAAOC,IAAgB8D,UAEzBrV,EAAM4e,iBAAiB,IACvB5e,EAAM6e,eAAc,IA/BL,kDAkCjB3Y,QAAQM,MAAM,CAAEA,MAAK,OACrBxG,EAAMqR,eAAe,CACnB9E,MAAO9F,YAAY,EAAD,IAClB6K,MAAOC,IAAgBC,SArCR,QAwCnBxR,EAAM0e,mBAAkB,GAxCL,0DAAH,qDA2CZI,EAAgB,SACpBC,GAEA,GAAI/e,EAAMgS,aACR,OAAOhS,EAAMgS,aAAazW,MAAK,SAAC2T,GAAD,OAAUA,EAAKzT,KAAOsjB,MAKzD,OACE,0BAAStc,UAAU,GAAnB,UACE,sBAAKA,UAAU,iDAAf,UAEE,0BAASA,UAAU,gBAAnB,UACE,sBAAKA,UAAU,oCAAf,UACE,uBAAMA,UAAU,mCAAhB,qBACWzC,EAAM02B,SAASziB,YAAa,OAEvC,wBACE5Y,KAAK,SACLoH,UAAU,uGACVgC,QAAS,kBAAMzE,EAAMu2B,iBAAiBv2B,EAAMw2B,eAH9C,SAKGx2B,EAAMw2B,aAAe,OAAS,YAKlCx2B,EAAMw2B,cACL,qBAAK/zB,UAAU,mCAAf,SACE,cAACiiB,EAAA,EAAD,CACEjB,aAAa,EACbzB,QAASmC,YACPnkB,EAAM22B,cACN32B,EAAM02B,SAASziB,oBAYxBjU,EAAMuV,UAAUuI,OAAOjhB,OAAS,GAC/BmD,EAAMuV,UAAUuI,OAAOxb,KAAI,SAACmd,EAAOpb,GAAR,OACzB,0BAAS5B,UAAU,0BAAnB,UAEE,sBAAKA,UAAU,kCAAf,UACE,sBAAKA,UAAU,wDAAf,UACE,cAAC,IAAD,IACCqc,EAAc9e,EAAMuV,UAAUL,uBAC3B4J,EAAc9e,EAAMuV,UAAUL,uBAC3BC,OACH,MAEN,4BAAIsK,EAAMtK,SACV,sBAAM1S,UAAU,wBAAhB,SACGid,YAASD,EAAME,gBAKnBxB,YAAiBne,EAAMuV,UAAWkK,EAAM1B,QACvC,0BAAStb,UAAU,OAAnB,UACE,uBAAMA,UAAU,qCAAhB,6BACmB4B,EAAQ,EAD3B,OAGA,sBAAK5B,UAAU,aAAf,UACE,sBAAKA,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBACEA,UAAS,oBACPgd,EAAMzB,wBACNC,IAAoBC,SAChB,kBACA,gBAJG,sBADX,SAQGpH,YACC2I,EAAMzB,sBAAsB1J,0BAIlC,sBAAK7R,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,SACGqB,EACC,qBAAKrB,UAAU,sGAEfzC,EAAMuV,UAAUqhB,YAAY/hB,UAAUC,MACtC,IACA9U,EAAMuV,UAAUqhB,YAAY/hB,UAAUE,WAI5C,sBAAKtS,UAAU,+CAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBAAMA,UAAU,cAAhB,SACGgd,EAAMG,gCArD+Bvb,EAAQob,EAAMhkB,UAgEtE,qCACIuE,EAAM6f,YACN,sBAAKpd,UAAU,mDAAf,UACE,sBACEA,UAAS,UACPzC,EAAMuV,UAAUuK,oBAAsBzB,IAAY0B,QAC9C,kBACA/f,EAAMuV,UAAUuK,oBAAsBzB,IAAY2B,QAClD,eACA,iBALG,yBADX,SASGlJ,YACC9W,EAAMuV,UAAUuK,kBAAkBxL,uBAIrCqJ,EAAiB3d,EAAMuV,YACtB,wBACE9S,UAAU,eACVgC,QAAS,kBAAMzE,EAAM6e,eAAc,IACnChb,SAAU7D,EAAMigB,eAHlB,wBAWLjgB,EAAM6f,YACL,sBAAKpd,UAAU,kEAAf,UACE,sBAAKA,UAAU,cAAf,UACE,0BACEI,YAAW,4BACXO,KAAM,GACND,KAAM,EACNV,UAAS,wBACPzC,EAAM0P,WAAyC,YAA5B1P,EAAM0P,UAAU5T,QAC/B,MACA,OAHG,oDAKTyG,MAAO,CAAE+U,OAAQ,QACjB1T,MAAO5D,EAAMwe,cACb1b,SAAU,SAACC,GACT/C,EAAM4e,iBAAiB7b,EAAEY,OAAOC,OAChC5D,EAAMyP,aAAa,OAErB5L,SAAU7D,EAAMigB,iBAEjBjgB,EAAM0P,WAAyC,YAA5B1P,EAAM0P,UAAU5T,SAClC,mBAAG2G,UAAU,eAAb,SAA6BzC,EAAM0P,UAAU3S,SAGjD,sBAAK0F,UAAU,kDAAf,UACE,yBACEA,UAAU,iIACVgC,QAAS,WACPzE,EAAM4e,iBAAiB,IACvB5e,EAAM6e,eAAc,GACpB7e,EAAMyP,aAAa,OAErB5L,SAAU7D,EAAMigB,eAPlB,UASE,cAAC,IAAD,CAAmBxd,UAAU,YAC7B,2CAEF,wBACEA,UAAU,iIACVoB,SAAU7D,EAAMigB,eAChBxb,QAAS,kBAAM2P,KAHjB,SAKGpU,EAAMigB,eACL,qBAAKxd,UAAU,GAAf,wBAEA,sBAAKA,UAAU,2CAAf,UACE,cAAC,IAAD,CAAkBA,UAAU,YAC5B,+D,SCzSdkb,EAAmB,SAACpI,GACxB,GAA8B,IAA1BA,EAAUqI,YAAmB,CAC/B,IAAMC,EAAatI,EAAUuI,OAAOviB,MAAK,SAAC2T,GAAD,OAAyB,IAAfA,EAAK6O,SACxD,GAAIF,GACEA,EAAWG,wBAA0BC,IAAoBC,SAC3D,OAAO,EAIb,OAAO,GAuQM9R,cAAQ,KAAM,CAC3BmS,kBACAlN,qBAFajF,EA7N+C,SAACpM,GAC7D,IAAMoU,EAAY,uCAAG,4BAAAxO,EAAA,0DACf8N,YAAgB1T,EAAMwe,eADP,yCAEVxe,EAAMyP,aAAa,CACxB3T,QAAS,UACTiB,IAAK,gCAJU,UAOdiD,EAAMuV,UAPQ,yCAQVvV,EAAMqR,eAAe,CAC1B9E,MAAO,wBACP+E,MAAOC,IAAgBkN,WAVR,cAcnBze,EAAM0e,mBAAkB,GAdL,SAgBjB7Y,cAhBiB,SAiBCC,IAAM6Y,IAAN,UACb3Y,IAAIC,SADS,yBACgBjG,EAAMuV,UAAUnI,KAChD,CACE+H,OAAQnV,EAAMwe,gBApBD,OAiBX/hB,EAjBW,OAuBjByJ,QAAQC,IAAI,CAAE1J,IAAKA,EAAIuG,OACJ,MAAfvG,EAAIK,QAAiC,MAAfL,EAAIK,SAC5BkD,EAAMue,cAAc9hB,EAAIuG,MACxBhD,EAAMqR,eAAe,CACnB9E,MAAO,wBACP+E,MAAOC,IAAgB8D,UAEzBrV,EAAM4e,iBAAiB,IACvB5e,EAAM6e,eAAc,IA/BL,kDAkCjB3Y,QAAQM,MAAM,CAAEA,MAAK,OACrBxG,EAAMqR,eAAe,CACnB9E,MAAO9F,YAAY,EAAD,IAClB6K,MAAOC,IAAgBC,SArCR,QAwCnBxR,EAAM0e,mBAAkB,GAxCL,0DAAH,qDA2ClB,OACE,0BAASjc,UAAU,GAAnB,UACE,sBAAKA,UAAU,iDAAf,UAEE,0BAASA,UAAU,gBAAnB,UACE,qBAAKA,UAAU,oCAAf,SACE,sBAAKA,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBAAMA,UAAU,kCAAhB,SACGzC,EAAM+M,YAAYI,OAAOK,OAAOC,mBAYvC,qBAAKhL,UAAU,oBAAf,SACE,sBAAKA,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,uBACA,sBAAMA,UAAU,kCAAhB,SACGzC,EAAM+M,YAAYI,OAAOK,OAAO/N,YAAYo3B,wBAUpD72B,EAAMuV,UAAUuI,OAAOjhB,OAAS,GAC/BmD,EAAMuV,UAAUuI,OAAOxb,KAAI,SAACmd,EAAOpb,GAAR,OACzB,0BAAS5B,UAAU,0BAAnB,UAEE,sBAAKA,UAAU,kCAAf,UACE,4BAAIgd,EAAMtK,SACV,sBAAM1S,UAAU,wBAAhB,SACGid,YAASD,EAAME,iBA5HhCpK,EAiI8BvV,EAAMuV,UAhIpCwI,EAgI+C0B,EAAM1B,QA9HlCxI,EAAUuI,OAAOviB,MAClC,SAAC2T,GAAD,OACEA,EAAK6O,QAAUA,GAAS7O,EAAKkP,eAAiBC,IAAYC,cA6HhD,0BAAS7b,UAAU,OAAnB,UACE,uBAAMA,UAAU,qCAAhB,6BACmB4B,EAAQ,EAD3B,OAGA,sBAAK5B,UAAU,aAAf,UACE,sBAAKA,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBACEA,UAAS,oBACPgd,EAAMzB,wBACNC,IAAoBC,SAChB,kBACA,gBAJG,sBADX,SAQGpH,YACC2I,EAAMzB,sBAAsB1J,0BAIlC,sBAAK7R,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,SACGgd,EAAMN,UAAUC,UAGrB,sBAAK3c,UAAU,+CAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBAAMA,UAAU,cAAhB,SACGgd,EAAMG,iCAxC+Bvb,EAAQob,EAAMhkB,IAxH5C,IAC9B8Z,EACAwI,QAyKI,qCACI/d,EAAM6f,YACN,sBAAKpd,UAAU,mDAAf,UACE,sBACEA,UAAS,UACPzC,EAAMuV,UAAUuK,oBAAsBzB,IAAY0B,QAC9C,kBACA/f,EAAMuV,UAAUuK,oBAAsBzB,IAAY2B,QAClD,eACA,iBALG,yBADX,SASGlJ,YACC9W,EAAMuV,UAAUuK,kBAAkBxL,uBAIrCqJ,EAAiB3d,EAAMuV,YACtB,wBACE9S,UAAU,eACVgC,QAAS,kBAAMzE,EAAM6e,eAAc,IACnChb,SAAU7D,EAAMigB,eAHlB,wBAWLjgB,EAAM6f,YACL,sBAAKpd,UAAU,kEAAf,UACE,sBAAKA,UAAU,cAAf,UACE,0BACEI,YAAW,4BACXO,KAAM,GACND,KAAM,EACNV,UAAS,wBACPzC,EAAM0P,WAAyC,YAA5B1P,EAAM0P,UAAU5T,QAC/B,MACA,OAHG,oDAKTyG,MAAO,CAAE+U,OAAQ,QACjB1T,MAAO5D,EAAMwe,cACb1b,SAAU,SAACC,GACT/C,EAAM4e,iBAAiB7b,EAAEY,OAAOC,OAChC5D,EAAMyP,aAAa,OAErB5L,SAAU7D,EAAMigB,iBAEjBjgB,EAAM0P,WAAyC,YAA5B1P,EAAM0P,UAAU5T,SAClC,mBAAG2G,UAAU,eAAb,SAA6BzC,EAAM0P,UAAU3S,SAGjD,sBAAK0F,UAAU,kDAAf,UACE,yBACEA,UAAU,iIACVgC,QAAS,WACPzE,EAAM4e,iBAAiB,IACvB5e,EAAM6e,eAAc,GACpB7e,EAAMyP,aAAa,OAErB5L,SAAU7D,EAAMigB,eAPlB,UASE,cAAC,IAAD,CAAmBxd,UAAU,YAC7B,2CAEF,wBACEA,UAAU,iIACVoB,SAAU7D,EAAMigB,eAChBxb,QAAS,kBAAM2P,KAHjB,SAKGpU,EAAMigB,eACL,qBAAKxd,UAAU,GAAf,wBAEA,sBAAKA,UAAU,2CAAf,UACE,cAAC,IAAD,CAAkBA,UAAU,YAC5B,+D,SCEL2J,eAPS,SAAC,GAIvB,MAAO,CAAET,KADsD,EAF/DA,KAGeoG,SADgD,EAD/DA,YAKsC,CACtC+F,qBACAkd,yBACAxf,8BACAE,2BACArE,qBALajF,EAtPmC,SAACpM,GACjD,MAA8BW,oBAAkB,GAAhD,mBAAOmD,EAAP,KAAgBuL,EAAhB,KACA,EACE1O,oBAAkB,GADpB,mBAAOm2B,EAAP,KAAoCC,EAApC,KAEA,EACEp2B,oBAAkB,GADpB,mBAAOq2B,EAAP,KAAiCC,EAAjC,KAEA,EAAkDt2B,oBAAkB,GAApE,mBAAOu0B,EAAP,KAA0BC,EAA1B,KAEAzzB,qBAAU,WACqC,OAAzC1B,EAAM+R,SAASqB,sBACjBpT,EAAMwV,0BACJxV,EAAM2L,KAAKsJ,KAAKhW,SAChB,SAACnC,EAAiBC,IACD,IAAXD,IACEC,EAAIF,OAAS,GACfmD,EAAMqR,eAAe,CACnB9E,MAAOxP,EACPuU,MAAOC,IAAgBC,SAG3BulB,GAA+B,OAI5BD,GACTC,GAA+B,GAGS,OAAtC/2B,EAAM+R,SAASiB,oBACjB9M,QAAQC,IAAI,sDACZnG,EAAM0V,wBAAuB,SAAC5Y,EAAiBC,IAC9B,IAAXD,IACEC,EAAIF,OAAS,GACfmD,EAAMqR,eAAe,CACnB9E,MAAOxP,EACPuU,MAAOC,IAAgBC,SAG3BylB,GAA4B,QAGvBD,GACTC,GAA4B,GAGI,OAA9Bj3B,EAAM+R,SAASqjB,WACjBp1B,EAAM8X,kBAAiB,SAAChb,EAAiBC,IACxB,IAAXD,IACEC,EAAIF,OAAS,GACfmD,EAAMqR,eAAe,CACnB9E,MAAOxP,EACPuU,MAAOC,IAAgBC,SAG3B2jB,GAAqB,OAGhBD,GACTC,GAAqB,GAIpB2B,GACAE,GACA9B,IACDpxB,GAEAuL,GAAW,KAEZ,CACDvL,EACAoxB,EACA4B,EACAE,EACAh3B,IAGF,IAAMq1B,EAAc,SAClBtjB,EACApL,GAEA,IAAIvG,EAAiB,EAkBrB,OAhBI2R,EAAS9E,UAAyB,QAAbtG,IACvBvG,EAAS2R,EAAS9E,SAAShQ,QACzB,SAACiS,GAAD,OACEA,EAAK4Q,oBAAsBzB,IAAY2B,SACvC9Q,EAAK4Q,oBAAsBzB,IAAY6Y,aACzCr6B,QAEAkV,EAAS9E,UAAyB,QAAbtG,IACvBvG,EAAS2R,EAAS9E,SAAShQ,QACzB,SAACiS,GAAD,OACEA,EAAKwB,WAAa/J,GAClBuI,EAAK4Q,oBAAsBzB,IAAY2B,SACvC9Q,EAAK4Q,oBAAsBzB,IAAY6Y,aACzCr6B,QAGGuD,GAGT,OACE,eAAC,IAAMm1B,SAAP,WACE,sBAAM9yB,UAAU,eAAhB,mCAEEqB,GAAW9D,EAAMw1B,gBACjB,0BAAS/yB,UAAU,YAAnB,UACE,qBAAKA,UAAU,wGACf,qBAAKA,UAAU,wGACf,qBAAKA,UAAU,wGACf,qBAAKA,UAAU,4GAMjBqB,IAAY9D,EAAMw1B,eAClB,oCAEE,qBACE/yB,UAAU,OACVgC,QAAS,WAEPzE,EAAMg1B,qBAAqB,QAJ/B,SAOE,cAAC,IAAD,CACEzoB,MAAM,MACNG,OAA6C,QAArC1M,EAAM+R,SAAS0jB,kBACvB9oB,MAAO0oB,EAAYr1B,EAAM+R,SAAU,WAIvC,qBACEtP,UAAU,OACVgC,QAAS,WAEPzE,EAAMg1B,qBAAqBxkB,IAAcvF,cAJ7C,SAOE,cAAC,IAAD,CACEsB,MAAO,cACPG,OACuC,QAArC1M,EAAM+R,SAAS0jB,mBACfz1B,EAAM+R,SAAS0jB,oBAAsBjlB,IAAcvF,YAErD0B,MAAO0oB,EAAYr1B,EAAM+R,SAAUvB,IAAcvF,iBAIrD,qBACExI,UAAU,OACVgC,QAAS,WACPzE,EAAMg1B,qBAAqBxkB,IAAcI,sBAH7C,SAME,cAAC,IAAD,CACErE,MAAO,WACPG,OACuC,QAArC1M,EAAM+R,SAAS0jB,mBACfz1B,EAAM+R,SAAS0jB,oBACbjlB,IAAcI,oBAElBjE,MAAO0oB,EACLr1B,EAAM+R,SACNvB,IAAcI,yBAKpB,qBACEnO,UAAU,OACVgC,QAAS,WACPzE,EAAMg1B,qBAAqBxkB,IAAcQ,cAH7C,SAME,cAAC,IAAD,CACEzE,MAAO,OACPG,OACuC,QAArC1M,EAAM+R,SAAS0jB,mBACfz1B,EAAM+R,SAAS0jB,oBAAsBjlB,IAAcQ,YAErDrE,MAAO0oB,EAAYr1B,EAAM+R,SAAUvB,IAAcQ,kBAIpD,W,mBJhLCslB,K,0BAAAA,E,oBAAAA,E,YAAAA,E,sCAAAA,E,uBAAAA,M,KAQL,IAAMpkB,EAAkB,SAC7Bc,EACAmkB,GAEA,IAAI/2B,EAAwC4S,EAAmBzX,MAC7D,SAAC2T,GAAD,OAAUA,EAAKkD,SAAW+kB,KAE5B,OAAO/2B,GAAkB,MAGdg3B,EAAiB,SAC5B7hB,GAEA,OAAIA,EAAU7E,WAAaF,IAAcvF,YAChCqrB,EAAetF,YAEpBzb,EAAU7E,WAAaF,IAAcI,oBAChC0lB,EAAez0B,SAEpB0T,EAAU7E,WAAaF,IAAcQ,YAChCslB,EAAee,KAEpB9hB,EAAU7E,WAAaF,IAAcS,kBAChCqlB,EAAegB,kBAEpB/hB,EAAU7E,WAAaF,IAAcK,mBAChCylB,EAAeiB,eADxB,GAKWC,EAAmB,SAC9BjiB,GAKA,IAAIkiB,EAAiB36B,EACrB,OAAQyY,EAAUuK,mBAChB,KAAKzB,IAAY6Y,UACfO,EAAU,qCACV36B,EAASga,YAAsBuH,IAAY6Y,UAAU5iB,qBACrD,MACF,KAAK+J,IAAYC,UACfmZ,EAAU,sCACV36B,EAASga,YAAsBuH,IAAYC,UAAUhK,qBACrD,MAEF,KAAK+J,IAAY2B,QACfyX,EAAU,oCACV36B,EAASga,YAAsBuH,IAAY2B,QAAQ1L,qBACnD,MAEF,QACEmjB,EAAU,uCACV36B,EAASga,YAAsBuH,IAAY0B,QAAQzL,qBAIvD,MAAO,CAAEmjB,UAAS36B,WAGP46B,EAAe,SAC1B3C,EACA4C,GAEAzxB,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAE4uB,YAAW4C,aACzBzxB,QAAQC,IAAI,wCACZ,IAAI/F,EAA8C20B,EAAUx5B,MAC1D,SAAC2T,GAAD,OAAUA,EAAK9B,MAAQuqB,KAEzB,OAAOv3B,GAAkB,MAGdiS,GAAqB,SAChCe,EACAb,GAEA,IAAInS,EACFgT,EAAsB7X,MACpB,SAAC2T,GAAD,OAAUA,EAAKqD,iBAAmBA,KAEtC,OAAOnS,GAAkB,MAGdw3B,GAAuB,SAClCjqB,EACAqF,EACAuC,GAEA,IAAInV,EAAiB,GAGrB,GAAImV,EAAU7E,WAAaF,IAAcI,oBAAqB,CAC5D,IAAI4G,EAAUtF,EAAgBc,EAAoBuC,EAAUpG,gBAC5D/O,EAASoX,EACL9J,YAAiBC,EAAoB6J,GAAS1I,KAC9C,qBAGN,OAAO1O,GAGIy3B,GAAoB,SAC/B9lB,EACAD,EACAgmB,EACAviB,GAEA,IAAInV,EAAiBmV,EAAUpG,eAY/B,GATEoG,EAAU7E,WAAaF,IAAcI,qBACrCmB,EAASiB,qBAET5S,EAASw3B,GACP9lB,EACAC,EAASiB,mBACTuC,IAIFA,EAAU7E,WAAaF,IAAcvF,aACrC8G,EAASqB,sBACT,CACA,IAAIsE,EAAkBrF,GACpBN,EAASqB,sBACTmC,EAAUpG,gBAGV/O,EADEsX,EACOA,EAAgB9D,SAASC,eAEzB,wBAIb,GACE0B,EAAU7E,WAAaF,IAAcQ,aACrC8mB,GACA/lB,EAAS+B,SACT,CACA,IAAIikB,EAAahkB,YACfhC,EAAS+B,SACTyB,EAAUpG,gBAGV/O,EADE23B,GAAc/jB,YAAc8jB,EAAWC,EAAW57B,QAC3C6X,YAAc8jB,EAAWC,EAAW57B,QAAS8X,YAE7C,iBAUb,OANIsB,EAAU7E,WAAaF,IAAcK,qBACvCzQ,EAAS2R,EAAShF,YACd,aAAegF,EAAShF,YAAYI,OAAOK,OAAOC,YAClD,uBAGCrN,GA2CH43B,G,kDACJ,WAAYh4B,GAAkB,IAAD,8BAC3B,cAAMA,IAoBRqP,WAAa,SAACzL,GACZ,EAAK0L,SAAS,CAAExL,QAASF,KAtBE,EAyB7BwyB,kBAAoB,SAACxyB,GACnB,EAAK0L,SAAS,CAAEsmB,eAAgBhyB,KA1BL,EA6B7Bq0B,aAAe,SAACr0B,GACd,EAAK0L,SAAS,CAAE4oB,UAAWt0B,KA9BA,EAiC7Bu0B,iBAAmB,SAACv0B,GAClB,EAAK0L,SAAS,CAAEumB,cAAejyB,KAlCJ,EAqC7Bw0B,aAAe,SAACx0B,GACd,EAAK0L,SAAS,CAAE+oB,UAAWz0B,KAtCA,EAyC7Bob,aAAe,SAACpb,GACd,EAAK0L,SAAS,CAAE2P,UAAWrb,KA1CA,EA6C7B8a,kBAAoB,SAAC9a,GACnB,EAAK0L,SAAS,CAAE2Q,eAAgBrc,KA9CL,EAiD7Bib,cAAgB,SAACjb,GACf,EAAK0L,SAAS,CAAEuQ,WAAYjc,KAlDD,EAqD7B6L,aAAe,SACb7L,GAKA,EAAK0L,SAAS,CAAEI,UAAW9L,KA3DA,EA8D7Bgb,iBAAmB,SAAChb,GAClB,EAAK0L,SAAS,CAAEkP,cAAe5a,KA/DJ,EAkE7B00B,WAAa,SAAC10B,GACZ,EAAK0L,SAAS,CAAEipB,QAAS30B,KAnEE,EAsE7BuyB,cAAgB,SAACvyB,GACf,EAAK0L,SAAS,CAAEymB,WAAYnyB,KAvED,EA0E7B40B,WAAa,SAACzC,GAEyB,OAAjC,EAAK/1B,MAAM+R,SAAS9E,UAAoC,OAAf8oB,EAC3C,EAAK/1B,MAAM6X,YACT,EAAK7X,MAAM2L,KAAKsJ,KAAKhW,QACrB82B,EAAWz2B,iBACX,SAACxC,EAAiBC,IACfD,GAAU,EAAKuS,WAAWvS,IACZ,IAAXA,GAAoBC,EAAIF,QAC1B,EAAKmD,MAAMqR,eAAe,CACxB9E,MAAOxP,EACPuU,MAAOC,IAAgBC,YAKtBukB,GAAc,EAAKtqB,MAAM3H,SAClC,EAAKuL,YAAW,IA3FS,EA+F7BopB,WAAa,SAACzC,GAEZ,GAA8B,OAA1B,EAAKvqB,MAAMsqB,YAAuBC,EAASn5B,OAAS,EAAG,CACzD,IAAI0T,EAAcylB,EAASz6B,MAAK,SAAC2T,GAAD,OAA6B,IAAnBA,EAAKlI,aAC/C,EAAKmvB,cAAc5lB,GAA4BylB,EAAS,IACxD,EAAKwC,WAAWjoB,GAA4BylB,EAAS,IACrD,EAAK9kB,gBACHX,GAA4BylB,EAAS,GACrC,EAAKh2B,MAAM2L,KAAKsJ,KAAKhW,WAvGE,EA4G7BiS,gBAAkB,SAChBC,EACAlS,GAEA,EAAKe,MAAMoR,aACTD,EAAkB7R,gBAClBL,GACA,SAACnC,EAAiBC,EAAaiG,GAC7B,EAAKqM,WAAWvS,IACXA,GAAUC,EAAIF,QACjB,EAAKmD,MAAMqR,eAAe,CACxB9E,MAAOxP,EACPuU,MAAOC,IAAgBC,SAGvBxO,IACFkD,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAE+K,gBAAiBlO,IAC/BkD,QAAQC,IAAI,4CAIuB,OAArC,EAAKnG,MAAM+R,SAASC,cACtB,EAAKhS,MAAMiS,iBAAgB,SAACnV,EAAiBC,GAC3C,EAAKsS,WAAWvS,GACXA,GACCC,EAAIF,OAAS,GACf,EAAKmD,MAAMqR,eAAe,CACxB9E,MAAOxP,EACPuU,MAAOC,IAAgBC,aAzIN,EAiJ7BlG,kBAAoB,WAEO,OAAvB,EAAKtL,MAAMhE,SACoB,IAA9B,EAAKgE,MAAMhE,QAAQa,QAAgB,EAAK4O,MAAM3H,SAE/C,EAAK9D,MAAMyV,YAAY,EAAKpG,YAC5B,EAAKA,YAAW,IAEhB,EAAKA,YAAW,GAIsB,OAApC,EAAKrP,MAAMi2B,qBACb,EAAKj2B,MAAMiH,oBACT,SAACnK,EAAiBC,EAAaiG,GACxBlG,IACH,EAAKs5B,mBAAkB,GACnBr5B,EAAIF,QACN,EAAKmD,MAAMqR,eAAe,CACxB9E,MAAOxP,EACPuU,MAAOC,IAAgBC,SAGvBxO,GAAQA,EAAKnG,OAAS,GAEM,OAA1B,EAAK4O,MAAMsqB,YACb,EAAK0C,WAAWz1B,QAO1B,EAAKy1B,WAAW,EAAKz4B,MAAMi2B,sBAC3B,EAAKG,mBAAkB,IAGpB,EAAKp2B,MAAM8R,gBAAgBxD,iBAGrB,EAAK7C,MAAM3H,SACpB,EAAKuL,YAAW,IAHhB,EAAKrP,MAAMyI,sBACX,EAAK4G,YAAW,KAIb,EAAKrP,MAAM8R,gBAAgB5D,qBAAuB,EAAKzC,MAAM3H,SAChE,EAAK9D,MAAMmJ,yBACX,EAAKkG,YAAW,IACP,EAAK5D,MAAM3H,SACpB,EAAKuL,YAAW,IAGb,EAAKrP,MAAM8R,gBAAgBpD,gBAAkB,EAAKjD,MAAM3H,SAC3D,EAAK9D,MAAM6J,oBACX,EAAKwF,YAAW,IACP,EAAK5D,MAAM3H,SACpB,EAAKuL,YAAW,GAGsB,OAApC,EAAKrP,MAAM+R,SAAShF,aACtB,EAAK/M,MAAM2V,eACT,EAAK3V,MAAM2L,KAAKsJ,KAAKhW,SACrB,SAACnC,EAAiBC,GAChB,EAAKsS,WAAWvS,GACXA,GACCC,EAAIF,QACN,EAAKmD,MAAMqR,eAAe,CACxB9E,MAAOxP,EACPuU,MAAOC,IAAgBC,aAnNR,EA4N7BknB,gBAAkB,SAACC,GACjB,OAAKxa,YAAiBwa,EAAW,IA7NN,EAmO7BtC,eAAiB,SAACrnB,GAChB,EAAKmpB,kBAAiB,GACtB,EAAKn4B,MAAM6X,YACT,EAAK7X,MAAM2L,KAAKsJ,KAAKhW,QACrB+P,GACA,SAAClS,EAAiBC,GAChB,EAAK2hB,kBAAkB5hB,IACtBA,GAAU,EAAKq7B,kBAAiB,IAClB,IAAXr7B,GAAoBC,EAAIF,QAC1B,EAAKmD,MAAMqR,eAAe,CACxB9E,MAAOxP,EACPuU,MAAOC,IAAgBC,aA3O/B,EAAK/F,MAAQ,CACX3H,SAAS,EACT8xB,gBAAgB,EAChBG,WAAY,KACZF,eAAe,EACfqC,WAAW,EACXK,QAAS,KACTF,WAAW,EAGXpZ,WAAW,EACXgB,gBAAgB,EAChBJ,YAAY,EACZrB,cAAe,GACf9O,UAAW,MAjBc,E,0CAqP7B,WAAU,IAAD,OACP,OAAwC,OAApChE,KAAK1L,MAAMi2B,qBAEX,qBAAKxzB,UAAU,kEAAf,6BAM2C,IAA3CiJ,KAAK1L,MAAMi2B,qBAAqBp5B,OAEhC,sBAAK4F,UAAU,oHAAf,UACE,cAAC,IAAD,CAAeA,UAAU,yBACzB,sBAAKA,UAAU,4BAAf,UACE,sBAAMA,UAAU,sCAAhB,+BAGA,sBAAMA,UAAU,UAAhB,mGAS6B,OAAjCiJ,KAAK1L,MAAM+R,SAAS9E,SAEpB,qBAAKxK,UAAU,kEAAf,6BAOF,iCAEIiJ,KAAKD,MAAMysB,WACX,eAAC/rB,EAAA,EAAD,WACE,yBACE1J,UAAU,oIACVgC,QAAS,WACP,EAAK2zB,cAAa,IAGpBv0B,SACE6H,KAAKD,MAAMysB,WACXxsB,KAAKD,MAAM3H,SACX4H,KAAKD,MAAMwU,eATf,UAYE,cAAC,IAAD,CAAOxd,UAAU,wCACjB,+CAIF,cAAC,EAAD,CAAc+yB,cAAe9pB,KAAKD,MAAMwU,qBAS1CvU,KAAKD,MAAMysB,WACX,cAACxC,EAAA,EAAD,CACEI,YAAW,UACiC,QAA1CpqB,KAAK1L,MAAM+R,SAAS0jB,kBAChB,MACA/pB,KAAK1L,MAAM+R,SAAS0jB,oBACpBjlB,IAAcI,oBACd,YACAlF,KAAK1L,MAAM+R,SAAS0jB,oBACpBjlB,IAAcvF,YACd,eACAS,KAAK1L,MAAM+R,SAAS0jB,oBACpBjlB,IAAcQ,YACd,OACAtF,KAAK1L,MAAM+R,SAAS0jB,oBACpBjlB,IAAcS,kBACd,oBACAvF,KAAK1L,MAAM+R,SAAS0jB,oBACpBjlB,IAAcK,mBACd,aACA,GAlBK,aAoBX/M,QAAS4H,KAAKD,MAAM3H,QACpB8xB,eAAgBlqB,KAAKD,MAAMmqB,eAC3BG,WAAYrqB,KAAKD,MAAMsqB,WACvBI,cAAezqB,KAAKyqB,cACpBC,kBAAmB1qB,KAAK0qB,kBACxBH,qBAAsBvqB,KAAK1L,MAAMi2B,qBACjCI,eAAgB3qB,KAAK2qB,eACrBR,cAAenqB,KAAKD,MAAMoqB,iBAO5BnqB,KAAKD,MAAMysB,WACX,yBAASz1B,UAAU,sBAAnB,SACE,wBAAOA,UAAU,gBAAgBhH,GAAG,iBAApC,UACE,uBAAOgH,UAAU,sEAAjB,SACE,+BACE,oBAAIA,UAAU,YAAd,eACA,oBAAIA,UAAU,YAAd,yBAC2C,QAA1CiJ,KAAK1L,MAAM+R,SAAS0jB,mBACnB,oBAAIhzB,UAAU,YAAd,wBAEF,oBAAIA,UAAU,YAAd,0BACA,oBAAIA,UAAU,mBAGlB,gCACGqyB,YACCppB,KAAK1L,MAAM+R,SAAS9E,SACpBvB,KAAK1L,MAAM+R,SAAS0jB,mBACpB54B,QAAU,EACV,oBACE4F,UAAU,iEADZ,SAIE,oBAAIA,UAAU,YAAYsW,QAAS,EAAnC,SACE,cAAC0d,EAAA,EAAD,CACEnlB,MAAOmQ,IAAemX,MACtBh1B,MAAO,uBALP,WAUNkxB,YACEppB,KAAK1L,MAAM+R,SAAS9E,SACpBvB,KAAK1L,MAAM+R,SAAS0jB,mBACpBnzB,KAAI,SAACmd,EAAOpb,GAAR,OACJ,qBACE5B,UAAU,iEAEVgC,QAAS,WACP,EAAKwzB,cAAa,GAClB,EAAKK,WAAW7Y,EAAMrS,MAL1B,UAQE,oBAAI3K,UAAU,8BAAd,SACG4B,EAAQ,IAEX,oBAAI5B,UAAU,8BAAd,SACGgd,EAAMlT,QAEkC,QAA1C,EAAKvM,MAAM+R,SAAS0jB,mBACnB,oBAAIhzB,UAAU,8BAAd,SACG20B,EAAe3X,GACZ3I,YAAsBsgB,EAAe3X,IACrC,MAGR,oBAAIhd,UAAU,8BAAd,SACE,sBACEA,UAAS,iFACP+0B,EAAiB/X,GAAOgY,SAF5B,SAKGD,EAAiB/X,GAAO3iB,WAG7B,oBAAI2F,UAAU,0CAAd,SACE,wBAAQA,UAAU,qDAAlB,sBA7BG4B,EAAQob,EAAMrS,eA2ChC1B,KAAKD,MAAMysB,WACVxsB,KAAK1L,MAAM+R,SAAS9E,UACpBvB,KAAKD,MAAM8sB,SACXb,EAAahsB,KAAK1L,MAAM+R,SAAS9E,SAAUvB,KAAKD,MAAM8sB,UACpD,0BAAS91B,UAAU,2BAAnB,UAEE,0BAASA,UAAU,wCAAnB,UACE,wBACEA,UAAS,sFACPiJ,KAAKD,MAAMwU,eACP,qBACA,iBAHG,sCAKTpc,SAAU6H,KAAKD,MAAMwU,eACrBxb,QAAS,WACP,EAAKwzB,cAAa,GAClB,EAAKjZ,cAAa,GAClB,EAAKN,mBAAkB,GACvB,EAAKjP,aAAa,MAClB,EAAKoP,eAAc,GACnB,EAAKD,iBAAiB,KAb1B,SAgBE,cAAC,IAAD,CAAanc,UAAU,cAExBiJ,KAAKgtB,gBACJhB,EACEhsB,KAAK1L,MAAM+R,SAAS9E,SACpBvB,KAAKD,MAAM8sB,WAGb,wBACE91B,UAAS,iFACPiJ,KAAKD,MAAMwU,eACP,qBACA,iBAHG,6CAKTpc,SAAU6H,KAAKD,MAAMwU,eANvB,SAWE,cAAC,IAAD,CAAUxd,UAAU,iBAK1B,0BAASA,UAAU,OAAnB,UAEGi1B,EAAahsB,KAAK1L,MAAM+R,SAAS9E,SAAUvB,KAAKD,MAAM8sB,SACpD7nB,WAAaF,IAAcI,qBAC9BlF,KAAK1L,MAAM+R,SAASiB,oBACpBd,EACExG,KAAK1L,MAAM+R,SAASiB,mBACpB0kB,EACEhsB,KAAK1L,MAAM+R,SAAS9E,SACpBvB,KAAKD,MAAM8sB,SACVppB,gBAEH,cAAC,IAAD,CACEqI,QACEtF,EACExG,KAAK1L,MAAM+R,SAASiB,mBACpB0kB,EACEhsB,KAAK1L,MAAM+R,SAAS9E,SACpBvB,KAAKD,MAAM8sB,SACVppB,gBAGPxB,mBAAoBjC,KAAK1L,MAAM8R,gBAC/ByD,UACEmiB,EACEhsB,KAAK1L,MAAM+R,SAAS9E,SACpBvB,KAAKD,MAAM8sB,SAGftZ,UAAWvT,KAAKD,MAAMwT,UACtBD,aAActT,KAAKsT,aACnBiB,eAAgBvU,KAAKD,MAAMwU,eAC3BvB,kBAAmBhT,KAAKgT,kBACxBmB,WAAYnU,KAAKD,MAAMoU,WACvBhB,cAAenT,KAAKmT,cACpBL,cAAe9S,KAAKD,MAAM+S,cAC1BI,iBAAkBlT,KAAKkT,iBACvBlP,UAAWhE,KAAKD,MAAMiE,UACtBD,aAAc/D,KAAK+D,aACnBuC,aAActG,KAAK1L,MAAM+R,SAASC,eAGpC0lB,EACEhsB,KAAK1L,MAAM+R,SAAS9E,SACpBvB,KAAKD,MAAM8sB,SACV7nB,WAAaF,IAAcI,qBAC5B,cAAC6lB,EAAA,EAAD,CACEnlB,MAAOmQ,IAAeC,KACtB9d,MAAO,uBASZ8zB,EAAahsB,KAAK1L,MAAM+R,SAAS9E,SAAUvB,KAAKD,MAAM8sB,SACpD7nB,WAAaF,IAAcvF,aAC9BS,KAAK1L,MAAM+R,SAASqB,uBACpBf,GACE3G,KAAK1L,MAAM+R,SAASqB,sBACpBskB,EACEhsB,KAAK1L,MAAM+R,SAAS9E,SACpBvB,KAAKD,MAAM8sB,SACVppB,gBAEH,cAAC0pB,EAAD,CACEnhB,gBACErF,GACE3G,KAAK1L,MAAM+R,SAASqB,sBACpBskB,EACEhsB,KAAK1L,MAAM+R,SAAS9E,SACpBvB,KAAKD,MAAM8sB,SACVppB,gBAGPxB,mBAAoBjC,KAAK1L,MAAM8R,gBAC/ByD,UACEmiB,EACEhsB,KAAK1L,MAAM+R,SAAS9E,SACpBvB,KAAKD,MAAM8sB,SAGf/B,aAAc9qB,KAAKD,MAAMwT,UACzBsX,gBAAiB7qB,KAAKsT,aACtBiB,eAAgBvU,KAAKD,MAAMwU,eAC3BvB,kBAAmBhT,KAAKgT,kBACxBmB,WAAYnU,KAAKD,MAAMoU,WACvBhB,cAAenT,KAAKmT,cACpBL,cAAe9S,KAAKD,MAAM+S,cAC1BI,iBAAkBlT,KAAKkT,iBACvBlP,UAAWhE,KAAKD,MAAMiE,UACtBD,aAAc/D,KAAK+D,aACnBuC,aAActG,KAAK1L,MAAM+R,SAASC,eAGpC0lB,EACEhsB,KAAK1L,MAAM+R,SAAS9E,SACpBvB,KAAKD,MAAM8sB,SACV7nB,WAAaF,IAAcvF,aAC5B,cAACwrB,EAAA,EAAD,CACEnlB,MAAOmQ,IAAeC,KACtB9d,MAAO,0BAOZ8zB,EAAahsB,KAAK1L,MAAM+R,SAAS9E,SAAUvB,KAAKD,MAAM8sB,SACpD7nB,WAAaF,IAAcQ,aAC9BtF,KAAK1L,MAAM+R,SAAS+B,UACpBpI,KAAK1L,MAAMhE,SACX+X,YACErI,KAAK1L,MAAM+R,SAAS+B,SACpB4jB,EACEhsB,KAAK1L,MAAM+R,SAAS9E,SACpBvB,KAAKD,MAAM8sB,SACVppB,iBAEL6E,YACEtI,KAAK1L,MAAMhE,QACX+X,YACErI,KAAK1L,MAAM+R,SAAS+B,SACpB4jB,EACEhsB,KAAK1L,MAAM+R,SAAS9E,SACpBvB,KAAKD,MAAM8sB,SACVppB,gBACFhT,QAEH,cAAC28B,EAAD,CACEpC,SACE1iB,YACEtI,KAAK1L,MAAMhE,QACX+X,YACErI,KAAK1L,MAAM+R,SAAS+B,SACpB4jB,EACEhsB,KAAK1L,MAAM+R,SAAS9E,SACpBvB,KAAKD,MAAM8sB,SACVppB,gBACFhT,QAGPoZ,UACEmiB,EACEhsB,KAAK1L,MAAM+R,SAAS9E,SACpBvB,KAAKD,MAAM8sB,SAGf/B,aAAc9qB,KAAKD,MAAMwT,UACzBsX,gBAAiB7qB,KAAKsT,aACtBiB,eAAgBvU,KAAKD,MAAMwU,eAC3BvB,kBAAmBhT,KAAKgT,kBACxBmB,WAAYnU,KAAKD,MAAMoU,WACvBhB,cAAenT,KAAKmT,cACpBL,cAAe9S,KAAKD,MAAM+S,cAC1BI,iBAAkBlT,KAAKkT,iBACvBlP,UAAWhE,KAAKD,MAAMiE,UACtBD,aAAc/D,KAAK+D,aACnBknB,cACE5iB,YACErI,KAAK1L,MAAM+R,SAAS+B,SACpB4jB,EACEhsB,KAAK1L,MAAM+R,SAAS9E,SACpBvB,KAAKD,MAAM8sB,SACVppB,gBAGP6C,aAActG,KAAK1L,MAAM+R,SAASC,eAGpC0lB,EACEhsB,KAAK1L,MAAM+R,SAAS9E,SACpBvB,KAAKD,MAAM8sB,SACV7nB,WAAaF,IAAcQ,aAC5B,cAACylB,EAAA,EAAD,CACEnlB,MAAOmQ,IAAeC,KACtB9d,MAAO,mBAQZ8zB,EAAahsB,KAAK1L,MAAM+R,SAAS9E,SAAUvB,KAAKD,MAAM8sB,SACpD7nB,WAAaF,IAAcK,oBAC9BnF,KAAK1L,MAAM+R,SAAShF,YAClB,cAAC,EAAD,CACEwI,UACEmiB,EACEhsB,KAAK1L,MAAM+R,SAAS9E,SACpBvB,KAAKD,MAAM8sB,SAGftY,eAAgBvU,KAAKD,MAAMwU,eAC3BvB,kBAAmBhT,KAAKgT,kBACxBmB,WAAYnU,KAAKD,MAAMoU,WACvBhB,cAAenT,KAAKmT,cACpBL,cAAe9S,KAAKD,MAAM+S,cAC1BI,iBAAkBlT,KAAKkT,iBACvBlP,UAAWhE,KAAKD,MAAMiE,UACtBD,aAAc/D,KAAK+D,aACnB1C,YAAarB,KAAK1L,MAAM+R,SAAShF,cAGnC2qB,EACEhsB,KAAK1L,MAAM+R,SAAS9E,SACpBvB,KAAKD,MAAM8sB,SACV7nB,WAAaF,IAAcK,oBAC5B,cAAC4lB,EAAA,EAAD,CACEnlB,MAAOmQ,IAAeC,KACtB9d,MAAO,8BAYpB8H,KAAKD,MAAM4sB,WACV,cAACjpB,EAAA,EAAD,CACEyG,UAAWnK,KAAKD,MAAM4sB,UACtB3mB,aAAchG,KAAK0sB,sB,GA9rBXlsB,aA4tBP6sB,GAAiB3sB,aAtBN,SAAC,GAYnB,IAXJT,EAWG,EAXHA,KACAqtB,EAUG,EAVHA,YACAjnB,EASG,EATHA,SACAlQ,EAQG,EARHA,SACA1F,EAOG,EAPHA,OAQA,MAAO,CACLwP,KAAMA,EACNoG,WACAkkB,qBAAsB+C,EAAYC,gBAClCnnB,gBAAiBjQ,EACjB7F,QAASG,EAAOH,WAImC,CACrD6b,gBACA5Q,uBACAgL,oBACAwD,iBACAE,mBACAvE,iBACA3I,wBACAU,2BACAU,sBACAwH,qBAV4BjF,CAW3B4rB,K,6VKv6BUkB,EAAkB,SAC7B79B,GAEA,IAAI+E,EAAiC,MACrC,OAAQ/E,GACN,KAAKmV,IAAcvF,YACjB7K,EAASk2B,iBAAetF,YACxB,MACF,KAAKxgB,IAAcI,oBACjBxQ,EAASk2B,iBAAez0B,SACxB,MACF,KAAK2O,IAAcQ,YACjB5Q,EAASk2B,iBAAee,KACxB,MACF,KAAK7mB,IAAcS,kBACjB7Q,EAASk2B,iBAAegB,kBACxB,MACF,KAAK9mB,IAAcK,mBACjBzQ,EAASk2B,iBAAeiB,UACxB,MACF,QACEn3B,EAAS,MAIb,OAAOA,GAyCH+4B,EAAsD,CAC1D,CACEt9B,IAAKu9B,IAA+B5N,MACpCjf,MAAO,kBACPzP,QAAQ,GAEV,CACEjB,IAAKu9B,IAA+BC,YACpC9sB,MAAO,cACPzP,QAAQ,GAEV,CAAEjB,IAAKu9B,IAA+BE,OAAQ/sB,MAAO,SAAUzP,QAAQ,GACvE,CAAEjB,IAAKu9B,IAA+BG,MAAOhtB,MAAO,QAASzP,QAAQ,GACrE,CACEjB,IAAKu9B,IAA+BI,cACpCjtB,MAAO,gBACPzP,QAAQ,GAEV,CACEjB,IAAKu9B,IAA+BK,mBACpCltB,MAAO,sBACPzP,QAAQ,GAEV,CACEjB,IAAKu9B,IAA+BvU,KACpCtY,MAAO,aACPzP,QAAQ,GAEV,CACEjB,IAAKu9B,IAA+BM,SACpCntB,MAAO,WACPzP,QAAQ,GAEV,CACEjB,IAAKu9B,IAA+BO,YACpCptB,MAAO,cACPzP,QAAQ,GAEV,CACEjB,IAAKu9B,IAA+BQ,WACpCrtB,MAAO,aACPzP,QAAQ,GAEV,CACEjB,IAAKu9B,IAA+Bxb,YACpCrR,MAAO,cACPzP,QAAQ,IAomCC+8B,EAAiBztB,aAtBN,SAAC,GAYnB,IAXJT,EAWG,EAXHA,KACAqtB,EAUG,EAVHA,YACAjnB,EASG,EATHA,SACAlQ,EAQG,EARHA,SACAi4B,EAOG,EAPHA,aAQA,MAAO,CACLnuB,KAAMA,EACNsqB,qBAAsB+C,EAAYC,gBAClClnB,WACAD,gBAAiBjQ,EACjBi4B,kBAImD,CACrD7E,iBACAnd,qBACAiiB,uBACA9yB,uBACA+yB,6BACAhF,yBACA3jB,qBAP4BjF,EAzkCc,SAACpM,GAC3C,MAAoCW,mBAClC,MADF,mBAAOo1B,EAAP,KAAmBI,EAAnB,KAGA,EAAkCx1B,mBAAyB,OAA3D,mBAAOs5B,EAAP,KAAkBC,EAAlB,KACA,EAA8Bv5B,oBAAkB,GAAhD,mBAAOmD,EAAP,KAAgBuL,EAAhB,KACA,EAA4C1O,oBAAkB,GAA9D,mBAAOi1B,EAAP,KAAuBQ,EAAvB,KACA,EAA0Cz1B,oBAAkB,GAA5D,mBAAOk1B,EAAP,KAAsBsC,EAAtB,KACA,EAA0Cx3B,oBAAkB,GAA5D,mBAAO60B,EAAP,KAAsB2E,EAAtB,KACA,EAAkDx5B,oBAAkB,GAApE,mBAAOy5B,EAAP,KAA0BC,EAA1B,KACA,EAAsC15B,oBAAkB,GAAxD,mBAAO25B,GAAP,KAAoBC,GAApB,KACA,GAAwC55B,qBAAxC,qBAAO65B,GAAP,MAAqBC,GAArB,MAIA,GAAwC95B,mBAAiB,IAAzD,qBAAO+5B,GAAP,MAAqBC,GAArB,MACA,GAAgCh6B,oBAAkB,GAAlD,qBAAOi6B,GAAP,MAAiBC,GAAjB,MACA,GAAkCl6B,mBAAyB,OAA3D,qBAAOm6B,GAAP,MAAkBC,GAAlB,MACA,GAAsCp6B,mBAAiB,IAAvD,qBAAOkM,GAAP,MAAoBC,GAApB,MACA,GAAsDnM,mBAG5C,MAHV,qBAAOq6B,GAAP,MAA4BC,GAA5B,MAIA,GAAsCt6B,mBAAiB,IAAvD,qBAAOu6B,GAAP,MAAoBC,GAApB,MACA,GACEx6B,mBAAwCw4B,GAD1C,qBAAOiC,GAAP,MAAsBC,GAAtB,MAEA,GAAkC16B,oBAAkB,GAApD,qBAAO26B,GAAP,MAAkBC,GAAlB,MACA,GAAkC56B,mBAGxB,MAHV,qBAAO+O,GAAP,MAAkBD,GAAlB,MAIA,GAAwC9O,oBAAkB,GAA1D,qBAAOu1B,GAAP,MAAqBsF,GAArB,MACA,GAA0C76B,mBAExC,OAFF,qBAAO86B,GAAP,MAAsBC,GAAtB,MAkKA,GA9JAh6B,qBAAU,WA6CR,GA1C8C,OAA5C1B,EAAM85B,aAAa6B,sBACgC,IAAnD37B,EAAM85B,aAAa6B,qBAAqB9+B,OAExCmD,EAAMg6B,wBAAwBK,GAE9BA,GAAqB,GAIW,OAA9Br6B,EAAM+R,SAASqjB,YACjBp1B,EAAM8X,kBAAiB,SAAChb,EAAiBC,IACxB,IAAXD,GACEC,EAAIF,OAAS,GACfmD,EAAMqR,eAAe,CACnB9E,MAAOxP,EACPuU,MAAOC,IAAgBC,YAQE,OAA/BxR,EAAMi2B,qBACRj2B,EAAMiH,oBAAmB,SAACnK,EAAiBC,GACpCD,IACHs5B,GAAkB,GAClB/mB,GAAW,GACPtS,EAAIF,QACNmD,EAAMqR,eAAe,CACnB9E,MAAOxP,EACPuU,MAAOC,IAAgBC,aAKtBokB,IACTvmB,GAAW,GACX+mB,GAAkB,IAKH,OAAfL,IACCH,GACD51B,EAAMi2B,sBACNj2B,EAAMi2B,qBAAqBp5B,OAAS,EACpC,CACA,IAAI0T,EAAcvQ,EAAMi2B,qBAAqB16B,MAC3C,SAAC2T,GAAD,OAA6B,IAAnBA,EAAKlI,aAEjBmvB,EAAc5lB,GAA4BvQ,EAAMi2B,qBAAqB,IA0CtC,OAA7Bj2B,EAAM+R,SAASujB,WAAqC,OAAfS,EACvC/1B,EAAMi1B,aACJ,EACAc,EAAWz2B,iBACX,SAACxC,EAAiBC,IACfD,GAAUq9B,EAAiBr9B,IACb,IAAXA,GAAoBC,EAAIF,QAC1BmD,EAAMqR,eAAe,CACnB9E,MAAOxP,EACPuU,MAAOC,IAAgBC,YAKtBukB,GAAcP,GACvB2E,GAAiB,KA6ClB,CAAC3E,EAAeI,EAAgB51B,EAAO+1B,KAE1B,IAAZjyB,EACF,OACE,qBAAKrB,UAAU,kEAAf,6BAMJ,GAAIzC,EAAMi2B,sBAA8D,IAAtCj2B,EAAMi2B,qBAAqBp5B,OAC3D,OAAO,cAAC,IAAD,IA4FT,IArZAkuB,GACAlQ,GA+aM+gB,GAAU,SAACC,GAEbd,GADEL,KAAiBmB,GAA8B,QAAdf,GACtB,OAEA,OAEfH,GAAgBkB,GAChBhB,IAAY,IAyERiB,GAAqB,WAEzB,GAAI/F,EAAY,CACd,IAAIxpB,EAAQ,gBAAkBwpB,EAAW5P,kBAIzCgV,GAAe5uB,GAGjB,GAAIvM,EAAM+R,SAASujB,WAAat1B,EAAM+R,SAASqjB,WAAY,CACzD,IAAI2G,EAAoC,GACpCC,EAAY,EAChB,IAAK,IAAMngC,KAAOmE,EAAM+R,SAASujB,UAC/B,GACE1e,OAAOqW,UAAUC,eAAeC,KAAKntB,EAAM+R,SAASujB,UAAWz5B,GAE/D,IAAK,IAAMogC,KAAYj8B,EAAM+R,SAASujB,UAAUz5B,GAAKiiB,OACnD,GACElH,OAAOqW,UAAUC,eAAeC,KAC9BntB,EAAM+R,SAASujB,UAAUz5B,GAAKiiB,OAC9Bme,GAEF,CACA,IAAMngC,EAAUkE,EAAM+R,SAASujB,UAAUz5B,GAAKiiB,OAAOme,GAC/Ct1B,EAAWywB,yBAAep3B,EAAM+R,SAASujB,UAAUz5B,IACrDqgC,EAAmC,CACrCvE,SAAUqE,EACVxQ,MACExrB,EAAM+R,SAASujB,UAAUz5B,GAAK+6B,YAAY/hB,UAAUC,MACpD,IACA9U,EAAM+R,SAASujB,UAAUz5B,GAAK+6B,YAAY/hB,UAAUE,MACtDukB,OAAQt5B,EAAM+R,SAASujB,UAAUz5B,GAAK+6B,YAAY/hB,UAAUgd,IACxD,OACA,SACJwH,YAAar5B,EAAM+R,SAASujB,UAAUz5B,GAAK+6B,YAAYuF,KACvD5C,MAAOv5B,EAAM+R,SAASujB,UAAUz5B,GAAK+6B,YAAYnL,aACjD7W,MAAO5U,EAAM+R,SAASujB,UAAUz5B,GAAK+6B,YAAYhiB,MACjDglB,WAAYjzB,GAAsB,GAClCiX,YAAa9hB,EAAQiiB,MACrB0b,mBAAoB,GACpBD,cAAezD,EAAaA,EAAW5P,kBAAoB,GAC3DtB,KAAM1H,YAAKrhB,EAAQ6jB,WACnB+Z,SAAU59B,EAAQkiB,sBACdliB,EAAQkiB,sBACR,UACJ2b,YAAa35B,EAAM+R,SAASujB,UAAUz5B,GAAK0Q,OAE7C,IAAK,IAAM1Q,KAAOu/B,GACZxkB,OAAOqW,UAAUC,eAAeC,KAAKiO,GAAev/B,KACjDu/B,GAAcv/B,GAAKiB,eACfo/B,EAAUd,GAAcv/B,GAAKA,MAI1CkgC,EAASlxB,KAAKqxB,GACdF,IAKRvB,GAAgBsB,GAChBA,EAAW,GACXC,EAAI,IAIFI,GAAe,SACnB9G,GAEA,GAAkB,OAAdA,EAAoB,OAAO,KAC/B,IAAIyG,EAAoC,GACpCC,EAAY,EAEhB,IAAK,IAAMngC,KAAOy5B,EAChB,GAAI1e,OAAOqW,UAAUC,eAAeC,KAAKmI,EAAWz5B,GAElD,IAAK,IAAMogC,KAAY3G,EAAUz5B,GAAKiiB,OACpC,GACElH,OAAOqW,UAAUC,eAAeC,KAC9BmI,EAAUz5B,GAAKiiB,OACfme,GAEF,CACA,IAAMngC,EAAUw5B,EAAUz5B,GAAKiiB,OAAOme,GAChCt1B,EAAWywB,yBAAe9B,EAAUz5B,IACtCqgC,EAAmC,CACrCvE,SAAUqE,EACVxQ,MACE8J,EAAUz5B,GAAK+6B,YAAY/hB,UAAUC,MACrC,IACAwgB,EAAUz5B,GAAK+6B,YAAY/hB,UAAUE,MACvCukB,OAAQhE,EAAUz5B,GAAK+6B,YAAY/hB,UAAUgd,IACzC,OACA,SACJwH,YAAa/D,EAAUz5B,GAAK+6B,YAAYuF,KACxC5C,MAAOjE,EAAUz5B,GAAK+6B,YAAYnL,aAClC7W,MAAO0gB,EAAUz5B,GAAK+6B,YAAYhiB,MAClCglB,WAAYjzB,GAAsB,GAClCiX,YAAa9hB,EAAQiiB,MACrB0b,mBACEnE,EAAUz5B,GAAK8Y,eACdjB,YAAgB4hB,EAAUz5B,GAAK8Y,cAC5B2gB,EAAUz5B,GAAK8Y,aACf,KACN6kB,cAAezD,EAAaA,EAAW5P,kBAAoB,GAC3DtB,KAAM1H,YAAKrhB,EAAQ6jB,WACnB+Z,SAAU59B,EAAQkiB,sBACdliB,EAAQkiB,sBACR,UACJ2b,YAAarE,EAAUz5B,GAAK0Q,MACxB+oB,EAAUz5B,GAAK0Q,MACf,aASNwvB,EAASlxB,KAAKqxB,GACdF,IAKR,OAAOD,GAgBHM,GAAkB,SAACxgC,GACvB,OACEA,IAAQu9B,IAA+B5N,OACvC3vB,IAAQu9B,IAA+BM,UACvC79B,IAAQu9B,IAA+BI,eACvC39B,IAAQu9B,IAA+BQ,YACvC/9B,IAAQu9B,IAA+BvU,MAsCrCyX,GAAkB,SACtBhH,EACAvkB,EACAwrB,EACA5gB,GAEA,IAAIvb,EAAkCk1B,EAgBtC,MAfkB,QAAdvkB,IACF3Q,EAASA,EAAOnD,QAAO,SAACiS,GAAD,OAAUA,EAAK0qB,aAAe7oB,MAEpC,QAAfwrB,IACFn8B,EAASA,EAAOnD,QAAO,SAACiS,GAAD,OAAUA,EAAK0O,cAAgB2e,MAGtC,QAAd5gB,IACFvb,EAASA,EAAOnD,QACd,SAACiS,GAAD,OAC8B,OAA5BA,EAAKuqB,oBACLvqB,EAAKuqB,qBAAuB9d,EAAUxH,2BAIrC/T,GAGT,OACE,eAAC,WAAD,WACE,eAAC,IAAD,WACE,sBAAKqC,UAAU,qBAAf,UACE,sBAAMA,UAAU,6BAAhB,mCAG6C,OAA5CzC,EAAM85B,aAAa6B,sBACpBvB,EACE,cAAC,IAAD,IACqD,IAAnDp6B,EAAM85B,aAAa6B,qBAAqB9+B,OAC1C,mDAEA,eAAC,WAAD,WACE,sBACE4H,QAAS,kBAAMi3B,GAAiB,QAChCj5B,UAAS,uDACW,QAAlBg5B,GACI,qFACA,8DAHG,+CAFX,UAQqB,QAAlBA,GACC,cAAC,KAAD,IAEA,cAAC,KAAD,IAEF,0CAEDz7B,EAAM85B,aAAa6B,qBAAqBr5B,KAAI,SAAC4M,EAAM/R,GAAP,OAC3C,sBACEsH,QAAS,kBAAMi3B,GAAiBxsB,IAEhCzM,UAAS,uDACW,QAAlBg5B,IACAA,GAActnB,yBACZjF,EAAKiF,uBACH,qFACA,8DALG,+CAHX,UAWqB,QAAlBsnB,IACDA,GAActnB,yBACZjF,EAAKiF,uBACL,cAAC,KAAD,IAEA,cAAC,KAAD,IAEF,+BAAOjF,EAAKqS,6BAhBPpkB,EAAI,YAsBnB,sBAAKsF,UAAU,GAAf,UACE,qBAAKA,UAAU,6BAAf,8BACA,sBACEgC,QAAS,kBAAM+2B,IAAgB,IAC/B/4B,UAAU,gMAFZ,UAIkB,OAAfszB,EAAA,UACMA,EAAW5P,kBADjB,cACwC4P,EAAW5Z,QAChD,mBACJ,cAAC,IAAD,CAAQ1Z,UAAU,iCAGtB,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,kCAAf,0BAC+B,OAA9BzC,EAAM+R,SAASqjB,YAC2B,OAA3CgH,GAAap8B,EAAM+R,SAASujB,WAC1B,cAAC,IAAD,IAhWS,SACjBxX,GAMA,IAAI0e,EAIE,CAAC,CAAEjwB,MAAO,YAAaI,MAAOmR,EAAOjhB,OAAQxB,KAAM,QAiBzD,OAfAub,OAAOC,OAAOrG,KAAe7F,SAAQ,SAAC8xB,GAChCA,IAAajsB,IAAcS,mBAC7BurB,EAAO3xB,KAAK,CACV0B,MAAOuK,YAAsBoiB,EAAgBuD,IAC7C9vB,MACEmR,EAAOjhB,OAAS,EACZihB,EAAO7gB,QACL,SAACzB,GAAD,OAASA,EAAIo+B,aAAeV,EAAgBuD,MAC5C5/B,OACF,EACNxB,KAAMohC,OAKLD,EAsUCE,CAAWN,GAAap8B,EAAM+R,SAASujB,YAAahzB,KAClD,SAAC4M,EAAM7K,GAAP,OACE,qBACEI,QAAS,kBACPzE,EAAMg1B,qBAAqBkE,EAAgBhqB,EAAK7T,QAFpD,SAME,cAAC,IAAD,CACEkR,MAAO2C,EAAK3C,MACZI,MAAOuC,EAAKvC,MACZD,QApYhBiwB,EAqYkB38B,EAAM+R,SAAS0jB,kBApYjCmH,EAqYkB1tB,EAAK7T,KAnYH,QAAhBuhC,GAA0C,QAAjBD,GAEF,QAAhBC,GAA0C,QAAjBD,GAC9BC,IAAgBD,MAyXHztB,EAAK3C,MAAQlI,GAhYR,IACxBs4B,EACAC,QA6YI,sBAAKn6B,UAAU,OAAf,UACE,qBAAKA,UAAU,kCAAf,0BAC+B,OAA9BzC,EAAM+R,SAASqjB,YAC2B,OAA3CgH,GAAap8B,EAAM+R,SAASujB,WAC1B,cAAC,IAAD,IA5VU,SAClBxX,GAMA,IAAI0e,EAII,CAAC,CAAEjwB,MAAO,aAAcI,MAAOmR,EAAOjhB,OAAQkhB,MAAO,QAC3D8e,EAAmB,CAAC,EAAG,GANpB,WAOI1/B,GACPq/B,EAAO3xB,KAAK,CACV0B,MAAO,SAAWswB,EAAO1/B,GACzBwP,MAAOmR,EAAO7gB,QAAO,SAACzB,GAAD,OAASA,EAAIoiB,cAAgBif,EAAO1/B,MAAIN,OAC7DkhB,MAAO8e,EAAO1/B,MAJlB,IAAK,IAAIA,KAAK0/B,EAAS,EAAd1/B,GAOT,OAAOq/B,EA0UCM,CAAYV,GAAap8B,EAAM+R,SAASujB,YAAahzB,KACnD,SAAC4M,EAAM7K,GAAP,OACE,qBACEI,QAAS,kBAAMy1B,EAAahrB,EAAK6O,QADnC,SAIE,cAAC,IAAD,CACExR,MAAO2C,EAAK3C,MACZI,MAAOuC,EAAKvC,MACZD,OAAQwC,EAAK6O,QAAUkc,KALpB/qB,EAAK3C,MAAQlI,YAa9B,oCAEE,sBAAK5B,UAAU,uBAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAU,gCAAf,SACE,sBAAMA,UAAU,mCAAhB,8BAKJ,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAU,mBAAf,SACGzC,EAAM+R,SAASujB,WAAat1B,EAAM+R,SAASujB,UAAUz4B,OAAS,GAC7D,sBAAK4F,UAAU,wDAAf,UACE,cAAC,IAAD,CAAUA,UAAU,2BACpB,sBAAMA,UAAU,gBAAhB,uBACA,wBACEA,UAAU,wGACVoB,SAAUC,EACVW,QAAS,WACPq3B,KACAb,GAAuB,CACrB8B,WAAY,QACZjgC,QAAQ,KAPd,mBAaA,wBACE2F,UAAS,gHACP63B,IAAe,eAEjB71B,QAAS,kBA7MJ,WACrB,GAAK5C,SAASm7B,iBAAiB,4BAA4BngC,QAQ3D,GAAIk5B,EAAY,CACd,IAAM91B,EACJ4B,SAASC,eAAe,kBACpBoZ,EAA0C,CAC9CgC,OAAQld,EAAM2L,KAAKsJ,KAAKH,MAAQ,IAAM9U,EAAM2L,KAAKsJ,KAAKF,MACtDxI,MAAO,eACPyP,aAAc,aACdF,QACuC,QAArC9b,EAAM+R,SAAS0jB,kBACX,YACAz1B,EAAM+R,SAAS0jB,kBACrBtZ,OAAQ4Z,EAAW5P,kBACnBzP,OAAQ,qBACRiF,UACoB,QAAlB8f,GACI,gBACAA,GAAcla,0BAEtBthB,GAASgb,YAAYC,EAAgBjb,EAAOs6B,UAzB5Cv6B,EAAMqR,eAAe,CACnB9E,MAAM,sCACN+E,MAAOC,IAAgBkN,UAyMIwe,IACfp5B,SAAUC,GAAWw2B,GALvB,2BAeV,sBAAK73B,UAAU,gBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,uBACEK,SAAU,SAACC,GAAD,OAAO+J,GAAe/J,EAAEY,OAAOC,QACzCvI,KAAK,OACLuI,MAAOiJ,GACPhK,YAAY,YACZJ,UAAU,6DACVoB,SAC+B,OAA7B7D,EAAM+R,SAASujB,WACe,OAA9Bt1B,EAAM+R,SAASqjB,YAC4B,OAA3CgH,GAAap8B,EAAM+R,SAASujB,YAC5BO,MAIN,wBAAOpzB,UAAU,gBAAgBhH,GAAG,iBAApC,UACE,uBAAOgH,UAAU,sEAAjB,SACE,+BACE,oBAAIA,UAAU,YAAd,eACA,oBACEA,UAAU,2BACVgC,QAAS,kBAAMm3B,GAAQ,UAFzB,SAIE,sBAAKn5B,UAAU,0BAAf,6BACkB,cAAC,IAAD,SAGpB,oBAAIA,UAAU,YAAd,yBACA,oBACEA,UAAU,2BACVgC,QAAS,kBAAMm3B,GAAQ,WAFzB,SAIE,sBAAKn5B,UAAU,0BAAf,oBACS,cAAC,IAAD,SAGX,oBAAIA,UAAU,YAAd,mBACA,oBACEA,UAAU,2BACVgC,QAAS,kBAAMm3B,GAAQ,gBAFzB,SAIE,sBAAKn5B,UAAU,0BAAf,yBACc,cAAC,IAAD,SAGhB,oBACEA,UAAU,2BACVgC,QAAS,kBAAMm3B,GAAQ,eAFzB,SAIE,sBAAKn5B,UAAU,0BAAf,wBACa,cAAC,IAAD,SAGf,oBACEA,UAAU,2BACVgC,QAAS,kBAAMm3B,GAAQ,gBAFzB,SAIE,sBAAKn5B,UAAU,0BAAf,yBACc,cAAC,IAAD,SAGhB,oBACEA,UAAU,2BACVgC,QAAS,kBAAMm3B,GAAQ,aAFzB,SAIE,sBAAKn5B,UAAU,0BAAf,oBACS,cAAC,IAAD,SAGX,oBACEA,UAAU,2BACVgC,QAAS,kBAAMm3B,GAAQ,SAFzB,SAIE,sBAAKn5B,UAAU,0BAAf,kBACO,cAAC,IAAD,cAKb,gCACgC,OAA7BzC,EAAM+R,SAASujB,WACc,OAA9Bt1B,EAAM+R,SAASqjB,YACfS,GAE+C,OAA3CuG,GAAap8B,EAAM+R,SAASujB,WAD9B,cAAC,IAAD,CAAclyB,KAAM,KAQP,IALXk5B,GACAF,GAAap8B,EAAM+R,SAASujB,WAC5Bt1B,EAAM+R,SAAS0jB,kBACfwE,EACAwB,IACA5+B,OACF,6BACE,oBAAIkc,QAAS,GAAItW,UAAU,YAA3B,SACE,sBAAKA,UAAU,oFAAf,UACE,cAAC,IAAD,CAAcA,UAAU,kEACxB,sBAAMA,UAAU,oBAAhB,yDAGA,qBAAKA,UAAU,wDAAf,SACE,qBAAIA,UAAU,2DAAd,UACE,oBACEgC,QAAS,kBAAM+2B,IAAgB,IAC/B/4B,UAAU,yCAFZ,8BAMA,oBAAIA,UAAU,uBAAd,gBACA,oBAAIA,UAAU,gBAAd,kCAGA,oBAAIA,UAAU,uBAAd,gBACA,oBAAIA,UAAU,gBAAd,+CASVy6B,YACEtC,IA/+BhB7P,GAi/BkBuR,GACEF,GAAap8B,EAAM+R,SAASujB,WAC5Bt1B,EAAM+R,SAAS0jB,kBACfwE,EACAwB,IAp/BpB5gB,GAs/BkBhO,QAp/BdnR,IAAcmf,IAAiB,KAATA,GAAoBkQ,GACvCA,GAAQ9tB,QAAO,SAAC+tB,GACrB,IAAIC,EAGJ,IAAK,IAAIC,KAAQF,EAuBf,GAtBAC,GAAO,EAEI,UAATC,GACS,WAATA,GACS,gBAATA,GACS,UAATA,GACS,UAATA,GACS,gBAATA,GACS,eAATA,GACS,gBAATA,GACS,uBAATA,GACS,kBAATA,GACS,SAATA,GACS,aAATA,GAEIF,EAAQE,KACVD,EACED,EAAQE,GAAOhtB,WACZmF,cACAI,QAAQoX,GAAKxX,gBAAkB,GAGpC4nB,EAAM,MAEZ,OAAOA,MAw9BOyP,GACAI,IACAx4B,KAAI,SAAC4M,EAAM/R,GAAP,OACJ,qBAEEsF,UAAS,UACPtF,EAAI,IAAM,EAAI,cAAgB,WADvB,+GAFX,UAME,oBAAIsF,UAAU,YAAd,SAA2BtF,EAAI,IAC/B,oBAAIsF,UAAU,YAAd,SAA2ByM,EAAKsc,QAChC,oBAAI/oB,UAAU,YAAd,SAA2ByM,EAAKmqB,cAChC,oBAAI52B,UAAU,YAAd,SAA2ByM,EAAKoqB,SAChC,oBAAI72B,UAAU,YAAd,SAA2ByM,EAAKqqB,QAChC,oBAAI92B,UAAU,YAAd,SAA2ByM,EAAKyqB,cAChC,oBAAIl3B,UAAU,YAAd,SAA2ByM,EAAK0qB,aAChC,oBAAIn3B,UAAU,YAAd,SAA2B,SAAWyM,EAAK0O,cAC3C,oBAAInb,UAAU,YAAd,SACGyM,EAAKwqB,WAGR,oBAAIj3B,UAAU,YAAd,SAA2ByM,EAAK2V,SAjB3B1nB,EAAI,iBA0BE,OAAxB69B,KAA+D,IAA/BA,GAAoBl+B,QACnD,cAAC,IAAD,CACEyP,MACE,qBAAK9J,UAAU,mCAAf,SAEE,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,mCAAhB,wCAGA,uBAAMA,UAAU,oCAAhB,wBACcu4B,GAAoB+B,WADlC,kBAMNhnB,UAAU,EACVzE,MAAO0E,IAAOC,QACdC,MAAO,kBAAM+kB,GAAuB,OACpC7kB,eAAe,EACfC,eAAgBC,IAAUE,OAC1BL,cAAc,EACd7R,QAAS,CAAEiI,OAAO,GApBpB,SAsBE,sBAAK9J,UAAU,OAAf,UACE,sBAAKA,UAAU,0CAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,0CACA,uBACEpH,KAAK,OACLoH,UAAS,kDACPiN,IAAmC,iBAAtBA,GAAU5T,QACnB,iBACA,kBAHG,aAKT+G,YAAY,qBACZe,MAAOs3B,GACPp4B,SAAU,SAACC,GACT0M,GAAa,MACb0rB,GAAep4B,EAAEY,OAAOC,QAE1BC,SAAUC,IAEX4L,IAAmC,iBAAtBA,GAAU5T,SACtB,sBAAM2G,UAAU,eAAhB,SAAgCiN,GAAU3S,SAG9C,sBAAK0F,UAAU,qBAAf,UACE,mDACA,qBAAKA,UAAU,0DAAf,SACG24B,GAAc94B,KAAI,SAAC4M,EAAM7K,GAAP,OACjB,sBAEE5B,UAAS,kCACP45B,GAAgBntB,EAAKrT,KACjB,iBACA,sBAEN4I,QAAS,kBACP43B,GAAgBntB,EAAKrT,MAjmBf,SAACA,GAC3B,IAAIwI,EAAgB+2B,GAAc+B,WAAU,SAACjuB,GAAD,OAAUA,EAAKrT,MAAQA,KAC/DuhC,EAA0ChC,GAC9CgC,EAAS/4B,GAAOvH,QAAUsgC,EAAS/4B,GAAOvH,OAC1Cu+B,GAAiB+B,GACjB,IAAIC,EAAoBD,EAAS7hC,MAAK,SAAC2T,GAAD,OAA0B,IAAhBA,EAAKpS,UAEnDy+B,IADE8B,GAOJvB,KAqlBoBwB,CAAoBpuB,EAAKrT,MAE3B0Q,MACG8vB,GAAgBntB,EAAKrT,KAElB,GADA,6BAbR,UAiBGqT,EAAKpS,OACJ,cAAC,IAAD,CAAY2F,UAAU,0BAEtB,cAAC,IAAD,CAAwBA,UAAU,YAEpC,+BAAOyM,EAAK3C,UArBPlI,QAyBVqL,IAAmC,mBAAtBA,GAAU5T,SACtB,sBAAM2G,UAAU,eAAhB,SAAgCiN,GAAU3S,YAIhD,sBAAK0F,UAAU,iCAAf,UACE,sBACEA,UAAS,yCACTgC,QAAS,kBAzeI,SAAC84B,GAC1B,IAAIH,EAA0ChC,GAC9C,IAAK,IAAMv/B,KAAOuhC,EACZf,GAAgBe,EAASvhC,GAAKA,OAChCuhC,EAASvhC,GAAKiB,QAAUygC,GAI5BlC,GAAiB+B,GACjB7B,IAAcgC,GACdzB,KA+d2B0B,CAAmBlC,KAFpC,UAIGA,GACC,cAAC,IAAD,CAAY74B,UAAU,0BAEtB,cAAC,IAAD,CAAwBA,UAAU,YAEpC,iDAGD+3B,KAAiB12B,GAChB,cAAC,IAAD,CACEwV,SAAUkhB,GACVjhB,SAAU2hB,GACV1hB,QAAQ,qBAQnB0c,IACC,cAAC,IAAD,CACE3pB,MACE,sBAAK9J,UAAU,mCAAf,UACE,cAAC,IAAD,CAAWA,UAAU,2BACrB,sBAAMA,UAAU,gBAAhB,gCAGJsT,UAAU,EACVzE,MAAO0E,IAAOC,QACdC,MAAO,kBAAqB,OAAf6f,GAAuByF,IAAgB,IACpDplB,eAAe,EACfC,eAAgBC,IAAUC,WAC1BJ,cAAc,EACd7R,QAAS,CAAEiI,OAAO,GAbpB,SAeE,cAAC,IAAD,CACEuZ,WAAY9lB,EAAMi2B,qBAClBhQ,iBAAkB,SAACriB,GA9vBN,IAACoL,EA+vBF,QAAVpL,GAAmBuyB,EAAcvyB,GACvB,QAAVA,IAhwBYoL,EAgwBsBpL,EAAMtE,gBA/vBlD64B,GAAiB,GACjBn4B,EAAMi1B,aAAa,EAAGjmB,GAAW,SAAClS,EAAiBC,IAChDD,GAAUq7B,GAAiB,IACb,IAAXr7B,GAAoBC,EAAIF,QAC1BmD,EAAMqR,eAAe,CACnB9E,MAAOxP,EACPuU,MAAOC,IAAgBC,aA0vBT,QAAV5N,GAAmB43B,IAAgB,IAErCzV,WAAW,EACXC,gBAAiB+P,GAA0B","file":"static/js/22.f4ceb9da.chunk.js","sourcesContent":["import { candidateExamStoreInterface } from \"../actions/candidate_exam\";\nimport {\n  applicationExamAPI,\n  ApplicationPeriodGet,\n} from \"../interfaces/application\";\nimport { ExamAnswerSheetDone } from \"../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../interfaces/position\";\nimport { questionType, questionTypeElements } from \"../interfaces/question\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"./app.config\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\nconst today = moment().tz(TimeZone);\n\nexport const getQuestionType = (\n  question_types: questionType[] | null,\n  type_id: string\n) => {\n  let type: questionTypeElementsType | null = null;\n  if (question_types !== null) {\n    let check = question_types.find((itm) => itm.id === type_id);\n    if (check !== undefined) {\n      let check_type = questionTypeElements.find(\n        (itm) => check && itm.key === check.element\n      );\n      if (check_type !== undefined) {\n        type = check_type.key;\n      }\n    }\n  }\n  return type;\n};\n\nexport const findTotalMarks = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  if (results !== null) {\n    let sum: number = 0;\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        sum = sum + test.total_marks;\n      }\n    }\n    return sum.toFixed(2);\n  } else {\n    return \"Wait...\";\n  }\n};\n\nexport const CheckIfExamDone = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  let res: boolean = false;\n  if (results !== null) {\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        res = true;\n      }\n    }\n  }\n  return res;\n};\n\nexport const validateCalculatedFormula = (\n  formula: string\n): { status: boolean; msg: string } => {\n  let characters: string[] = [];\n  if (\n    formula === undefined ||\n    formula === \"\" ||\n    formula.length === undefined ||\n    formula.length === 0\n  ) {\n    return {\n      status: false,\n      msg: `Please type a formula`,\n    };\n  }\n  if (formula.length < 3) {\n    return {\n      status: false,\n      msg: `The formula in not valid, it is not complete!`,\n    };\n  }\n  for (let el of formula) {\n    characters = [...characters, el];\n  }\n  if (characters[0] !== `\"`) {\n    return {\n      status: false,\n      msg: `Formula should start with (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length < 2) {\n    return {\n      status: false,\n      msg: `Formula is missing closing (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length > 2) {\n    return {\n      status: false,\n      msg: `Formula is invalid, because it has many (\") characters (${\n        characters.filter((itm) => itm === `\"`).length\n      })`,\n    };\n  }\n  if (\n    characters[characters.length - 1] !== `\"` &&\n    characters.filter((itm) => itm === `\"`).length === 2\n  ) {\n    let nextCharacter: string = \"\";\n    for (let i = 0; i < characters.length; i++) {\n      if (characters[i] === `\"` && i !== 0) {\n        nextCharacter = characters[i + 1];\n      }\n    }\n    if (nextCharacter !== `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing separation character (;) between formula and error`,\n      };\n    }\n    if (characters[characters.length - 1] === `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing error after (;) character`,\n      };\n    }\n  }\n  return {\n    status: true,\n    msg: `Formula is valid`,\n  };\n};\n\nexport function convertFromStringToDate(responseDate: string) {\n  let dateComponents = responseDate.split(\"T\");\n  let datePieces = dateComponents[0].split(\"-\");\n  let timePieces = dateComponents[1].split(\":\");\n  return new Date(\n    parseInt(datePieces[2]),\n    parseInt(datePieces[1]) - 1,\n    parseInt(datePieces[0]),\n    parseInt(timePieces[0]),\n    parseInt(timePieces[1]),\n    parseInt(timePieces[2])\n  );\n}\n\nexport enum ExamTimeStatus {\n  Waiting = \"Waiting\",\n  Online = \"Online\",\n  Expired = \"Expired\",\n}\n\nexport const validateExamDate = (\n  exam_date: string,\n  start_time: string,\n  end_time: string\n) => {\n  let status: ExamTimeStatus = ExamTimeStatus.Expired;\n  // Dates\n  const toDay: Date = new Date(today.toString());\n  const examDate = new Date(exam_date);\n\n  // Time\n  const startTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      start_time +\n      \":0\"\n  );\n  const endTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      end_time +\n      \":0\"\n  );\n\n  // check exam date\n  if (\n    examDate.getDate() > toDay.getDate() ||\n    examDate.getMonth() > toDay.getMonth() ||\n    examDate.getFullYear() > toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Waiting;\n  }\n\n  if (\n    examDate.getDate() < toDay.getDate() ||\n    examDate.getMonth() < toDay.getMonth() ||\n    examDate.getFullYear() < toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Expired;\n  }\n\n  if (\n    examDate.getDate() === toDay.getDate() &&\n    examDate.getMonth() === toDay.getMonth() &&\n    examDate.getFullYear() === toDay.getFullYear()\n  ) {\n    if (startTime.getTime() > toDay.getTime()) {\n      status = ExamTimeStatus.Waiting;\n    } else if (\n      startTime.getTime() <= toDay.getTime() &&\n      endTime.getTime() >= toDay.getTime()\n    ) {\n      status = ExamTimeStatus.Online;\n    } else {\n      status = ExamTimeStatus.Expired;\n    }\n  }\n  // console.log(\n  //   \"Dates comparison: \" + examDate.getDate() + \"=>\" + toDay.getDate()\n  // );\n  // console.log(\"Exam Status: \", status);\n  return status;\n};\n\nexport const InitializeExamsDone = (\n  selected_period: ApplicationPeriodGet | null,\n  selectedPosition: PositionAPI | null,\n  candidateExam: candidateExamStoreInterface,\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void,\n  user_id: string,\n  setLoadingExamsDone: (status: boolean) => void,\n  selectedExams: applicationExamAPI[] | null,\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void,\n  setLoadingExams: (status: boolean) => void\n) => {\n  if (selected_period !== null && selectedPosition !== null) {\n    loadExamsDone(\n      selected_period.session_plan_id,\n      user_id,\n      setLoadingExamsDone\n    );\n    for (let course of selectedPosition.courses) {\n      let testDone = candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = selectedExams?.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          InitializeExamDetails(\n            selected_period.session_plan_id,\n            course.course_id,\n            center_id.district_id,\n            center_id.center_id,\n            center_id.room_id,\n            selectedPosition.position_id,\n            setLoadingExams\n          );\n        }\n      }\n    }\n  }\n};\n\nexport const getActiveExam = (\n  candidateExam: candidateExamStoreInterface\n): ExamAnswerSheetDone | null => {\n  if (candidateExam.user_exams_done.length > 0) {\n    for (let exam of candidateExam.user_exams_done) {\n      if (\n        validateExamDate(\n          exam.exam_date,\n          exam.exam_start_time,\n          exam.exam_end_time\n        ) === ExamTimeStatus.Online\n      ) {\n        return exam;\n      }\n    }\n  }\n  return null;\n};\n\nexport const proctoringDefaultRules: {\n  rule: string;\n  status: boolean;\n  caption: string;\n}[] = [\n  {\n    rule: \"right_click_enabled\",\n    status: false,\n    caption: \"Enable right click\",\n  },\n  {\n    rule: \"copy_enabled\",\n    status: false,\n    caption: \"Enable copy\",\n  },\n  {\n    rule: \"paste_enabled\",\n    status: false,\n    caption: \"Enable paste\",\n  },\n  {\n    rule: \"stop_candidate_when_comeback\",\n    status: false,\n    caption: \"Enable Candidate when coming back\",\n  },\n  {\n    rule: \"allow_to_leave_browser\",\n    status: false,\n    caption: \"Enable to leave browser\",\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = (props) => {\n  const startPage = 1;\n  const tableId =\n    !props.tableId || props.tableId === \"myTable\" ? FC_makeID() : props.tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    props.pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId!)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < props.columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${props.tableSize} overflow-x-auto`}>\n      {/* search box  */}\n      {props.search && (\n        <div className={`${props.searchBG} w-full mb-2`}>\n          {props.search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={props.loading}\n              />\n\n              {props.pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={props.loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"overflow-x-auto w-full\">\n        <table\n          className={\n            props.tableClass\n              ? props.tableClass\n              : `w-full shadow ${\n                  props.rounded && \"sm:rounded-lg\"\n                } table-auto order-table`\n          }\n          id={tableId}\n        >\n          {!props.hideColumns && (\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n              <tr\n                className={`text-left tracking-wide bg-${props.thColor}-100 border-b-2 border-${props.thColor}-500 text-${props.thColor}-600`}\n              >\n                {props.columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className={`${column.padding} text-${\n                      column.alignText\n                    } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                    onClick={() =>\n                      column.isSortAllowed && sortThisColumn(tableId, index)\n                    }\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      {column.columnTitle}\n                      {column.isSortAllowed && <BiSort />}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n            {props.rows()}\n          </tbody>\n        </table>\n        {props.pagination && (\n          <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n            <div>\n              <span className=\"text-xs xs:text-sm text-gray-900\">\n                Showing 1 to {pageSize} of {totalItems - 1} Entries\n              </span>\n            </div>\n            <div>\n              <nav className=\"inline-flex shadow-sm\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                      currentPage !== 1 && \"bg-white\"\n                    }`}\n                    aria-label=\"Previous\"\n                    disabled={currentPage === 1 || props.loading}\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                  >\n                    <MdNavigateBefore className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <div>\n                  {pages &&\n                    pages.map((page, pageIndex) => (\n                      <button\n                        key={pageIndex}\n                        className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                          page !== currentPage\n                            ? \"bg-white\"\n                            : \"bg-gray-100 cursor-default\"\n                        }`}\n                        disabled={page === currentPage || props.loading}\n                        onClick={() => setCurrentPage(page)}\n                      >\n                        {page}\n                      </button>\n                    ))}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                      currentPage !== totalPages && \"bg-white\"\n                    }`}\n                    aria-label=\"Next\"\n                    disabled={currentPage === totalPages || props.loading}\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                  >\n                    <MdNavigateNext className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport {\n  AcademicSessionInterface,\n  PlansTypeInterface,\n  SessionPlanInterface,\n} from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\n// GET ALL ACADEMIC SESSION\nexport interface GetAllAcademicSessionAction {\n  type: ActionTypes.GET_ALL_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface[];\n}\n\n// CREATE ACADEMIC SESSION\nexport interface CreateAcademicSessionAction {\n  type: ActionTypes.CREATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// UPDATE ACADEMIC SESSION\nexport interface UpdateAcademicSessionAction {\n  type: ActionTypes.UPDATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// ACTIVATE ACADEMIC SESSION\nexport interface ActivateAcademicSessionAction {\n  type: ActionTypes.ACADEMIC_SESSION_ACTIVATION;\n  payload: AcademicSessionInterface;\n}\n\n// DELETE ACADEMIC SESSION\nexport interface DeleteAcademicSessionAction {\n  type: ActionTypes.DELETE_ACADEMIC_SESSION;\n  payload: string;\n}\n\n// GET ACTIVE ACADEMIC SESSION\nexport interface GetActiveAcademicSessionAction {\n  type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface | \"none\";\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions\n  | GetAllAcademicSessionAction\n  | CreateAcademicSessionAction\n  | UpdateAcademicSessionAction\n  | ActivateAcademicSessionAction\n  | DeleteAcademicSessionAction\n  | GetActiveAcademicSessionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// CREATE ACADEMIC SESSION\nexport const createAcademicSession = (\n  data: AcademicSessionInterface\n): CreateAcademicSessionAction => {\n  return {\n    type: ActionTypes.CREATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ALL ACADEMIC SESSION ==========================\nexport const GetAllAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface[]>(\n        `${API.PLACEMENT}/postrequestperiod/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: AcademicSessionInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      console.log(\"====================================\");\n      console.log({ GetAllAcademicSession: res });\n      console.log(\"====================================\");\n      dispatch<GetAllAcademicSessionAction>({\n        type: ActionTypes.GET_ALL_ACADEMIC_SESSION,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// UPDATE ACADEMIC SESSION\nexport const updateAcademicSession = (\n  data: AcademicSessionInterface\n): UpdateAcademicSessionAction => {\n  return {\n    type: ActionTypes.UPDATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// ACTIVATE ACADEMIC SESSION\nexport const academicSessionActivation = (\n  data: AcademicSessionInterface\n): ActivateAcademicSessionAction => {\n  return {\n    type: ActionTypes.ACADEMIC_SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE ACADEMIC SESSION\nexport const deleteAcademicSession = (\n  data: string\n): DeleteAcademicSessionAction => {\n  return {\n    type: ActionTypes.DELETE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface>(\n        `${API.PLACEMENT}/postrequestperiod/one`\n      );\n      console.log({ GET_ACTIVE_ACADEMIC_SESSION: res.data });\n      let session_plan: AcademicSessionInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveAcademicSessionAction>({\n        type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  CandidatesInterface,\n  DocumentCategoryInterface,\n  DocumentFieldsInterface,\n  DocumentSubCategoryInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { VerifyDocumentInterface } from \"./users\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CATEGORY\nexport interface GetDocumentCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface[];\n}\n\nexport interface CreateDocumentCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface UpdateDocumentCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface DeleteDocumentCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_CATEGORY;\n  payload: string;\n}\n\n// SUB CATEGORY\nexport interface GetDocumentSubCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface[];\n}\n\nexport interface CreateDocumentSubCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface UpdateDocumentSubCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface DeleteDocumentSubCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY;\n  payload: string;\n}\n\n// FIELDS\nexport interface GetDocumentFieldsAction {\n  type: ActionTypes.GET_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface[];\n}\n\nexport interface CreateDocumentFieldsAction {\n  type: ActionTypes.CREATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface UpdateDocumentFieldsAction {\n  type: ActionTypes.UPDATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface DeleteDocumentFieldsAction {\n  type: ActionTypes.DELETE_DOCUMENT_FIELDS;\n  payload: string;\n}\n\n// DOCUMENT CHECKING\nexport interface GetCandidatesInInstituteAtion {\n  type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE;\n  payload: CandidatesInterface[];\n}\n\nexport interface VerifyDocumentAction {\n  type: ActionTypes.VERIFY_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type DocumentCategoryActionType =\n  | GetDocumentCategoryAction\n  | CreateDocumentCategoryAction\n  | UpdateDocumentCategoryAction\n  | DeleteDocumentCategoryAction\n  | GetDocumentSubCategoryAction\n  | CreateDocumentSubCategoryAction\n  | UpdateDocumentSubCategoryAction\n  | DeleteDocumentSubCategoryAction\n  | GetDocumentFieldsAction\n  | CreateDocumentFieldsAction\n  | UpdateDocumentFieldsAction\n  | DeleteDocumentFieldsAction\n  | GetCandidatesInInstituteAtion\n  | VerifyDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CATEGORY\n\nexport const getDocumentCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get(`${API.AUTH}/detailcategory`);\n      console.log({ docCategory: res });\n      dispatch<GetDocumentCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_CATEGORY,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n    }\n  };\n};\n\nexport const createDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// SUB CATEGORY\nexport const getDocumentSubCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentSubCategoryInterface[]>(\n        `${API.AUTH}/detailsubcategory`\n      );\n      console.log({ docSubCategory: res });\n      dispatch<GetDocumentSubCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentSubCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentSubCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentSubCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentSubCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// FIELDS\nexport const getDocumentFields = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentFieldsInterface[]>(\n        `${API.AUTH}/categorysubcatedata`\n      );\n      console.log({ docFields: res });\n      dispatch<GetDocumentFieldsAction>({\n        type: ActionTypes.GET_DOCUMENT_FIELDS,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentFields = (data: DocumentFieldsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentFieldsAction>({\n      type: ActionTypes.CREATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentFields = (data: DocumentFieldsInterface) => {\n  console.log({ reducer: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentFieldsAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentFields = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentFieldsAction>({\n      type: ActionTypes.DELETE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\n// REMOVE DUPLICATION IN CANDIDATES IN EDUCATION CATEGORY PER SESSION\nconst distinctCandidates = (\n  candidatesData: CandidatesInterface[]\n): CandidatesInterface[] => {\n  let result: CandidatesInterface[] = [];\n  let user_ids: string[] = [];\n  const newArray: CandidatesInterface[] = candidatesData.filter((candidate) => {\n    return candidate !== null && candidate !== undefined;\n  });\n  newArray.forEach((candidate) => {\n    if (!user_ids.includes(candidate.user_id)) {\n      result.push(candidate);\n      user_ids.push(candidate.user_id);\n    }\n  });\n  return result;\n};\n// CANDIDATE IN EDUCATION CATEGORY PER SESSION\nexport const getCandidatesInInstitute = (\n  educatin_type_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\", null);\n    try {\n      setAxiosToken();\n      const res = await axios.get<CandidatesInterface[]>(\n        `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({\n        getCandidatesInInstitute: res,\n        distinctCandidates: distinctCandidates(res.data),\n      });\n      console.log(\"====================================\");\n      dispatch<GetCandidatesInInstituteAtion>({\n        type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE,\n        payload: distinctCandidates(res.data),\n        // payload: response.data,\n      });\n      callback(false, \"\", distinctCandidates(res.data));\n    } catch (error) {\n      console.log({ getCandidatesInInstitute: error });\n      callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const verifyDocument = (data: VerifyDocumentInterface) => {\n  console.log(\"====================================\");\n  console.log({ verifyDocument: data });\n  console.log(\"====================================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyDocumentAction>({\n      type: ActionTypes.VERIFY_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormPlacementListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  myPlacement: candidatePlacementInterface | null;\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n\n  // REDUX //////////////////////\n};\n\nconst FormPlacementList: React.FC<FormPlacementListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            props.myPlacement === null ||\n            isClaimAllowed(\n              props.myClaims,\n              props.activeSession.session_plan_id,\n              props.myPlacement.placed._id\n            )\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.myPlacement ? (\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            props.myPlacement.placed._id\n          ) && (\n            <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(props.myPlacement!.placed._id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  Placed on {props.myPlacement.placed.school.school_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(props.myPlacement!.placed._id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          )\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No placement to claim on!\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\n// const mapStateToProps = ({\n//   course,\n// }: StoreState): {\n//   courses: course[] | null;\n// } => {\n//   return {\n//     courses: course.courses,\n//   };\n// };\nexport default connect(null, {})(FormPlacementList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  course,\n  PlansInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { isPlanActive } from \"../../SessionSettings/ApplicationSession/SessionDetails\";\nimport ApplicationFormView from \"./ApplicationFormView\";\nimport ChooseReason from \"./ChooseReason\";\nimport DocFormView from \"./DocFormView\";\nimport ExaminationFormView from \"./ExaminationFormView\";\nimport FormApplicationList from \"./FormApplicationList\";\nimport FormDocumentList from \"./FormDocumentList\";\nimport FormExamList, {\n  getCourseById,\n  getCourseIdBySheetId,\n} from \"./FormExamList\";\nimport FormPlacementList from \"./FormPlacementList\";\n\nexport const ClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: DocumentClaimUser\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data &&\n    doc.category_subcategory_data.category_subcategory_Data_id.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    console.log({ doc });\n    DocField = documentCategories.documentFields.filter(\n      (c) =>\n        c._id === doc.category_subcategory_data?.category_subcategory_Data_id\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const isClaimAllowed = (\n  allClaim: CandidateClaimInterface[],\n  period_id: string,\n  claimOnId: string\n): boolean => {\n  if (\n    allClaim.find(\n      (item) =>\n        item.period_id === period_id && item.claiming_on_id === claimOnId\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\ntype ClaimFormProps = {\n  // REQUIRED PROPS\n  formState: boolean;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getMyPlacement: Function;\n  getClaimReasons: Function;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  chooseClaimReason: boolean;\n  claimReason: claimReasonInterface | null;\n  myPlacement: candidatePlacementInterface | null;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n};\n\nclass ClaimForm extends Component<ClaimFormProps, ClaimFormState> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      myPlacement: this.props.claiming.myPlacement,\n      chooseClaimReason: false,\n      claimReason: null,\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setChooseClaimReason = (data: boolean) => {\n    this.setState({ chooseClaimReason: data });\n  };\n\n  setClaimReason = (value: claimReasonInterface | null) => {\n    this.setState({ claimReason: value });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  isClaimTypeOpen = (\n    thisSession: SessionPlanInterface,\n    thisType: PlansTypeKeys\n  ): boolean => {\n    let data: PlansInterface | undefined;\n    if (thisType === PlansTypeKeys.APPLICATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.PLACEMENT_TRANSFER) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: ClaimExamResultsDetails[]) => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ loadExamAnswers: data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (this.props.auth.application_session === null) {\n      this.props.PushPopupAlert({\n        title: \"No session active session\",\n        theme: PopupAlertTheme.danger,\n      });\n      this.props.setFormState(false);\n      this.setState({\n        claimFileId: \"\",\n        thisClaimType: null,\n        thisClaimTypeId: \"\",\n        claimComment: \"\",\n        chooseClaimFile: false,\n        formType: \"DEFAULT\",\n        viewThisFile: \"\",\n        formError: null,\n      });\n    } else {\n      if (this.props.documentReducer.documentCategory === null) {\n        this.props.getDocumentCategory();\n      }\n      if (this.props.documentReducer.documentSubCategory === null) {\n        this.props.getDocumentSubCategory();\n      }\n      if (this.props.documentReducer.documentFields === null) {\n        this.props.getDocumentFields();\n      }\n      if (this.props.claiming.claimReasons === null) {\n        this.props.getClaimReasons((status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        });\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getExamById = (\n    exams: ClaimExamResultsDetails[],\n    answer_sheet_id: string\n  ): ClaimExamResultsDetails | undefined => {\n    return exams.find((item) => item.answer_sheet_id === answer_sheet_id);\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  cleanToClose = (response?: boolean) => {\n    this.props.setFormState(false);\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  loadUserById = async (user_id: string, callback: Function) => {\n    if (isEmptyOrSpaces(user_id)) {\n      return this.props.PushPopupAlert({\n        title: \"No user id provided\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface>(\n        `${API.AUTH}/users/${user_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ loadUserById: res });\n      console.log(\"====================================\");\n      if (res) {\n        callback(res.data);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  getClaimTitle = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    if (\n      claimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = ClaimGetDocTitle(\n        this.props.documentReducer,\n        this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          this.state.claimFileId\n        )\n      ).main;\n    }\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = this.getApplicationById(\n        this.props.claiming.candidateApplications,\n        this.state.claimFileId\n      ).position.position_title;\n    }\n    if (\n      claimType === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.myAnswer &&\n      getCourseIdBySheetId(\n        this.props.claiming.myAnswer,\n        this.state.claimFileId\n      ) &&\n      getCourseById(\n        this.props.courses,\n        getCourseIdBySheetId(\n          this.props.claiming.myAnswer,\n          this.state.claimFileId\n        )!.course\n      )\n    ) {\n      result = getCourseById(\n        this.props.courses,\n        getCourseIdBySheetId(\n          this.props.claiming.myAnswer,\n          this.state.claimFileId\n        )!.course\n      )!.course_name;\n    }\n    if (\n      claimType === PlansTypeKeys.PLACEMENT_TRANSFER &&\n      this.state.myPlacement\n    ) {\n      result = \"Placed on \" + this.state.myPlacement.placed.school.school_name;\n    }\n\n    return result;\n  };\n\n  getClaimInstitute = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = this.getApplicationById(\n        this.props.claiming.candidateApplications,\n        this.state.claimFileId\n      ).position.education_institute_id.education_institute_id;\n    }\n\n    return result;\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (!this.state.claimReason) {\n      return this.setFormError({\n        element: \"claim_reason\",\n        msg: `Please select the reason of your claim!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.props.auth.application_session) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n\n    this.setLoadingForm(true);\n    let old_evaluator_email: string = \"info@system.com\";\n    let old_evaluator_name: string = \"System\";\n    let evaluator_email: string = \"\";\n    let evaluator_name: string = \"\";\n    let title: string = this.getClaimTitle(this.state.thisClaimType);\n    let institute_id: string = this.getClaimInstitute(this.state.thisClaimType);\n\n    if (\n      this.state.thisClaimType !== PlansTypeKeys.EXAMINATION &&\n      this.getValidation(this.state.claimFileId).old_evaluated_by !== \"system\"\n    ) {\n      await this.loadUserById(\n        this.getValidation(this.state.claimFileId).old_evaluated_by,\n        (data: UserInterface) => {\n          old_evaluator_email = data.email;\n          old_evaluator_name =\n            data.user_info.fname + \" \" + data.user_info.lname;\n        }\n      );\n    }\n\n    if (this.state.thisClaimType === PlansTypeKeys.EXAMINATION) {\n    }\n\n    try {\n      // console.log(\"====================================\");\n      // console.log({\n      //   claiming_on_id: this.state.claimFileId,\n      //   type_key: this.state.thisClaimType,\n      //   user: this.props.auth.user.user_id,\n      //   period_id: this.props.auth.application_session.session_plan_id,\n      //   default_claim_resaons: this.state.claimReason.id,\n      //   reason: this.state.claimComment,\n      //   old_reason:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"System\"\n      //       : this.getValidation(this.state.claimFileId).old_reason,\n      //   old_status:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"Failed\"\n      //       : this.getValidation(this.state.claimFileId).old_status,\n      //   old_evaluated_by:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"\"\n      //       : this.getValidation(this.state.claimFileId).old_evaluated_by,\n      //   old_evaluator_email,\n      //   old_evaluator_name,\n      //   evaluator_email,\n      //   evaluator_name,\n      //   title,\n      // });\n      // console.log(\"====================================\");\n\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.props.auth.application_session.session_plan_id,\n          default_claim_resaons: this.state.claimReason.id,\n          reason: this.state.claimComment,\n          old_reason:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"System\"\n              : this.getValidation(this.state.claimFileId).old_reason,\n          old_status:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Failed\"\n              : this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"\"\n              : this.getValidation(this.state.claimFileId).old_evaluated_by,\n          old_evaluator_email,\n          old_evaluator_name,\n          evaluator_email,\n          evaluator_name,\n          title,\n          institute_id,\n        }\n      );\n      console.log({ createClaim: res });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose(true);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingForm(false);\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n\n    if ((thisClaim as PlansTypeKeys) === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.candidateApplications === null) {\n        this.props.getMyRejectedApplications(\n          this.props.auth.user.user_id,\n          (\n            status: boolean,\n            msg: string,\n            data?: claimApplicationsInterface[]\n          ) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          }\n        );\n      }\n      if (\n        this.props.courses === null ||\n        (this.props.courses.length === 0 && this.state.loading)\n      ) {\n        this.props.loadCourses(this.setLoading);\n        this.setLoading(false);\n      } else {\n        this.setLoading(false);\n      }\n    } else if ((thisClaim as PlansTypeKeys) === PlansTypeKeys.EXAMINATION) {\n      if (\n        this.props.courses === null ||\n        (this.props.courses.length === 0 && this.state.loading)\n      ) {\n        this.props.loadCourses(this.setLoading);\n        this.setLoading(false);\n      } else {\n        this.setLoading(false);\n      }\n    } else if (\n      (thisClaim as PlansTypeKeys) === PlansTypeKeys.DOCUMENT_VALIDATION\n    ) {\n      if (this.props.claiming.candidateDocuments === null) {\n        this.props.getMyRejectedDocuments(\n          (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          }\n        );\n      }\n    } else if (\n      (thisClaim as PlansTypeKeys) === PlansTypeKeys.PLACEMENT_TRANSFER\n    ) {\n      if (this.props.claiming.myPlacement === null) {\n        this.props.getMyPlacement(\n          this.props.auth.user.user_id,\n          (\n            status: boolean,\n            msg: string,\n            data?: candidatePlacementInterface | null\n          ) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n            if (data) {\n              this.setState({ myPlacement: data });\n            }\n          }\n        );\n      }\n    }\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  render() {\n    if (\n      this.props.auth.application_session === null ||\n      this.props.claiming.myClaims === null\n    ) {\n      return null;\n    }\n\n    return (\n      <div className=\"pb-3\">\n        {this.props.formState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length <= 0 &&\n                this.cleanToClose();\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length > 0 &&\n                this.setViewThisFile(\"\");\n            }}\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-900 font-bold text-xl md:ml-1\">\n                {this.state.viewThisFile.length <= 0 && \"Claiming form\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType ===\n                    PlansTypeKeys.DOCUMENT_VALIDATION &&\n                  \"Viewing document\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                  \"Viewing application\"}\n              </div>\n            }\n            widthSizeClass={\n              this.state.viewThisFile.length > 0\n                ? ModalSize.extraLarge\n                : ModalSize.medium\n            }\n            padding={{ title: true, body: false, footer: false }}\n          >\n            {/* CLAIM FORM ============================================== */}\n            {this.state.viewThisFile.length <= 0 && (\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"px-6 pb-3\">\n                  {this.state.alertError && (\n                    <div\n                      className=\"alert-warning cursor-pointer\"\n                      onClick={() => this.setAlertError(null)}\n                    >\n                      {this.state.alertError}\n                    </div>\n                  )}\n                  <div className=\"text-base text-gray-700 sm:text-lg\">\n                    {/* SELECT CLAIM TYPE ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Claim type</label>\n                      <select\n                        className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                          this.state.formType === \"PROPS\" &&\n                          \"cursor-not-allowed\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_type\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                          this.selectClaimType(e.target.value);\n                          this.setClaimFileId(\"\");\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_type\" &&\n                            this.setFormError(null);\n                        }}\n                        value={\n                          this.state.thisClaimType\n                            ? this.state.thisClaimType\n                            : \"\"\n                        }\n                        disabled={\n                          this.state.loadingForm ||\n                          this.state.formType === \"PROPS\"\n                        }\n                      >\n                        <option value=\"\">Choose claim type</option>\n                        {Object.values(PlansTypeKeys).map((item, index) => (\n                          <option\n                            value={item}\n                            key={index + item}\n                            className={`${\n                              item === PlansTypeKeys.MARKS_PUBLICATION ||\n                              item === PlansTypeKeys.PLACEMENT_TRANSFER\n                                ? \"hidden\"\n                                : \"block\"\n                            }`}\n                          >\n                            {capitalizeFirstLetter(\n                              item.toLocaleLowerCase().replace(/_/g, \" \")\n                            )}\n                          </option>\n                        ))}\n                      </select>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_type\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT CLAIM TYPE ============================================== */}\n\n                    {/* SELECT FILE TO CLAIM ON ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>\n                        {this.generateChooseFileTitle(this.state.thisClaimType)}\n                      </label>\n                      <div\n                        className={`text-left bg-white border-2 ${\n                          this.state.formType !== \"PROPS\"\n                            ? \"border-gray-700\"\n                            : \"border-gray-400 text-gray-500\"\n                        } rounded w-full ${\n                          this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_file\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.state.loading\n                            ? \"cursor-waiting\"\n                            : this.state.thisClaimType &&\n                              !this.state.chooseClaimFile &&\n                              this.state.formType !== \"PROPS\"\n                            ? \"cursor-pointer\"\n                            : !this.state.chooseClaimFile &&\n                              \"cursor-not-allowed\"\n                        }`}\n                        title={\n                          !this.state.thisClaimType\n                            ? \"Choose claim type first!\"\n                            : \"\"\n                        }\n                        onClick={() => {\n                          !this.state.loading &&\n                            this.state.formType === \"DEFAULT\" &&\n                            this.state.thisClaimType &&\n                            !this.state.chooseClaimFile &&\n                            this.setChooseClaimFile(true);\n                          !this.state.loading &&\n                            this.state.formError &&\n                            this.state.formError.element === \"claim_file\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                        {this.state.claimFileId.length > 0 &&\n                        this.state.thisClaimType &&\n                        !this.state.chooseClaimFile ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.getClaimTitle(this.state.thisClaimType)}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimFile && (\n                            <p className=\"my-1 mx-2\">\n                              Select Claim{\" \"}\n                              {this.state.thisClaimType &&\n                                this.state.thisClaimType\n                                  .toLocaleLowerCase()\n                                  .replace(/_/g, \" \")}\n                            </p>\n                          )\n                        )}\n                        {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                        {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormDocumentList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateDocuments={\n                                this.props.claiming.candidateDocuments\n                              }\n                              documentCategories={this.props.documentReducer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF REJECTED APPLICATION ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormApplicationList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateApplications={\n                                this.props.claiming.candidateApplications\n                              }\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF FAILED EXAM ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.EXAMINATION &&\n                          this.props.claiming.myAnswer &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormExamList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateAnswers={this.props.claiming.myAnswer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF FAILED EXAM ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* PENDING PLACEMENT ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.PLACEMENT_TRANSFER &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormPlacementList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                              myPlacement={this.state.myPlacement}\n                            />\n                          )}\n                        {/* END LISTING OF FAILED Placement ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_file\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                    {/* CLAIM REASONS ========================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Choose reason of your claim</label>\n                      <div\n                        className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                          this.state.chooseClaimReason ? \"h-64\" : \"h-auto\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_reason\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.props.claiming.claimReasons === null\n                            ? \"cursor-wait\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title=\"Choose the reason for your claim!\"\n                        onClick={() => {\n                          !this.state.chooseClaimReason &&\n                            this.setState({ chooseClaimReason: true });\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_reason\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING SELECTED REASON ============================ */}\n                        {this.state.claimReason &&\n                        !this.state.chooseClaimReason ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.claimReason.reason}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimReason && (\n                            <p className=\"my-1 mx-2\">Select reason</p>\n                          )\n                        )}\n                        {/* END DISPLAYING SELECTED REASON ============================ */}\n\n                        {/* LISTING OF CLAIM REASONS ============================ */}\n                        {this.state.chooseClaimReason &&\n                          this.props.claiming.claimReasons && (\n                            <ChooseReason\n                              setChooseClaimReason={this.setChooseClaimReason}\n                              setClaimReason={this.setClaimReason}\n                              claimReason={this.state.claimReason}\n                              allClaimReasons={this.props.claiming.claimReasons}\n                            />\n                          )}\n                        {/* END LISTING OF CLAIM REASONS ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_reason\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM REASONS ========================================== */}\n\n                    {/* CLAIM COMMENT ============================================== */}\n                    <div className=\"flex flex-col\">\n                      <label>Comment</label>\n                      <textarea\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_comment\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder={`Claim comment`}\n                        style={{ resize: \"none\" }}\n                        value={this.state.claimComment}\n                        onChange={(e) => {\n                          this.setClaimComment(e.target.value);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_comment\" &&\n                            this.setFormError(null);\n                        }}\n                        rows={3}\n                        disabled={this.state.loadingForm}\n                      ></textarea>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM COMMENT ============================================== */}\n                  </div>\n\n                  <div className=\"pt-3 flex justify-between\">\n                    <button\n                      onClick={() => this.cleanToClose()}\n                      className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-not-allowed\"\n                      }`}\n                      type=\"button\"\n                      disabled={this.state.loadingForm || this.state.loading}\n                    >\n                      Exit\n                    </button>\n                    <button\n                      className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-wait\"\n                      }`}\n                      type=\"submit\"\n                      disabled={this.state.loadingForm || this.state.loading}\n                    >\n                      {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n            {/* END CLAIM FORM ============================================== */}\n\n            {/* CLAIM DOCUMENT VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateDocuments &&\n              this.state.thisClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION && (\n                <DocFormView\n                  thisDoc={this.getDocumentById(\n                    this.props.claiming.candidateDocuments,\n                    this.state.viewThisFile\n                  )}\n                  setViewThisFile={this.setViewThisFile}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                />\n              )}\n            {/* END CLAIM DOCUMENT VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM APPLICATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateApplications &&\n              this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n                <ApplicationFormView\n                  thisApplication={this.getApplicationById(\n                    this.props.claiming.candidateApplications,\n                    this.state.viewThisFile\n                  )}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                />\n              )}\n            {/* END CLAIM APPLICATION VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM EXAMINATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.myAnswer &&\n              this.state.thisClaimType === PlansTypeKeys.EXAMINATION &&\n              this.getExamById(\n                this.props.claiming.myAnswer,\n                this.state.viewThisFile\n              ) && (\n                <ExaminationFormView\n                  thisAnswerSheet={\n                    this.getExamById(\n                      this.props.claiming.myAnswer,\n                      this.state.viewThisFile\n                    )!\n                  }\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                  // thisAnswerSheet={undefined}\n                  // setViewThisFile={undefined}\n                  // setChooseClaimFile={undefined}\n                  // setClaimFileId={undefined}\n                />\n              )}\n            {/* END CLAIM EXAMINATION VIEW ============================================== */}\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  course,\n}: StoreState): {\n  auth: Auth;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    documentReducer: document,\n    claiming,\n    courses: course.courses,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadCourses,\n  getMyClaims,\n  getClaimReasons,\n  getMyAnswers,\n  getMyPlacement,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(ClaimForm);\n","import {\n  CalculatedMultipleChoiceQuestionAnswerInterface,\n  EmbeddedQuestionAnswerInterface,\n  EssayQuestionAnswerInterface,\n  MatchingQuestionAnswerInterface,\n  MultipleChoiceQuestionAnswerInterface,\n  NumericalQuestionAnswerInterface,\n  ShortAnswerQuestionAnswerInterface,\n  SimpleCalculatedQuestionAnswerInterface,\n  TrueFalseQuestionAnswerInterface,\n} from \"../../../interfaces/question\";\n\nexport const toMultipleChoice = (\n  answers: any[]\n): MultipleChoiceQuestionAnswerInterface[] => {\n  let res: MultipleChoiceQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toTrueFalse = (\n  answers: any[]\n): TrueFalseQuestionAnswerInterface[] => {\n  let res: TrueFalseQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toMatching = (\n  answers: any[]\n): MatchingQuestionAnswerInterface[] => {\n  let res: MatchingQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toSimpleCalculated = (\n  answers: any[]\n): SimpleCalculatedQuestionAnswerInterface[] => {\n  let res: SimpleCalculatedQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toShortAnswer = (\n  answers: any[]\n): ShortAnswerQuestionAnswerInterface[] => {\n  let res: ShortAnswerQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toNumerical = (\n  answers: any[]\n): NumericalQuestionAnswerInterface[] => {\n  let res: NumericalQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toCalculatedMultipleChoice = (\n  answers: any[]\n): CalculatedMultipleChoiceQuestionAnswerInterface[] => {\n  let res: CalculatedMultipleChoiceQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toEssay = (answers: any[]): EssayQuestionAnswerInterface[] => {\n  let res: EssayQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toEmbedded = (\n  answers: any[]\n): EmbeddedQuestionAnswerInterface[] => {\n  let res: EmbeddedQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import React from \"react\";\nimport { MdInfoOutline } from \"react-icons/md\";\n\nconst NoSession = () => {\n  return (\n    <div className=\"my-5\">\n      <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n        <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n        <div className=\"text-center flex flex-col\">\n          <span className=\"text-2xl md:text-4xl font-extrabold\">\n            No session available\n          </span>\n          <span className=\"text-lg\">\n            Please Wait for the system to publish the sessions or contact the\n            administrator\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoSession;\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title}</span>\n        </td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id) ? \"Any document\" : item.field_title}\n          </span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {isEmptyOrSpaces(item.field_id) ? (\n            item.subcategory_required ? (\n              <span className=\"text-yellow-800\">Required</span>\n            ) : (\n              \"Optional\"\n            )\n          ) : item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          // {\n          //   columnTitle: \"Qualification Status\",\n          //   alignText: \"left\",\n          //   padding: \"p-3\",\n          // },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default ViewRequirements;\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { search } from \"../../../utils/functions\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getFailedExam = (\n  allData: ClaimExamResultsDetails[],\n  allCourses: course[]\n): ClaimExamResultsDetails[] => {\n  let result: ClaimExamResultsDetails[] = [];\n  allData.forEach((element) => {\n    if (element.total_marks < 100) {\n      let data = element;\n      data.course_name = getCourseById(allCourses, element.course)\n        ? getCourseById(allCourses, element.course)!.course_name\n        : \"Unknown exam\";\n      result.push(data);\n    }\n  });\n\n  return result;\n};\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormExamListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateAnswers: ClaimExamResultsDetails[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n\n  // REDUX //////////////////////\n  courses: course[] | null;\n};\n\nconst FormExamList: React.FC<FormExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            !props.courses ||\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.courses &&\n        getFailedExam(props.candidateAnswers, props.courses).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.answer_sheet_id\n          )\n        ).length > 0 ? (\n          search(\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ),\n            searchInput\n          ).map((item: ClaimExamResultsDetails, index: number) => (\n            <div\n              className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                props.claimFileId === item.answer_sheet_id &&\n                \"bg-blue-50 border-l-4 border-blue-500\"\n              }`}\n              key={index + item.answer_sheet_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.answer_sheet_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.course_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.answer_sheet_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No failed exam available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  course,\n}: StoreState): {\n  courses: course[] | null;\n} => {\n  return {\n    courses: course.courses,\n  };\n};\nexport default connect(mapStateToProps, {})(FormExamList);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim, DocumentClaimUser } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\nimport { ClaimGetDocTitle } from \"./Candidate/ClaimForm\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisDoc: DocumentClaimUser;\n  // setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  claimReasons: claimReasonInterface[] | null;\n  thisClaim: CandidateClaimInterface;\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Title:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisDoc.validation_status === \"rejected\"\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import React from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  claimApplicationsInterface,\n  claimApplicationsPositionInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\ntype ApplicationFormViewProps = {\n  thisApplication: claimApplicationsInterface;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  PushPopupAlert: Function;\n};\n\nconst ApplicationFormView: React.FC<ApplicationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisApplication.application_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisApplication.application_status ===\n                ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } py-1`}\n            >\n              {capitalizeFirstLetter(props.thisApplication.application_status)}\n            </span>\n          </div>\n          {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {props.thisApplication.}\n            </span>\n          </div> */}\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-semibold text-gray-900\">\n              {props.thisApplication.override_by.comment}\n            </span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Details\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisApplication.position.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisApplication.position.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !==\n                    props.thisApplication.position.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisApplication.position.requirements.length > 0 ? (\n            FC_ApplicationPositionDistinctCategory(\n              props.thisApplication.position,\n              props.documentCategories\n            ).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_ApplicationPositionDistinctCategory(\n                      props.thisApplication.position,\n                      props.documentCategories\n                    ).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default connect(null, { PushPopupAlert })(ApplicationFormView);\n","import React, { Component } from \"react\";\nimport FindAnswer from \"../../containers/DoExam/DoExamTitle/FindAnswer\";\nimport { ExamAnswerSheetDone } from \"../../interfaces/exam\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  requestUserAnswers,\n  loadQuestionTypes,\n  questionTypesStoreInterface,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { DATE } from \"../../utils/functions\";\nimport { AiOutlineFileText } from \"react-icons/ai\";\nimport { ExamDoneDetailsAnswers } from \"../../containers/CandidateExams/CandidateExams\";\nimport Loading from \"../Loading/Loading\";\n\ninterface AnswersDetailsProps {\n  exam_id: ExamDoneDetailsAnswers;\n  showAnswers: boolean;\n  allAnswers?: ExamAnswerSheetDone[];\n  user_id?: string;\n  questionTypes: questionTypesStoreInterface;\n  requestUserAnswers: (\n    exam_id: string,\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  FC_GetProfileDetails: Function;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n}\ninterface AnswersDetailsState {\n  loading: boolean;\n  loadingStatus: boolean;\n}\n\nexport class _AnswersDetails extends Component<\n  AnswersDetailsProps,\n  AnswersDetailsState\n> {\n  constructor(props: AnswersDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingStatus: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setLoadingStatus = (status: boolean) => {\n    this.setState({ loadingStatus: status });\n  };\n  componentDidMount = () => {\n    if (\n      this.props.questionTypes.questionTypes === null ||\n      this.props.questionTypes.questionTypes.length === 0\n    ) {\n      this.props.loadQuestionTypes(this.setLoading);\n    }\n    if (this.props.exam_id) {\n      let check = this.props.candidateExam.user_exams_done.find(\n        (itm) =>\n          itm.course === this.props.exam_id.course &&\n          itm.period === this.props.exam_id.period &&\n          DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n      );\n      // Check if user exams loaded\n      if (\n        (this.props.candidateExam.user_exams_done.length === 0 ||\n          check === undefined) &&\n        this.props.allAnswers === undefined\n      ) {\n        this.props.loadExamsDone(\n          this.props.exam_id.period,\n          this.props.auth.user.user_id,\n          this.setLoadingStatus\n        );\n      }\n      if (check !== undefined) {\n        if (\n          this.props.candidateExam.user_exams_done.find(\n            (item) => item.exam_paper === check?.exam_paper\n          ) === undefined\n        ) {\n          this.props.requestUserAnswers(\n            check.exam_paper,\n            this.props.user_id === undefined\n              ? this.props.auth.user.user_id\n              : this.props.user_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n  userAnswersTotalMarks = (user_answers: ExamAnswerSheetDone) => {\n    let total: number = 0;\n    for (let item of user_answers.user_answers) {\n      total += item.user_marks;\n    }\n    return total;\n  };\n  render() {\n    let user_exam_details: ExamAnswerSheetDone | undefined =\n      this.props.allAnswers === undefined\n        ? this.props.candidateExam.user_exams_done.find(\n            (itm) =>\n              itm.course === this.props.exam_id.course &&\n              itm.period === this.props.exam_id.period &&\n              DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n          )\n        : this.props.allAnswers.find(\n            (itm) =>\n              itm.course === this.props.exam_id.course &&\n              itm.period === this.props.exam_id.period &&\n              DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n          );\n    if (this.state.loading === true || this.state.loadingStatus === true) {\n      return (\n        <div className=\"my-6 rounded bg-white p-3\">\n          <Loading />\n        </div>\n      );\n    }\n    if (user_exam_details === undefined) {\n      return (\n        <div className=\"my-6 rounded bg-white p-3\">\n          <span className=\"text-4xl font-bold\">Exam details not found!</span>\n        </div>\n      );\n    }\n    return (\n      <div className=\"p-2 bg-gray-100\">\n        <div className=\"mb-5 -mt-5\">\n          {user_exam_details !== undefined && (\n            <div className=\"mt-5\">\n              <div className=\"px-3 mb-2 flex flex-row items-center gap-3\">\n                <div>\n                  <AiOutlineFileText className=\"text-5xl text-gray-500\" />\n                </div>\n                <div\n                  className=\"text-2xl font-extrabold\"\n                  dangerouslySetInnerHTML={{\n                    __html: \"Exam for \" + this.props.exam_id.course_name,\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white rounded-t mb-0 border-b\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam date:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: DATE(this.props.exam_id.exam_date),\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white mb-0 border-b\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam description:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.exam_id.discription,\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white rounded-b mb-0\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam terms and conditions:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.exam_id.termes,\n                  }}\n                ></div>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"text-2xl font-extrabold text-blue-600 px-2 mb-3\">\n          Exam answers & marks\n        </div>\n        {user_exam_details === undefined\n          ? \"Not Found\"\n          : user_exam_details.user_answers.map((item, i) => (\n              <div\n                key={i + 1}\n                className=\"bg-white hover:bg-white border border-white hover:border-blue-400 px-2 py-2 rounded  animate__animated animate__fadeIn animate__fast group mb-2\"\n              >\n                <div className=\"grid md:grid-cols-11 w-full\">\n                  <div className=\"col-span-12 flex flex-row items-center gap-3\">\n                    <div\n                      key={i + 1}\n                      className=\"w-6 h-6 p-2 rounded-full bg-gray-600 flex justify-center items-center font-bold text-lg text-white cursor-pointer\"\n                    >\n                      {i + 1}\n                    </div>\n                    {user_exam_details &&\n                      user_exam_details.questions.find(\n                        (itm) => itm.question_id === item.question\n                      ) !== undefined && (\n                        <div className=\"text-sm w-full\">\n                          <div\n                            className=\"font-bold text-gray-700 text-base\"\n                            dangerouslySetInnerHTML={{\n                              __html: user_exam_details.questions\n                                .find(\n                                  (itm) => itm.question_id === item.question\n                                )!\n                                .question.find(\n                                  (test) => test.language === item.language\n                                )!.description,\n                            }}\n                          ></div>\n                          <div className=\"text-blue-700 font-bold text-sm w-full\">\n                            Answer:&nbsp;{\" \"}\n                            {this.props.questionTypes.questionTypes !== null &&\n                              user_exam_details.user_answers.find(\n                                (itm) => itm.question === item.question\n                              ) && (\n                                <div className=\"mb-2\">\n                                  <FindAnswer\n                                    selectedLanguage={item.language}\n                                    question={{\n                                      is_deleted:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.is_deleted,\n                                      question_id: item.question,\n                                      course: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.course,\n                                      question:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.question,\n                                      type: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.type,\n                                      chapters:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.chapters,\n                                      customNumber:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.customNumber,\n                                      marks: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.marks,\n                                      answers: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.answers,\n                                    }}\n                                    answersList={[\n                                      {\n                                        question_id: item.question,\n                                        status: true,\n                                        answers:\n                                          user_exam_details.user_answers.find(\n                                            (itm) =>\n                                              itm.question === item.question\n                                          )!.answers,\n                                      },\n                                    ]}\n                                    questionTypes={\n                                      this.props.questionTypes.questionTypes\n                                    }\n                                    showCorrectAnswer={this.props.showAnswers}\n                                    onClick={() => {}}\n                                  />\n                                </div>\n                              )}\n                          </div>\n                        </div>\n                      )}\n                  </div>\n                </div>\n                <div className=\"col-span-1 flex items-center justify-between\">\n                  <div></div>\n\n                  <div className=\"w-max flex flex-col items-end justify-center bg-blue-50 rounded-md px-3 py-1 group-hover:bg-blue-100\">\n                    <div className=\"text-sm font-semibold text-gray-700\">\n                      Marks\n                    </div>\n                    <div className=\"text-sm font-extrabold text-gray-900 -mt-1\">\n                      <span className=\"text-blue-500\">\n                        {item.user_marks.toFixed(2)}\n                      </span>{\" \"}\n                      /{\" \"}\n                      {user_exam_details &&\n                        user_exam_details.questions.find(\n                          (itm) => itm.question_id === item.question\n                        )?.marks}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n        <div className=\"flex flex-row items-center justify-between gap-3 mb-10\">\n          <div className=\"bg-blue-100 p-3 pr-3 text-blue-700 flex flex-col items-start justify-center rounded-lg border-2 border-white\">\n            <span className=\"text-gray-700\">Total marks percentage</span>\n            <span className=\"text-3xl font-extrabold\">\n              {user_exam_details && user_exam_details.total_marks.toFixed(2)}%\n            </span>\n          </div>\n          <div>\n            <div className=\"bg-white rounded-lg p-3\">\n              <div className=\"text-gray-500 font-bold text-base text-right\">\n                Exam total marks\n              </div>\n              {user_exam_details !== undefined && (\n                <div className=\"font-extrabold text-3xl text-gray-900 text-right\">\n                  {this.userAnswersTotalMarks(user_exam_details).toFixed(2)} /{\" \"}\n                  {user_exam_details.exam_total_marks}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  candidateExam,\n  candidateApplications,\n  questionTypes,\n}: StoreState): {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return {\n    auth: auth,\n    candidateExam: candidateExam,\n    candidateApplications: candidateApplications,\n    questionTypes: questionTypes,\n  };\n};\n\nexport const AnswersDetails = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  requestUserAnswers,\n  loadQuestionTypes,\n})(_AnswersDetails);\n","import React from \"react\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport {\n  claimApplicationsPositionInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamDoneDetailsAnswers } from \"../../CandidateExams/CandidateExams\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\nexport const claimShowAnswer = (\n  answer: ClaimExamResultsDetails,\n  course_name: string\n): ExamDoneDetailsAnswers => {\n  const result: ExamDoneDetailsAnswers = {\n    course: answer.course,\n    course_name: course_name,\n    discription: answer.discription,\n    termes: answer.termes,\n    rules: {\n      right_click_enabled: false,\n      copy_enabled: false,\n      paste_enabled: false,\n      stop_candidate_when_comeback: false,\n      allow_to_leave_browser: false,\n    },\n    period: answer.period,\n    exam_date: answer.exam_date,\n  };\n  return result;\n};\n\ntype ExaminationFormViewProps = {\n  thisAnswerSheet: ClaimExamResultsDetails;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n};\n\nconst ExaminationFormView: React.FC<ExaminationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisAnswerSheet.course_name}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisAnswerSheet.answer_sheet_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisAnswerSheet.createdAt)}\n            </span>\n          </div>\n        </div>\n        {/* QUESTIONS ----------------------------- */}\n        <AnswersDetails\n          showAnswers={false}\n          exam_id={claimShowAnswer(\n            props.thisAnswerSheet,\n            props.thisAnswerSheet.course_name\n          )}\n        />\n        {/* END QUESTIONS ----------------------------- */}\n      </div>\n    </section>\n  );\n};\n\nexport default ExaminationFormView;\n","import moment from \"moment\";\nimport React from \"react\";\nimport {\n  compareWithToday,\n  ExamDoneDetailsAnswers,\n} from \"../../containers/CandidateExams/CandidateExams\";\nimport { TimeZone } from \"../../utils/app.config\";\nimport { DATE } from \"../../utils/functions\";\nimport { AnswersDetails } from \"./AnswersDetails\";\n\ninterface CandidateAnswersDetailsProps {\n  exam_id: ExamDoneDetailsAnswers;\n  showAnswers: boolean;\n}\n\nconst CandidateAnswersDetails = (props: CandidateAnswersDetailsProps) => {\n  const today = moment().tz(TimeZone);\n  let tomorrow = new Date();\n  tomorrow.setDate(today.date() + 1);\n  return (\n    <div>\n      {/* Check if period is open for claims */}\n      {compareWithToday(today, props.exam_id.exam_date) === false ? (\n        <div className=\"bg-yellow-100 text-yellow-800 font-extrabold text-center flex flex-col items-center justify-center text-lg px-2 py-6\">\n          <div className=\"mb-5 text-3xl\">\n            Please wait, the exam details will be visible soon!\n          </div>\n          <div className=\"text-gray-600\">Exam details will be visible from</div>\n          <div className=\"bg-white rounded-full px-3 py-1 text-gray-700\">\n            {DATE(tomorrow.toString())}\n          </div>\n        </div>\n      ) : (\n        <AnswersDetails\n          exam_id={props.exam_id}\n          showAnswers={props.showAnswers}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default CandidateAnswersDetails;\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected.session_plan_id === item.session_plan_id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected.session_plan_id ===\n                      item.session_plan_id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected.session_plan_id ===\n                            item.session_plan_id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan.session_plan_id !==\n                        item.session_plan_id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null &&\n                      selectedPlan.session_plan_id === item.session_plan_id && (\n                        <div\n                          onClick={() => setSelectedPlan(null)}\n                          className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                        >\n                          Close\n                        </div>\n                      )}\n                  </div>\n                </div>\n                {selectedPlan !== null &&\n                  selectedPlan.session_plan_id === item.session_plan_id && (\n                    <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                      <table className=\"w-full\">\n                        <thead className=\"bg-blue-50\">\n                          <tr className=\"text-left\">\n                            <th className=\"px-3 py-3\">#</th>\n                            <th>Plan</th>\n                            <th>Start date</th>\n                            <th>Ending date</th>\n                            <th>Status</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"text-sm\">\n                          {selectedPlan !== null &&\n                            selectedPlan.session_plan_id ===\n                              item.session_plan_id &&\n                            selectedPlan.plans.length > 0 &&\n                            item.plans.map((plan, i) => (\n                              <tr\n                                key={i + 1}\n                                className={`${\n                                  isPlansActive(item.plans).find(\n                                    (itm) => itm.type_key === plan.type_key\n                                  ) !== undefined\n                                    ? \"bg-blue-100 text-blue-600 font-bold\"\n                                    : \"\"\n                                } text-left border-b border-blue-50`}\n                              >\n                                <td className=\"px-3 py-1\">{i + 1}</td>\n                                <td>{plan.type_title}</td>\n                                <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                                <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                                <td>{plan.type_status}</td>\n                              </tr>\n                            ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChooseSession;\n","import React from \"react\";\nimport {\n  BsCheckSquareFill,\n  BsCheckCircleFill,\n  BsArrowRightSquareFill,\n  BsArrowRightCircleFill,\n} from \"react-icons/bs\";\nimport { QuestionAnswersStore } from \"../../../actions\";\nimport {\n  CalculatedMultipleChoiceQuestionAnswerInterface,\n  MatchingQuestionAnswerInterface,\n  MultipleChoiceQuestionAnswerInterface,\n  QuestionInterface,\n  questionType,\n  TrueFalseQuestionAnswerInterface,\n  NumericalQuestionAnswerInterface,\n  ShortAnswerQuestionAnswerInterface,\n  SimpleCalculatedQuestionAnswerInterface,\n  QuestionLanguage,\n  LanguageInterface,\n  EssayQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionAnswerFormat,\n} from \"../../../interfaces\";\nimport {\n  toCalculatedMultipleChoice,\n  toEssay,\n  toMatching,\n  toMultipleChoice,\n  toNumerical,\n  toShortAnswer,\n  toSimpleCalculated,\n  toTrueFalse,\n} from \"../QuestionDetails/ConvertingAnswers\";\nimport { findQuestionType } from \"../utils/utils\";\nimport {\n  QuestionForHybrid,\n  questionTypeElementsType,\n} from \"@mastrecruit/common\";\nimport { findQType } from \"./FindAnswerHybrid\";\n\ninterface FindAnswerProps {\n  question: QuestionInterface;\n  answersList: QuestionAnswersStore[];\n  selectedLanguage: QuestionLanguage | LanguageInterface;\n  questionTypes: questionType[];\n  showCorrectAnswer: boolean;\n  subQuestionType?: questionTypeElementsType;\n  reference?: number;\n  onClick: () => void;\n}\n\nconst resultDiv = (\n  user_answers: QuestionAnswerFormat[],\n  question_answers: QuestionAnswerFormat[],\n  props: FindAnswerProps\n): JSX.Element => {\n  switch (\n    props.subQuestionType === undefined\n      ? findQuestionType(props.question.type, props.questionTypes)\n      : props.subQuestionType\n  ) {\n    case questionTypeElementsType.MultipleChoice:\n      const userAnswer: MultipleChoiceQuestionAnswerInterface[] =\n        toMultipleChoice(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswer\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl text-blue-600\">\n                  <BsCheckSquareFill />\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl text-blue-600\">\n                        <BsCheckSquareFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.SingleMultiple:\n      const userAnswerSingle: MultipleChoiceQuestionAnswerInterface[] =\n        toMultipleChoice(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerSingle\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl text-blue-600\">\n                  <BsCheckCircleFill />\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl text-blue-600\">\n                        <BsCheckCircleFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n\n    case questionTypeElementsType.CalculatedMultipleChoice:\n      const userAnswer1: CalculatedMultipleChoiceQuestionAnswerInterface[] =\n        toCalculatedMultipleChoice(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswer1\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl text-blue-600\">\n                  <BsCheckSquareFill />\n                </div>\n                <div className=\"text-base font-normal text-gray-500\">\n                  {item.value.length > 1 ? (\n                    <>\n                      Between{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[0]}\n                      </span>{\" \"}\n                      and{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[1]}\n                      </span>\n                    </>\n                  ) : (\n                    <span className=\"text-gray-700\">\n                      {item.value[0].toString()}\n                    </span>\n                  )}\n                </div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl text-blue-600\">\n                        <BsCheckSquareFill />\n                      </div>\n                      <div className=\"text-base font-normal text-gray-500\">\n                        {item.value.length > 1 ? (\n                          <>\n                            Between{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[0]}\n                            </span>{\" \"}\n                            and{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[1]}\n                            </span>\n                          </>\n                        ) : (\n                          <span className=\"text-blue-600\">\n                            {item.value[0].toString()}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n\n    case questionTypeElementsType.Matching:\n      const userAnswerMatch: MatchingQuestionAnswerInterface[] =\n        toMatching(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerMatch.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 font-bold border border-blue-300\"\n            >\n              <div className=\"text-xl text-blue-600 font-bold p-3 pr-1 md:pr-3\">\n                <div className=\"h-8 w-8 p-3 bg-blue-100 rounded-full flex items-center justify-center\">\n                  {i + 1}\n                </div>\n              </div>\n              <div className=\"flex flex-col lg:flex-row items-center gap-3 w-full h-full truncate\">\n                <div\n                  className=\"w-full mt-3 lg:mb-0\"\n                  dangerouslySetInnerHTML={{ __html: item.value }}\n                ></div>\n                <div className=\"flex flex-row items-center gap-3 w-full mb-3 lg:mb-0\">\n                  <div className=\"text-3xl text-gray-500 group-hover:text-blue-600\">\n                    <BsArrowRightSquareFill />\n                  </div>\n                  <div\n                    className=\"w-full mr-2\"\n                    dangerouslySetInnerHTML={{ __html: item.status }}\n                  ></div>\n                </div>\n              </div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 font-bold border border-blue-300\"\n                  >\n                    <div className=\"text-xl text-blue-600 font-bold p-3 pr-1 md:pr-3\">\n                      <div className=\"h-8 w-8 p-3 bg-blue-100 rounded-full flex items-center justify-center\">\n                        {i + 1}\n                      </div>\n                    </div>\n                    <div className=\"flex flex-col lg:flex-row items-center gap-3 w-full h-full truncate\">\n                      <div\n                        className=\"w-full mt-3 lg:mb-0\"\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                      <div className=\"flex flex-row items-center gap-3 w-full mb-3 lg:mb-0\">\n                        <div className=\"text-3xl text-gray-500 group-hover:text-blue-600\">\n                          <BsArrowRightSquareFill />\n                        </div>\n                        <div\n                          className=\"w-full mr-2\"\n                          dangerouslySetInnerHTML={{ __html: item.status }}\n                        ></div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.TrueFalse:\n      const userAnswerTureFalse: TrueFalseQuestionAnswerInterface[] =\n        toTrueFalse(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerTureFalse\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl\">\n                  <BsArrowRightCircleFill />\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl\">\n                        <BsArrowRightCircleFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.Numeric:\n      const userAnswerNumerical: NumericalQuestionAnswerInterface[] =\n        toNumerical(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerNumerical.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div className=\"text-gray-600 text-base font-normal\">\n                {item.value.length > 1 ? (\n                  <>\n                    Between{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[0]}\n                    </span>{\" \"}\n                    and{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[1]}\n                    </span>\n                  </>\n                ) : (\n                  item.value.length > 0 && (\n                    <span className=\"text-gray-700\">\n                      {item.value[0].toString()}\n                    </span>\n                  )\n                )}\n              </div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div className=\"text-gray-600 text-base font-normal\">\n                      {item.value.length > 1 ? (\n                        <>\n                          Between{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[0] - item.value[1]}\n                          </span>{\" \"}\n                          and{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[0] + item.value[1]}\n                          </span>\n                        </>\n                      ) : (\n                        item.value.length > 0 && (\n                          <span className=\"text-blue-700\">\n                            {item.value[0].toString()}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.SimpleCalculate:\n      const userAnswerSimpleCalculate: SimpleCalculatedQuestionAnswerInterface[] =\n        toSimpleCalculated(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerSimpleCalculate.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div className=\"text-gray-600 text-base font-normal\">\n                {item.value.length > 1 ? (\n                  <>\n                    Between{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[0]}\n                    </span>{\" \"}\n                    and{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[1]}\n                    </span>\n                  </>\n                ) : (\n                  item.value.length > 0 && (\n                    <span className=\"text-gray-700\">\n                      {item.value[0].toString()}\n                    </span>\n                  )\n                )}\n              </div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div className=\"text-gray-600 text-base font-normal\">\n                      {item.value.length > 1 ? (\n                        <>\n                          Between{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[0]}\n                          </span>{\" \"}\n                          and{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[1]}\n                          </span>\n                        </>\n                      ) : (\n                        item.value.length > 0 && (\n                          <span className=\"text-blue-700\">\n                            {item.value[0].toString()}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.ShortAnswer:\n      const userAnswerShortAnswer: ShortAnswerQuestionAnswerInterface[] =\n        toShortAnswer(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerShortAnswer.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: item.value,\n                }}\n              ></div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: item.value,\n                      }}\n                    ></div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    // Essay\n    case questionTypeElementsType.Essay:\n      const userAnswerEssay: EssayQuestionAnswerInterface[] =\n        toEssay(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerEssay.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: item.value,\n                }}\n              ></div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: item.value,\n                      }}\n                    ></div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.Embedded:\n      return <div></div>;\n    case questionTypeElementsType.Hybrid:\n      return <div></div>;\n    default:\n      return <div className=\"text-blue-600 font-extrabold\">Answer added</div>;\n  }\n};\n\nconst FindAnswer = (props: FindAnswerProps) => {\n  const answer = props.answersList.find(\n    (item) => item.question_id === props.question.question_id\n  );\n  let UserAnswersSel = props.question.question.find(\n    (itm) => itm.language === props.selectedLanguage\n  );\n  if (UserAnswersSel === undefined && props.question.question.length > 0) {\n    UserAnswersSel =\n      props.question.question.find(\n        (itm) => itm.language === props.selectedLanguage\n      ) === undefined\n        ? props.question.question[0]\n        : props.question.question.find(\n            (itm) => itm.language === props.selectedLanguage\n          )!;\n  }\n  if (answer === undefined || UserAnswersSel === undefined) {\n    return (\n      <div className=\"text-yellow-600 font-extrabold text-2xl text-center\">\n        No answer found!\n      </div>\n    );\n  } else {\n    let SubQ = UserAnswersSel.sub_question.find(\n      (itm) => findQType(itm.typeShort) === props.subQuestionType\n    );\n\n    return (\n      <div>\n        {SubQ === undefined\n          ? resultDiv(\n              answer.answers[0].answer,\n              UserAnswersSel.answers[0].answer,\n              props\n            )\n          : answer.answers\n              .filter((itm) => SubQ && itm.reference === SubQ.reference)\n              .map((user_answer) => {\n                const testQ = UserAnswersSel!.answers.find(\n                  (itm) =>\n                    itm._id === user_answer._id &&\n                    itm.reference === user_answer.reference\n                );\n                if (testQ !== undefined) {\n                  return resultDiv(user_answer.answer, testQ.answer, props);\n                } else {\n                  return <div></div>;\n                }\n              })}\n      </div>\n    );\n  }\n};\n\nexport default FindAnswer;\n","import React, { Component } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { claimReasonInterface } from \"../../../interfaces\";\nimport search from \"../../../utils/search\";\n\nexport const claimReasonsData = [\n  { key: 1, reason: \"Not placed (Sinahawe umwanya)\" },\n  {\n    key: 2,\n    reason:\n      \"Not placed with higher marks (Sinahawe umwanya kandi hari abo ndusha twakoze bimwe bawuhawe)\",\n  },\n  {\n    key: 3,\n    reason:\n      \"Want to change district of placement (Nifuza guhindurirwa akarere nahawemo umwanya)\",\n  },\n  {\n    key: 4,\n    reason: \"Rejected offer by mistake (Nibeshye nanga umwanya nahawe)\",\n  },\n  {\n    key: 0,\n    reason: \"None of the above (nta na kimwe muri ibyo byavuzwe haruguru)\",\n  },\n];\n\ntype ChooseReasonProps = {\n  claimReason: claimReasonInterface | null;\n  setClaimReason: (value: claimReasonInterface | null) => void;\n  setChooseClaimReason: (value: boolean) => void;\n  allClaimReasons: claimReasonInterface[];\n};\n\ntype ChooseReasonState = {\n  searchInput: string;\n};\n\nclass ChooseReason extends Component<ChooseReasonProps, ChooseReasonState> {\n  constructor(props: ChooseReasonProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* SEARCH PART */}\n        <div className=\"flex items-center w-full my-1\">\n          <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            value={this.state.searchInput}\n          />\n          <button\n            className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n            type=\"button\"\n            onClick={() => this.props.setChooseClaimReason(false)}\n          >\n            Close\n          </button>\n        </div>\n        {/* END SEARCH PART ///////////////// */}\n\n        <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n          {search(this.props.allClaimReasons, this.state.searchInput).map(\n            (item: claimReasonInterface, index) => (\n              <section key={index.toString() + item.id}>\n                <div\n                  className={`py-1 w-full px-2 hover:bg-gray-100 cursor-pointer ${\n                    this.props.claimReason &&\n                    this.props.claimReason.id === item.id\n                      ? \"border-l-4 border-blue-500 bg-blue-50\"\n                      : \"my-1\"\n                  }`}\n                  onClick={() => {\n                    this.props.setChooseClaimReason(false);\n                    this.props.setClaimReason(item);\n                  }}\n                >\n                  <p className=\"text-base text-black\">{item.reason}</p>\n                </div>\n              </section>\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChooseReason;\n","import React from \"react\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { ClaimGetDocTitle } from \"./ClaimForm\";\n\ntype DocFormViewProps = {\n  thisDoc: DocumentClaimUser;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n};\n\nconst DocFormView: React.FC<DocFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-xl\">\n              {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisDoc.doc_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              ################\n              {/* {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )} */}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n          <div className=\"w-full my-1\">\n            <img\n              src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n              alt=\"doc file\"\n              className={`w-full`}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default DocFormView;\n","import React, { useEffect, useState } from \"react\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport {\n  QuestionAnswerFormat,\n  QuestionAnswerInterface,\n  QuestionInterface,\n  QuestionLanguage,\n  QuestionLanguages,\n  questionType,\n} from \"../../interfaces/index\";\nimport { newAnswer } from \"../../containers/DoExam/DoExam\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  candidateExamStoreInterface,\n  examDataInterface,\n  System,\n  setSelectedExamQuestion,\n  setQuestionLanguage,\n  questionTypesStoreInterface,\n  loadQuestionTypes,\n  QuestionAnswersStore,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { LoadingType } from \"../../components/Loading/LoadingV2\";\nimport {\n  toCalculatedMultipleChoice,\n  toEmbedded,\n  toEssay,\n  toMatching,\n  toMultipleChoice,\n  toNumerical,\n  toShortAnswer,\n  toSimpleCalculated,\n  toTrueFalse,\n} from \"../../containers/DoExam/QuestionDetails/ConvertingAnswers\";\nimport { BiWorld } from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { findQuestionType } from \"../../containers/DoExam/utils/utils\";\nimport MultipleChoice from \"../../containers/DoExam/QuestionDetails/Answers/MultipleChoice\";\nimport TrueFalse from \"../../containers/DoExam/QuestionDetails/Answers/TrueFalse\";\nimport SimpleCalculated from \"../../containers/DoExam/QuestionDetails/Answers/SimpleCalculated\";\nimport Matching from \"../../containers/DoExam/QuestionDetails/Answers/Matching\";\nimport ShortAnswer from \"../../containers/DoExam/QuestionDetails/Answers/ShortAnswer\";\nimport Numerical from \"../../containers/DoExam/QuestionDetails/Answers/Numerical\";\nimport CalculatedMultipleChoice from \"../../containers/DoExam/QuestionDetails/Answers/CalculatedMultipleChoice\";\nimport { Shuffle } from \"../../utils/functions\";\nimport Essay from \"../../containers/DoExam/QuestionDetails/Answers/Essay\";\nimport {\n  QuestionForEmbedded,\n  QuestionForHybrid,\n  questionShortElementsType,\n  questionTypeElementsType,\n  regExEmbedded,\n} from \"@mastrecruit/common\";\nimport Embedded from \"../../containers/DoExam/QuestionDetails/Answers/Embedded\";\nimport Hybrid from \"../../containers/DoExam/QuestionDetails/Answers/Hybrid\";\nimport HybridAnswers from \"../../containers/DoExam/QuestionDetails/Answers/HybridAnswers\";\n\ninterface QuestionDetailsProps {\n  selectedQuestion: QuestionInterface;\n  setSelectedQuestion: (question: QuestionInterface) => void;\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n  questionAnswers: newAnswer[] | undefined;\n  doExam: examDataInterface;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  system: System;\n  setSelectedExamQuestion: (\n    exam_id: string,\n    question_id: string | null\n  ) => void;\n  setQuestionLanguage: (lang: QuestionLanguage) => void;\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  preview: boolean;\n  submitQuestionAnswer: boolean;\n}\n\nconst returnSelect = (\n  data: QuestionAnswerInterface,\n  type: questionShortElementsType | QuestionForEmbedded | QuestionForHybrid,\n  questionAnswers: QuestionAnswerInterface[],\n  addAnswer: (data: QuestionAnswerInterface) => void\n): JSX.Element => {\n  let answers: QuestionAnswerFormat[] = [];\n  for (let answer of data.answer) {\n    answers.push({\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    });\n  }\n  let answerCheck: QuestionAnswerInterface | undefined = questionAnswers.find(\n    (itm) => itm.reference === data.reference\n  );\n  let answered: QuestionAnswerFormat[] = [];\n  if (answerCheck !== undefined) {\n    answered = answerCheck.answer;\n  }\n  if (answers.length > 0) {\n    if (type === QuestionForEmbedded.SingleMultiple) {\n      return (\n        <span className=\"w-max\">\n          <select\n            className={`px-3 py-2 rounded text-base max-w-full border border-gray-300 ${\n              answered.length !== 0 &&\n              answers.find((itm) => itm.id === answered[0].id) !== undefined\n                ? \"text-blue-600 font-bold\"\n                : \"text-gray-700 font-bold\" //Example of condition of changing color\n            }`}\n            value={answered.length === 0 ? \"\" : answered[0].id}\n            onChange={(e) => {\n              let select = answers.find((itm) => itm.id === e.target.value);\n              if (select !== undefined) {\n                addAnswer({\n                  _id: data._id,\n                  reference: data.reference,\n                  answer: [\n                    {\n                      id: select.id,\n                      value: select.value,\n                      status: select.status,\n                    },\n                  ],\n                });\n              } else {\n                alert(\"Invalid choice!\");\n              }\n            }}\n          >\n            <option value={\"\"}>Choose correct answer</option>\n            {answers.map((item, i) => (\n              <option value={item.id} key={i + 1}>\n                {item.value}\n              </option>\n            ))}\n          </select>\n        </span>\n      );\n    } else {\n      return (\n        <span className=\"w-max bg-green-100\">\n          <input\n            value={\n              answered.length === 0\n                ? \"\"\n                : type === QuestionForEmbedded.ShortAnswer\n                ? answered[0].value\n                : answered[0].value[0]\n            }\n            onChange={(e) => {\n              addAnswer({\n                _id: data._id,\n                reference: data.reference,\n                answer: [\n                  {\n                    id: answers[0].id,\n                    value:\n                      type === QuestionForEmbedded.ShortAnswer\n                        ? e.target.value\n                        : [e.target.value],\n                    status: answers[0].status,\n                  },\n                ],\n              });\n            }}\n            type=\"text\"\n            className=\"bg-white px-3 py-1 rounded text-base text-blue-600 font-bold border border-gray-300\"\n          />\n        </span>\n      );\n    }\n  } else {\n    return <div>Question not valid!</div>;\n  }\n};\n\nexport const EmbeddedQuestion = (\n  selectedQuestion: QuestionInterface,\n  questionTypes: questionType[] | null,\n  language: QuestionLanguage,\n  questionAnswers: QuestionAnswersStore[],\n  addAnswer: (data: QuestionAnswerInterface) => void\n): JSX.Element => {\n  let newTextResult = [];\n  // Testing Question\n  let question = selectedQuestion.question.find(\n    (itm) => itm.language === language\n  );\n  if (\n    findQuestionType(selectedQuestion.type, questionTypes) !== null &&\n    findQuestionType(selectedQuestion.type, questionTypes) ===\n      questionTypeElementsType.Embedded\n  ) {\n    let answeredQuestions: QuestionAnswerInterface[] = [];\n    if (question !== undefined) {\n      let userQuestionAnswers = questionAnswers.find(\n        (itm) => itm.question_id === selectedQuestion.question_id\n      );\n      if (userQuestionAnswers !== undefined) {\n        answeredQuestions = userQuestionAnswers.answers;\n      }\n\n      var answers = question.answers;\n      var originalText = question.description.split(\" \");\n      // var newTexts = question.description.match(regExEmbedded);\n\n      for (let check of originalText) {\n        let test = answers.find((itm) => itm.reference === parseInt(check[1]));\n        if (test !== undefined) {\n          // Find type of subQuestion\n          let type = question.sub_question.find(\n            (itm) => itm.reference === parseInt(check[1])\n          );\n          if (type !== undefined) {\n            newTextResult.push(\n              returnSelect(test, type.typeShort, answeredQuestions, addAnswer)\n            );\n          }\n        } else {\n          newTextResult.push(check);\n        }\n      }\n    }\n  }\n  return (\n    <div className=\"w-full text-base font-semibold mt-2\">\n      {newTextResult.map((item, i) => (\n        <span key={i + 1} className=\"mr-1\">\n          {item}\n        </span>\n      ))}\n    </div>\n  );\n};\n\nconst _QuestionPreview = (props: QuestionDetailsProps) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [selectLang, setSelectLang] = useState<boolean>(false);\n  const [selectedLanguage, setSelectedLanguage] = useState(\n    props.selectedQuestion.question[0].language\n  );\n\n  const filterLanguages = () => {\n    let langs: {\n      key: QuestionLanguage;\n      value: string;\n    }[] = [];\n    for (let langItem of props.selectedQuestion.question) {\n      let testLangQ = QuestionLanguages.find(\n        (l) => l.key === langItem.language\n      );\n      if (testLangQ !== undefined) {\n        langs = [...langs, testLangQ];\n      }\n    }\n    return langs;\n  };\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      props.questionTypes.questionTypes.length === 0\n    ) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [props]);\n  return (\n    <div className=\"bg-gray-800 h-full\">\n      {loading === true ? (\n        <div className=\"bg-gray-200 px-3 py-2 rounded my-2 overflow-y-auto pb-80 md:pb-60\">\n          <div className=\"rounded bg-white px-4 py-4 mt-5 mx-4\">\n            <div className=\"text-2xl mx-4 mb-3\">Loading...</div>\n            <Loading type={LoadingType.white} />\n          </div>\n        </div>\n      ) : (\n        <div className=\"bg-gray-200 px-3 py-2 my-2 overflow-y-auto pb-40 md:pb-10\">\n          <div className=\"flex flex-row gap-2 mt-2\">\n            <div className=\"flex flex-row justify-between w-full\">\n              {props.selectedQuestion.question.find(\n                (itm) => itm.language === selectedLanguage\n              ) && (\n                <div className=\"text-md flex flex-col w-full\">\n                  <div className=\"flex flex-row justify-between w-full\">\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: props.selectedQuestion.question.find(\n                          (itm) => itm.language === selectedLanguage\n                        )!.title,\n                      }}\n                      className=\"text-sm text-gray-600 mb-2\"\n                    ></div>\n\n                    {/* Languages */}\n                    <div className=\"flex flex-row gap-2\">\n                      <div className=\"px-3 py-1 rounded-full flex items-center justify-center text-base font-bold bg-white text-blue-800\">\n                        {props.selectedQuestion.marks} marks\n                      </div>\n                      <div className=\"bg-white rounded h-10 hover:bg-white cursor-pointer\">\n                        <div\n                          onClick={() => setSelectLang(!selectLang)}\n                          className=\"flex flex-row items-center gap-2\"\n                        >\n                          <div className=\"rounded-l\">\n                            <BiWorld className=\"text-2xl my-2 ml-2\" />\n                          </div>\n                          <div\n                            className=\"flex flex-col\"\n                            style={{ width: \"97px\" }}\n                          >\n                            <span className=\"text-xs font-bold italic text-gray-700\">\n                              Language\n                            </span>\n                            <span\n                              title={\n                                filterLanguages().find(\n                                  (itm) => itm.key === selectedLanguage\n                                )?.value\n                              }\n                              className=\"text-sm font-bold text-blue-600 truncate\"\n                              style={{ width: \"97px\" }}\n                            >\n                              {\n                                filterLanguages().find(\n                                  (itm) => itm.key === selectedLanguage\n                                )?.value\n                              }\n                            </span>\n                          </div>\n                          <div\n                            className={`${\n                              selectLang === true\n                                ? \"bg-yellow-800 text-white\"\n                                : \"bg-gray-50 hover:bg-blue-600\"\n                            } h-10 rounded-r border-l border-gray-300 flex flex-row items-center justify-center cursor-pointer hover:text-white hover:border-white`}\n                          >\n                            {selectLang === true ? (\n                              <FaTimes className=\"text-xl my-2 mx-2\" />\n                            ) : (\n                              <AiFillCaretDown className=\"text-xl mb-1 mt-2 mx-2\" />\n                            )}\n                          </div>\n                        </div>\n                        {selectLang === true && (\n                          <div\n                            className=\"relative rounded overflow-hidden\"\n                            style={{ width: \"182px\" }}\n                          >\n                            <div className=\"bg-blue-700 animate__animated animate__fadeIn animate__faster rounded-b w-full right-0 flex flex-col\">\n                              {filterLanguages().map((item, i) => (\n                                <span\n                                  onClick={() => {\n                                    props.setQuestionLanguage(item.key);\n                                    setSelectLang(!selectLang);\n                                    setSelectedLanguage(item.key);\n                                  }}\n                                  key={i + 1}\n                                  className={`flex flex-row items-center animate__animated animate__fadeInDown animate__faster text-white text-sm px-2 py-2 border-2 ${\n                                    selectedLanguage === item.key\n                                      ? \"bg-blue-800 font-extrabold border-blue-800\"\n                                      : \"bg-blue-500 text-blue-100 border-blue-500 hover:bg-blue-700 hover:border-blue-700\"\n                                  }`}\n                                >\n                                  {selectedLanguage === item.key ? (\n                                    <MdRadioButtonChecked className=\"text-xl mr-2\" />\n                                  ) : (\n                                    <MdRadioButtonUnchecked className=\"text-xl mr-2\" />\n                                  )}{\" \"}\n                                  {item.value}\n                                </span>\n                              ))}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  {props.selectedQuestion.question_id !== null &&\n                  findQuestionType(\n                    props.selectedQuestion.type,\n                    props.questionTypes.questionTypes\n                  ) !== null &&\n                  findQuestionType(\n                    props.selectedQuestion.type,\n                    props.questionTypes.questionTypes\n                  ) === questionTypeElementsType.Embedded ? (\n                    EmbeddedQuestion(\n                      props.selectedQuestion,\n                      props.questionTypes.questionTypes,\n                      selectedLanguage,\n                      props.candidateExam.question_answers,\n                      () => {}\n                    )\n                  ) : (\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: props.selectedQuestion.question.find(\n                          (itm) => itm.language === selectedLanguage\n                        )!.description,\n                      }}\n                      className=\"text-lg text-gray-800 font-bold mt-2\"\n                    ></div>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n          <div\n            className={`my-4 py-2 px-2 ${\n              props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              (findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.Embedded ||\n                findQuestionType(\n                  props.selectedQuestion.type,\n                  props.questionTypes.questionTypes\n                ) === questionTypeElementsType.Hybrid)\n                ? \"\"\n                : \"bg-white\"\n            } rounded`}\n            onClick={() => selectLang === true && setSelectLang(false)}\n          >\n            {/* Single and Multiple choice */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              (findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.MultipleChoice ||\n                findQuestionType(\n                  props.selectedQuestion.type,\n                  props.questionTypes.questionTypes\n                ) === questionTypeElementsType.SingleMultiple) && (\n                <MultipleChoice\n                  type={findQuestionType(\n                    props.selectedQuestion.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toMultipleChoice(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n            {/* True and False */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.TrueFalse && (\n                <TrueFalse\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toTrueFalse(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n            {/* Matching Question */}\n            {/* {console.log(\n              \"Type: \",\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              )\n            )} */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.Matching && (\n                <Matching\n                  selectedLanguage={selectedLanguage}\n                  selectedExam={props.candidateExam.candidate_exam}\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toMatching(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    shuffledAnswers: Shuffle(\n                      toMatching(\n                        props.selectedQuestion.question.find(\n                          (itm) => itm.language === selectedLanguage\n                        )!.answers[0].answer\n                      )\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n            {/* Simple Calculated */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.SimpleCalculate && (\n                <SimpleCalculated\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toSimpleCalculated(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n            {/* Short Answer */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.ShortAnswer && (\n                <ShortAnswer\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toShortAnswer(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n\n            {/* Numerical */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.Numeric && (\n                <Numerical\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toNumerical(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n            {/* Calculated Multiple choice */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.CalculatedMultipleChoice && (\n                <CalculatedMultipleChoice\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toCalculatedMultipleChoice(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n            {/* Essay answer */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.Essay && (\n                <Essay\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toEssay(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n            {/* Hybrid answer unique: it combines th above questions */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.Hybrid && (\n                <HybridAnswers\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers,\n                  }}\n                  wholeQuestion={props.selectedQuestion.question.find(\n                    (itm) => itm.language === selectedLanguage\n                  )}\n                  answerQuestionFn={props.answerQuestionFn}\n                  selectedLanguage={selectedLanguage}\n                  selectedExam={props.candidateExam.candidate_exam}\n                />\n              )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  doExam,\n  candidateExam,\n  system,\n  questionTypes,\n}: StoreState): {\n  auth: Auth;\n  doExam: examDataInterface;\n  candidateExam: candidateExamStoreInterface;\n  system: System;\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return {\n    auth: auth,\n    doExam: doExam,\n    candidateExam: candidateExam,\n    system: system,\n    questionTypes: questionTypes,\n  };\n};\n\nconst QuestionPreview = connect(mapStateToProps, {\n  setSelectedExamQuestion,\n  setQuestionLanguage,\n  loadQuestionTypes,\n})(_QuestionPreview);\n\nexport default QuestionPreview;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getRejectedApplicants = (\n  applicationData: claimApplicationsInterface[]\n): claimApplicationsInterface[] => {\n  return applicationData.filter(\n    (item) => item.application_status === ApplicationStates.Rejected\n  );\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormApplicationListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateApplications: claimApplicationsInterface[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n};\n\nconst FormApplicationList: React.FC<FormApplicationListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateApplications, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {getRejectedApplicants(props.candidateApplications).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.application_id\n          )\n        ).length > 0 ? (\n          searchApplication(\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ),\n            searchInput\n          ).map((item, index) => (\n            <div\n              className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                props.claimFileId === item.application_id &&\n                \"bg-blue-50 border-l-4 border-blue-500\"\n              }`}\n              key={index + item.application_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.application_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.position.position_title}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.application_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormApplicationList;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { ClaimGetDocTitle, isClaimAllowed } from \"./ClaimForm\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { CategorySubcategoryData } from \"../../../interfaces/candidatesInterfaces\";\nimport { CandidateClaimInterface } from \"../../../interfaces\";\nimport { ApplicationSession } from \"../../../actions\";\n\nexport interface DocumentTitleInterface {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  doc_title: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport const DocumentTitleData = (\n  documentData: DocumentClaimUser[],\n  documentCategories: DocumentReducerInterface\n): DocumentTitleInterface[] | [] => {\n  let documentTemp: DocumentTitleInterface[] = [];\n  for (let i in documentData) {\n    documentTemp.push({\n      category_id: documentData[i].category_id,\n      company: documentData[i].company,\n      description: documentData[i].description,\n      email: documentData[i].email,\n      end_year: documentData[i].end_year,\n      files: documentData[i].files,\n      names: documentData[i].names,\n      phone_number: documentData[i].phone_number,\n      school: documentData[i].school,\n      school_id: documentData[i].school_id,\n      start_year: documentData[i].start_year,\n      sub_category_id: documentData[i].sub_category_id,\n      title: documentData[i].title,\n      year: documentData[i].year,\n      validation_status: documentData[i].validation_status,\n      validated_by: documentData[i].validated_by,\n      doc_id: documentData[i].doc_id,\n      doc_title: ClaimGetDocTitle(documentCategories, documentData[i]).main,\n      category_subcategory_data: documentData[i].category_subcategory_data,\n    });\n  }\n  return documentTemp;\n};\n\nconst getRejectedDocuments = (\n  documentData: DocumentClaimUser[]\n): DocumentClaimUser[] => {\n  console.log({\n    rejected: documentData.filter(\n      (item) => item.validation_status === \"rejected\"\n    ),\n  });\n  return documentData.filter((item) => item.validation_status === \"rejected\");\n};\n\nexport const searchDocuments = (\n  objList: DocumentTitleInterface[],\n  text: any\n): DocumentTitleInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter(\n    (product) =>\n      product.doc_title.toString().toLowerCase().indexOf(text.toLowerCase()) >\n      -1\n  );\n};\n\ntype FormDocumentListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateDocuments: DocumentClaimUser[];\n  documentCategories: DocumentReducerInterface;\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n};\n\nconst FormDocumentList: React.FC<FormDocumentListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.candidateDocuments.filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.doc_id\n          )\n        ).length > 0 ? (\n          searchDocuments(\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ),\n            searchInput\n          ).map((doc, index) => (\n            <section key={index + doc.doc_id}>\n              <div\n                className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                  props.claimFileId === doc.doc_id &&\n                  \"bg-blue-50 border-l-4 border-blue-500\"\n                }`}\n              >\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseClaimFile(false);\n                    props.setClaimFileId(doc.doc_id);\n                  }}\n                >\n                  <p className=\"text-base font-medium text-black\">\n                    {ClaimGetDocTitle(props.documentCategories, doc).main}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => {\n                    props.viewThisFile === doc.doc_id\n                      ? props.setViewThisFile(\"\")\n                      : props.setViewThisFile(doc.doc_id);\n                  }}\n                >\n                  {props.viewThisFile === doc.doc_id ? \"Close\" : \"View\"}\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormDocumentList;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { updateSessionPlan } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  allPlanTypes,\n  PlansInterface,\n  PlansTypeInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { DATE, errorToText } from \"../../../utils/functions\";\n\nexport const isActivationAllowed = (thisPlans: PlansInterface): boolean => {\n  let today: Date = new Date(),\n    end_date = new Date(thisPlans.end_date);\n  if (end_date.getTime() >= today.getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport const getPlanTypeByKey = (\n  type_key: PlansTypeKeys\n): PlansTypeInterface | undefined => {\n  return allPlanTypes.find((item) => item.type_key === type_key);\n};\n\nexport const isPlanActive = (\n  viewThisSession: SessionPlanInterface,\n  thisPlan: PlansInterface\n): \"OPEN\" | \"CLOSED\" | \"WAITING\" => {\n  if (viewThisSession.is_active) {\n    let today = new Date(),\n      planEndDate = new Date(thisPlan.end_date),\n      planStartDate = new Date(thisPlan.start_date);\n    if (\n      planEndDate.getTime() >= today.getTime() &&\n      planStartDate.getTime() <= today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"OPEN\";\n    } else if (\n      planStartDate.getTime() > today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"WAITING\";\n    }\n  }\n  return \"CLOSED\";\n};\n\ntype SessionDetailsProps = {\n  viewThisSession: SessionPlanInterface;\n  setViewThisSession: (data: SessionPlanInterface) => void;\n\n  // REDUX ----------------\n  updateSessionPlan: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype SessionDetailsState = {\n  loadingRequest: string;\n};\n\nexport class SessionDetails extends Component<\n  SessionDetailsProps,\n  SessionDetailsState\n> {\n  constructor(props: SessionDetailsProps) {\n    super(props);\n\n    this.state = {\n      loadingRequest: \"\",\n    };\n  }\n\n  handlePlanActivation = async (\n    session: SessionPlanInterface,\n    thisPlan: PlansInterface\n  ) => {\n    const newState: \"open\" | \"close\" = session.is_active ? \"close\" : \"open\";\n\n    if (!window.confirm(`Are you sure you want to ${newState} this plan?`)) {\n      return true;\n    }\n\n    if (!isActivationAllowed(thisPlan)) {\n      this.props.PushPopupAlert({\n        title: `Opening/Closing plan which has been expired is not allowed!`,\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    let newData: SessionPlanInterface = {\n      session_plan_name: session.session_plan_name,\n      period: session.period,\n      is_active: session.is_active,\n      plans: [],\n      createdAt: session.createdAt,\n      updatedAt: session.updatedAt,\n      session_plan_id: session.session_plan_id,\n    };\n    for (const key in session.plans) {\n      if (Object.prototype.hasOwnProperty.call(session.plans, key)) {\n        const element = session.plans[key];\n        if (thisPlan.type_key === element.type_key) {\n          if (thisPlan.type_status === SessionPlanTypeStatus.OPEN) {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.CLOSED,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          } else {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.OPEN,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          }\n        } else {\n          newData.plans.push(element);\n        }\n      }\n    }\n\n    console.log(\"====================================\");\n    console.log({ newData });\n    console.log(\"====================================\");\n\n    this.setState({ loadingRequest: thisPlan.type_key });\n    try {\n      const res = await axios.put<SessionPlanInterface>(\n        `${API.CLAIMING}/session/${session.session_plan_id}`,\n        newData\n      );\n      this.props.updateSessionPlan(res.data);\n      this.props.setViewThisSession(res.data);\n      this.props.PushPopupAlert({\n        title: `Session ${newState}d successfully`,\n        theme: PopupAlertTheme.info,\n      });\n      this.setState({ loadingRequest: \"\" });\n      console.log(\"updateSessionPlan: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.warning,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <table className=\"w-full bg-white shadow p-5\" id=\"session_content\">\n        <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n          <tr>\n            <td className=\"p-2\">#</td>\n            <td className=\"p-2\">Plan Type</td>\n            <td className=\"p-2\">Start Date</td>\n            <td className=\"p-2\">End date</td>\n            {this.props.viewThisSession.is_active && (\n              <td className=\"p-2\" colSpan={2}>\n                Status\n              </td>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {/* WHILE DATA FOUND ====================== */}\n          {this.props.viewThisSession.plans.map((item, index) => (\n            <tr\n              key={index + item._id}\n              className={`border-b border-gray-200 hover:bg-gray-100`}\n            >\n              <td className=\"p-2 text-left whitespace-nowrap\">{index + 1}</td>\n              <td className=\"p-2 text-left\">\n                <span className=\"text-lg\">\n                  {getPlanTypeByKey(item.type_key) &&\n                    capitalizeFirstLetter(\n                      getPlanTypeByKey(item.type_key)!.type_title\n                    )}\n                </span>\n              </td>\n              <td className=\"p-2 text-left\">{DATE(item.start_date)}</td>\n              <td className=\"p-2 text-left\">{DATE(item.end_date)}</td>\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isPlanActive(this.props.viewThisSession, item) === \"OPEN\" ? (\n                    <span className={`px-2 py-1 font-semibold text-green-700`}>\n                      Open\n                    </span>\n                  ) : isPlanActive(this.props.viewThisSession, item) ===\n                    \"WAITING\" ? (\n                    <span className={`px-2 py-1 font-semibold text-gray-700`}>\n                      Waiting\n                    </span>\n                  ) : (\n                    <span className={`px-2 py-1 font-semibold text-red-700`}>\n                      Closed\n                    </span>\n                  )}\n                </td>\n              )}\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isActivationAllowed(item) && (\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <div\n                        className={`relative ${\n                          this.state.loadingRequest.length > 0\n                            ? \"cursor-not-allowed\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title={\n                          item.type_status === SessionPlanTypeStatus.OPEN\n                            ? \"Deactivating session\"\n                            : \"Activating session\"\n                        }\n                        onClick={() =>\n                          this.state.loadingRequest.length <= 0 &&\n                          this.handlePlanActivation(\n                            this.props.viewThisSession,\n                            item\n                          )\n                        }\n                      >\n                        <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                        <span\n                          className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                            item.type_status === SessionPlanTypeStatus.CLOSED\n                              ? \"bg-red-500\"\n                              : \"bg-green-500 transform translate-x-full\"\n                          }`}\n                        ></span>\n                      </div>\n                      {this.state.loadingRequest === item.type_key && (\n                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                      )}\n                    </div>\n                  )}\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default connect(null, {\n  updateSessionPlan,\n  PushPopupAlert,\n})(SessionDetails);\n","import React, { useEffect } from \"react\";\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from \"react-icons/im\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  MultipleChoiceQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n} from \"../../../../interfaces/question\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface MultipleChoiceProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: MultipleChoiceQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst MultipleChoice = (props: MultipleChoiceProps) => {\n  const checkAnswer = (\n    item: MultipleChoiceQuestionAnswerInterface\n  ): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.status === true) {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n\n  const addAnswerItemFn = (\n    newAnswers: MultipleChoiceQuestionAnswerInterface[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.answerQuestionFn({\n        question_id: props.selectedQuestionAnswer.question_id,\n        status: false,\n        answers: [\n          {\n            _id: questionAnswer._id,\n            reference: questionAnswer.reference,\n            answer: newAnswers,\n          },\n        ],\n      });\n    }\n  };\n  const addAnswer = (\n    // Problem here!\n    item: MultipleChoiceQuestionAnswerInterface,\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      let selAns = oldAnswers.answers.find(\n        (tester) =>\n          tester.reference ===\n          props.selectedQuestionAnswer.selectedAns.reference\n      );\n      if (selAns !== undefined) {\n        // Check type of question\n        let temp: MultipleChoiceQuestionAnswerInterface[] = [];\n        if (props.type === questionTypeElementsType.SingleMultiple) {\n          for (let t of selAns.answer) {\n            temp = [\n              ...temp,\n              {\n                id: t.id,\n                value: t.value,\n                status: false,\n              },\n            ];\n          }\n          addAnswerItemFn(temp, props.selectedQuestionAnswer.selectedAns);\n        }\n        let newAnswersMultiple: MultipleChoiceQuestionAnswerInterface[] = [];\n\n        for (let xItem of temp.length === 0 ? selAns.answer : temp) {\n          if (xItem.id === item.id) {\n            newAnswersMultiple = [\n              ...newAnswersMultiple,\n              {\n                id: xItem.id,\n                value: xItem.value,\n                status:\n                  props.type === questionTypeElementsType.SingleMultiple\n                    ? true\n                    : !xItem.status,\n              },\n            ];\n          } else {\n            newAnswersMultiple = [...newAnswersMultiple, xItem];\n          }\n\n          addAnswerItemFn(\n            newAnswersMultiple,\n            props.selectedQuestionAnswer.selectedAns\n          );\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        let newAnswers: MultipleChoiceQuestionAnswerInterface[] = [];\n        for (let a of props.selectedQuestionAnswer.answers) {\n          newAnswers = [\n            ...newAnswers,\n            {\n              id: a.id,\n              value: a.value,\n              status: false,\n            },\n          ];\n        }\n\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: newAnswers,\n              },\n            ],\n          });\n      }\n    }\n  }, [props]);\n  return (\n    <div>\n      {props.selectedQuestionAnswer !== null &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            title=\"Click to choose this option\"\n            key={i + 1}\n            onClick={() =>\n              addAnswer(item, props.selectedQuestionAnswer.question_id)\n            }\n            className={`px-2 py-2 ${\n              checkAnswer(item) === true\n                ? \"border bg-blue-100 border-white text-blue-600 hover:border-blue-600 rounded font-bold\"\n                : \"border-b bg-white border-gray-100 hover:bg-gray-100\"\n            } flex flex-row justify-left items-center cursor-pointer`}\n          >\n            {checkAnswer(item) === true ? (\n              <>\n                {props.type === questionTypeElementsType.SingleMultiple ? (\n                  <MdRadioButtonChecked className=\"text-2xl\" />\n                ) : (\n                  <ImCheckboxChecked className=\"text-2xl\" />\n                )}\n              </>\n            ) : props.type === questionTypeElementsType.SingleMultiple ? (\n              <MdRadioButtonUnchecked className=\"text-2xl truncate\" />\n            ) : (\n              <ImCheckboxUnchecked className=\"text-2xl\" />\n            )}\n            <div\n              dangerouslySetInnerHTML={{ __html: item.value }}\n              className=\"ml-2\"\n            ></div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default MultipleChoice;\n","import React, { useEffect } from \"react\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n  TrueFalseQuestionAnswerInterface,\n} from \"../../../../interfaces/question\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface TrueFalseProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: TrueFalseQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst TrueFalse = (props: TrueFalseProps) => {\n  const checkAnswer = (item: TrueFalseQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.status === true) {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n  const addAnswerItemFn = (\n    newAnswers: TrueFalseQuestionAnswerInterface[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.answerQuestionFn({\n        question_id: props.selectedQuestionAnswer.question_id,\n        status: false,\n        answers: [\n          {\n            _id: questionAnswer._id,\n            reference: questionAnswer.reference,\n            answer: newAnswers,\n          },\n        ],\n      });\n    }\n  };\n\n  const addAnswer = (\n    //This has a problem\n    item: TrueFalseQuestionAnswerInterface,\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      // Check type of question\n      let selAns = oldAnswers.answers.find(\n        (tester) =>\n          tester.reference ===\n          props.selectedQuestionAnswer.selectedAns.reference\n      );\n      if (selAns !== undefined) {\n        let temp: TrueFalseQuestionAnswerInterface[] = [];\n        for (let t of selAns.answer) {\n          temp = [\n            ...temp,\n            {\n              id: t.id,\n              value: t.value,\n              status: false,\n            },\n          ];\n        }\n        addAnswerItemFn(temp, selAns);\n        let newAnswers: TrueFalseQuestionAnswerInterface[] = [];\n        for (let x of temp.length === 0 ? selAns.answer : temp) {\n          if (x.id === item.id) {\n            newAnswers = [\n              ...newAnswers,\n              {\n                id: item.id,\n                value: item.value,\n                status: !x.status,\n              },\n            ];\n          } else {\n            newAnswers = [...newAnswers, x];\n          }\n        }\n        addAnswerItemFn(newAnswers, selAns);\n      }\n    }\n  };\n\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        let newAnswers: TrueFalseQuestionAnswerInterface[] = [];\n        for (let a of props.selectedQuestionAnswer.answers) {\n          newAnswers = [\n            ...newAnswers,\n            {\n              id: a.id,\n              value: a.value,\n              status: false,\n            },\n          ];\n        }\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: newAnswers,\n              },\n            ],\n          });\n      }\n    }\n  }, [props]);\n\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            key={i + 1}\n            onClick={() =>\n              addAnswer(item, props.selectedQuestionAnswer.question_id)\n            }\n            className={`px-2 py-2 border-b ${\n              checkAnswer(item) === true\n                ? \"border bg-blue-100 border-white text-blue-600 hover:border-blue-600 rounded font-bold\"\n                : \"border-b bg-white border-gray-100 hover:bg-gray-100\"\n            } flex flex-row justify-left items-center cursor-pointer`}\n          >\n            {checkAnswer(item) === true ? (\n              <MdRadioButtonChecked className=\"text-2xl\" />\n            ) : (\n              <MdRadioButtonUnchecked className=\"text-2xl\" />\n            )}\n            <span className=\"ml-2\">{item.value}</span>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default TrueFalse;\n","import React, { useEffect } from \"react\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n  SimpleCalculatedQuestionAnswerInterface,\n} from \"../../../../interfaces/question\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface SimpleCalculatedProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: SimpleCalculatedQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst SimpleCalculated = (props: SimpleCalculatedProps) => {\n  const checkAnswer = (\n    item: SimpleCalculatedQuestionAnswerInterface\n  ): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.value[0] !== \"\") {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n  const addAnswerItemFn = (\n    newAnswers: { id: string; value: string; status: boolean }[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.answerQuestionFn({\n        question_id: props.selectedQuestionAnswer.question_id,\n        status: false,\n        answers: [\n          {\n            _id: questionAnswer._id,\n            reference: questionAnswer.reference,\n            answer: [\n              {\n                id: newAnswers[0].id,\n                value: [newAnswers[0].value],\n                status: newAnswers[0].status,\n              },\n            ],\n          },\n        ],\n      });\n    }\n  };\n  const addAnswer = (\n    item: { id: string; value: string; status: boolean },\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      // Check type of question\n      addAnswerItemFn(\n        [\n          {\n            id: props.selectedQuestionAnswer.selectedAns.answer[0].id,\n            value: item.value,\n            status: props.selectedQuestionAnswer.selectedAns.answer[0].status,\n          },\n        ],\n        props.selectedQuestionAnswer.selectedAns\n      );\n    }\n  };\n  const answeredValue = () => {\n    let answer = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    let checkB: QuestionAnswerInterface | undefined = undefined;\n    checkB =\n      answer === undefined\n        ? undefined\n        : answer.answers.find(\n            (tes) =>\n              tes.reference ===\n              props.selectedQuestionAnswer.selectedAns.reference\n          );\n    return answer !== undefined && checkB !== undefined\n      ? checkB.answer.length !== 0 && checkB.answer[0].value[0]\n      : \"\";\n  };\n\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: [\n                  {\n                    id: props.selectedQuestionAnswer.answers[0].id,\n                    value: [\"\"],\n                    status: props.selectedQuestionAnswer.answers[0].status,\n                  },\n                ],\n              },\n            ],\n          });\n      }\n    }\n  }, [props]);\n\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            key={i + 1}\n            className={`-mx-2 -my-2 flex flex-col justify-left rounded`}\n          >\n            <input\n              onChange={(e) => {\n                addAnswer(\n                  {\n                    id: item.id,\n                    value: e.target.value,\n                    status: item.status,\n                  },\n                  props.selectedQuestionAnswer.question_id\n                );\n              }}\n              type=\"text\"\n              value={answeredValue()}\n              className={`px-3 py-2 rounded focus:outline-none focus:border-none ${\n                checkAnswer(item) === true\n                  ? \"border-2 text-blue-600 font-bold bg-white border-blue-600\"\n                  : \"border text-gray-700 border-gray-500 bg-gray-50\"\n              }`}\n            />\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default SimpleCalculated;\n","import React, { useEffect } from \"react\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n  ShortAnswerQuestionAnswerInterface,\n} from \"../../../../interfaces/question\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface ShortAnswerProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: ShortAnswerQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst ShortAnswer = (props: ShortAnswerProps) => {\n  const checkAnswer = (item: ShortAnswerQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.value !== \"\") {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n  const addAnswerItemFn = (\n    newAnswers: ShortAnswerQuestionAnswerInterface[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.answerQuestionFn({\n        question_id: props.selectedQuestionAnswer.question_id,\n        status: false,\n        answers: [\n          {\n            _id: questionAnswer._id,\n            reference: questionAnswer.reference,\n            answer: newAnswers,\n          },\n        ],\n      });\n    }\n  };\n  const addAnswer = (\n    item: { id: string; value: string; status: boolean },\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      // Check type of question\n      addAnswerItemFn(\n        [\n          {\n            id: props.selectedQuestionAnswer.selectedAns.answer[0].id,\n            value: item.value,\n            status: props.selectedQuestionAnswer.selectedAns.answer[0].status,\n          },\n        ],\n        props.selectedQuestionAnswer.selectedAns\n      );\n    }\n  };\n  const answeredValue = () => {\n    let answer = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    let checkB: QuestionAnswerInterface | undefined = undefined;\n    checkB =\n      answer === undefined\n        ? undefined\n        : answer.answers.find(\n            (tes) =>\n              tes.reference ===\n              props.selectedQuestionAnswer.selectedAns.reference\n          );\n    return answer !== undefined && checkB !== undefined\n      ? checkB.answer.length !== 0 && checkB.answer[0].value\n      : \"\";\n  };\n\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: [\n                  {\n                    id: props.selectedQuestionAnswer.answers[0].id,\n                    value: \"\",\n                    status: props.selectedQuestionAnswer.answers[0].status,\n                  },\n                ],\n              },\n            ],\n          });\n      }\n    }\n  }, [props]);\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer === undefined ? (\n        <div\n          className={`-mx-2 -my-2 flex flex-col justify-left rounded cursor-pointer`}\n        >\n          <textarea\n            value={\"\"}\n            className={`px-3 py-2 rounded focus:outline-none focus:border-none border text-gray-700 border-gray-500 bg-gray-50`}\n            style={{ minHeight: \"80px\" }}\n          ></textarea>\n        </div>\n      ) : (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            key={i + 1}\n            className={`-mx-2 -my-2 flex flex-col justify-left rounded cursor-pointer`}\n          >\n            <textarea\n              onChange={(e) => {\n                addAnswer(\n                  {\n                    id: item.id,\n                    value: e.target.value,\n                    status: item.status,\n                  },\n                  props.selectedQuestionAnswer.question_id\n                );\n              }}\n              value={answeredValue()}\n              className={`px-3 py-2 rounded focus:outline-none focus:border-none ${\n                checkAnswer(item) === true\n                  ? \"border-2 text-blue-600 font-bold bg-white border-blue-600\"\n                  : \"border text-gray-700 border-gray-500 bg-gray-50\"\n              }`}\n              style={{ minHeight: \"80px\" }}\n            ></textarea>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default ShortAnswer;\n","import React, { useEffect } from \"react\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  NumericalQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n} from \"../../../../interfaces/question\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface NumericalProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: NumericalQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst Numerical = (props: NumericalProps) => {\n  const checkAnswer = (item: NumericalQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.value[0] !== \"\") {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n  const addAnswerItemFn = (\n    newAnswers: { id: string; value: string[]; status: number[] }[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.answerQuestionFn({\n        question_id: props.selectedQuestionAnswer.question_id,\n        status: false,\n        answers: [\n          {\n            _id: questionAnswer._id,\n            reference: questionAnswer.reference,\n            answer: newAnswers,\n          },\n        ],\n      });\n    }\n  };\n  const addAnswer = (\n    item: { id: string; value: string; status: number[] },\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      // Check type of question\n      addAnswerItemFn(\n        [\n          {\n            id: props.selectedQuestionAnswer.selectedAns.answer[0].id,\n            value: [item.value],\n            status: props.selectedQuestionAnswer.selectedAns.answer[0].status,\n          },\n        ],\n        props.selectedQuestionAnswer.selectedAns\n      );\n    }\n  };\n  const answeredValue = () => {\n    let answer = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    let checkB: QuestionAnswerInterface | undefined = undefined;\n    checkB =\n      answer === undefined\n        ? undefined\n        : answer.answers.find(\n            (tes) =>\n              tes.reference ===\n              props.selectedQuestionAnswer.selectedAns.reference\n          );\n    return answer !== undefined && checkB !== undefined\n      ? checkB.answer.length !== 0 && checkB.answer[0].value[0]\n      : \"\";\n  };\n\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        // props.answerQuestionFn({\n        //   question_id: props.selectedQuestionAnswer.question_id,\n        //   status: true,\n        //   answer: [\n        //     {\n        //       id: props.selectedQuestionAnswer.answers[0].id,\n        //       value: [\"\"],\n        //       status: props.selectedQuestionAnswer.answers[0].status,\n        //     },\n        //   ],\n        // });\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: [\n                  {\n                    id: props.selectedQuestionAnswer.answers[0].id,\n                    value: [\"\"],\n                    status: props.selectedQuestionAnswer.answers[0].status,\n                  },\n                ],\n              },\n            ],\n          });\n      }\n    }\n  }, [props]);\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            key={i + 1}\n            className={`-mx-2 -my-2 flex flex-col justify-left rounded cursor-pointer`}\n          >\n            <input\n              onChange={(e) => {\n                addAnswer(\n                  {\n                    id: item.id,\n                    value: e.target.value,\n                    status: item.status,\n                  },\n                  props.selectedQuestionAnswer.question_id\n                );\n              }}\n              type=\"text\"\n              value={answeredValue()}\n              className={`px-3 py-2 rounded focus:outline-none focus:border-none ${\n                checkAnswer(item) === true\n                  ? \"border-2 text-blue-600 font-bold border-blue-600\"\n                  : \"border text-gray-700 border-gray-500\"\n              }`}\n            />\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default Numerical;\n","import React, { useEffect } from \"react\";\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from \"react-icons/im\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  CalculatedMultipleChoiceQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n} from \"../../../../interfaces/question\";\nimport { getRandomArbitrary } from \"../../utils/utils\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface CalculatedMultipleChoiceProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: CalculatedMultipleChoiceQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst CalculatedMultipleChoice = (props: CalculatedMultipleChoiceProps) => {\n  const checkAnswer = (\n    item: CalculatedMultipleChoiceQuestionAnswerInterface\n  ): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.status === true) {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n\n  const addAnswerItemFn = (\n    newAnswers: CalculatedMultipleChoiceQuestionAnswerInterface[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.answerQuestionFn({\n        question_id: props.selectedQuestionAnswer.question_id,\n        status: false,\n        answers: [\n          {\n            _id: questionAnswer._id,\n            reference: questionAnswer.reference,\n            answer: newAnswers,\n          },\n        ],\n      });\n    }\n  };\n  const addAnswer = (\n    item: CalculatedMultipleChoiceQuestionAnswerInterface,\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      // Check type of question\n      let temp: CalculatedMultipleChoiceQuestionAnswerInterface[] = [];\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.filter(\n          (itm) => itm.status === true\n        ).length === 1\n      ) {\n        for (let t of props.selectedQuestionAnswer.selectedAns.answer) {\n          temp = [\n            ...temp,\n            {\n              id: t.id,\n              value: t.value,\n              status: false,\n            },\n          ];\n        }\n        addAnswerItemFn(temp, props.selectedQuestionAnswer.selectedAns);\n      }\n      let newAnswers: CalculatedMultipleChoiceQuestionAnswerInterface[] = [];\n      for (let x of temp.length === 0\n        ? props.selectedQuestionAnswer.selectedAns.answer\n        : temp) {\n        if (x.id === item.id) {\n          newAnswers = [\n            ...newAnswers,\n            {\n              id: item.id,\n              value: item.value,\n              status:\n                props.selectedQuestionAnswer.answers !== undefined &&\n                props.selectedQuestionAnswer.answers.filter(\n                  (itm) => itm.status === true\n                ).length === 1\n                  ? true\n                  : !x.status,\n            },\n          ];\n        } else {\n          newAnswers = [...newAnswers, x];\n        }\n      }\n      addAnswerItemFn(newAnswers, props.selectedQuestionAnswer.selectedAns);\n    }\n  };\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        let newAnswers: CalculatedMultipleChoiceQuestionAnswerInterface[] = [];\n        for (let a of props.selectedQuestionAnswer.answers) {\n          newAnswers = [\n            ...newAnswers,\n            {\n              id: a.id,\n              value: a.value,\n              status: false,\n            },\n          ];\n        }\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: newAnswers,\n              },\n            ],\n          });\n      }\n    }\n  }, [props]);\n  return (\n    <div>\n      {props.selectedQuestionAnswer !== null &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            key={i + 1}\n            onClick={() =>\n              addAnswer(item, props.selectedQuestionAnswer.question_id)\n            }\n            className={`px-2 py-2 border-b ${\n              checkAnswer(item) === true\n                ? \"border bg-blue-100 border-white text-blue-600 hover:border-blue-600 rounded font-bold\"\n                : \"border-b bg-white border-gray-100 hover:bg-gray-100\"\n            } flex flex-row justify-left items-center rounded cursor-pointer`}\n          >\n            {checkAnswer(item) === true ? (\n              <>\n                {props.selectedQuestionAnswer.answers !== undefined &&\n                props.selectedQuestionAnswer.answers.filter(\n                  (itm) => itm.status === true\n                ).length === 1 ? (\n                  <MdRadioButtonChecked className=\"text-2xl\" />\n                ) : (\n                  <ImCheckboxChecked className=\"text-2xl\" />\n                )}\n              </>\n            ) : props.selectedQuestionAnswer.answers !== undefined &&\n              props.selectedQuestionAnswer.answers.filter(\n                (itm) => itm.status === true\n              ).length === 1 ? (\n              <MdRadioButtonUnchecked className=\"text-2xl\" />\n            ) : (\n              <ImCheckboxUnchecked className=\"text-2xl\" />\n            )}\n            <span className=\"ml-2\">\n              {item.value.length > 2\n                ? item.value\n                : item.value.length === 2\n                ? getRandomArbitrary(item.value[0], item.value[1])\n                    .toFixed(2)\n                    .toString()\n                : item.value[0]}\n            </span>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default CalculatedMultipleChoice;\n","import React, { useEffect } from \"react\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  EssayQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n} from \"../../../../interfaces/question\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface EssayQuestionProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: EssayQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst Essay = (props: EssayQuestionProps) => {\n  const checkAnswer = (item: EssayQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.value !== \"\") {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n  const addAnswerItemFn = (\n    newAnswers: { id: string; value: string; status: boolean }[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.answerQuestionFn({\n        question_id: props.selectedQuestionAnswer.question_id,\n        status: false,\n        answers: [\n          {\n            _id: questionAnswer._id,\n            reference: questionAnswer.reference,\n            answer: newAnswers,\n          },\n        ],\n      });\n    }\n  };\n  const addAnswer = (\n    item: { id: string; value: string; status: boolean },\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      let selAns = oldAnswers.answers.find(\n        (tester) =>\n          tester.reference ===\n          props.selectedQuestionAnswer.selectedAns.reference\n      );\n      if (selAns !== undefined) {\n        addAnswerItemFn(\n          [\n            {\n              id: selAns.answer[0].id,\n              value: item.value,\n              status: selAns.answer[0].status,\n            },\n          ],\n          selAns\n        );\n      }\n    }\n  };\n  const answeredValue = () => {\n    let answer = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    let checkB: QuestionAnswerInterface | undefined = undefined;\n    checkB =\n      answer === undefined\n        ? undefined\n        : answer.answers.find(\n            (tes) =>\n              tes.reference ===\n              props.selectedQuestionAnswer.selectedAns.reference\n          );\n    return answer !== undefined && checkB !== undefined\n      ? checkB.answer.length !== 0 && checkB.answer[0].value\n      : \"\";\n  };\n\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: [\n                  {\n                    id: props.selectedQuestionAnswer.answers[0].id,\n                    value: \"\",\n                    status: props.selectedQuestionAnswer.answers[0].status,\n                  },\n                ],\n              },\n            ],\n          });\n      }\n    }\n  }, [props]);\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            key={i + 1}\n            className={`-mx-2 -my-2 flex flex-col justify-left rounded cursor-pointer`}\n          >\n            <textarea\n              onChange={(e) => {\n                addAnswer(\n                  {\n                    id: item.id,\n                    value: e.target.value,\n                    status: item.status,\n                  },\n                  props.selectedQuestionAnswer.question_id\n                );\n              }}\n              value={answeredValue()}\n              className={`px-3 py-2 rounded focus:outline-none focus:border-none ${\n                checkAnswer(item) === true\n                  ? \"border-2 text-blue-600 font-bold bg-white border-blue-600\"\n                  : \"border text-gray-700 border-gray-500 bg-gray-50\"\n              }`}\n              style={{ minHeight: \"300px\" }}\n            ></textarea>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default Essay;\n","import React from \"react\";\nimport { MdArrowBack, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { RiCheckboxCircleFill } from \"react-icons/ri\";\nimport {\n  MatchingQuestionAnswerInterface,\n  QuestionLanguage,\n} from \"../../../../interfaces\";\n\ninterface MatchingSelectProps {\n  selectedAnswer: MatchingQuestionAnswerInterface;\n  selectedStatus: string | null;\n  selectedQuestionAnswer: {\n    question_id: string;\n    answers: MatchingQuestionAnswerInterface[];\n    shuffledAnswers: MatchingQuestionAnswerInterface[];\n  };\n  checkAnswer: (item: MatchingQuestionAnswerInterface) => boolean;\n  addAnswer: (\n    item: MatchingQuestionAnswerInterface,\n    question_id: string | null\n  ) => void;\n  closeWindow: (status: boolean) => void;\n  findWord: (lang: QuestionLanguage, status: string | false) => string;\n  selectedLanguage: QuestionLanguage;\n  checkIfSelected: (x: string) => any;\n}\n\nconst MatchingSelect = (props: MatchingSelectProps) => {\n  return (\n    // <div className=\"\">\n    <div className=\"bg-gray-200 rounded-b animate__animated animate__fadeInUp animate__faster -mx-2 mt-2\">\n      <div className=\"text-lg font-bold px-3 pt-2 flex flex-row items-center justify-between\">\n        <div className=\"flex flex-row items-center gap-3\">\n          <div\n            title=\"Click to close this window\"\n            onClick={() => props.closeWindow(false)}\n            className=\"h-10 w-10 text-center bg-gray-50 border border-white hover:border-blue-400 text-gray-900 rounded-full flex items-center justify-center cursor-pointer hover:bg-blue-100 hover:text-blue-700\"\n          >\n            <MdArrowBack className=\"text-2xl\" />\n          </div>\n          <span className=\"text-gray-800\">Choose correct matching</span>\n        </div>\n      </div>\n      <div className=\"bg-gray-200 p-2 mx-0\">\n        {props.selectedQuestionAnswer.shuffledAnswers.map((item, i) => (\n          <div\n            key={i + 1}\n            onClick={() => {\n              props.addAnswer(\n                {\n                  id: props.selectedAnswer.id,\n                  value: props.selectedAnswer.value,\n                  status: item.status,\n                },\n                props.selectedQuestionAnswer.question_id\n              );\n              props.closeWindow(false);\n            }}\n            className={`${\n              item.status ===\n              props.findWord(\n                props.selectedLanguage,\n                props.checkIfSelected(props.selectedAnswer.id)\n              )\n                ? \"border-2 border-white bg-blue-100 font-bold text-blue-700\"\n                : \"border text-gray-500 hover:text-gray-900 hover:font-extrabold\"\n            } cursor-pointer rounded bg-white hover:bg-blue-50 hover:border-white p-3 mb-2 flex flex-row items-center gap-3`}\n          >\n            <div>\n              {item.status ===\n              props.findWord(\n                props.selectedLanguage,\n                props.checkIfSelected(props.selectedAnswer.id)\n              ) ? (\n                <RiCheckboxCircleFill className=\"text-3xl text-blue-600\" />\n              ) : (\n                <MdRadioButtonUnchecked className=\"text-3xl\" />\n              )}\n            </div>\n            <div dangerouslySetInnerHTML={{ __html: item.status }}></div>\n          </div>\n        ))}\n      </div>\n    </div>\n    // </div>\n  );\n};\n\nexport default MatchingSelect;\n","import React, { useEffect, useState } from \"react\";\nimport { BsFillCaretRightFill } from \"react-icons/bs\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport { CandidateExam } from \"../../../../interfaces/exam\";\nimport {\n  MatchingQuestionAnswerInterface,\n  MatchingStatuses,\n  QuestionAnswerInterface,\n  QuestionInterface,\n  QuestionItemInterface,\n  QuestionLanguage,\n  QuestionLanguages,\n} from \"../../../../interfaces/question\";\nimport MatchingSelect from \"./MatchingSelect\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface MatchingProps {\n  selectedExam: CandidateExam | null;\n  selectedLanguage: QuestionLanguage;\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: MatchingQuestionAnswerInterface[] | undefined;\n    shuffledAnswers: MatchingQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst Matching = (props: MatchingProps) => {\n  const [displayWindow, setDisplayWindow] = useState(false);\n  const [selectedAnswer, setSelectedAnswer] =\n    useState<MatchingQuestionAnswerInterface | null>(null);\n  const addAnswerItemFn = (\n    newAnswers: MatchingQuestionAnswerInterface[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.answerQuestionFn({\n        question_id: props.selectedQuestionAnswer.question_id,\n        status: false,\n        answers: [\n          {\n            _id: questionAnswer._id,\n            reference: questionAnswer.reference,\n            answer: newAnswers,\n          },\n        ],\n      });\n    }\n  };\n\n  const checkAnswer = (item: MatchingQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.status !== \"\") {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n\n  const addAnswer = (\n    item: MatchingQuestionAnswerInterface,\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      let selAns = oldAnswers.answers.find(\n        (tester) =>\n          tester.reference ===\n          props.selectedQuestionAnswer.selectedAns.reference\n      );\n      if (selAns !== undefined) {\n        let newAnswers: MatchingQuestionAnswerInterface[] = [];\n        for (let x of selAns.answer) {\n          if (x.id === item.id) {\n            newAnswers = [\n              ...newAnswers,\n              {\n                id: item.id,\n                value: item.value,\n                status: item.status,\n              },\n            ];\n          } else {\n            newAnswers = [...newAnswers, x];\n          }\n        }\n        addAnswerItemFn(newAnswers, selAns);\n      }\n    }\n  };\n\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        let newAnswers: MatchingQuestionAnswerInterface[] = [];\n        for (let a of props.selectedQuestionAnswer.answers) {\n          newAnswers = [\n            ...newAnswers,\n            {\n              id: a.id,\n              value: a.value,\n              status: \"\",\n            },\n          ];\n        }\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: newAnswers,\n              },\n            ],\n          });\n      }\n    }\n  }, [props]);\n\n  const checkAnswerStatus = (\n    selectedQuestionId: string,\n    selectedLang: QuestionLanguage,\n    ansi: MatchingQuestionAnswerInterface\n  ) => {\n    if (props.selectedExam !== null) {\n      let testing = props.selectedExam.questions.find(\n        (test) => test.question_id === selectedQuestionId\n      );\n      if (testing !== undefined) {\n        for (let lang of QuestionLanguages) {\n          let testLang = testing.question.find(\n            (itm) => itm.language === lang.key\n          );\n          if (testLang !== undefined) {\n            let checkE = testLang.answers.find(\n              (tes) =>\n                tes.reference ===\n                props.selectedQuestionAnswer.selectedAns.reference\n            );\n            if (checkE !== undefined) {\n              let testAnswerLang = checkE.answer.find(\n                (it) => it.status.toString() === ansi.status\n              );\n              if (testAnswerLang !== undefined) {\n                return testAnswerLang.status.toString();\n              }\n            }\n          }\n        }\n      }\n    }\n    return false;\n  };\n\n  const checkIfSelected = (x: string) => {\n    let temp = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (temp !== undefined) {\n      let selAns = temp.answers.find(\n        (tester) =>\n          tester.reference ===\n          props.selectedQuestionAnswer.selectedAns.reference\n      );\n      if (selAns !== undefined) {\n        let ans = selAns.answer.find((itm) => itm.id === x);\n        if (ans !== undefined && ans.status !== \"\") {\n          if (props.selectedQuestionAnswer.question_id !== null) {\n            return checkAnswerStatus(\n              props.selectedQuestionAnswer.question_id,\n              props.selectedLanguage,\n              ans\n            );\n          }\n        }\n      }\n    }\n    return false;\n  };\n\n  const ReturnMatchingStatus = (): MatchingStatuses[] => {\n    let res: MatchingStatuses[] = [];\n    let question: QuestionInterface | undefined =\n      props.selectedExam?.questions.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n    if (question !== undefined) {\n      for (let item of question.question) {\n        let selAns = item.answers.find(\n          (tester) =>\n            tester.reference ===\n            props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (selAns !== undefined) {\n          for (let ans of selAns.answer) {\n            res = [\n              ...res,\n              {\n                id: ans.id,\n                lang: item.language,\n                status: ans.status.toString(),\n              },\n            ];\n          }\n        } else {\n          break;\n        }\n      }\n    }\n    return res;\n  };\n\n  const findWord = (lang: QuestionLanguage, status: string | false) => {\n    let res: string = \"\";\n    let arr: MatchingStatuses[] = ReturnMatchingStatus();\n    if (arr.length > 0) {\n      let item = arr.find((itm) => itm.status === status)?.id;\n      if (item !== undefined) {\n        let newItem = arr.find(\n          (itm) => itm.id === item && itm.lang === lang\n        )?.status;\n        if (newItem !== undefined) {\n          res = newItem;\n        }\n      }\n    }\n    return res;\n  };\n\n  const translateClass = \" transform rotate-90\";\n\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            key={i + 1}\n            className={`${\n              checkAnswer(item) === true\n                ? \"px-2 mb-2 py-2 md:py-0\"\n                : \"px-2 py-2\"\n            } ${checkAnswer(item) === true ? \"border rounded\" : \"border-b\"} ${\n              checkAnswer(item) === true ? \"text-blue-600 border-blue-200\" : \"\"\n            } grid grid-cols-12`}\n          >\n            <div\n              className={`col-span-12 ${\n                checkAnswer(item) === true ? \"md:col-span-6\" : \"md:col-span-8\"\n              } flex flex-row items-center gap-2`}\n            >\n              {checkAnswer(item) === true ? (\n                <div className=\"flex items-center justify-center w-8 h-8 bg-blue-100 text-blue-600 text-xl font-normal rounded-full\">\n                  {i + 1}\n                </div>\n              ) : (\n                <div className=\"flex items-center justify-center w-8 h-8 bg-gray-100 text-gray-500 text-xl font-normal rounded-full\">\n                  {i + 1}\n                </div>\n              )}\n              <div\n                dangerouslySetInnerHTML={{ __html: item.value }}\n                className={`ml-2 ${\n                  selectedAnswer !== null &&\n                  selectedAnswer.id === item.id &&\n                  displayWindow === true\n                    ? \"text-blue-600 font-extrabold\"\n                    : \"text-gray-600\"\n                }`}\n              ></div>\n            </div>\n            {checkAnswer(item) === true ? (\n              <div\n                title=\"Click to change selected choice\"\n                onClick={() => {\n                  setSelectedAnswer(item);\n                  setDisplayWindow(!displayWindow);\n                }}\n                className=\"flex flex-row items-center gap-2 col-span-12 md:col-span-6 cursor-pointer md:hover:bg-blue-50 py-4 pr-2 -mr-2 rounded-r md:pl-4 md:border-l border-blue-200\"\n              >\n                <BsFillCaretRightFill\n                  className={`text-xl transition transform${\n                    selectedAnswer !== null &&\n                    selectedAnswer.id === item.id &&\n                    displayWindow === true\n                      ? translateClass\n                      : \"\"\n                  }`}\n                />\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: findWord(\n                      props.selectedLanguage,\n                      checkIfSelected(item.id)\n                    ),\n                  }}\n                ></div>\n              </div>\n            ) : (\n              <div className=\"col-span-12 md:col-span-4 flex items-center md:justify-start mt-2 md:mt-0\">\n                <div\n                  onClick={() => {\n                    setSelectedAnswer(item);\n                    setDisplayWindow(!displayWindow);\n                  }}\n                  title={\n                    checkAnswer(item) === true\n                      ? \"Click to change selected choice\"\n                      : \"Click to choose correct matching\"\n                  }\n                  className={`btn text-sm ${\n                    checkAnswer(item) === true ||\n                    (selectedAnswer !== null &&\n                      selectedAnswer.id === item.id &&\n                      displayWindow === true)\n                      ? \"bg-blue-50\"\n                      : \"bg-yellow-100 hover:bg-yellow-200\"\n                  } text-center cursor-pointer`}\n                >\n                  {checkAnswer(item) === true\n                    ? findWord(props.selectedLanguage, checkIfSelected(item.id))\n                    : selectedAnswer !== null &&\n                      selectedAnswer.id === item.id &&\n                      displayWindow === true\n                    ? \"Close matching list\"\n                    : \"Choose matching\"}\n                </div>\n              </div>\n            )}\n            <div className=\"col-span-12 md:col-span-12\">\n              {props.selectedQuestionAnswer.question_id !== null &&\n                props.selectedQuestionAnswer.answers !== undefined &&\n                props.selectedQuestionAnswer.shuffledAnswers !== undefined &&\n                selectedAnswer !== null &&\n                displayWindow === true &&\n                selectedAnswer.id === item.id && (\n                  <MatchingSelect\n                    selectedAnswer={selectedAnswer}\n                    selectedStatus={null}\n                    selectedQuestionAnswer={{\n                      question_id: props.selectedQuestionAnswer.question_id,\n                      answers: props.selectedQuestionAnswer.answers,\n                      shuffledAnswers:\n                        props.selectedQuestionAnswer.shuffledAnswers,\n                    }}\n                    checkAnswer={checkAnswer}\n                    addAnswer={addAnswer}\n                    closeWindow={setDisplayWindow}\n                    findWord={findWord}\n                    selectedLanguage={props.selectedLanguage}\n                    checkIfSelected={checkIfSelected}\n                  />\n                )}\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default Matching;\n","import React, { Component, Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { BsFillFileEarmarkTextFill } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"../../utils/app.config\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Auth,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n  FC_Access,\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { UserExamStatus, UserExamsListInterface } from \"../../interfaces/exam\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { DATE, getMinutesFromTwoDates } from \"../../utils/functions\";\nimport { CountDown } from \"../../components/CountDown/CountDown\";\nimport { ExamTimeStatus, validateExamDate } from \"../../utils/question_bank\";\nimport { course, PositionAPI, PositionAPICourse } from \"../../interfaces\";\nimport {\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport { MdClose } from \"react-icons/md\";\nimport ChooseExamCenter, {\n  LocationTableInterface,\n} from \"../Application/ExamCenter/ChooseExamCenter\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\n\nexport const compareWithToday = (tooday: moment.Moment, date: string) => {\n  const myDate = DATE(date, \"MM/DD/YYYY\");\n  let todayConverted =\n    (tooday.get(\"month\") < 9 ? \"0\" : \"\") +\n    (tooday.get(\"month\") + 1).toString() +\n    \"/\" +\n    tooday.get(\"date\") +\n    \"/\" +\n    tooday.get(\"year\");\n  if (new Date(myDate).getTime() < new Date(todayConverted).getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport interface ExamDoneDetailsAnswers {\n  course: string;\n  course_name: string;\n  discription: string;\n  termes: string;\n  rules: {\n    right_click_enabled: boolean;\n    copy_enabled: boolean;\n    paste_enabled: boolean;\n    stop_candidate_when_comeback: boolean;\n    allow_to_leave_browser: boolean;\n  };\n  period: string;\n  exam_date: string;\n}\n\ninterface NotPreparedExam {\n  course: string;\n  course_name: string;\n  course_code: string;\n  position: string;\n}\ninterface changeLocProps {\n  changeLocation: () => void;\n}\ninterface CandidateExamsProps {\n  FC_GetProfileDetails: Function;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  LoadCandidateApplications: (\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  setSelectedCourse: (course: course | null) => void;\n  setSelectedPosition: (position: PositionAPI) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  AddUserApplication: (application: GetApplicationsAPI) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n}\n\nconst ChangeLocationComponent = (props: changeLocProps): JSX.Element => {\n  const [display, setDisplay] = useState<boolean>(true);\n  if (display === false) {\n    return <div></div>;\n  }\n  return (\n    <div className=\"absolute right-2 left-2 md:right-1/4 md:left-1/4 lg:left-1/2 lg:right-auto bg-yellow-50 shadow-xl rounded py-1 px-1 flex flex-row justify-between items-center gap-2 text-yellow-800 -mt-5 lg:-mt-8\">\n      <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-1\">\n        <span className=\"font-bold\">You are advised to change location</span>\n        <div\n          onClick={props.changeLocation}\n          className=\"px-2 py-1 rounded bg-blue-100 text-blue-600 w-max cursor-pointer\"\n        >\n          Change\n        </div>\n      </div>\n      <div\n        onClick={() => setDisplay(false)}\n        className=\"bg-yellow-100 text-yellow-600 rounded-full flex items-center justify-center p-1 h-8 w-8 cursor-pointer\"\n      >\n        <MdClose className=\"text-4xl\" />\n      </div>\n    </div>\n  );\n};\n\ninterface candidatePendingExamsList {\n  preparedExam: UserExamsListInterface[];\n  notPreparedExam: NotPreparedExam[];\n}\ninterface CandidateExamsState {\n  loading: boolean;\n  loadingExamsDone: boolean;\n  candidateExams: candidatePendingExamsList | null;\n  activeExams: string[];\n  candidateApplications: GetApplicationsAPI[] | null;\n  selectedCourse: course | null;\n  centersModal: boolean;\n  maxExamModal: boolean;\n  selectedPosition: string;\n  successMessage: string;\n  selectedExam: ExamDoneDetailsAnswers | null;\n}\n\nexport class _CandidateExams extends Component<\n  CandidateExamsProps,\n  CandidateExamsState\n> {\n  constructor(props: CandidateExamsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingExamsDone: false,\n      candidateExams: null,\n      activeExams: [],\n      candidateApplications: null,\n      selectedCourse: null,\n      centersModal: false,\n      maxExamModal: false,\n      selectedPosition: \"\",\n      successMessage: \"\",\n      selectedExam: null,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setloadingExamsDone = (status: boolean) => {\n    this.setState({ loadingExamsDone: status });\n  };\n  loadCandidateExams = async (user: string, period: string) => {\n    this.setLoading(true);\n    setAxiosToken();\n    try {\n      const res = await axios.get<candidatePendingExamsList>(\n        `${API.QBank}/exam/user/${user}/${period}`\n      );\n      this.setState({ candidateExams: res.data });\n      // console.log(\"My exams list: \", res.data);\n    } catch (error: any) {\n      console.log(\"My exams error: \", { ...error });\n      alert(errorToText(error));\n    }\n    this.setLoading(false);\n  };\n  loadUserProfileDetails = () => {\n    this.setState({\n      loading: true,\n    });\n    this.props.FC_GetProfileDetails(\n      this.props.auth.user.user_id,\n      (status: boolean, msg: string) => {\n        if (status === true) {\n          this.setState({\n            loading: false,\n          });\n        } else {\n          this.setState({\n            loading: false,\n          });\n        }\n      }\n    );\n    this.setState({\n      loading: false,\n    });\n  };\n\n  InitializationFn = (application: GetApplicationsAPI) => {\n    if (this.props.candidateExam.user_exams_done.length === 0) {\n      this.props.loadExamsDone(\n        application.application_session.session_plan_id,\n        this.props.auth.user.user_id,\n        this.setloadingExamsDone\n      );\n    }\n    for (let course of application.position.courses) {\n      let testDone = this.props.candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = application.exams.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          this.props.InitializeExamDetails(\n            application.application_session.session_plan_id,\n            course.course_id,\n            center_id.district_id,\n            center_id.center_id,\n            center_id.room_id,\n            application.position.position_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n  loadUserApplications = async () => {\n    this.setLoading(true);\n    try {\n      const res = await axios.get<GetApplicationsAPI[]>(\n        `${API.APPLICATION}/application/${this.props.auth.user.user_id}`\n      );\n      if (res.status === 200) {\n        this.setState({ candidateApplications: res.data });\n        for (let application of res.data) {\n          this.InitializationFn(application);\n        }\n        if (\n          this.props.candidateApplications.candidate_applications === null ||\n          this.props.candidateApplications.candidate_applications.length === 0\n        ) {\n          for (let application of res.data) {\n            this.props.AddUserApplication(application);\n          }\n        }\n      }\n    } catch (error: any) {\n      console.log(\"Appl ex Err: \", { ...error });\n    }\n    this.setLoading(false);\n  };\n  findLocation = (position_id: string, course_id: string) => {\n    if (this.state.candidateApplications !== null) {\n      const test = this.state.candidateApplications.find(\n        (item) =>\n          item.position.position_id === position_id &&\n          item.exams.filter((itm) => itm.course_id === course_id)\n      );\n      if (test !== undefined) {\n        let course = test.exams.find((itm) => itm.course_id === course_id);\n        if (course !== undefined) {\n          return course;\n        }\n      }\n    }\n    return null;\n  };\n  updateLocation = async (\n    application_id: string,\n    exams: sentExamInterface[]\n  ) => {\n    this.setState({ loading: true });\n    for (let i in exams) {\n      try {\n        const res = await axios.post(\n          `${API.APPLICATION}/application/updatemissed`,\n          {\n            application_id: application_id,\n            exams: exams[i],\n          }\n        );\n        if (res.status === 200) {\n          this.setState({\n            selectedCourse: null,\n            centersModal: false,\n            maxExamModal: false,\n            selectedPosition: \"\",\n            successMessage: \"Location updated successfully!\",\n          });\n          this.loadUserApplications();\n        }\n      } catch (error: any) {\n        console.log(\"Update loc err: \", { ...error });\n      }\n    }\n  };\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.state.candidateApplications !== null) {\n      let application = this.state.candidateApplications.find(\n        (item) => item.position.position_id === this.state.selectedPosition\n      );\n      if (application !== undefined) {\n        this.updateLocation(application.application_id, exams);\n      } else {\n        alert(\"Invalid application\");\n      }\n    } else {\n      alert(\"Missing application\");\n    }\n  };\n  addLocation = (\n    course_id: string,\n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string\n  ) => {\n    return this.updateLocationFunction([\n      {\n        course_id: course_id,\n        proctoring_type: \"Center\",\n        center_id: location.center_id,\n        district_id: location.district_id,\n      },\n    ]);\n  };\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.setLoading);\n\n    if (\n      this.props.auth.user.sex === \"\" ||\n      this.props.auth.user.sex.length === 0\n    ) {\n      this.loadUserProfileDetails();\n    }\n    this.loadUserApplications();\n    if (this.props.auth.application_session !== null) {\n      this.loadCandidateExams(\n        this.props.auth.user.user_id,\n        this.props.auth.application_session.session_plan_id\n      );\n    }\n    if (this.props.auth.application_session !== null) {\n      this.props.loadExamsDone(\n        this.props.auth.application_session.session_plan_id,\n        this.props.auth.user.user_id,\n        this.setloadingExamsDone\n      );\n    }\n  };\n\n  removeDuplicatesExams = (\n    exams: UserExamsListInterface[]\n  ): UserExamsListInterface[] => {\n    let temp: UserExamsListInterface[] = [];\n    if (this.state.candidateApplications !== null) {\n      for (let item of exams) {\n        if (\n          this.state.candidateApplications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm._id === item._id) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n\n  removeDuplicatesNotPreparedExams = (\n    exams: NotPreparedExam[]\n  ): NotPreparedExam[] => {\n    let temp: NotPreparedExam[] = [];\n    if (this.state.candidateApplications !== null) {\n      for (let item of exams) {\n        if (\n          this.state.candidateApplications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm.course === item.course) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n  setTimeOut = (exam_id: string) => {\n    let temps: string[] = this.state.activeExams;\n    this.setState({\n      activeExams: [...temps, exam_id],\n    });\n  };\n  selectApplication = (\n    applications: GetApplicationsAPI[] | null,\n    position_id: string,\n    course_id: string\n  ): GetApplicationsAPI | null => {\n    if (applications !== null) {\n      let temp = applications.find(\n        (item) => item.position.position_id === position_id\n      );\n      if (temp !== undefined) {\n        if (\n          temp.position.courses.find((itm) => itm.course_id === course_id) !==\n          undefined\n        ) {\n          return temp;\n        }\n      }\n    }\n    return null;\n  };\n  setMaxExamModal = (status: boolean) => {\n    this.setState({ maxExamModal: status });\n  };\n\n  changeLocation = (item: PositionAPICourse) => {\n    this.setState({ selectedCourse: item, centersModal: true });\n    this.setMaxExamModal(true);\n  };\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n    this.setMaxExamModal(false);\n  };\n\n  render() {\n    const today = moment().tz(TimeZone);\n    // console.log(\"TODAY: \", today.get(\"days\"));\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />;\n    }\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    return (\n      <Fragment>\n        {this.state.selectedCourse === null ? (\n          <div className=\"mt-2 -ml-2 mr-3 pb-5\">\n            <div className=\"rounded mt-2\">\n              <div className=\"flex flex-row items-center gap-3\">\n                <Link\n                  to=\"/apps-page\"\n                  title=\"Back to menus\"\n                  className=\"bg-white group hover:bg-blue-50 h-10 w-10 flex items-center justify-center rounded-full cursor-pointer\"\n                >\n                  <BiArrowBack className=\"text-3xl text-blue-600 group-hover:text-blue-800\" />\n                </Link>\n                <div className=\"flex flex-col\">\n                  <span className=\"font-extrabold text-3xl\">My exams</span>\n                  <span className=\"text-gray-600 text-sm\">\n                    List of exams that are assigned to me\n                  </span>\n                </div>\n              </div>\n            </div>\n            {this.state.successMessage !== \"\" && (\n              <div\n                title=\"Click to close the message\"\n                onClick={() => this.setState({ successMessage: \"\" })}\n                className=\"animate__animated animate__zoomIn px-3 py-2 bg-green-500 text-white my-2 rounded cursor-pointer\"\n              >\n                {this.state.successMessage}\n              </div>\n            )}\n            {this.state.loading === true ||\n            this.state.loadingExamsDone === true ||\n            this.state.candidateExams === null ||\n            this.state.candidateApplications == null ? (\n              <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n                <Loading />\n              </div>\n            ) : this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).length === 0 ? (\n              <div className=\"bg-gray-50 rounded px-4 py-5 text-center font-bold mt-2 text-2xl text-gray-400\">\n                No exams found\n              </div>\n            ) : (\n              this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).map((item, i) => (\n                <div key={i + 1} className=\"my-2 rounded bg-white p-2 group\">\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div>\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-300 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col w-full\">\n                        <span className=\"text-base text-gray-800 font-extrabold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center justify-start w-full gap-3 -mt-1\">\n                          <div className=\"text-sm text-gray-500 group-hover:text-blue-600\">\n                            Date: {DATE(item.exam_date, \"DD/MM/YYYY\")}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-gray-100 underline text-gray-500  font-bold rounded-full px-2\">\n                            Start time: {item.start_time}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-blue-100 text-blue-900  font-bold rounded-full px-2\">\n                            Status: {item.user_status}\n                          </div>\n                        </div>\n                        {this.findLocation(item.position, item.course) !==\n                          null && (\n                          <div className=\"flex flex-row items-center gap-2 mt-2\">\n                            <div>\n                              Exam center:{\" \"}\n                              <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                {\n                                  this.findLocation(item.position, item.course)\n                                    ?.center_name\n                                }\n                              </span>\n                            </div>\n                            <div className=\"w-max flex flex-col md:flex-row\">\n                              Room number:{\" \"}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 ? (\n                                <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                  Waiting room\n                                </span>\n                              ) : (\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.room_number\n                                  }\n                                </span>\n                              )}\n                              {/* Change loc */}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 &&\n                                validateExamDate(\n                                  item.exam_date,\n                                  item.start_time,\n                                  item.end_time\n                                ) !== ExamTimeStatus.Expired && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"lg:w-full flex flex-row items-center justify-end\">\n                      {this.state.activeExams.find(\n                        (itm) => itm === item._id\n                      ) !== undefined ||\n                      item.user_status === UserExamStatus.Editing ||\n                      item.user_status === UserExamStatus.Paused ? (\n                        validateExamDate(\n                          item.exam_date,\n                          item.start_time,\n                          item.end_time\n                        ) !== ExamTimeStatus.Expired ? (\n                          this.selectApplication(\n                            this.state.candidateApplications,\n                            item.position,\n                            item.course\n                          )?.application_status !==\n                          ApplicationStates.Shortlisted ? (\n                            <div className=\"text-yellow-800 font-extrabold text-base bg-yellow-100 rounded px-3 py-1 cursor-not-allowed\">\n                              Not shortlisted\n                            </div>\n                          ) : (\n                            <div\n                              onClick={() => {\n                                let application = this.selectApplication(\n                                  this.state.candidateApplications,\n                                  item.position,\n                                  item.course\n                                );\n                                if (application !== null) {\n                                  if (\n                                    application.application_status ===\n                                    ApplicationStates.Shortlisted\n                                  ) {\n                                    // Select exam\n                                    this.props.setSelectedPosition(\n                                      application.position\n                                    );\n                                    this.props.setSelectedCourse(\n                                      application.position.courses.find(\n                                        (itm) => itm.course_id === item.course\n                                      )!\n                                    );\n                                    this.props.setSelectedCandidateExam(\n                                      item._id\n                                    );\n                                  } else {\n                                    alert(\n                                      \"Corresponding application is not shortlisted!\"\n                                    );\n                                  }\n                                } else {\n                                  alert(\"Invalid exam!\");\n                                }\n                              }}\n                              className={`${\n                                item.user_status === UserExamStatus.Editing ||\n                                item.user_status === UserExamStatus.Paused\n                                  ? \"bg-green-600 group-hover:bg-green-800\"\n                                  : \"bg-blue-600 group-hover:bg-blue-800\"\n                              } btn  text-white cursor-pointer w-max`}\n                            >\n                              {item.user_status === UserExamStatus.Editing\n                                ? \"Back to Exam\"\n                                : item.user_status === UserExamStatus.Paused\n                                ? \"Paused, back to exam\"\n                                : \"Start Exam\"}\n                            </div>\n                          )\n                        ) : item.user_status === UserExamStatus.Editing ||\n                          item.user_status === UserExamStatus.Done ||\n                          item.user_status === UserExamStatus.Paused ||\n                          item.user_status === UserExamStatus.Removed ? (\n                          <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                            <span>Marks</span>\n                            <span className=\"text-2xl font-extrabold -mt-2\">\n                              {item.user_marks.toFixed(2)}%\n                            </span>\n                            <div\n                              onClick={() =>\n                                this.setState({\n                                  selectedExam: {\n                                    course: item.course,\n                                    course_name: item.course_name,\n                                    discription: item.discription,\n                                    termes: item.termes,\n                                    rules: item.rules,\n                                    period: item.period,\n                                    exam_date: item.exam_date,\n                                  },\n                                })\n                              }\n                              className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                            >\n                              Check details\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"bg-yellow-100 text-yellow-700 font-extrabold text-base px-3 py-1 rounded-md w-max\">\n                            Expired\n                          </div>\n                        )\n                      ) : item.found === false ? (\n                        <div\n                          title=\"Please wait for the exam time\"\n                          className=\"text-lg lg:text-xl font-extrabold bg-green-100 text-green-700 px-3 py-1 rounded cursor-not-allowed w-max\"\n                        >\n                          <CountDown\n                            start_time={new Date(today.toString()).toString()}\n                            duration_min={getMinutesFromTwoDates(\n                              new Date(today.toString()),\n                              new Date(\n                                DATE(item.exam_date, \"MM/DD/YYYY\") +\n                                  \" \" +\n                                  item.start_time\n                              )\n                            )}\n                            timeout={() => this.setTimeOut(item._id)}\n                            returnString={true}\n                            labels={true}\n                            days\n                          />\n                        </div>\n                      ) : (\n                        <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                          <span>Marks</span>\n                          <span className=\"text-2xl font-extrabold -mt-2\">\n                            {item.user_marks.toFixed(2)}%\n                          </span>\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selectedExam: {\n                                  course: item.course,\n                                  course_name: item.course_name,\n                                  discription: item.discription,\n                                  termes: item.termes,\n                                  rules: item.rules,\n                                  period: item.period,\n                                  exam_date: item.exam_date,\n                                },\n                              })\n                            }\n                            className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                          >\n                            Check details\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n            {/* Not prepared exams */}\n            {this.state.candidateExams !== null &&\n              this.state.loading !== true &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).length > 0 &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).map((item, i) => (\n                <div\n                  key={i + 1}\n                  className=\"my-2 rounded bg-white p-2 py-3 group\"\n                >\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div className=\"\">\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-300 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-base text-gray-600 font-bold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center gap-3 -mt-1\">\n                          {this.findLocation(item.position, item.course) !==\n                            null && (\n                            <div className=\"flex flex-row items-center gap-2 mt-2\">\n                              <div className=\"flex flex-col md:flex-row md:items-center\">\n                                Exam center:{\" \"}\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.center_name\n                                  }\n                                </span>\n                              </div>\n                              <div className=\"w-max flex flex-col md:flex-row md:items-center\">\n                                Room number:{\" \"}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 ? (\n                                  <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                    Waiting room\n                                  </span>\n                                ) : (\n                                  <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                    {\n                                      this.findLocation(\n                                        item.position,\n                                        item.course\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )}\n                                {/* Change loc */}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-100 text-gray-600 font-extrabold text-base px-3 py-1 rounded-md\">\n                      Not prepared\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        ) : this.state.loading === true ? (\n          <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n            <Loading />\n          </div>\n        ) : (\n          <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mr-1 -ml-3 rounded-t-md bg-white shadow-md pb-5\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Change exam location\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() => {\n                        this.setState({\n                          centersModal: false,\n                          selectedCourse: null,\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ChooseExamCenter\n              positionCourses={this.state.selectedCourse}\n              addLocation={this.addLocation}\n              closeModal={this.closeModal}\n            />\n          </div>\n        )}\n        {this.state.selectedExam !== null && (\n          <Modal\n            title={\n              <div className=\"text-2xl font-extrabold text-blue-600 px-2\">\n                Exam result details\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ selectedExam: null })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <CandidateAnswersDetails\n              exam_id={this.state.selectedExam}\n              showAnswers={false}\n            />\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  candidateExam,\n  candidateApplications,\n  periods,\n}: StoreState): {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    candidateExam: candidateExam,\n    candidateApplications: candidateApplications,\n    periods: periods,\n  };\n};\n\nexport const CandidateExams = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n})(_CandidateExams);\n","import {\n  QuestionForEmbedded,\n  QuestionForHybrid,\n  questionShortElementsType,\n  questionTypeElementsType,\n} from \"@mastrecruit/common\";\nimport React from \"react\";\nimport { MdCheckCircle, MdClose } from \"react-icons/md\";\nimport { Auth } from \"../../../actions/auth\";\nimport { candidateExamStoreInterface } from \"../../../actions/candidate_exam\";\nimport { questionTypesStoreInterface } from \"../../../actions/questionTypes\";\nimport { System } from \"../../../actions/system\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { EmbeddedQuestion } from \"../../../components/QuestionPreview/QuestionPreview\";\nimport { course } from \"../../../interfaces/course\";\nimport {\n  QuestionAnswerInterface,\n  QuestionInterface,\n  QuestionLanguage,\n} from \"../../../interfaces/question\";\nimport {\n  ExamAnsweredQuestions,\n  ExamPendingQuestions,\n  findQuestionType,\n} from \"../utils/utils\";\nimport FindAnswer from \"./FindAnswer\";\n\ninterface QuestionsReviewProps {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  system: System;\n  setSelectedExamQuestion: (\n    exam_id: string,\n    question_id: string | null\n  ) => void;\n  submitQuestionAnswer: boolean;\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  submitExam: () => void;\n  selectedExam: course | null;\n  setSubmitModal: (status: boolean) => void;\n  selectedLanguage: QuestionLanguage;\n  wholeQuestion: QuestionInterface;\n}\n\nexport const findQType = (\n  typeShort: questionShortElementsType | QuestionForEmbedded | QuestionForHybrid\n): questionTypeElementsType => {\n  let changed: questionTypeElementsType = questionTypeElementsType.Hybrid;\n  switch (typeShort) {\n    case QuestionForHybrid.Calculated:\n      changed = questionTypeElementsType.Calculated;\n      break;\n    case QuestionForHybrid.CalculatedMultipleChoice:\n      changed = questionTypeElementsType.CalculatedMultipleChoice;\n      break;\n    case QuestionForHybrid.Essay:\n      changed = questionTypeElementsType.Essay;\n      break;\n    case QuestionForHybrid.Matching:\n      changed = questionTypeElementsType.Matching;\n      break;\n    case QuestionForHybrid.MultipleChoice:\n      changed = questionTypeElementsType.MultipleChoice;\n      break;\n    case QuestionForHybrid.Numeric:\n      changed = questionTypeElementsType.Numeric;\n      break;\n    case QuestionForHybrid.ShortAnswer:\n      changed = questionTypeElementsType.ShortAnswer;\n      break;\n    case QuestionForHybrid.SimpleCalculate:\n      changed = questionTypeElementsType.SimpleCalculate;\n      break;\n    case QuestionForHybrid.SingleMultiple:\n      changed = questionTypeElementsType.SingleMultiple;\n      break;\n    case QuestionForHybrid.TrueFalse:\n      changed = questionTypeElementsType.TrueFalse;\n      break;\n  }\n  return changed;\n};\n\nconst FindAnswerHybrid = (props: QuestionsReviewProps) => {\n  let str = \"a\";\n  if (props.submitQuestionAnswer === true) {\n    return (\n      <div className=\"bg-white rounded mx-4 my-4\">\n        <div className=\"text-gray-600 mx-4\">Saving changes, Please wait...</div>\n        <Loading />\n      </div>\n    );\n  }\n  return (\n    <div className={`pt-4 border-t border-gray-300 bg-white`}>\n      <div className=\"px-4 pb-2\">\n        <div className=\"my-2\">\n          <div\n            className=\"flex flex-col gap-3 overflow-y-auto\"\n            style={{ maxHeight: \"100%\" }}\n          >\n            {console.log(\"Whole: \", props.wholeQuestion)}\n            <div>\n              {findQuestionType(\n                props.wholeQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.Hybrid &&\n                props.wholeQuestion.question.find(\n                  (test) => test.language === props.selectedLanguage\n                ) !== undefined &&\n                props.wholeQuestion.question\n                  .find((test) => test.language === props.selectedLanguage)!\n                  .sub_question.map((item, i) => {\n                    let stri = String.fromCharCode(\n                      str.charCodeAt(str.length - 1) + i\n                    );\n                    return (\n                      <div\n                        key={i + 1}\n                        className=\"bg-white hover:bg-white border border-white hover:border-blue-400 px-2 py-2 rounded  animate__animated animate__fadeIn animate__fast group\"\n                      >\n                        <div className=\"grid md:grid-cols-12 w-full\">\n                          <div className=\"col-span-12 flex flex-row items-center gap-3\">\n                            <div\n                              key={i + 1}\n                              className=\"w-6 h-6 p-2 rounded-full bg-blue-100 flex justify-center items-center font-bold text-lg text-blue-600 cursor-pointer\"\n                            >\n                              {stri}\n                            </div>\n                            <div className=\"text-sm w-full\">\n                              {props.wholeQuestion.question.find(\n                                (test) =>\n                                  test.language === props.selectedLanguage\n                              ) !== undefined ? (\n                                findQuestionType(\n                                  item.type,\n                                  props.questionTypes.questionTypes\n                                ) === questionTypeElementsType.Embedded ? (\n                                  EmbeddedQuestion(\n                                    props.wholeQuestion!,\n                                    props.questionTypes.questionTypes,\n                                    props.selectedLanguage,\n                                    props.candidateExam.question_answers,\n                                    (data: QuestionAnswerInterface) => {}\n                                  )\n                                ) : (\n                                  <div\n                                    className=\"font-bold text-gray-700 text-base\"\n                                    dangerouslySetInnerHTML={{\n                                      __html: item.description,\n                                    }}\n                                  ></div>\n                                )\n                              ) : (\n                                props.wholeQuestion.question.length > 0 && (\n                                  <div\n                                    className=\"font-bold text-gray-700 text-base max-h-20 truncate\"\n                                    dangerouslySetInnerHTML={{\n                                      __html: item.description,\n                                    }}\n                                  ></div>\n                                )\n                              )}\n                              <div className=\"text-blue-700 font-bold text-sm w-full\">\n                                Answer: &nbsp;\n                                {props.questionTypes.questionTypes !== null && (\n                                  <FindAnswer\n                                    selectedLanguage={props.selectedLanguage}\n                                    question={props.wholeQuestion}\n                                    answersList={props.candidateExam.question_answers.filter(\n                                      (itm) =>\n                                        itm.question_id ===\n                                        props.wholeQuestion.question_id\n                                    )}\n                                    questionTypes={\n                                      props.questionTypes.questionTypes\n                                    }\n                                    onClick={() => {}}\n                                    showCorrectAnswer={false}\n                                    subQuestionType={findQType(item.typeShort)}\n                                    reference={item.reference}\n                                  />\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FindAnswerHybrid;\n","import React, { useEffect } from \"react\";\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from \"react-icons/im\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  MultipleChoiceQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n  QuestionLanguage,\n  SubQuestionInterface,\n} from \"../../../../interfaces/question\";\nimport {\n  questionTypeElementsType,\n  QuestionForHybrid,\n} from \"@mastrecruit/common\";\nimport Hybrid from \"./Hybrid\";\nimport TrueFalse from \"./TrueFalse\";\nimport {\n  toCalculatedMultipleChoice,\n  toEssay,\n  toMatching,\n  toMultipleChoice,\n  toNumerical,\n  toShortAnswer,\n  toSimpleCalculated,\n  toTrueFalse,\n} from \"../ConvertingAnswers\";\nimport SimpleCalculated from \"./SimpleCalculated\";\nimport MultipleChoice from \"./MultipleChoice\";\nimport CalculatedMultipleChoice from \"./CalculatedMultipleChoice\";\nimport Matching from \"./Matching\";\nimport { Shuffle } from \"../../../../utils/functions\";\nimport { CandidateExam } from \"../../../../interfaces/exam\";\nimport Essay from \"./Essay\";\nimport Numerical from \"./Numerical\";\nimport ShortAnswer from \"./ShortAnswer\";\n\n// All question types except Embedded and Hybrid\n\ninterface AnswersTypesCollectionProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: QuestionAnswerInterface[] | undefined;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n  wholeQuestion: QuestionItemInterface | undefined;\n  selectedExam: CandidateExam | null;\n  selectedLanguage: QuestionLanguage;\n  item: SubQuestionInterface;\n  hybrid: boolean;\n}\n\nconst AnswersTypesCollection = (props: AnswersTypesCollectionProps) => {\n  return (\n    <div>\n      {/* TrueFalse */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.item.typeShort === QuestionForHybrid.TrueFalse &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <TrueFalse\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toTrueFalse(itm.answer),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />\n          ))}\n      {/* Calculated */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        (props.item.typeShort === QuestionForHybrid.Calculated ||\n          props.item.typeShort === QuestionForHybrid.SimpleCalculate) &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <SimpleCalculated\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toSimpleCalculated(itm.answer),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />\n          ))}\n      {/* MultipleChoice */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        (props.item.typeShort === QuestionForHybrid.SingleMultiple ||\n          props.item.typeShort === QuestionForHybrid.MultipleChoice) &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <MultipleChoice\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toMultipleChoice(itm.answer),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />\n          ))}\n      {/* Calculated MultipleChoice */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.item.typeShort === QuestionForHybrid.CalculatedMultipleChoice &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <CalculatedMultipleChoice\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toCalculatedMultipleChoice(itm.answer),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />\n          ))}\n\n      {/* Matching */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.item.typeShort === QuestionForHybrid.Matching &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <Matching\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toMatching(itm.answer),\n                shuffledAnswers: Shuffle(toMatching(itm.answer)),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n              selectedExam={props.selectedExam}\n              selectedLanguage={props.selectedLanguage}\n            />\n          ))}\n      {/* Esssay */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.item.typeShort === QuestionForHybrid.Essay &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <Essay\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toEssay(itm.answer),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />\n          ))}\n      {/* Numerical */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.item.typeShort === QuestionForHybrid.Numeric &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <Numerical\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toNumerical(itm.answer),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />\n          ))}\n      {/* ShortAnswer */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.item.typeShort === QuestionForHybrid.ShortAnswer &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <ShortAnswer\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toShortAnswer(itm.answer),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />\n          ))}\n    </div>\n  );\n};\n\nexport default AnswersTypesCollection;\n","import React, { useEffect } from \"react\";\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from \"react-icons/im\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  MultipleChoiceQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n  QuestionLanguage,\n} from \"../../../../interfaces/question\";\nimport {\n  questionTypeElementsType,\n  QuestionForHybrid,\n} from \"@mastrecruit/common\";\nimport Hybrid from \"./Hybrid\";\nimport TrueFalse from \"./TrueFalse\";\nimport {\n  toCalculatedMultipleChoice,\n  toEssay,\n  toMatching,\n  toMultipleChoice,\n  toNumerical,\n  toShortAnswer,\n  toSimpleCalculated,\n  toTrueFalse,\n} from \"../ConvertingAnswers\";\nimport SimpleCalculated from \"./SimpleCalculated\";\nimport MultipleChoice from \"./MultipleChoice\";\nimport CalculatedMultipleChoice from \"./CalculatedMultipleChoice\";\nimport Matching from \"./Matching\";\nimport { Shuffle } from \"../../../../utils/functions\";\nimport { CandidateExam } from \"../../../../interfaces/exam\";\nimport Essay from \"./Essay\";\nimport Numerical from \"./Numerical\";\nimport ShortAnswer from \"./ShortAnswer\";\nimport AnswersTypesCollection from \"./AnswersTypesCollection\";\n\ninterface HybridProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: QuestionAnswerInterface[] | undefined;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n  wholeQuestion: QuestionItemInterface | undefined;\n  selectedExam: CandidateExam | null;\n  selectedLanguage: QuestionLanguage;\n}\n\nconst HybridAnswers = (props: HybridProps) => {\n  let str = \"a\";\n  // useEffect(() => {\n  //   if (props.selectedQuestionAnswer.question_id !== null) {\n  //     // Check if question is already there in answersList\n  //     let checkAnswerAvail = props.available_answers.find(\n  //       (item) => item.question_id === props.selectedQuestionAnswer.question_id\n  //     );\n  //     if (props.wholeQuestion !== undefined) {\n  //       let answersRes: QuestionAnswerInterface[] = [];\n  //       if (checkAnswerAvail === undefined) {\n  //         answersRes = props.wholeQuestion.answers;\n  //       } else {\n  //         for (let newAns of props.wholeQuestion.answers) {\n  //           if (\n  //             checkAnswerAvail.answers.find(\n  //               (item) => item._id === newAns._id\n  //             ) === undefined\n  //           ) {\n  //             console.log(\"Ans not duplicted: \", newAns);\n  //             answersRes = [\n  //               ...answersRes,\n  //               {\n  //                 _id: newAns._id,\n  //                 reference: newAns.reference,\n  //                 answer: [],\n  //               },\n  //             ];\n  //           }\n  //         }\n  //       }\n  //       props.answerQuestionFn({\n  //         question_id: props.selectedQuestionAnswer.question_id,\n  //         status: false, //Check if submitted online\n  //         answers: answersRes,\n  //       });\n  //     }\n  //   }\n  // }, [props]);\n  return (\n    <div>\n      {props.wholeQuestion !== undefined &&\n        props.wholeQuestion.sub_question.length > 0 &&\n        props.wholeQuestion.sub_question.map((item, i) => {\n          let stri = String.fromCharCode(str.charCodeAt(str.length - 1) + i);\n          return (\n            <div\n              title=\"Click to choose this option\"\n              key={i + 1}\n              className={`px-2 py-2\n             bg-white\n            rounded mb-2`}\n            >\n              <div className=\"flex flex-row items-center w-full gap-2 mb-2\">\n                <div>\n                  <div className=\"flex items-center justify-center h-8 w-8 rounded-full bg-gray-100 border border-gray-400 font-bold\">\n                    {stri}\n                  </div>\n                </div>\n                <div className=\"flex flex-row items-center justify-between w-full gap-2\">\n                  <div className=\"font-bold\">{item.description}</div>\n                  <div>\n                    <div className=\"bg-blue-100 text-blue-600 px-3 py-1 rounded-full font-bold\">\n                      {item.marks} marks\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"border-t px-2 py-2\">\n                <AnswersTypesCollection\n                  type={props.type}\n                  available_answers={props.available_answers}\n                  selectedQuestionAnswer={props.selectedQuestionAnswer}\n                  answerQuestionFn={props.answerQuestionFn}\n                  wholeQuestion={props.wholeQuestion}\n                  selectedExam={props.selectedExam}\n                  selectedLanguage={props.selectedLanguage}\n                  item={item}\n                  hybrid={true}\n                />\n              </div>\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default HybridAnswers;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  GetClaimingTypes,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\nexport const filterClaimsByClaimType = (\n  claimList: CandidateClaimInterface[],\n  claimType: PlansTypeKeys | \"all\"\n): CandidateClaimInterface[] => {\n  if (claimType === \"all\") {\n    return claimList;\n  }\n\n  return claimList.filter((item) => item.type_key === claimType);\n};\n\ntype AdminFilterByTypeProps = {\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getAllClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst AdminFilterByType: React.FC<AdminFilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n          setLoading(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n      setLoading(false);\n    }\n  }, [loadingClaimTypes, props]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.allClaims && thisType === \"all\") {\n      result = claiming.allClaims.filter(\n        (item) => item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n    if (claiming.allClaims && thisType !== \"all\") {\n      result = claiming.allClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && props.claiming.claimTypes && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default connect(mapStateToProps, {\n  GetClaimingTypes,\n  setSelectedClaimType,\n  getAllClaims,\n  PushPopupAlert,\n})(AdminFilterByType);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { SessionPlanInterface } from \"../../interfaces\";\n\ntype ClaimHeaderTitleProps = {\n  headerTitle: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  setThisPeriod: (state: SessionPlanInterface | null) => void;\n  setLoadingSession: (state: boolean) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst selectPeriod = (\n  sessions: SessionPlanInterface[],\n  period_id: string,\n  setThisPeriod: (state: SessionPlanInterface | null) => void\n) => {\n  setThisPeriod(\n    sessions.filter((item) => item.session_plan_id === period_id)[0]\n  );\n};\n\nconst ClaimHeaderTitle: React.FC<ClaimHeaderTitleProps> = (props) => {\n  const isLoading = (): boolean => {\n    if (props.loading || props.loadingSession || props.periodChanged) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.headerTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              isLoading() ? \"cursor-wait\" : \"cursor-default\"\n            }`}\n            value={props.thisPeriod ? props.thisPeriod.session_plan_id : \"\"}\n            disabled={isLoading()}\n            onChange={(e) => {\n              selectPeriod(\n                props.application_sessions,\n                e.target.value,\n                props.setThisPeriod\n              );\n              props.setLoadingSession(true);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option\n                key={session.session_plan_id + item}\n                value={session.session_plan_id}\n              >\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default ClaimHeaderTitle;\n","import React, { Component } from \"react\";\nimport { MdAdd, MdArrowBack, MdDelete, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  DocumentClaimUser,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { filterClaimsByClaimType } from \"../Admin/AdminFilterByType\";\nimport ClaimApplView from \"../ClaimApplView\";\nimport ClaimDocView, { isClaimEvaluated } from \"../ClaimDocView\";\nimport ClaimExamView from \"../ClaimExamView\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport ClaimPlacementView from \"../ClaimPlacementView\";\nimport ClaimForm, { ClaimGetDocTitle } from \"./ClaimForm\";\nimport FilterByType from \"./FilterByType\";\nimport { getCourseById, getCourseIdBySheetId } from \"./FormExamList\";\n\nexport enum ClaimTypesEnum {\n  application = \"application\",\n  document = \"document\",\n  exam = \"exam\",\n  marks_publication = \"marks publication\",\n  placement = \"placement\",\n}\n\nexport const getDocumentById = (\n  candidateDocuments: DocumentClaimUser[],\n  document_id: string\n): DocumentClaimUser | null => {\n  let result: DocumentClaimUser | undefined = candidateDocuments.find(\n    (item) => item.doc_id === document_id\n  );\n  return result ? result : null;\n};\n\nexport const whichClaimType = (\n  thisClaim: CandidateClaimInterface\n): ClaimTypesEnum | undefined => {\n  if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n    return ClaimTypesEnum.application;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    return ClaimTypesEnum.document;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.EXAMINATION) {\n    return ClaimTypesEnum.exam;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.MARKS_PUBLICATION) {\n    return ClaimTypesEnum.marks_publication;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    return ClaimTypesEnum.placement;\n  }\n};\n\nexport const whichClaimStatus = (\n  thisClaim: CandidateClaimInterface\n): {\n  classes: string;\n  status: string;\n} => {\n  let classes: string, status: string;\n  switch (thisClaim.last_claim_status) {\n    case ClaimStatus.COMPLETED:\n      classes = \"text-blue-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.COMPLETED.toLocaleLowerCase());\n      break;\n    case ClaimStatus.EVALUATED:\n      classes = \"text-green-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.EVALUATED.toLocaleLowerCase());\n      break;\n\n    case ClaimStatus.DELETED:\n      classes = \"text-red-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.DELETED.toLocaleLowerCase());\n      break;\n\n    default:\n      classes = \"text-yellow-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.PENDING.toLocaleLowerCase());\n      break;\n  }\n\n  return { classes, status };\n};\n\nexport const getClaimById = (\n  claimList: CandidateClaimInterface[],\n  claim_id: string\n): CandidateClaimInterface | null => {\n  console.log(\"====================================\");\n  console.log({ claimList, claim_id });\n  console.log(\"====================================\");\n  let result: CandidateClaimInterface | undefined = claimList.find(\n    (item) => item._id === claim_id\n  );\n  return result ? result : null;\n};\n\nexport const getApplicationById = (\n  candidateApplications: claimApplicationsInterface[],\n  application_id: string\n): claimApplicationsInterface | null => {\n  let result: claimApplicationsInterface | undefined =\n    candidateApplications.find(\n      (item) => item.application_id === application_id\n    );\n  return result ? result : null;\n};\n\nexport const displayDocClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: DocumentClaimUser[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = getDocumentById(candidateDocuments, thisClaim.claiming_on_id);\n    result = thisDoc\n      ? ClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  return result;\n};\n\nexport const displayClaimTitle = (\n  claiming: ClaimingReducerType,\n  documentReducer: DocumentReducerInterface,\n  allCourse: course[] | null,\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = thisClaim.claiming_on_id;\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n    claiming.candidateDocuments\n  ) {\n    result = displayDocClaimTitle(\n      documentReducer,\n      claiming.candidateDocuments,\n      thisClaim\n    );\n  }\n  if (\n    thisClaim.type_key === PlansTypeKeys.APPLICATION &&\n    claiming.candidateApplications\n  ) {\n    let thisApplication = getApplicationById(\n      claiming.candidateApplications,\n      thisClaim.claiming_on_id\n    );\n    if (thisApplication) {\n      result = thisApplication.position.position_title;\n    } else {\n      result = \"Application not found\";\n    }\n  }\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n    allCourse &&\n    claiming.myAnswer\n  ) {\n    let thisAnswer = getCourseIdBySheetId(\n      claiming.myAnswer,\n      thisClaim.claiming_on_id\n    );\n    if (thisAnswer && getCourseById(allCourse, thisAnswer.course)) {\n      result = getCourseById(allCourse, thisAnswer.course)!.course_name;\n    } else {\n      result = \"Exam not found\";\n    }\n  }\n\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    result = claiming.myPlacement\n      ? \"Placed on \" + claiming.myPlacement.placed.school.school_name\n      : \"Placement not found\";\n  }\n\n  return result;\n};\n\n// -------------------------------------------------------------------------\n\ntype AppProps = {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  courses: course[] | null;\n  documentReducer: DocumentReducerInterface;\n  getMyPlacement: Function;\n  getMyClaims: Function;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getClaimReasons: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingSession: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  periodChanged: boolean;\n  viewClaim: boolean;\n  claimId: string | null;\n  claimForm: boolean;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  reClaiming: boolean;\n  reClaimingMsg: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingSession: true,\n      thisPeriod: null,\n      periodChanged: false,\n      viewClaim: false,\n      claimId: null,\n      claimForm: false,\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      reClaiming: false,\n      reClaimingMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingSession = (value: boolean) => {\n    this.setState({ loadingSession: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setClaimForm = (value: boolean) => {\n    this.setState({ claimForm: value });\n  };\n\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setReClaiming = (value: boolean) => {\n    this.setState({ reClaiming: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setReClaimingMsg = (value: string) => {\n    this.setState({ reClaimingMsg: value });\n  };\n\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  loadClaims = (thisPeriod: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.myClaims === null && thisPeriod !== null) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && this.setLoading(status);\n          if (status === false && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && this.state.loading) {\n      this.setLoading(false);\n    }\n  };\n\n  setSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null && sessions.length > 0) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadClaims(thisSession ? thisSession : sessions[0]);\n      this.loadExamAnswers(\n        thisSession ? thisSession : sessions[0],\n        this.props.auth.user.user_id\n      );\n    }\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ loadExamAnswers: data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          if (!status) {\n            this.setLoadingSession(false);\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              // SETTING ACTIVE SESSION ==========================\n              if (this.state.thisPeriod === null) {\n                this.setSession(data);\n              }\n            }\n          }\n        }\n      );\n    } else {\n      this.setSession(this.props.application_sessions);\n      this.setLoadingSession(false);\n    }\n\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n    if (!this.props.documentReducer.documentSubCategory && this.state.loading) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (!this.props.documentReducer.documentFields && this.state.loading) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.myPlacement === null) {\n      this.props.getMyPlacement(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        }\n      );\n    }\n  };\n\n  isDeleteAllowed = (thisCLaim: CandidateClaimInterface): boolean => {\n    if (!isClaimEvaluated(thisCLaim, 1)) {\n      return true;\n    }\n    return false;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getMyClaims(\n      this.props.auth.user.user_id,\n      period_id,\n      (status: boolean, msg: string) => {\n        this.setLoadingRequest(status);\n        !status && this.setPeriodChanged(false);\n        if (status === false && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.myClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            <button\n              className=\"btn mb-3 border-2 border-blue-500 hover:bg-blue-500 hover:text-white flex items-center flex-1 font-bold w-full focus:outline-none\"\n              onClick={() => {\n                this.setClaimForm(true);\n                // alert(\"clicked\");\n              }}\n              disabled={\n                this.state.viewClaim ||\n                this.state.loading ||\n                this.state.loadingRequest\n              }\n            >\n              <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n              <span>Claiming</span>\n            </button>\n\n            {/* FILTER SECTION */}\n            <FilterByType loadingClaims={this.state.loadingRequest} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* ------------------------------------------------------------------- */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loading}\n            loadingSession={this.state.loadingSession}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingSession}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td className=\"px-2 py-2\">Claim title</td>\n                  {this.props.claiming.selectedClaimType === \"all\" && (\n                    <td className=\"px-2 py-2\">Claim type</td>\n                  )}\n                  <td className=\"px-2 py-2\">Claim status</td>\n                  <td className=\"px-2 py-2\"></td>\n                </tr>\n              </thead>\n              <tbody>\n                {filterClaimsByClaimType(\n                  this.props.claiming.myClaims,\n                  this.props.claiming.selectedClaimType\n                ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={4}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"No claim found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : (\n                  filterClaimsByClaimType(\n                    this.props.claiming.myClaims,\n                    this.props.claiming.selectedClaimType\n                  ).map((claim, index) => (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={index + claim._id}\n                      onClick={() => {\n                        this.setViewClaim(true);\n                        this.setClaimId(claim._id);\n                      }}\n                    >\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {index + 1}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {claim.title}\n                      </td>\n                      {this.props.claiming.selectedClaimType === \"all\" && (\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {whichClaimType(claim)\n                            ? capitalizeFirstLetter(whichClaimType(claim)!)\n                            : \"-\"}\n                        </td>\n                      )}\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        <span\n                          className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                            whichClaimStatus(claim).classes\n                          }`}\n                        >\n                          {whichClaimStatus(claim).status}\n                        </span>\n                      </td>\n                      <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                        <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                          View\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </section>\n        )}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {this.state.viewClaim &&\n          this.props.claiming.myClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.myClaims, this.state.claimId) && (\n            <section className=\"bg-white w-full p-1 my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(false);\n                    this.setLoadingRequest(false);\n                    this.setFormError(null);\n                    this.setReClaiming(false);\n                    this.setReClaimingMsg(\"\");\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                {this.isDeleteAllowed(\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!\n                ) && (\n                  <button\n                    className={`bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                      this.state.loadingRequest\n                        ? \"cursor-not-allowed\"\n                        : \"cursor-pointer\"\n                    } animate__animated animate__fadeIn hidden`}\n                    disabled={this.state.loadingRequest}\n                    // onClick={() => {\n                    //   this.handleDelete();\n                    // }}\n                  >\n                    <MdDelete className=\"w-7 h-7\" />\n                  </button>\n                )}\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n              <section className=\"my-2\">\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n                this.props.claiming.candidateDocuments &&\n                getDocumentById(\n                  this.props.claiming.candidateDocuments,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimDocView\n                    thisDoc={\n                      getDocumentById(\n                        this.props.claiming.candidateDocuments,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewImage={this.state.viewImage}\n                    setViewImage={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.DOCUMENT_VALIDATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Document not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n\n                {/* ############################################################### */}\n\n                {/* VIEWING CLAIM OF AN APPLICATION ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.APPLICATION &&\n                this.props.claiming.candidateApplications &&\n                getApplicationById(\n                  this.props.claiming.candidateApplications,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimApplView\n                    thisApplication={\n                      getApplicationById(\n                        this.props.claiming.candidateApplications,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.APPLICATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Application not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN APPLICATION ===================== */}\n\n                {/* VIEWING CLAIM OF AN EXAM ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.EXAMINATION &&\n                this.props.claiming.myAnswer &&\n                this.props.courses &&\n                getCourseIdBySheetId(\n                  this.props.claiming.myAnswer,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) &&\n                getCourseById(\n                  this.props.courses,\n                  getCourseIdBySheetId(\n                    this.props.claiming.myAnswer,\n                    getClaimById(\n                      this.props.claiming.myClaims,\n                      this.state.claimId\n                    )!.claiming_on_id\n                  )!.course\n                ) ? (\n                  <ClaimExamView\n                    thisExam={\n                      getCourseById(\n                        this.props.courses,\n                        getCourseIdBySheetId(\n                          this.props.claiming.myAnswer,\n                          getClaimById(\n                            this.props.claiming.myClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        )!.course\n                      )!\n                    }\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    thisExamSheet={\n                      getCourseIdBySheetId(\n                        this.props.claiming.myAnswer,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.EXAMINATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Exam not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN EXAM ===================== */}\n\n                {/* ----------------------------------------------------------- */}\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.PLACEMENT_TRANSFER &&\n                this.props.claiming.myPlacement ? (\n                  <ClaimPlacementView\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    myPlacement={this.props.claiming.myPlacement}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.PLACEMENT_TRANSFER && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Placement not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n              </section>\n            </section>\n          )}\n        {/* end view claim */}\n\n        {/* ----------------------------------------------------------------------- */}\n        {/* CLAIM FORM  ################ */}\n        {this.state.claimForm && (\n          <ClaimForm\n            formState={this.state.claimForm}\n            setFormState={this.setClaimForm}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    claiming,\n    application_sessions: sessionPlan.allSessionPlans,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const CandidateClaim = connect(mapStateToProps, {\n  getMyClaims,\n  GetAllSessionPlans,\n  getClaimReasons,\n  loadCourses,\n  getMyPlacement,\n  getMyAnswers,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(Index);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { DATE, errorToText, showDate } from \"../../utils/functions\";\nimport ViewRequirements from \"../Positions/ViewRequirements\";\nimport { FC_ApplicationPositionDistinctCategory } from \"./Candidate/ApplicationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisApplication: claimApplicationsInterface;\n  documentCategories: DocumentReducerInterface;\n  claimReasons: claimReasonInterface[] | null;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous.status === ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisClaim.previous.status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous.reason}\n            </span>\n          </div>\n\n          {/* DISPLAY POSITION ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {props.thisApplication.position.description}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.school_level_id\n                        .school_level_name\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.education_institute_id\n                        .education_category_title\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {props.thisApplication.position.courses.map(\n                      (item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            props.thisApplication.position.courses.length - 1 &&\n                            \",\"}\n                        </div>\n                      )\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {props.thisApplication.position.requirements.length > 0 ? (\n                  FC_ApplicationPositionDistinctCategory(\n                    props.thisApplication.position,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewRequirements\n                          requirements={FC_ApplicationPositionDistinctCategory(\n                            props.thisApplication.position,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  ClaimStatus,\n  course,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\nimport { claimShowAnswer } from \"./Candidate/ExaminationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisExam: course;\n  thisExamSheet: ClaimExamResultsDetails;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  claimReasons: claimReasonInterface[] | null;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [loading, props]);\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              Exam of {props.thisExam.course_name}{\" \"}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n\n          {/* DISPLAY EXAM SHEET ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"bg-white w-full rounded p-2 mb-2\">\n              <CandidateAnswersDetails\n                showAnswers={false}\n                exam_id={claimShowAnswer(\n                  props.thisExamSheet,\n                  props.thisExam.course_name\n                )}\n              />\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {loading ? (\n                          <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n                        ) : (\n                          props.thisClaim.userDetails.user_info.fname +\n                          \" \" +\n                          props.thisClaim.userDetails.user_info.lname\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  questionTypes,\n}: StoreState): {\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return { questionTypes: questionTypes };\n};\n\nexport default connect(mapStateToProps, {\n  loadQuestionTypes,\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { candidatePlacementInterface } from \"../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimPlacementViewProps = {\n  myPlacement: candidatePlacementInterface;\n  thisClaim: CandidateClaimInterface;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimPlacementView: React.FC<ClaimPlacementViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>School:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div>\n          {/* <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Position:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div> */}\n          <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>District:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.district_id.district_name}\n              </span>\n            </div>\n          </div>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimPlacementView);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ClaimStatus, PlansTypeKeys } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\ntype FilterByTypeProps = {\n  // thisClaimType: ClaimTypesInterface | \"ALL\";\n  // setThisClaimType: React.Dispatch<\n  //   React.SetStateAction<ClaimTypesInterface | \"ALL\">\n  // >;\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst FilterByType: React.FC<FilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRejectedApplications, setLoadingRejectedApplications] =\n    useState<boolean>(true);\n  const [loadingRejectedDocuments, setLoadingRejectedDocuments] =\n    useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.candidateApplications === null) {\n      props.getMyRejectedApplications(\n        props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          if (status === false) {\n            if (msg.length > 0) {\n              props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            setLoadingRejectedApplications(false);\n          }\n        }\n      );\n    } else if (loadingRejectedApplications) {\n      setLoadingRejectedApplications(false);\n    }\n\n    if (props.claiming.candidateDocuments === null) {\n      console.log(\"filterrrrrrrrrrrrrrrrrrrr loadingRejectedDocuments\");\n      props.getMyRejectedDocuments((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingRejectedDocuments(false);\n        }\n      });\n    } else if (loadingRejectedDocuments) {\n      setLoadingRejectedDocuments(false);\n    }\n\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n    }\n\n    if (\n      !loadingRejectedApplications &&\n      !loadingRejectedDocuments &&\n      !loadingClaimTypes &&\n      loading\n    ) {\n      setLoading(false);\n    }\n  }, [\n    loading,\n    loadingClaimTypes,\n    loadingRejectedApplications,\n    loadingRejectedDocuments,\n    props,\n  ]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.myClaims && thisType === \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n    if (claiming.myClaims && thisType !== \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {/* PLACEMENT TRANSFER ================================= */}\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n          {/* <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.APPLICATION)}\n              active={props.thisClaimType === ClaimTypesInterface.APPLICATION}\n              count={countClaims(props.claiming).applications}\n            />\n          </div>\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.PLACEMENT);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.PLACEMENT)}\n              active={props.thisClaimType === ClaimTypesInterface.PLACEMENT}\n              count={countClaims(props.claiming).placement}\n            />\n          </div> */}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default connect(mapStateToProps, {\n  GetClaimingTypes,\n  setSelectedClaimType,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  PushPopupAlert,\n})(FilterByType);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { BiExport, BiSort } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadEducationCategories,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  setSelectedClaimType,\n  GetClaimingTypes,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  claimReportContentInterface,\n  claimReportContentKeyInterface,\n  ClaimToPrintInterface,\n} from \"../../../interfaces/claimings\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\nimport { ClaimTypesEnum, whichClaimType } from \"../../Claimings/Candidate\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport {\n  education_category,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport NoSession from \"../../SessionSettings/NoSession\";\n\nexport const reportClaimType = (\n  type: PlansTypeKeys | \"all\"\n): ClaimTypesEnum | \"all\" => {\n  let result: ClaimTypesEnum | \"all\" = \"all\";\n  switch (type) {\n    case PlansTypeKeys.APPLICATION:\n      result = ClaimTypesEnum.application;\n      break;\n    case PlansTypeKeys.DOCUMENT_VALIDATION:\n      result = ClaimTypesEnum.document;\n      break;\n    case PlansTypeKeys.EXAMINATION:\n      result = ClaimTypesEnum.exam;\n      break;\n    case PlansTypeKeys.MARKS_PUBLICATION:\n      result = ClaimTypesEnum.marks_publication;\n      break;\n    case PlansTypeKeys.PLACEMENT_TRANSFER:\n      result = ClaimTypesEnum.placement;\n      break;\n    default:\n      result = \"all\";\n      break;\n  }\n\n  return result;\n};\n\nconst searchData = (\n  objList: ClaimToPrintInterface[],\n  text: string\n): ClaimToPrintInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"names\" ||\n        prop === \"gender\" ||\n        prop === \"national_id\" ||\n        prop === \"phone\" ||\n        prop === \"email\" ||\n        prop === \"claim_title\" ||\n        prop === \"claim_type\" ||\n        prop === \"claim_level\" ||\n        prop === \"education_category\" ||\n        prop === \"claim_session\" ||\n        prop === \"date\" ||\n        prop === \"decision\"\n      ) {\n        if (product[prop]) {\n          flag =\n            product[prop]!.toString()\n              .toLowerCase()\n              .indexOf(text.toLowerCase()) > -1;\n        }\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nconst defaultReportContent: claimReportContentInterface[] = [\n  {\n    key: claimReportContentKeyInterface.names,\n    title: \"Applicant Names\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  { key: claimReportContentKeyInterface.gender, title: \"Gender\", status: true },\n  { key: claimReportContentKeyInterface.phone, title: \"Phone\", status: true },\n  {\n    key: claimReportContentKeyInterface.claim_session,\n    title: \"Claim Session\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.education_category,\n    title: \"Education Institute\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.date,\n    title: \"Claim Date\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.decision,\n    title: \"Decision\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_title,\n    title: \"Claim Title\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_type,\n    title: \"Claim Type\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_level,\n    title: \"Claim Level\",\n    status: true,\n  },\n];\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  // systemPositions: PositionAPI[] | null;\n  // courses: course[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  // loadCourses: Function;\n  // getAllAnswers: Function;\n  setSelectedClaimType: Function;\n  // getPositions: Function;\n  getAllClaims: Function;\n  GetClaimingTypes: Function;\n  // getAllApplications: Function;\n  GetAllSessionPlans: Function;\n  // getDocumentCategory: Function;\n  // getDocumentSubCategory: Function;\n  // getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst _ClaimingReport: React.FC<AppProps> = (props) => {\n  const [thisPeriod, setThisPeriod] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [thisLevel, setThisLevel] = useState<number | \"all\">(\"all\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [periodChanged, setPeriodChanged] = useState<boolean>(false);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(true);\n  const [loadingInstitutes, setLoadingInstitutes] = useState<boolean>(true);\n  const [downloading, setDownloading] = useState<boolean>(false);\n  const [claimToPrint, setClaimToPrint] = useState<\n    ClaimToPrintInterface[] | null\n  >();\n\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [generateReportModal, setGenerateReportModal] = useState<{\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null>(null);\n  const [reportTitle, setReportTitle] = useState<string>(\"\");\n  const [reportContent, setReportContent] =\n    useState<claimReportContentInterface[]>(defaultReportContent);\n  const [selectAll, setSelectAll] = useState<boolean>(true);\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [selectPeriod, setSelectPeriod] = useState<boolean>(false);\n  const [thisEducation, setThisEducation] = useState<\n    education_category | \"all\"\n  >(\"all\");\n\n  useEffect(() => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      props.schoolLevels.education_categories === null ||\n      props.schoolLevels.education_categories.length === 0\n    ) {\n      props.loadEducationCategories(setLoadingInstitutes);\n    } else {\n      setLoadingInstitutes(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n    // LOADING CLAIM TYPES ========================================\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n    // END LOADING CLAIM TYPES ========================================\n    // LOADING APPLICATION SESSION ====================================\n    if (props.application_sessions === null) {\n      props.GetAllSessionPlans((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (\n      thisPeriod === null &&\n      !loadingSession &&\n      props.application_sessions &&\n      props.application_sessions.length > 0\n    ) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setThisPeriod(thisSession ? thisSession : props.application_sessions[0]);\n      // if (props.claiming.allAnswer === null) {\n      //   props.getAllAnswers(\n      //     thisSession\n      //       ? thisSession.session_plan_id\n      //       : props.application_sessions[0].session_plan_id,\n      //     (status: boolean, msg: string) => {\n      //       setLoading(status);\n      //       if (!status && msg.length) {\n      //         props.PushPopupAlert({\n      //           title: msg,\n      //           theme: PopupAlertTheme.danger,\n      //         });\n      //       }\n      //     }\n      //   );\n      // }\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    // if (!props.documentReducer.documentCategory && loadingDocuments) {\n    //   props.getDocumentCategory();\n    //   setLoadingDocuments(false);\n    // } else if (loadingDocuments) {\n    //   setLoadingDocuments(false);\n    // }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    // if (!props.documentReducer.documentSubCategory && loadingClarifications) {\n    //   props.getDocumentSubCategory();\n    //   setLoadingClarifications(false);\n    // } else if (loadingClarifications) {\n    //   setLoadingClarifications(false);\n    // }\n    // LOADING DOCUMENT FIELDS ==========================\n    // if (!props.documentReducer.documentFields && loadingFields) {\n    //   props.getDocumentFields();\n    //   setLoadingFields(false);\n    // } else if (loadingFields) {\n    //   setLoadingFields(false);\n    // }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allClaims === null && thisPeriod !== null) {\n      props.getAllClaims(\n        2,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingClaims(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingClaims) {\n      setLoadingClaims(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    // if (props.claiming.allApplications === null && thisPeriod !== null) {\n    //   props.getAllApplications(\n    //     thisPeriod.session_plan_id,\n    //     (status: boolean, msg: string) => {\n    //       !status && setLoadingApplications(status);\n    //       if (status === false && msg.length) {\n    //         props.PushPopupAlert({\n    //           title: msg,\n    //           theme: PopupAlertTheme.danger,\n    //         });\n    //       }\n    //     }\n    //   );\n    // } else if (thisPeriod && loadingApplications) {\n    //   setLoadingApplications(false);\n    // }\n\n    // if (props.systemPositions === null) {\n    //   props.getPositions((status: boolean, msg: string) => {\n    //     setLoadingPosition(status);\n    //     console.log({ status: status, msg: msg });\n    //     if (msg.length) {\n    //       props.PushPopupAlert({\n    //         title: msg,\n    //         theme: PopupAlertTheme.danger,\n    //       });\n    //     }\n    //   });\n    // } else if (loadingPosition) {\n    //   setLoadingPosition(false);\n    // }\n\n    // LOADING COURSE ====================================\n    // if (\n    //   props.courses === null ||\n    //   (props.courses.length === 0 && loadingCourses)\n    // ) {\n    //   props.loadCourses(setLoadingCourses);\n    // } else if (loadingCourses) {\n    //   setLoadingCourses(false);\n    // }\n  }, [loadingClaims, loadingSession, props, thisPeriod]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  if (props.application_sessions && props.application_sessions.length === 0) {\n    return <NoSession />;\n  }\n\n  // const displayClaimTitle = (thisClaim: CandidateClaimInterface): string => {\n  //   let result: string = thisClaim.claiming_on_id;\n  //   if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n  //     result =\n  //       thisClaim.userDetails.details.filter(\n  //         (item) => item.validation_status !== \"waiting\"\n  //       ).length > 0\n  //         ? adminDisplayClaimTitle(\n  //             props.documentReducer,\n  //             thisClaim.userDetails.details.filter(\n  //               (item) => item.validation_status !== \"waiting\"\n  //             ),\n  //             thisClaim\n  //           )\n  //         : \"Document not found\";\n  //   }\n  //   if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n  //     if (props.claiming.allApplications) {\n  //       let thisApplication = props.claiming.allApplications.find(\n  //         (item) => item._id === thisClaim.claiming_on_id\n  //       );\n  //       if (\n  //         thisApplication &&\n  //         props.claiming.allApplications &&\n  //         props.systemPositions\n  //       ) {\n  //         let thisPosition = props.systemPositions.find(\n  //           (item) => item.position_id === thisApplication!.position\n  //         );\n  //         if (thisPosition) {\n  //           result = thisPosition.position_title;\n  //         } else {\n  //           result = \"Application not found\";\n  //         }\n  //       }\n  //     }\n  //   }\n\n  //   if (\n  //     thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n  //     props.courses &&\n  //     props.claiming.allAnswer\n  //   ) {\n  //     let thisAnswer = getCourseIdBySheetId(\n  //       props.claiming.allAnswer,\n  //       thisClaim.claiming_on_id\n  //     );\n  //     if (thisAnswer && getCourseById(props.courses, thisAnswer.course)) {\n  //       result =\n  //         \"Exam of \" +\n  //         getCourseById(props.courses, thisAnswer.course)!.course_name;\n  //     } else {\n  //       result = \"Unknown exam\";\n  //     }\n  //   }\n\n  //   return result;\n  // };\n\n  // const getClaimInstitute = (\n  //   thisClaim: CandidateClaimInterface\n  // ): string | null => {\n  //   if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n  //     return null;\n  //   }\n  //   // if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n  //   //   if (props.claiming.allApplications) {\n  //   //     let thisApplication = props.claiming.allApplications.find(\n  //   //       (item) => item._id === thisClaim.claiming_on_id\n  //   //     );\n  //   //     if (\n  //   //       thisApplication &&\n  //   //       props.claiming.allApplications &&\n  //   //       props.systemPositions\n  //   //     ) {\n  //   //       // return thisApplication.\n  //   //       let thisPosition = props.systemPositions.find(\n  //   //         (item) => item.position_id === thisApplication!.position\n  //   //       );\n  //   //       if (thisPosition) {\n  //   //         return thisPosition.education_institute_id.education_institute_id;\n  //   //       }\n  //   //     }\n  //   //   }\n  //   // }\n\n  //   return null;\n  // };\n\n  const onPeriodChange = (period_id: string) => {\n    setPeriodChanged(true);\n    props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && setPeriodChanged(false);\n      if (status === false && msg.length) {\n        props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  const isClaimTypeActive = (\n    selectedType: PlansTypeKeys | \"all\",\n    currentType: PlansTypeKeys | \"all\"\n  ): boolean => {\n    if (currentType === \"all\" && selectedType === \"all\") {\n      return true;\n    } else if (currentType !== \"all\" && selectedType !== \"all\") {\n      if (currentType === selectedType) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n    } else {\n      setSortOrder(\"ASC\");\n    }\n    setSortProperty(thisProperty);\n    setIsSorted(true);\n  };\n\n  const ClaimTypes = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    type: PlansTypeKeys | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: number;\n      type: PlansTypeKeys | \"all\";\n    }[] = [{ title: \"All types\", count: claims.length, type: \"all\" }];\n\n    Object.values(PlansTypeKeys).forEach((PlansKey) => {\n      if (PlansKey !== PlansTypeKeys.MARKS_PUBLICATION) {\n        output.push({\n          title: capitalizeFirstLetter(reportClaimType(PlansKey)),\n          count:\n            claims.length > 0\n              ? claims.filter(\n                  (itm) => itm.claim_type === reportClaimType(PlansKey)\n                ).length\n              : 0,\n          type: PlansKey,\n        });\n      }\n    });\n\n    return output;\n  };\n\n  const ClaimLevels = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    level: number | \"all\";\n  }[] => {\n    let output: {\n        title: string;\n        count: number;\n        level: number | \"all\";\n      }[] = [{ title: \"All levels\", count: claims.length, level: \"all\" }],\n      levels: number[] = [1, 2];\n    for (let i in levels) {\n      output.push({\n        title: \"Level \" + levels[i],\n        count: claims.filter((itm) => itm.claim_level === levels[i]).length,\n        level: levels[i],\n      });\n    }\n    return output;\n  };\n\n  const updateReportContent = (key: claimReportContentKeyInterface) => {\n    let index: number = reportContent.findIndex((item) => item.key === key);\n    let newArray: claimReportContentInterface[] = reportContent;\n    newArray[index].status = !newArray[index].status;\n    setReportContent(newArray);\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      setSelectAll(false);\n    } else {\n      setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    updateClaimToPrint();\n  };\n\n  const updateClaimToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (thisPeriod) {\n      let title = \"Claim Report \" + thisPeriod.session_plan_name;\n      // if (thisLevel!==\"all\") {\n      //   title = \"Claim Report - Level \"+thisLevel + thisPeriod.session_plan_name;\n      // }\n      setReportTitle(title);\n    }\n    // UPDATE CONTENT =============================\n    if (props.claiming.allClaims && props.claiming.claimTypes) {\n      let arrayNew: ClaimToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in props.claiming.allClaims) {\n        if (\n          Object.prototype.hasOwnProperty.call(props.claiming.allClaims, key)\n        ) {\n          for (const keyClaim in props.claiming.allClaims[key].claims) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                props.claiming.allClaims[key].claims,\n                keyClaim\n              )\n            ) {\n              const element = props.claiming.allClaims[key].claims[keyClaim];\n              const thisType = whichClaimType(props.claiming.allClaims[key]);\n              let dataArray: ClaimToPrintInterface = {\n                claim_id: n,\n                names:\n                  props.claiming.allClaims[key].userDetails.user_info.fname +\n                  \" \" +\n                  props.claiming.allClaims[key].userDetails.user_info.lname,\n                gender: props.claiming.allClaims[key].userDetails.user_info.sex\n                  ? \"Male\"\n                  : \"Female\",\n                national_id: props.claiming.allClaims[key].userDetails.n_id!,\n                phone: props.claiming.allClaims[key].userDetails.phone_number,\n                email: props.claiming.allClaims[key].userDetails.email,\n                claim_type: thisType ? thisType : \"\",\n                claim_level: element.level,\n                education_category: \"\",\n                claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n                date: DATE(element.createdAt),\n                decision: element.decision_taken_status\n                  ? element.decision_taken_status\n                  : \"PENDING\",\n                claim_title: props.claiming.allClaims[key].title,\n              };\n              for (const key in reportContent) {\n                if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n                  if (!reportContent[key].status) {\n                    delete dataArray[reportContent[key].key];\n                  }\n                }\n              }\n              arrayNew.push(dataArray);\n              n++;\n            }\n          }\n        }\n      }\n      setClaimToPrint(arrayNew);\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  const FC_ClaimData = (\n    allClaims: CandidateClaimInterface[] | null\n  ): ClaimToPrintInterface[] | null => {\n    if (allClaims === null) return null;\n    let arrayNew: ClaimToPrintInterface[] = [];\n    let n: number = 1;\n    // LOOP IN ALL CLAIM ONE BY ONE ###########################\n    for (const key in allClaims) {\n      if (Object.prototype.hasOwnProperty.call(allClaims, key)) {\n        // LOOP IN ALL CLAIM OF ONE FILE ONE BY ONE ===========================\n        for (const keyClaim in allClaims[key].claims) {\n          if (\n            Object.prototype.hasOwnProperty.call(\n              allClaims[key].claims,\n              keyClaim\n            )\n          ) {\n            const element = allClaims[key].claims[keyClaim];\n            const thisType = whichClaimType(allClaims[key]);\n            let dataArray: ClaimToPrintInterface = {\n              claim_id: n,\n              names:\n                allClaims[key].userDetails.user_info.fname +\n                \" \" +\n                allClaims[key].userDetails.user_info.lname,\n              gender: allClaims[key].userDetails.user_info.sex\n                ? \"Male\"\n                : \"Female\",\n              national_id: allClaims[key].userDetails.n_id!,\n              phone: allClaims[key].userDetails.phone_number,\n              email: allClaims[key].userDetails.email,\n              claim_type: thisType ? thisType : \"\",\n              claim_level: element.level,\n              education_category:\n                allClaims[key].institute_id &&\n                !isEmptyOrSpaces(allClaims[key].institute_id)\n                  ? allClaims[key].institute_id\n                  : null,\n              claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n              date: DATE(element.createdAt),\n              decision: element.decision_taken_status\n                ? element.decision_taken_status\n                : \"PENDING\",\n              claim_title: allClaims[key].title\n                ? allClaims[key].title\n                : \"Undefined\",\n            };\n            // for (const key in reportContent) {\n            //   if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n            //     if (!reportContent[key].status) {\n            //       delete dataArray[reportContent[key].key];\n            //     }\n            //   }\n            // }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n      }\n    }\n    return arrayNew;\n  };\n\n  const resetReportContent = (currentState: boolean) => {\n    let newArray: claimReportContentInterface[] = reportContent;\n    for (const key in newArray) {\n      if (isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    setReportContent(newArray);\n    setSelectAll(!currentState);\n    updateClaimToPrint();\n  };\n\n  const isChangeAllowed = (key: claimReportContentKeyInterface): boolean => {\n    if (\n      key === claimReportContentKeyInterface.names ||\n      key === claimReportContentKeyInterface.decision ||\n      key === claimReportContentKeyInterface.claim_session ||\n      key === claimReportContentKeyInterface.claim_type ||\n      key === claimReportContentKeyInterface.date\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  const FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return;\n    }\n\n    if (thisPeriod) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: props.auth.user.fname + \" \" + props.auth.user.lname,\n        title: \"Claim Report\",\n        subjectTitle: \"Claim type\",\n        subject:\n          props.claiming.selectedClaimType === \"all\"\n            ? \"All Types\"\n            : props.claiming.selectedClaimType,\n        period: thisPeriod.session_plan_name,\n        footer: \"Online Recruitment\",\n        institute:\n          thisEducation === \"all\"\n            ? \"All institute\"\n            : thisEducation.education_category_title,\n      };\n      table && generatePDF(reportSettings, table, setDownloading);\n    }\n  };\n\n  const FC_FilterClaims = (\n    allClaims: ClaimToPrintInterface[],\n    claimType: PlansTypeKeys | \"all\",\n    claimLevel: number | \"all\",\n    institute: education_category | \"all\"\n  ): ClaimToPrintInterface[] => {\n    let result: ClaimToPrintInterface[] = allClaims;\n    if (claimType !== \"all\") {\n      result = result.filter((item) => item.claim_type === claimType);\n    }\n    if (claimLevel !== \"all\") {\n      result = result.filter((item) => item.claim_level === claimLevel);\n    }\n\n    if (institute !== \"all\") {\n      result = result.filter(\n        (item) =>\n          item.education_category === null ||\n          item.education_category === institute.education_institute_id\n      );\n    }\n\n    return result;\n  };\n\n  return (\n    <Fragment>\n      <SideNavigation>\n        <div className=\"flex flex-col mb-4\">\n          <span className=\"text-sm text-gray-600 mb-2\">\n            Education categories:\n          </span>\n          {props.schoolLevels.education_categories === null ||\n          loadingInstitutes ? (\n            <Loading />\n          ) : props.schoolLevels.education_categories.length === 0 ? (\n            <span>No result found</span>\n          ) : (\n            <Fragment>\n              <div\n                onClick={() => setThisEducation(\"all\")}\n                className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                  thisEducation === \"all\"\n                    ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                } font-bold flex flex-row items-center gap-2`}\n              >\n                {thisEducation === \"all\" ? (\n                  <MdRadioButtonChecked />\n                ) : (\n                  <MdRadioButtonUnchecked />\n                )}\n                <span>All</span>\n              </div>\n              {props.schoolLevels.education_categories.map((item, i) => (\n                <div\n                  onClick={() => setThisEducation(item)}\n                  key={i + 1}\n                  className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                    thisEducation !== \"all\" &&\n                    thisEducation.education_institute_id ===\n                      item.education_institute_id\n                      ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                      : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                  } font-bold flex flex-row items-center gap-2`}\n                >\n                  {thisEducation !== \"all\" &&\n                  thisEducation.education_institute_id ===\n                    item.education_institute_id ? (\n                    <MdRadioButtonChecked />\n                  ) : (\n                    <MdRadioButtonUnchecked />\n                  )}\n                  <span>{item.education_category_title}</span>\n                </div>\n              ))}\n            </Fragment>\n          )}\n        </div>\n        <div className=\"\">\n          <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n          <div\n            onClick={() => setSelectPeriod(true)}\n            className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n          >\n            {thisPeriod !== null\n              ? `${thisPeriod.session_plan_name} - ${thisPeriod.period}`\n              : \"Filter by period\"}\n            <FiEdit className=\"text-3xl text-blue-600\" />\n          </div>\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim types:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimTypes(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() =>\n                    props.setSelectedClaimType(reportClaimType(item.type))\n                  }\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={isClaimTypeActive(\n                      props.claiming.selectedClaimType,\n                      item.type\n                    )}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim level:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimLevels(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() => setThisLevel(item.level)}\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={item.level === thisLevel}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n      </SideNavigation>\n      <section>\n        {/* REPORT TITLE ============================================ */}\n        <div className=\"grid md:grid-cols-12\">\n          <div className=\"col-span-8\">\n            <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n              <span className=\"text-3xl font-bold text-gray-700\">\n                Claim report\n              </span>\n            </div>\n          </div>\n          <div className=\"col-span-4\">\n            <div className=\"float-right mt-2\">\n              {props.claiming.allClaims && props.claiming.allClaims.length > 0 && (\n                <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                  <BiExport className=\"text-2xl text-gray-500\" />\n                  <span className=\"text-gray-500\">Export as</span>\n                  <button\n                    className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                    disabled={loading}\n                    onClick={() => {\n                      updateClaimToPrint();\n                      setGenerateReportModal({\n                        reportType: \"EXCEL\",\n                        status: true,\n                      });\n                    }}\n                  >\n                    EXCEL\n                  </button>\n                  <button\n                    className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                      downloading && \"cursor-wait\"\n                    }`}\n                    onClick={() => FC_GeneratePDF()}\n                    disabled={loading || downloading}\n                  >\n                    PDF\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        {/* END REPORT TITLE ============================================ */}\n        <div className=\"bg-white my-4\">\n          <div className=\"w-full px-2 py-2\">\n            <input\n              onChange={(e) => setSearchInput(e.target.value)}\n              type=\"text\"\n              value={searchInput}\n              placeholder=\"Search...\"\n              className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n              disabled={\n                props.claiming.allClaims === null ||\n                props.claiming.claimTypes === null ||\n                FC_ClaimData(props.claiming.allClaims) === null ||\n                periodChanged\n              }\n            />\n          </div>\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"names\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Applicant names <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"gender\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Gender <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_title\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Title <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_type\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Type <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_level\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Level <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"decision\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Status <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"date\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Date <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.claiming.allClaims === null ||\n              props.claiming.claimTypes === null ||\n              periodChanged ? (\n                <TableLoading cols={10} />\n              ) : FC_ClaimData(props.claiming.allClaims) === null ? (\n                <TableLoading cols={10} />\n              ) : FC_FilterClaims(\n                  FC_ClaimData(props.claiming.allClaims)!,\n                  props.claiming.selectedClaimType,\n                  thisLevel,\n                  thisEducation\n                ).length === 0 ? (\n                <tr>\n                  <td colSpan={10} className=\"px-2 py-2\">\n                    <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                      <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                      <span className=\"text-sm font-bold\">\n                        No result found! Please try to search again\n                      </span>\n                      <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                        <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                          <li\n                            onClick={() => setSelectPeriod(true)}\n                            className=\"underline text-gray-500 cursor-pointer\"\n                          >\n                            Filter by period\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim type\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim Level\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              ) : (\n                sortThisArray(\n                  isSorted,\n                  searchData(\n                    FC_FilterClaims(\n                      FC_ClaimData(props.claiming.allClaims)!,\n                      props.claiming.selectedClaimType,\n                      thisLevel,\n                      thisEducation\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                    } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">{item.names}</td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.gender}</td>\n                    <td className=\"px-2 py-2\">{item.phone}</td>\n                    <td className=\"px-2 py-2\">{item.claim_title}</td>\n                    <td className=\"px-2 py-2\">{item.claim_type}</td>\n                    <td className=\"px-2 py-2\">{\"Level \" + item.claim_level}</td>\n                    <td className=\"px-2 py-2\">\n                      {item.decision}\n                      {/* {capitalizeFirstLetter(item.decision)} */}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.date}</td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </section>\n      {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {generateReportModal !== null && generateReportModal.status === true && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-2xl text-gray-500\">\n                  Generating Report contents\n                </span>\n                <span className=\"text-sm text-blue-600 font-normal\">\n                  Generating {generateReportModal.reportType} Report\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => setGenerateReportModal(null)}\n          backDropClose={false}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-6\">\n            <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n              <div className=\"flex flex-col\">\n                <label>Title</label>\n                <input\n                  type=\"text\"\n                  className={`text-left input-white w-20 inline-block ${\n                    formError && formError.element === \"report_title\"\n                      ? \"border-red-500\"\n                      : \"border-gray-500\"\n                  } border-2`}\n                  placeholder=\"Sub Category Title\"\n                  value={reportTitle}\n                  onChange={(e) => {\n                    setFormError(null);\n                    setReportTitle(e.target.value);\n                  }}\n                  disabled={loading}\n                />\n                {formError && formError.element === \"report_title\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n              <div className=\"flex flex-col mt-2\">\n                <label>Report content</label>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                  {reportContent.map((item, index) => (\n                    <div\n                      key={index}\n                      className={`flex items-center gap-1 ${\n                        isChangeAllowed(item.key)\n                          ? \"cursor-pointer\"\n                          : \"cursor-not-allowed\"\n                      }`}\n                      onClick={() =>\n                        isChangeAllowed(item.key) &&\n                        updateReportContent(item.key)\n                      }\n                      title={\n                        !isChangeAllowed(item.key)\n                          ? \"Required for every report!\"\n                          : \"\"\n                      }\n                    >\n                      {item.status ? (\n                        <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                      ) : (\n                        <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                      )}\n                      <span>{item.title}</span>\n                    </div>\n                  ))}\n                </div>\n                {formError && formError.element === \"report_content\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n            </div>\n            <div className=\"flex justify-between mb-2 mt-4\">\n              <div\n                className={`flex items-center gap-1 cursor-pointer`}\n                onClick={() => resetReportContent(selectAll)}\n              >\n                {selectAll ? (\n                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                ) : (\n                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                )}\n                <span>Select all</span>\n              </div>\n\n              {claimToPrint && !loading && (\n                <ExportToExcel\n                  fileData={claimToPrint}\n                  fileName={reportTitle}\n                  btnName=\"Generate\"\n                />\n              )}\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {selectPeriod && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <MdHistory className=\"text-5xl text-blue-600\" />\n              <span className=\"flex flex-col\">Choose a period</span>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => thisPeriod !== null && setSelectPeriod(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <ChooseSession\n            allSession={props.application_sessions}\n            setSelectSession={(value: SessionPlanInterface | \"all\") => {\n              value !== \"all\" && setThisPeriod(value);\n              value !== \"all\" && onPeriodChange(value.session_plan_id);\n              value !== \"all\" && setSelectPeriod(false);\n            }}\n            chooseAll={false}\n            currentSelected={thisPeriod ? thisPeriod : \"all\"}\n          />\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    claiming,\n    documentReducer: document,\n    schoolLevels,\n  };\n};\n\nexport const ClaimingReport = connect(mapStateToProps, {\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  setSelectedClaimType,\n  PushPopupAlert,\n})(_ClaimingReport);\n"],"sourceRoot":""}
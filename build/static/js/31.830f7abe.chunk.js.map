{"version":3,"sources":["components/Modal/Modal.tsx","components/Navigation/SideNavigation.tsx","actions/location.ts","containers/Locations/RoomForm.tsx","containers/Locations/CenterForm.tsx","containers/Locations/ViewCenters.tsx","containers/Locations/index.tsx"],"names":["Themes","ModalMarginTop","ModalSize","Modal","props","themeColor","title","backDrop","theme","close","backDropClose","widthSizeClass","displayClose","padding","body","footer","primary","secondary","danger","success","warning","onClick","className","undefined","marginTop","none","style","width","maxHeight","height","maxWidth","overflowY","margin","zIndex","default","children","_SideNavigation","componentDidMount","PageHasSubNav","componentWillUnmount","state","loading","this","auth","isAuthenticated","navActive","system","navigation","React","Component","SideNavigation","connect","NavToogle","MainItem","icon","MdBrightness1","active","count","IconDefined","SubItemContainer","SubItem","getAllRoom","callback","dispatch","a","axios","get","API","APPLICATION","res","type","ActionTypes","GET_ALL_ROOM","payload","data","console","error","errorToText","FC_CreateCenter","log","CREATE_CENTER","FC_UpdateCenter","UPDATE_CENTER","FC_DeleteCenter","DELETE_CENTER","FC_CreateRoom","CREATE_ROOM","FC_UpdateRoom","UPDATE_ROOM","FC_DeleteRoom","delete_room","DELETE_ROOM","RoomForm","placeholder","value","roomNumber","onChange","e","setRoomNumber","parseInt","target","disabled","loadingRequest","roomCapacity","setRoomCapacity","setActionTypes","setThisRoom","handleSubmitRoom","CenterForm","element","setError","setCenterName","centerName","msg","handleSubmit","PushPopupAlert","thisProvinceId","thisDistrict","thisCenter","thisRoom","actionTypes","setThisDistrict","setLoadingRequest","setThisCenter","useState","loadingDeletion","setLoadingDeletion","searchCenter","setSearchCenter","length","post","district_id","center_name","rooms","province_id","PopupAlertTheme","map","room","examination_center_room_id","patch","examination_center_id","isUsed","doc_category_error","handleDelete","centerId","window","confirm","delete","center_id","newArr","center","centers","filter","province_error","room_type","room_number","capacity","occupied","room_id","handleDeleteRoom","roomId","district_name","searchData","index","id","medium","Locations","locations","roomLocation","thisProvince","setThisProvince","setLoading","useEffect","districts","status","province","province_name","loc","district"],"mappings":"yJAAA,0GAMYA,EASAC,EAQAC,EAvBZ,e,SAMYF,K,kBAAAA,E,kBAAAA,E,sBAAAA,E,gBAAAA,E,kBAAAA,E,mBAAAA,M,cASAC,K,aAAAA,E,eAAAA,E,iBAAAA,E,gBAAAA,E,iBAAAA,M,cAQAC,K,iBAAAA,E,yBAAAA,E,wBAAAA,E,6BAAAA,E,gCAAAA,M,KAqFGC,IA/DD,SAACC,GACb,IAWIC,EAVFC,EAQkBF,EARlBE,MACAC,EAOkBH,EAPlBG,SACAC,EAMkBJ,EANlBI,MACAC,EAKkBL,EALlBK,MACAC,EAIkBN,EAJlBM,cACAC,EAGkBP,EAHlBO,eACAC,EAEkBR,EAFlBQ,aAPF,EASoBR,EADlBS,eARF,MAQY,CAAEP,OAAO,EAAMQ,MAAM,EAAMC,QAAQ,GAR/C,EAaA,OAAQP,GACN,KAAKR,EAAOgB,QACVX,EAAa,WACb,MACF,KAAKL,EAAOiB,UACVZ,EAAa,WACb,MACF,KAAKL,EAAOkB,OACVb,EAAa,UACb,MACF,KAAKL,EAAOmB,QACVd,EAAa,YACb,MACF,KAAKL,EAAOoB,QACVf,EAAa,aACb,MACF,QACEA,EAAa,QAGjB,OACE,qCACE,qBAAKgB,QAAS,kBAAYX,GAAiBD,KAASa,UAAS,6FAAoG,IAAbf,EAAoB,KAAO,OAC/K,sBAAKe,UAAS,uDAAiEC,IAApBnB,EAAMoB,UAA0BvB,EAAewB,KAAOrB,EAAMoB,UAAzG,2EAAqLb,EAArL,mCAA6OY,IAApBnB,EAAMoB,WAA2BpB,EAAMoB,YAAcvB,EAAewB,KAAO,oBAAsB,kBAA1T,oBAA+VC,MAAO,CAACC,MAAO,OAAQC,UAAW,OAAQC,OAAO,GAAD,OAAKlB,IAAmBT,EAAU4B,cAA+BP,IAApBnB,EAAMoB,UAA0B,OAAS,QAAU,eAAiBO,UAAW,OAAQC,OAAQ,OAAQC,OAAQ,UAAzjB,UACE,sBAAKX,UAAS,kCAA6BjB,EAA7B,aAA6D,IAAlBQ,EAAQP,MAAiB,YAAc,GAAlF,2BAAwGE,IAAUR,EAAOkC,SAAW1B,IAAUR,EAAOiB,UAAY,QAAU,SAAzL,UACIX,GAAmB,KAAVA,EAA8B,oBAAIgB,UAAS,qBAAb,SAAsChB,IAArD,yBACR,IAAjBM,EAAyB,GAAK,qBAAKU,UAAU,+DAAf,SAA8E,cAAC,IAAD,CAASA,UAAU,yCAAyCD,QAAS,kBAAWZ,YAE/L,qBACEa,UAAS,qBAAgC,IAAjBT,EAAQC,KAAgB,YAAc,IADhE,SAGE,8BAAyB,KAAnBV,EAAM+B,SAAkB/B,EAAM+B,SAAW,YAE/BZ,IAAjBnB,EAAMW,QAAyC,KAAjBX,EAAMW,OACnC,qBACEO,UAAS,4BACY,IAAnBT,EAAQE,OAAkB,YAAc,IAF5C,SAKGX,EAAMW,SAGT,W,0PCjFJqB,E,kDACJ,WAAYhC,GAAkB,IAAD,8BAC3B,cAAMA,IAORiC,kBAAoB,kBAAM,EAAKjC,MAAMkC,eAAc,IARtB,EAS7BC,qBAAuB,kBAAM,EAAKnC,MAAMkC,eAAc,IANpD,EAAKE,MAAQ,CACXC,SAAS,GAJgB,E,0CAW7B,WAGE,IAAwB,IAFAC,KAAKtC,MAAMuC,KAAKC,gBAGtC,OAAO,KAGT,IAAMC,EAAYH,KAAKtC,MAAM0C,OAAOC,WACpC,OACE,qBACEzB,UAAS,2DACO,IAAduB,EAAqB,sBAAwB,uBADtC,kGADX,SAKGH,KAAKtC,MAAM+B,e,GA1BUa,IAAMC,WAuCvBC,EAAiBC,aAPN,SAAC,GAIvB,MAAO,CAAER,KADuC,EAFhDA,KAGqBG,OAD2B,EADhDA,UAKqD,CACrDM,cACAd,mBAF4Ba,CAG3Bf,GAwCUiB,EAA2C,SAAC,GAKpC,IAAD,IAJlB/C,aAIkB,MAJV,GAIU,MAHlBgD,YAGkB,MAHXC,IAGW,MAFlBC,cAEkB,aADlBC,aACkB,MADV,EACU,EACZC,EAAcJ,EACpB,OACE,0BACEhC,UAAS,WACI,IAAXkC,EACI,mCACA,4BAHG,+HADX,UAOE,0BAASlC,UAAU,SAAnB,UACE,cAACoC,EAAD,CAAapC,UAAU,8BACvB,+BAAOhB,OAGRmD,EAAQ,EACP,sBAAMnC,UAAU,0DAAhB,SACGmC,IAED,SAgBGE,EAA2D,SAAC,GAEpD,IADnBxB,EACkB,EADlBA,SAEA,OACE,qBAAKb,UAAU,sFAAf,SACGa,KAoBMyB,EAAyC,SAAC,GAKlC,IAAD,IAJlBtD,aAIkB,MAJV,GAIU,MAHlBgD,YAGkB,MAHXC,IAGW,MAFlBC,cAEkB,aADlBC,aACkB,MADV,EACU,EACZC,EAAcJ,EAEpB,OACE,sBACEhC,UAAS,6DACI,IAAXkC,EAAkB,mCAAqC,iBADhD,oFADX,UAKE,cAACE,EAAD,CACEpC,UAAS,uCACI,IAAXkC,EAAkB,aAAe,MAGrC,sBACElC,UAAS,6BAAkC,IAAXkC,EAAkB,aAAe,IADnE,SAGGlD,IAEFmD,GAAS,EACR,sBACEnC,UAAS,6BAAkC,IAAXkC,EAAkB,aAAe,IADnE,SAGGC,IAED,U,iVC7DGI,EAAa,SAACC,GACzB,8CAAO,WAAOC,GAAP,eAAAC,EAAA,6DACLF,GAAS,EAAM,IADV,kBAGeG,IAAMC,IAAN,UACbC,IAAIC,YADS,kBAHf,OAGGC,EAHH,OAMHN,EAA4B,CAC1BO,KAAMC,IAAYC,aAClBC,QAASJ,EAAIK,OAEfZ,GAAS,EAAO,IAVb,gDAYHa,QAAQC,MAAM,QAAd,MACAd,GAAS,EAAOe,YAAY,EAAD,KAbxB,yDAAP,uDA0FWC,EAAkB,SAACJ,GAM9B,OADAC,QAAQI,IAAI,CAAEL,SACd,uCAAO,WAAOX,GAAP,SAAAC,EAAA,sDACLD,EAA8B,CAC5BO,KAAMC,IAAYS,cAClBP,QAASC,IAHN,2CAAP,uDAQWO,EAAkB,SAACP,GAO9B,OADAC,QAAQI,IAAI,CAAEL,SACd,uCAAO,WAAOX,GAAP,SAAAC,EAAA,sDACLD,EAA8B,CAC5BO,KAAMC,IAAYW,cAClBT,QAASC,IAHN,2CAAP,uDAQWS,EAAkB,SAACT,GAK9B,8CAAO,WAAOX,GAAP,SAAAC,EAAA,sDACLD,EAA8B,CAC5BO,KAAMC,IAAYa,cAClBX,QAASC,IAHN,2CAAP,uDASWW,EAAgB,SAACX,GAO5B,OADAC,QAAQI,IAAI,CAAEL,SACd,uCAAO,WAAOX,GAAP,SAAAC,EAAA,sDACLD,EAA4B,CAC1BO,KAAMC,IAAYe,YAClBb,QAASC,IAHN,2CAAP,uDAQWa,EAAgB,SAACb,GAQ5B,8CAAO,WAAOX,GAAP,SAAAC,EAAA,sDACLD,EAA4B,CAC1BO,KAAMC,IAAYiB,YAClBf,QAASC,IAHN,2CAAP,uDAQWe,EAAgB,SAACf,GAO5B,OADAC,QAAQI,IAAI,CAAEW,YAAahB,IAC3B,uCAAO,WAAOX,GAAP,SAAAC,EAAA,sDACLD,EAA4B,CAC1BO,KAAMC,IAAYoB,YAClBlB,QAASC,IAHN,2CAAP,wD,6OCnOakB,EAtDE,SAACxF,GAChB,OACE,eAAC,WAAD,WACE,sBAAKkB,UAAU,2EAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,yCACA,uBACEgD,KAAK,SACLhD,UAAU,mEACVuE,YAAY,cACZC,MAAO1F,EAAM2F,WACbC,SAAU,SAACC,GAAD,OAAO7F,EAAM8F,cAAcC,SAASF,EAAEG,OAAON,SACvDO,SAAUjG,EAAMkG,oBAGpB,sBAAKhF,UAAU,gBAAf,UACE,mDACA,uBACEgD,KAAK,SACLhD,UAAU,mEACVuE,YAAY,gBACZC,MAAO1F,EAAMmG,aACbP,SAAU,SAACC,GAAD,OAAO7F,EAAMoG,gBAAgBL,SAASF,EAAEG,OAAON,SACzDO,SAAUjG,EAAMkG,uBAItB,sBAAKhF,UAAU,4BAAf,UACE,wBACED,QAAS,WACPjB,EAAMqG,eAAe,IACrBrG,EAAMsG,YAAY,MAClBtG,EAAMoG,gBAAgB,GACtBpG,EAAM8F,cAAc,IAEtB5E,UAAS,+CACTgD,KAAK,SACL+B,SAAUjG,EAAMkG,eATlB,kBAaA,wBACEhF,UAAU,8CACVgD,KAAK,SACLjD,QAAS,kBAAMjB,EAAMuG,oBACrBN,SAAUjG,EAAMkG,eAJlB,SAMGlG,EAAMkG,eAAiB,aAAe,gBCelCM,EAxD+B,SAACxG,GAC7C,OACE,eAAC,WAAD,WACE,qBAAKkB,UAAU,2EAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,gDACA,uBACEgD,KAAK,OACLhD,UAAS,sCACPlB,EAAMwE,OAAiC,gBAAxBxE,EAAMwE,MAAMiC,QACvB,iBACA,kBAHG,iDAKTb,SAAU,SAACC,GACT7F,EAAM0G,SAAS,MACf1G,EAAM2G,cAAcd,EAAEG,OAAON,QAE/BA,MAAO1F,EAAM4G,WACbX,SAAUjG,EAAMkG,iBAEjBlG,EAAMwE,OACL,sBAAMtD,UAAU,eAAhB,SAAgClB,EAAMwE,MAAMqC,WAIlD,sBAAK3F,UAAU,4BAAf,UACE,yBACEgD,KAAK,SACLhD,UAAU,0FACVD,QAAS,WACPjB,EAAMqG,eAAe,IACrBrG,EAAM2G,cAAc,KAEtBV,SAAUjG,EAAMkG,eAPlB,UASE,cAAC,IAAD,CACEhF,UAAS,8CACPlB,EAAMkG,eAAiB,gBAAkB,MAX/C,YAgBA,yBACEhC,KAAK,SACLhD,UAAU,0DACVD,QAAS,kBAAMjB,EAAM8G,gBACrBb,SAAUjG,EAAMkG,eAJlB,UAME,cAAC,KAAD,CAAQhF,UAAU,kCAClB,+BAAOlB,EAAMkG,eAAiB,aAAe,mB,QCumBxCnD,cAAQ,KAAM,CAC3B2B,oBACAG,oBACAE,oBACAE,kBACAE,kBACAE,kBACA0B,oBAPahE,EA1mByB,SAAC,GAmBlC,IAlBLiE,EAkBI,EAlBJA,eACAC,EAiBI,EAjBJA,aACAC,EAgBI,EAhBJA,WACAC,EAeI,EAfJA,SACAjB,EAcI,EAdJA,eACAkB,EAaI,EAbJA,YACAC,EAYI,EAZJA,gBACAC,EAWI,EAXJA,kBACAC,EAUI,EAVJA,cACAjB,EASI,EATJA,YACAD,EAQI,EARJA,eACA3B,EAOI,EAPJA,gBACAG,EAMI,EANJA,gBACAE,EAKI,EALJA,gBACAE,EAII,EAJJA,cACAE,EAGI,EAHJA,cACAE,EAEI,EAFJA,cACA0B,EACI,EADJA,eAEA,EAAoCS,mBAAiB,IAArD,mBAAOZ,EAAP,KAAmBD,EAAnB,KACA,EAAoCa,mBAAiB,GAArD,mBAAO7B,EAAP,KAAmBG,EAAnB,KACA,EAAwC0B,mBAAiB,GAAzD,mBAAOrB,EAAP,KAAqBC,EAArB,KACA,EAA0BoB,mBACxB,MADF,mBAAOhD,EAAP,KAAckC,EAAd,KAGA,EAA8Cc,mBAAiB,IAA/D,mBAAOC,EAAP,KAAwBC,GAAxB,KACA,GAAwCF,mBAAiB,IAAzD,qBAAOG,GAAP,MAAqBC,GAArB,MAEMd,GAAY,uCAAG,8BAAAlD,EAAA,yDACdgD,EAAWiB,OADG,yCAEVnB,EAAS,CACdD,QAAS,cACTI,IAAK,6BAJU,UAOnBS,GAAkB,GAPC,SAUG,kBAAhBF,EAVa,iCAWHvD,IAAMiE,KAAN,UACP/D,IAAIC,YADG,WAEV,CACE+D,YAAad,EAAac,YAC1BC,YAAapB,EACbqB,MAAO,KAhBI,QAWfhE,EAXe,QAmBPK,OACNC,QAAQI,IAAI,CAAEV,IAAKA,EAAIK,KAAKA,OAC5BI,EAAgB,CACdwD,YAAalB,EACbe,YAAad,EAAac,YAC1BzD,KAAML,EAAIK,KAAKA,OAEjByC,EAAe,CACb7G,MAAO,kCACPE,MAAO+H,IAAgBpH,UAEzBuG,GAAkB,GAClBjB,EAAe,IACfM,EAAc,KAhCD,4BAkCNO,GAA8B,kBAAhBE,EAlCR,wBAmCTa,EAAkBf,EAAWe,MAAMG,KACvC,SAACC,GAAD,OAAUA,EAAKC,8BApCF,UAsCHzE,IAAM0E,MAAN,UACPxE,IAAIC,YADG,WAEV,CACEwE,sBAAuBtB,EAAWsB,sBAClCR,YAAapB,EACbqB,QACAQ,QAAQ,IA5CG,SAsCfxE,EAtCe,QA+CPK,OACNO,EAAgB,CACdqD,YAAalB,EACbe,YAAad,EAAac,YAC1BS,sBAAuBtB,EAAWsB,sBAClCR,YAAapB,IAEfG,EAAe,CACb7G,MAAO,8BACPE,MAAO+H,IAAgBpH,UAEzBuG,GAAkB,GAClBjB,EAAe,IACfM,EAAc,KA5DD,0DAgEjBpC,QAAQI,IAAI,CAAE+D,mBAAmB,EAAD,KAChC3B,EAAe,CACb7G,MAAOuE,YAAY,EAAD,IAClBrE,MAAO+H,IAAgBrH,SAEzBwG,GAAkB,GArED,0DAAH,qDAyEZqB,GAAY,uCAAG,WAAOC,GAAP,mBAAAhF,EAAA,0DACfiF,OAAOC,QAAQ,mDADA,wBAEjBpB,GAAmBkB,GAFF,kBAIG/E,IAAMkF,OAAN,UACbhF,IAAIC,YADS,mBACa4E,IALhB,QAIT3E,EAJS,QAQPK,OACNC,QAAQI,IAAI,CAAEV,QACdc,EAAgB,CACdmD,YAAalB,EACbe,YAAad,EAAac,YAC1BiB,UAAWJ,IAETK,EAPQ,eAOyBhC,GACJ,GAEjCiC,EAASjC,EAAakC,QAAQC,QAC5B,SAAC3C,GAAD,OAAaA,EAAQ+B,wBAA0BI,KAEjDK,EAAOE,QAAUD,EACjB7B,EAAgB4B,GAEhBlC,EAAe,CACb7G,MAAO,8BACPE,MAAO+H,IAAgBpH,UAEzBuG,GAAkB,GAClBjB,EAAe,KA7BF,gDAgCf9B,QAAQI,IAAI,CAAE0E,eAAe,EAAD,KAC5BtC,EAAe,CACb7G,MAAOuE,YAAY,EAAD,IAClBrE,MAAO+H,IAAgBrH,SAEzBwG,GAAkB,GArCH,QAuCjBI,GAAmB,IAvCF,yDAAH,sDA2CZnB,GAAgB,uCAAG,4BAAA3C,EAAA,2DACnB+B,GAAc,GADK,yCAEde,EAAS,CACdD,QAAS,cACTI,IAAK,2BAJc,YAQnBV,GAAgB,GARG,yCASdO,EAAS,CACdD,QAAS,gBACTI,IAAK,+BAXc,UAelBK,EAfkB,yCAgBdH,EAAe,CACpB7G,MAAO,qBACPE,MAAO+H,IAAgBpH,WAlBJ,UAsBvBuG,GAAkB,GAtBK,SAyBD,gBAAhBF,EAzBiB,kCA0BPvD,IAAMiE,KAAN,UACP/D,IAAIC,YADG,eAEV,CACEgF,UAAW9B,EAAWsB,sBACtBc,UAAW,gBACXC,YAAa5D,EACb6D,SAAUrD,EACVsD,SAAU,IAjCK,SA0BnBxF,EA1BmB,QAoCXK,OACNC,QAAQI,IAAI,CAAEV,QACdgB,EAAc,CACZiD,YAAalB,EACbe,YAAad,EAAac,YAC1BiB,UAAW9B,EAAWsB,sBACtBlE,KAAML,EAAIK,KAAKA,OAEjByC,EAAe,CACb7G,MAAO,gCACPE,MAAO+H,IAAgBpH,UAEzBuG,GAAkB,GAClBjB,EAAe,IACfP,EAAc,GACdM,EAAgB,IAnDC,4BAqDVe,GAA4B,gBAAhBC,EArDF,kCAsDPvD,IAAM0E,MAAN,UACPxE,IAAIC,YADG,eAEV,CACEsE,2BAA4BnB,EAASmB,2BACrCU,UAAW9B,EAAWsB,sBACtBc,UAAWnC,EAASmC,UACpBC,YAAa5D,EACb6D,SAAUrD,EACVsD,SAAUtC,EAASsC,SACnBhB,QAAQ,IA/DO,SAsDnBxE,EAtDmB,QAkEXK,OACNC,QAAQI,IAAI,CAAEV,QACdkB,EAAc,CACZ+C,YAAalB,EACbe,YAAad,EAAac,YAC1BiB,UAAW9B,EAAWsB,sBACtBkB,QAASvC,EAASmB,2BAClBiB,YAAa5D,EACb6D,SAAUrD,IAEZY,EAAe,CACb7G,MAAO,4BACPE,MAAO+H,IAAgBpH,UAEzBuG,GAAkB,GAClBjB,EAAe,IACfP,EAAc,GACdM,EAAgB,GAChBE,EAAY,OApFK,0DAwFrB/B,QAAQI,IAAI,CAAE+D,mBAAmB,EAAD,KAChC3B,EAAe,CACb7G,MAAOuE,YAAY,EAAD,IAClBrE,MAAO+H,IAAgBrH,SAEzBwG,GAAkB,GA7FG,0DAAH,qDAiGhBqC,GAAgB,uCAAG,WAAOC,GAAP,mBAAAhG,EAAA,0DACnBiF,OAAOC,QAAQ,iDADI,oBAEF,OAAf5B,EAFiB,yCAGZH,EAAe,CACpB7G,MAAO,sBACPE,MAAO+H,IAAgBnH,WALN,cAQrB0G,GAAmBkC,GARE,kBAUD/F,IAAMkF,OAAN,UACbhF,IAAIC,YADS,uBACiB4F,IAXhB,QAUb3F,EAVa,QAaXK,OACNC,QAAQI,IAAI,CAAEV,QACVgF,EAFQ,eAEwB/B,GACP,GAE7BmB,EAAOnB,EAAWe,MAAMmB,QACtB,SAAC3C,GAAD,OAAaA,EAAQ6B,6BAA+BsB,KAEtDX,EAAOhB,MAAQI,EACfhD,EAAc,CACZ6C,YAAalB,EACbe,YAAad,EAAac,YAC1BiB,UAAW9B,EAAWsB,sBACtBkB,QAASE,IAEXrC,EAAc0B,GACdlC,EAAe,CACb7G,MAAO,4BACPE,MAAO+H,IAAgBpH,UAEzBuG,GAAkB,GAClBjB,EAAe,KAlCE,kDAqCnB9B,QAAQI,IAAI,CAAE0E,eAAe,EAAD,KAC5BtC,EAAe,CACb7G,MAAOuE,YAAY,EAAD,IAClBrE,MAAO+H,IAAgBrH,SAEzBwG,GAAkB,GA1CC,QA4CrBI,GAAmB,IA5CE,0DAAH,sDAgDtB,OACE,sBACExG,UAAS,4EADX,UAGE,sBAAKA,UAAU,0CAAf,UACE,oBAAIA,UAAU,uCAAd,6BAGA,yBACEgD,KAAK,SACLhD,UAAS,yKAETgF,GAAkB,cAFT,YAGS,KAAhBkB,GAAsB,sBACxBnG,QAAS,kBAAMoF,EAAe,kBAC9BJ,SAA0B,KAAhBmB,GAAsBlB,EAPlC,UASE,cAAC,IAAD,CAAOhF,UAAU,wCATnB,oBAaD+F,EAAakC,QAAQtB,OAAS,EAC7B,gCACE,qBAAK3G,UAAU,OAAf,SACE,uBACE0E,SAAU,SAACC,GAAD,OACR+B,GAAgB/B,EAAEG,OAAON,QAE3BxB,KAAK,OACLhD,UAAU,0EACVuE,YAAW,iBAAYwB,EAAa4C,cAAzB,uBACXnE,MAAOiC,OAGVmC,YAAW7C,EAAakC,QAASxB,IAAcS,KAC9C,SAACc,EAAQa,GAAT,OACE,sBAEE7I,UAAU,oDAFZ,UAIE,sBAAKA,UAAU,oCAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,uCAAf,SACGgI,EAAOlB,cAEV,qBAAK9G,UAAU,gCAAf,SACGgI,EAAOjB,MAAMJ,OAAS,EACnBqB,EAAOjB,MAAMJ,OAAS,WACtB,UAGR,sBAAK3G,UAAU,0BAAf,UACGgG,GACCA,EAAWsB,wBACTU,EAAOV,uBACP,yBACEtI,MAAM,sBACNgB,UAAS,4FACPgF,GAAkB,cADX,YAEW,KAAhBkB,GAAsB,sBAC1BnG,QAAS,WACPsG,EAAc2B,GACdvC,EAAcuC,EAAOlB,aACrB3B,EAAe,kBAEjBJ,SAAUC,GAAkC,KAAhBkB,EAV9B,UAYE,cAAC,IAAD,CAAUlG,UAAU,YAZtB,WAeHgG,GACCA,EAAWsB,wBACTU,EAAOV,uBACP,wBACEtI,MAAM,sBACNgB,UAAS,wEACPgF,GAAkB,cADX,YAEW,KAAhBkB,GAAsB,sBAC1BnG,QAAS,kBACP0H,GAAaO,EAAOV,wBAEtBvC,SACEC,GACAuB,EAAgBI,OAAS,GACT,KAAhBT,EAXJ,SAcGK,IAAoByB,EAAOV,sBAC1B,aAEA,sBAAKtH,UAAU,yCAAf,UACE,cAAC,IAAD,CAASA,UAAU,YADrB,eAOR,wBACEhB,MACEgH,GACAA,EAAWsB,wBACTU,EAAOV,sBACL,cACA,aAENtH,UAAS,UACPgG,GACAA,EAAWsB,wBACTU,EAAOV,sBACL,oBACA,oBALG,oIAOTvH,QAAS,kBACNiG,GACDA,EAAWsB,wBACTU,EAAOV,sBAELjB,EAAc,MADdA,EAAc2B,IAnBtB,SAuBGhC,GACDA,EAAWsB,wBACTU,EAAOV,sBACP,cAAC,IAAD,CAActH,UAAU,YAExB,cAAC,IAAD,CAAcA,UAAU,oBAM/BgG,GACCA,EAAWsB,wBACTU,EAAOV,uBACP,sBACEtH,UAAS,+HADX,UAGE,sBAAKA,UAAU,0CAAf,UACE,oBAAIA,UAAU,uCAAd,2BAIA,yBACEgD,KAAK,SACLhD,UAAS,+KAEzBgF,GAAkB,cAFO,YAGP,KAAhBkB,GAAsB,sBACRnG,QAAS,kBAAMoF,EAAe,gBAC9BJ,SAA0B,KAAhBmB,GAAsBlB,EAPlC,UASE,cAAC,IAAD,CAAOhF,UAAU,wCATnB,iBAcDgI,EAAOjB,MAAMJ,OAAS,EACrB,wBACE3G,UAAS,gEADX,UAGE,uBAAOA,UAAU,sEAAjB,SACE,qBACEA,UAAS,+FADX,UAGE,oBAAIA,UAAS,gBAAb,kBACA,oBAAIA,UAAS,gBAAb,kBACA,oBAAIA,UAAS,gBAAb,sBACA,oBAAIA,UAAS,gBAAb,sBACA,oBAAIA,UAAS,uBAGjB,uBACE8I,GAAE,qBAAgB/C,EAAac,aAC/B7G,UAAU,gCAFZ,SAIGgI,EAAOjB,MAAMG,KACZ,SAACC,EAAsB0B,GAAvB,OACE,+BAIE,oBAAI7I,UAAU,gBAAd,SACGmH,EAAKkB,cAER,oBAAIrI,UAAU,gBAAd,SACGmH,EAAKiB,YAER,oBAAIpI,UAAU,gBAAd,SACGmH,EAAKmB,WAER,oBAAItI,UAAU,gBAAd,SACGmH,EAAKoB,WAER,6BACE,sBAAKvI,UAAU,yCAAf,UACE,wBACEhB,MAAM,sBACNgB,UAAU,yEACVD,QAAS,WACPqF,EAAY+B,GACZjC,EAAgBiC,EAAKmB,UACrB1D,EAAcuC,EAAKkB,aACnBlD,EAAe,gBAEjBJ,SACEC,GAAkC,KAAhBkB,EAVtB,SAaE,cAAC,IAAD,CAAUlG,UAAU,4BAEtB,wBACEhB,MAAM,sBACNgB,UAAU,yEACVD,QAAS,kBACP0I,GACEtB,EAAKC,6BAGTrC,SACEC,GAAkC,KAAhBkB,EATtB,SAYGK,IACDY,EAAKC,2BACH,aAEA,qBAAKpH,UAAU,yCAAf,SACE,cAAC,IAAD,CAAUA,UAAU,oCAjDzB6I,EAAQ1B,EAAKC,oCA6D5B,sBAAKpH,UAAU,mBAAf,UACE,cAAC,IAAD,CAAqBA,UAAU,oCAC/B,sBAAMA,UAAU,yBAAhB,mCA5ML6I,EAAQb,EAAOV,6BAwN5B,sBAAKtH,UAAU,mBAAf,UACE,cAAC,IAAD,CAAqBA,UAAU,oCAC/B,sBAAMA,UAAU,yBAAhB,8BAKa,KAAhBkG,GACC,cAACrH,EAAA,EAAD,CACEI,UAAU,EACVC,MAAOR,IAAOkC,QACdzB,MAAO,aACPG,cAAc,EACdF,eAAe,EACfJ,MACE,qBAAKgB,UAAU,8BAAf,SACE,qBAAKA,UAAU,4DAAf,SAOE,qBAAIA,UAAU,sBAAd,UACmB,gBAAhBkG,EACG,oBACgB,gBAAhBA,GAAiC,yBACpB,kBAAhBA,EACG,sBACgB,kBAAhBA,GACA,kCAKZ7G,eAAgBT,IAAUmK,OAC1BxJ,QAAS,CAAEP,OAAO,EAAMQ,MAAM,EAAOC,QAAQ,GA5B/C,SA8BE,qBAAKO,UAAU,YAAf,SACE,sBAAKA,UAAU,2BAAf,WACoB,gBAAhBkG,GACgB,gBAAhBA,IACA,cAAC,EAAD,CACEzB,WAAYA,EACZQ,aAAcA,EACdgB,SAAUA,EACVjB,eAAgBA,EAChBJ,cAAeA,EACfM,gBAAiBA,EACjBE,YAAaA,EACbD,eAAgBA,EAChBE,iBAAkBA,MAGJ,kBAAhBa,GACgB,kBAAhBA,IACA,cAAC,EAAD,CACER,WAAYA,EACZpC,MAAOA,EACP0B,eAAgBA,EAChBS,cAAeA,EACfD,SAAUA,EACVL,eAAgBA,EAChBS,aAAcA,kBChfnBoD,EAAYnH,aARD,SAAC,GAKvB,MAAO,CAAEoH,UADN,EAHHA,UAI8BC,gBAGkB,CAChD3G,gBADuBV,EAxKS,SAAC,GAA+B,IAA7BoH,EAA4B,EAA5BA,UAAW1G,EAAiB,EAAjBA,WAC9C,EAAsC+D,mBAUpC,IAVF,mBAAOJ,EAAP,KAAoBf,EAApB,KAWA,EACEmB,mBAAuC,MADzC,mBAAO6C,EAAP,KAAqBC,EAArB,KAEA,EAAwC9C,mBACtC,MADF,mBAAOP,EAAP,KAAqBI,EAArB,KAGA,EAAoCG,mBAAkC,MAAtE,mBAAON,EAAP,KAAmBK,EAAnB,KACA,EAAgCC,mBAAgC,MAAhE,mBAAOL,EAAP,KAAiBb,EAAjB,KACA,EAA8BkB,oBAAkB,GAAhD,mBAAOnF,EAAP,KAAgBkI,EAAhB,KACA,EAA4C/C,oBAAkB,GAA9D,mBAAOtB,EAAP,KAAuBoB,EAAvB,KAiBA,OAfAkD,qBAAU,WACRD,GAAW,GACNJ,EAAUtC,OAIJsC,EAAUtC,QAA2B,OAAjBwC,EAC7BC,EAAgBH,EAAU,IACjBE,GAAiC,OAAjBpD,EACzBI,EAAgB8C,EAAU,GAAGM,UAAU,IAEvCF,GAAW,GARX9G,GAAW,SAACiH,EAAiB7D,IACZ,IAAX6D,GAAmB7D,EAAIgB,OAAS,GAAGtD,QAAQI,IAAIkC,QAStD,CAACpD,EAAY0G,EAAUtC,OAAQsC,EAAWE,EAAcpD,KAE3C,IAAZ5E,EAEA,qBAAKnB,UAAU,kEAAf,kCAOF,eAAC,WAAD,WACE,eAAC4B,EAAA,EAAD,WACE,sBAAM5B,UAAU,iBAAhB,uBACCiJ,EAAU/B,KAAI,SAACuC,EAAUZ,GAAX,OACb,yBAEE7I,UAAU,OACVD,QAAS,WACPqJ,EAAgBK,GAChBtD,EAAgBsD,EAASF,UAAU,KALvC,SAQE,cAAC,IAAD,CACEvK,MAAOyK,EAASC,cAChBxH,UACEiH,GACAA,EAAanC,cAAgByC,EAASzC,gBAXrC6B,EAAQY,EAASzC,mBAoB5B,sBAAKhH,UAAU,cAAf,UAEE,sBAAKA,UAAU,kCAAf,UACE,cAAC,IAAD,CAAgBA,UAAU,4BAC1B,qBAAKA,UAAU,mCAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,yBAAd,kCAEA,qBAAKA,UAAU,4CAAf,SACE,sBAAKA,UAAU,wCAAf,UAEGmJ,GACC,sBAAMnJ,UAAU,kCAAhB,SACGmJ,EAAaO,gBAGjB3D,GACC,sBAAK/F,UAAU,mCAAf,UACE,cAAC,IAAD,CAAsBA,UAAU,YAChC,sBAAMA,UAAU,kCAAhB,SACG+F,EAAa4C,gCAW9B,sBAAK3I,UAAU,+DAAf,UAEE,sBAAKA,UAAU,4DAAf,UACE,sBAAMA,UAAU,iBAAhB,uBACCmJ,GACDF,EAAUf,QACR,SAACyB,GAAD,OAASA,EAAI3C,cAAgBmC,EAAanC,eAC1CL,OAAS,EACTsC,EACGf,QACC,SAACyB,GAAD,OAASA,EAAI3C,cAAgBmC,EAAanC,eAC1C,GACDuC,UAAUrC,KAAI,SAAC0C,EAAUf,GAAX,OACb,yBAEE7I,UAAU,OACVD,QAAS,kBAAMoG,EAAgByD,IAHjC,SAKE,cAAC,IAAD,CACE5K,MAAO4K,EAASjB,cAChBzG,UACE6D,GACAA,EAAac,cAAgB+C,EAAS/C,gBARrCgC,EAAQe,EAAS/C,gBAgB5B,wCAMHd,GAAgBoD,GACf,cAAC,EAAD,CACErD,eAAgBqD,EAAanC,YAC7BjB,aAAcA,EACdC,WAAYA,EACZC,SAAUA,EACVjB,eAAgBA,EAChBkB,YAAaA,EACbC,gBAAiBA,EACjBC,kBAAmBA,EACnBC,cAAeA,EACfjB,YAAaA,EACbD,eAAgBA","file":"static/js/31.830f7abe.chunk.js","sourcesContent":["/**\n * @description Modal design\n * @done_by Niyongabo\n */\nimport { MdClose } from \"react-icons/md\";\n\nexport enum Themes {\n  default = \"default\",\n  primary = \"primary\",\n  secondary = \"secondary\",\n  danger = \"danger\",\n  success = \"success\",\n  warning = \"warning\",\n}\n\nexport enum ModalMarginTop {\n  none = \"top-0\",\n  small = \"top-28\",\n  medium = \"top-1/3\",\n  large = \"top-1/2\",\n  extra = \"top-2/3\",\n}\n\nexport enum ModalSize {\n  small = \"max-w-sm\",\n  medium = \"max-w-screen-sm\",\n  large = \"max-w-screen-md\",\n  extraLarge = \"max-w-screen-lg\",\n  maxWidth = \"max-w-screen h-full\",\n}\n\ninterface ModalInterface {\n  title?: any;\n  backDrop: boolean;\n  theme: Themes;\n  close: Function;\n  backDropClose: boolean;\n  footer?: any;\n  children: any;\n  widthSizeClass: ModalSize;\n  displayClose: boolean;\n  padding: { title?: boolean; body?: boolean; footer?: boolean };\n  marginTop?: ModalMarginTop;\n}\n\nconst Modal = (props: ModalInterface): JSX.Element => {\n  const {\n    title,\n    backDrop,\n    theme,\n    close,\n    backDropClose,\n    widthSizeClass,\n    displayClose,\n    padding = { title: true, body: true, footer: true },\n  }: ModalInterface = props;\n\n  let themeColor: string;\n\n  switch (theme) {\n    case Themes.primary:\n      themeColor = \"blue-500\";\n      break;\n    case Themes.secondary:\n      themeColor = \"gray-300\";\n      break;\n    case Themes.danger:\n      themeColor = \"red-500\";\n      break;\n    case Themes.success:\n      themeColor = \"green-500\";\n      break;\n    case Themes.warning:\n      themeColor = \"yellow-500\";\n      break;\n    default:\n      themeColor = \"white\";\n      break;\n  }\n  return (\n    <>\n      <div onClick={(): void => backDropClose && close()} className={`animate__animated animate__fadeIn animate__faster modal fixed bg-black bg-opacity-${backDrop === true ? '60' : '0'}`}></div>\n      <div className={`fixed items-center justify-items-center ${props.marginTop === undefined ? ModalMarginTop.none : props.marginTop} left-0 right-0 bottom-0 bg-white rounded shadow-xl self-center ${widthSizeClass} animate__animated ${props.marginTop !== undefined && props.marginTop !== ModalMarginTop.none ? \"animate__fadeInUp\" : \"animate__zoomIn\"} animate__faster`} style={{width: '100%', maxHeight: '99vh', height: `${widthSizeClass === ModalSize.maxWidth ? props.marginTop === undefined ? \"100%\" : \"unset\" : \"fit-content\"}`, overflowY: 'auto', margin: 'auto', zIndex: 99999999}}>\n        <div className={`flex justify-between bg-${themeColor} ${padding.title === true ? \"py-4 px-4\" : \"\" } rounded-t text-${theme === Themes.default || theme === Themes.secondary ? \"black\" : \"white\"}`}>\n          {!title || title === \"\" ? <div></div> : (<h4 className={`text-lg font-bold `}>{title}</h4>)}\n          {displayClose === false ? \"\" : <div className=\"hover:text-red-600 hover:bg-red-100 rounded-full p-1 h-8 w-8\"><MdClose className=\"cursor-pointer font-extrabold text-2xl\" onClick={():void => close()} /></div>}\n        </div>\n        <div\n          className={`space-x-3 ${padding.body === true ? \"py-4 px-4\" : \"\"}`}\n        >\n          <div>{props.children !== \"\" ? props.children : \"\"}</div>\n        </div>\n        {props.footer !== undefined && props.footer !== \"\" ? (\n          <div\n            className={`flex float-right ${\n              padding.footer === true ? \"py-4 px-4\" : \"\"\n            }`}\n          >\n            {props.footer}\n          </div>\n        ) : ( \n          \"\"\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Modal;\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n} from \"../shared/interfaces\";\nimport { errorToText } from \"../utils/errors\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface getAllRoomActions {\n  type: ActionTypes.GET_ALL_ROOM;\n  payload: RoomLocationInterface[];\n}\n\nexport interface createProvinceActions {\n  type: ActionTypes.CREATE_PROVINCE;\n  payload: RoomLocationInterface;\n}\n\nexport interface updateProvinceActions {\n  type: ActionTypes.UPDATE_PROVINCE;\n  payload: {\n    province_id: string;\n    province_name: string;\n  };\n}\n\nexport interface deleteProvinceActions {\n  type: ActionTypes.DELETE_PROVINCE;\n  payload: string;\n}\n\n// ============ DISTRICT =================\nexport interface createDistrictActions {\n  type: ActionTypes.CREATE_DISTRICT;\n  payload: { province_id: string; data: DistrictInterface };\n}\n\nexport interface updateDistrictActions {\n  type: ActionTypes.UPDATE_DISTRICT;\n  payload: {\n    province_id: string;\n    district_id: string;\n    district_name: string;\n  };\n}\n\nexport interface deleteDistrictActions {\n  type: ActionTypes.DELETE_DISTRICT;\n  payload: { province_id: string; district_id: string };\n}\n\n// ============ CENTERS =================\nexport interface createCenterActions {\n  type: ActionTypes.CREATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: CentersInterface;\n  };\n}\n\nexport interface updateCenterActions {\n  type: ActionTypes.UPDATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    examination_center_id: string;\n    center_name: string;\n  };\n}\n\nexport interface deleteCenterActions {\n  type: ActionTypes.DELETE_CENTER;\n  payload: { province_id: string; district_id: string; center_id: string };\n}\n\n// ============ ROOMS =================\nexport interface createRoomActions {\n  type: ActionTypes.CREATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    data: RoomsInterface;\n  };\n}\n\nexport interface updateRoomActions {\n  type: ActionTypes.UPDATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n    room_number: number;\n    capacity: number;\n  };\n}\n\nexport interface deleteRoomActions {\n  type: ActionTypes.DELETE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n  };\n}\n\nexport type RoomActionType =\n  | getAllRoomActions\n  | createProvinceActions\n  | updateProvinceActions\n  | deleteProvinceActions\n  | createDistrictActions\n  | updateDistrictActions\n  | deleteDistrictActions\n  | createCenterActions\n  | updateCenterActions\n  | deleteCenterActions\n  | createRoomActions\n  | updateRoomActions\n  | deleteRoomActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getAllRoom = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<RoomLocationInterface[]>(\n        `${API.APPLICATION}/roomlocation`\n      );\n      dispatch<getAllRoomActions>({\n        type: ActionTypes.GET_ALL_ROOM,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const FC_CreateProvince = (data: RoomLocationInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createProvinceActions>({\n      type: ActionTypes.CREATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateProvince = (data: {\n  province_id: string;\n  province_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateProvinceActions>({\n      type: ActionTypes.UPDATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteProvince = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteProvinceActions>({\n      type: ActionTypes.DELETE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\n// DISTRICT =================\nexport const FC_CreateDistrict = (data: {\n  province_id: string;\n  data: DistrictInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createDistrictActions>({\n      type: ActionTypes.CREATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateDistrict = (data: {\n  province_id: string;\n  district_id: string;\n  district_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateDistrictActions>({\n      type: ActionTypes.UPDATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteDistrict = (data: {\n  province_id: string;\n  district_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteDistrictActions>({\n      type: ActionTypes.DELETE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\n// CENTERS =================\nexport const FC_CreateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  data: CentersInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createCenterActions>({\n      type: ActionTypes.CREATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  examination_center_id: string;\n  center_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateCenterActions>({\n      type: ActionTypes.UPDATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteCenter = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteCenterActions>({\n      type: ActionTypes.DELETE_CENTER,\n      payload: data,\n    });\n  };\n};\n\n// ROOM =================\nexport const FC_CreateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  data: RoomsInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createRoomActions>({\n      type: ActionTypes.CREATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n  room_number: number;\n  capacity: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateRoomActions>({\n      type: ActionTypes.UPDATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n}) => {\n  console.log({ delete_room: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteRoomActions>({\n      type: ActionTypes.DELETE_ROOM,\n      payload: data,\n    });\n  };\n};\n","import React, { Fragment } from \"react\";\nimport { RoomsInterface } from \"../../shared/interfaces\";\n\ninterface RoomFormProps {\n  roomNumber: number;\n  roomCapacity: number;\n  thisRoom: RoomsInterface | null;\n  loadingRequest: boolean;\n  setRoomNumber: React.Dispatch<React.SetStateAction<number>>;\n  setRoomCapacity: React.Dispatch<React.SetStateAction<number>>;\n  setThisRoom: React.Dispatch<React.SetStateAction<RoomsInterface | null>>;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"\"\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_CENTER\"\n      | \"UPDATE_CENTER\"\n      | \"CREATE_ROOM\"\n      | \"UPDATE_ROOM\"\n    >\n  >;\n  handleSubmitRoom: () => Promise<void>;\n}\n\nconst RoomForm = (props: RoomFormProps) => {\n  return (\n    <Fragment>\n      <div className=\"py-4 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n        <div className=\"flex flex-col\">\n          <label>Room</label>\n          <input\n            type=\"number\"\n            className=\"text-left input-white w-20 inline-block border-gray-500 border-2\"\n            placeholder=\"Room number\"\n            value={props.roomNumber}\n            onChange={(e) => props.setRoomNumber(parseInt(e.target.value))}\n            disabled={props.loadingRequest}\n          />\n        </div>\n        <div className=\"flex flex-col\">\n          <label>Seats Capacity</label>\n          <input\n            type=\"number\"\n            className=\"text-left input-white w-20 inline-block border-gray-500 border-2\"\n            placeholder=\"Room capacity\"\n            value={props.roomCapacity}\n            onChange={(e) => props.setRoomCapacity(parseInt(e.target.value))}\n            disabled={props.loadingRequest}\n          />\n        </div>\n      </div>\n      <div className=\"pt-4 flex justify-between\">\n        <button\n          onClick={() => {\n            props.setActionTypes(\"\");\n            props.setThisRoom(null);\n            props.setRoomCapacity(0);\n            props.setRoomNumber(0);\n          }}\n          className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n          type=\"button\"\n          disabled={props.loadingRequest}\n        >\n          Exit\n        </button>\n        <button\n          className=\"btn bg-primary text-white hover:bg-blue-600\"\n          type=\"button\"\n          onClick={() => props.handleSubmitRoom()}\n          disabled={props.loadingRequest}\n        >\n          {props.loadingRequest ? \"Loading...\" : \"Save\"}\n        </button>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default RoomForm;\n","import React, { Fragment } from \"react\";\nimport { MdCancel, MdSave } from \"react-icons/md\";\n\ninterface CenterFormProps {\n  loadingRequest: boolean;\n  centerName: string;\n  error: {\n    element: string;\n    msg: string;\n  } | null;\n  setCenterName: (value: React.SetStateAction<string>) => void;\n  setError: (\n    value: React.SetStateAction<{\n      element: string;\n      msg: string;\n    } | null>\n  ) => void;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"\"\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_CENTER\"\n      | \"UPDATE_CENTER\"\n      | \"CREATE_ROOM\"\n      | \"UPDATE_ROOM\"\n    >\n  >;\n  handleSubmit: () => Promise<void>;\n}\n\nconst CenterForm: React.FC<CenterFormProps> = (props) => {\n  return (\n    <Fragment>\n      <div className=\"py-4 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n        <div className=\"flex flex-col\">\n          <label>Center name</label>\n          <input\n            type=\"text\"\n            className={`bg-white py-1 px-2 border-2 ${\n              props.error && props.error.element === \"center_name\"\n                ? \"border-red-700\"\n                : \"border-gray-700\"\n            } rounded focus:outline-none focus:bg-gray-100`}\n            onChange={(e) => {\n              props.setError(null);\n              props.setCenterName(e.target.value);\n            }}\n            value={props.centerName}\n            disabled={props.loadingRequest}\n          />\n          {props.error && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n      </div>\n      <div className=\"pt-4 flex justify-between\">\n        <button\n          type=\"button\"\n          className=\"btn bg-gray-500 focus:outline-none hover:bg-gray-700 text-white flex items-center gap-1\"\n          onClick={() => {\n            props.setActionTypes(\"\");\n            props.setCenterName(\"\");\n          }}\n          disabled={props.loadingRequest}\n        >\n          <MdCancel\n            className={`inline-block mr-1 text-xl font-bold ${\n              props.loadingRequest ? \"animate-pulse\" : \"\"\n            }`}\n          />\n          Cancel\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-blue focus:outline-none flex items-center gap-1\"\n          onClick={() => props.handleSubmit()}\n          disabled={props.loadingRequest}\n        >\n          <MdSave className=\"inline-blocktext-xl font-bold\" />\n          <span>{props.loadingRequest ? \"loading...\" : \"Save\"}</span>\n        </button>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default CenterForm;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  MdAdd,\n  MdClear,\n  MdCreate,\n  MdDelete,\n  MdExpandLess,\n  MdExpandMore,\n} from \"react-icons/md\";\nimport {\n  FC_CreateCenter,\n  FC_CreateRoom,\n  FC_DeleteCenter,\n  FC_DeleteRoom,\n  FC_UpdateCenter,\n  FC_UpdateRoom,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomsInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { AiOutlineFileSearch } from \"react-icons/ai\";\nimport RoomForm from \"./RoomForm\";\nimport CenterForm from \"./CenterForm\";\nimport searchData from \"../../utils/search\";\n\ninterface AppProps {\n  thisProvinceId: string;\n  thisDistrict: DistrictInterface;\n  thisCenter: CentersInterface | null;\n  thisRoom: RoomsInterface | null;\n  loadingRequest: boolean;\n  actionTypes:\n    | \"\"\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_CENTER\"\n    | \"UPDATE_CENTER\"\n    | \"CREATE_ROOM\"\n    | \"UPDATE_ROOM\";\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisCenter: React.Dispatch<React.SetStateAction<CentersInterface | null>>;\n  setThisRoom: React.Dispatch<React.SetStateAction<RoomsInterface | null>>;\n  setThisDistrict: React.Dispatch<\n    React.SetStateAction<DistrictInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"\"\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_CENTER\"\n      | \"UPDATE_CENTER\"\n      | \"CREATE_ROOM\"\n      | \"UPDATE_ROOM\"\n    >\n  >;\n  FC_CreateCenter: Function;\n  FC_UpdateCenter: Function;\n  FC_DeleteCenter: Function;\n  FC_CreateRoom: Function;\n  FC_UpdateRoom: Function;\n  FC_DeleteRoom: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewCenters: React.FC<AppProps> = ({\n  thisProvinceId,\n  thisDistrict,\n  thisCenter,\n  thisRoom,\n  loadingRequest,\n  actionTypes,\n  setThisDistrict,\n  setLoadingRequest,\n  setThisCenter,\n  setThisRoom,\n  setActionTypes,\n  FC_CreateCenter,\n  FC_UpdateCenter,\n  FC_DeleteCenter,\n  FC_CreateRoom,\n  FC_UpdateRoom,\n  FC_DeleteRoom,\n  PushPopupAlert,\n}) => {\n  const [centerName, setCenterName] = useState<string>(\"\");\n  const [roomNumber, setRoomNumber] = useState<number>(0);\n  const [roomCapacity, setRoomCapacity] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n  const [loadingDeletion, setLoadingDeletion] = useState<string>(\"\");\n  const [searchCenter, setSearchCenter] = useState<string>(\"\");\n\n  const handleSubmit = async () => {\n    if (!centerName.length) {\n      return setError({\n        element: \"center_name\",\n        msg: \"Center name is required\",\n      });\n    }\n    setLoadingRequest(true);\n    try {\n      let res;\n      if (actionTypes === \"CREATE_CENTER\") {\n        res = await axios.post<{ data: CentersInterface }>(\n          `${API.APPLICATION}/center`,\n          {\n            district_id: thisDistrict.district_id,\n            center_name: centerName,\n            rooms: [],\n          }\n        );\n        if (res.data) {\n          console.log({ res: res.data.data });\n          FC_CreateCenter({\n            province_id: thisProvinceId,\n            district_id: thisDistrict.district_id,\n            data: res.data.data,\n          });\n          PushPopupAlert({\n            title: \"New Center created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          setLoadingRequest(false);\n          setActionTypes(\"\");\n          setCenterName(\"\");\n        }\n      } else if (thisCenter && actionTypes === \"UPDATE_CENTER\") {\n        const rooms: string[] = thisCenter.rooms.map(\n          (room) => room.examination_center_room_id\n        );\n        res = await axios.patch<{ update: CentersInterface }>(\n          `${API.APPLICATION}/center`,\n          {\n            examination_center_id: thisCenter.examination_center_id,\n            center_name: centerName,\n            rooms,\n            isUsed: true,\n          }\n        );\n        if (res.data) {\n          FC_UpdateCenter({\n            province_id: thisProvinceId,\n            district_id: thisDistrict.district_id,\n            examination_center_id: thisCenter.examination_center_id,\n            center_name: centerName,\n          });\n          PushPopupAlert({\n            title: \"Center updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          setLoadingRequest(false);\n          setActionTypes(\"\");\n          setCenterName(\"\");\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      setLoadingRequest(false);\n    }\n  };\n\n  const handleDelete = async (centerId: string) => {\n    if (window.confirm(\"Are you sure do you want to delete this center?\")) {\n      setLoadingDeletion(centerId);\n      try {\n        const res = await axios.delete<CentersInterface>(\n          `${API.APPLICATION}/center/${centerId}`\n        );\n\n        if (res.data) {\n          console.log({ res });\n          FC_DeleteCenter({\n            province_id: thisProvinceId,\n            district_id: thisDistrict.district_id,\n            center_id: centerId,\n          });\n          let newArr: DistrictInterface = { ...thisDistrict }; // copying the old datas array\n          let center: CentersInterface[] = [];\n\n          center = thisDistrict.centers.filter(\n            (element) => element.examination_center_id !== centerId\n          );\n          newArr.centers = center;\n          setThisDistrict(newArr);\n\n          PushPopupAlert({\n            title: \"Center deleted successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          setLoadingRequest(false);\n          setActionTypes(\"\");\n        }\n      } catch (error) {\n        console.log({ province_error: error });\n        PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n        setLoadingRequest(false);\n      }\n      setLoadingDeletion(\"\");\n    }\n  };\n\n  const handleSubmitRoom = async () => {\n    if (roomNumber <= 0) {\n      return setError({\n        element: \"room_number\",\n        msg: \"Room Name is required\",\n      });\n    }\n\n    if (roomCapacity <= 0) {\n      return setError({\n        element: \"room_capacity\",\n        msg: \"Enter valid room capacity\",\n      });\n    }\n\n    if (!thisCenter) {\n      return PushPopupAlert({\n        title: \"Center is Required\",\n        theme: PopupAlertTheme.success,\n      });\n    }\n\n    setLoadingRequest(true);\n    try {\n      let res;\n      if (actionTypes === \"CREATE_ROOM\") {\n        res = await axios.post<{ data: RoomsInterface }>(\n          `${API.APPLICATION}/centerroom`,\n          {\n            center_id: thisCenter.examination_center_id,\n            room_type: \"Physical room\",\n            room_number: roomNumber,\n            capacity: roomCapacity,\n            occupied: 0,\n          }\n        );\n        if (res.data) {\n          console.log({ res });\n          FC_CreateRoom({\n            province_id: thisProvinceId,\n            district_id: thisDistrict.district_id,\n            center_id: thisCenter.examination_center_id,\n            data: res.data.data,\n          });\n          PushPopupAlert({\n            title: \"New Room created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          setLoadingRequest(false);\n          setActionTypes(\"\");\n          setRoomNumber(0);\n          setRoomCapacity(0);\n        }\n      } else if (thisRoom && actionTypes === \"UPDATE_ROOM\") {\n        res = await axios.patch<{ data: RoomsInterface }>(\n          `${API.APPLICATION}/centerroom`,\n          {\n            examination_center_room_id: thisRoom.examination_center_room_id,\n            center_id: thisCenter.examination_center_id,\n            room_type: thisRoom.room_type,\n            room_number: roomNumber,\n            capacity: roomCapacity,\n            occupied: thisRoom.occupied,\n            isUsed: true,\n          }\n        );\n        if (res.data) {\n          console.log({ res });\n          FC_UpdateRoom({\n            province_id: thisProvinceId,\n            district_id: thisDistrict.district_id,\n            center_id: thisCenter.examination_center_id,\n            room_id: thisRoom.examination_center_room_id,\n            room_number: roomNumber,\n            capacity: roomCapacity,\n          });\n          PushPopupAlert({\n            title: \"Room updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          setLoadingRequest(false);\n          setActionTypes(\"\");\n          setRoomNumber(0);\n          setRoomCapacity(0);\n          setThisRoom(null);\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      setLoadingRequest(false);\n    }\n  };\n\n  const handleDeleteRoom = async (roomId: string) => {\n    if (window.confirm(\"Are you sure do you want to delete this room?\")) {\n      if (thisCenter === null) {\n        return PushPopupAlert({\n          title: \"Center is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n      }\n      setLoadingDeletion(roomId);\n      try {\n        const res = await axios.delete<CentersInterface>(\n          `${API.APPLICATION}/centerroom/${roomId}`\n        );\n        if (res.data) {\n          console.log({ res });\n          let newArr: CentersInterface = { ...thisCenter }; // copying the old datas array\n          let room: RoomsInterface[] = [];\n\n          room = thisCenter.rooms.filter(\n            (element) => element.examination_center_room_id !== roomId\n          );\n          newArr.rooms = room;\n          FC_DeleteRoom({\n            province_id: thisProvinceId,\n            district_id: thisDistrict.district_id,\n            center_id: thisCenter.examination_center_id,\n            room_id: roomId,\n          });\n          setThisCenter(newArr);\n          PushPopupAlert({\n            title: \"Room deleted successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          setLoadingRequest(false);\n          setActionTypes(\"\");\n        }\n      } catch (error) {\n        console.log({ province_error: error });\n        PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n        setLoadingRequest(false);\n      }\n      setLoadingDeletion(\"\");\n    }\n  };\n\n  return (\n    <div\n      className={`bg-white w-full hidden md:block p-2 border border-gray-300 rounded shadow`}\n    >\n      <div className=\"border-b px-2 py-3 flex justify-between\">\n        <h2 className=\"text-3xl font-semibold text-gray-800\">\n          List of Centers\n        </h2>\n        <button\n          type=\"button\"\n          className={`btn mb-1 border-2 border-blue-500 bg-blue-500 hover:bg-white\n        text-white rounded-md flex items-center font-bold hover:text-gray-700 focus:outline-none ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== \"\" && \"cursor-not-allowed\"}`}\n          onClick={() => setActionTypes(\"CREATE_CENTER\")}\n          disabled={actionTypes !== \"\" || loadingRequest}\n        >\n          <MdAdd className=\"inline-block mr-1 text-xl font-bold\" /> New Center\n        </button>\n      </div>\n\n      {thisDistrict.centers.length > 0 ? (\n        <div>\n          <div className=\"mt-2\">\n            <input\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setSearchCenter(e.target.value)\n              }\n              type=\"text\"\n              className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500\"\n              placeholder={`Search ${thisDistrict.district_name}'s centers by title`}\n              value={searchCenter}\n            />\n          </div>\n          {searchData(thisDistrict.centers, searchCenter).map(\n            (center, index) => (\n              <div\n                key={index + center.examination_center_id}\n                className=\"p-2 my-3 rounded border border-gray-200 shadow-md\"\n              >\n                <div className=\"flex justify-between items-center\">\n                  <div className=\"ml-2\">\n                    <div className=\"text-2xl font-semibold text-gray-600\">\n                      {center.center_name}\n                    </div>\n                    <div className=\"text-base top-1 text-gray-600\">\n                      {center.rooms.length > 0\n                        ? center.rooms.length + \" Room(s)\"\n                        : null}\n                    </div>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    {thisCenter &&\n                      thisCenter.examination_center_id ===\n                        center.examination_center_id && (\n                        <button\n                          title=\"Update Sub-Category\"\n                          className={`btn btn-blue text-white flex justify-center items-center gap-1 focus:outline-none ${\n                            loadingRequest && \"cursor-wait\"\n                          } ${actionTypes !== \"\" && \"cursor-not-allowed\"}`}\n                          onClick={() => {\n                            setThisCenter(center);\n                            setCenterName(center.center_name);\n                            setActionTypes(\"UPDATE_CENTER\");\n                          }}\n                          disabled={loadingRequest || actionTypes !== \"\"}\n                        >\n                          <MdCreate className=\"w-6 h-6\" /> Edit\n                        </button>\n                      )}\n                    {thisCenter &&\n                      thisCenter.examination_center_id ===\n                        center.examination_center_id && (\n                        <button\n                          title=\"Delete Sub-Category\"\n                          className={`btn bg-red-500 hover:bg-red-600 text-white focus:outline-none ${\n                            loadingRequest && \"cursor-wait\"\n                          } ${actionTypes !== \"\" && \"cursor-not-allowed\"}`}\n                          onClick={() =>\n                            handleDelete(center.examination_center_id)\n                          }\n                          disabled={\n                            loadingRequest ||\n                            loadingDeletion.length > 0 ||\n                            actionTypes !== \"\"\n                          }\n                        >\n                          {loadingDeletion === center.examination_center_id ? (\n                            \"Loading...\"\n                          ) : (\n                            <div className=\"flex justify-center items-center gap-1\">\n                              <MdClear className=\"w-6 h-6\" /> Delete\n                            </div>\n                          )}\n                        </button>\n                      )}\n\n                    <button\n                      title={\n                        thisCenter &&\n                        thisCenter.examination_center_id ===\n                          center.examination_center_id\n                          ? \"Close Rooms\"\n                          : \"View Rooms\"\n                      }\n                      className={`${\n                        thisCenter &&\n                        thisCenter.examination_center_id ===\n                          center.examination_center_id\n                          ? \"hover:bg-gray-600\"\n                          : \"hover:bg-gray-500\"\n                      } p-2 rounded-full bg-gray-300 hover:shadow-md flex justify-center items-center focus:outline-none text-gray-800 hover:text-white`}\n                      onClick={() =>\n                        !thisCenter ||\n                        thisCenter.examination_center_id !==\n                          center.examination_center_id\n                          ? setThisCenter(center)\n                          : setThisCenter(null)\n                      }\n                    >\n                      {thisCenter &&\n                      thisCenter.examination_center_id ===\n                        center.examination_center_id ? (\n                        <MdExpandLess className=\"w-6 h-6\" />\n                      ) : (\n                        <MdExpandMore className=\"w-6 h-6\" />\n                      )}\n                    </button>\n                  </div>\n                </div>\n\n                {thisCenter &&\n                  thisCenter.examination_center_id ===\n                    center.examination_center_id && (\n                    <div\n                      className={`bg-white h-full w-full hidden md:block mt-2 p-2 pb-5 border border-gray-300 rounded shadow animate__animated animate__fadeIn`}\n                    >\n                      <div className=\"border-b px-2 py-3 flex justify-between\">\n                        <h2 className=\"text-3xl font-semibold text-gray-800\">\n                          List of Rooms\n                        </h2>\n\n                        <button\n                          type=\"button\"\n                          className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== \"\" && \"cursor-not-allowed\"}`}\n                          onClick={() => setActionTypes(\"CREATE_ROOM\")}\n                          disabled={actionTypes !== \"\" || loadingRequest}\n                        >\n                          <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                          New Room\n                        </button>\n                      </div>\n\n                      {center.rooms.length > 0 ? (\n                        <table\n                          className={`w-full shadow sm:rounded-lg table-auto order-table max-w-full`}\n                        >\n                          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                            <tr\n                              className={`text-left tracking-wide bg-gray-100 border-b-2 border-gray-500 text-gray-600 overflow-hidden`}\n                            >\n                              <th className={`p-3 text-left`}>Room</th>\n                              <th className={`p-3 text-left`}>Type</th>\n                              <th className={`p-3 text-left`}>Capacity</th>\n                              <th className={`p-3 text-left`}>Occupied</th>\n                              <th className={`p-3 text-left`}></th>\n                            </tr>\n                          </thead>\n                          <tbody\n                            id={`table-data_${thisDistrict.district_id}`}\n                            className=\"bg-white text-black text-base\"\n                          >\n                            {center.rooms.map(\n                              (room: RoomsInterface, index: number) => (\n                                <tr\n                                  key={index + room.examination_center_room_id}\n                                >\n                                  {/* <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td> */}\n                                  <td className=\"p-3 text-left\">\n                                    {room.room_number}\n                                  </td>\n                                  <td className=\"p-3 text-left\">\n                                    {room.room_type}\n                                  </td>\n                                  <td className=\"p-3 text-left\">\n                                    {room.capacity}\n                                  </td>\n                                  <td className=\"p-3 text-left\">\n                                    {room.occupied}\n                                  </td>\n                                  <td>\n                                    <div className=\"flex items-center justify-center gap-2\">\n                                      <button\n                                        title=\"Update Sub-Category\"\n                                        className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none\"\n                                        onClick={() => {\n                                          setThisRoom(room);\n                                          setRoomCapacity(room.capacity);\n                                          setRoomNumber(room.room_number);\n                                          setActionTypes(\"UPDATE_ROOM\");\n                                        }}\n                                        disabled={\n                                          loadingRequest || actionTypes !== \"\"\n                                        }\n                                      >\n                                        <MdCreate className=\"text-blue-700 w-7 h-7\" />\n                                      </button>\n                                      <button\n                                        title=\"Delete Sub-Category\"\n                                        className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none\"\n                                        onClick={() =>\n                                          handleDeleteRoom(\n                                            room.examination_center_room_id\n                                          )\n                                        }\n                                        disabled={\n                                          loadingRequest || actionTypes !== \"\"\n                                        }\n                                      >\n                                        {loadingDeletion ===\n                                        room.examination_center_room_id ? (\n                                          \"Loading...\"\n                                        ) : (\n                                          <div className=\"flex justify-center items-center gap-1\">\n                                            <MdDelete className=\"text-red-700 w-7 h-7\" />\n                                          </div>\n                                        )}\n                                      </button>\n                                    </div>\n                                  </td>\n                                </tr>\n                              )\n                            )}\n                          </tbody>\n                        </table>\n                      ) : (\n                        <div className=\"text-center py-8\">\n                          <AiOutlineFileSearch className=\"w-24 h-24 mx-auto text-gray-600\" />\n                          <span className=\"text-gray-600 text-2xl\">\n                            No Data Found\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  )}\n              </div>\n            )\n          )}\n        </div>\n      ) : (\n        <div className=\"text-center py-8\">\n          <AiOutlineFileSearch className=\"w-24 h-24 mx-auto text-gray-600\" />\n          <span className=\"text-gray-600 text-2xl\">No Data Found</span>\n        </div>\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {actionTypes !== \"\" && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => {}}\n          displayClose={false}\n          backDropClose={false}\n          title={\n            <div className=\"flex items-center space-x-5\">\n              <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                {/* <p className=\"text-base text-gray-500 font-medium\">\n                    You are{\" \"}\n                    {actionType === \"CREATE_SUB\" || \"CREATE_CAT\"\n                      ? \"creating\"\n                      : \"updating\"}\n                  </p> */}\n                <h2 className=\"uppercase text-back\">\n                  {actionTypes === \"CREATE_ROOM\"\n                    ? \"CREATING NEW ROOM\"\n                    : actionTypes === \"UPDATE_ROOM\" && \"UPDATING EXISTING ROOM\"}\n                  {actionTypes === \"CREATE_CENTER\"\n                    ? \"CREATING NEW CENTER\"\n                    : actionTypes === \"UPDATE_CENTER\" &&\n                      \"UPDATING EXISTING CENTER\"}\n                </h2>\n              </div>\n            </div>\n          }\n          widthSizeClass={ModalSize.medium}\n          padding={{ title: true, body: false, footer: false }}\n        >\n          <div className=\"mx-5 mb-8\">\n            <div className=\"divide-y divide-gray-200\">\n              {(actionTypes === \"CREATE_ROOM\" ||\n                actionTypes === \"UPDATE_ROOM\") && (\n                <RoomForm\n                  roomNumber={roomNumber}\n                  roomCapacity={roomCapacity}\n                  thisRoom={thisRoom}\n                  loadingRequest={loadingRequest}\n                  setRoomNumber={setRoomNumber}\n                  setRoomCapacity={setRoomCapacity}\n                  setThisRoom={setThisRoom}\n                  setActionTypes={setActionTypes}\n                  handleSubmitRoom={handleSubmitRoom}\n                />\n              )}\n              {(actionTypes === \"CREATE_CENTER\" ||\n                actionTypes === \"UPDATE_CENTER\") && (\n                <CenterForm\n                  centerName={centerName}\n                  error={error}\n                  loadingRequest={loadingRequest}\n                  setCenterName={setCenterName}\n                  setError={setError}\n                  setActionTypes={setActionTypes}\n                  handleSubmit={handleSubmit}\n                />\n              )}\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default connect(null, {\n  FC_CreateCenter,\n  FC_UpdateCenter,\n  FC_DeleteCenter,\n  FC_CreateRoom,\n  FC_UpdateRoom,\n  FC_DeleteRoom,\n  PushPopupAlert,\n})(ViewCenters);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdKeyboardArrowRight, MdLocationCity } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { getAllRoom } from \"../../actions/location\";\nimport {\n  MainItem,\n  SideNavigation,\n} from \"../../components/Navigation/SideNavigation\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n} from \"../../shared/interfaces\";\nimport ViewCenters from \"./ViewCenters\";\n\ninterface AppProps {\n  locations: RoomLocationInterface[];\n  getAllRoom: Function;\n}\nconst Index: React.FC<AppProps> = ({ locations, getAllRoom }) => {\n  const [actionTypes, setActionTypes] = useState<\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_CENTER\"\n    | \"UPDATE_CENTER\"\n    | \"CREATE_ROOM\"\n    | \"UPDATE_ROOM\"\n    | \"\"\n  >(\"\");\n  const [thisProvince, setThisProvince] =\n    useState<RoomLocationInterface | null>(null);\n  const [thisDistrict, setThisDistrict] = useState<DistrictInterface | null>(\n    null\n  );\n  const [thisCenter, setThisCenter] = useState<CentersInterface | null>(null);\n  const [thisRoom, setThisRoom] = useState<RoomsInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n\n  useEffect(() => {\n    setLoading(true);\n    if (!locations.length) {\n      getAllRoom((status: boolean, msg: string) => {\n        if (status === true && msg.length > 0) console.log(msg);\n      });\n    } else if (locations.length && thisProvince === null) {\n      setThisProvince(locations[0]);\n    } else if (thisProvince && thisDistrict === null) {\n      setThisDistrict(locations[0].districts[0]);\n    } else {\n      setLoading(false);\n    }\n  }, [getAllRoom, locations.length, locations, thisProvince, thisDistrict]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading locations...\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <SideNavigation>\n        <span className=\"text-base mt-2\">Provinces</span>\n        {locations.map((province, index) => (\n          <section\n            key={index + province.province_id}\n            className=\"mt-1\"\n            onClick={() => {\n              setThisProvince(province);\n              setThisDistrict(province.districts[0]);\n            }}\n          >\n            <MainItem\n              title={province.province_name}\n              active={\n                thisProvince &&\n                thisProvince.province_id === province.province_id\n                  ? true\n                  : false\n              }\n            />\n          </section>\n        ))}\n      </SideNavigation>\n\n      <div className=\"w-full my-5\">\n        {/* header title */}\n        <div className=\"flex flex-row items-start gap-2\">\n          <MdLocationCity className=\"text-blue-500 w-24 h-24\" />\n          <div className=\"flex justify-between w-full mt-2\">\n            <div className=\"flex flex-col\">\n              <h1 className=\"text-4xl font-semibold\">Locations Management</h1>\n\n              <div className=\"flex flex-row items-center md:gap-3 gap-2\">\n                <div className=\"flex flex-row items-center mt-2 gap-1\">\n                  {/* <span className=\"text-gray-600 text-lg\">Desc:</span> */}\n                  {thisProvince && (\n                    <span className=\"text-gray-600 text-lg font-bold\">\n                      {thisProvince.province_name}\n                    </span>\n                  )}\n                  {thisDistrict && (\n                    <div className=\"flex flex-row items-center gap-1\">\n                      <MdKeyboardArrowRight className=\"w-5 h-5\" />\n                      <span className=\"text-blue-600 text-lg font-bold\">\n                        {thisDistrict.district_name}\n                      </span>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        <div className=\"w-full flex h-full flex-col md:flex-row md:items-start gap-2\">\n          {/* ============================  DISTRICT ============================= */}\n          <div className=\"min-h-full w-1/4 bg-white shadow rounded border px-4 py-2\">\n            <span className=\"text-base mt-2\">Districts</span>\n            {thisProvince &&\n            locations.filter(\n              (loc) => loc.province_id === thisProvince.province_id\n            ).length > 0 ? (\n              locations\n                .filter(\n                  (loc) => loc.province_id === thisProvince.province_id\n                )[0]\n                .districts.map((district, index) => (\n                  <section\n                    key={index + district.district_id}\n                    className=\"mt-2\"\n                    onClick={() => setThisDistrict(district)}\n                  >\n                    <MainItem\n                      title={district.district_name}\n                      active={\n                        thisDistrict &&\n                        thisDistrict.district_id === district.district_id\n                          ? true\n                          : false\n                      }\n                    />\n                  </section>\n                ))\n            ) : (\n              <div>No</div>\n            )}\n          </div>\n          {/* =========================== END DISTRICT =========================== */}\n\n          {/* ============================= CENTERS ============================= */}\n          {thisDistrict && thisProvince && (\n            <ViewCenters\n              thisProvinceId={thisProvince.province_id}\n              thisDistrict={thisDistrict}\n              thisCenter={thisCenter}\n              thisRoom={thisRoom}\n              loadingRequest={loadingRequest}\n              actionTypes={actionTypes}\n              setThisDistrict={setThisDistrict}\n              setLoadingRequest={setLoadingRequest}\n              setThisCenter={setThisCenter}\n              setThisRoom={setThisRoom}\n              setActionTypes={setActionTypes}\n            />\n          )}\n          {/* =========================== END CENTERS =========================== */}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: RoomLocationInterface[];\n} => {\n  return { locations: locations.roomLocation };\n};\n\nexport const Locations = connect(mapStateToProps, {\n  getAllRoom,\n})(Index);\n"],"sourceRoot":""}
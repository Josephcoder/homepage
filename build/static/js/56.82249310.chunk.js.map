{"version":3,"sources":["actions/session.ts","actions/settings.ts","containers/MarksPublication/MarksPublication.tsx","containers/MarksPublication/ChoosePosition.tsx","containers/MarksPublication/MarksPublicationForm.tsx","actions/marks_publication.ts","containers/MarksPublication/SetPassMarks.tsx","containers/MarksPublication/DoPlacement.tsx"],"names":["GetPlansTypes","callback","dispatch","a","setAxiosToken","axios","get","API","CLAIMING","res","console","log","GET_PLANS_TYPES","data","plan_types","status","length","type","ActionTypes","payload","error","errorToText","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","undefined","is_active","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","getSystemSettings","AUTH","GET_SYSTEM_SETTINGS","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","map","id","task","title","key","permitted","GET_TASK_ACCESS","getPositions","APPLICATION","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","pageTabs","ChoosePosition","props","setCustomMarks","thisPosition","value","currentSelectedList","customMarks","index","findIndex","item","marks","Number","push","getMarkByPosition","find","setSearchInput","setState","searchInput","state","className","placeholder","onChange","e","target","this","disabled","positionList","onClick","setChoosePosition","searchData","element","position_title","min","max","position_id","defaultMarks","Component","MarksPublicationForm","choosePosition","setFormError","formError","changeDefaultMarks","window","confirm","setInputMarks","cleanBeforeClose","modalAction","setInputComment","setModalAction","handleSubmit","preventDefault","msg","isEmptyOrSpaces","inputComment","positionWithMarks","forEach","positionItem","thisCustomMarks","position","comment","inputMarks","requestData","session","sessions","session_plan_id","doneby","auth","user","user_id","created_date","moment","toDate","format","toString","publication_position_marks","setLoadingRequest","post","createMarksPublication","PushPopupAlert","theme","PopupAlertTheme","success","danger","searchPosition","onSubmit","method","capitalizeFirstLetter","session_plan_name","marksArray","loadingRequest","cols","rows","style","resize","connect","CREATE_MARKS_PUBLICATION","SetPassMarks","styelingController","sectionStyles","btnStyles","isPublished","section","button","getNeededData","allPosition","allMarks","result","marksBySession","marksByPosition","province_id","province_name","courses","description","school_level_id","education_institute_id","requirements","isDeleted","searchPublishedMarks","objList","text","filter","product","flag","prop","toLowerCase","indexOf","marksPublication","i","setThisPosition","isUpdateOn","defaultChanged","NoResult","NoResultThemes","Dark","setPositionInput","positionInput","doPlacement","positionId","PLACEMENT","msgAlert","info","doPlacement_reply","update","n","setLoading","loading","setThisTab","tab","thisTabs","setPositionId","loadPositions","systemPositions","componentDidMount","getMarksPublication","FC_neededPositions","withMarks","withoutMarks","publishedPosition","isMarkPublished","thisPublishedMarks","publication_status","isUpdateAllowed","handleUpdate","thisSession","positionSetPassMarks","_id","publication_id","createdAt","updatedAt","put","updateMarksPublication","getWaitingList","sessionId","DO_EXAM","getWaitingListError","handlePublishMarks","Object","values","DoPlacement","MarksPublication","sessionPlan","system_settings","activeSessionPlan","responseData","GetMarksPublication","GET_MARKS_PUBLICATION","UPDATE_MARKS_PUBLICATION"],"mappings":"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","file":"static/js/56.82249310.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PlansTypeInterface, SessionPlanInterface } from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${API.AUTH}/allroleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdArrowBack } from \"react-icons/md\";\nimport { RiFolderSettingsFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport {\n  getMarksPublication,\n  updateMarksPublication,\n} from \"../../actions/marks_publication\";\nimport { getActiveSessionPlan } from \"../../actions/session\";\nimport { getPositions } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI, SessionPlanInterface } from \"../../interfaces\";\nimport {\n  marksPublicationInterface,\n  publicationInterface,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport MarksPublicationForm from \"./MarksPublicationForm\";\nimport SetPassMarks from \"./SetPassMarks\";\nimport DoPlacement from \"./DoPlacement\";\n\nexport const marksArray = (update: boolean = false): (number | null)[] => {\n  let result: (number | null)[] = update ? [null] : [0],\n    n: number = 0;\n  while (n <= 100) {\n    result.push(n);\n    n++;\n  }\n  return result;\n};\n\nenum pageTabs {\n  withMarks = \"Pass marks\",\n  withoutMarks = \"Do placement\",\n}\n\ninterface MarksPublicationProps {\n  auth: Auth;\n  systemPositions: PositionAPI[] | null;\n  sessions: SessionPlanInterface | \"none\" | null;\n  marksPublication: marksPublicationInterface[] | null;\n  getActiveSessionPlan: Function;\n  getPositions: Function;\n  getMarksPublication: Function;\n  updateMarksPublication: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface MarksPublicationState {\n  loading: boolean;\n  loadingRequest: boolean;\n  modalAction: \"CREATE\" | \"UPDATE\" | false;\n  searchPosition: string;\n  thisTabs: pageTabs;\n  positionId: string[];\n  thisPosition: PositionAPI | null;\n  inputMarks: number;\n  inputComment: string;\n  customMarks: { id: string; marks: number }[];\n  defaultChanged: boolean;\n}\n\nclass index extends Component<MarksPublicationProps, MarksPublicationState> {\n  constructor(props: MarksPublicationProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingRequest: false,\n      modalAction: false,\n      searchPosition: \"\",\n      thisTabs: pageTabs.withMarks,\n      positionId: [],\n      thisPosition: null,\n      inputMarks: 70,\n      inputComment: \"\",\n      customMarks: [],\n      defaultChanged: false,\n    };\n  }\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n\n  setLoadingRequest = (status: boolean) => {\n    this.setState({ loadingRequest: status });\n  };\n\n  setModalAction = (status: \"CREATE\" | \"UPDATE\" | false) => {\n    this.setState({ modalAction: status });\n  };\n\n  setThisTab = (tab: pageTabs) => {\n    if (tab !== this.state.thisTabs) {\n      this.setState({ thisTabs: tab, positionId: [], thisPosition: null });\n    }\n  };\n\n  setThisPosition = (value: PositionAPI | null) => {\n    this.setState({ thisPosition: value });\n  };\n\n  setPositionId = (value: string[]) => {\n    this.setState({\n      positionId: value,\n    });\n  };\n\n  setCustomMarks = (value: { id: string; marks: number }[]) => {\n    this.setState({\n      customMarks: value,\n    });\n  };\n\n  setInputMarks = (value: number) => {\n    this.setState({ inputMarks: value });\n  };\n\n  setInputComment = (value: string) => {\n    this.setState({ inputComment: value });\n  };\n\n  loadPositions = () => {\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n  };\n\n  componentDidMount = () => {\n    // SESSION CONTROLLER ========================================\n    if (this.props.sessions === null || this.props.sessions === \"none\") {\n      this.props.getActiveSessionPlan(\n        (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n\n            if (data && data !== \"none\") {\n              this.loadPositions();\n            }\n          }\n        }\n      );\n    } else {\n      this.loadPositions();\n    }\n\n    if (this.props.marksPublication === null) {\n      this.props.getMarksPublication(\n        (status: boolean, msg: string, data?: marksPublicationInterface[]) => {\n          this.setLoading(status);\n          if (!status && msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n\n          if (!status && data) {\n            console.log(\"====================================\");\n            console.log({ data });\n            console.log(\"====================================\");\n          }\n        }\n      );\n    }\n  };\n\n  FC_neededPositions = (\n    allPosition: PositionAPI[]\n  ): {\n    withoutMarks: PositionAPI[];\n    withMarks: PositionAPI[];\n  } => {\n    let result: {\n      withoutMarks: PositionAPI[];\n      withMarks: PositionAPI[];\n    } = { withMarks: [], withoutMarks: [] };\n    let publishedPosition: PositionAPI[] = allPosition.filter(\n      (item) => item.isPublished && !item.isDeleted\n    );\n\n    result.withoutMarks = publishedPosition;\n\n    return result;\n  };\n\n  isMarkPublished = (\n    marksPublication: marksPublicationInterface[],\n    session: SessionPlanInterface\n  ): boolean => {\n    if (marksPublication.length > 0) {\n      const thisPublishedMarks = marksPublication.find(\n        (item) => item.session === session.session_plan_id\n      );\n      if (\n        thisPublishedMarks &&\n        thisPublishedMarks.publication_status === \"PUBLISHED\"\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  isUpdateAllowed = (\n    marksPublication: marksPublicationInterface[],\n    session: SessionPlanInterface\n  ): boolean => {\n    if (marksPublication.length > 0) {\n      const thisPublishedMarks = marksPublication.find(\n        (item) => item.session === session.session_plan_id\n      );\n      if (thisPublishedMarks) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  changeDefaultMarks = (value: number) => {\n    if (this.state.customMarks.length > 0) {\n      if (\n        window.confirm(\n          \"Do you want the default pass mark to override the customized pass marks on some position\"\n        )\n      ) {\n        this.setCustomMarks([]);\n      }\n    }\n    this.setState({ defaultChanged: true });\n    this.setInputMarks(value);\n  };\n\n  handleUpdate = async () => {\n    if (this.props.sessions === null) {\n      return this.props.PushPopupAlert({\n        title: `Load session first!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    if (this.props.sessions === \"none\") {\n      return this.props.PushPopupAlert({\n        title: `No active session available!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    if (this.props.marksPublication === null) {\n      return this.props.PushPopupAlert({\n        title: `Load published pass marks first!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    const thisSession = this.props.sessions;\n\n    const thisPublishedMarks = this.props.marksPublication.find(\n      (item) => item.session === thisSession.session_plan_id\n    );\n\n    if (!thisPublishedMarks) {\n      return this.props.PushPopupAlert({\n        title: `No pass marks publication available! Add pass marks instead!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    if (this.state.customMarks.length <= 0 && !this.state.defaultChanged) {\n      return this.props.PushPopupAlert({\n        title: `No change have been done!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    if (!window.confirm(`Are you sure you wanted to update`)) {\n      return;\n    }\n\n    let requestData: marksPublicationInterface,\n      positionSetPassMarks: publicationInterface[] = [];\n\n    thisPublishedMarks.publication_position_marks.forEach((positionItem) => {\n      if (this.state.customMarks.length > 0) {\n        const thisCustomMarks = this.state.customMarks.find(\n          (item) => item.id === positionItem.position\n        );\n        if (thisCustomMarks) {\n          positionSetPassMarks.push({\n            _id: positionItem._id,\n            position: thisCustomMarks.id,\n            marks: thisCustomMarks.marks,\n            comment: positionItem.comment,\n          });\n        } else {\n          if (this.state.defaultChanged) {\n            positionSetPassMarks.push({\n              _id: positionItem._id,\n              position: positionItem.position,\n              marks: this.state.inputMarks,\n              comment: positionItem.comment,\n            });\n          } else {\n            positionSetPassMarks.push({\n              _id: positionItem._id,\n              position: positionItem.position,\n              marks: positionItem.marks,\n              comment: positionItem.comment,\n            });\n          }\n        }\n      } else {\n        if (this.state.defaultChanged) {\n          positionSetPassMarks.push({\n            _id: positionItem._id,\n            position: positionItem.position,\n            marks: this.state.inputMarks,\n            comment: positionItem.comment,\n          });\n        } else {\n          positionSetPassMarks.push({\n            _id: positionItem._id,\n            position: positionItem.position,\n            marks: positionItem.marks,\n            comment: positionItem.comment,\n          });\n        }\n      }\n    });\n\n    requestData = {\n      session: thisPublishedMarks.session,\n      doneby: this.props.auth.user.user_id,\n      created_date: thisPublishedMarks.created_date,\n      publication_position_marks: positionSetPassMarks,\n      publication_id: thisPublishedMarks.publication_id,\n      publication_status: thisPublishedMarks.publication_status,\n      status: thisPublishedMarks.status,\n      createdAt: thisPublishedMarks.createdAt,\n      updatedAt: thisPublishedMarks.updatedAt,\n    };\n\n    console.log(\"====================================\");\n    console.log({ requestData });\n    console.log(\"====================================\");\n\n    this.setLoadingRequest(true);\n    try {\n      const res = await axios.put<marksPublicationInterface>(\n        `${API.CLAIMING}/publication/${thisPublishedMarks.publication_id}`,\n        requestData\n      );\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ res });\n        console.log(\"====================================\");\n        // this.props.verifyDocument(api_redux);\n        this.props.updateMarksPublication(res.data);\n        this.props.PushPopupAlert({\n          title: `Pass mark updated successfully!`,\n          theme: PopupAlertTheme.success,\n        });\n      }\n      this.cleanBeforeClose();\n    } catch (error) {\n      console.error(error);\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingRequest(false);\n  };\n\n  getWaitingList = async (sessionId: string, callback: Function) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.put<marksPublicationInterface>(\n        `${API.DO_EXAM}/waiting/publication/${sessionId}`\n      );\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ getWaitingList: res });\n        console.log(\"====================================\");\n        callback(false, \"\");\n      }\n    } catch (error) {\n      console.error({ getWaitingListError: error });\n      callback(false, errorToText(error));\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingRequest(false);\n  };\n\n  handlePublishMarks = async () => {\n    if (this.props.sessions === null) {\n      return this.props.PushPopupAlert({\n        title: `Load session first!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    if (this.props.sessions === \"none\") {\n      return this.props.PushPopupAlert({\n        title: `No active session available!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    if (this.props.marksPublication === null) {\n      return this.props.PushPopupAlert({\n        title: `Load published pass marks first!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    const thisSession = this.props.sessions;\n\n    const thisPublishedMarks = this.props.marksPublication.find(\n      (item) => item.session === thisSession.session_plan_id\n    );\n\n    if (!thisPublishedMarks) {\n      return this.props.PushPopupAlert({\n        title: `No pass marks publication available! Add pass marks instead!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    if (!window.confirm(`Are you sure you wanted to publish marks`)) {\n      return;\n    }\n\n    console.log(\"====================================\");\n    console.log({ thisPublishedMarks: thisPublishedMarks.publication_id });\n    console.log(\"====================================\");\n\n    this.setLoadingRequest(true);\n    await this.getWaitingList(\n      thisSession.session_plan_id,\n      async (status: boolean, msg: string) => {\n        if (!status && msg.length === 0) {\n          try {\n            const res = await axios.put<marksPublicationInterface>(\n              `${API.CLAIMING}/publication/publication/${thisPublishedMarks.publication_id}`\n            );\n            if (res) {\n              console.log(\"====================================\");\n              console.log({ res });\n              console.log(\"====================================\");\n              // this.props.verifyDocument(api_redux);\n              this.props.getMarksPublication((status: boolean, msg: string) => {\n                if (!status && msg.length > 0) {\n                  this.props.PushPopupAlert({\n                    title: msg,\n                    theme: PopupAlertTheme.danger,\n                  });\n                }\n              });\n              // this.props.updateMarksPublication(res.data);\n              this.props.PushPopupAlert({\n                title: `Pass mark published successfully!`,\n                theme: PopupAlertTheme.success,\n              });\n            }\n            this.cleanBeforeClose();\n          } catch (error) {\n            console.error(error);\n            this.props.PushPopupAlert({\n              title: errorToText(error),\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      }\n    );\n    this.setLoadingRequest(false);\n  };\n\n  cleanBeforeClose = () => {\n    if (this.state.modalAction === \"UPDATE\") {\n      this.setInputMarks(70);\n      this.setInputComment(\"\");\n      this.setCustomMarks([]);\n      this.setModalAction(false);\n      this.setState({ defaultChanged: false });\n    }\n  };\n\n  render() {\n    if (\n      this.props.sessions === null ||\n      this.props.systemPositions === null ||\n      this.props.marksPublication === null ||\n      this.state.loading\n    ) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"mt-3 rounded flex flex-row justify-between items-center\">\n          <div className=\"flex flex-row items-center gap-3\">\n            <RiFolderSettingsFill className=\"text-6xl text-blue-600\" />\n            <div className=\"flex flex-col\">\n              <span className=\"text-blue-600 text-2xl font-bold\">\n                Marks publication\n              </span>\n              <div className=\"flex items-center gap-1\">\n                <span className=\"text-gray-600 text-base italic\">Session:</span>\n                <span className=\"text-gray-600 text-base font-bold\">\n                  {this.props.sessions &&\n                    this.props.sessions !== \"none\" &&\n                    this.props.sessions.session_plan_name}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* CONTENT BODY =============================== */}\n        <div className=\"mt-1 p-1 bg-white\">\n          {/* CONTENT BODY TITLE ========================== */}\n          <div\n            className={`flex flex-row items-center bg-gray-100 py-1 ${\n              this.props.sessions &&\n              this.props.sessions !== \"none\" &&\n              \"justify-between\"\n            }`}\n          >\n            {/* BACK BUTTON CONTROLLER ============== */}\n            {this.props.sessions &&\n              this.props.sessions !== \"none\" &&\n              this.state.modalAction === \"CREATE\" && (\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() =>\n                    this.setState({\n                      modalAction: false,\n                      positionId: [],\n                      inputMarks: 70,\n                      inputComment: \"\",\n                    })\n                  }\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n              )}\n            {/* END BACK BUTTON CONTROLLER ============== */}\n            {/* ----------------------------------------------------------------- */}\n            {/* TABS CONTROLLER ============== */}\n            <div className=\"flex flex-row items-center\">\n              {Object.values(pageTabs).map((item, i) => (\n                <button\n                  key={i}\n                  onClick={() => this.setThisTab(item)}\n                  disabled={this.state.loadingRequest}\n                  className={`animate__animated ${\n                    this.state.thisTabs === item\n                      ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                      : \"bg-white border-white text-gray-600\"\n                  } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t my-1 mx-1 ${\n                    this.state.loadingRequest && \"cursor-not-allowed\"\n                  }`}\n                  title={this.state.loadingRequest ? \"Request processing\" : \"\"}\n                >\n                  {item}\n                </button>\n              ))}\n            </div>\n            {/* END TABS CONTROLLER ============== */}\n\n            {this.state.thisTabs === pageTabs.withMarks && (\n              <div className=\"flex items-center\">\n                {/* ADD PASS MARKS PUBLICATION */}\n                {this.props.sessions &&\n                  this.props.sessions !== \"none\" &&\n                  this.state.modalAction === false &&\n                  this.props.systemPositions.filter(\n                    (item) => item.isPublished && !item.isDeleted\n                  ).length > 0 &&\n                  !this.isUpdateAllowed(\n                    this.props.marksPublication,\n                    this.props.sessions\n                  ) && (\n                    <div\n                      className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\"\n                      onClick={() => {\n                        this.setModalAction(\"CREATE\");\n                      }}\n                    >\n                      Add pass marks\n                    </div>\n                  )}\n\n                {/* UPDATE PASS MARKS PUBLICATION */}\n                {this.props.sessions &&\n                  this.props.sessions !== \"none\" &&\n                  this.state.modalAction === false &&\n                  this.props.systemPositions.filter(\n                    (item) => item.isPublished && !item.isDeleted\n                  ).length > 0 &&\n                  this.isUpdateAllowed(\n                    this.props.marksPublication,\n                    this.props.sessions\n                  ) &&\n                  !this.isMarkPublished(\n                    this.props.marksPublication,\n                    this.props.sessions\n                  ) && (\n                    <div\n                      className=\"btn bg-green-600 text-white cursor-pointer hover:bg-green-800\"\n                      onClick={() => {\n                        this.setModalAction(\"UPDATE\");\n                        this.setInputMarks(-1);\n                      }}\n                    >\n                      Update pass marks\n                    </div>\n                  )}\n\n                {/* PUBLISH MARKS PUBLICATION */}\n                {this.props.sessions &&\n                  this.props.sessions !== \"none\" &&\n                  this.state.modalAction === false &&\n                  this.props.systemPositions.filter(\n                    (item) => item.isPublished && !item.isDeleted\n                  ).length > 0 &&\n                  this.isUpdateAllowed(\n                    this.props.marksPublication,\n                    this.props.sessions\n                  ) &&\n                  !this.isMarkPublished(\n                    this.props.marksPublication,\n                    this.props.sessions\n                  ) && (\n                    <div\n                      className={`btn bg-blue-600 text-white ml-1 hover:bg-blue-800 ${\n                        this.state.loadingRequest\n                          ? \"cursor-wait\"\n                          : \"cursor-pointer\"\n                      }`}\n                      onClick={() =>\n                        !this.state.loadingRequest && this.handlePublishMarks()\n                      }\n                    >\n                      Publish pass marks\n                    </div>\n                  )}\n\n                {this.props.sessions !== \"none\" &&\n                  this.isMarkPublished(\n                    this.props.marksPublication,\n                    this.props.sessions\n                  ) && (\n                    <div className=\"px-3 py-1 text-1xl font-bold text-blue-500 border-4 border-blue-500 border-dotted\">\n                      Marks published\n                    </div>\n                  )}\n\n                {this.props.sessions &&\n                  this.props.sessions !== \"none\" &&\n                  this.state.modalAction === \"UPDATE\" &&\n                  this.props.systemPositions.filter(\n                    (item) => item.isPublished && !item.isDeleted\n                  ).length > 0 &&\n                  this.isUpdateAllowed(\n                    this.props.marksPublication,\n                    this.props.sessions\n                  ) && (\n                    <div className=\"flex items-center gap-1 animate__animated animate__fadeInRight animate__faster\">\n                      <div className=\"flex items-center gap-1\">\n                        <label className=\"w-full inline-block text-right\">\n                          Default pass marks\n                        </label>\n                        <select\n                          className=\"outline-none bg-white text-gray-700 text-base mr-1 py-2 px-2 border-2 border-gray-500 rounded\"\n                          value={this.state.inputMarks}\n                          onChange={(e) =>\n                            this.changeDefaultMarks(Number(e.target.value))\n                          }\n                        >\n                          {marksArray(true).map((item, index) => (\n                            <option\n                              value={item ? item : \"-1\"}\n                              key={index * (item ? item : -1)}\n                              disabled={item === null}\n                            >\n                              {item ? item : \"Select\"}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                      <button\n                        className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                          this.state.loadingRequest && \"cursor-wait\"\n                        }`}\n                        type=\"button\"\n                        onClick={() => this.handleUpdate()}\n                        disabled={this.state.loadingRequest}\n                      >\n                        {this.state.loadingRequest ? \"Loading...\" : \"Save\"}\n                      </button>\n                      <button\n                        className={`btn bg-red-500 text-white hover:bg-red-600 focus:outline-none ${\n                          this.state.loadingRequest && \"cursor-wait\"\n                        }`}\n                        type=\"button\"\n                        onClick={() => this.cleanBeforeClose()}\n                        disabled={this.state.loadingRequest}\n                      >\n                        Cancel\n                      </button>\n                    </div>\n                  )}\n              </div>\n            )}\n          </div>\n          {/* END CONTENT BODY TITLE ========================== */}\n\n          {/* REAL BODY ============================= */}\n          <div className=\"=rounded mx-1 mb-2 mt-3\">\n            {this.state.modalAction !== \"CREATE\" &&\n              this.state.thisTabs === pageTabs.withMarks && (\n                <SetPassMarks\n                  positionList={this.props.systemPositions.filter(\n                    (item) => item.isPublished && !item.isDeleted\n                  )}\n                  marksPublication={this.props.marksPublication}\n                  sessions={this.props.sessions}\n                  thisPosition={this.state.thisPosition}\n                  loadingRequest={this.state.loadingRequest}\n                  isUpdateOn={this.state.modalAction === \"UPDATE\"}\n                  setThisPosition={this.setThisPosition}\n                  customMarks={this.state.customMarks}\n                  setCustomMarks={this.setCustomMarks}\n                  defaultChanged={this.state.defaultChanged}\n                  defaultMarks={this.state.inputMarks}\n                />\n              )}\n\n            {!this.state.modalAction &&\n              this.state.thisTabs === pageTabs.withoutMarks && (\n                <DoPlacement\n                  positionList={this.props.systemPositions.filter(\n                    (item) => !item.isDeleted\n                  )}\n                  setLoadingRequest={this.setLoadingRequest}\n                  loadingRequest={this.state.loadingRequest}\n                />\n              )}\n          </div>\n        </div>\n        {/* END CONTENT BODY =========================== */}\n\n        {/* modal controller ==================================== */}\n        {this.props.sessions &&\n          this.props.sessions !== \"none\" &&\n          this.state.modalAction === \"CREATE\" && (\n            <MarksPublicationForm\n              sessions={this.props.sessions}\n              positionList={\n                this.FC_neededPositions(this.props.systemPositions).withoutMarks\n              }\n              loadingRequest={this.state.loadingRequest}\n              inputMarks={this.state.inputMarks}\n              modalAction={this.state.modalAction}\n              setModalAction={this.setModalAction}\n              setInputMarks={this.setInputMarks}\n              inputComment={this.state.inputComment}\n              setInputComment={this.setInputComment}\n              setLoadingRequest={this.setLoadingRequest}\n              customMarks={this.state.customMarks}\n              setCustomMarks={this.setCustomMarks}\n            />\n          )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  marksPublication,\n  system_settings,\n}: StoreState): {\n  auth: Auth;\n  sessions: SessionPlanInterface | \"none\" | null;\n  marksPublication: marksPublicationInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    systemPositions: system_settings.systemPositions,\n    marksPublication,\n    sessions: sessionPlan.activeSessionPlan,\n  };\n};\n\nexport const MarksPublication = connect(mapStateToProps, {\n  getPositions,\n  getActiveSessionPlan,\n  getMarksPublication,\n  updateMarksPublication,\n  PushPopupAlert,\n})(index);\n","import React, { Component } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { PositionAPI } from \"../../interfaces\";\nimport searchData from \"../../utils/search\";\n\nexport const isPositionSelected = (\n  positionIds: string[],\n  thisPosition: string\n) => {\n  return positionIds.find((item) => item === thisPosition);\n};\n\ninterface ChoosePositionProps {\n  positionList: PositionAPI[];\n  setChoosePosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  defaultMarks: number;\n  customMarks: { id: string; marks: number }[];\n  setCustomMarks: (\n    value: {\n      id: string;\n      marks: number;\n    }[]\n  ) => void;\n}\n\ninterface ChoosePositionState {\n  searchInput: string;\n}\n\nexport class ChoosePosition extends Component<\n  ChoosePositionProps,\n  ChoosePositionState\n> {\n  constructor(props: ChoosePositionProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setCustomMarks = (thisPosition: string, value: string) => {\n    let currentSelectedList: {\n      id: string;\n      marks: number;\n    }[] = [...this.props.customMarks];\n    let index = currentSelectedList.findIndex(\n      (item) => item.id === thisPosition\n    );\n    if (index >= 0) {\n      currentSelectedList[index].marks = Number(value);\n    } else {\n      currentSelectedList.push({ id: thisPosition, marks: Number(value) });\n    }\n    this.props.setCustomMarks(currentSelectedList);\n  };\n\n  getMarkByPosition = (thisPosition: string) => {\n    return this.props.customMarks.find((item) => item.id === thisPosition);\n  };\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <section className={`rounded`}>\n        {/* SEARCH PART */}\n        <div className=\"flex items-center w-full my-1\">\n          <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 border-gray-600 focus:border-gray-700 w-full rounded\"\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            value={this.state.searchInput}\n            disabled={this.props.positionList.length > 0 ? false : true}\n          />\n          <div className=\"flex items-center w-auto justify-end gap-1\">\n            <button\n              className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n              type=\"button\"\n              onClick={() => this.props.setChoosePosition(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n        {/* END SEARCH PART ///////////////// */}\n        <div\n          className={`w-full h-96 mt-2 divide-y divide-gray-300 overflow-y-auto`}\n        >\n          {searchData(this.props.positionList, this.state.searchInput).length >\n          0 ? (\n            searchData(this.props.positionList, this.state.searchInput).map(\n              (element, index) => (\n                <section key={index + element.position_id}>\n                  <div\n                    className={`group flex items-center justify-between my-1 hover:bg-gray-100`}\n                  >\n                    <div className=\"p-1 w-full mr-2\">\n                      <p className=\"text-base font-medium text-black\">\n                        {element.position_title}\n                      </p>\n                    </div>\n\n                    <input\n                      type=\"number\"\n                      min={0}\n                      max={100}\n                      value={\n                        this.getMarkByPosition(element.position_id)\n                          ? this.getMarkByPosition(element.position_id)!.marks\n                          : this.props.defaultMarks\n                      }\n                      onChange={(e) =>\n                        this.setCustomMarks(element.position_id, e.target.value)\n                      }\n                      className=\"rounded border-2 border-gray-500 focus:border-gray-700 focus:outline-none\"\n                    />\n                  </div>\n                </section>\n              )\n            )\n          ) : (\n            <div className=\"text-center p-3\">\n              <p className=\"text-base font-medium text-black\">\n                No position available\n              </p>\n            </div>\n          )}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ChoosePosition;\n","import axios from \"axios\";\nimport moment from \"moment\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport { createMarksPublication } from \"../../actions/marks_publication\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI, SessionPlanInterface } from \"../../interfaces\";\nimport {\n  marksPublicationFormInterface,\n  marksPublicationInterface,\n  publicationFormInterface,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport ChoosePosition from \"./ChoosePosition\";\nimport { marksArray } from \"./MarksPublication\";\n\ninterface MarksPublicationFormProps {\n  sessions: SessionPlanInterface;\n  positionList: PositionAPI[];\n  loadingRequest: boolean;\n  inputMarks: number;\n  inputComment: string;\n  customMarks: { id: string; marks: number }[];\n  setCustomMarks: (\n    value: {\n      id: string;\n      marks: number;\n    }[]\n  ) => void;\n  modalAction: false | \"CREATE\" | \"UPDATE\";\n  setModalAction: (status: \"CREATE\" | \"UPDATE\" | false) => void;\n  setInputMarks: (value: number) => void;\n  setInputComment: (value: string) => void;\n  setLoadingRequest: (status: boolean) => void;\n\n  //   REDUX ==========================\n  auth: Auth;\n  createMarksPublication: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface MarksPublicationFormState {\n  searchPosition: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  choosePosition: boolean;\n}\n\nclass MarksPublicationForm extends Component<\n  MarksPublicationFormProps,\n  MarksPublicationFormState\n> {\n  constructor(props: MarksPublicationFormProps) {\n    super(props);\n\n    this.state = {\n      searchPosition: \"\",\n      formError: null,\n      choosePosition: false,\n    };\n  }\n\n  setChoosePosition = (value: boolean) => {\n    this.setState({ choosePosition: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  changeDefaultMarks = (value: number) => {\n    if (this.props.customMarks.length > 0) {\n      if (\n        window.confirm(\n          \"Do you want the default pass mark to override the customized pass marks on some position\"\n        )\n      ) {\n        this.props.setCustomMarks([]);\n      }\n    }\n    this.props.setInputMarks(value);\n  };\n\n  cleanBeforeClose = () => {\n    if (this.props.modalAction === \"CREATE\") {\n      this.props.setInputMarks(70);\n      this.props.setInputComment(\"\");\n      this.props.setCustomMarks([]);\n      this.props.setModalAction(false);\n    }\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.props.positionList.length <= 0) {\n      return this.setFormError({\n        element: \"position\",\n        msg: \"There is no published position available\",\n      });\n    }\n\n    if (isEmptyOrSpaces(this.props.inputComment)) {\n      return this.setFormError({\n        element: \"comment\",\n        msg: \"Comment is required\",\n      });\n    }\n\n    if (!window.confirm(`Are you sure you wanted to submit`)) {\n      return;\n    }\n\n    let requestData: marksPublicationFormInterface,\n      positionWithMarks: publicationFormInterface[] = [];\n\n    this.props.positionList.forEach((positionItem) => {\n      if (this.props.customMarks.length > 0) {\n        const thisCustomMarks = this.props.customMarks.find(\n          (item) => item.id === positionItem.position_id\n        );\n        if (thisCustomMarks) {\n          positionWithMarks.push({\n            position: thisCustomMarks.id,\n            marks: thisCustomMarks.marks,\n            comment: this.props.inputComment,\n          });\n        } else {\n          positionWithMarks.push({\n            position: positionItem.position_id,\n            marks: this.props.inputMarks,\n            comment: this.props.inputComment,\n          });\n        }\n      } else {\n        positionWithMarks.push({\n          position: positionItem.position_id,\n          marks: this.props.inputMarks,\n          comment: this.props.inputComment,\n        });\n      }\n    });\n\n    requestData = {\n      session: this.props.sessions.session_plan_id,\n      doneby: this.props.auth.user.user_id,\n      created_date: moment(moment().toDate()).format(\"YYYY-MM-DD\").toString(),\n      publication_position_marks: positionWithMarks,\n    };\n\n    console.log(\"====================================\");\n    console.log({ requestData });\n    console.log(\"====================================\");\n\n    this.props.setLoadingRequest(true);\n    try {\n      const res = await axios.post<marksPublicationInterface>(\n        `${API.CLAIMING}/publication`,\n        requestData\n      );\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ res });\n        console.log(\"====================================\");\n        this.props.createMarksPublication(res.data);\n        this.props.PushPopupAlert({\n          title: `Mark published successfully!`,\n          theme: PopupAlertTheme.success,\n        });\n      }\n      this.cleanBeforeClose();\n    } catch (error) {\n      console.error(error);\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  render() {\n    return (\n      <form\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => this.handleSubmit(e)}\n        method=\"post\"\n      >\n        <div className=\"pt-2 pb-4 w-full bg-gray-100 px-5 flex flex-col gap-2\">\n          <div className=\"flex flex-col\">\n            <label>Session</label>\n            <input\n              type=\"text\"\n              className={`text-left input-white w-full inline-block border-gray-500 border-2`}\n              placeholder=\"Sub Category Title\"\n              value={capitalizeFirstLetter(\n                this.props.sessions.session_plan_name\n              )}\n              disabled={true}\n            />\n          </div>\n          <div className=\"flex flex-col\">\n            <label>Default pass marks</label>\n            <select\n              className=\"outline-none bg-white text-gray-700 text-base mr-1 py-2 px-2 border-2 border-gray-500 rounded\"\n              value={this.props.inputMarks}\n              onChange={(e) => this.changeDefaultMarks(Number(e.target.value))}\n            >\n              {marksArray().map((item, index) => (\n                <option\n                  value={item ? item : \"-1\"}\n                  key={index * (item ? item : -1)}\n                >\n                  {item}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"flex flex-col\">\n            <label>Customize pass marks by position</label>\n            <div\n              className={`text-left bg-white border-2 border-gray-500 rounded w-full ${\n                this.state.choosePosition ? \"h-auto\" : \"h-10\"\n              } ${\n                this.state.formError &&\n                this.state.formError.element === \"position\"\n                  ? \"border-red-500\"\n                  : \"\"\n              } border-2 ${\n                !this.props.loadingRequest\n                  ? \"cursor-pointer\"\n                  : \"cursor-not-allowed\"\n              }`}\n              title=\"Choose position\"\n              onClick={() => {\n                !this.state.choosePosition && this.setChoosePosition(true);\n                this.state.formError &&\n                  this.state.formError.element === \"position\" &&\n                  this.setFormError(null);\n              }}\n            >\n              {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n              {this.props.customMarks.length > 0 &&\n              !this.state.choosePosition ? (\n                <p className=\"my-1 mx-2 text-gray-700\">\n                  Some position has customized pass marks\n                </p>\n              ) : (\n                !this.state.choosePosition && (\n                  <p className=\"my-1 mx-2 text-gray-500\">\n                    Click to view position\n                  </p>\n                )\n              )}\n              {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n              {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n              {this.state.choosePosition && (\n                <ChoosePosition\n                  positionList={this.props.positionList}\n                  setChoosePosition={this.setChoosePosition}\n                  loadingRequest={this.props.loadingRequest}\n                  defaultMarks={this.props.inputMarks}\n                  customMarks={this.props.customMarks}\n                  setCustomMarks={this.props.setCustomMarks}\n                />\n              )}\n              {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n            </div>\n            {this.state.formError &&\n              this.state.formError.element === \"position\" && (\n                <span className=\"text-red-500\">{this.state.formError.msg}</span>\n              )}\n          </div>\n          <div className=\"flex flex-col\">\n            <label>Comment</label>\n            <textarea\n              placeholder={`Comment for pass mark`}\n              cols={50}\n              rows={3}\n              className={`border-2 ${\n                this.state.formError &&\n                this.state.formError.element === \"comment\"\n                  ? \"border-red-400\"\n                  : \"border-gray-500\"\n              } rounded px-3 py-1 w-full focus:outline-none`}\n              style={{ resize: \"none\" }}\n              value={this.props.inputComment}\n              onChange={(e) => {\n                this.props.setInputComment(e.target.value);\n                this.setFormError(null);\n              }}\n              disabled={this.props.loadingRequest}\n            ></textarea>\n            {this.state.formError &&\n              this.state.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{this.state.formError.msg}</p>\n              )}\n          </div>\n\n          <div className=\"pt-4 flex justify-between\">\n            <button\n              onClick={() => {\n                this.cleanBeforeClose();\n              }}\n              className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                this.props.loadingRequest && \"cursor-not-allowed\"\n              }`}\n              type=\"button\"\n              disabled={this.props.loadingRequest}\n            >\n              Exit\n            </button>\n            <div className=\"flex items-center gap-1\">\n              <button\n                className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                  this.props.loadingRequest && \"cursor-wait\"\n                }`}\n                type=\"submit\"\n                disabled={this.props.loadingRequest}\n              >\n                {this.props.loadingRequest ? \"Loading...\" : \"Save\"}\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createMarksPublication,\n  PushPopupAlert,\n})(MarksPublicationForm);\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { marksPublicationInterface } from \"../interfaces/marks_publication\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// MARKS PUBLICATION\nexport interface GetMarksPublicationAction {\n  type: ActionTypes.GET_MARKS_PUBLICATION;\n  payload: marksPublicationInterface[];\n}\n\n// CREATE PERSONAL CLAIM\nexport interface CreateMarksPublicationAction {\n  type: ActionTypes.CREATE_MARKS_PUBLICATION;\n  payload: marksPublicationInterface;\n}\n\n// UPDATE PERSONAL CLAIM\nexport interface UpdateMarksPublicationAction {\n  type: ActionTypes.UPDATE_MARKS_PUBLICATION;\n  payload: marksPublicationInterface;\n}\n\nexport type MarksPublicationActionType =\n  | GetMarksPublicationAction\n  | CreateMarksPublicationAction\n  | UpdateMarksPublicationAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET MARKS PUBLICATION ==========================\nexport const getMarksPublication = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<marksPublicationInterface[]>(\n        `${API.CLAIMING}/publication`\n      );\n      let responseData: marksPublicationInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          responseData = res.data;\n        }\n      }\n      console.log(\"====================================\");\n      console.log({ GetMarksPublication: res.data });\n      console.log(\"====================================\");\n      dispatch<GetMarksPublicationAction>({\n        type: ActionTypes.GET_MARKS_PUBLICATION,\n        payload: responseData,\n      });\n      callback(false, \"\", responseData);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE MARKS PUBLICATION ==========================\n// export const setSelectedClaimType = (\n//   thisType: PlansTypeKeys | \"all\"\n// ): setSelectedClaimTypeActions => {\n//   console.log({ thisType });\n//   return {\n//     type: ActionTypes.SELECT_CLAIM_TYPE,\n//     payload: thisType,\n//   };\n// };\n\n// CREATE PERSONAL CLAIM\nexport const createMarksPublication = (data: marksPublicationInterface) => {\n  return {\n    type: ActionTypes.CREATE_MARKS_PUBLICATION,\n    payload: data,\n  };\n};\n\n// CREATE MARKS PUBLICATION ==========================\n// export const setSelectedClaimType = (\n//   thisType: PlansTypeKeys | \"all\"\n// ): setSelectedClaimTypeActions => {\n//   console.log({ thisType });\n//   return {\n//     type: ActionTypes.SELECT_CLAIM_TYPE,\n//     payload: thisType,\n//   };\n// };\n\n// UPDATE PERSONAL CLAIM\nexport const updateMarksPublication = (data: marksPublicationInterface) => {\n  return {\n    type: ActionTypes.UPDATE_MARKS_PUBLICATION,\n    payload: data,\n  };\n};\n","import React, { Component } from \"react\";\nimport { HiOutlineDocumentSearch } from \"react-icons/hi\";\nimport { IoWarning } from \"react-icons/io5\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport {\n  PositionAPI,\n  PositionAPICourse,\n  PositionRequirements,\n  SessionPlanInterface,\n} from \"../../interfaces\";\nimport { marksPublicationInterface } from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\n\nexport interface MarksPublicationPosition {\n  province_id: string;\n  province_name: string;\n  courses: PositionAPICourse[];\n  position_title: string;\n  description: string;\n  school_level_id: {\n    school_level_name: string;\n    description: string;\n    education_institute: string[];\n    courses: [];\n    school_level_id: string;\n  };\n  education_institute_id: {\n    education_category_title: string;\n    school_levels: [];\n    description: string;\n    education_institute_id: string;\n  };\n  requirements: PositionRequirements[];\n  isDeleted: boolean;\n  isPublished: boolean;\n  position_id: string;\n  marks: number;\n}\n\ntype SetPassMarksProps = {\n  positionList: PositionAPI[];\n  marksPublication: marksPublicationInterface[];\n  sessions: SessionPlanInterface | \"none\";\n  thisPosition: PositionAPI | null;\n  loadingRequest: boolean;\n  setThisPosition: (value: PositionAPI | null) => void;\n\n  // FOR UPDATING ==========================\n  defaultMarks: number;\n  defaultChanged: boolean;\n  customMarks: { id: string; marks: number }[];\n  setCustomMarks: (\n    value: {\n      id: string;\n      marks: number;\n    }[]\n  ) => void;\n  isUpdateOn: boolean;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ninterface SetPassMarksState {\n  searchInput: string;\n}\nexport class SetPassMarks extends Component<\n  SetPassMarksProps,\n  SetPassMarksState\n> {\n  constructor(props: SetPassMarksProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  styelingController = (\n    position: PositionAPI\n  ): { section: string; button: string } => {\n    let sectionStyles: string = \"\",\n      btnStyles: string = \"bg-blue-100 group-hover:bg-blue-50\";\n    if (this.props.thisPosition) {\n      if (this.props.thisPosition.position_id === position.position_id) {\n        if (this.props.thisPosition.isPublished) {\n          sectionStyles = \"bg-blue-100 border border-blue-500\";\n          btnStyles = \"bg-blue-100 group-hover:bg-blue-50\";\n        } else {\n          sectionStyles = \"bg-yellow-100 border border-yellow-500\";\n          btnStyles = \"bg-yellow-100 group-hover:bg-yellow-50\";\n        }\n      }\n    }\n    return { section: sectionStyles, button: btnStyles };\n  };\n\n  getNeededData = (\n    allPosition: PositionAPI[],\n    allMarks: marksPublicationInterface[],\n    sessions: SessionPlanInterface | \"none\"\n  ): MarksPublicationPosition[] => {\n    let result: MarksPublicationPosition[] = [];\n\n    allPosition.forEach((element) => {\n      let marksBySession =\n        sessions !== \"none\"\n          ? allMarks.find((item) => item.session === sessions.session_plan_id)\n          : undefined;\n      if (marksBySession) {\n        let marksByPosition = marksBySession.publication_position_marks.find(\n          (item) => item.position === element.position_id\n        );\n        if (marksByPosition) {\n          result.push({\n            province_id: element.province_id,\n            province_name: element.province_name,\n            courses: element.courses,\n            position_title: element.position_title,\n            description: element.description,\n            school_level_id: element.school_level_id,\n            education_institute_id: element.education_institute_id,\n            requirements: element.requirements,\n            isDeleted: element.isDeleted,\n            isPublished: element.isPublished,\n            position_id: element.position_id,\n            marks: marksByPosition.marks,\n          });\n        }\n      }\n    });\n\n    return result;\n  };\n\n  searchPublishedMarks = (\n    objList: MarksPublicationPosition[],\n    text: string\n  ): MarksPublicationPosition[] => {\n    if (undefined === text || text === \"\") return objList;\n    return objList.filter((product) => {\n      let flag;\n      // let dataKeys = product;\n\n      for (let prop in product) {\n        flag = false;\n        if (\n          prop === \"province_name\" ||\n          prop === \"courses\" ||\n          prop === \"position_title\" ||\n          prop === \"description\" ||\n          prop === \"marks\"\n        ) {\n          if (product[prop]) {\n            flag =\n              product[prop]!.toString()\n                .toLowerCase()\n                .indexOf(text.toLowerCase()) > -1;\n          }\n        }\n        if (flag) break;\n      }\n      return flag;\n    });\n  };\n\n  setCustomMarks = (thisPosition: string, value: string) => {\n    if (Number(value) < 0 || Number(value) > 100) {\n      return this.props.PushPopupAlert({\n        title: `Pass marks must be less or equal to 100 and greater or equal to 0`,\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    let currentSelectedList: {\n      id: string;\n      marks: number;\n    }[] = [...this.props.customMarks];\n    let index = currentSelectedList.findIndex(\n      (item) => item.id === thisPosition\n    );\n\n    if (index >= 0) {\n      currentSelectedList[index].marks = Number(value);\n    } else {\n      currentSelectedList.push({ id: thisPosition, marks: Number(value) });\n    }\n\n    this.props.setCustomMarks(currentSelectedList);\n  };\n\n  getMarkByPosition = (thisPosition: string) => {\n    return this.props.customMarks.find((item) => item.id === thisPosition);\n  };\n\n  render() {\n    if (this.props.sessions === \"none\") {\n      return (\n        <div className=\"py-10 flex flex-col items-center rounded border border-gray-300 bg-white text-2xl font-medium text-yellow-800 animate__animated animate__pulse\">\n          <IoWarning className=\"w-32 h-32\" />\n          No Active session available!\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {this.props.positionList.length <= 0 && (\n          <div className=\"text-gray-400 px-6 py-4 rounded border mt-4 text-xl font-extrabold flex flex-col items-center justify-center bg-gray-100\">\n            <HiOutlineDocumentSearch className=\"text-7xl text-gray-400 animate__animated animate__shakeX\" />\n            <span>No position available</span>\n          </div>\n        )}\n\n        {this.props.positionList.length > 0 && (\n          <section className=\"flex flex-col-reverse sm:flex-row items-center gap-2 w-full my-2\">\n            <div className=\"w-full\">\n              <input\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  this.setSearchInput(e.target.value)\n                }\n                type=\"text\"\n                className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                placeholder={`Search position by title or description`}\n                value={this.state.searchInput}\n                disabled={\n                  this.getNeededData(\n                    this.props.positionList,\n                    this.props.marksPublication,\n                    this.props.sessions\n                  ).length > 0\n                    ? false\n                    : true\n                }\n              />\n            </div>\n          </section>\n        )}\n\n        {this.searchPublishedMarks(\n          this.getNeededData(\n            this.props.positionList,\n            this.props.marksPublication,\n            this.props.sessions\n          ),\n          this.state.searchInput\n        ).length > 0 ? (\n          this.searchPublishedMarks(\n            this.getNeededData(\n              this.props.positionList,\n              this.props.marksPublication,\n              this.props.sessions\n            ),\n            this.state.searchInput\n          ).map((item: MarksPublicationPosition, i: number) => (\n            <div\n              key={i + item.position_id}\n              className={`border hover:bg-blue-50`}\n            >\n              <div\n                className={`w-full flex flex-row px-3 py-2 rounded items-start my-1 justify-between group ${\n                  this.styelingController(item).section\n                }`}\n              >\n                <div\n                  className={`flex flex-col`}\n                  onClick={() => {\n                    !this.props.loadingRequest &&\n                    this.props.thisPosition &&\n                    this.props.thisPosition.position_id === item.position_id\n                      ? this.props.setThisPosition(null)\n                      : this.props.setThisPosition(item);\n                  }}\n                >\n                  <span className=\"text-gray-600 font-bold\">\n                    {item.position_title}\n                  </span>\n                  <span className={`text-xs pr-5 text-gray-500`}>\n                    {item.description}\n                  </span>\n                </div>\n                <div className=\"flex flex-row items-center gap-2\">\n                  {!this.props.isUpdateOn ? (\n                    <span className=\"text-gray-600 italic font-semibold\">\n                      {item.marks}%\n                    </span>\n                  ) : (\n                    <input\n                      type=\"number\"\n                      min={0}\n                      max={100}\n                      value={\n                        this.getMarkByPosition(item.position_id)\n                          ? this.getMarkByPosition(item.position_id)!.marks\n                          : this.props.defaultChanged\n                          ? this.props.defaultMarks\n                          : item.marks\n                      }\n                      onChange={(e) =>\n                        this.setCustomMarks(item.position_id, e.target.value)\n                      }\n                      className=\"rounded border-2 border-gray-500 focus:border-gray-700 focus:outline-none\"\n                    />\n                  )}\n                </div>\n              </div>\n            </div>\n          ))\n        ) : (\n          <NoResult\n            theme={NoResultThemes.Dark}\n            value={\"No pass marks has been set\"}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { PushPopupAlert })(SetPassMarks);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { HiOutlineDocumentSearch } from \"react-icons/hi\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport searchData from \"../../utils/search\";\n\ntype SetPassMarksProps = {\n  positionList: PositionAPI[];\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ninterface SetPassMarksState {\n  searchInput: string;\n  positionInput: string;\n  loadingRequest: boolean;\n}\n\nexport class SetPassMarks extends Component<\n  SetPassMarksProps,\n  SetPassMarksState\n> {\n  constructor(props: SetPassMarksProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n      positionInput: \"\",\n      loadingRequest: false,\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  setPositionInput = (value: string) => {\n    this.setState({ positionInput: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  doPlacement = async (positionId: string) => {\n    this.setLoadingRequest(true);\n    try {\n      const res = await axios.post<any[]>(\n        `${API.PLACEMENT}/doplace/${positionId}`\n      );\n\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ doPlacement: res });\n        console.log(\"====================================\");\n\n        let msgAlert: string = \"\";\n        if (res.data.length > 0) {\n          msgAlert = `${res.data.length} applicant(s) has been placed on school(s)!`;\n        } else {\n          msgAlert = \"No placement has been done!\";\n        }\n\n        this.setPositionInput(\"\");\n        this.props.PushPopupAlert({\n          title: msgAlert,\n          theme:\n            res.data.length > 0\n              ? PopupAlertTheme.success\n              : PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ doPlacement_reply: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingRequest(false);\n  };\n\n  render() {\n    return (\n      <div>\n        {this.props.positionList.length <= 0 && (\n          <div className=\"text-gray-400 px-6 py-4 rounded border mt-4 text-xl font-extrabold flex flex-col items-center justify-center bg-gray-100\">\n            <HiOutlineDocumentSearch className=\"text-7xl text-gray-400 animate__animated animate__shakeX\" />\n            <span>No position available</span>\n          </div>\n        )}\n\n        {this.props.positionList.length > 0 && (\n          <section className=\"flex flex-col-reverse sm:flex-row items-center gap-2 w-full my-2\">\n            <div className=\"w-full\">\n              <input\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  this.setSearchInput(e.target.value)\n                }\n                type=\"text\"\n                className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                placeholder={`Search position by title or description`}\n                value={this.state.searchInput}\n                disabled={this.props.positionList.length > 0 ? false : true}\n              />\n            </div>\n          </section>\n        )}\n\n        {searchData(this.props.positionList, this.state.searchInput).length >\n        0 ? (\n          searchData(this.props.positionList, this.state.searchInput).map(\n            (item: PositionAPI, i: number) => (\n              <div\n                key={i + item.position_id}\n                className={`border hover:bg-blue-50`}\n              >\n                <div\n                  className={`w-full flex flex-row px-3 py-2 rounded items-center my-1 justify-between group`}\n                >\n                  <div className={`flex flex-col`}>\n                    <span className=\"text-gray-600 font-bold\">\n                      {item.position_title}\n                    </span>\n                    <span className={`text-xs pr-5 text-gray-500`}>\n                      {item.description}\n                    </span>\n                  </div>\n\n                  <div className=\"flex flex-row items-center gap-2 group\">\n                    {/* <div className=\"flex flex-col items-center mr-3\">\n                      <p className=\"text-base font-semibold\">Waiting:</p>\n                      <p className=\"text-xl font-semibold text-green-500\">\n                        1,045.50\n                      </p>\n                    </div> */}\n\n                    <button\n                      className=\"btn text-white bg-green-600 group-hover:bg-green-800 flex items-center\"\n                      onClick={() => {\n                        this.setPositionInput(item.position_id);\n                        this.doPlacement(item.position_id);\n                      }}\n                      disabled={this.state.loadingRequest}\n                    >\n                      {this.state.loadingRequest &&\n                      this.state.positionInput === item.position_id\n                        ? \"Loading...\"\n                        : \"Place applicants\"}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )\n          )\n        ) : (\n          <NoResult\n            theme={NoResultThemes.Dark}\n            value={\"No pass marks has been set\"}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { PushPopupAlert })(SetPassMarks);\n"],"sourceRoot":""}
{"version":3,"sources":["components/Table/Table.tsx","components/Navigation/SideNavigation.tsx","actions/location.ts","actions/schools.ts","containers/district/Schools/index.tsx"],"names":["Table","table","tr","rows","columns","hideColumns","pagination","search","tableSize","tableClass","tableId","rounded","searchBG","thColor","loading","length","result","characters","charactersLength","i","charAt","Math","floor","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","map","style","display","className","type","placeholder","onChange","e","data","filterType","filter","td","cols","toLowerCase","textContent","innerText","indexOf","filterTable","target","value","disabled","Number","id","column","index","padding","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","_SideNavigation","props","componentDidMount","PageHasSubNav","componentWillUnmount","state","this","auth","isAuthenticated","navActive","system","navigation","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","SubItemContainer","SubItem","getAllRoom","callback","dispatch","a","axios","get","API","APPLICATION","res","ActionTypes","GET_ALL_ROOM","payload","console","error","errorToText","FC_CreateCenter","log","CREATE_CENTER","FC_UpdateCenter","UPDATE_CENTER","FC_DeleteCenter","DELETE_CENTER","FC_CreateRoom","CREATE_ROOM","FC_UpdateRoom","UPDATE_ROOM","FC_DeleteRoom","delete_room","DELETE_ROOM","getSchools","GET_SCHOOLS","createSchool","schools","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","school_id","PLACEMENT","schoolPosts","FETCH_SCHOOL_POSTS","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","TYPE","UPDATE_SCHOOL_POST","fetchDistrictPosts","district_id","districtPosts","FETCH_DISTRICT_POSTS","getSchoolById","school","_id","Schools","schoolLevels","locations","education_categories","allRoom","roomLocation","loadEducationCategories","PushPopupAlert","thisEdication","setThisEdication","edicationCategoryFilterStatus","setEdicationCategoryFilterStatus","thisProvince","setThisProvince","provinceFilterStatus","setProvinceFilterStatus","thisDistrict","setThisDistrict","districtFilterStatus","setDistrictFilterStatus","district","setDistrict","schoolList","setSchoolList","loadingRequest","setLoadingRequest","modalState","setModalState","setLoading","setError","schoolName","setSchoolName","thisSchool","setThisSchool","instituteId","setInstituteId","provinceId","setProvinceId","districtId","setDistrictId","loadDistrict","code_error","status","msg","loadingCandidatesError","handleSubmit","preventDefault","element","post","school_name","education_category_id","shool_id","theme","PopupAlertTheme","success","patch","doc_category_error","danger","handleDelete","schoolId","window","confirm","delete","province_error","filterSchools","FILTER_TYPE","FILTER_VALUE","IGNORE_DISTRICT","newArray","edication","education_institute_id","countSchool","counts","item","toTwoDigit","education_category_title","MdLabel","province_name","province","province_id","district_name","districts","education","find","d","colSpan","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","medium","body","footer","onSubmit","institute"],"mappings":"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","file":"static/js/32.f173a36e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = ({\n  rows,\n  columns,\n  hideColumns = false,\n  pagination = false,\n  search = false,\n  tableSize = \"w-full\",\n  tableClass,\n  tableId = \"myTable\",\n  rounded = false,\n  searchBG = \"bg-gray-200\",\n  thColor = \"blue\",\n  loading = false,\n}) => {\n  const startPage = 1;\n  tableId = tableId === \"myTable\" ? FC_makeID() : tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${tableSize}`}>\n      {/* search box  */}\n      {search && (\n        <div className={`${searchBG} w-full mb-2`}>\n          {search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-transparent\"\n                disabled={loading}\n              />\n\n              {pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-transparent\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <table\n        className={\n          tableClass\n            ? tableClass\n            : `w-full shadow ${\n                rounded && \"sm:rounded-lg\"\n              } table-auto order-table max-w-full`\n        }\n        id={tableId}\n      >\n        {!hideColumns && (\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n            <tr\n              className={`text-left tracking-wide bg-${thColor}-100 border-b-2 border-${thColor}-500 text-${thColor}-600 overflow-hidden`}\n            >\n              {columns.map((column, index) => (\n                <th\n                  key={index}\n                  className={`${column.padding} text-${\n                    column.alignText\n                  } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                  onClick={() =>\n                    column.isSortAllowed && sortThisColumn(tableId, index)\n                  }\n                >\n                  <div className=\"flex items-center gap-1\">\n                    {column.columnTitle}\n                    {column.isSortAllowed && <BiSort />}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n        )}\n        <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n          {rows()}\n        </tbody>\n      </table>\n      {pagination && (\n        <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n          <div>\n            <span className=\"text-xs xs:text-sm text-gray-900\">\n              Showing 1 to {pageSize} of {totalItems - 1} Entries\n            </span>\n          </div>\n          <div>\n            <nav className=\"inline-flex shadow-sm\">\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                    currentPage !== 1 && \"bg-white\"\n                  }`}\n                  aria-label=\"Previous\"\n                  disabled={currentPage === 1 || loading}\n                  onClick={() => setCurrentPage(currentPage - 1)}\n                >\n                  <MdNavigateBefore className=\"h-5 w-5\" />\n                </button>\n              </div>\n              <div>\n                {pages &&\n                  pages.map((page, pageIndex) => (\n                    <button\n                      key={pageIndex}\n                      className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                        page !== currentPage\n                          ? \"bg-white\"\n                          : \"bg-gray-100 cursor-default\"\n                      }`}\n                      disabled={page === currentPage || loading}\n                      onClick={() => setCurrentPage(page)}\n                    >\n                      {page}\n                    </button>\n                  ))}\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                    currentPage !== totalPages && \"bg-white\"\n                  }`}\n                  aria-label=\"Next\"\n                  disabled={currentPage === totalPages || loading}\n                  onClick={() => setCurrentPage(currentPage + 1)}\n                >\n                  <MdNavigateNext className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </nav>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n} from \"../shared/interfaces\";\nimport { errorToText } from \"../utils/errors\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface getAllRoomActions {\n  type: ActionTypes.GET_ALL_ROOM;\n  payload: RoomLocationInterface[];\n}\n\nexport interface createProvinceActions {\n  type: ActionTypes.CREATE_PROVINCE;\n  payload: RoomLocationInterface;\n}\n\nexport interface updateProvinceActions {\n  type: ActionTypes.UPDATE_PROVINCE;\n  payload: {\n    province_id: string;\n    province_name: string;\n  };\n}\n\nexport interface deleteProvinceActions {\n  type: ActionTypes.DELETE_PROVINCE;\n  payload: string;\n}\n\n// ============ DISTRICT =================\nexport interface createDistrictActions {\n  type: ActionTypes.CREATE_DISTRICT;\n  payload: { province_id: string; data: DistrictInterface };\n}\n\nexport interface updateDistrictActions {\n  type: ActionTypes.UPDATE_DISTRICT;\n  payload: {\n    province_id: string;\n    district_id: string;\n    district_name: string;\n  };\n}\n\nexport interface deleteDistrictActions {\n  type: ActionTypes.DELETE_DISTRICT;\n  payload: { province_id: string; district_id: string };\n}\n\n// ============ CENTERS =================\nexport interface createCenterActions {\n  type: ActionTypes.CREATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: CentersInterface;\n  };\n}\n\nexport interface updateCenterActions {\n  type: ActionTypes.UPDATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    examination_center_id: string;\n    center_name: string;\n  };\n}\n\nexport interface deleteCenterActions {\n  type: ActionTypes.DELETE_CENTER;\n  payload: { province_id: string; district_id: string; center_id: string };\n}\n\n// ============ ROOMS =================\nexport interface createRoomActions {\n  type: ActionTypes.CREATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    data: RoomsInterface;\n  };\n}\n\nexport interface updateRoomActions {\n  type: ActionTypes.UPDATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n    room_number: number;\n    capacity: number;\n  };\n}\n\nexport interface deleteRoomActions {\n  type: ActionTypes.DELETE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n  };\n}\n\nexport type RoomActionType =\n  | getAllRoomActions\n  | createProvinceActions\n  | updateProvinceActions\n  | deleteProvinceActions\n  | createDistrictActions\n  | updateDistrictActions\n  | deleteDistrictActions\n  | createCenterActions\n  | updateCenterActions\n  | deleteCenterActions\n  | createRoomActions\n  | updateRoomActions\n  | deleteRoomActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getAllRoom = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<RoomLocationInterface[]>(\n        `${API.APPLICATION}/roomlocation`\n      );\n      dispatch<getAllRoomActions>({\n        type: ActionTypes.GET_ALL_ROOM,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const FC_CreateProvince = (data: RoomLocationInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createProvinceActions>({\n      type: ActionTypes.CREATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateProvince = (data: {\n  province_id: string;\n  province_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateProvinceActions>({\n      type: ActionTypes.UPDATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteProvince = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteProvinceActions>({\n      type: ActionTypes.DELETE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\n// DISTRICT =================\nexport const FC_CreateDistrict = (data: {\n  province_id: string;\n  data: DistrictInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createDistrictActions>({\n      type: ActionTypes.CREATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateDistrict = (data: {\n  province_id: string;\n  district_id: string;\n  district_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateDistrictActions>({\n      type: ActionTypes.UPDATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteDistrict = (data: {\n  province_id: string;\n  district_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteDistrictActions>({\n      type: ActionTypes.DELETE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\n// CENTERS =================\nexport const FC_CreateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  data: CentersInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createCenterActions>({\n      type: ActionTypes.CREATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  examination_center_id: string;\n  center_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateCenterActions>({\n      type: ActionTypes.UPDATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteCenter = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteCenterActions>({\n      type: ActionTypes.DELETE_CENTER,\n      payload: data,\n    });\n  };\n};\n\n// ROOM =================\nexport const FC_CreateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  data: RoomsInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createRoomActions>({\n      type: ActionTypes.CREATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n  room_number: number;\n  capacity: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateRoomActions>({\n      type: ActionTypes.UPDATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n}) => {\n  console.log({ delete_room: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteRoomActions>({\n      type: ActionTypes.DELETE_ROOM,\n      payload: data,\n    });\n  };\n};\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { data_school } from \"../shared/dataTest\";\nimport {\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolsInfo = () => {\n  return async (dispatch: Dispatch) => {\n    setAxiosToken();\n    // const response = await axios.get<AccessRoleType[]>(url);\n\n    dispatch<GetSchoolsInfoAction>({\n      type: ActionTypes.GET_SCHOOLS_INFO,\n      payload: data_school,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log({ schoolPosts: res.data });\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log({ districtPosts: res });\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import axios from \"axios\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { AiOutlineCaretRight } from \"react-icons/ai\";\nimport { BiBuildingHouse } from \"react-icons/bi\";\nimport { IoIosClose } from \"react-icons/io\";\nimport { MdFilterList, MdLabel, MdModeEdit, MdSave } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadEducationCategories,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport { getAllRoom } from \"../../../actions/location\";\nimport {\n  createSchool,\n  deleteSchool,\n  getSchools,\n  updateSchool,\n} from \"../../../actions/schools\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  MainItem,\n  SideNavigation,\n  SubItem,\n  SubItemContainer,\n} from \"../../../components/Navigation/SideNavigation\";\nimport Table from \"../../../components/Table/Table\";\nimport { education_category } from \"../../../interfaces/education_category\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { toTwoDigit } from \"../../../shared/dataTest\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n  SchoolsInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\n\ninterface AppProps {\n  auth: Auth;\n  education_categories: education_category[] | null;\n  allRoom: RoomLocationInterface[];\n  schools: SchoolsInterface[];\n  getSchools: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  createSchool: Function;\n  getAllRoom: Function;\n  updateSchool: Function;\n  deleteSchool: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nexport const getSchoolById = (\n  schools: SchoolsInterface[],\n  school_id: string\n): SchoolsInterface => {\n  return schools.filter((school) => school._id === school_id)[0];\n};\n\nconst Index: React.FC<AppProps> = ({\n  auth,\n  education_categories,\n  allRoom,\n  schools,\n  getSchools,\n  loadEducationCategories,\n  getAllRoom,\n  updateSchool,\n  deleteSchool,\n  PushPopupAlert,\n}) => {\n  const [thisEdication, setThisEdication] = useState<education_category | null>(\n    null\n  );\n  const [edicationCategoryFilterStatus, setEdicationCategoryFilterStatus] =\n    useState<boolean>(false);\n  const [thisProvince, setThisProvince] =\n    useState<RoomLocationInterface | null>(null);\n  const [provinceFilterStatus, setProvinceFilterStatus] =\n    useState<boolean>(false);\n  const [thisDistrict, setThisDistrict] = useState<DistrictInterface | null>(\n    null\n  );\n  const [districtFilterStatus, setDistrictFilterStatus] =\n    useState<boolean>(false);\n  const [district, setDistrict] = useState<DistrictInterface[]>([]);\n  const [schoolList, setSchoolList] = useState<SchoolsInterface[]>(schools);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [modalState, setModalState] = useState<\"\" | \"CREATE\" | \"UPDATE\">(\"\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const [schoolName, setSchoolName] = useState<string>(\"\");\n  const [thisSchool, setThisSchool] = useState<SchoolsInterface | null>(null);\n  const [instituteId, setInstituteId] = useState<string>(\"\");\n  const [provinceId, setProvinceId] = useState<string>(\"\");\n  const [districtId, setDistrictId] = useState<string>(\"\");\n\n  const loadDistrict = async () => {\n    try {\n      const res = await axios.get<DistrictInterface[]>(\n        `${API.APPLICATION}/district`\n      );\n      setDistrict(res.data);\n    } catch (error) {\n      console.error({ code_error: error });\n    }\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    if (education_categories === null || education_categories.length === 0) {\n      loadEducationCategories(setLoading);\n    } else if (!allRoom.length) {\n      getAllRoom((status: boolean, msg: string) => {\n        if (!status && msg.length > 0) console.log(msg);\n      });\n    } else if (!schools.length) {\n      getSchools((status: boolean, msg: string) => {\n        console.log(status, msg);\n        setLoading(status);\n        if (msg.length > 0) {\n          console.error({ loadingCandidatesError: msg });\n        }\n      });\n    } else if (!district.length) {\n      loadDistrict();\n    } else if (schools.length) {\n      setSchoolList(schools);\n      setLoading(false);\n    }\n  }, [\n    allRoom.length,\n    education_categories,\n    getAllRoom,\n    district,\n    loadEducationCategories,\n    getSchools,\n    schools,\n  ]);\n\n  const tableData = (): JSX.Element[] => {\n    if (!schoolList.length) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={5}>\n            No School Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return schoolList.map((school, index) => (\n      <tr\n        key={index + school._id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">{school.school_name}</td>\n        <td className=\"py-3 px-5 text-left\">\n          {education_categories &&\n          education_categories.filter(\n            (edication) =>\n              edication.education_institute_id === school.education_category_id\n          ).length > 0\n            ? education_categories.filter(\n                (edication) =>\n                  edication.education_institute_id ===\n                  school.education_category_id\n              )[0].education_category_title\n            : \"No Institute\"}\n        </td>\n        <td className=\"py-3 px-5 text-left\">\n          {district &&\n          district.filter(\n            (district) => district.district_id === school.district_id\n          ).length > 0\n            ? district.filter(\n                (district) => district.district_id === school.district_id\n              )[0].district_name\n            : \"No district\"}\n        </td>\n        <td className=\"px-3\">\n          <div className=\"flex items-center gap-2 float-right\">\n            <button\n              className={`bg-blue-600 text-white font-bold py-1 px-2 flex items-center rounded focus:outline-none ${\n                loadingRequest ? \"cursor-not-allowed\" : null\n              }`}\n              title=\"Edit School\"\n              disabled={loadingRequest}\n              onClick={() => {\n                setModalState(\"UPDATE\");\n                setThisSchool(school);\n                setSchoolName(school.school_name);\n                setInstituteId(school.education_category_id);\n                setDistrictId(school.district_id);\n                setProvinceId(\n                  allRoom.filter((item) =>\n                    item.districts.find(\n                      (d) => d.district_id === school.district_id\n                    )\n                  )[0].province_id\n                );\n              }}\n            >\n              <MdModeEdit className=\"w-4 h-4\" />\n              Edit\n            </button>\n            <button\n              className={`bg-red-700 text-white font-bold py-1 px-2 flex items-center rounded focus:outline-none ${\n                loadingRequest ? \"cursor-not-allowed\" : null\n              }`}\n              title=\"Delete\"\n              disabled={loadingRequest}\n              onClick={() => handleDelete(school._id)}\n            >\n              <MdModeEdit className=\"w-4 h-4\" />\n              Delete\n            </button>\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!schoolName.length) {\n      return setError({\n        element: \"school_name\",\n        msg: \"School name is required\",\n      });\n    }\n    if (!instituteId.length) {\n      return setError({\n        element: \"edication_id\",\n        msg: \"Edication Institute is required\",\n      });\n    }\n\n    if (!districtId.length) {\n      return setError({\n        element: \"districtId_id\",\n        msg: \"District is required\",\n      });\n    }\n\n    setLoadingRequest(true);\n    try {\n      let res;\n      if (modalState === \"CREATE\") {\n        res = await axios.post<{\n          data: {\n            status: boolean;\n            school_name: string;\n            district_id: string;\n            education_category_id: string;\n            shool_id: string;\n          };\n        }>(`${API.APPLICATION}/schools`, {\n          school_name: schoolName,\n          district_id: districtId,\n          education_category_id: instituteId,\n        });\n        if (res.data) {\n          console.log({ res });\n          setSchoolList([\n            ...schoolList,\n            {\n              _id: res.data.data.shool_id,\n              status: res.data.data.status,\n              school_name: res.data.data.school_name,\n              district_id: res.data.data.district_id,\n              education_category_id: res.data.data.education_category_id,\n            },\n          ]);\n          createSchool({\n            _id: res.data.data.shool_id,\n            status: res.data.data.status,\n            school_name: res.data.data.school_name,\n            district_id: res.data.data.district_id,\n            education_category_id: res.data.data.education_category_id,\n          });\n          PushPopupAlert({\n            title: \"New School created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          setLoadingRequest(false);\n          setSchoolName(\"\");\n          setDistrictId(\"\");\n          setInstituteId(\"\");\n          setProvinceId(\"\");\n        }\n      } else if (thisSchool && modalState === \"UPDATE\") {\n        res = await axios.patch<{ update: SchoolsInterface }>(\n          `${API.APPLICATION}/schools`,\n          {\n            school_id: thisSchool._id,\n            school_name: schoolName,\n            district_id: districtId,\n            education_category_id: instituteId,\n          }\n        );\n        if (res.data) {\n          console.log({ res });\n          updateSchool({\n            _id: thisSchool._id,\n            status: true,\n            school_name: schoolName,\n            district_id: districtId,\n            education_category_id: instituteId,\n          });\n          PushPopupAlert({\n            title: \"School updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          setLoadingRequest(false);\n          setDistrictId(\"\");\n          setInstituteId(\"\");\n          setProvinceId(\"\");\n          setThisSchool(null);\n          setModalState(\"\");\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      setLoadingRequest(false);\n    }\n  };\n\n  const handleDelete = async (schoolId: string) => {\n    if (window.confirm(\"Are you sure do you want to delete this room?\")) {\n      setLoadingRequest(true);\n      try {\n        const res = await axios.delete<SchoolsInterface>(\n          `${API.APPLICATION}/schools/${schoolId}`\n        );\n\n        if (res.data) {\n          console.log({ res });\n          deleteSchool(schoolId);\n          PushPopupAlert({\n            title: \"School deleted successfully\",\n            theme: PopupAlertTheme.success,\n          });\n        }\n      } catch (error) {\n        console.log({ province_error: error });\n        PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const filterSchools = (\n    FILTER_TYPE: \"INSTITUTE\" | \"DISTRICT\",\n    FILTER_VALUE: string,\n    IGNORE_DISTRICT: boolean = false\n  ) => {\n    var newArray: SchoolsInterface[] = [];\n    if (FILTER_TYPE === \"INSTITUTE\") {\n      if (thisDistrict && !IGNORE_DISTRICT) {\n        if (FILTER_VALUE === \"ALL\") {\n          newArray = schools.filter(\n            (edication) => edication.district_id === thisDistrict.district_id\n          );\n        } else {\n          newArray = schools.filter(\n            (edication) =>\n              edication.education_category_id === FILTER_VALUE &&\n              edication.district_id === thisDistrict.district_id\n          );\n        }\n      } else {\n        if (FILTER_VALUE === \"ALL\") {\n          newArray = schools;\n        } else {\n          newArray = schools.filter(\n            (edication) => edication.education_category_id === FILTER_VALUE\n          );\n        }\n      }\n    }\n    if (FILTER_TYPE === \"DISTRICT\") {\n      if (thisEdication) {\n        if (FILTER_VALUE === \"ALL\") {\n          newArray = schools.filter(\n            (edication) =>\n              edication.education_category_id ===\n              thisEdication.education_institute_id\n          );\n        } else {\n          newArray = schools.filter(\n            (edication) =>\n              edication.district_id === FILTER_VALUE &&\n              edication.education_category_id ===\n                thisEdication.education_institute_id\n          );\n        }\n      } else {\n        if (FILTER_VALUE === \"ALL\") {\n          newArray = schools;\n        } else {\n          newArray = schools.filter(\n            (edication) => edication.district_id === FILTER_VALUE\n          );\n        }\n      }\n    }\n    setSchoolList(newArray);\n  };\n\n  const countSchool = (\n    FILTER_TYPE: \"DEFAULT\" | \"EDUCATION\" | \"DISTRICT\" = \"DEFAULT\",\n    FILTER_VALUE: string = \"ALL\"\n  ): string => {\n    let counts: number = 0;\n    if (FILTER_TYPE === \"DEFAULT\") {\n      counts = schoolList.length;\n    } else if (FILTER_TYPE === \"EDUCATION\") {\n      counts = schoolList.filter(\n        (item) => item.education_category_id === FILTER_VALUE\n      ).length;\n    } else if (FILTER_TYPE === \"DISTRICT\") {\n      counts = schoolList.filter(\n        (item) => item.district_id === FILTER_VALUE\n      ).length;\n    }\n    return toTwoDigit(counts);\n  };\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading schools...\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <SideNavigation>\n        {loading ? (\n          <section className=\"animate-pulse\">\n            <div className=\"bg-gray-400 font-bold mb-2 h-7 px-2 rounded-md cursor-wait\"></div>\n            <div className=\"bg-gray-400 font-bold mb-2 h-7 px-2 rounded-md cursor-wait\"></div>\n            <div className=\"bg-gray-400 font-bold mb-2 h-7 px-2 rounded-md cursor-wait\"></div>\n          </section>\n        ) : (\n          <Fragment>\n            {/* EDUCATION CATEGORY sections */}\n            <span className=\"font-semibold text-lg text-gray-500\">\n              Filter by Institute\n            </span>\n            <section\n              className={`mt-2 ${loadingRequest && \"cursor-pointer\"}`}\n              onClick={() =>\n                !loadingRequest &&\n                setEdicationCategoryFilterStatus(!edicationCategoryFilterStatus)\n              }\n            >\n              <MainItem\n                title={\n                  !thisEdication\n                    ? \"Choose Education Institute\"\n                    : thisEdication.education_category_title\n                }\n                active={\n                  edicationCategoryFilterStatus || thisEdication !== null\n                    ? true\n                    : false\n                }\n              />\n            </section>\n            {edicationCategoryFilterStatus &&\n              education_categories &&\n              education_categories.length > 0 && (\n                <SubItemContainer>\n                  {education_categories &&\n                    education_categories.map((edication, index) => (\n                      <section\n                        key={edication.education_institute_id + index}\n                        onClick={() =>\n                          !loadingRequest &&\n                          (setThisEdication(edication),\n                          setEdicationCategoryFilterStatus(false),\n                          filterSchools(\n                            \"INSTITUTE\",\n                            edication.education_institute_id\n                          ))\n                        }\n                      >\n                        <SubItem\n                          title={edication.education_category_title}\n                          icon={MdLabel}\n                          active={\n                            thisEdication\n                              ? edication.education_institute_id ===\n                                thisEdication.education_institute_id\n                              : false\n                          }\n                        />\n                      </section>\n                    ))}\n                </SubItemContainer>\n              )}\n            {/* end EDUCATION CATEGORY sections */}\n\n            {/* province sections */}\n            <section>\n              <span className=\"font-semibold text-lg text-gray-500\">\n                Filter by District\n              </span>\n              <section\n                className=\"mt-2\"\n                onClick={() =>\n                  !loadingRequest &&\n                  (setEdicationCategoryFilterStatus(false),\n                  setProvinceFilterStatus(!provinceFilterStatus),\n                  setDistrictFilterStatus(false))\n                }\n              >\n                <MainItem\n                  title={\n                    !thisProvince\n                      ? \"Choose Province\"\n                      : thisProvince.province_name\n                  }\n                  active={\n                    provinceFilterStatus || thisProvince !== null ? true : false\n                  }\n                />\n              </section>\n            </section>\n            {provinceFilterStatus && allRoom && allRoom.length > 0 && (\n              <SubItemContainer>\n                {allRoom &&\n                  allRoom.map((province, index) => (\n                    <section\n                      key={province.province_id + index}\n                      onClick={() =>\n                        !loadingRequest &&\n                        (setProvinceFilterStatus(false),\n                        setThisProvince(province),\n                        setThisDistrict(null),\n                        thisEdication &&\n                          filterSchools(\n                            \"INSTITUTE\",\n                            thisEdication.education_institute_id,\n                            true\n                          ))\n                      }\n                    >\n                      <SubItem\n                        title={province.province_name}\n                        icon={MdLabel}\n                        active={\n                          thisProvince\n                            ? province.province_id === thisProvince.province_id\n                            : false\n                        }\n                      />\n                    </section>\n                  ))}\n              </SubItemContainer>\n            )}\n            {/* end province sections */}\n\n            {/* DISTRICT sections */}\n            {thisProvince && (\n              <section\n                className=\"mt-2\"\n                onClick={() =>\n                  !loadingRequest &&\n                  (setEdicationCategoryFilterStatus(false),\n                  setProvinceFilterStatus(false),\n                  setDistrictFilterStatus(!districtFilterStatus))\n                }\n              >\n                <MainItem\n                  title={\n                    !thisDistrict\n                      ? \"Choose District\"\n                      : thisDistrict.district_name\n                  }\n                  active={\n                    districtFilterStatus || thisDistrict !== null ? true : false\n                  }\n                />\n              </section>\n            )}\n            {districtFilterStatus &&\n              thisProvince &&\n              thisProvince.districts.length > 0 && (\n                <SubItemContainer>\n                  {thisProvince &&\n                    thisProvince.districts.map((district, index) => (\n                      <section\n                        key={district.district_id + index}\n                        onClick={() =>\n                          !loadingRequest &&\n                          (setThisDistrict(district),\n                          setDistrictFilterStatus(false),\n                          filterSchools(\"DISTRICT\", district.district_id))\n                        }\n                      >\n                        <SubItem\n                          title={district.district_name}\n                          icon={MdLabel}\n                          active={\n                            thisDistrict\n                              ? district.district_id ===\n                                thisDistrict.district_id\n                              : false\n                          }\n                        />\n                      </section>\n                    ))}\n                </SubItemContainer>\n              )}\n            {/* end DISTRICT sections */}\n          </Fragment>\n        )}\n      </SideNavigation>\n\n      <div className=\"w-full my-5 px-1\">\n        {/* header title */}\n        <div className=\"flex items-start justify-between\">\n          <div className=\"flex flex-row items-center\">\n            <BiBuildingHouse className=\"text-blue-500 w-28 h-28\" />\n            <div className=\"flex flex-col\">\n              <h1 className=\"text-3xl font-semibold\">Schools Management</h1>\n              <div className=\"flex flex-row items-center mx-2 md:gap-3 gap-2\">\n                <div className=\"flex flex-col mt-1\">\n                  <span className=\"text-gray-600 text-base\">All School(s)</span>\n                  <span className=\"text-gray-600 text-2xl font-bold\">\n                    {countSchool()}\n                  </span>\n                </div>\n                {education_categories &&\n                  education_categories.length > 0 &&\n                  education_categories.map((education, index) => (\n                    <div\n                      className=\"flex flex-col mt-1\"\n                      key={index + education.education_institute_id}\n                    >\n                      <span className=\"text-gray-600 text-base\">\n                        {education.education_category_title}\n                      </span>\n                      <span className=\"text-gray-600 text-2xl font-bold\">\n                        {countSchool(\n                          \"EDUCATION\",\n                          education.education_institute_id\n                        )}\n                      </span>\n                    </div>\n                  ))}\n                {/* {userTabs !== TabTypes.Blocked_Users && ( */}\n                {/* <div className=\"flex flex-col mt-1\">\n                  <span className=\"text-gray-600 text-base\">\n                    Vaccant Position(s)\n                  </span>\n                  <span className=\"text-gray-600 text-2xl font-bold\">\n                    {labelCounts.activeUser}\n                    07\n                  </span>\n                </div> */}\n                {/* )}\n                {/* <div className=\"flex flex-col mt-1\">\n                  <span className=\"text-gray-600 text-base\">\n                    Blocked User(s)\n                  </span>\n                  <span className=\"text-gray-600 text-2xl font-bold\">\n                    12\n                  </span>\n                </div> */}\n              </div>\n            </div>\n          </div>\n          {/* <div className=\"flex items-center gap-2 mt-2\">\n            <label className=\"font-semibold text-gray-600 py-2\">\n              Academic period\n            </label>\n            <select\n              className=\"bg-white border border-gray-700 p-1 focus:outline-none focus:bg-gray-100\"\n              required\n            >\n              <option value=\"\">2020 - 2021</option>\n            </select>\n          </div> */}\n        </div>\n        {/* end header title */}\n\n        <div className=\"md:w-98 bg-white mx-auto md:p-2\">\n          <div className=\"flex items-start justify-between\">\n            <div>\n              {thisEdication && (\n                <div className=\"flex\">\n                  <div className=\"flex items-center gap-1 mx-1\">\n                    <MdFilterList className=\"text-gray-600\" />\n                    <span className=\"font-semibold text-gray-500\">\n                      Institute:\n                    </span>\n                    <span className=\"font-semibold text-blue-700\">\n                      {thisEdication.education_category_title}\n                    </span>\n                  </div>\n                  <IoIosClose\n                    className=\"cursor-pointer rounded-full hover:bg-red-500 hover:text-white\"\n                    onClick={() =>\n                      !loading &&\n                      (setThisEdication(null),\n                      filterSchools(\"INSTITUTE\", \"ALL\"))\n                    }\n                    title=\"Clean Education Institute filter\"\n                  />\n                </div>\n              )}\n              {thisProvince && (\n                <div className=\"flex\">\n                  <div className=\"flex items-center gap-1 mx-1\">\n                    <MdFilterList className=\"text-gray-600\" />\n                    <span className=\"font-semibold text-gray-500\">\n                      Location:\n                    </span>\n                    <span\n                      className={`font-semibold ${\n                        thisDistrict\n                          ? \"text-black cursor-pointer\"\n                          : \"text-blue-700\"\n                      }`}\n                    >\n                      {thisProvince.province_name}\n                    </span>\n                    {thisDistrict && (\n                      <div className=\"flex items-center\">\n                        <AiOutlineCaretRight />\n                        <span className=\"text-blue-700 font-semibold\">\n                          {thisDistrict.district_name}\n                        </span>\n                      </div>\n                    )}\n                  </div>\n                  <IoIosClose\n                    className=\"cursor-pointer rounded-full hover:bg-red-500 hover:text-white\"\n                    onClick={() =>\n                      !loading &&\n                      (setThisDistrict(null),\n                      setThisProvince(null),\n                      filterSchools(\"DISTRICT\", \"ALL\"))\n                    }\n                    title=\"Clean location filter\"\n                  />\n                </div>\n              )}\n            </div>\n            <button\n              type=\"button\"\n              className=\"px-4 py-3 bg-blue-600 rounded text-white focus:outline-none transform active:scale-x-75 transition-transform flex\"\n              onClick={() => setModalState(\"CREATE\")}\n              disabled={loadingRequest}\n            >\n              <MdSave className=\"h-6 w-6\" />\n              <span className=\"ml-2\">Add School</span>\n            </button>\n            {/* <DownloadPDF reportTitle=\"Testing PDF\" /> */}\n          </div>\n          <Table\n            columns={[\n              { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"School\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"Institute\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"District\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n            ]}\n            rows={tableData}\n            pagination={true}\n            search={true}\n            thColor=\"gray\"\n          />\n        </div>\n      </div>\n\n      {/* modal control */}\n      {modalState && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => {\n            setModalState(\"\");\n            setThisSchool(null);\n            setSchoolName(\"\");\n            setInstituteId(\"\");\n            setDistrictId(\"\");\n            setProvinceId(\"\");\n          }}\n          displayClose={true}\n          backDropClose={false}\n          title={\n            <div className=\"text-gray-600 font-bold text-3xl md:ml-4 inline-flex items-center gap-2\">\n              <BiBuildingHouse className=\"w-11 h-11 text-gray-500 hover:bg-gray-500 hover:text-gray-50 rounded-full p-0 foucs:outline-none\" />\n              {modalState === \"CREATE\" ? \"CREATE \" : \"UPDATE \"} SCHOOL\n            </div>\n          }\n          widthSizeClass={ModalSize.medium}\n          padding={{ title: true, body: false, footer: false }}\n        >\n          <div className=\"mx-8 mb-8\">\n            <form onSubmit={(e) => handleSubmit(e)}>\n              <div className=\"py-4 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>School name</label>\n                  <input\n                    type=\"text\"\n                    className={`text-left input-white w-20 inline-block border-2 ${\n                      error && error.element === \"school_name\"\n                        ? \"border-red-700\"\n                        : \"border-gray-500\"\n                    }`}\n                    placeholder=\"School name\"\n                    value={schoolName}\n                    onChange={(e) => {\n                      setError(null);\n                      setSchoolName(e.target.value);\n                    }}\n                    disabled={loadingRequest}\n                  />\n                  {error && error.element === \"school_name\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n\n                {/* INSTITUTES ================= */}\n                <div className=\"flex flex-col\">\n                  <label>Institutes</label>\n                  {/* block appearance-none w-full bg-grey-lighter border\n                  border-grey-lighter text-grey-darker py-3 px-4 pr-8 rounded */}\n                  <select\n                    className={`text-left input-white w-full block border-2 py-3 px-4 pr-8 ${\n                      error && error.element === \"edication_id\"\n                        ? \"border-red-700\"\n                        : \"border-gray-500\"\n                    }`}\n                    value={instituteId}\n                    onChange={(e) => setInstituteId(e.target.value)}\n                    disabled={loadingRequest}\n                  >\n                    <option value=\"\" disabled>\n                      Choose Insitute\n                    </option>\n                    {education_categories &&\n                      education_categories.map((institute, index) => (\n                        <option\n                          value={institute.education_institute_id}\n                          key={index + institute.education_institute_id}\n                        >\n                          {institute.education_category_title}\n                        </option>\n                      ))}\n                  </select>\n                  {error && error.element === \"edication_id\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n\n                {/* PROVINCE ================= */}\n                <div className=\"flex flex-col\">\n                  <label>Province</label>\n                  <select\n                    className={`text-left input-white w-20 inline-block border-2 border-gray-500`}\n                    value={provinceId}\n                    onChange={(e) => setProvinceId(e.target.value)}\n                    disabled={loadingRequest}\n                  >\n                    <option value=\"\" disabled>\n                      Choose province\n                    </option>\n                    {allRoom &&\n                      allRoom.map((province, index) => (\n                        <option\n                          value={province.province_id}\n                          key={index + province.province_id}\n                        >\n                          {province.province_name}\n                        </option>\n                      ))}\n                  </select>\n                </div>\n\n                {/* DISTRICT ================= */}\n                {provinceId && (\n                  <div className=\"flex flex-col\">\n                    <label>District</label>\n                    <select\n                      className={`text-left input-white w-20 inline-block border-2 ${\n                        error && error.element === \"districtId_id\"\n                          ? \"border-red-700\"\n                          : \"border-gray-500\"\n                      }`}\n                      value={districtId}\n                      onChange={(e) => setDistrictId(e.target.value)}\n                      disabled={loadingRequest}\n                    >\n                      <option value=\"\" disabled>\n                        Choose district\n                      </option>\n                      {allRoom &&\n                      allRoom.filter(\n                        (province) => province.province_id === provinceId\n                      )[0].districts.length > 0 ? (\n                        allRoom\n                          .filter(\n                            (province) => province.province_id === provinceId\n                          )[0]\n                          .districts.map((district, index) => (\n                            <option\n                              value={district.district_id}\n                              key={index + district.district_id}\n                            >\n                              {district.district_name}\n                            </option>\n                          ))\n                      ) : (\n                        <option key={702} disabled={true}>\n                          No District Found\n                        </option>\n                      )}\n                    </select>\n                    {error && error.element === \"districtId_id\" && (\n                      <span className=\"text-red-700\">{error.msg}</span>\n                    )}\n                  </div>\n                )}\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    setModalState(\"\");\n                    setThisSchool(null);\n                    setSchoolName(\"\");\n                    setInstituteId(\"\");\n                    setDistrictId(\"\");\n                    setProvinceId(\"\");\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none`}\n                  type=\"button\"\n                  disabled={loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                    loadingRequest ? \"animate-pulse\" : null\n                  }`}\n                  type=\"submit\"\n                  disabled={loadingRequest}\n                >\n                  {loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </form>\n          </div>\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  schoolLevels,\n  locations,\n}: StoreState): {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  education_categories: education_category[] | null;\n  allRoom: RoomLocationInterface[];\n} => {\n  return {\n    auth: auth,\n    schools: schools.schools,\n    education_categories: schoolLevels.education_categories,\n    allRoom: locations.roomLocation,\n  };\n};\n\nexport const Schools = connect(mapStateToProps, {\n  createSchool,\n  getSchools,\n  updateSchool,\n  getAllRoom,\n  deleteSchool,\n  loadEducationCategories,\n  PushPopupAlert,\n})(Index);\n"],"sourceRoot":""}
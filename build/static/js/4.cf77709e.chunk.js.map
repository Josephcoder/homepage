{"version":3,"sources":["interfaces/candidatesInterfaces.ts","interfaces/events.ts","interfaces/position.ts","containers/DoExam/utils/utils.ts","containers/DoExam/QuestionDetails/Answers/MultipleChoice.tsx","containers/DoExam/QuestionDetails/ConvertingAnswers.ts","containers/DoExam/QuestionDetails/Answers/TrueFalse.tsx","containers/DoExam/QuestionDetails/Answers/Matching.tsx","containers/DoExam/QuestionDetails/Answers/SimpleCalculated.tsx","containers/DoExam/QuestionDetails/Answers/ShortAnswer.tsx","containers/DoExam/QuestionDetails/Answers/Numerical.tsx","containers/DoExam/QuestionDetails/Answers/CalculatedMultipleChoice.tsx","containers/DoExam/QuestionDetails/QuestionDetails.tsx"],"names":["DocumentStatus","Events","ExamEvents","ExamEventTypes","validateDocCategory","requirement","userDocuments","undefined","find","item","category_id","category","user_detail_category_id","validateDocSubcategory","result","position_requirement","length","i","filterData","category_subcategory_data","category_subcategory_Data_id","_id","required","push","category_subcat_id","user_detail_subcategory_id","subcategory","validateDocSubcategoryOptional","returnValidatePosition","requirements","documents","status","findResult","examQuestions","answersList","marks","user_answers","findQuestionType","question_type_id","question_types","res","itm","id","element","questionTypeElements","x","key","getRandomArbitrary","min","max","Math","random","MultipleChoice","props","checkAnswer","available_answers","check","question_id","selectedQuestionAnswer","answer","alert","value","answers","map","onClick","answerQuestionFn","className","type","questionTypeElementsType","SingleMultiple","toMultipleChoice","toTrueFalse","toMatching","toSimpleCalculated","toShortAnswer","toNumerical","toCalculatedMultipleChoice","TrueFalse","Matching","SimpleCalculated","ShortAnswer","Numerical","CalculatedMultipleChoice","filter","toFixed","QuestionDetails","connect","auth","doExam","candidateExam","system","questionTypes","setSelectedExamQuestion","setQuestionLanguage","loadQuestionTypes","useState","loading","setLoading","QuestionData","candidate_exam","q","questions","selected_question","findSelectedQuestionDetails","question","useEffect","Loading","LoadingType","white","findIndex","language","selected_language","title","description","QuestionLanguages","question_answers","console","log","SimpleCalculate","Numeric"],"mappings":"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","file":"static/js/4.cf77709e.chunk.js","sourcesContent":["export interface CandidateInterface {\n  n_id: string;\n  fname: string;\n  lname: string;\n  date_of_birth: string;\n  district: string;\n  email: string;\n  phone_number: string;\n  stopped: boolean;\n  user_id: string;\n  // more details\n  application_number: string;\n  cell: string;\n  civil_status: string;\n  country_of_birth: string;\n  date_of_expiry: string;\n  date_of_issue: string;\n  document_type: string;\n  father_names: string;\n  issue_number: string;\n  mother_names: string;\n  photo: string;\n  place_of_birth: string;\n  place_of_issue: string;\n  province: string;\n  sector: string;\n  sex: string;\n  spouse?: any;\n  status: string;\n  village: string;\n  village_id: string;\n  // temporary details\n  active?: boolean;\n  ref?: any;\n  muted?: boolean;\n  room_id?: string;\n  video?: boolean;\n  stream?: any;\n  peer?: any;\n  peer_id?: any;\n  type?: any;\n  id?: string;\n}\n\nexport interface CandidateProctoringInterface {\n  fname: string;\n  lname: string;\n  email: string;\n  stopped: boolean;\n  user_id: string;\n  active: boolean;\n  // others\n  ref?: any;\n  muted?: boolean;\n  peer?: any;\n  peer_id?: any;\n}\n\nexport interface DocumentsCategories {\n  description: string;\n  fields: string[];\n  title: string;\n  user_detail_category_id: string;\n}\n\nexport interface DocumentsCategoriesWithCount {\n  description: string;\n  fields: string[];\n  title: string;\n  user_detail_category_id: string;\n  count: number;\n}\n\nexport interface DocumentSubCategories {\n  category_id: string;\n  description: string;\n  title: string;\n  user_detail_subcategory_id: string;\n}\n// export interface CategorySubcategoryData {\n//   category_id: string;\n//   category_subcategory_id: string;\n//   description: string;\n//   others: {\n//     key: string;\n//     value: string;\n//   }[];\n//   subcategory_id: string;\n//   title: string;\n// }\n\nexport interface CategorySubcategoryData {\n  category_id: string;\n  subcategory_id: string;\n  title: string;\n  description: string;\n  others: {\n    key: string;\n    value: string;\n  }[];\n  category_subcategory_Data_id: string;\n}\n\nexport interface DocumentUser_API {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: string;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  doc_id: string;\n  category_subcategory_data: string;\n}\n\nexport interface DocumentUser {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  doc_id: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport interface SchoolInterface {\n  district_id: string;\n  education_category_id: string;\n  school_name: string;\n  status: boolean;\n  _id: string;\n}\n\nexport enum DocumentStatus {\n  Waiting = \"waiting\",\n  Rejected = \"rejected\",\n  Approved = \"approved\",\n}\n","export enum Events {\n  USER_CONNECTED = \"user-connected\",\n  USER_DISCONNECTED = \"user-disconnected\",\n  JOIN_ROOM = \"join-room\",\n}\n\nexport enum ExamEvents {\n  START_EXAM_CLIENT = \"START_EXAM_CLIENT\",\n  START_EXAM_SERVER = \"START_EXAM_SERVER\",\n\n  STOP_EXAM_CLIENT = \"STOP_EXAM_CLIENT\",\n  STOP_EXAM_SERVER = \"STOP_EXAM_SERVER\",\n\n  CAND_EVENT_CLIENT = \"CAND_EVENT_CLIENT\",\n  CAND_EVENT_SERVER = \"CAND_EVENT_SERVER\",\n\n  CAND_CONTINUE_EXAM_SERVER = \"CAND_CONTINUE_EXAM_SERVER\",\n  CAND_CONTINUE_EXAM_CLIENT = \"CAND_CONTINUE_EXAM_CLIENT\",\n\n  CAND_STOP_EXAM_CLIENT = \"CAND_STOP_EXAM_CLIENT\",\n  CAND_STOP_EXAM_SERVER = \"CAND_STOP_EXAM_SERVER\",\n\n  CAND_RESTART_EXAM_CLIENT = \"CAND_RESTART_EXAM_CLIENT\",\n  CAND_RESTART_EXAM_SERVER = \"CAND_RESTART_EXAM_SERVER\",\n\n  ALL_CAND_RESTART_EXAM_CLIENT = \"ALL_CAND_RESTART_EXAM_CLIENT\",\n  ALL_CAND_RESTART_EXAM_SERVER = \"ALL_CAND_RESTART_EXAM_SERVER\",\n\n  CAND_WARNING_EXAM_CLIENT = \"CAND_WARNING_EXAM_CLIENT\",\n  CAND_WARNING_EXAM_SERVER = \"CAND_WARNING_EXAM_SERVER\",\n\n  CAND_BRODCAST_MSG_CLIENT = \"CAND_BRODCAST_MSG_CLIENT\",\n  CAND_BRODCAST_MSG_SERVER = \"CAND_BRODCAST_MSG_SERVER\",\n\n  CAND_PRIVATE_MSG_CLIENT = \"CAND_PRIVATE_MSG_CLIENT\",\n  CAND_PRIVATE_MSG_SERVER = \"CAND_PRIVATE_MSG_SERVER\",\n\n  CAND_EXAM_EVENT_CLIENT = \"CAND_EXAM_EVENT_CLIENT\",\n  CAND_EXAM_EVENT_SERVER = \"CAND_EXAM_EVENT_SERVER\",\n}\n\nexport enum ExamEventTypes {\n  PASTE_A_TEXT = \"PASTE A TEXT\",\n  MOVE_MOUSE_OUT = \"MOVE MOUSE OUT WINDOW\",\n}\n\nexport interface EventInterface {\n  event_id: string;\n  user_id: string;\n  event_type: string;\n  description: string;\n  room_id: string;\n  done_by?: string;\n  time: string;\n}\n","import { DocumentUser } from \".\";\n\nexport interface PositionAPI {\n  courses: {\n    course_name: string;\n    course_code: string;\n    description: string;\n    school_levels: string[];\n    course_id: string;\n  }[];\n  position_title: string;\n  description: string;\n  school_level_id: {\n    school_level_name: string;\n    description: string;\n    education_institute: string[];\n    courses: [];\n    school_level_id: string;\n  };\n  education_institute_id: {\n    education_category_title: string;\n    school_levels: [];\n    description: string;\n    education_institute_id: string;\n  };\n  requirements: PositionRequirements[];\n  isDeleted: boolean;\n  position_id: string;\n}\n\nexport interface PositionRequirementsOld {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: string[];\n  user_required_docs: {\n    category_id: string;\n    description: string;\n    title: string;\n    user_detail_subcategory_id: string;\n  }[];\n}\n\nexport interface PositionRequirements {\n  category: {\n    description: string;\n    fields: string[];\n    title: string;\n    user_detail_category_id: string;\n  };\n  subcategory: {\n    category_id: string;\n    description: string;\n    title: string;\n    user_detail_subcategory_id: string;\n  };\n  position_requirement: PositionSubcategoryData[];\n  required: boolean;\n}\n\nexport interface PositionSubcategoryData {\n  category_id: string;\n  subcategory_id: string;\n  description: string;\n  required: boolean;\n  title: string;\n  others: { key: string; value: string }[];\n  _id: string;\n  __v?: string;\n}\n\nexport const validateDocCategory = (\n  requirement: PositionRequirements,\n  userDocuments: DocumentUser[]\n) => {\n  if (\n    userDocuments.find(\n      (item) =>\n        item.category_id === requirement.category.user_detail_category_id\n    )?.category_id === undefined\n  ) {\n    return requirement.category.user_detail_category_id;\n  } else {\n    return null;\n  }\n};\n\n// If true, should return null\nexport const validateDocSubcategoryData = (\n  requirement: PositionSubcategoryData,\n  UserData: DocumentUser[]\n): string | null => {\n  let result: string | null = null;\n  // for (let requirement of requirements) {\n  if (\n    UserData.find(\n      (itm) =>\n        itm.category_subcategory_data &&\n        itm.category_subcategory_data.category_subcategory_Data_id ===\n          requirement._id\n    ) === undefined\n  ) {\n    result = requirement.subcategory_id;\n  }\n  // }\n  return result;\n};\n\nexport const validateDocSubcategory = (\n  requirement: PositionRequirements,\n  userDocuments: DocumentUser[]\n) => {\n  let result: {\n    category_subcat_id: string | null;\n    category_id: string | null;\n    user_detail_subcategory_id: string | null;\n  }[] = [];\n  if (requirement.position_requirement.length > 0) {\n    for (let i in requirement.position_requirement) {\n      let filterData = userDocuments.find((item) => item.category_subcategory_data &&\n        item.category_subcategory_data.category_subcategory_Data_id === requirement.position_requirement[i]._id\n        )?.category_subcategory_data;\n      if ((filterData === undefined || filterData === null) \n        && requirement.position_requirement[i].required === true\n      ) {\n        result.push({\n          category_subcat_id: requirement.position_requirement[i]._id,\n          category_id: requirement.category.user_detail_category_id,\n          user_detail_subcategory_id:\n            requirement.subcategory.user_detail_subcategory_id,\n        });\n      }\n    }\n  }\n  return result;\n};\n\n\nexport const validateDocSubcategoryOptional = (\n  requirement: PositionRequirements,\n  userDocuments: DocumentUser[]\n) => {\n  let result: {\n    category_subcat_id: string | null;\n    category_id: string | null;\n    user_detail_subcategory_id: string | null;\n  }[] = [];\n  if (requirement.position_requirement.length > 0) {\n    for (let i in requirement.position_requirement) {\n      let filterData = userDocuments.find((item) => item.category_subcategory_data &&\n        item.category_subcategory_data.category_subcategory_Data_id === requirement.position_requirement[i]._id\n        )?.category_subcategory_data;\n      if ((filterData === undefined || filterData === null) \n        && requirement.position_requirement[i].required === false\n      ) {\n        result.push({\n          category_subcat_id: requirement.position_requirement[i]._id,\n          category_id: requirement.category.user_detail_category_id,\n          user_detail_subcategory_id:\n            requirement.subcategory.user_detail_subcategory_id,\n        });\n      }\n    }\n  }\n  return result;\n};\n\nexport const returnValidatePosition = (\n  requirements: PositionRequirements[],\n  documents: DocumentUser[]\n) => {\n  let status = true;\n  for (let i in requirements) {\n    if (requirements[i].position_requirement.length === 0) {\n      if (\n        requirements[i] !== null &&\n        documents !== null &&\n        validateDocCategory(requirements[i], documents) !== null &&\n        validateDocCategory(requirements[i], documents) !== undefined\n      ) {\n        status = false;\n      }\n    } else {\n      if (validateDocSubcategory(requirements[i], documents).length !== 0) {\n        status = false;\n      }\n    }\n  }\n  return status;\n};\n","import { exam_question } from \"../../../interfaces/exam_question\";\nimport { questionType, questionTypeElements, questionTypeElementsType } from \"../../../interfaces/question\";\nimport { newAnswer } from \"../DoExam\";\n\nexport const findResult = (examQuestions: exam_question[], answersList: newAnswer[]): number => {\n  let marks: number = 0;\n  if (answersList !== undefined && answersList !== null) {\n    for (let i in answersList) {\n      let answer = answersList;\n      if (answer[i].user_answers?.status === true) {\n        marks = marks + 1;\n      }\n    }\n  }\n  return examQuestions !== undefined ? (marks * 100)/examQuestions.length : 0;\n}\n\nexport const findQuestionType = (question_type_id: string | null | undefined, question_types: questionType[] | null): questionTypeElementsType | null => {\n  let res: questionTypeElementsType | null = null;\n  if (question_types !== null && question_type_id !== undefined) {\n    let item: questionType | undefined = question_types.find(itm => itm.id === question_type_id);\n    if (item !== undefined) {\n      let element = questionTypeElements.find(x => item && x.key === item.element);\n      if (element !== undefined) {\n        res = element.key\n      }\n    }\n  }\n  return res\n}\n\nexport const getRandomArbitrary = (min: number, max: number) => {\n  return Math.random() * (max - min) + min;\n}","import React from 'react'\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im'\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from 'react-icons/md'\nimport { QuestionAnswersStore } from '../../../../actions'\nimport { MultipleChoiceQuestionAnswerInterface, questionTypeElementsType } from '../../../../interfaces/question'\n\ninterface MultipleChoiceProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null, \n    answers: MultipleChoiceQuestionAnswerInterface[] | undefined,\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst MultipleChoice = (props: MultipleChoiceProps) => {\n  \n  const checkAnswer = (item: MultipleChoiceQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n      if (check !== undefined) {\n        let x = check.answer.find(itm => itm.id === item.id);\n        if (x !== undefined) {\n          alert(\"x: \" + x.value)\n          res = true;\n        }\n      }\n    }\n    return res;\n  }\n  const addAnswer = (item: QuestionAnswersStore) => {\n    \n  }\n  return (\n    <div>\n      {props.selectedQuestionAnswer !== null &&\n      props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer.answers.map((item) => (\n        <div onClick={() => props.selectedQuestionAnswer.question_id !== null && \n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: false,\n            answer: [{\n              id: item.id,\n              value: item.value,\n              status: item.status,\n            }]\n          })} className={`px-2 py-2 border-b ${checkAnswer(item) === true ? \"bg-blue-600 border-blue-500 text-blue-100 hover:bg-blue-800\" : \"bg-white border-gray-100 hover:bg-gray-300\"} flex flex-row justify-left items-center rounded cursor-pointer`}>\n          {checkAnswer(item) === true ?\n          <>\n          {props.type === questionTypeElementsType.SingleMultiple ? \n          <MdRadioButtonChecked className=\"text-2xl\" /> : \n          <ImCheckboxChecked className=\"text-2xl\" />}\n          </>:\n          props.type === questionTypeElementsType.SingleMultiple ? \n          <MdRadioButtonUnchecked className=\"text-2xl\" />:\n          <ImCheckboxUnchecked className=\"text-2xl\" />}\n          <span className=\"ml-2\">{item.value}</span>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default MultipleChoice\n","import { CalculatedMultipleChoiceQuestionAnswerInterface, MatchingQuestionAnswerInterface, MultipleChoiceQuestionAnswerInterface, NumericalQuestionAnswerInterface, ShortAnswerQuestionAnswerInterface, SimpleCalculatedQuestionAnswerInterface, TrueFalseQuestionAnswerInterface } from \"../../../interfaces/question\";\n\nexport const toMultipleChoice = (answers: any[]): MultipleChoiceQuestionAnswerInterface[] => {\n  let res: MultipleChoiceQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toTrueFalse = (answers: any[]): TrueFalseQuestionAnswerInterface[] => {\n  let res: TrueFalseQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toMatching = (answers: any[]): MatchingQuestionAnswerInterface[] => {\n  let res: MatchingQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toSimpleCalculated = (answers: any[]): SimpleCalculatedQuestionAnswerInterface[] => {\n  let res: SimpleCalculatedQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toShortAnswer = (answers: any[]): ShortAnswerQuestionAnswerInterface[] => {\n  let res: ShortAnswerQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toNumerical = (answers: any[]): NumericalQuestionAnswerInterface[] => {\n  let res: NumericalQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toCalculatedMultipleChoice = (answers: any[]): CalculatedMultipleChoiceQuestionAnswerInterface[] => {\n  let res: CalculatedMultipleChoiceQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}","import React from 'react'\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from 'react-icons/md'\nimport { QuestionAnswersStore } from '../../../../actions'\nimport { TrueFalseQuestionAnswerInterface, questionTypeElementsType } from '../../../../interfaces/question'\n\ninterface TrueFalseProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null, \n    answers: TrueFalseQuestionAnswerInterface[] | undefined,\n  };\n  answerQuestionFn: Function;\n}\n\nconst TrueFalse = (props: TrueFalseProps) => {\n  const checkAnswer = (item: TrueFalseQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      res = false;\n    } else {\n    let check = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n      if (check !== undefined && check.answer.find(itm => itm.id === item.id)?.id !== undefined) {\n        res = true;\n      }\n    }\n    return res;\n  }\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n      props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer.answers.map((item) => (\n        <div onClick={() => props.answerQuestionFn(props.selectedQuestionAnswer!.question_id, item)} className={`px-2 py-2 border-b ${checkAnswer(item) === true ? \"bg-blue-600 border-blue-500 text-blue-100 hover:bg-blue-800\" : \"bg-white border-gray-100 hover:bg-gray-300\"} flex flex-row justify-left items-center rounded cursor-pointer`}>\n          {checkAnswer(item) === true ?\n          <MdRadioButtonChecked className=\"text-2xl\" />:\n          <MdRadioButtonUnchecked className=\"text-2xl\" />}\n          <span className=\"ml-2\">{item.value}</span>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default TrueFalse\n","import React from 'react'\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from 'react-icons/md'\nimport { QuestionAnswersStore } from '../../../../actions'\nimport { MatchingQuestionAnswerInterface, questionTypeElementsType } from '../../../../interfaces/question'\n\ninterface MatchingProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null, \n    answers: MatchingQuestionAnswerInterface[] | undefined,\n  };\n  answerQuestionFn: Function;\n}\n\nconst Matching = (props: MatchingProps) => {\n  const checkAnswer = (item: MatchingQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      res = false;\n    } else {\n    let check = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n      if (check !== undefined && check.answer.find(itm => itm.id === item.id)?.id !== undefined) {\n        res = true;\n      }\n    }\n    return res;\n  }\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n      props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer.answers.map((item) => (\n        <div className={`px-2 py-2 border-b ${checkAnswer(item) === true ? \"bg-blue-600 border-blue-500 text-blue-100 hover:bg-blue-800\" : \"bg-white border-gray-100 hover:bg-gray-50\"} grid grid-cols-2 rounded cursor-pointer`}>\n          <div className=\"col-span-1 flex flex-row items-center gap-2\">\n            {checkAnswer(item) === true ?\n            <MdRadioButtonChecked className=\"text-2xl\" />:\n            <MdRadioButtonUnchecked className=\"text-2xl\" />}\n            <span className=\"ml-2\">{item.value}</span>\n          </div>\n          <div className=\"col-span-1\">\n            <select className=\"input-white border border-gray-400\">\n              <option value=\"\">Select matching</option>\n              {props.selectedQuestionAnswer !== null &&\n                props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer.answers.map((itm, x) => (\n                  <option key={x + 1} value={itm.status}>{itm.status}</option>\n                ))}\n            </select>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Matching\n","import React from 'react'\nimport { QuestionAnswersStore } from '../../../../actions'\nimport { SimpleCalculatedQuestionAnswerInterface, questionTypeElementsType } from '../../../../interfaces/question'\n\ninterface SimpleCalculatedProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null, \n    answers: SimpleCalculatedQuestionAnswerInterface[] | undefined,\n  };\n  answerQuestionFn: Function;\n}\n\nconst SimpleCalculated = (props: SimpleCalculatedProps) => {\n  const checkAnswer = (item: SimpleCalculatedQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      res = false;\n    } else {\n    let check = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n      if (check !== undefined) {\n        res = true;\n      }\n    }\n    return res;\n  }\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n      props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer.answers.map((item) => (\n        <div className={`px-2 py-2 ${checkAnswer(item) === true ? \"bg-blue-600 border-blue-500 text-blue-100 hover:bg-blue-800\" : \"bg-white\"} flex flex-col justify-left rounded cursor-pointer`}>\n          <input type=\"text\" className=\"input-white border border-gray-400\" value={\"\"} />\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default SimpleCalculated\n","import React from 'react'\nimport { QuestionAnswersStore } from '../../../../actions'\nimport { ShortAnswerQuestionAnswerInterface, questionTypeElementsType } from '../../../../interfaces/question'\n\ninterface ShortAnswerProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null, \n    answers: ShortAnswerQuestionAnswerInterface[] | undefined,\n  };\n  answerQuestionFn: Function;\n}\n\nconst ShortAnswer = (props: ShortAnswerProps) => {\n  const checkAnswer = (item: ShortAnswerQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      res = false;\n    } else {\n    let check = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n      if (check !== undefined) {\n        res = true;\n      }\n    }\n    return res;\n  }\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n      props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer.answers.map((item) => (\n        <div className={`px-2 py-2 ${checkAnswer(item) === true ? \"bg-blue-600 border-blue-500 text-blue-100 hover:bg-blue-800\" : \"bg-white\"} flex flex-col justify-left rounded cursor-pointer`}>\n          <input type=\"text\" className=\"input-white border border-gray-400\" value={\"\"} />\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ShortAnswer\n","import React from 'react'\nimport { QuestionAnswersStore } from '../../../../actions'\nimport { NumericalQuestionAnswerInterface, questionTypeElementsType } from '../../../../interfaces/question'\n\ninterface NumericalProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null, \n    answers: NumericalQuestionAnswerInterface[] | undefined,\n  };\n  answerQuestionFn: Function;\n}\n\nconst Numerical = (props: NumericalProps) => {\n  const checkAnswer = (item: NumericalQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      res = false;\n    } else {\n    let check = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n      if (check !== undefined) {\n        res = true;\n      }\n    }\n    return res;\n  }\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n      props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer.answers.map((item) => (\n        <div className={`px-2 py-2 ${checkAnswer(item) === true ? \"bg-blue-600 border-blue-500 text-blue-100 hover:bg-blue-800\" : \"bg-white\"} flex flex-col justify-left rounded cursor-pointer`}>\n          <input type=\"text\" className=\"input-white border border-gray-400\" value={\"\"} />\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Numerical\n","import React from 'react'\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im'\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from 'react-icons/md'\nimport { QuestionAnswersStore } from '../../../../actions'\nimport { CalculatedMultipleChoiceQuestionAnswerInterface, questionTypeElementsType } from '../../../../interfaces/question'\nimport { getRandomArbitrary } from '../../utils/utils'\n\ninterface CalculatedMultipleChoiceProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null, \n    answers: CalculatedMultipleChoiceQuestionAnswerInterface[] | undefined,\n  };\n  answerQuestionFn: Function;\n}\n\nconst CalculatedMultipleChoice = (props: CalculatedMultipleChoiceProps) => {\n  const checkAnswer = (item: CalculatedMultipleChoiceQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      res = false;\n    } else {\n    let check = props.available_answers.find(itm => itm.question_id === props.selectedQuestionAnswer.question_id);\n      if (check !== undefined) {\n        res = true;\n      }\n    }\n    return res;\n  }\n  return (\n    <div>\n      {props.selectedQuestionAnswer.answers !== null &&\n      props.selectedQuestionAnswer.answers !== undefined && props.selectedQuestionAnswer.answers.map((item) => (\n        <div className={`px-2 py-2 border-b ${checkAnswer(item) === true ? \"bg-blue-600 border-blue-500 text-blue-100 hover:bg-blue-800\" : \"bg-white border-gray-100 hover:bg-gray-300\"} flex flex-row justify-left items-center rounded cursor-pointer`}>\n          <>\n            {checkAnswer(item) === true ?\n            <>\n            {props.selectedQuestionAnswer.answers?.filter(itm => itm.status === true).length === 1 ? \n            <MdRadioButtonChecked className=\"text-2xl\" /> : \n            <ImCheckboxChecked className=\"text-2xl\" />}\n            </>:\n            props.selectedQuestionAnswer.answers?.filter(itm => itm.status === true).length === 1 ? \n            <MdRadioButtonUnchecked className=\"text-2xl\" />:\n            <ImCheckboxUnchecked className=\"text-2xl\" />}\n            <span className=\"ml-2\">\n              {(getRandomArbitrary(item.value[0], item.value[item.value.length-1])).toFixed(2)}\n            </span>\n          </>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default CalculatedMultipleChoice\n","import React, { useEffect, useState } from 'react'\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from 'react-icons/md';\nimport { QuestionInterface, QuestionItemInterface, QuestionLanguage, QuestionLanguages, questionType, questionTypeElements, questionTypeElementsType, question_answer } from '../../../interfaces/index';\nimport { newAnswer } from '../DoExam';\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  candidateExamStoreInterface,\n  examDataInterface,\n  System,\n  setSelectedExamQuestion,\n  setQuestionLanguage,\n  questionTypesStoreInterface,\n  loadQuestionTypes,\n  QuestionAnswersStore,\n} from \"../../../actions\";\nimport { StoreState } from \"../../../reducers\";\nimport { exam_question } from '../../../interfaces/exam_question';\nimport Loading from '../../../components/Loading/Loading';\nimport { LoadingType } from '../../../components/Loading/LoadingV2';\nimport MultipleChoice from './Answers/MultipleChoice';\nimport { toCalculatedMultipleChoice, toMatching, toMultipleChoice, toNumerical, toShortAnswer, toSimpleCalculated, toTrueFalse } from './ConvertingAnswers';\nimport { findQuestionType } from '../utils/utils';\nimport TrueFalse from './Answers/TrueFalse';\nimport Matching from './Answers/Matching';\nimport SimpleCalculated from './Answers/SimpleCalculated';\nimport ShortAnswer from './Answers/ShortAnswer';\nimport Numerical from './Answers/Numerical';\nimport CalculatedMultipleChoice from './Answers/CalculatedMultipleChoice';\n\ninterface QuestionDetailsProps {\n  selectedQuestion: exam_question | null;\n  setSelectedQuestion: (question: exam_question) => void;\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n  questionAnswers: newAnswer[] | undefined;\n  doExam: examDataInterface;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  system: System;\n  setSelectedExamQuestion: (exam_id: string, question_id: string | null) => void;\n  setQuestionLanguage: (lang: QuestionLanguage) => void;\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) =>void;\n  preview: boolean;\n}\n\nconst _QuestionDetails = (props: QuestionDetailsProps) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const QuestionData = (): QuestionInterface | null => {\n    let res = null;\n    if (props.candidateExam.candidate_exam !== null) {\n      let q: QuestionInterface | undefined = props.candidateExam.candidate_exam.questions.find(itm => props.candidateExam.selected_question && itm.id === props.candidateExam.selected_question);\n      if (q !== undefined) {\n        res = q;\n      }\n    }\n    return res;\n  }\n  const findIndex = (question_id: string): number => {\n    if (props.candidateExam.candidate_exam !== null) {\n      for (let x: number = 0; x < props.candidateExam.candidate_exam.questions.length; x++) {\n        if (props.candidateExam.candidate_exam.questions[x].id === question_id) {\n          return x;\n        }\n      }\n      return 0;\n    }\n    return 0;\n  }\n  const findSelectedQuestionDetails = (): QuestionItemInterface[] => {\n    let res:QuestionItemInterface[] = [];\n    if (props.candidateExam.candidate_exam) {\n      let x = props.candidateExam.candidate_exam.questions.find(itm => itm.id === props.candidateExam.selected_question);\n      if (x !== undefined) {\n        res = x.question;\n      }\n    }\n    return res;\n  }\n  useEffect(() => {\n    if (props.questionTypes.questionTypes === null || props.questionTypes.questionTypes.length === 0) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [props])\n  return (\n    <div className=\"bg-gray-800 h-full\">\n      {loading === true ?\n      <div className=\"bg-gray-200 px-3 py-2 rounded my-2 mr-2 h-full overflow-y-auto pb-80 md:pb-60\">\n        <div className=\"rounded bg-white px-4 py-4 mt-5 mx-4\">\n          <div className=\"text-2xl mx-4 mb-3\">Loading...</div>\n          <Loading type={LoadingType.white} />\n        </div>\n      </div>:\n      <div className=\"bg-gray-200 px-3 py-2 rounded my-2 mr-2 h-full overflow-y-auto pb-80 md:pb-60\">\n          <div className=\"flex flex-row gap-2 mt-2\">\n            <div className=\"h-8 w-8 bg-gray-500 flex justify-center items-center text-white rounded-full px-3 py-2\">\n              {props.candidateExam.selected_question ? findIndex(props.candidateExam.selected_question)+1 : 1}\n            </div>\n              <div className=\"flex flex-row justify-between w-full\">\n                <div className=\"text-md flex flex-col\">\n                  <span className=\"italic text-xs\">\n                    {QuestionData() !== null && QuestionData()?.question.find(itm => itm.language === props.candidateExam.selected_language)?.title}\n                  </span>\n                  <span className=\"font-bold\">\n                    {QuestionData() !== null && QuestionData()?.question.find(itm => itm.language === props.candidateExam.selected_language)?.description}\n                  </span>\n                </div>\n                <div className=\"flex flex-row gap-1 justify-center items-start\">\n                  {QuestionLanguages.map((item, i) => (\n                    <div onClick={() => props.setQuestionLanguage(item.key)} className={`flex flex-row ${props.candidateExam.selected_language === item.key ? \"bg-gray-200 border-gray-200\" : \"bg-white border-white\"} px-2 py-1 justify-center items-center rounded hover:bg-blue-100 border hover:border-blue-500 cursor-pointer`}>\n                      <div key={i + 1}className=\"flex flex-row gap-2 items-center\">\n                        {props.candidateExam.selected_language === item.key ?\n                        <MdRadioButtonChecked className=\"text-blue-600\" />:\n                        <MdRadioButtonUnchecked className=\"text-gray-600\" />}\n                        <span className=\"font-bold text-blue-600\">{item.value}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n          </div>\n          <div className=\"my-4 mx-3 py-2 px-2 bg-white rounded\">\n            {/* Single and Multiple choice */}\n            {props.candidateExam.selected_question !== null && \n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) !== null &&\n            (findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) === questionTypeElementsType.MultipleChoice ||\n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) === questionTypeElementsType.SingleMultiple) &&\n            <MultipleChoice \n              type={findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes)}\n              available_answers={props.candidateExam.question_answers}\n              selectedQuestionAnswer={{\n                question_id: props.candidateExam.selected_question, \n                answers: toMultipleChoice(findSelectedQuestionDetails().find(itm => itm.language === props.candidateExam.selected_language)!.answer),\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />}\n            {/* True and False */}\n            {props.candidateExam.selected_question !== null && \n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) !== null &&\n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) === questionTypeElementsType.TrueFalse &&\n            <TrueFalse \n              type={findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes)}\n              available_answers={props.candidateExam.question_answers}\n              selectedQuestionAnswer={{\n                question_id: props.candidateExam.selected_question, \n                answers: toTrueFalse(findSelectedQuestionDetails().find(itm => itm.language === props.candidateExam.selected_language)!.answer),\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />}\n            {/* Matching Question */}\n            {console.log(\"Type: \", findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes))}\n            {props.candidateExam.selected_question !== null && \n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) !== null &&\n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) === questionTypeElementsType.Matching &&\n            <Matching \n              type={findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes)}\n              available_answers={props.candidateExam.question_answers}\n              selectedQuestionAnswer={{\n                question_id: props.candidateExam.selected_question, \n                answers: toMatching(findSelectedQuestionDetails().find(itm => itm.language === props.candidateExam.selected_language)!.answer),\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />}\n            {/* Simple Calculated */}\n            {props.candidateExam.selected_question !== null && \n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) !== null &&\n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) === questionTypeElementsType.SimpleCalculate &&\n            <SimpleCalculated \n              type={findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes)}\n              available_answers={props.candidateExam.question_answers}\n              selectedQuestionAnswer={{\n                question_id: props.candidateExam.selected_question, \n                answers: toSimpleCalculated(findSelectedQuestionDetails().find(itm => itm.language === props.candidateExam.selected_language)!.answer),\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />}\n            {/* Short Answer */}\n            {props.candidateExam.selected_question !== null && \n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) !== null &&\n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) === questionTypeElementsType.ShortAnswer &&\n            <ShortAnswer \n              type={findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes)}\n              available_answers={props.candidateExam.question_answers}\n              selectedQuestionAnswer={{\n                question_id: props.candidateExam.selected_question, \n                answers: toShortAnswer(findSelectedQuestionDetails().find(itm => itm.language === props.candidateExam.selected_language)!.answer),\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />}\n            {/* Short Answer */}\n            {props.candidateExam.selected_question !== null && \n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) !== null &&\n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) === questionTypeElementsType.Numeric &&\n            <Numerical \n              type={findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes)}\n              available_answers={props.candidateExam.question_answers}\n              selectedQuestionAnswer={{\n                question_id: props.candidateExam.selected_question, \n                answers: toNumerical(findSelectedQuestionDetails().find(itm => itm.language === props.candidateExam.selected_language)!.answer),\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />}\n            {/* Calculated Multiple choice */}\n            {props.candidateExam.selected_question !== null && \n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) !== null &&\n            findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes) === questionTypeElementsType.CalculatedMultipleChoice &&\n            <CalculatedMultipleChoice \n              type={findQuestionType(props.candidateExam.candidate_exam?.questions.find(itm => itm.id === props.candidateExam.selected_question)?.type, props.questionTypes.questionTypes)}\n              available_answers={props.candidateExam.question_answers}\n              selectedQuestionAnswer={{\n                question_id: props.candidateExam.selected_question, \n                answers: toCalculatedMultipleChoice(findSelectedQuestionDetails().find(itm => itm.language === props.candidateExam.selected_language)!.answer),\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />}\n          </div>\n      </div>}\n    </div>\n  )\n}\n\nconst mapStateToProps = ({\n  auth,\n  doExam,\n  candidateExam,\n  system,\n  questionTypes,\n}: StoreState): { auth: Auth; doExam: examDataInterface; candidateExam: candidateExamStoreInterface; system: System; questionTypes: questionTypesStoreInterface; } => {\n  return { auth: auth, doExam: doExam, candidateExam: candidateExam, system: system, questionTypes: questionTypes, };\n};\n\nconst QuestionDetails = connect(mapStateToProps, {\n  setSelectedExamQuestion,\n  setQuestionLanguage,\n  loadQuestionTypes,\n})(_QuestionDetails);\n\nexport default QuestionDetails;"],"sourceRoot":""}
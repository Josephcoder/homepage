{"version":3,"sources":["containers/QuestionBank/AddQuestion/UploadQuestion/EditQuestion/EditQuestion.tsx","containers/QuestionBank/AddQuestion/UploadQuestion/EditQuestion/QuestionAnswer.tsx","containers/QuestionBank/AddQuestion/UploadQuestion/EditQuestion/HandleInput.tsx","containers/QuestionBank/AddQuestion/UploadQuestion/EditQuestion/QuestionChapters.tsx","utils/question_bank.ts","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js"],"names":["SelectedKeysEdit","QuestionAnswer","props","useState","addedAnswer","setAddedAnswer","showAddAnswerStatus","setShowAddAnswer","className","onClick","selectedKey","onChange","e","updateMarks","parseInt","target","value","type","placeholder","marks","setSelectedKey","QuestionLanguages","map","item","i","length","find","itm","lang","key","answer","id","uuidv4","status","undefined","filter","backup","push","handleStatus","alert","selectedQL","wholeQuestion","language","addAnswerSingleMultiple","AddAnswer","console","log","selectedQuestionType","questionTypeElementsType","SingleMultiple","MultipleChoice","selectedQuestionItem","check","selectedLanguage","updateAnswerSingleMultiple","editSingleMultipleStatus","removeAnswerSingleMultiple","HandleInput","Title","languages","questionItems","handleUpdateQuestionDetails","description","title","Description","QuestionChapters","selectedCourse","chapters","course_code","course_name","setAddChapter","addedChapters","name","_EditQuestion","QuestionLang","question","res","state","setLoading","setState","loading","actionStatus","msg","PushPopupAlert","theme","PopupAlertTheme","success","danger","updatedQuestion","current","editedAnswerIndex","editedAnswer","newFiltered","getQuestionType","questionTypes","removed","window","confirm","answer_id","ans","chapter_id","submitEditedQuestion","a","addedQuestion","course","customNumber","UpdateQuestion","addExamQuestion","unSelectQuestion","componentDidMount","loadQuestionTypes","courses","loadCourses","setSelectedCourse","course_id","showFilter","showQuestionChapters","selectedQuestion","this","Loading","LoadingType","white","onSubmit","Modal","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","large","displayClose","padding","Courses","selected_course_id","selected_course","Component","EditQuestion","connect","auth","schoolLevels","questionBank","system","prepareExam","loadSchoolLevels","loadEducationCategories","setSelectedEducationCategory","setSelectedSchoolLevel","setUploadedQuestions","question_types","type_id","check_type","questionTypeElements","element","findTotalMarks","results","sum","test","user_total_marks","toFixed","CheckIfExamDone","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","byteToHex","toString","substr","stringify","arr","offset","arguments","toLowerCase","TypeError","v4","options","buf","rnds","random"],"mappings":"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","file":"static/js/0.98351c50.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { LanguageInterface, QuestionAnswerInterface, QuestionInterface, QuestionItemInterface, QuestionLanguages, questionTypeElementsType } from '../../../../../interfaces/question'\nimport { connect } from \"react-redux\";\nimport {\n  Auth, \n  courseStoreInterface,\n  loadCourses,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  QuestionBankStoreInterface,\n  setUploadedQuestions,\n  questionTypesStoreInterface,\n  loadQuestionTypes,\n  System,\n  PushPopupAlert,\n  UpdateQuestion,\n  PrepareExamsStoreInterface,\n  addExamQuestion,\n} from \"../../../../../actions\";\nimport { StoreState } from \"../../../../../reducers\";\nimport { PopupAlertData } from '../../../../../components/Alert/Popup';\nimport Courses from '../../../../../components/Courses/Courses';\nimport { course } from '../../../../../interfaces/course';\nimport Modal, { ModalSize, Themes } from '../../../../../components/Modal/Modal';\nimport QuestionAnswer from './QuestionAnswer';\nimport { MdModeEdit } from 'react-icons/md';\nimport HandleInputProps from './HandleInput'\nimport { HiCheck } from 'react-icons/hi';\nimport Loading from '../../../../../components/Loading/Loading';\nimport { LoadingType } from '../../../../../components/Loading/LoadingV2';\nimport QuestionChapters from './QuestionChapters';\nimport { PopupAlertTheme } from '../../../../../interfaces/popupAlert';\nimport { BiArrowBack } from 'react-icons/bi';\nimport { getQuestionType } from '../../../../../utils/question_bank';\n\ninterface EditQuestionProps {\n  selectedQuestion: QuestionInterface;\n  questionsList: QuestionInterface[];\n  questionTypes: questionTypesStoreInterface;\n  system: System;\n  course: courseStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  unSelectQuestion: () => void;\n  UpdateQuestion: (question: QuestionInterface, callback: (loading: boolean) => void, actionStatus: (loading: boolean, msg: string) => void) => void;\n  prepareExam: PrepareExamsStoreInterface;\n  addExamQuestion: (question: QuestionInterface) => void;\n}\n\ninterface EditQuestionState {\n  loading: boolean;\n  id: string;\n  course: string; // Course ID\n  question: QuestionItemInterface[];\n  type: questionTypeElementsType | \"Invalid\";\n  chapters: string[] // CourseChapter: ID\n  customNumber: number;\n  marks: number;\n  answer: QuestionAnswerInterface[];\n  selectedLanguage: LanguageInterface;\n  showFilter: boolean;\n  selectedKey: SelectedKeysEdit | null;\n  showQuestionChapters: boolean;\n}\n\nexport enum SelectedKeysEdit {\n  Title = \"Title\",\n  Description = \"Description\",\n  QuestionAnswer = \"QuestionAnswer\",\n}\n\nclass _EditQuestion extends Component<EditQuestionProps, EditQuestionState> {\n  constructor(props: EditQuestionProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n      loading: false,\n      id: this.props.selectedQuestion.id,\n      course: this.props.selectedQuestion.course,\n      question: this.props.selectedQuestion.question,\n      type: this.props.selectedQuestion.type,\n      chapters: this.props.selectedQuestion.chapters,\n      customNumber: this.props.selectedQuestion.customNumber,\n      marks: this.props.selectedQuestion.marks,\n      answer: this.props.selectedQuestion.answer,\n      selectedLanguage: QuestionLanguages[0],\n      showFilter: false,\n      selectedKey: null,\n      showQuestionChapters: false,\n\t\t};\n\t}\n\n  QuestionLang = (question: QuestionItemInterface[]) => {\n    let res = question.find(itm => itm.language === this.state.selectedLanguage.key);\n    console.log(\"sel: \", res);\n    return res !== undefined ? res : question[0];\n  }\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  }\n\n  actionStatus = (status: boolean, msg: string) => {\n    this.props.PushPopupAlert({\n      title: status === true ? \"Success!\" : \"Failed!\",\n      description: msg,\n      theme: status === true ? PopupAlertTheme.success : PopupAlertTheme.danger,\n    });\n  }\n\n  handleUpdateQuestionDetails = (question: QuestionItemInterface) => {\n    let updatedQuestion: QuestionItemInterface[] = [];\n    for (let current of this.state.question) {\n      if (question.language === current.language) {\n        updatedQuestion.push(question);\n      } else {\n        updatedQuestion.push(current);\n      }\n    }\n    this.setState({ question: updatedQuestion });\n  }\n\n  updateAnswerSingleMultiple = (question: QuestionItemInterface, editedAnswerIndex: string, editedAnswer: QuestionAnswerInterface) => {\n    let updatedQuestion: QuestionItemInterface[] = [];\n    for (let current of this.state.question) {\n      if (question.language === current.language) {\n        let res: QuestionAnswerInterface[] = [];\n        for (let answer = 0; answer < current.answer.length; answer++) {\n          if (current.answer.find(itm => itm.value === editedAnswerIndex) !== undefined) {\n            if (current.answer[answer].value === editedAnswerIndex) {\n              res.push(editedAnswer);\n            } else {\n              res.push(current.answer[answer])\n            }\n          }\n        }\n        updatedQuestion.push({\n          description: question.description,\n          language: question.language,\n          status: question.status,\n          title: question.title,\n          answer: res\n        })\n      } else {\n        updatedQuestion.push(current);\n      }\n    }\n    this.setState({ question: updatedQuestion });\n  }\n\n  addAnswerSingleMultiple = (question: QuestionItemInterface, addedAnswer: QuestionAnswerInterface) => {\n    let updatedQuestion: QuestionItemInterface[] = [];\n    let newFiltered: QuestionAnswerInterface[] = [];\n    for (let current of this.state.question) {\n      if (question.language === current.language) {\n        newFiltered = current.answer;\n        if (getQuestionType(this.props.questionTypes.questionTypes, this.state.type) === questionTypeElementsType.MultipleChoice) {\n          newFiltered.push(addedAnswer);\n        } \n        if (getQuestionType(this.props.questionTypes.questionTypes, this.state.type) === questionTypeElementsType.SingleMultiple) {\n          if (addedAnswer.status === true && current.answer.filter(itm => itm.status === true).length !== 0) {\n            newFiltered.push({\n              id: addedAnswer.id,\n              value: addedAnswer.value,\n              status: false,\n            });\n          } else {\n            newFiltered.push(addedAnswer);\n          }\n        }\n        updatedQuestion.push({\n          description: question.description,\n          language: question.language,\n          status: question.status,\n          title: question.title,\n          answer: newFiltered\n        })\n      } else {\n        updatedQuestion.push(current);\n      }\n    }\n    this.setState({ question: updatedQuestion });\n  }\n\n  removeAnswerSingleMultiple = (question: QuestionItemInterface[], removed: QuestionAnswerInterface) => {\n    if (window.confirm(\"Are you sure do ypu want to delete?\") === true) {\n      let updatedQuestion: QuestionItemInterface[] = [];\n      for (let current of this.state.question) {\n        let res: QuestionAnswerInterface[] = current.answer.filter(itm => itm.id !== removed.id);\n        updatedQuestion.push({\n          description: current.description,\n          language: current.language,\n          status: current.status,\n          title: current.title,\n          answer: res\n        });\n      }\n      this.setState({ question: updatedQuestion });\n    }\n  }\n\n  editSingleMultipleStatus = (answer_id: string, status: boolean) => {\n    let updatedQuestion: QuestionItemInterface[] = [];\n    for (let current of this.state.question) {\n      let res: QuestionAnswerInterface[] = [];\n      for (let ans of current.answer) {\n        if (ans.status === true) {\n          res.push({\n            id: ans.id,\n            value: ans.value,\n            status: false,\n          });\n        }else if (ans.id === answer_id) {\n          res.push({\n            id: ans.id,\n            value: ans.value,\n            status: status,\n          });\n        }\n        else {\n          res.push(ans);\n        }\n      }\n      updatedQuestion.push({\n        description: current.description,\n        language: current.language,\n        status: current.status,\n        title: current.title,\n        answer: res\n      });\n    }\n    this.setState({ question: updatedQuestion });\n  }\n\n  setAddChapter = (chapter_id: string) => {\n    if (this.state.chapters.find(itm => itm === chapter_id) === undefined) {\n      this.setState({ chapters: [...this.state.chapters, chapter_id] });\n    } else {\n      this.setState({ chapters: this.state.chapters.filter(itm => itm !== chapter_id) });\n    }\n  }\n\n  submitEditedQuestion = async () => {\n    if (this.state.chapters.length === 0) {\n      return this.props.PushPopupAlert({\n        title: \"Error\",\n        description: \"Please choose question chapters!\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setState({ loading: true });\n    let addedQuestion = {\n      id: this.state.id,\n      course: this.state.course,\n      question: this.state.question,\n      type: this.state.type,\n      chapters: this.state.chapters,\n      customNumber: this.state.customNumber,\n      marks: this.state.marks,\n      answer: this.state.answer,\n    }\n    await this.props.UpdateQuestion(addedQuestion, this.setLoading, this.actionStatus);\n    // Write twice to replace current state\n    this.props.addExamQuestion(addedQuestion);\n    this.props.addExamQuestion(addedQuestion);\n    this.props.unSelectQuestion();\n  }\n\n  componentDidMount = () => {\n    if (this.props.questionTypes.questionTypes === null || this.props.questionTypes.questionTypes.length === 0) {\n      this.props.loadQuestionTypes(this.setLoading);\n    }\n\n    if (this.props.course.courses === null || this.props.course.courses.length === 0) {\n      this.props.loadCourses(this.setLoading);\n    }\n  }\n\n  setSelectedCourse = (course: course | null) => {\n    if (course !== null) {\n      this.setState({ course: course.course_id });\n      this.setState({ showFilter: false });\n      this.setState({ chapters: [] });\n      this.setState({ showQuestionChapters: true });\n    }\n  }\n\n  setSelectedKey = (selectedKey: SelectedKeysEdit | null) => {\n    this.setState({ selectedKey: selectedKey });\n  }\n\n  updateMarks = (marks: number) => {\n    if (marks) {\n      this.setState({ marks: marks });\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        {this.state.loading === true ? \n        <div className=\"bg-white rounded px-4 py-5 mt-4\">\n          <Loading type={LoadingType.white} /> \n        </div>\n        :\n        <div className=\"bg-gray-100 shadow-md pb-2 rounded animate__animated animate__fadeIn animate__fast\">\n          <div className=\"flex flex-col items-center justify-between\">\n            <div className=\"flex flex-row items-center justify-between relative bottom-0 bg-white border-t-4 border-blue-500 w-full py-2 px-2 shadow-md\">\n              <div className=\"flex flex-row items-center gap-2\">\n                <div onClick={() => this.props.unSelectQuestion()} className=\"btn cursor-pointer bg-blue-100 text-blue-600 hover:bg-blue-200 h-full flex flex-row gap-2 items-center\"><BiArrowBack className=\"text-xl\" /> Back to list</div>\n                <div className=\"text-xl font-extrabold text-gray-600\">Edit question</div>\n              </div>\n              <div className=\"flex flex-row items-center gap-2\">\n                <div className=\"flex flex-row items-center justify-end\">\n                  {QuestionLanguages.map((item, i) => (\n                    <div onClick={() => this.setState({ selectedLanguage: item })} key={i + 1}\n                    className={`${this.state.selectedLanguage.key === item.key ? \"text-blue-600 bg-blue-50 rounded font-bold\" : \"text-gray-600\"} text-center text-sm px-3 py-2 cursor-pointer hover:bg-blue-50 hover:text-blue-600 hover:border-blue-600`}>\n                      {item.value}\n                    </div>\n                  ))}\n                </div>\n                <div onClick={() => this.submitEditedQuestion()} className=\"btn cursor-pointer bg-blue-600 text-white\">Save changes</div>\n              </div>\n            </div>\n          </div>\n          <form onSubmit={this.submitEditedQuestion} className=\"px-2 py-2\">\n            <div className=\"flex flex-row items-center justify-between border mb-3 text-sm gap-1 bg-white px-4 py-3 rounded\">\n              <div className=\"flex flex-col\">\n                <label className=\"text-gray-600 font-bold\">Selected course</label>\n                <span className=\"font-bold text-blue-600 flex flex-row items-center gap-2\">\n                  {/* <BsFillCaretRightFill className=\"text-xl\" /> */}\n                  {this.props.course.courses !== null && this.props.course.courses.find(itm => itm.course_id === this.state.course)?.course_code} -\n                  &nbsp;{this.props.course.courses !== null && this.props.course.courses.find(itm => itm.course_id === this.state.course)?.course_name}\n                </span>\n              </div>\n              <div className=\"flex flex-row items-center gap-2\">\n                {this.state.chapters.length === 0 ?\n                <div onClick={() => this.setState({ showQuestionChapters: true })} className={`bg-yellow-100 hover:bg-yellow-700 text-yellow-700 hover:text-white rounded px-3 py-2 cursor-pointer font-bold`}>\n                  Add chapters\n                </div> : \n                <div onClick={() => this.setState({ showQuestionChapters: true })} className=\"bg-blue-50 hover:bg-blue-200 text-blue-600 hover:text-blue-800 rounded px-3 py-2 cursor-pointer font-bold\">\n                  Edit chapters ({this.state.chapters.length})\n                </div>\n                }\n\n                <div onClick={() => this.setState({ showFilter: true })} className=\"bg-gray-100 text-gray-600 rounded-full flex items-center justify-center h-12 w-12 cursor-pointer hover:bg-blue-100 hover:text-blue-600\">\n                  <MdModeEdit className=\"text-3xl\" />\n                </div>\n              </div>\n            </div>\n            <div className=\"flex flex-row items-center justify-between mb-3 text-sm bg-white px-4 py-3 rounded border gap-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"text-gray-600 font-bold flex flex-row items-center justify-between\">\n                  Question title\n                  {this.state.selectedKey !== null && this.state.selectedKey === SelectedKeysEdit.Title &&\n                  <div onClick={() => this.setState({ selectedKey: null })} className=\"bg-blue-100 text-blue-600 rounded-full flex items-center justify-center h-12 w-12 cursor-pointer hover:bg-blue-200 hover:text-blue-700\">\n                    <HiCheck className=\"text-3xl\" />\n                  </div>}\n                </div>\n                {this.state.selectedKey !== SelectedKeysEdit.Title &&\n                <label className=\"text-blue-600 font-bold flex flex-row gap-2 items-center\">\n                  {/* <BsFillCaretRightFill className=\"text-xl\" /> */}\n                  {this.QuestionLang(this.state.question).title}\n                </label>}\n                {this.state.selectedKey !== null && this.state.selectedKey === SelectedKeysEdit.Title &&\n                <HandleInputProps \n                languages={QuestionLanguages} \n                questionItems={this.state.question}\n                selectedKey={this.state.selectedKey}\n                handleUpdateQuestionDetails={this.handleUpdateQuestionDetails} />}\n              </div>\n              {this.state.selectedKey !== SelectedKeysEdit.Title &&\n              <div onClick={() => this.setState({ selectedKey: SelectedKeysEdit.Title })} className=\"bg-gray-100 text-gray-600 rounded-full flex items-center justify-center h-12 w-12 cursor-pointer hover:bg-blue-100 hover:text-blue-600\">\n                <MdModeEdit className=\"text-3xl\" />\n              </div>}\n            </div>\n            <div className=\"flex flex-row items-center justify-between mb-3 text-sm bg-white border px-4 py-3 rounded gap-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"text-gray-600 font-bold flex flex-row items-center justify-between\">\n                  Question details\n                  {this.state.selectedKey !== null && this.state.selectedKey === SelectedKeysEdit.Description &&\n                  <div onClick={() => this.setState({ selectedKey: null })} className=\"bg-blue-100 text-blue-600 rounded-full flex items-center justify-center h-12 w-12 cursor-pointer hover:bg-blue-200 hover:text-blue-700\">\n                    <HiCheck className=\"text-3xl\" />\n                  </div>}\n                </div>\n                {this.state.selectedKey !== SelectedKeysEdit.Description &&\n                <label className=\"text-blue-600 font-bold flex flex-row gap-2 items-center\">\n                  {/* <BsFillCaretRightFill className=\"text-xl\" /> */}\n                  {this.QuestionLang(this.state.question).description}\n                </label>}\n                {this.state.selectedKey !== null && this.state.selectedKey === SelectedKeysEdit.Description &&\n                <HandleInputProps \n                languages={QuestionLanguages} \n                questionItems={this.state.question}\n                selectedKey={this.state.selectedKey}\n                handleUpdateQuestionDetails={this.handleUpdateQuestionDetails} />}\n              </div>\n              {this.state.selectedKey !== SelectedKeysEdit.Description &&\n              <div onClick={() => this.setState({ selectedKey: SelectedKeysEdit.Description })} className=\"bg-gray-100 text-gray-600 rounded-full flex items-center justify-center h-12 w-12 cursor-pointer hover:bg-blue-100 hover:text-blue-600\">\n                <MdModeEdit className=\"text-3xl\" />\n              </div>}\n            </div>\n            \n            <QuestionAnswer \n              selectedQuestionType={getQuestionType(this.props.questionTypes.questionTypes, this.state.type)} \n              selectedQuestionItem={this.QuestionLang(this.state.question)} \n              wholeQuestion={this.state.question} \n              selectedLanguage={this.state.selectedLanguage} \n              updateAnswerSingleMultiple={this.updateAnswerSingleMultiple} \n              addAnswerSingleMultiple={this.addAnswerSingleMultiple}\n              removeAnswerSingleMultiple={this.removeAnswerSingleMultiple} \n              selectedKey={this.state.selectedKey} \n              setSelectedKey={this.setSelectedKey}\n              editSingleMultipleStatus={this.editSingleMultipleStatus} \n              marks={this.state.marks}\n              updateMarks={this.updateMarks}\n              />\n          </form>\n        </div>}\n        {this.state.showFilter === true &&\n        <Modal\n          title=\"Filter courses by school levels\"\n          backDrop={true}\n          theme={Themes.default}\n          close={() => this.setState({ showFilter: false })}\n          backDropClose={true}\n          widthSizeClass={ModalSize.large}\n          displayClose={true}\n          padding={{title: true,}}>\n          <Courses setSelectedCourse={this.setSelectedCourse} selected_course_id={this.state.course} />\n        </Modal>}\n        {this.state.showQuestionChapters === true && \n        <Modal\n          title=\"Question course chapters\"\n          backDrop={true}\n          theme={Themes.default}\n          close={() => this.setState({ showQuestionChapters: false })}\n          backDropClose={true}\n          widthSizeClass={ModalSize.large}\n          displayClose={true}\n          padding={{title: true,}}>\n          {this.props.course.selected_course !== null &&\n            <QuestionChapters \n              selectedCourse={this.props.course.courses && this.props.course.courses.find(itm => itm.course_id === this.state.course)} \n              addedChapters={this.state.chapters} \n              setAddChapter={this.setAddChapter} />}\n              <div className=\"flex flex-row items-center justify-between mt-3 px-2 py-2\">\n                <div className=\"\"></div>\n                <div className=\"btn bg-blue-600 text-white cursor-pointer\" onClick={() => this.setState({ showQuestionChapters: false })}>Done</div>\n              </div>\n        </Modal>}\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  course,\n  schoolLevels,\n  questionBank,\n  questionTypes,\n  system,\n  prepareExam,\n}: StoreState): { auth: Auth; course: courseStoreInterface; schoolLevels: schoolLevelsStoreInterface; questionBank: QuestionBankStoreInterface; questionTypes: questionTypesStoreInterface; system: System; prepareExam: PrepareExamsStoreInterface; } => {\n  return { auth: auth, course: course, schoolLevels: schoolLevels, questionBank: questionBank, questionTypes: questionTypes, system: system, prepareExam: prepareExam, };\n};\n\nconst EditQuestion = connect(mapStateToProps, {\n  loadCourses,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  setUploadedQuestions,\n  loadQuestionTypes,\n  PushPopupAlert,\n  UpdateQuestion,\n  addExamQuestion,\n})(_EditQuestion);\n\nexport default EditQuestion;","import React, { useState } from 'react'\nimport { HiCheck } from 'react-icons/hi';\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im';\nimport { MdBookmark, MdModeEdit } from 'react-icons/md';\nimport { LanguageInterface, QuestionAnswerInterface, QuestionItemInterface, QuestionLanguages, questionTypeElementsType } from '../../../../../interfaces/question';\nimport { SelectedKeysEdit } from './EditQuestion';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FaCheckCircle, FaTimesCircle } from 'react-icons/fa';\nimport { RiShieldCheckFill } from 'react-icons/ri';\n\ninterface QuestionAnswerProps {\n  selectedQuestionType: questionTypeElementsType | null;\n  selectedQuestionItem: QuestionItemInterface;\n  wholeQuestion: QuestionItemInterface[];\n  selectedLanguage: LanguageInterface;\n  updateAnswerSingleMultiple: (question: QuestionItemInterface, editedAnswerIndex: string, editedAnswer: QuestionAnswerInterface) => void;\n  addAnswerSingleMultiple: (question: QuestionItemInterface, addedAnswer: QuestionAnswerInterface) => void;\n  removeAnswerSingleMultiple: (question: QuestionItemInterface[], removedAnswer: QuestionAnswerInterface) => void;\n  selectedKey: SelectedKeysEdit | null;\n  setSelectedKey: (selectedKey: SelectedKeysEdit | null) => void;\n  editSingleMultipleStatus: (answer_id: string, status: boolean) => void;\n  marks: number;\n  updateMarks: (marks: number) => void;\n}\n\nconst QuestionAnswer = (props: QuestionAnswerProps) => {\n  const [addedAnswer, setAddedAnswer] = useState<{lang: LanguageInterface; answer: QuestionAnswerInterface}[]>([]);\n  const [showAddAnswerStatus, setShowAddAnswer] = useState<boolean>(false);\n  const AddAnswer = () => {\n    if (addedAnswer !== null) {\n      if (addedAnswer.length !== QuestionLanguages.length) {\n        alert(\"Please fill question answer!\" + addedAnswer.length);\n      } else {\n        for (let answer of addedAnswer) {\n          let selectedQL = props.wholeQuestion.find(itm => itm.language === answer.lang.key);\n          if (selectedQL !== undefined) {\n            props.addAnswerSingleMultiple(selectedQL, answer.answer);\n          }\n        }\n        setAddedAnswer([]);\n        setShowAddAnswer(false);\n      }\n    }\n  }\n  const handleAnswer = (lang: LanguageInterface, answer: QuestionAnswerInterface) => {\n    if (addedAnswer.find(itm => itm.lang.key === lang.key) === undefined) {\n      setAddedAnswer([...addedAnswer, { lang: lang, answer: answer }]);\n    } else {\n      setAddedAnswer([...addedAnswer.filter(itm => itm.lang.key !== lang.key), { lang: lang, answer: answer }]);\n    }\n  }\n\n  const handleStatus = (status: boolean) => {\n    if (addedAnswer.length > 0) {\n      let backup = [];\n      for (let itm of addedAnswer) {\n        backup.push({\n          lang: itm.lang,\n          answer: { value: itm.answer.value, status: status, id: itm.answer.id }\n        })\n      }\n      setAddedAnswer(backup);\n    }\n  }\n  return (\n    <div className=\"flex flex-col mb-3 text-sm gap-2 bg-white px-2 py-2 rounded\">\n      {showAddAnswerStatus === true && \n        <label className=\"text-gray-600 font-bold\">Add question Answer</label>\n      }\n      \n      {showAddAnswerStatus === false ?\n      <div className=\"flex flex-row items-center gap-3 animate__animated animate__fadeIn animate__fast\">\n        <div onClick={() => setShowAddAnswer(true)} className=\"btn bg-blue-50 text-blue-600 cursor-pointer hover:bg-blue-200 hover:text-blue-800 border border-blue-300 w-32\">\n          Add answer\n        </div>\n        <div className=\"w-full flex flex-row items-center justify-between pr-2 py-1\">\n          <div className=\"text-gray-600 font-bold flex flex-row items-center\">\n            {props.selectedKey !== null && props.selectedKey === SelectedKeysEdit.QuestionAnswer ?\n            \"Edit Question answers\" : \"Question answers\"}\n          </div>\n          <div className=\"flex flex-row gap-2 items-center\">\n            {props.selectedKey !== null && props.selectedKey === SelectedKeysEdit.QuestionAnswer &&\n            <>\n            <div className=\"flex flex-row items-center justify-end gap-2\">\n              <span className=\"font-bold text-gray-600\">Marks</span>\n              <input onChange={(e: React.ChangeEvent<HTMLInputElement>) => props.updateMarks(parseInt(e.target.value))} type=\"number\" placeholder=\"Marks\" value={props.marks} className=\"input-gray-lg h-10\" />\n            </div>\n            <div onClick={() => props.setSelectedKey(null)} className=\"bg-blue-100 text-blue-600 rounded-full flex items-center justify-center h-12 w-12 cursor-pointer hover:bg-blue-200 hover:text-blue-700\">\n              <HiCheck className=\"text-3xl\" />\n            </div>\n            </>}\n            {props.selectedKey !== SelectedKeysEdit.QuestionAnswer &&\n            <>\n            <div className=\"px-4 py-2 rounded-full bg-blue-100 text-blue-600 font-bold\">Marks: {props.marks}</div>\n            <div onClick={() => props.setSelectedKey(SelectedKeysEdit.QuestionAnswer)} className=\"bg-gray-100 text-gray-600 rounded-full flex items-center justify-center h-12 w-12 cursor-pointer hover:bg-blue-100 hover:text-blue-600\">\n              <MdModeEdit className=\"text-3xl\" />\n            </div>\n            </>}\n          </div>\n        </div>\n      </div>\n      :\n      <div className=\"mb-2 gap-3 bg-white rounded animate__animated animate__fadeIn animate__fast\">\n        <div className=\"flex flex-col gap-2\">\n        {QuestionLanguages.map((item, i) => (\n          <div key={i + 1}className=\"flex flex-col gap-2\">\n            <span className=\"font-bold text-blue-600\">{item.value}</span>\n          <input \n            value={addedAnswer.length > 0 ? addedAnswer.find(itm => itm.lang.key === item.key)?.answer.value : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => \n              handleAnswer(\n                item, \n                { \n                  id: addedAnswer.length > 0 ? addedAnswer[0].answer.id : uuidv4(),\n                  value: e.target.value, \n                  status: addedAnswer.length > 0 ? addedAnswer[0].answer.status : false\n                })}\n            type=\"text\" className=\"input-gray-lg\" />\n          </div>\n        ))}\n        </div>\n        <div className=\"flex flex-row mt-3 items-center justify-end gap-2\">\n        <div \n        onClick={() => handleStatus(addedAnswer.length > 0 ? !(addedAnswer[0].answer.status) : false)}\n        className={`flex flex-row items-center gap-2 cursor-pointer ${addedAnswer.length > 0 && addedAnswer[0].answer.status === true ? \"text-blue-600\" : \"text-gray-600\"} hover:text-blue-600`}>\n          {addedAnswer.length > 0 && addedAnswer[0].answer.status === false ?\n          <ImCheckboxUnchecked className=\"text-2xl cursor-pointer\" /> :\n          <ImCheckboxChecked className=\"text-2xl cursor-pointer\" />}\n          <span className=\"font-bold text-xl\">{addedAnswer.length > 0 && addedAnswer[0].answer.status === true ? \"True\" : \"False\"}</span>\n        </div>\n        <div onClick={() => AddAnswer()} className=\"btn bg-blue-600 text-white hover:bg-blue-800 cursor-pointer w-24 text-center\">Add</div>\n        <div onClick={() => setShowAddAnswer(false)} className=\"btn bg-gray-500 text-white hover:bg-gray-700 cursor-pointer w-24 text-center\">Cancel</div>\n      </div>\n      </div>}\n      {showAddAnswerStatus === false &&\n      <div className=\"rounded bg-white px-2 py-2\">{console.log(props.selectedQuestionType)}\n        {(props.selectedQuestionType === questionTypeElementsType.SingleMultiple || \n        props.selectedQuestionType === questionTypeElementsType.MultipleChoice) && \n        props.selectedQuestionItem.answer.map((item, i) => (\n          <div className={`flex flex-row items-center justify-between mb-2 gap-3 ${props.selectedKey !== SelectedKeysEdit.QuestionAnswer ? \"border-b border-gray-300\" : \"\"}`}>\n            {props.selectedKey === SelectedKeysEdit.QuestionAnswer ?\n            <input\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                let check = props.wholeQuestion.find(itm => itm.language === props.selectedLanguage.key);\n                if (check === undefined) {\n                  check = props.wholeQuestion[0];\n                }\n                props.updateAnswerSingleMultiple(\n                  check, item.value, {\n                    value: e.target.value,\n                    status: item.status,\n                    id: item.id,\n                  }\n                )\n              }}\n              key={i + 1}\n              value={`${item.value}`}\n              type=\"text\" \n              className=\"input-gray-lg w-full border-2 border-gray-500\" /> :\n              <div className=\"w-full flex flex-row items-center gap-3 py-2\">\n                {item.status === true ?\n                <RiShieldCheckFill className=\"text-2xl text-blue-600\" /> :\n                <MdBookmark className=\"text-2xl text-gray-500\" />}\n                {item.value}\n              </div>}\n              {props.selectedKey === SelectedKeysEdit.QuestionAnswer ?\n              <div \n                onClick={() => {\n                  let check = props.wholeQuestion.find(itm => itm.language === props.selectedLanguage.key);\n                  if (check === undefined) {\n                    check = props.wholeQuestion[0];\n                  }\n                  props.editSingleMultipleStatus(\n                    item.id, !item.status\n                  )\n                }}\n                className={`flex flex-row items-center gap-2 cursor-pointer ${item.status === true ? \"text-blue-600\" : \"text-gray-600\"} hover:text-blue-600 w-40`}>\n                  {item.status === false ?\n                  <ImCheckboxUnchecked className=\"text-2xl cursor-pointer\" /> :\n                  <ImCheckboxChecked className=\"text-2xl cursor-pointer\" />}\n                  <span className=\"font-bold \">{item.status === true ? \"Correct\" : \"Incorrect\"}</span>\n                </div> :\n                <div className=\"w-28 flex justify-end text-center\">\n                  <div className={`font-bold px-3 py-2 rounded-full w-28 ${item.status === true ? \"text-green-600 bg-white\" : \"text-gray-600 bg-white\"}`}>\n                    {item.status === true ? \n                      <div className=\"flex flex-row gap-2 items-center\">\n                        <FaCheckCircle className=\"text-xl\" /> <span>Correct</span>\n                      </div> : \n                      <div className=\"flex flex-row gap-2 items-center\">\n                        <FaTimesCircle className=\"text-xl\" /> <span>Incorrect</span>\n                      </div>\n                    }\n                  </div>\n                </div>}\n              <div \n              onClick={() => {\n                props.removeAnswerSingleMultiple(props.wholeQuestion, item)\n              }}\n              className=\"btn bg-red-50 text-red-600 hover:bg-red-200 hover:text-red-800 cursor-pointer\">Remove</div>\n          </div>\n        ))\n        }\n      </div>}\n    </div>\n  )\n}\n\nexport default QuestionAnswer\n","import React, { useState } from 'react'\nimport { LanguageInterface, QuestionItemInterface } from '../../../../../interfaces';\nimport { SelectedKeysEdit } from './EditQuestion';\n\ninterface HandleInputProps {\n  languages: LanguageInterface[];\n  questionItems: QuestionItemInterface[];\n  selectedKey: SelectedKeysEdit;\n  handleUpdateQuestionDetails: (question: QuestionItemInterface) => void;\n}\n\ninterface editedQuestionInterface {\n  lang: LanguageInterface;\n  value: string;\n  status: boolean;\n}\n\nconst HandleInput = (props: HandleInputProps) => {\n  if (props.selectedKey === SelectedKeysEdit.Title) {\n  return (\n    <div>\n      {props.languages.map((item, i) => (\n        <div className=\"flex flex-row items-center animate__animated animate__fadeInDown animate__fast\">\n          <span className=\"font-bold w-24 truncate text-blue-600 flex flex-row items-center gap-2\">\n            {item.value}\n          </span>\n          <input \n            key={i + 1}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              let check = props.questionItems.find(itm => itm.language === item.key);\n              if (check === undefined) {\n                check = props.questionItems[0];\n              }\n              props.handleUpdateQuestionDetails({\n                description: check.description,\n                language: check.language,\n                status: check.status,\n                title: e.target.value,\n                answer: check.answer\n              })\n            }}\n            value={props.questionItems.find(itm => itm.language === item.key)?.title}\n            type=\"text\" className=\"input-gray-lg w-full mt-3\" />\n        </div>\n      ))}\n    </div>\n  )} else if (props.selectedKey === SelectedKeysEdit.Description) {\n    return (\n      <div>\n        {props.languages.map((item, i) => (\n          <div className=\"flex flex-row items-center animate__animated animate__fadeInDown animate__fast\">\n            <span className=\"font-bold w-24 truncate text-blue-600 flex flex-row items-center gap-2\">\n              {item.value}\n            </span>\n            <textarea \n              key={i + 1}\n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n                let check = props.questionItems.find(itm => itm.language === item.key);\n                if (check === undefined) {\n                  check = props.questionItems[0];\n                }\n                props.handleUpdateQuestionDetails({\n                  description: e.target.value,\n                  language: check.language,\n                  status: check.status,\n                  title: check.title,\n                  answer: check.answer\n                })\n              }}\n              value={props.questionItems.find(itm => itm.language === item.key)?.description}\n              className=\"input-gray-lg w-full mt-3\"></textarea>\n          </div>\n        ))}\n      </div>\n    )} else {\n      return <div></div>\n    }\n}\n\nexport default HandleInput\n","import React from 'react'\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im'\nimport { course } from '../../../../../interfaces'\n\ninterface QuestionChaptersProps {\n  selectedCourse: course | null | undefined;\n  addedChapters: string[];\n  setAddChapter: (chapter: string) => void;\n}\n\nconst QuestionChapters = (props: QuestionChaptersProps) => {\n  if (props.selectedCourse === undefined || props.selectedCourse === null) {\n    return (\n      <div>\n        <div className=\"text-6xl text-center text-red-800 font-bold rounded bg-red-100 px-3 py-4\">\n          Invalid course selected!\n        </div>\n      </div>\n    )\n  }\n  else if (props.selectedCourse !== undefined && props.selectedCourse !== null && props.selectedCourse.chapters?.length === 0) {\n    return (\n      <div>\n        <div className=\"text-3xl text-center text-yellow-800 font-bold rounded bg-yellow-100 px-3 py-4\">\n          No chapter available for this course!\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"px-2 pb-2\">\n        <div className=\"text-sm text-gray-500 font-bold\">Selected course</div>\n        <div className=\"bg-blue-50 text-blue-600 font-bold rounded px-3 py-2\">\n          {props.selectedCourse.course_code} - {props.selectedCourse.course_name}\n        </div>\n        <div className=\"flex flex-col gap-2 mt-3\">\n          {props.selectedCourse.chapters !== undefined && props.selectedCourse.chapters.length === 0 ? \n          <div>No chapters found!</div>:\n          props.selectedCourse.chapters && props.selectedCourse.chapters.map((item, i) => (\n            <div \n            onClick={() => props.setAddChapter(item.id)}\n            className={`${props.addedChapters.find(itm => itm === item.id) ? \"text-blue-600\" : \"text-gray-600\"} border rounded px-2 py-2 flex flex-row items-center gap-3 hover:border-blue-500 hover:bg-blue-50 hover:text-blue-600 cursor-pointer`}>\n              {props.addedChapters.find(itm => itm === item.id) ? \n              <ImCheckboxChecked className=\"text-2xl cursor-pointer\" /> :\n              <ImCheckboxUnchecked className=\"text-2xl cursor-pointer\" />}\n              <span>{item.name}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default QuestionChapters\n","import { ExamResultsDetails } from \"../interfaces/exam\";\nimport { PositionAPICourse } from \"../interfaces/position\";\nimport { questionType, questionTypeElements, questionTypeElementsType } from \"../interfaces/question\";\n\nexport const getQuestionType = (question_types: questionType[] | null, type_id: string) => {\n  let type: questionTypeElementsType | null = null;\n  if (question_types !== null) {\n    let check = question_types.find(itm => itm.id === type_id);\n    if (check !== undefined) {\n      let check_type = questionTypeElements.find(itm => check && itm.key === check.element);\n      if (check_type !== undefined) {\n        type = check_type.key\n      }\n    }\n  }\n  return type;\n}\n\nexport const findTotalMarks = (courses: PositionAPICourse[], results: ExamResultsDetails[] | null) => {\n  if (results !== null) {\n    let sum: number = 0;\n    for (let course of courses) {\n      let test = results.find(itm => itm.course === course.course_id);\n      if (test !== undefined) {\n        sum = sum + test.user_total_marks;\n      }\n    }\n    return sum.toFixed(2)\n  } else {\n    return \"Wait...\"\n  }\n}\n\nexport const CheckIfExamDone = (courses: PositionAPICourse[], results: ExamResultsDetails[] | null) => {\n  let res: boolean = false;\n  if (results !== null) {\n    for (let course of courses) {\n      let test = results.find(itm => itm.course === course.course_id);\n      if (test !== undefined) {\n        res = true;\n      }\n    }\n  }\n  return res;\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;"],"sourceRoot":""}
{"version":3,"sources":["components/Table/Table.tsx","actions/users.ts","components/Navigation/SideNavigation.tsx","actions/document.ts","interfaces/application.ts","actions/settings.ts","actions/claiming.ts","shared/interfaces.tsx","containers/Claimings/Admin/AdminClaimAppView.tsx","containers/Claimings/Admin/AdminClaimDocView.tsx","containers/Claimings/Admin/index.tsx","containers/Positions/ViewRequirements.tsx","containers/AdminDashboard/ChartComponents/VBarChart.tsx","containers/Claimings/ClaimDocView.tsx","containers/Claimings/Candidate/ApplicationFormView.tsx","containers/AdminDashboard/ChartComponents/PieChart.tsx","containers/Claimings/ClaimHeaderTitle.tsx","containers/Claimings/Admin/AdminFilterByType.tsx","containers/Claimings/Candidate/DocFormView.tsx","containers/Claimings/Candidate/FormApplicationList.tsx","containers/Claimings/Candidate/FormDocumentList.tsx","containers/Claimings/Candidate/ClaimForm.tsx","containers/AdminDashboard/DashboardLabelItem.tsx","containers/Claimings/Candidate/FilterByType.tsx","containers/Claimings/ClaimApplView.tsx","containers/Claimings/Candidate/index.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardLabels.tsx","containers/AdminDashboard/ClaimDashboard/AllClaimChart.tsx","containers/AdminDashboard/ClaimDashboard/ClaimDashBoardTitle.tsx","containers/AdminDashboard/ClaimDashboard/ClaimDashboard.tsx"],"names":["Table","table","tr","rows","columns","hideColumns","pagination","search","tableSize","tableClass","tableId","rounded","searchBG","thColor","loading","length","result","characters","charactersLength","i","charAt","Math","floor","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","map","style","display","className","type","placeholder","onChange","e","data","filterType","filter","td","cols","toLowerCase","textContent","innerText","indexOf","filterTable","target","value","disabled","Number","id","column","index","padding","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","documentValidationStatus","fetchUserAccess","dispatch","a","setAxiosToken","axios","get","API","AUTH","res","console","log","users_response","ActionTypes","FETCH_USERS_ACCESS","payload","error","user_error","blockUserToSystem","BLOCK_USER_TO_SYSTEM","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","verifyAllDocument","VERIFY_ALL_DOCUMENT","_SideNavigation","props","componentDidMount","PageHasSubNav","componentWillUnmount","state","this","auth","isAuthenticated","navActive","system","navigation","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","SubItemContainer","SubItem","getDocumentCategory","docCategory","GET_DOCUMENT_CATEGORY","doc_category_error","createDocumentCategory","CREATE_DOCUMENT_CATEGORY","updateDocumentCategory","UPDATE_DOCUMENT_CATEGORY","deleteDocumentCategory","DELETE_DOCUMENT_CATEGORY","getDocumentSubCategory","docSubCategory","GET_DOCUMENT_SUB_CATEGORY","doc_SUB_category_error","createDocumentSubCategory","CREATE_DOCUMENT_SUB_CATEGORY","updateDocumentSubCategory","UPDATE_DOCUMENT_SUB_CATEGORY","deleteDocumentSubCategory","DELETE_DOCUMENT_SUB_CATEGORY","getDocumentFields","docFields","GET_DOCUMENT_FIELDS","createDocumentFields","CREATE_DOCUMENT_FIELDS","updateDocumentFields","reducer","UPDATE_DOCUMENT_FIELDS","deleteDocumentFields","DELETE_DOCUMENT_FIELDS","getCandidatesInInstitute","educatin_type_id","callback","url","APPLICATION","newArray","element","undefined","GET_CANDIDATE_IN_INSTITUTE","errorToText","verifyDocument","action_verify","VERIFY_DOCUMENT","ApplicationStatus","ApplicationStates","ApplicationStatesDescription","key","Initiated","caption","Failed","Incomplete","Pending","Placed","Rejected","Shortlisted","Pass","getSystemSettings","GET_SYSTEM_SETTINGS","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","getApplicationSessions","GET_APPLICATION_SESSIONS","createAplicationSession","CREATE_APPLICATION_SESSIONS","updateAplicationSession","check","UPDATE_APPLICATION_SESSIONS","disableApplicationSession","DISABLE_APPLICATION_SESSION","getPositions","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","GetClaimingTypes","CLAIMING","claimtYPES","claim_types","status","GET_CLAIMING_TYPES","setSelectedClaimType","thisType","SELECT_CLAIM_TYPE","createClaim","CREATE_CLAIM","createReClaim","RE_CLAIM","evaluateClaim","EVALUATE_CLAIM","getMyClaims","user_id","period_id","order","sortBy","post","user","api_claim","GET_MY_CLAIMS","getMyRejectedApplications","claimPersonalApplication","application","GET_CANDIDATES_APPLICATIONS","getMyRejectedDocuments","claimPersonalDocuments","details","dataRejected","validation_status","push","claimPersonalDocumentDetails","GET_CANDIDATES_DOCUMENTS","getAllClaims","claim_level","GET_ALL_CLAIMS","getAllApplications","GET_ALL_APPLICATION","PostRequestStatusInterface","DocumentAttributesInterface","DocValidationStatusInterface","FC_AdminApplicationPositionDistinctCategory","thisPosition","documentCategories","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","requirements","req","thisRequirements","thisCategory","documentCategory","find","item","user_detail_category_id","category","thisSubCategory","documentSubCategory","user_detail_subcategory_id","subcategory","category_id","field","thisField","documentFields","_id","position_requirement","required","category_title","subcategory_id","subcategory_title","field_title","field_id","includes","reAssessApplication","PushPopupAlert","viewPosition","setViewPosition","loadingRequest","setLoadingRequest","actionTaken","setActionTaken","formError","setFormError","responseMsg","setResponseMsg","handleVerify","msg","isEmptyOrSpaces","subClaim","thisClaim","claims","level","api_body","sub_claim_id","evaluation_comment","evaluated_by","decision_taken_status","put","evaluate_claim_res","ClaimDecisionStatus","ACCEPTED","overrideDecision","theme","PopupAlertTheme","success","danger","patch","claiming_on_id","comment","application_status","application_id","getPositionById","position_id","systemPositions","showEvaluator","userList","thisApplication","position","position_title","previous","capitalizeFirstLetter","override_by","DATE","createdAt","reason","description","school_level_id","school_level_name","education_institute_id","education_category_title","courses","course_name","course_code","course_id","NoResult","NoResultThemes","Dark","ViewRequirements","claim","showDate","timestampToDate","date_created","timeFR","isClaimEvaluated","REJECTED","toLocaleLowerCase","getUserDocuments","user_info","fname","lname","last_claim_status","ClaimStatus","PENDING","resize","window","confirm","loadingImage","setLoadingImage","FC_DocValidation","doc_id","APPROVED","validated_by","api_redux","date","FC_shortListing","candidate_id","candidateId","setViewImage","viewImage","adminDisplayClaimTitle","claimTypes","thisDoc","commet","src","AUTH_FILES","files","alt","onLoad","event","DELETED","thisUser","candidateDocuments","thisClaimType","whichClaimType","ClaimTypesInterface","DOCUMENT","AdminClaimGetDocTitle","main","doc","DocCategory","DocSubCategory","DocField","DocTitle","sub_category_id","c","category_subcategory_data","sub_category","getApplicationById","allApplications","AdminClaim","system_settings","claiming","users","application_sessions","applicationSessions","documentReducer","thisPeriod","setThisPeriod","setLoading","loadingSession","setLoadingSession","periodChanged","setPeriodChanged","loadingPosition","setLoadingPosition","loadingApplications","setLoadingApplications","loadingClaims","setLoadingClaims","loadingDocuments","setLoadingDocuments","loadingClarifications","setLoadingClarifications","loadingUsers","setLoadingUsers","loadingFields","setLoadingFields","viewClaim","setViewClaim","claimId","setClaimId","claimType","setClaimType","setCandidateId","thisSession","is_active","allClaims","application_session_id","displayClaimName","displayClaimTitle","AdminFilterByType","ClaimHeaderTitle","headerTitle","selectedClaimType","PLACEMENT","onPeriodChange","filterClaimsByClaimType","Light","whichClaimStatus","classes","getClaimById","colSpan","defaultBar","borderRadius","horizontal","columnWidth","endingShape","VBarChart","chart","events","dataPointSelection","chartContext","config","labelClicked","w","labels","dataPointIndex","FC_LoadSelected","seriesIndex","stacked","plotOptions","bar","dataLabels","enabled","xaxis","rotate","categories","categoriesLabel","tickPlacement","yaxis","text","yaxisText","fill","opacity","tooltip","formatter","val","tooltipText","grid","left","right","noData","align","verticalAlign","options","setOptions","colors","chartClicked","zoom","autoScaleYaxis","series","width","height","chartHeight","isReclaimAllowed","_thisClaim","claim_status","EVALUATED","handleSubmit","reClaimingMsg","warning","setReClaimingMsg","setReClaiming","ClaimGetDocTitle","reClaiming","FC_ApplicationPositionDistinctCategory","category_subcategory_data_id","setChooseClaimFile","setClaimFileId","setViewThisFile","PieChart","isLoading","sessions","selectPeriod","session","application_session_name","claimList","claim_type","loadingClaimTypes","setLoadingClaimTypes","countClaims","Fragment","Loading","getRejectedApplicants","applicationData","FormApplicationList","objList","searchInput","setSearchInput","candidateApplications","isClaimAllowed","myClaims","activeSession","product","flag","prop","toString","DocumentTitleData","documentData","documentTemp","company","email","end_year","names","phone_number","school","school_id","start_year","year","doc_title","getRejectedDocuments","rejected","FormDocumentList","viewThisFile","category_subcategory_Data_id","allClaim","claimOnId","loadingForm","setLoadingForm","setThisClaimType","thisClaimTypeId","setThisClaimTypeId","claimComment","setClaimComment","claimFileId","chooseClaimFile","formType","setFormType","alertError","setAlertError","setActiveSession","file_id","_isDocumentIdValid","alert","info","isDocumentIdValid","setFormState","_isApplicationIdValid","app_id","app","isApplicationIdValid","getDocumentById","documents","applications","getValidation","thisId","old_reason","old_status","old_evaluated_by","preventDefault","cleanToClose","formState","Modal","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","extraLarge","medium","body","footer","onSubmit","selectClaimType","ApplicationFormView","DashboardLabelItem","FaUsers","iconColor","countOver","toAnyDigit","loadingRejectedApplications","setLoadingRejectedApplications","loadingRejectedDocuments","setLoadingRejectedDocuments","COMPLETED","document_id","claim_id","displayDocClaimTitle","CandidateClaim","claimForm","setClaimForm","thisCLaim","handleDelete","ClaimApplView","ClaimForm","ExamDashboardLabels","numCols","labelsOnRow","childrenPosition","AllClaimChart","FC_GetAllClaimChartData","acceptedArray","rejectedArray","activeArray","labelArray","typeKey","ClaimTypes","accepted","pending","name","ClaimDashBoardTitle","reportTitle","education_categories","allEducation","loadingEducation","thisEducation","setThisEducation","education","ClaimDashboard","schoolLevels","loadEducationCategories","loadingInstitutes","setLoadingInstitutes","thisLabel","setThisLabel","getClaimInstitute","claimsTypes","output","all","decision","itm","FC_ClaimData","arrayNew","n","Object","prototype","hasOwnProperty","call","keyClaim","dataArray","gender","sex","national_id","n_id","phone","education_category","claim_session","claim_title","getClaimDataByTitle","allData","FaBookOpen","legend","show","horizontalAlign","fontSize","itemMargin","vertical","pie","donut","color","offsetY","fontFamily","total","label","globals","seriesTotals","reduce","b"],"mappings":"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","file":"static/js/25.3b941a0d.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = ({\n  rows,\n  columns,\n  hideColumns = false,\n  pagination = false,\n  search = false,\n  tableSize = \"w-full\",\n  tableClass,\n  tableId = \"myTable\",\n  rounded = false,\n  searchBG = \"bg-gray-200\",\n  thColor = \"blue\",\n  loading = false,\n}) => {\n  const startPage = 1;\n  tableId = tableId === \"myTable\" ? FC_makeID() : tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${tableSize}`}>\n      {/* search box  */}\n      {search && (\n        <div className={`${searchBG} w-full mb-2`}>\n          {search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={loading}\n              />\n\n              {pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <table\n        className={\n          tableClass\n            ? tableClass\n            : `w-full shadow ${\n                rounded && \"sm:rounded-lg\"\n              } table-auto order-table max-w-full`\n        }\n        id={tableId}\n      >\n        {!hideColumns && (\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n            <tr\n              className={`text-left tracking-wide bg-${thColor}-100 border-b-2 border-${thColor}-500 text-${thColor}-600 overflow-hidden`}\n            >\n              {columns.map((column, index) => (\n                <th\n                  key={index}\n                  className={`${column.padding} text-${\n                    column.alignText\n                  } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                  onClick={() =>\n                    column.isSortAllowed && sortThisColumn(tableId, index)\n                  }\n                >\n                  <div className=\"flex items-center gap-1\">\n                    {column.columnTitle}\n                    {column.isSortAllowed && <BiSort />}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n        )}\n        <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n          {rows()}\n        </tbody>\n      </table>\n      {pagination && (\n        <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n          <div>\n            <span className=\"text-xs xs:text-sm text-gray-900\">\n              Showing 1 to {pageSize} of {totalItems - 1} Entries\n            </span>\n          </div>\n          <div>\n            <nav className=\"inline-flex shadow-sm\">\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                    currentPage !== 1 && \"bg-white\"\n                  }`}\n                  aria-label=\"Previous\"\n                  disabled={currentPage === 1 || loading}\n                  onClick={() => setCurrentPage(currentPage - 1)}\n                >\n                  <MdNavigateBefore className=\"h-5 w-5\" />\n                </button>\n              </div>\n              <div>\n                {pages &&\n                  pages.map((page, pageIndex) => (\n                    <button\n                      key={pageIndex}\n                      className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                        page !== currentPage\n                          ? \"bg-white\"\n                          : \"bg-gray-100 cursor-default\"\n                      }`}\n                      disabled={page === currentPage || loading}\n                      onClick={() => setCurrentPage(page)}\n                    >\n                      {page}\n                    </button>\n                  ))}\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                    currentPage !== totalPages && \"bg-white\"\n                  }`}\n                  aria-label=\"Next\"\n                  disabled={currentPage === totalPages || loading}\n                  onClick={() => setCurrentPage(currentPage + 1)}\n                >\n                  <MdNavigateNext className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </nav>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\ninterface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserInterface[];\n}\n\ninterface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: string;\n}\n\ninterface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: AssignRoleToUserActionInterface;\n}\n\ninterface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: CustomeAccessInterface;\n}\n\ninterface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: string;\n}\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n}\n\ninterface VerifyAllDocumentAction {\n  type: ActionTypes.VERIFY_ALL_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction\n  | VerifyAllDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const fetchUserAccess = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface[]>(`${API.AUTH}/users`);\n      console.log({ users_response: res });\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.error({ user_error: error });\n    }\n  };\n};\n\nexport const blockUserToSystem = (data: string) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface\n) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: data,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const customizeUserAccess = (data: CustomeAccessInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const verifyAllDocument = (data: VerifyDocumentInterface) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyAllDocumentAction>({\n      type: ActionTypes.VERIFY_ALL_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  CandidatesInterface,\n  DocumentCategoryInterface,\n  DocumentFieldsInterface,\n  DocumentSubCategoryInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { VerifyDocumentInterface } from \"./users\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CATEGORY\nexport interface GetDocumentCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface[];\n}\n\nexport interface CreateDocumentCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface UpdateDocumentCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface DeleteDocumentCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_CATEGORY;\n  payload: string;\n}\n\n// SUB CATEGORY\nexport interface GetDocumentSubCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface[];\n}\n\nexport interface CreateDocumentSubCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface UpdateDocumentSubCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface DeleteDocumentSubCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY;\n  payload: string;\n}\n\n// FIELDS\nexport interface GetDocumentFieldsAction {\n  type: ActionTypes.GET_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface[];\n}\n\nexport interface CreateDocumentFieldsAction {\n  type: ActionTypes.CREATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface UpdateDocumentFieldsAction {\n  type: ActionTypes.UPDATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface DeleteDocumentFieldsAction {\n  type: ActionTypes.DELETE_DOCUMENT_FIELDS;\n  payload: string;\n}\n\n// DOCUMENT CHECKING\nexport interface GetCandidatesInInstituteAtion {\n  type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE;\n  payload: CandidatesInterface[];\n}\n\ninterface VerifyDocumentAction {\n  type: ActionTypes.VERIFY_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type DocumentCategoryActionType =\n  | GetDocumentCategoryAction\n  | CreateDocumentCategoryAction\n  | UpdateDocumentCategoryAction\n  | DeleteDocumentCategoryAction\n  | GetDocumentSubCategoryAction\n  | CreateDocumentSubCategoryAction\n  | UpdateDocumentSubCategoryAction\n  | DeleteDocumentSubCategoryAction\n  | GetDocumentFieldsAction\n  | CreateDocumentFieldsAction\n  | UpdateDocumentFieldsAction\n  | DeleteDocumentFieldsAction\n  | GetCandidatesInInstituteAtion\n  | VerifyDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CATEGORY\n\nexport const getDocumentCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get(`${API.AUTH}/detailcategory`);\n      console.log({ docCategory: res });\n      dispatch<GetDocumentCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_CATEGORY,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.log({ doc_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// SUB CATEGORY\nexport const getDocumentSubCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentSubCategoryInterface[]>(\n        `${API.AUTH}/detailsubcategory`\n      );\n      console.log({ docSubCategory: res });\n      dispatch<GetDocumentSubCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentSubCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentSubCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentSubCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentSubCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// FIELDS\nexport const getDocumentFields = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentFieldsInterface[]>(\n        `${API.AUTH}/categorysubcatedata`\n      );\n      console.log({ docFields: res });\n      dispatch<GetDocumentFieldsAction>({\n        type: ActionTypes.GET_DOCUMENT_FIELDS,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentFields = (data: DocumentFieldsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentFieldsAction>({\n      type: ActionTypes.CREATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentFields = (data: DocumentFieldsInterface) => {\n  console.log({ reducer: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentFieldsAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentFields = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentFieldsAction>({\n      type: ActionTypes.DELETE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\n// CANDIDATE IN EDUCATION CATEGORY\nexport const getCandidatesInInstitute = (\n  educatin_type_id: string,\n  callback: Function\n) => {\n  console.log({\n    url: `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}`,\n  });\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<CandidatesInterface[]>(\n        `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}`\n      );\n      const newArray: CandidatesInterface[] = res.data.filter((element) => {\n        return element !== null && element !== undefined;\n      });\n      console.log({ getCandidatesInInstitute: res, newArray });\n      dispatch<GetCandidatesInInstituteAtion>({\n        type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE,\n        payload: newArray,\n        // payload: response.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ getCandidatesInInstitute: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const verifyDocument = (data: VerifyDocumentInterface) => {\n  console.log({ action_verify: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyDocumentAction>({\n      type: ActionTypes.VERIFY_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import { LocationTableInterface } from \"../containers/Application/ExamCenter/ChooseExamCenter\";\nimport { PositionAPI } from \"./position\";\n\nexport enum ApplicationStatus {\n  Pending = \"Pending\",\n  Accepted = \"Accepted\",\n  Rejected = \"Rejected\",\n}\n\nexport interface application_exam {\n  courseId: string;\n  courseName: string;\n  courseCode: string;\n  location: LocationTableInterface;\n}\n\nexport interface applicationExamAPI {\n  district_id: string;\n  center_id: string;\n  center_name: string;\n  course_id: string;\n  course_name: string;\n  proctoring_type: string;\n  room_id: string;\n  room_number: number;\n}\n\nexport interface ApplicationInterface {\n  application_id: string;\n  application_date: Date;\n  application_period: string;\n  application_status: ApplicationStatus;\n  application_position_id: string;\n  application_position: PositionAPI;\n  exams: application_exam[];\n}\n\nexport interface ApplicationSession {\n  application_end_date: string;\n  application_session_id: string;\n  application_session_name: string;\n  application_start_date: string;\n  createdAt: string;\n  is_active: boolean;\n  period: string;\n}\n\nexport interface applicationHistory {\n  application_status: ApplicationStates | string;\n  comment: string;\n  date: string;\n  user_id: string;\n}\n\nexport interface NoRoomsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  district_id: string;\n  message: string;\n}\n\nexport interface GetApplicationResponse {\n  message: string;\n  application_id: string;\n  noRooms: NoRoomsInterface[];\n}\n\nexport interface GetApplicationsAPI {\n  application_id: string;\n  application_period: string;\n  createdAt: string;\n  exams: applicationExamAPI[];\n  position: PositionAPI;\n  application_status: string;\n  updatedAt: string;\n  user_id: string;\n  application_history: applicationHistory[];\n  application_session: ApplicationSession;\n  override_by: {\n    application_status: string;\n    comment: string;\n    date: string;\n    user_id: string;\n  };\n}\n\nexport enum ApplicationStates {\n  // When the application has been created, but the\n  // Not confirmed\n  Initiated = \"initiated\",\n\n  // When there is missing info like location\n  Incomplete = \"incomplete\",\n\n  // When requirement are not filled up to short listing\n  Rejected = \"rejected\",\n\n  // When docs wait for validation\n  Pending = \"pending\",\n\n  // application match with position requiments\n  Shortlisted = \"shortlisted\",\n\n  // Finishing all position exams\n  Pass = \"pass\",\n\n  // Failed exams\n  Failed = \"failed\",\n\n  // When got placed\n  Placed = \"placed\",\n}\n\nexport const ApplicationStatesDescription: {\n  key: ApplicationStates;\n  caption: string;\n}[] = [\n  { key: ApplicationStates.Initiated, caption: \"Initiated\" },\n  { key: ApplicationStates.Failed, caption: \"Failed\" },\n  { key: ApplicationStates.Incomplete, caption: \"Incomplete\" },\n  { key: ApplicationStates.Pending, caption: \"Pending\" },\n  { key: ApplicationStates.Placed, caption: \"Placed\" },\n  { key: ApplicationStates.Rejected, caption: \"Rejected\" },\n  { key: ApplicationStates.Shortlisted, caption: \"Shortlisted\" },\n  { key: ApplicationStates.Pass, caption: \"Passed\" },\n];\n\nexport interface ApplicationPeriodGet {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface AdminApplicationsList {\n  exams: {\n    course_id: string;\n    proctoring_type: string;\n    center_id: string;\n    room_id: string;\n    center_name: string;\n    course_name: string;\n    room_number: string;\n  }[];\n  application_status: ApplicationStates;\n  application_history: applicationHistory[];\n  is_deleted: boolean;\n  user_id: string;\n  position: PositionAPI;\n  application_session: ApplicationSession;\n  createdAt: string;\n  updatedAt: string;\n  application_id: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: string;\n  district: string;\n}\n\nexport const getStatusColor = (status: ApplicationStates) => {\n  switch (status) {\n    case ApplicationStates.Initiated:\n      return \"blue\";\n\n    default:\n      return \"gray\";\n  }\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  ApplicationSessionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// APPLICATION SETTINGS ===================================\nexport interface GetApplicationSessionAction {\n  type: ActionTypes.GET_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface[];\n}\n\nexport interface CreateApplicationSessionAction {\n  type: ActionTypes.CREATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface UpdateApplicationSessionAction {\n  type: ActionTypes.UPDATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface DisableApplicationSessionAction {\n  type: ActionTypes.DISABLE_APPLICATION_SESSION;\n  payload: {\n    application_session_id: string;\n    status: boolean;\n  };\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetApplicationSessionAction\n  | CreateApplicationSessionAction\n  | UpdateApplicationSessionAction\n  | DisableApplicationSessionAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ PERIODS =======================\n\nexport const getApplicationSessions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<ApplicationSessionInterface[]>(\n        `${API.APPLICATION}/applicationsesion`\n      );\n      dispatch<GetApplicationSessionAction>({\n        type: ActionTypes.GET_APPLICATION_SESSIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createAplicationSession = (data: ApplicationSessionInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateApplicationSessionAction>({\n      type: ActionTypes.CREATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateAplicationSession = (data: ApplicationSessionInterface) => {\n  console.log({ check: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateApplicationSessionAction>({\n      type: ActionTypes.UPDATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const disableApplicationSession = (data: {\n  application_session_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableApplicationSessionAction>({\n      type: ActionTypes.DISABLE_APPLICATION_SESSION,\n      payload: data,\n    });\n  };\n};\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { CategorySubcategoryData } from \"../interfaces/candidatesInterfaces\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimTypesInterfaceAPI,\n} from \"../interfaces\";\n\nexport interface DocumentClaimUser {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CANDIDATE_APPLICATIONS\nexport interface GetCandidateApplicationsAction {\n  type: ActionTypes.GET_CANDIDATES_APPLICATIONS;\n  payload: claimApplicationsInterface[];\n}\n\n// CREATE PERSONAL CLAIM\nexport interface CreateClaimAction {\n  type: ActionTypes.CREATE_CLAIM;\n  payload: CandidateClaimInterface;\n}\n\n// EVALUATE CANDIDATE CLAIM\nexport interface EvaluateClaimAction {\n  type: ActionTypes.EVALUATE_CLAIM;\n  payload: CandidateClaimInterface;\n}\n\n// CREATE PERSONAL CLAIM\nexport interface CreateReClaimAction {\n  type: ActionTypes.RE_CLAIM;\n  payload: CandidateClaimInterface;\n}\n\n// CANDIDATE_DOCUMENTS\nexport interface GetCandidateDocumentsAction {\n  type: ActionTypes.GET_CANDIDATES_DOCUMENTS;\n  payload: DocumentClaimUser[];\n}\n\n// CLAIM TYPES =====================================\nexport interface GetClaimingTypesAction {\n  type: ActionTypes.GET_CLAIMING_TYPES;\n  payload: ClaimTypesInterfaceAPI[];\n}\n\n// SET CLAIM TYPE =====================================\nexport interface setSelectedClaimTypeActions {\n  type: ActionTypes.SELECT_CLAIM_TYPE;\n  payload: ClaimTypesInterfaceAPI | \"all\";\n}\n\n// MY PERSONAL CLAIMS\nexport interface GetMyClaimsAction {\n  type: ActionTypes.GET_MY_CLAIMS;\n  payload: CandidateClaimInterface[];\n}\n\n// ALL CANDIDATES CLAIMS\nexport interface GetAllClaimsAction {\n  type: ActionTypes.GET_ALL_CLAIMS;\n  payload: CandidateClaimInterface[];\n}\n\n// GET ALL APPLICATIONS BY PERIOD\nexport interface GetAllApplicationsAction {\n  type: ActionTypes.GET_ALL_APPLICATION;\n  payload: allClaimApplicationInterface[];\n}\n\nexport type ClaimingActionType =\n  | GetCandidateApplicationsAction\n  | GetCandidateDocumentsAction\n  | GetClaimingTypesAction\n  | setSelectedClaimTypeActions\n  | CreateClaimAction\n  | GetMyClaimsAction\n  | GetAllClaimsAction\n  | EvaluateClaimAction\n  | CreateReClaimAction\n  | GetAllApplicationsAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CLAIM TYPES ==========================\nexport const GetClaimingTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<ClaimTypesInterfaceAPI[]>(\n        `${API.CLAIMING}/claim-type`\n      );\n      console.log({ claimtYPES: res.data });\n      let claim_types: ClaimTypesInterfaceAPI[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          claim_types = res.data;\n        }\n      }\n      dispatch<GetClaimingTypesAction>({\n        type: ActionTypes.GET_CLAIMING_TYPES,\n        payload: claim_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// SELECT CLAIM TYPES ==========================\nexport const setSelectedClaimType = (\n  thisType: ClaimTypesInterfaceAPI | \"all\"\n): setSelectedClaimTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_CLAIM_TYPE,\n    payload: thisType,\n  };\n};\n\n// CREATE PERSONAL CLAIM\nexport const createClaim = (data: CandidateClaimInterface) => {\n  return {\n    type: ActionTypes.CREATE_CLAIM,\n    payload: data,\n  };\n};\n\n// CREATE PERSONAL RECLAIM\nexport const createReClaim = (data: CandidateClaimInterface) => {\n  return {\n    type: ActionTypes.RE_CLAIM,\n    payload: data,\n  };\n};\n\n// EVALUATE CANDIDATE CLAIM\nexport const evaluateClaim = (data: CandidateClaimInterface) => {\n  return {\n    type: ActionTypes.EVALUATE_CLAIM,\n    payload: data,\n  };\n};\n\n// MY PERSONAL CLAIMS\nexport const getMyClaims = (\n  user_id: string,\n  period_id: string,\n  callback: Function,\n  order: \"desc\" | \"asc\" = \"desc\",\n  sortBy: \"createdAt\" | \"last_claim_status\" = \"createdAt\"\n) => {\n  console.log({ user_id, period_id });\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface[]>(\n        `${API.CLAIMING}/user`,\n        {\n          order,\n          sortBy,\n          filter: {\n            user: user_id,\n            period_id,\n          },\n        }\n      );\n      console.log({ api_claim: res.data });\n\n      dispatch<GetMyClaimsAction>({\n        type: ActionTypes.GET_MY_CLAIMS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error(error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// PERSONAL APPLICATION\nexport const getMyRejectedApplications = (\n  user_id: string,\n  callback: Function\n) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<claimApplicationsInterface[]>(\n        `${API.APPLICATION}/application/${user_id}`\n      );\n      console.log({ claimPersonalApplication: res.data });\n      let application: claimApplicationsInterface[] = res.data;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      //   if (res.data !== null && res.data.length > 0) {\n      //     let dataRejected: claimApplicationsInterface[] = [];\n      //     for (const key in res.data) {\n      //       if (res.data[key].application_status === \"rejected\") {\n      //         dataRejected.push(res.data[key]);\n      //       }\n      //     }\n      //     application = dataRejected;\n      //   }\n      // }\n      dispatch<GetCandidateApplicationsAction>({\n        type: ActionTypes.GET_CANDIDATES_APPLICATIONS,\n        payload: application,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error(error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// PERSONAL APPLICATION\nexport const getMyRejectedDocuments = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<{\n        n_id: string;\n        fname: string;\n        lname: string;\n        district: string;\n        phone_number: string;\n        email: string;\n        details: DocumentClaimUser[];\n      }>(`${API.AUTH}/currentdet`);\n      console.log({ claimPersonalDocuments: res.data });\n      let details: DocumentClaimUser[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.details.length > 0) {\n          let dataRejected: DocumentClaimUser[] = [];\n          for (const key in res.data.details) {\n            if (res.data.details[key].validation_status !== \"waiting\") {\n              dataRejected.push(res.data.details[key]);\n            }\n          }\n          details = dataRejected;\n        }\n      }\n      console.log({ claimPersonalDocumentDetails: details });\n\n      dispatch<GetCandidateDocumentsAction>({\n        type: ActionTypes.GET_CANDIDATES_DOCUMENTS,\n        payload: details,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error(error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL CLAIM\nexport const getAllClaims = (\n  claim_level: number,\n  period_id: string,\n  callback: Function,\n  order: \"desc\" | \"asc\" = \"desc\",\n  sortBy: \"createdAt\" | \"last_claim_status\" = \"createdAt\"\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface[]>(\n        `${API.CLAIMING}/user`,\n        {\n          order,\n          sortBy,\n          filter: {\n            claim_level: 2,\n            period_id,\n          },\n        }\n      );\n      console.log({ api_claim: res.data });\n\n      dispatch<GetAllClaimsAction>({\n        type: ActionTypes.GET_ALL_CLAIMS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error(error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getAllApplications = (period_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<allClaimApplicationInterface[]>(\n        `${API.APPLICATION}/applicationbyperiod/${period_id}`\n      );\n      console.log({ api_claim: res.data });\n\n      dispatch<GetAllApplicationsAction>({\n        type: ActionTypes.GET_ALL_APPLICATION,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error(error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import { ApplicationStates } from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active?: boolean;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: string;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  examination_center_room_id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  examination_center_id: string;\n  center_name: string;\n}\n\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  district_name: string;\n  district_id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  requested_post_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  district_id: string;\n  education_category_id: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\n// export interface DistrictInterface {\n//   centers: string[];\n//   district_name: string;\n//   district_id: string;\n// }\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: string;\n  application_status: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  district: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\n// [\n//   {\n//     user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n//     user_detail_subcategory_id: \"60fc48e8f485d8dd91ed3220\",\n//     position_requirement: [\n//       {\n//         category_subcategory_data_id: \"61277ec70ea9aba1b3661643\",\n//         required: true,\n//       },\n//     ],\n//     required: true,\n//   },\n// ];\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { getUserDocuments } from \".\";\nimport { Auth, PushPopupAlert, reAssessApplication } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  PositionAPI,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { DATE, showDate, timestampToDate } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\nimport { showEvaluator } from \"../Candidate/ApplicationFormView\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\nexport const FC_AdminApplicationPositionDistinctCategory = (\n  thisPosition: PositionAPI,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.position_requirement[field]._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.position_requirement[field]._id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\ntype AdminClaimAppViewProps = {\n  thisApplication: allClaimApplicationInterface;\n  thisPosition: PositionAPI;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  userList: UserInterface[];\n  claimTypes: ClaimTypesInterfaceAPI[];\n  systemPositions: PositionAPI[];\n\n  // REDUX ==================\n  auth: Auth;\n  reAssessApplication: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimAppView: React.FC<AdminClaimAppViewProps> = (props) => {\n  const [viewPosition, setViewPosition] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: {\n        sub_claim_id: string;\n        evaluation_comment: string;\n        evaluated_by: string;\n        decision_taken_status: ClaimDecisionStatus;\n      } = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim.id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await overrideDecision();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const overrideDecision = async () => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/tolerateappl/${props.thisClaim.claiming_on_id}`,\n        {\n          user_id: props.auth.user.user_id,\n          comment: responseMsg,\n          application_status: ApplicationStates.Shortlisted,\n        }\n      );\n\n      res.data &&\n        props.reAssessApplication({\n          application_id: props.thisClaim.claiming_on_id,\n          application_status: ApplicationStates.Shortlisted,\n        });\n    } catch (error) {\n      console.error({ code_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      // errorToText(error);\n    }\n    setLoadingRequest(false);\n  };\n\n  const getPositionById = (position_id: string): PositionAPI | undefined => {\n    let result = props.systemPositions.find(\n      (item) => item.position_id === position_id\n    );\n\n    return result;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Names:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {showEvaluator(props.userList, props.thisApplication.user_id)}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => setViewPosition(!viewPosition)}\n            >\n              {viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n          <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Title:</span>\n              <span className=\"text-gray-800 font-bold text-2xl\">\n                {getPositionById(props.thisApplication.position)\n                  ? getPositionById(props.thisApplication.position)!\n                      .position_title\n                  : \"Position not found\"}\n              </span>\n            </div>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous\n                  ? props.thisClaim.previous.status ===\n                    ApplicationStates.Rejected\n                  : props.thisApplication.application_status ===\n                    ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(\n                    props.thisApplication.application_status\n                  )}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous\n                ? showEvaluator(\n                    props.userList,\n                    props.thisClaim.previous.evaluated_by\n                  )\n                : showEvaluator(\n                    props.userList,\n                    props.thisApplication.override_by.user_id\n                  )}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {props.thisApplication.application_session}\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisApplication.override_by.comment}\n            </span>\n          </div>\n\n          {/* DISPLAY POSITION ==================================================== */}\n          {viewPosition && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .description\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .school_level_id.school_level_name\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .education_institute_id.education_category_title\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {getPositionById(props.thisApplication.position) ? (\n                      getPositionById(\n                        props.thisApplication.position\n                      )!.courses.map((item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            getPositionById(props.thisApplication.position)!\n                              .courses.length -\n                              1 && \",\"}\n                        </div>\n                      ))\n                    ) : (\n                      <NoResult\n                        theme={NoResultThemes.Dark}\n                        value={\"No courses found\"}\n                      />\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {getPositionById(props.thisApplication.position) ? (\n                  getPositionById(props.thisApplication.position)!.requirements\n                    .length > 0 ? (\n                    FC_AdminApplicationPositionDistinctCategory(\n                      getPositionById(props.thisApplication.position)!,\n                      props.documentCategories\n                    ).DistinctCategoriesTemp.map((item, index) => (\n                      <div\n                        className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                        key={index + item.category_id}\n                      >\n                        <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                          <MdTurnedIn />\n                          <span>{item.category_title}</span>\n                        </div>\n                        <div className=\"border bg-white mt-1\">\n                          <ViewRequirements\n                            requirements={FC_AdminApplicationPositionDistinctCategory(\n                              getPositionById(props.thisApplication.position)!,\n                              props.documentCategories\n                            ).PositionsTemp.filter(\n                              (req) => req.category_id === item.category_id\n                            )}\n                          />\n                        </div>\n                      </div>\n                    ))\n                  ) : (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"No requirements\"}\n                    ></NoResult>\n                  )\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {getUserDocuments(props.userList, claim.evaluated_by)\n                          ? getUserDocuments(\n                              props.userList,\n                              claim.evaluated_by\n                            )!.user.user_info.fname +\n                            \" \" +\n                            getUserDocuments(\n                              props.userList,\n                              claim.evaluated_by\n                            )!.user.user_info.lname\n                          : \"-\"}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 mb-5 mt-3\">\n            <span className=\"text-yellow-700 italic font-semibold\">\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  formError && formError.element === \"comment\" ? \"red\" : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={responseMsg}\n                onChange={(e) => {\n                  setResponseMsg(e.target.value);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              ></textarea>\n              {formError && formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  evaluateClaim,\n  reAssessApplication,\n  PushPopupAlert,\n})(AdminClaimAppView);\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { adminDisplayClaimTitle, getUserDocuments } from \".\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { verifyDocument } from \"../../../actions/document\";\nimport { VerifyDocumentInterface } from \"../../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DocValidationStatusInterface,\n  UserDocumentsInterface,\n  UserInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate, timestampToDate } from \"../../../utils/functions\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\ntype AdminClaimDocViewProps = {\n  thisDoc: UserDocumentsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  userList: UserInterface[];\n  candidateId: string;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  viewImage: boolean;\n  setViewImage: React.Dispatch<React.SetStateAction<boolean>>;\n  loadingRequest: boolean;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  actionTaken: ClaimDecisionStatus | null;\n  setActionTaken: React.Dispatch<\n    React.SetStateAction<ClaimDecisionStatus | null>\n  >;\n  responseMsg: string;\n  setResponseMsg: React.Dispatch<React.SetStateAction<string>>;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: React.Dispatch<\n    React.SetStateAction<{\n      element: string;\n      msg: string;\n    } | null>\n  >;\n\n  // REDUX ==================\n  auth: Auth;\n  verifyDocument: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimDocView: React.FC<AdminClaimDocViewProps> = (props) => {\n  const [loadingImage, setLoadingImage] = useState<boolean>(true);\n\n  const handleVerify = async () => {\n    if (!props.actionTaken) {\n      props.setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(props.responseMsg)) {\n      props.setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      props.setLoadingRequest(true);\n      const api_body: {\n        sub_claim_id: string;\n        evaluation_comment: string;\n        evaluated_by: string;\n        decision_taken_status: ClaimDecisionStatus;\n      } = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: props.responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: props.actionTaken,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim.id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (props.actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await FC_DocValidation();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          props.setResponseMsg(\"\");\n          props.setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const FC_DocValidation = async () => {\n    const api_body: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n      },\n    };\n    const api_redux: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n        date: \"\",\n      },\n    };\n\n    try {\n      const res = await axios.post<VerifyDocumentInterface>(\n        `${API.AUTH}/validateuserdoc`,\n        api_body\n      );\n      if (res) {\n        props.verifyDocument(api_redux);\n        await FC_shortListing(props.thisClaim.user);\n        // setDocumentId(\"null\");\n      }\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const FC_shortListing = async (candidate_id: string) => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/doccheckshortlist/${candidate_id}`\n      );\n      console.log({ res });\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Names:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {getUserDocuments(props.userList, props.candidateId)\n                  ? getUserDocuments(props.userList, props.candidateId)!.user\n                      .user_info.fname +\n                    \" \" +\n                    getUserDocuments(props.userList, props.candidateId)!.user\n                      .user_info.lname\n                  : \"-\"}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className={`italic text-gray-600`}>Title:</span>\n            <span className=\"text-gray-800 font-bold text-2xl\">\n              {/* {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main} */}\n              {getUserDocuments(props.userList, props.thisClaim.user)\n                ? adminDisplayClaimTitle(\n                    props.documentCategories,\n                    props.claimTypes,\n                    getUserDocuments(props.userList, props.thisClaim.user)!\n                      .document,\n                    props.thisClaim\n                  )\n                : \"-\"}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous\n                ? getUserDocuments(\n                    props.userList,\n                    props.thisClaim.previous.evaluated_by\n                  )\n                  ? getUserDocuments(\n                      props.userList,\n                      props.thisClaim.previous.evaluated_by\n                    )!.user.user_info.fname +\n                    \" \" +\n                    getUserDocuments(\n                      props.userList,\n                      props.thisClaim.previous.evaluated_by\n                    )!.user.user_info.lname\n                  : \"-\"\n                : getUserDocuments(\n                    props.userList,\n                    props.thisDoc.validated_by.user_id\n                  )\n                ? getUserDocuments(\n                    props.userList,\n                    props.thisDoc.validated_by.user_id\n                  )!.user.user_info.fname +\n                  \" \" +\n                  getUserDocuments(\n                    props.userList,\n                    props.thisDoc.validated_by.user_id\n                  )!.user.user_info.lname\n                : \"-\"}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.commet}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              {loadingImage && (\n                <div className=\"w-full mx-auto mt-5 px-4\">\n                  <div className=\"animate-pulse flex space-x-4\">\n                    <div className=\"flex-1 space-y-4 py-4\">\n                      <div className=\"bg-gray-300 rounded h-72 flex items-center justify-center\">\n                        <h1 className=\"text-5xl text-gray-500 font-bold\">\n                          Loading image\n                        </h1>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full ${\n                  loadingImage && \"hidden\"\n                } animate__animated animate__fadeIn`}\n                onLoad={(event) => {\n                  setLoadingImage(false);\n                }}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {getUserDocuments(props.userList, claim.evaluated_by)\n                          ? getUserDocuments(\n                              props.userList,\n                              claim.evaluated_by\n                            )!.user.user_info.fname +\n                            \" \" +\n                            getUserDocuments(\n                              props.userList,\n                              claim.evaluated_by\n                            )!.user.user_info.lname\n                          : \"-\"}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!props.actionTaken && (\n        <section className=\"flex items-center justify-between\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 mb-5 mt-3\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none ${\n                  loadingImage\n                    ? \"bg-red-300 cursor-wait\"\n                    : \"bg-red-700 hover:bg-red-800\"\n                }`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n                disabled={loadingImage}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none ${\n                  loadingImage\n                    ? \"bg-blue-400 cursor-wait\"\n                    : \"bg-blue-700 hover:bg-blue-800\"\n                }`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n                disabled={loadingImage}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {props.actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.responseMsg}\n                onChange={(e) => {\n                  props.setResponseMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setResponseMsg(\"\");\n                  props.setActionTaken(null);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  evaluateClaim,\n  verifyDocument,\n  PushPopupAlert,\n})(AdminClaimDocView);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdArrowBack } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { Auth } from \"../../../actions/auth\";\nimport { getAllApplications, getAllClaims } from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport {\n  getApplicationSessions,\n  getPositions,\n} from \"../../../actions/settings\";\nimport { verifyAllDocument, fetchUserAccess } from \"../../../actions/users\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport Table from \"../../../components/Table/Table\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimTypesInterface,\n  ClaimTypesInterfaceAPI,\n  PositionAPI,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  ApplicationSessionInterface,\n  UserDocumentsInterface,\n  UserInterface,\n} from \"../../../shared/interfaces\";\nimport { getClaimById, whichClaimStatus, whichClaimType } from \"../Candidate\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport AdminClaimAppView from \"./AdminClaimAppView\";\nimport AdminClaimDocView from \"./AdminClaimDocView\";\nimport AdminFilterByType, {\n  filterClaimsByClaimType,\n} from \"./AdminFilterByType\";\n\nexport const getUserDocuments = (\n  userList: UserInterface[],\n  user_id: String\n): { user: UserInterface; document: UserDocumentsInterface[] } | null => {\n  const thisUser = userList.find((item) => item.user_id === user_id);\n  if (thisUser) {\n    const thisDoc = thisUser.details.filter(\n      (item) => item.validation_status !== \"waiting\"\n    );\n    return { user: thisUser, document: thisDoc };\n  }\n  return null;\n};\n\nexport const adminDisplayClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  claimTypes: ClaimTypesInterfaceAPI[],\n  candidateDocuments: UserDocumentsInterface[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n  let thisClaimType: ClaimTypesInterfaceAPI | undefined = whichClaimType(\n    claimTypes,\n    thisClaim\n  );\n\n  if (thisClaimType) {\n    // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n    if (\n      thisClaimType.title.toLocaleLowerCase() ===\n      ClaimTypesInterface.DOCUMENT.toLocaleLowerCase()\n    ) {\n      let thisDoc = candidateDocuments.find(\n        (item) => item.doc_id === thisClaim.claiming_on_id\n      );\n      result = thisDoc\n        ? AdminClaimGetDocTitle(documentCategories, thisDoc).main\n        : \"Document not found\";\n    }\n    // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  }\n\n  return result;\n};\n\nexport const AdminClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: UserDocumentsInterface\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id &&\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    DocField = documentCategories.documentFields.filter(\n      (c) => c._id === doc.category_subcategory_data\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const getApplicationById = (\n  allApplications: allClaimApplicationInterface[] | null,\n  systemPositions: PositionAPI[] | null,\n  application_id: String\n): {\n  application: allClaimApplicationInterface;\n  position: PositionAPI;\n} | null => {\n  if (allApplications) {\n    let thisApplication = allApplications.find(\n      (item) => item._id === application_id\n    );\n    if (thisApplication && systemPositions) {\n      let thisPosition = systemPositions.find(\n        (item) => item.position_id === thisApplication!.position\n      );\n      if (thisPosition) {\n        return { application: thisApplication, position: thisPosition };\n      }\n    }\n  }\n  return null;\n};\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: ApplicationSessionInterface[];\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  userList: UserInterface[];\n  systemPositions: PositionAPI[] | null;\n  getPositions: Function;\n  getAllApplications: Function;\n  getAllClaims: Function;\n  getApplicationSessions: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  verifyAllDocument: Function;\n  fetchUserAccess: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst Index: React.FC<AppProps> = (props) => {\n  const [thisPeriod, setThisPeriod] =\n    useState<ApplicationSessionInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [periodChanged, setPeriodChanged] = useState<boolean>(false);\n  const [loadingPosition, setLoadingPosition] = useState<boolean>(true);\n  const [loadingApplications, setLoadingApplications] = useState<boolean>(true);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(true);\n  const [loadingDocuments, setLoadingDocuments] = useState<boolean>(true);\n  const [loadingClarifications, setLoadingClarifications] =\n    useState<boolean>(true);\n  const [loadingUsers, setLoadingUsers] = useState(true);\n  const [loadingFields, setLoadingFields] = useState<boolean>(true);\n  const [viewClaim, setViewClaim] = useState<boolean>(false);\n  const [claimId, setClaimId] = useState<string | null>(null);\n  const [claimType, setClaimType] = useState<string | null>(null);\n  const [candidateId, setCandidateId] = useState<string | null>(null);\n\n  // FOR FORM ================\n  const [viewImage, setViewImage] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n\n  useEffect(() => {\n    // LOADING APPLICATION SESSION ====================================\n    if (!props.application_sessions.length && loadingSession) {\n      props.getApplicationSessions((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (thisPeriod === null && !loadingSession) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setThisPeriod(\n        thisSession\n          ? thisSession\n          : props.application_sessions[props.application_sessions.length - 1]\n      );\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!props.documentReducer.documentCategory && loadingDocuments) {\n      props.getDocumentCategory();\n      setLoadingDocuments(false);\n    } else if (loadingDocuments) {\n      setLoadingDocuments(false);\n    }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!props.documentReducer.documentSubCategory && loadingClarifications) {\n      props.getDocumentSubCategory();\n      setLoadingClarifications(false);\n    } else if (loadingClarifications) {\n      setLoadingClarifications(false);\n    }\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!props.documentReducer.documentFields && loadingFields) {\n      props.getDocumentFields();\n      setLoadingFields(false);\n    } else if (loadingFields) {\n      setLoadingFields(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allClaims === null && thisPeriod !== null) {\n      props.getAllClaims(\n        2,\n        thisPeriod.application_session_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingClaims(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingClaims) {\n      setLoadingClaims(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allApplications === null && thisPeriod !== null) {\n      props.getAllApplications(\n        thisPeriod.application_session_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingApplications(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingApplications) {\n      setLoadingApplications(false);\n    }\n\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n\n    if (props.systemPositions === null) {\n      props.getPositions((status: boolean, msg: string) => {\n        setLoadingPosition(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (loadingPosition) {\n      setLoadingPosition(false);\n    }\n  }, [\n    loadingApplications,\n    loadingClaims,\n    loadingClarifications,\n    loadingDocuments,\n    loadingFields,\n    loadingPosition,\n    loadingSession,\n    loadingUsers,\n    props,\n    thisPeriod,\n  ]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  const displayClaimName = (\n    claiming: ClaimingReducerType,\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    let thisClaimType: ClaimTypesInterfaceAPI | undefined = whichClaimType(\n      claiming.claimTypes!,\n      thisClaim\n    );\n    if (thisClaimType) {\n      if (\n        thisClaimType.title.toLocaleLowerCase() ===\n        ClaimTypesInterface.DOCUMENT.toLocaleLowerCase()\n      ) {\n        if (loadingUsers)\n          return <div className={`h-6 bg-gray-300 rounded w-2/3`}></div>;\n        result = getUserDocuments(props.userList, thisClaim.user)\n          ? getUserDocuments(props.userList, thisClaim.user)!.user.user_info\n              .fname +\n            \" \" +\n            getUserDocuments(props.userList, thisClaim.user)!.user.user_info\n              .lname\n          : \"-\";\n      }\n      if (\n        thisClaimType.title.toLocaleLowerCase() ===\n        ClaimTypesInterface.APPLICATION.toLocaleLowerCase()\n      ) {\n        if (\n          loadingApplications ||\n          loadingPosition ||\n          props.systemPositions === null ||\n          props.claiming.allApplications === null\n        ) {\n          return <div className={`h-6 bg-gray-300 rounded w-2/3`}></div>;\n        } else if (props.claiming.allApplications) {\n          result = getUserDocuments(props.userList, thisClaim.user)\n            ? getUserDocuments(props.userList, thisClaim.user)!.user.user_info\n                .fname +\n              \" \" +\n              getUserDocuments(props.userList, thisClaim.user)!.user.user_info\n                .lname\n            : \"-\";\n        }\n      }\n    }\n\n    return result;\n  };\n\n  const displayClaimTitle = (\n    claiming: ClaimingReducerType,\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    let thisClaimType: ClaimTypesInterfaceAPI | undefined = whichClaimType(\n      claiming.claimTypes!,\n      thisClaim\n    );\n    if (thisClaimType) {\n      if (\n        thisClaimType.title.toLocaleLowerCase() ===\n        ClaimTypesInterface.DOCUMENT.toLocaleLowerCase()\n      ) {\n        if (loadingUsers)\n          return <div className={`h-6 bg-gray-300 rounded w-2/3`}></div>;\n        result = getUserDocuments(props.userList, thisClaim.user)\n          ? adminDisplayClaimTitle(\n              props.documentReducer,\n              props.claiming.claimTypes!,\n              getUserDocuments(props.userList, thisClaim.user)!.document,\n              thisClaim\n            )\n          : \"Document not found\";\n      }\n      if (\n        thisClaimType.title.toLocaleLowerCase() ===\n        ClaimTypesInterface.APPLICATION.toLocaleLowerCase()\n      ) {\n        if (loadingApplications || loadingPosition) {\n          return <div className={`h-6 bg-gray-300 rounded w-2/3`}></div>;\n        } else if (props.claiming.allApplications) {\n          let thisApplication = props.claiming.allApplications.find(\n            (item) => item._id === thisClaim.claiming_on_id\n          );\n          if (\n            thisApplication &&\n            props.claiming.allApplications &&\n            props.systemPositions\n          ) {\n            let thisPosition = props.systemPositions.find(\n              (item) => item.position_id === thisApplication!.position\n            );\n            if (thisPosition) {\n              result = thisPosition.position_title;\n            } else {\n              result = \"Application not found\";\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  const tableData = (): JSX.Element[] => {\n    if (\n      props.claiming.allClaims &&\n      props.claiming.claimTypes &&\n      !loadingDocuments &&\n      !loadingSession &&\n      !loadingUsers &&\n      !loadingClaims\n    ) {\n      // CHECK IF THERE IS NO CLAIM ========================================\n      if (\n        filterClaimsByClaimType(\n          props.claiming.allClaims,\n          props.claiming.selectedClaimType\n        ).length <= 0\n      ) {\n        return [\n          <tr\n            className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n            key=\"key3201\"\n          >\n            <td className=\"px-3 py-1\">\n              <NoResult\n                theme={NoResultThemes.Light}\n                value={\"No claim found!\"}\n              />\n            </td>\n          </tr>,\n        ];\n      }\n      // END CHECK IF THERE IS NO CLAIM ========================================\n\n      return filterClaimsByClaimType(\n        props.claiming.allClaims,\n        props.claiming.selectedClaimType\n      ).map((claim, index) => (\n        <tr\n          className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n          key={index + claim.id}\n          onClick={() => {\n            setViewClaim(true);\n            setClaimId(claim.id);\n            setCandidateId(claim.user);\n            setClaimType(\n              whichClaimType(props.claiming.claimTypes!, claim)\n                ? whichClaimType(props.claiming.claimTypes!, claim)!.title\n                : null\n            );\n          }}\n        >\n          <td className=\"px-3 py-1\">{index + 1}</td>\n          <td className=\"px-3 py-1 whitespace-nowrap\">\n            {displayClaimName(props.claiming, claim)}\n          </td>\n          <td className=\"px-3 py-1 whitespace-nowrap\">\n            {displayClaimTitle(props.claiming, claim)}\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            {whichClaimType(props.claiming.claimTypes!, claim)\n              ? whichClaimType(props.claiming.claimTypes!, claim)!.title\n              : \"-\"}\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            <span\n              className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                whichClaimStatus(claim).classes\n              }`}\n            >\n              {whichClaimStatus(claim).status}\n            </span>\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n              View\n            </button>\n          </td>\n        </tr>\n      ));\n    }\n\n    return [\n      <tr key={43243} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n      <tr key={43243343} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n      <tr key={4327543} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n    ];\n  };\n\n  const onPeriodChange = (period_id: string) => {\n    setPeriodChanged(true);\n    props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && setPeriodChanged(false);\n      if (status === false && msg.length) {\n        props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  return (\n    <Fragment>\n      {/* {props.claiming.myClaims} */}\n      {/* SIDE NAVIGATION */}\n      {!viewClaim && (\n        <SideNavigation>\n          {/* FILTER SECTION */}\n          <AdminFilterByType loadingClaims={loadingClaims} />\n          {/* END FILTER SECTION */}\n        </SideNavigation>\n      )}\n      {/* END SIDE NAVIGATION */}\n\n      {/* CLAIM TITLE ===================================== */}\n      {!viewClaim && (\n        <ClaimHeaderTitle\n          headerTitle={`${\n            props.claiming.selectedClaimType === \"all\"\n              ? \"All\"\n              : props.claiming.selectedClaimType.title.toLocaleLowerCase() ===\n                ClaimTypesInterface.DOCUMENT.toLocaleLowerCase()\n              ? \"Documents\"\n              : props.claiming.selectedClaimType.title.toLocaleLowerCase() ===\n                ClaimTypesInterface.APPLICATION.toLocaleLowerCase()\n              ? \"Applications\"\n              : props.claiming.selectedClaimType.title.toLocaleLowerCase() ===\n                  ClaimTypesInterface.PLACEMENT.toLocaleLowerCase() &&\n                \"Placements\"\n          } Claiming`}\n          loading={loading}\n          loadingSession={loadingSession}\n          thisPeriod={thisPeriod}\n          setThisPeriod={setThisPeriod}\n          setLoadingSession={setLoadingSession}\n          application_sessions={props.application_sessions}\n          onPeriodChange={onPeriodChange}\n          periodChanged={periodChanged}\n        />\n      )}\n      {/* END CLAIM TITLE ===================================== */}\n\n      {!viewClaim && (\n        <section className=\"bg-white w-full p-1\">\n          <Table\n            columns={[\n              { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n              {\n                columnTitle: \"\",\n                alignText: \"left\",\n                padding: \"p-3\",\n              },\n              {\n                columnTitle: \"\",\n                alignText: \"left\",\n                padding: \"p-3\",\n              },\n              { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n            ]}\n            hideColumns={true}\n            rows={tableData}\n            pagination={true}\n            search={true}\n            thColor=\"gray\"\n            loading={loadingClaims}\n          />\n        </section>\n      )}\n\n      {/* view claim */}\n      {viewClaim &&\n        candidateId &&\n        getUserDocuments(props.userList, candidateId) &&\n        props.claiming.allClaims &&\n        claimId &&\n        getClaimById(props.claiming.allClaims, claimId) &&\n        props.claiming.claimTypes && (\n          <section className=\"bg-white w-full p-1 my-4\">\n            {/* VIEW CLAIM HEADER =============================== */}\n            <section className=\"flex items-center gap-2 py-2 border-b\">\n              <button\n                className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                  loadingRequest ? \"cursor-not-allowed\" : \"cursor-pointer\"\n                } animate__animated animate__fadeIn`}\n                disabled={loadingRequest}\n                onClick={() => {\n                  setViewClaim(false);\n                  setViewImage(true);\n                  setLoadingRequest(false);\n                  setActionTaken(null);\n                  setResponseMsg(\"\");\n                  setFormError(null);\n                }}\n              >\n                <MdArrowBack className=\"w-7 h-7\" />\n              </button>\n              {/* <div className={`text-blue-600 font-extrabold text-2xl px-2`}>\n                Positions\n              </div> */}\n            </section>\n            {/* END VIEW CLAIM HEADER =============================== */}\n\n            <section className=\"my-2\">\n              {/* FOR DOCUMENT ========================== */}\n              {claimType &&\n                claimType.toLocaleLowerCase() ===\n                  ClaimTypesInterface.DOCUMENT.toLocaleLowerCase() && (\n                  <div>\n                    {getUserDocuments(\n                      props.userList,\n                      candidateId\n                    )!.document.find(\n                      (item) =>\n                        item.doc_id ===\n                        getClaimById(props.claiming.allClaims!, claimId)!\n                          .claiming_on_id\n                    ) ? (\n                      <AdminClaimDocView\n                        thisDoc={\n                          getUserDocuments(\n                            props.userList,\n                            candidateId\n                          )!.document.find(\n                            (item) =>\n                              item.doc_id ===\n                              getClaimById(props.claiming.allClaims!, claimId)!\n                                .claiming_on_id\n                          )!\n                        }\n                        documentCategories={props.documentReducer}\n                        thisClaim={\n                          getClaimById(props.claiming.allClaims, claimId)!\n                        }\n                        userList={props.userList}\n                        claimTypes={props.claiming.claimTypes}\n                        viewImage={viewImage}\n                        setViewImage={setViewImage}\n                        loadingRequest={loadingRequest}\n                        setLoadingRequest={setLoadingRequest}\n                        actionTaken={actionTaken}\n                        setActionTaken={setActionTaken}\n                        responseMsg={responseMsg}\n                        setResponseMsg={setResponseMsg}\n                        formError={formError}\n                        setFormError={setFormError}\n                        candidateId={candidateId}\n                      />\n                    ) : (\n                      <NoResult\n                        theme={NoResultThemes.Dark}\n                        value={\"Document not found\"}\n                      />\n                    )}\n                  </div>\n                )}\n\n              {/* FOR APPLICATION ========================== */}\n              {claimType &&\n                claimType.toLocaleLowerCase() ===\n                  ClaimTypesInterface.APPLICATION.toLocaleLowerCase() && (\n                  <div>\n                    {getApplicationById(\n                      props.claiming.allApplications,\n                      props.systemPositions,\n                      getClaimById(props.claiming.allClaims, claimId)!\n                        .claiming_on_id\n                    ) ? (\n                      props.systemPositions && (\n                        <AdminClaimAppView\n                          thisApplication={\n                            getApplicationById(\n                              props.claiming.allApplications,\n                              props.systemPositions,\n                              getClaimById(props.claiming.allClaims, claimId)!\n                                .claiming_on_id\n                            )!.application\n                          }\n                          thisPosition={\n                            getApplicationById(\n                              props.claiming.allApplications,\n                              props.systemPositions,\n                              getClaimById(props.claiming.allClaims, claimId)!\n                                .claiming_on_id\n                            )!.position\n                          }\n                          documentCategories={props.documentReducer}\n                          thisClaim={\n                            getClaimById(props.claiming.allClaims, claimId)!\n                          }\n                          userList={props.userList}\n                          claimTypes={props.claiming.claimTypes}\n                          systemPositions={props.systemPositions}\n                        />\n                      )\n                    ) : (\n                      <NoResult\n                        theme={NoResultThemes.Dark}\n                        value={\"Application not found\"}\n                      />\n                    )}\n                  </div>\n                )}\n            </section>\n          </section>\n        )}\n      {/* end view claim */}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  claiming,\n  document,\n  users,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: ApplicationSessionInterface[];\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  userList: UserInterface[];\n} => {\n  return {\n    auth: auth,\n    application_sessions: system_settings.applicationSessions,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    userList: users,\n  };\n};\n\nexport const AdminClaim = connect(mapStateToProps, {\n  getAllClaims,\n  getAllApplications,\n  getApplicationSessions,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  verifyAllDocument,\n  fetchUserAccess,\n  getPositions,\n  PushPopupAlert,\n})(Index);\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title + \" in \" + item.field_title}</span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default ViewRequirements;\n","import { ApexOptions } from \"apexcharts\";\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype VBarCharPropstInterface = {\n  labels: string[];\n  categoriesLabel: any;\n  bar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  dataLabels: boolean;\n  yaxisText: string;\n  tooltipText: string;\n  series: {\n    name: string;\n    data: number[];\n  }[];\n  defaultBar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  colors?: any[];\n  title?: {\n    text: string;\n    align: string;\n    margin: number;\n    offestY: number;\n    style: {\n      fontSize: string;\n    };\n  };\n  stacked?: boolean;\n  FC_LoadSelected?: (labelIndex: number, seriesIndex: number) => void;\n  chartHeight?: number;\n};\n\nconst defaultBar = {\n  borderRadius: 4,\n  horizontal: false,\n  columnWidth: \"95%\",\n  endingShape: \"rounded\",\n};\n\nconst VBarChart: React.FC<VBarCharPropstInterface> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [options, setOptions] = useState<ApexOptions>({\n    chart: {\n      events: {\n        dataPointSelection: (event, chartContext, config) => {\n          console.log({\n            labelClicked: config.w.config.labels[config.dataPointIndex],\n            // seriesClicked: config.w.config.series[config.dataPointIndex],\n          });\n          if (props.FC_LoadSelected) {\n            props.FC_LoadSelected(config.dataPointIndex, config.seriesIndex);\n          }\n          // console.log(config.seriesIndex);\n          // console.log(config.dataPointIndex);\n        },\n      },\n      stacked: props.stacked ? props.stacked : false,\n    },\n    plotOptions: {\n      bar: props.defaultBar ? props.defaultBar : defaultBar,\n    },\n    labels: props.labels,\n    dataLabels: {\n      enabled: true,\n    },\n    xaxis: {\n      labels: {\n        rotate: -45,\n      },\n      categories: props.categoriesLabel,\n      tickPlacement: \"on\",\n    },\n    yaxis: {\n      title: {\n        text: props.yaxisText,\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n    tooltip: {\n      y: {\n        formatter: function (val: number) {\n          return val + \" \" + props.tooltipText;\n        },\n      },\n    },\n    grid: {\n      padding: {\n        left: 30, // or whatever value that works\n        right: 30, // or whatever value that works\n      },\n    },\n    noData: {\n      text: \"No data found\",\n      align: \"center\",\n      verticalAlign: \"middle\",\n    },\n  });\n\n  useEffect(() => {\n    if (props.colors && props.colors.length > 0 && loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                chartClicked: config.w.config.labels[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n        colors: props.colors,\n      });\n    } else if (loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                labelClicked: config.w.config.labels[config.dataPointIndex],\n                // seriesClicked: config.w.config.series[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n              // console.log(config.seriesIndex);\n              // console.log(config.dataPointIndex);\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n      });\n    }\n    setLoading(false);\n  }, [loading, options, props]);\n\n  if (loading) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full\">\n      <Chart\n        options={options}\n        series={props.series}\n        type=\"bar\"\n        width=\"100%\"\n        height={props.chartHeight ? props.chartHeight : undefined}\n      />\n    </div>\n  );\n};\n\nexport default VBarChart;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim, DocumentClaimUser } from \"../../actions/claiming\";\nimport { fetchUserAccess } from \"../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate, timestampToDate } from \"../../utils/functions\";\nimport { getUserDocuments } from \"./Admin\";\nimport { ClaimGetDocTitle } from \"./Candidate/ClaimForm\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisDoc: DocumentClaimUser;\n  // setViewThisFile: React.Dispatch<React.SetStateAction<string>>;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  viewImage: boolean;\n  setViewImage: React.Dispatch<React.SetStateAction<boolean>>;\n  loadingRequest: boolean;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  reClaiming: boolean;\n  setReClaiming: React.Dispatch<React.SetStateAction<boolean>>;\n  reClaimingMsg: string;\n  setReClaimingMsg: React.Dispatch<React.SetStateAction<string>>;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: React.Dispatch<\n    React.SetStateAction<{\n      element: string;\n      msg: string;\n    } | null>\n  >;\n\n  // REDUX DATA =====================\n  userList: UserInterface[];\n  fetchUserAccess: Function;\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const [loadingImage, setLoadingImage] = useState<boolean>(true);\n  const [loadingUsers, setLoadingUsers] = useState(true);\n\n  useEffect(() => {\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n  }, [loadingUsers, props]);\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim.id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Title:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous\n                  ? props.thisClaim.previous.status === \"rejected\"\n                  : props.thisDoc.validation_status === \"rejected\"\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : props.thisClaim.previous ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisClaim.previous.evaluated_by\n                ) ? (\n                  getUserDocuments(\n                    props.userList,\n                    props.thisClaim.previous.evaluated_by\n                  )!.user.user_info.fname +\n                  \" \" +\n                  getUserDocuments(\n                    props.userList,\n                    props.thisClaim.previous.evaluated_by\n                  )!.user.user_info.lname\n                ) : (\n                  \"-\"\n                )\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              {loadingImage && (\n                <div className=\"w-full mx-auto mt-5 px-4\">\n                  <div className=\"animate-pulse flex space-x-4\">\n                    <div className=\"flex-1 space-y-4 py-4\">\n                      <div className=\"bg-gray-300 rounded h-72 flex items-center justify-center\">\n                        <h1 className=\"text-5xl text-gray-500 font-bold\">\n                          Loading image\n                        </h1>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full ${\n                  loadingImage && \"hidden\"\n                } animate__animated animate__fadeIn`}\n                onLoad={(event) => {\n                  setLoadingImage(false);\n                }}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {loadingUsers ? (\n                          <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n                        ) : getUserDocuments(\n                            props.userList,\n                            claim.evaluated_by\n                          ) ? (\n                          getUserDocuments(props.userList, claim.evaluated_by)!\n                            .user.user_info.fname +\n                          \" \" +\n                          getUserDocuments(props.userList, claim.evaluated_by)!\n                            .user.user_info.lname\n                        ) : (\n                          \"-\"\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return { userList: users };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUserAccess,\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import React, { useEffect, useState } from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { fetchUserAccess } from \"../../../actions/users\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  claimApplicationsInterface,\n  claimApplicationsPositionInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\nimport { getUserDocuments } from \"../Admin\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    let user = getUserDocuments(userList, user_id);\n    if (user) {\n      result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    }\n  }\n  return result;\n};\n\ntype ApplicationFormViewProps = {\n  thisApplication: claimApplicationsInterface;\n  setViewThisFile: React.Dispatch<React.SetStateAction<string>>;\n  setChooseClaimFile: React.Dispatch<React.SetStateAction<boolean>>;\n  setClaimFileId: React.Dispatch<React.SetStateAction<string>>;\n  documentCategories: DocumentReducerInterface;\n  userList: UserInterface[];\n  fetchUserAccess: Function;\n  PushPopupAlert: Function;\n};\n\nconst ApplicationFormView: React.FC<ApplicationFormViewProps> = (props) => {\n  const [loadingUsers, setLoadingUsers] = useState(true);\n\n  useEffect(() => {\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n  }, [loadingUsers, props]);\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisApplication.application_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisApplication.application_status ===\n                ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } py-1`}\n            >\n              {capitalizeFirstLetter(props.thisApplication.application_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : (\n                showEvaluator(\n                  props.userList,\n                  props.thisApplication.override_by.user_id\n                )\n              )}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-semibold text-gray-900\">\n              {props.thisApplication.override_by.comment}\n            </span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Details\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisApplication.position.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisApplication.position.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !==\n                    props.thisApplication.position.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisApplication.position.requirements.length > 0 ? (\n            FC_ApplicationPositionDistinctCategory(\n              props.thisApplication.position,\n              props.documentCategories\n            ).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_ApplicationPositionDistinctCategory(\n                      props.thisApplication.position,\n                      props.documentCategories\n                    ).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return {\n    userList: users,\n  };\n};\n\nexport default connect(mapStateToProps, { PushPopupAlert, fetchUserAccess })(\n  ApplicationFormView\n);\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype chartType = {\n  options: {\n    labels: string[];\n    legend?: ApexLegend;\n    plotOptions?: ApexPlotOptions;\n    colors?: any[];\n  };\n  series: number[];\n  width?: number;\n};\n\nconst PieChart: React.FC<chartType> = (props) => {\n  return (\n    <div className=\"donut\">\n      <Chart\n        options={props.options}\n        series={props.series}\n        type=\"donut\"\n        width={`${props.width ? props.width : \"380\"}`}\n      />\n    </div>\n  );\n};\n\nexport default PieChart;\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { ApplicationSessionInterface } from \"../../shared/interfaces\";\n\ntype ClaimHeaderTitleProps = {\n  headerTitle: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  thisPeriod: ApplicationSessionInterface | null;\n  setThisPeriod: (state: ApplicationSessionInterface | null) => void;\n  setLoadingSession: (state: boolean) => void;\n  application_sessions: ApplicationSessionInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst selectPeriod = (\n  sessions: ApplicationSessionInterface[],\n  period_id: string,\n  setThisPeriod: (state: ApplicationSessionInterface | null) => void\n) => {\n  setThisPeriod(\n    sessions.filter((item) => item.application_session_id === period_id)[0]\n  );\n};\n\nconst ClaimHeaderTitle: React.FC<ClaimHeaderTitleProps> = (props) => {\n  const isLoading = (): boolean => {\n    if (props.loading || props.loadingSession || props.periodChanged) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.headerTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              isLoading() ? \"cursor-wait\" : \"cursor-default\"\n            }`}\n            value={\n              props.thisPeriod ? props.thisPeriod.application_session_id : \"\"\n            }\n            disabled={isLoading()}\n            onChange={(e) => {\n              selectPeriod(\n                props.application_sessions,\n                e.target.value,\n                props.setThisPeriod\n              );\n              props.setLoadingSession(true);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option\n                key={session.application_session_id + item}\n                value={session.application_session_id}\n              >\n                {session.application_session_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default ClaimHeaderTitle;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  GetClaimingTypes,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\n\nexport const filterClaimsByClaimType = (\n  claimList: CandidateClaimInterface[],\n  claimType: ClaimTypesInterfaceAPI | \"all\"\n): CandidateClaimInterface[] => {\n  if (claimType === \"all\") {\n    return claimList;\n  }\n\n  return claimList.filter((item) => item.claim_type === claimType.id);\n};\n\ntype AdminFilterByTypeProps = {\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getAllClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst AdminFilterByType: React.FC<AdminFilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n          setLoading(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n      setLoading(false);\n    }\n  }, [loadingClaimTypes, props]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: ClaimTypesInterfaceAPI | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.allClaims && thisType === \"all\") {\n      result = claiming.allClaims.filter(\n        (item) => item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n    if (claiming.allClaims && thisType !== \"all\") {\n      result = claiming.allClaims.filter(\n        (item) =>\n          item.claim_type === thisType.id &&\n          item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && props.claiming.claimTypes && (\n        <section>\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {props.claiming.claimTypes.map((item, index) => (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n                props.setSelectedClaimType(item);\n              }}\n              key={index + item.id}\n            >\n              <MainItem\n                title={capitalizeFirstLetter(item.title)}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType.id === item.id\n                }\n                count={countClaims(props.claiming, item)}\n              />\n            </div>\n          ))}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default connect(mapStateToProps, {\n  GetClaimingTypes,\n  setSelectedClaimType,\n  getAllClaims,\n  PushPopupAlert,\n})(AdminFilterByType);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { fetchUserAccess } from \"../../../actions/users\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { getUserDocuments } from \"../Admin\";\nimport { ClaimGetDocTitle } from \"./ClaimForm\";\n\ntype DocFormViewProps = {\n  thisDoc: DocumentClaimUser;\n  setChooseClaimFile: React.Dispatch<React.SetStateAction<boolean>>;\n  setClaimFileId: React.Dispatch<React.SetStateAction<string>>;\n  setViewThisFile: React.Dispatch<React.SetStateAction<string>>;\n  documentCategories: DocumentReducerInterface;\n  userList: UserInterface[];\n  fetchUserAccess: Function;\n  PushPopupAlert: Function;\n};\n\nconst DocFormView: React.FC<DocFormViewProps> = (props) => {\n  const [loadingImage, setLoadingImage] = useState<boolean>(true);\n  const [loadingUsers, setLoadingUsers] = useState(true);\n\n  useEffect(() => {\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n  }, [loadingUsers, props]);\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-xl\">\n              {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisDoc.doc_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n          <div className=\"w-full my-1\">\n            {loadingImage && <Loading />}\n            <img\n              src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n              alt=\"doc file\"\n              className={`w-full ${loadingImage && \"hidden\"}`}\n              onLoad={(event) => {\n                setLoadingImage(false);\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return {\n    userList: users,\n  };\n};\n\nexport default connect(mapStateToProps, { PushPopupAlert, fetchUserAccess })(\n  DocFormView\n);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { ApplicationSessionInterface } from \"../../../shared/interfaces\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getRejectedApplicants = (\n  applicationData: claimApplicationsInterface[]\n): claimApplicationsInterface[] => {\n  return applicationData.filter(\n    (item) => item.application_status === ApplicationStates.Rejected\n  );\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormApplicationListProps = {\n  setChooseClaimFile: (value: React.SetStateAction<boolean>) => void;\n  setClaimFileId: React.Dispatch<React.SetStateAction<string>>;\n  setViewThisFile: React.Dispatch<React.SetStateAction<string>>;\n  viewThisFile: string;\n  candidateApplications: claimApplicationsInterface[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSessionInterface;\n};\n\nconst FormApplicationList: React.FC<FormApplicationListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.application_session_id,\n                item.application_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateApplications, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {getRejectedApplicants(props.candidateApplications).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.application_session_id,\n            item.application_id\n          )\n        ).length > 0 ? (\n          searchApplication(\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.application_session_id,\n                item.application_id\n              )\n            ),\n            searchInput\n          ).map((item, index) => (\n            <div\n              className=\"group flex items-center justify-between my-1 hover:bg-gray-100\"\n              key={index + item.application_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.application_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.position.position_title}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.application_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormApplicationList;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { ClaimGetDocTitle, isClaimAllowed } from \"./ClaimForm\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { CategorySubcategoryData } from \"../../../interfaces/candidatesInterfaces\";\nimport { CandidateClaimInterface } from \"../../../interfaces\";\nimport { ApplicationSessionInterface } from \"../../../shared/interfaces\";\n\nexport interface DocumentTitleInterface {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  doc_title: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport const DocumentTitleData = (\n  documentData: DocumentClaimUser[],\n  documentCategories: DocumentReducerInterface\n): DocumentTitleInterface[] | [] => {\n  let documentTemp: DocumentTitleInterface[] = [];\n  for (let i in documentData) {\n    documentTemp.push({\n      category_id: documentData[i].category_id,\n      company: documentData[i].company,\n      description: documentData[i].description,\n      email: documentData[i].email,\n      end_year: documentData[i].end_year,\n      files: documentData[i].files,\n      names: documentData[i].names,\n      phone_number: documentData[i].phone_number,\n      school: documentData[i].school,\n      school_id: documentData[i].school_id,\n      start_year: documentData[i].start_year,\n      sub_category_id: documentData[i].sub_category_id,\n      title: documentData[i].title,\n      year: documentData[i].year,\n      validation_status: documentData[i].validation_status,\n      validated_by: documentData[i].validated_by,\n      doc_id: documentData[i].doc_id,\n      doc_title: ClaimGetDocTitle(documentCategories, documentData[i]).main,\n      category_subcategory_data: documentData[i].category_subcategory_data,\n    });\n  }\n  return documentTemp;\n};\n\nconst getRejectedDocuments = (\n  documentData: DocumentClaimUser[]\n): DocumentClaimUser[] => {\n  console.log({\n    rejected: documentData.filter(\n      (item) => item.validation_status === \"rejected\"\n    ),\n  });\n  return documentData.filter((item) => item.validation_status === \"rejected\");\n};\n\nexport const searchDocuments = (\n  objList: DocumentTitleInterface[],\n  text: any\n): DocumentTitleInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter(\n    (product) =>\n      product.doc_title.toString().toLowerCase().indexOf(text.toLowerCase()) >\n      -1\n  );\n};\n\ntype FormDocumentListProps = {\n  setChooseClaimFile: (value: React.SetStateAction<boolean>) => void;\n  setClaimFileId: React.Dispatch<React.SetStateAction<string>>;\n  setViewThisFile: React.Dispatch<React.SetStateAction<string>>;\n  viewThisFile: string;\n  candidateDocuments: DocumentClaimUser[];\n  documentCategories: DocumentReducerInterface;\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSessionInterface;\n};\n\nconst FormDocumentList: React.FC<FormDocumentListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.application_session_id,\n                item.doc_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.candidateDocuments.filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.application_session_id,\n            item.doc_id\n          )\n        ).length > 0 ? (\n          searchDocuments(\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.application_session_id,\n                item.doc_id\n              )\n            ),\n            searchInput\n          ).map((doc, index) => (\n            <section key={index + doc.doc_id}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseClaimFile(false);\n                    props.setClaimFileId(doc.doc_id);\n                  }}\n                >\n                  <p className=\"text-base font-medium text-black\">\n                    {ClaimGetDocTitle(props.documentCategories, doc).main}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => {\n                    props.viewThisFile === doc.doc_id\n                      ? props.setViewThisFile(\"\")\n                      : props.setViewThisFile(doc.doc_id);\n                  }}\n                >\n                  {props.viewThisFile === doc.doc_id ? \"Close\" : \"View\"}\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormDocumentList;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { Auth } from \"../../../actions/auth\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentFields,\n  getDocumentSubCategory,\n} from \"../../../actions/document\";\nimport { getApplicationSessions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimTypesInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { ApplicationSessionInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { errorToText } from \"../../../utils/errors\";\nimport ApplicationFormView from \"./ApplicationFormView\";\nimport DocFormView from \"./DocFormView\";\nimport FormApplicationList from \"./FormApplicationList\";\nimport FormDocumentList from \"./FormDocumentList\";\n\nexport const ClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: DocumentClaimUser\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data &&\n    doc.category_subcategory_data.category_subcategory_Data_id.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    console.log({ doc });\n    DocField = documentCategories.documentFields.filter(\n      (c) =>\n        c._id === doc.category_subcategory_data?.category_subcategory_Data_id\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const isClaimAllowed = (\n  allClaim: CandidateClaimInterface[],\n  period_id: string,\n  claimOnId: string\n): boolean => {\n  if (\n    allClaim.find(\n      (item) =>\n        item.period_id === period_id && item.claiming_on_id === claimOnId\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\ntype ClaimFormProps = {\n  // FOR SHORTCUT BUTTONS CALL\n  claim_type?: ClaimTypesInterface;\n  file_id?: string;\n  formState: boolean;\n  setFormState: (value: boolean) => void;\n  auth: Auth;\n  application_sessions: ApplicationSessionInterface[];\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  createClaim: Function;\n  getApplicationSessions: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst ClaimForm: React.FC<ClaimFormProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n  const [loadingApplications, setLoadingApplications] = useState<boolean>(true);\n  const [loadingDocuments, setLoadingDocuments] = useState<boolean>(true);\n  const [loadingForm, setLoadingForm] = useState<boolean>(false);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [thisClaimType, setThisClaimType] = useState<string>(\"\");\n  const [thisClaimTypeId, setThisClaimTypeId] = useState<string>(\"\");\n  const [claimComment, setClaimComment] = useState<string>(\"\");\n  const [claimFileId, setClaimFileId] = useState<string>(\"\");\n  const [chooseClaimFile, setChooseClaimFile] = useState<boolean>(false);\n  const [viewThisFile, setViewThisFile] = useState<string>(\"\");\n  const [formType, setFormType] = useState<\"DEFAULT\" | \"PROPS\">(\"DEFAULT\");\n  const [alertError, setAlertError] = useState<string | null>(null);\n  const [activeSession, setActiveSession] =\n    useState<ApplicationSessionInterface | null>(null);\n\n  useEffect(() => {\n    const isDocumentIdValid = (\n      doc_id: string\n    ): {\n      status: boolean;\n      msg: string;\n      alert: PopupAlertTheme;\n    } => {\n      if (props.claiming.candidateDocuments) {\n        let doc = props.claiming.candidateDocuments.find(\n          (item) => item.doc_id === doc_id\n        );\n        if (doc) {\n          // CHECK IF DOCUMENT HAS REJECTED STATUS\n          if (doc.validated_by.validation_status !== \"rejected\") {\n            return {\n              status: false,\n              msg: \"Only rejected document are allowed for claim\",\n              alert: PopupAlertTheme.info,\n            };\n          }\n          // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n          if (\n            props.claiming.myClaims &&\n            activeSession &&\n            isClaimAllowed(\n              props.claiming.myClaims,\n              activeSession.application_session_id,\n              doc_id\n            )\n          ) {\n            return {\n              status: false,\n              msg: \"This document already in claiming list!\",\n              alert: PopupAlertTheme.info,\n            };\n          }\n          return { status: true, msg: \"\", alert: PopupAlertTheme.success };\n        } else {\n          return {\n            status: false,\n            msg: \"Invalid document id\",\n            alert: PopupAlertTheme.warning,\n          };\n        }\n      }\n      return {\n        status: false,\n        msg: \"No Documents, please try again\",\n        alert: PopupAlertTheme.info,\n      };\n    };\n\n    const isApplicationIdValid = (\n      app_id: string\n    ): {\n      status: boolean;\n      msg: string;\n      alert: PopupAlertTheme;\n    } => {\n      if (props.claiming.candidateApplications) {\n        let app = props.claiming.candidateApplications.find(\n          (item) => item.application_id === app_id\n        );\n        if (app) {\n          // CHECK IF DOCUMENT HAS REJECTED STATUS\n          if (app.application_status !== ApplicationStates.Rejected) {\n            return {\n              status: false,\n              msg: \"Only rejected application are allowed for claim\",\n              alert: PopupAlertTheme.info,\n            };\n          }\n          // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n          if (\n            props.claiming.myClaims &&\n            activeSession &&\n            isClaimAllowed(\n              props.claiming.myClaims,\n              activeSession.application_session_id,\n              app.application_id\n            )\n          ) {\n            return {\n              status: false,\n              msg: \"This application already in claiming list!\",\n              alert: PopupAlertTheme.info,\n            };\n          }\n          return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n        } else {\n          return {\n            status: false,\n            msg: \"Invalid application id\",\n            alert: PopupAlertTheme.warning,\n          };\n        }\n      }\n      return {\n        status: false,\n        msg: \"No Application, please try again!\",\n        alert: PopupAlertTheme.info,\n      };\n    };\n\n    if (!props.documentReducer.documentCategory && loading) {\n      props.getDocumentCategory();\n    } else if (!props.documentReducer.documentSubCategory && loading) {\n      props.getDocumentSubCategory();\n    } else if (!props.documentReducer.documentFields && loading) {\n      props.getDocumentFields();\n    }\n    if (\n      props.documentReducer.documentFields &&\n      props.documentReducer.documentCategory &&\n      props.documentReducer.documentSubCategory &&\n      loading\n    ) {\n      setLoading(false);\n    }\n\n    if (props.claiming.candidateApplications === null) {\n      props.getMyRejectedApplications(\n        props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          if (status === false) {\n            if (msg.length > 0) {\n              props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            setLoadingApplications(false);\n          }\n        }\n      );\n    } else if (loadingApplications) {\n      setLoadingApplications(false);\n    }\n\n    if (props.claiming.candidateDocuments === null) {\n      props.getMyRejectedDocuments((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingDocuments(false);\n        }\n      });\n    } else {\n      setLoadingDocuments(false);\n    }\n\n    if (\n      props.claiming.claimTypes === null ||\n      (props.claiming.claimTypes.length <= 0 && loadingClaimTypes)\n    ) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n        }\n      });\n    } else {\n      setLoadingClaimTypes(false);\n    }\n\n    // LOADING SESSIONS ==========================\n    if (!props.application_sessions.length && loadingSession) {\n      props.getApplicationSessions((status: boolean, msg: string) => {\n        setLoadingSession(status);\n        if (msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (loadingSession) {\n      setLoadingSession(false);\n    }\n    // SETTING ACTIVE SESSION ==========================\n    if (activeSession === null && !loadingSession) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setActiveSession(thisSession ? thisSession : null);\n    }\n\n    // PROPS VALIDATION PROCESS ###############\n    if (props.claim_type && props.file_id && formType === \"DEFAULT\") {\n      if (\n        props.claim_type === ClaimTypesInterface.DOCUMENT &&\n        !loadingDocuments\n      ) {\n        let _isDocumentIdValid = isDocumentIdValid(props.file_id);\n        if (!_isDocumentIdValid.status) {\n          props.PushPopupAlert({\n            title: _isDocumentIdValid.msg,\n            theme: _isDocumentIdValid.alert,\n          });\n          // setAlertError(_isDocumentIdValid.msg);\n          props.setFormState(false);\n        } else {\n          if (props.claiming.claimTypes && props.claim_type) {\n            let claim = props.claiming.claimTypes.find(\n              (item) =>\n                item.id === props.claim_type ||\n                item.title.toLocaleLowerCase() ===\n                  props.claim_type!.toLocaleLowerCase()\n            );\n            setThisClaimType(claim ? claim.title : \"\");\n            setThisClaimTypeId(claim ? claim.id : \"\");\n          }\n          setClaimFileId(props.file_id);\n          setFormType(\"PROPS\");\n        }\n      }\n      if (\n        props.claim_type === ClaimTypesInterface.APPLICATION &&\n        !loadingApplications\n      ) {\n        let _isApplicationIdValid = isApplicationIdValid(props.file_id);\n        if (!_isApplicationIdValid.status) {\n          props.PushPopupAlert({\n            title: _isApplicationIdValid.msg,\n            theme: _isApplicationIdValid.alert,\n          });\n          props.setFormState(false);\n        } else {\n          if (props.claiming.claimTypes && props.claim_type) {\n            let claim = props.claiming.claimTypes.find(\n              (item) =>\n                item.id === props.claim_type ||\n                item.title.toLocaleLowerCase() ===\n                  props.claim_type!.toLocaleLowerCase()\n            );\n            setThisClaimType(claim ? claim.title : \"\");\n            setThisClaimTypeId(claim ? claim.id : \"\");\n          }\n          setClaimFileId(props.file_id);\n          setFormType(\"PROPS\");\n        }\n      }\n    }\n  }, [\n    activeSession,\n    formType,\n    loading,\n    loadingApplications,\n    loadingClaimTypes,\n    loadingDocuments,\n    loadingSession,\n    props,\n  ]);\n\n  const getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n  const getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  const getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      thisClaimType === ClaimTypesInterface.DOCUMENT &&\n      props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: getDocumentById(props.claiming.candidateDocuments, thisId)\n          .validated_by.comment,\n        old_status: getDocumentById(props.claiming.candidateDocuments, thisId)\n          .validated_by.validation_status,\n        old_evaluated_by: getDocumentById(\n          props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      thisClaimType === ClaimTypesInterface.APPLICATION &&\n      props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: getApplicationById(\n          props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: getApplicationById(\n          props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: getApplicationById(\n          props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (isEmptyOrSpaces(thisClaimTypeId)) {\n      return setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(claimFileId)) {\n      return setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(claimComment)) {\n      return setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!activeSession) {\n      return setAlertError(`No active claiming session is available!`);\n    }\n\n    setLoadingForm(true);\n    try {\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: claimFileId,\n          claim_type: thisClaimTypeId,\n          user: props.auth.user.user_id,\n          period_id: activeSession.application_session_id,\n          reason: claimComment,\n          old_reason: getValidation(claimFileId).old_reason,\n          old_status: getValidation(claimFileId).old_status,\n          old_evaluated_by: getValidation(claimFileId).old_evaluated_by,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        cleanToClose();\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    setLoadingForm(false);\n  };\n\n  const selectClaimType = (thisClaim: string) => {\n    if (props.claiming.claimTypes) {\n      let claim = props.claiming.claimTypes.find(\n        (item) =>\n          item.id === thisClaim ||\n          item.title.toLocaleLowerCase() === thisClaim.toLocaleLowerCase()\n      );\n      setThisClaimType(claim ? claim.title : \"\");\n      setThisClaimTypeId(claim ? claim.id : \"\");\n    }\n  };\n\n  const cleanToClose = () => {\n    props.setFormState(false);\n    setClaimFileId(\"\");\n    setThisClaimType(\"\");\n    setThisClaimTypeId(\"\");\n    setClaimComment(\"\");\n    setChooseClaimFile(false);\n    setFormType(\"DEFAULT\");\n    setViewThisFile(\"\");\n    setFormError(null);\n  };\n\n  return (\n    <div className=\"pb-3\">\n      {props.formState && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => {\n            !loadingForm && viewThisFile.length <= 0 && cleanToClose();\n            !loadingForm && viewThisFile.length > 0 && setViewThisFile(\"\");\n          }}\n          displayClose={true}\n          backDropClose={false}\n          title={\n            <div className=\"text-gray-900 font-bold text-xl md:ml-1\">\n              {viewThisFile.length <= 0 && \"Claiming form\"}\n              {viewThisFile.length > 0 &&\n                thisClaimType === ClaimTypesInterface.DOCUMENT &&\n                \"Viewing document\"}\n              {viewThisFile.length > 0 &&\n                thisClaimType === ClaimTypesInterface.APPLICATION &&\n                \"Viewing application\"}\n            </div>\n          }\n          widthSizeClass={\n            viewThisFile.length > 0 ? ModalSize.extraLarge : ModalSize.medium\n          }\n          padding={{ title: true, body: false, footer: false }}\n        >\n          {/* CLAIM FORM ============================================== */}\n          {viewThisFile.length <= 0 && (\n            <form onSubmit={(e) => handleSubmit(e)}>\n              <div className=\"px-6 pb-3\">\n                {alertError && (\n                  <div\n                    className=\"alert-warning cursor-pointer\"\n                    onClick={() => setAlertError(null)}\n                  >\n                    {alertError}\n                  </div>\n                )}\n                <div className=\"text-base text-gray-700 sm:text-lg\">\n                  {/* SELECT CLAIM TYPE ============================================== */}\n                  <div className=\"flex flex-col mb-2\">\n                    <label>Claim type</label>\n                    <select\n                      className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                        formError && formError.element === \"claim_type\"\n                          ? \"border-red-500\"\n                          : \"border-gray-500\"\n                      } ${loadingClaimTypes ? \"cursor-wait\" : \"\"} border-2`}\n                      onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                        selectClaimType(e.target.value);\n                        setClaimFileId(\"\");\n                        formError &&\n                          formError.element === \"claim_type\" &&\n                          setFormError(null);\n                      }}\n                      value={thisClaimTypeId}\n                      disabled={\n                        loadingForm ||\n                        props.claiming.claimTypes === null ||\n                        formType === \"PROPS\"\n                      }\n                    >\n                      <option value=\"\">Choose claim type</option>\n                      {props.claiming.claimTypes &&\n                        props.claiming.claimTypes.map((item, index) => (\n                          <option value={item.id} key={index + item.id}>\n                            {capitalizeFirstLetter(item.title)}\n                          </option>\n                        ))}\n                    </select>\n                    {formError && formError.element === \"claim_type\" && (\n                      <span className=\"text-red-500\">{formError.msg}</span>\n                    )}\n                  </div>\n                  {/* END SELECT CLAIM TYPE ============================================== */}\n\n                  {/* SELECT FILE TO CLAIM ON ============================================== */}\n                  <div className=\"flex flex-col mb-2\">\n                    <label>\n                      Which {thisClaimType.length > 0 ? thisClaimType : \"file\"}{\" \"}\n                      are you claiming on?\n                    </label>\n                    <div\n                      className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                        chooseClaimFile ? \"h-64\" : \"h-10\"\n                      } ${\n                        formError && formError.element === \"claim_file\"\n                          ? \"border-red-500\"\n                          : \"border-gray-500\"\n                      } border-2 ${\n                        thisClaimType.length > 0 && !chooseClaimFile\n                          ? \"cursor-pointer\"\n                          : !chooseClaimFile && \"cursor-not-allowed\"\n                      }`}\n                      title={\n                        thisClaimType.length <= 0\n                          ? \"Choose claim type first!\"\n                          : \"\"\n                      }\n                      onClick={() => {\n                        formType === \"DEFAULT\" &&\n                          thisClaimType.length > 0 &&\n                          !chooseClaimFile &&\n                          setChooseClaimFile(true);\n                        formError &&\n                          formError.element === \"claim_file\" &&\n                          setFormError(null);\n                      }}\n                    >\n                      {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                      {claimFileId.length > 0 && !chooseClaimFile ? (\n                        <p className=\"my-1 mx-2\">\n                          {thisClaimType === ClaimTypesInterface.DOCUMENT &&\n                            props.claiming.candidateDocuments &&\n                            ClaimGetDocTitle(\n                              props.documentReducer,\n                              getDocumentById(\n                                props.claiming.candidateDocuments,\n                                claimFileId\n                              )\n                            ).main}\n                          {thisClaimType === ClaimTypesInterface.APPLICATION &&\n                            props.claiming.candidateApplications &&\n                            getApplicationById(\n                              props.claiming.candidateApplications,\n                              claimFileId\n                            ).position.position_title}\n                        </p>\n                      ) : (\n                        !chooseClaimFile && (\n                          <p className=\"my-1 mx-2\">\n                            Select Claim {thisClaimType.toLocaleLowerCase()}\n                          </p>\n                        )\n                      )}\n                      {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                      {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                      {chooseClaimFile &&\n                        thisClaimType === ClaimTypesInterface.DOCUMENT &&\n                        props.claiming.candidateDocuments &&\n                        activeSession &&\n                        props.claiming.myClaims && (\n                          <FormDocumentList\n                            setChooseClaimFile={setChooseClaimFile}\n                            setClaimFileId={setClaimFileId}\n                            setViewThisFile={setViewThisFile}\n                            viewThisFile={viewThisFile}\n                            candidateDocuments={\n                              props.claiming.candidateDocuments\n                            }\n                            documentCategories={props.documentReducer}\n                            myClaims={props.claiming.myClaims}\n                            activeSession={activeSession}\n                          />\n                        )}\n                      {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                      {/* LISTING OF REJECTED APPLICATION ============================ */}\n                      {chooseClaimFile &&\n                        thisClaimType === ClaimTypesInterface.APPLICATION &&\n                        props.claiming.candidateApplications &&\n                        props.claiming.myClaims &&\n                        activeSession && (\n                          <FormApplicationList\n                            setChooseClaimFile={setChooseClaimFile}\n                            setClaimFileId={setClaimFileId}\n                            setViewThisFile={setViewThisFile}\n                            viewThisFile={viewThisFile}\n                            candidateApplications={\n                              props.claiming.candidateApplications\n                            }\n                            myClaims={props.claiming.myClaims}\n                            activeSession={activeSession}\n                          />\n                        )}\n                      {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                    </div>\n                    {formError && formError.element === \"claim_file\" && (\n                      <span className=\"text-red-500\">{formError.msg}</span>\n                    )}\n                  </div>\n                  {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                  {/* CLAIM COMMENT ============================================== */}\n                  <div className=\"flex flex-col\">\n                    <label>Comment</label>\n                    <textarea\n                      className={`text-left input-white w-20 inline-block ${\n                        formError && formError.element === \"claim_comment\"\n                          ? \"border-red-500\"\n                          : \"border-gray-500\"\n                      } border-2`}\n                      placeholder={`Claim comment`}\n                      style={{ resize: \"none\" }}\n                      value={claimComment}\n                      onChange={(e) => {\n                        setClaimComment(e.target.value);\n                        formError &&\n                          formError.element === \"claim_comment\" &&\n                          setFormError(null);\n                      }}\n                      rows={3}\n                      disabled={loadingForm}\n                    ></textarea>\n                    {formError && formError.element === \"claim_comment\" && (\n                      <span className=\"text-red-500\">{formError.msg}</span>\n                    )}\n                  </div>\n                  {/* END CLAIM COMMENT ============================================== */}\n                </div>\n                <div className=\"pt-3 flex justify-between\">\n                  <button\n                    onClick={() => cleanToClose()}\n                    className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                      loadingForm && \"cursor-not-allowed\"\n                    }`}\n                    type=\"button\"\n                    disabled={loadingForm}\n                  >\n                    Exit\n                  </button>\n                  <button\n                    className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                      loadingForm && \"cursor-wait\"\n                    }`}\n                    type=\"submit\"\n                    disabled={loadingForm}\n                  >\n                    {loadingForm ? \"Loading...\" : \"Claim\"}\n                  </button>\n                </div>\n              </div>\n            </form>\n          )}\n          {/* END CLAIM FORM ============================================== */}\n\n          {/* CLAIM DOCUMENT VIEW ============================================== */}\n          {viewThisFile.length > 0 &&\n            props.claiming.candidateDocuments &&\n            thisClaimType === ClaimTypesInterface.DOCUMENT && (\n              <DocFormView\n                thisDoc={getDocumentById(\n                  props.claiming.candidateDocuments,\n                  viewThisFile\n                )}\n                setViewThisFile={setViewThisFile}\n                documentCategories={props.documentReducer}\n                setChooseClaimFile={setChooseClaimFile}\n                setClaimFileId={setClaimFileId}\n              />\n            )}\n          {/* END CLAIM DOCUMENT VIEW ============================================== */}\n          {/* CLAIM APPLICATION VIEW ============================================== */}\n          {viewThisFile.length > 0 &&\n            props.claiming.candidateApplications &&\n            thisClaimType === ClaimTypesInterface.APPLICATION && (\n              <ApplicationFormView\n                thisApplication={getApplicationById(\n                  props.claiming.candidateApplications,\n                  viewThisFile\n                )}\n                documentCategories={props.documentReducer}\n                setChooseClaimFile={setChooseClaimFile}\n                setClaimFileId={setClaimFileId}\n                setViewThisFile={setViewThisFile}\n              />\n            )}\n          {/* END CLAIM APPLICATION VIEW ============================================== */}\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  document,\n  claiming,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: ApplicationSessionInterface[];\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n} => {\n  return {\n    auth: auth,\n    application_sessions: system_settings.applicationSessions,\n    documentReducer: document,\n    claiming,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  getApplicationSessions,\n  PushPopupAlert,\n})(ClaimForm);\n","import React, { FC } from \"react\";\nimport { IconType } from \"react-icons\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { toAnyDigit } from \"../../shared/dataTest\";\n\nexport type DashboardLabelItemInterface = {\n  // TITLE: Application or Exam or Shortlisted ....\n  title: string;\n  // ICON: FaExpand ....\n  icon: IconType;\n  // ICON COLOR: blue, indigo, gray ....\n  iconColor: string;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  count: number;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  countOver?: number;\n};\n\nconst DashboardLabelItem: FC<DashboardLabelItemInterface> = (\n  props = {\n    title: \"\",\n    icon: FaUsers,\n    iconColor: \"indigo\",\n    count: 0,\n    countOver: undefined,\n  }\n) => {\n  const IconDefined = props.icon;\n  return (\n    <div className=\"flex items-center px-6 py-4 bg-white w-full rounded-md space-x-2 mb-2 lg:mb-0 shadow-md\">\n      <div\n        className={`p-3 rounded-full bg-${props.iconColor}-200 bg-opacity-75`}\n      >\n        <IconDefined className={`h-8 w-8 text-${props.iconColor}-600`} />\n      </div>\n      <div>\n        <h1 className=\"text-3xl font-semibold text-gray-700\">\n          {toAnyDigit(props.count)}{\" \"}\n          {props.countOver && \"/ \" + toAnyDigit(props.countOver)}\n        </h1>\n        <span className=\"text-gray-500 text-lg\">{props.title}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardLabelItem;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ClaimStatus, ClaimTypesInterfaceAPI } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\n\ntype FilterByTypeProps = {\n  // thisClaimType: ClaimTypesInterface | \"ALL\";\n  // setThisClaimType: React.Dispatch<\n  //   React.SetStateAction<ClaimTypesInterface | \"ALL\">\n  // >;\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst FilterByType: React.FC<FilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRejectedApplications, setLoadingRejectedApplications] =\n    useState<boolean>(true);\n  const [loadingRejectedDocuments, setLoadingRejectedDocuments] =\n    useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.candidateApplications === null) {\n      props.getMyRejectedApplications(\n        props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          if (status === false) {\n            if (msg.length > 0) {\n              props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            setLoadingRejectedApplications(false);\n          }\n        }\n      );\n    } else if (loadingRejectedApplications) {\n      setLoadingRejectedApplications(false);\n    }\n\n    if (props.claiming.candidateDocuments === null) {\n      console.log(\"filterrrrrrrrrrrrrrrrrrrr loadingRejectedDocuments\");\n      props.getMyRejectedDocuments((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingRejectedDocuments(false);\n        }\n      });\n    } else if (loadingRejectedDocuments) {\n      setLoadingRejectedDocuments(false);\n    }\n\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n    }\n\n    if (\n      !loadingRejectedApplications &&\n      !loadingRejectedDocuments &&\n      !loadingClaimTypes &&\n      loading\n    ) {\n      setLoading(false);\n    }\n  }, [\n    loading,\n    loadingClaimTypes,\n    loadingRejectedApplications,\n    loadingRejectedDocuments,\n    props,\n  ]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: ClaimTypesInterfaceAPI | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.myClaims && thisType === \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n    if (claiming.myClaims && thisType !== \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.claim_type === thisType.id &&\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n\n    return result;\n  };\n\n  // const displayCounts = (thisType: ClaimTypesInterfaceAPI): number => {\n  //   let result: number = 0;\n  //   if (thisType.title.toLocaleLowerCase() === \"document\") {\n  //     result = countClaims(props.claiming).documents;\n  //   }\n\n  //   if (thisType.title.toLocaleLowerCase() === \"application\") {\n  //     result = countClaims(props.claiming).applications;\n  //   }\n\n  //   if (thisType.title.toLocaleLowerCase() === \"placement\") {\n  //     result = countClaims(props.claiming).placement;\n  //   }\n\n  //   return result;\n  // };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && props.claiming.claimTypes && (\n        <section>\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {props.claiming.claimTypes.map((item, index) => (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n                props.setSelectedClaimType(item);\n              }}\n              key={index + item.id}\n            >\n              <MainItem\n                title={capitalizeFirstLetter(item.title)}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType.id === item.id\n                }\n                count={countClaims(props.claiming, item)}\n              />\n            </div>\n          ))}\n          {/* <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.APPLICATION)}\n              active={props.thisClaimType === ClaimTypesInterface.APPLICATION}\n              count={countClaims(props.claiming).applications}\n            />\n          </div>\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.PLACEMENT);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.PLACEMENT)}\n              active={props.thisClaimType === ClaimTypesInterface.PLACEMENT}\n              count={countClaims(props.claiming).placement}\n            />\n          </div> */}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default connect(mapStateToProps, {\n  GetClaimingTypes,\n  setSelectedClaimType,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  PushPopupAlert,\n})(FilterByType);\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport { fetchUserAccess } from \"../../actions/users\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport {\n  DATE,\n  errorToText,\n  showDate,\n  timestampToDate,\n} from \"../../utils/functions\";\nimport ViewRequirements from \"../Positions/ViewRequirements\";\nimport { getUserDocuments } from \"./Admin\";\nimport {\n  FC_ApplicationPositionDistinctCategory,\n  showEvaluator,\n} from \"./Candidate/ApplicationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisApplication: claimApplicationsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  setViewPosition: React.Dispatch<React.SetStateAction<boolean>>;\n  loadingRequest: boolean;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  reClaiming: boolean;\n  setReClaiming: React.Dispatch<React.SetStateAction<boolean>>;\n  reClaimingMsg: string;\n  setReClaimingMsg: React.Dispatch<React.SetStateAction<string>>;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: React.Dispatch<\n    React.SetStateAction<{\n      element: string;\n      msg: string;\n    } | null>\n  >;\n\n  // REDUX DATA =====================\n  userList: UserInterface[];\n  fetchUserAccess: Function;\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const [loadingUsers, setLoadingUsers] = useState(true);\n\n  useEffect(() => {\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n  }, [loadingUsers, props]);\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim.id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous\n                  ? props.thisClaim.previous.status ===\n                    ApplicationStates.Rejected\n                  : props.thisApplication.application_status ===\n                    ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(\n                    props.thisApplication.application_status\n                  )}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : props.thisClaim.previous ? (\n                showEvaluator(\n                  props.userList,\n                  props.thisClaim.previous.evaluated_by\n                )\n              ) : (\n                showEvaluator(\n                  props.userList,\n                  props.thisApplication.override_by.user_id\n                )\n              )}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisApplication.override_by.comment}\n            </span>\n          </div>\n\n          {/* DISPLAY POSITION ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {props.thisApplication.position.description}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.school_level_id\n                        .school_level_name\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.education_institute_id\n                        .education_category_title\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {props.thisApplication.position.courses.map(\n                      (item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            props.thisApplication.position.courses.length - 1 &&\n                            \",\"}\n                        </div>\n                      )\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {props.thisApplication.position.requirements.length > 0 ? (\n                  FC_ApplicationPositionDistinctCategory(\n                    props.thisApplication.position,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewRequirements\n                          requirements={FC_ApplicationPositionDistinctCategory(\n                            props.thisApplication.position,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {loadingUsers ? (\n                          <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n                        ) : getUserDocuments(\n                            props.userList,\n                            claim.evaluated_by\n                          ) ? (\n                          getUserDocuments(props.userList, claim.evaluated_by)!\n                            .user.user_info.fname +\n                          \" \" +\n                          getUserDocuments(props.userList, claim.evaluated_by)!\n                            .user.user_info.lname\n                        ) : (\n                          \"-\"\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return { userList: users };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUserAccess,\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdAdd, MdArrowBack, MdDelete } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { Auth } from \"../../../actions/auth\";\nimport { DocumentClaimUser, getMyClaims } from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { getApplicationSessions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport Table from \"../../../components/Table/Table\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimStatus,\n  ClaimTypesInterface,\n  ClaimTypesInterfaceAPI,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { ApplicationSessionInterface } from \"../../../shared/interfaces\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport ClaimDocView, { isClaimEvaluated } from \"../ClaimDocView\";\nimport FilterByType from \"./FilterByType\";\nimport ClaimForm, { ClaimGetDocTitle } from \"./ClaimForm\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport { filterClaimsByClaimType } from \"../Admin/AdminFilterByType\";\nimport ClaimApplView from \"../ClaimApplView\";\n\nexport const getDocumentById = (\n  candidateDocuments: DocumentClaimUser[],\n  document_id: string\n): DocumentClaimUser | null => {\n  let result: DocumentClaimUser | undefined = candidateDocuments.find(\n    (item) => item.doc_id === document_id\n  );\n  return result ? result : null;\n};\n\nexport const getApplicationById = (\n  candidateApplications: claimApplicationsInterface[],\n  application_id: string\n): claimApplicationsInterface | null => {\n  let result: claimApplicationsInterface | undefined =\n    candidateApplications.find(\n      (item) => item.application_id === application_id\n    );\n  return result ? result : null;\n};\n\nexport const getClaimById = (\n  claimList: CandidateClaimInterface[],\n  claim_id: string\n): CandidateClaimInterface | null => {\n  let result: CandidateClaimInterface | undefined = claimList.find(\n    (item) => item.id === claim_id\n  );\n  return result ? result : null;\n};\n\nexport const whichClaimType = (\n  claimTypes: ClaimTypesInterfaceAPI[],\n  thisClaim: CandidateClaimInterface\n): ClaimTypesInterfaceAPI | undefined => {\n  return claimTypes.find((item) => item.id === thisClaim.claim_type);\n};\n\nexport const whichClaimStatus = (\n  thisClaim: CandidateClaimInterface\n): {\n  classes: string;\n  status: string;\n} => {\n  let classes: string, status: string;\n  switch (thisClaim.last_claim_status) {\n    case ClaimStatus.COMPLETED:\n      classes = \"text-blue-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.COMPLETED.toLocaleLowerCase());\n      break;\n    case ClaimStatus.EVALUATED:\n      classes = \"text-green-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.EVALUATED.toLocaleLowerCase());\n      break;\n\n    case ClaimStatus.DELETED:\n      classes = \"text-red-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.DELETED.toLocaleLowerCase());\n      break;\n\n    default:\n      classes = \"text-yellow-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.PENDING.toLocaleLowerCase());\n      break;\n  }\n\n  return { classes, status };\n};\n\nexport const displayDocClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  claimTypes: ClaimTypesInterfaceAPI[],\n  candidateDocuments: DocumentClaimUser[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n  let thisClaimType: ClaimTypesInterfaceAPI | undefined = whichClaimType(\n    claimTypes,\n    thisClaim\n  );\n\n  if (thisClaimType) {\n    // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n    if (\n      thisClaimType.title.toLocaleLowerCase() ===\n      ClaimTypesInterface.DOCUMENT.toLocaleLowerCase()\n    ) {\n      let thisDoc = getDocumentById(\n        candidateDocuments,\n        thisClaim.claiming_on_id\n      );\n      result = thisDoc\n        ? ClaimGetDocTitle(documentCategories, thisDoc).main\n        : \"Document not found\";\n    }\n    // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  }\n  // getDocumentById(props.claiming.candidateDocuments!, claim.claiming_on_id)\n  //   ? ClaimGetDocTitle(\n  //       props.documentReducer,\n  //       getDocumentById(\n  //         props.claiming.candidateDocuments!,\n  //         claim.claiming_on_id\n  //       )!\n  //     )\n  //   : \"-\";\n\n  return result;\n};\n\nexport const displayClaimTitle = (\n  claiming: ClaimingReducerType,\n  documentReducer: DocumentReducerInterface,\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = thisClaim.claiming_on_id;\n  let thisClaimType: ClaimTypesInterfaceAPI | undefined = whichClaimType(\n    claiming.claimTypes!,\n    thisClaim\n  );\n  if (thisClaimType) {\n    if (\n      thisClaimType.title.toLocaleLowerCase() ===\n      ClaimTypesInterface.DOCUMENT.toLocaleLowerCase()\n    ) {\n      result = displayDocClaimTitle(\n        documentReducer,\n        claiming.claimTypes!,\n        claiming.candidateDocuments!,\n        thisClaim\n      );\n    }\n    if (\n      thisClaimType.title.toLocaleLowerCase() ===\n        ClaimTypesInterface.APPLICATION.toLocaleLowerCase() &&\n      claiming.candidateApplications\n    ) {\n      let thisApplication = getApplicationById(\n        claiming.candidateApplications,\n        thisClaim.claiming_on_id\n      );\n      if (thisApplication) {\n        result = thisApplication.position.position_title;\n      } else {\n        result = \"Application not found\";\n      }\n    }\n  }\n\n  return result;\n};\n\ntype AppProps = {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: ApplicationSessionInterface[];\n  documentReducer: DocumentReducerInterface;\n  getMyClaims: Function;\n  getApplicationSessions: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst Index: React.FC<AppProps> = (props) => {\n  const [thisPeriod, setThisPeriod] =\n    useState<ApplicationSessionInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(true);\n  const [periodChanged, setPeriodChanged] = useState<boolean>(false);\n  const [loadingDocuments, setLoadingDocuments] = useState<boolean>(true);\n  const [loadingClarifications, setLoadingClarifications] =\n    useState<boolean>(true);\n  const [loadingFields, setLoadingFields] = useState<boolean>(true);\n  const [viewClaim, setViewClaim] = useState<boolean>(false);\n  const [claimId, setClaimId] = useState<string | null>(null);\n  const [claimForm, setClaimForm] = useState<boolean>(false);\n\n  // FOR FORM ================\n  const [viewImage, setViewImage] = useState<boolean>(false);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [reClaiming, setReClaiming] = useState<boolean>(false);\n  const [reClaimingMsg, setReClaimingMsg] = useState<string>(\"\");\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n\n  useEffect(() => {\n    // LOADING APPLICATION SESSION ====================================\n    if (!props.application_sessions.length && loadingSession) {\n      props.getApplicationSessions((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (thisPeriod === null && !loadingSession) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setThisPeriod(\n        thisSession\n          ? thisSession\n          : props.application_sessions[props.application_sessions.length - 1]\n      );\n    }\n\n    if (!props.documentReducer.documentCategory && loadingDocuments) {\n      props.getDocumentCategory();\n      setLoadingDocuments(false);\n    } else if (loadingDocuments) {\n      setLoadingDocuments(false);\n    }\n    if (!props.documentReducer.documentSubCategory && loadingClarifications) {\n      props.getDocumentSubCategory();\n      setLoadingClarifications(false);\n    } else if (loadingClarifications) {\n      setLoadingClarifications(false);\n    }\n    if (!props.documentReducer.documentFields && loadingFields) {\n      props.getDocumentFields();\n      setLoadingFields(false);\n    } else if (loadingFields) {\n      setLoadingFields(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.myClaims === null && thisPeriod !== null) {\n      props.getMyClaims(\n        props.auth.user.user_id,\n        thisPeriod.application_session_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingClaims(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingClaims) {\n      setLoadingClaims(false);\n    }\n  }, [\n    loadingClaims,\n    loadingClarifications,\n    loadingDocuments,\n    loadingFields,\n    loadingSession,\n    props,\n    thisPeriod,\n  ]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  const tableData = (): JSX.Element[] => {\n    if (\n      props.claiming.myClaims &&\n      props.claiming.candidateDocuments &&\n      props.claiming.claimTypes &&\n      !loadingDocuments &&\n      !loadingSession &&\n      !loadingClaims &&\n      !periodChanged\n    ) {\n      if (\n        filterClaimsByClaimType(\n          props.claiming.myClaims,\n          props.claiming.selectedClaimType\n        ).length <= 0\n      ) {\n        return [\n          <tr\n            className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n            key=\"key3201\"\n          >\n            <td className=\"px-3 py-1\">\n              <NoResult\n                theme={NoResultThemes.Light}\n                value={\"No claim found!\"}\n              />\n            </td>\n          </tr>,\n        ];\n      }\n      return filterClaimsByClaimType(\n        props.claiming.myClaims,\n        props.claiming.selectedClaimType\n      ).map((claim, index) => (\n        <tr\n          className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n          key={index + claim.id}\n          onClick={() => {\n            setViewClaim(true);\n            setClaimId(claim.id);\n          }}\n        >\n          <td className=\"px-3 py-1 whitespace-nowrap\">\n            {displayClaimTitle(props.claiming, props.documentReducer, claim)}\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            {whichClaimType(props.claiming.claimTypes!, claim)\n              ? whichClaimType(props.claiming.claimTypes!, claim)!.title\n              : \"-\"}\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            <span\n              className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                whichClaimStatus(claim).classes\n              }`}\n            >\n              {whichClaimStatus(claim).status}\n            </span>\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n              View\n            </button>\n          </td>\n        </tr>\n      ));\n    }\n\n    return [\n      <tr key={43243} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n      <tr key={43243343} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n      <tr key={4327543} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n    ];\n  };\n\n  const isDeleteAllowed = (thisCLaim: CandidateClaimInterface): boolean => {\n    if (!isClaimEvaluated(thisCLaim, 1)) {\n      return true;\n    }\n    return false;\n  };\n\n  const onPeriodChange = (period_id: string) => {\n    setPeriodChanged(true);\n    props.getMyClaims(\n      props.auth.user.user_id,\n      period_id,\n      (status: boolean, msg: string) => {\n        !status && setPeriodChanged(false);\n        if (status === false && msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n  };\n\n  const handleDelete = async () => {};\n\n  return (\n    <Fragment>\n      {/* {props.claiming.myClaims} */}\n      {/* SIDE NAVIGATION */}\n      {!viewClaim && (\n        <SideNavigation>\n          <button\n            className=\"btn mb-3 border-2 border-blue-500 hover:bg-blue-500 hover:text-white flex items-center flex-1 font-bold w-full focus:outline-none\"\n            onClick={() => setClaimForm(true)}\n            disabled={viewClaim || loading}\n          >\n            <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n            <span>Claiming</span>\n          </button>\n\n          {/* FILTER SECTION */}\n          <FilterByType loadingClaims={loadingClaims} />\n          {/* END FILTER SECTION */}\n        </SideNavigation>\n      )}\n      {/* END SIDE NAVIGATION */}\n\n      {/* CLAIM TITLE ===================================== */}\n      {!viewClaim && (\n        <ClaimHeaderTitle\n          headerTitle={`${\n            props.claiming.selectedClaimType === \"all\"\n              ? \"All\"\n              : props.claiming.selectedClaimType.title.toLocaleLowerCase() ===\n                ClaimTypesInterface.DOCUMENT.toLocaleLowerCase()\n              ? \"Documents\"\n              : props.claiming.selectedClaimType.title.toLocaleLowerCase() ===\n                ClaimTypesInterface.APPLICATION.toLocaleLowerCase()\n              ? \"Applications\"\n              : props.claiming.selectedClaimType.title.toLocaleLowerCase() ===\n                  ClaimTypesInterface.PLACEMENT.toLocaleLowerCase() &&\n                \"Placements\"\n          } Claiming`}\n          loading={loading}\n          loadingSession={loadingSession}\n          thisPeriod={thisPeriod}\n          setThisPeriod={setThisPeriod}\n          setLoadingSession={setLoadingSession}\n          application_sessions={props.application_sessions}\n          onPeriodChange={onPeriodChange}\n          periodChanged={periodChanged}\n        />\n      )}\n      {/* END CLAIM TITLE ===================================== */}\n\n      {!viewClaim && (\n        <section className=\"bg-white w-full p-1\">\n          {\n            <Table\n              columns={[\n                { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                {\n                  columnTitle: \"\",\n                  alignText: \"left\",\n                  padding: \"p-3\",\n                },\n                {\n                  columnTitle: \"\",\n                  alignText: \"left\",\n                  padding: \"p-3\",\n                },\n                { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n              ]}\n              hideColumns={true}\n              rows={tableData}\n              pagination={true}\n              search={true}\n              thColor=\"gray\"\n              loading={loadingClaims}\n            />\n          }\n        </section>\n      )}\n\n      {/* view claim */}\n      {viewClaim &&\n        props.claiming.myClaims &&\n        claimId &&\n        getClaimById(props.claiming.myClaims, claimId) && (\n          <section className=\"bg-white w-full p-1 my-4\">\n            {/* VIEW CLAIM HEADER =============================== */}\n            <section className=\"flex items-center gap-2 py-2 border-b\">\n              <button\n                className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                  loadingRequest ? \"cursor-not-allowed\" : \"cursor-pointer\"\n                } animate__animated animate__fadeIn`}\n                disabled={loadingRequest}\n                onClick={() => {\n                  setViewClaim(false);\n                  setViewImage(false);\n                  setLoadingRequest(false);\n                  setFormError(null);\n                  setReClaiming(false);\n                  setReClaimingMsg(\"\");\n                }}\n              >\n                <MdArrowBack className=\"w-7 h-7\" />\n              </button>\n              {isDeleteAllowed(\n                getClaimById(props.claiming.myClaims, claimId)!\n              ) && (\n                <button\n                  className={`bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    loadingRequest ? \"cursor-not-allowed\" : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={loadingRequest}\n                  onClick={() => {\n                    handleDelete();\n                  }}\n                >\n                  <MdDelete className=\"w-7 h-7\" />\n                </button>\n              )}\n              {/* <div\n            className={`text-blue-600 font-extrabold ${\n              modalAction ? \"text-2xl\" : \"text-xl\"\n            } px-2`}\n          >\n            {modalAction === \"CREATE_POSITION\"\n              ? \"Creating new position\"\n              : modalAction === \"UPDATE_POSITION\"\n              ? \"Updating \" + positionTitle\n              : \"Positions\"}\n          </div> */}\n            </section>\n            {/* END VIEW CLAIM HEADER =============================== */}\n\n            <section className=\"my-2\">\n              {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n              {whichClaimType(\n                props.claiming.claimTypes!,\n                getClaimById(props.claiming.myClaims, claimId)!\n              ) &&\n              whichClaimType(\n                props.claiming.claimTypes!,\n                getClaimById(props.claiming.myClaims, claimId)!\n              )!.title === ClaimTypesInterface.DOCUMENT &&\n              props.claiming.candidateDocuments &&\n              getDocumentById(\n                props.claiming.candidateDocuments,\n                getClaimById(props.claiming.myClaims, claimId)!.claiming_on_id\n              ) ? (\n                <ClaimDocView\n                  thisDoc={\n                    getDocumentById(\n                      props.claiming.candidateDocuments,\n                      getClaimById(props.claiming.myClaims, claimId)!\n                        .claiming_on_id\n                    )!\n                  }\n                  documentCategories={props.documentReducer}\n                  thisClaim={getClaimById(props.claiming.myClaims, claimId)!}\n                  viewImage={viewImage}\n                  setViewImage={setViewImage}\n                  loadingRequest={loadingRequest}\n                  setLoadingRequest={setLoadingRequest}\n                  reClaiming={reClaiming}\n                  setReClaiming={setReClaiming}\n                  reClaimingMsg={reClaimingMsg}\n                  setReClaimingMsg={setReClaimingMsg}\n                  formError={formError}\n                  setFormError={setFormError}\n                />\n              ) : (\n                whichClaimType(\n                  props.claiming.claimTypes!,\n                  getClaimById(props.claiming.myClaims, claimId)!\n                ) &&\n                whichClaimType(\n                  props.claiming.claimTypes!,\n                  getClaimById(props.claiming.myClaims, claimId)!\n                )!.title === ClaimTypesInterface.DOCUMENT && (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"Document not found\"}\n                  />\n                )\n              )}\n              {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n\n              {/* ############################################################### */}\n\n              {/* VIEWING CLAIM OF AN APPLICATION ===================== */}\n              {whichClaimType(\n                props.claiming.claimTypes!,\n                getClaimById(props.claiming.myClaims, claimId)!\n              ) &&\n              whichClaimType(\n                props.claiming.claimTypes!,\n                getClaimById(props.claiming.myClaims, claimId)!\n              )!.title === ClaimTypesInterface.APPLICATION &&\n              props.claiming.candidateApplications &&\n              getApplicationById(\n                props.claiming.candidateApplications,\n                getClaimById(props.claiming.myClaims, claimId)!.claiming_on_id\n              ) ? (\n                <ClaimApplView\n                  thisApplication={\n                    getApplicationById(\n                      props.claiming.candidateApplications,\n                      getClaimById(props.claiming.myClaims, claimId)!\n                        .claiming_on_id\n                    )!\n                  }\n                  documentCategories={props.documentReducer}\n                  thisClaim={getClaimById(props.claiming.myClaims, claimId)!}\n                  viewPosition={viewImage}\n                  setViewPosition={setViewImage}\n                  loadingRequest={loadingRequest}\n                  setLoadingRequest={setLoadingRequest}\n                  reClaiming={reClaiming}\n                  setReClaiming={setReClaiming}\n                  reClaimingMsg={reClaimingMsg}\n                  setReClaimingMsg={setReClaimingMsg}\n                  formError={formError}\n                  setFormError={setFormError}\n                />\n              ) : (\n                whichClaimType(\n                  props.claiming.claimTypes!,\n                  getClaimById(props.claiming.myClaims, claimId)!\n                ) &&\n                whichClaimType(\n                  props.claiming.claimTypes!,\n                  getClaimById(props.claiming.myClaims, claimId)!\n                )!.title === ClaimTypesInterface.APPLICATION && (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"Application not found\"}\n                  />\n                )\n              )}\n            </section>\n          </section>\n        )}\n      {/* end view claim */}\n\n      {/* CLAIM FORM  ################ */}\n      {claimForm && (\n        <ClaimForm formState={claimForm} setFormState={setClaimForm} />\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  claiming,\n  document,\n}: StoreState): {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: ApplicationSessionInterface[];\n  documentReducer: DocumentReducerInterface;\n} => {\n  return {\n    auth: auth,\n    claiming,\n    application_sessions: system_settings.applicationSessions,\n    documentReducer: document,\n  };\n};\n\nexport const CandidateClaim = connect(mapStateToProps, {\n  getMyClaims,\n  getApplicationSessions,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(Index);\n","import React from \"react\";\nimport DashboardLabelItem, {\n  DashboardLabelItemInterface,\n} from \"../DashboardLabelItem\";\n\ntype DashboardLabelProps = {\n  dataLabels: DashboardLabelItemInterface[];\n  labelsOnRow?: number;\n  childrenPosition?: \"START\" | \"END\";\n  children?: JSX.Element;\n};\n\nconst ExamDashboardLabels: React.FC<DashboardLabelProps> = (props) => {\n  const numCols: number = props.labelsOnRow\n    ? props.labelsOnRow > 4\n      ? props.labelsOnRow\n      : 4\n    : 4;\n  return (\n    <div\n      className={`grid 2xl:grid-cols-${numCols} xl:grid-cols-${\n        numCols - 1\n      } lg:grid-cols-${numCols - 2} md:grid-cols-${\n        numCols - 3\n      } sm:grid-cols-2 grid-cols-1 gap-4 items-center mx-auto`}\n    >\n      {props.children &&\n        ((props.childrenPosition && props.childrenPosition === \"START\") ||\n          !props.childrenPosition) &&\n        props.children}\n      {props.dataLabels.map((item, index) => (\n        <section key={index + item.title}>\n          <DashboardLabelItem\n            title={item.title}\n            icon={item.icon}\n            iconColor={item.iconColor}\n            count={item.count}\n          />\n        </section>\n      ))}\n      {props.children &&\n        props.childrenPosition &&\n        props.childrenPosition === \"END\" &&\n        props.children}\n    </div>\n  );\n};\n\nexport default ExamDashboardLabels;\n","import React from \"react\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype AllClaimChartProps = {\n  ClaimTypes: {\n    title: string;\n    count: {\n      all: number;\n      accepted: number;\n      rejected: number;\n      pending: number;\n    };\n    type: string | \"all\";\n  }[];\n};\n\nconst AllClaimChart: React.FC<AllClaimChartProps> = (props) => {\n  const FC_GetAllClaimChartData = (): {\n    accepted: number[];\n    rejected: number[];\n    active: number[];\n    labels: string[];\n  } => {\n    let acceptedArray: number[] = [],\n      rejectedArray: number[] = [],\n      activeArray: number[] = [],\n      labelArray: string[] = [];\n\n    for (const typeKey in props.ClaimTypes) {\n      if (props.ClaimTypes[typeKey].type !== \"all\") {\n        acceptedArray.push(props.ClaimTypes[typeKey].count.accepted);\n        rejectedArray.push(props.ClaimTypes[typeKey].count.rejected);\n        activeArray.push(props.ClaimTypes[typeKey].count.pending);\n        labelArray.push(props.ClaimTypes[typeKey].type);\n      }\n    }\n    return {\n      accepted: acceptedArray,\n      rejected: rejectedArray,\n      active: activeArray,\n      labels: labelArray,\n    };\n  };\n\n  return (\n    <section className=\"my-3 max-w-full bg-white\">\n      <div className=\"flex items-center justify-between px-3\">\n        <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n          Claim chart on country level\n        </span>\n      </div>\n      <div className=\"mb-4 pb-2 px-3\">\n        <VBarChart\n          labels={FC_GetAllClaimChartData().labels}\n          categoriesLabel={FC_GetAllClaimChartData().labels}\n          dataLabels={false}\n          yaxisText=\"(Applicants)\"\n          tooltipText=\"Claims\"\n          series={[\n            {\n              name: \"Pending Claim\",\n              data: FC_GetAllClaimChartData().active,\n            },\n            {\n              name: \"Accepted Claim\",\n              data: FC_GetAllClaimChartData().accepted,\n            },\n            {\n              name: \"Rejected Claim\",\n              data: FC_GetAllClaimChartData().rejected,\n            },\n          ]}\n          colors={[\"#4b5563\", \"#469769\", \"#d97724\"]}\n          defaultBar={{\n            borderRadius: 4,\n            horizontal: false,\n            columnWidth: \"95%\",\n            endingShape: \"rounded\",\n          }}\n          stacked={true}\n        />\n      </div>\n    </section>\n  );\n};\n\nexport default AllClaimChart;\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { MdBrightness1 } from \"react-icons/md\";\nimport { education_category } from \"../../../interfaces/education_category\";\nimport { ApplicationSessionInterface } from \"../../../shared/interfaces\";\n\ntype ClaimDashBoardTitleProps = {\n  reportTitle: string;\n  education_categories: education_category[] | null;\n  loading: boolean;\n  loadingApplications: boolean;\n  loadingEducation: boolean;\n  thisEducation: education_category | null;\n  allEducation: boolean;\n  periodChanged: boolean;\n  setThisEducation: React.Dispatch<\n    React.SetStateAction<education_category | null>\n  >;\n  thisPeriod: string;\n  setThisPeriod: React.Dispatch<React.SetStateAction<string>>;\n  application_sessions: ApplicationSessionInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst ClaimDashBoardTitle: React.FC<ClaimDashBoardTitleProps> = (props) => {\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.reportTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        {/* EDUCATION CATEGORY sections */}\n        <section>\n          {props.education_categories && props.education_categories.length > 0 && (\n            <div className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n              {props.allEducation && (\n                <div\n                  className={`w-auto ${\n                    props.loading ||\n                    props.loadingApplications ||\n                    props.loadingEducation ||\n                    props.periodChanged\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation === null\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(null)\n                  }\n                >\n                  <section className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>All</span>\n                  </section>\n                </div>\n              )}\n              {props.education_categories.map((education, index) => (\n                <div\n                  key={education.education_institute_id + index}\n                  className={`w-auto ${\n                    props.loading ||\n                    props.loadingApplications ||\n                    props.loadingEducation\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation &&\n                    education.education_institute_id ===\n                      props.thisEducation.education_institute_id\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingApplications &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(education)\n                  }\n                >\n                  <div className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>{education.education_category_title}</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </section>\n        {/* end EDUCATION CATEGORY sections */}\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              props.loadingApplications && \"cursor-wait\"\n            }`}\n            value={props.thisPeriod}\n            disabled={\n              props.loading ||\n              props.loadingApplications ||\n              props.loadingEducation ||\n              props.periodChanged\n            }\n            onChange={(e) => {\n              props.setThisPeriod(e.target.value);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option\n                key={session.application_session_id + item}\n                value={session.application_session_id}\n              >\n                {session.application_session_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default ClaimDashBoardTitle;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { FaBookOpen } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  loadEducationCategories,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport {\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport {\n  getApplicationSessions,\n  getPositions,\n} from \"../../../actions/settings\";\nimport { fetchUserAccess } from \"../../../actions/users\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimToPrintInterface,\n  ClaimTypesInterface,\n  ClaimTypesInterfaceAPI,\n  education_category,\n  PositionAPI,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  ApplicationSessionInterface,\n  UserInterface,\n} from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport {\n  adminDisplayClaimTitle,\n  getUserDocuments,\n} from \"../../Claimings/Admin\";\nimport { whichClaimType } from \"../../Claimings/Candidate\";\nimport PieChart from \"../ChartComponents/PieChart\";\nimport ExamDashboardLabels from \"../ExamDashboard/ExamDashboardLabels\";\nimport AllClaimChart from \"./AllClaimChart\";\nimport ClaimDashBoardTitle from \"./ClaimDashBoardTitle\";\n\ninterface WaitingListDashboardProps {\n  auth: Auth;\n  application_sessions: ApplicationSessionInterface[];\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  userList: UserInterface[];\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  setSelectedClaimType: Function;\n  getPositions: Function;\n  getAllClaims: Function;\n  GetClaimingTypes: Function;\n  getAllApplications: Function;\n  getApplicationSessions: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  fetchUserAccess: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst _ClaimDashboard: React.FC<WaitingListDashboardProps> = (props) => {\n  const [thisPeriod, setThisPeriod] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [periodChanged, setPeriodChanged] = useState<boolean>(false);\n  const [loadingPosition, setLoadingPosition] = useState<boolean>(true);\n  const [loadingApplications, setLoadingApplications] = useState<boolean>(true);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(true);\n  const [loadingDocuments, setLoadingDocuments] = useState<boolean>(true);\n  const [loadingInstitutes, setLoadingInstitutes] = useState<boolean>(true);\n  const [loadingClarifications, setLoadingClarifications] =\n    useState<boolean>(true);\n  const [loadingUsers, setLoadingUsers] = useState(true);\n  const [loadingFields, setLoadingFields] = useState<boolean>(true);\n  const [thisEducation, setThisEducation] = useState<education_category | null>(\n    null\n  );\n  const [thisLabel, setThisLabel] = useState<string>(\"All claim types status\");\n\n  useEffect(() => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      props.schoolLevels.education_categories === null ||\n      props.schoolLevels.education_categories.length === 0\n    ) {\n      props.loadEducationCategories(setLoadingInstitutes);\n    } else {\n      setLoadingInstitutes(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n    // LOADING CLAIM TYPES ========================================\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n    // END LOADING CLAIM TYPES ========================================\n    // LOADING APPLICATION SESSION ====================================\n    if (!props.application_sessions.length && loadingSession) {\n      props.getApplicationSessions((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (isEmptyOrSpaces(thisPeriod) && !loadingSession) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setThisPeriod(\n        thisSession\n          ? thisSession.application_session_id\n          : props.application_sessions[props.application_sessions.length - 1]\n              .application_session_id\n      );\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!props.documentReducer.documentCategory && loadingDocuments) {\n      props.getDocumentCategory();\n      setLoadingDocuments(false);\n    } else if (loadingDocuments) {\n      setLoadingDocuments(false);\n    }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!props.documentReducer.documentSubCategory && loadingClarifications) {\n      props.getDocumentSubCategory();\n      setLoadingClarifications(false);\n    } else if (loadingClarifications) {\n      setLoadingClarifications(false);\n    }\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!props.documentReducer.documentFields && loadingFields) {\n      props.getDocumentFields();\n      setLoadingFields(false);\n    } else if (loadingFields) {\n      setLoadingFields(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allClaims === null && !isEmptyOrSpaces(thisPeriod)) {\n      props.getAllClaims(2, thisPeriod, (status: boolean, msg: string) => {\n        !status && setLoadingClaims(status);\n        if (status === false && msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (!isEmptyOrSpaces(thisPeriod) && loadingClaims) {\n      setLoadingClaims(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      props.claiming.allApplications === null &&\n      !isEmptyOrSpaces(thisPeriod)\n    ) {\n      props.getAllApplications(thisPeriod, (status: boolean, msg: string) => {\n        !status && setLoadingApplications(status);\n        if (status === false && msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (!isEmptyOrSpaces(thisPeriod) && loadingApplications) {\n      // alert(\"apps\");\n      setLoadingApplications(false);\n    }\n\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n\n    if (props.systemPositions === null) {\n      props.getPositions((status: boolean, msg: string) => {\n        setLoadingPosition(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (loadingPosition) {\n      setLoadingPosition(false);\n    }\n  }, [\n    loadingApplications,\n    loadingClaims,\n    loadingClarifications,\n    loadingDocuments,\n    loadingFields,\n    loadingPosition,\n    loadingSession,\n    loadingUsers,\n    props,\n    thisPeriod,\n  ]);\n\n  const onPeriodChange = (period_id: string) => {\n    setPeriodChanged(true);\n    props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && setPeriodChanged(false);\n      if (status === false && msg.length) {\n        props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  const getClaimInstitute = (\n    claiming: ClaimingReducerType,\n    thisClaim: CandidateClaimInterface\n  ): string | null => {\n    let thisClaimType: ClaimTypesInterfaceAPI | undefined = whichClaimType(\n      claiming.claimTypes!,\n      thisClaim\n    );\n    if (thisClaimType) {\n      if (\n        thisClaimType.title.toLocaleLowerCase() ===\n        ClaimTypesInterface.DOCUMENT.toLocaleLowerCase()\n      ) {\n        return null;\n      }\n      if (\n        thisClaimType.title.toLocaleLowerCase() ===\n        ClaimTypesInterface.APPLICATION.toLocaleLowerCase()\n      ) {\n        if (props.claiming.allApplications) {\n          let thisApplication = props.claiming.allApplications.find(\n            (item) => item._id === thisClaim.claiming_on_id\n          );\n          if (\n            thisApplication &&\n            props.claiming.allApplications &&\n            props.systemPositions\n          ) {\n            // return thisApplication.\n            let thisPosition = props.systemPositions.find(\n              (item) => item.position_id === thisApplication!.position\n            );\n            if (thisPosition) {\n              return thisPosition.education_institute_id.education_institute_id;\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  };\n\n  const displayClaimName = (\n    claiming: ClaimingReducerType,\n    thisClaim: CandidateClaimInterface\n  ): UserInterface | null => {\n    let result: UserInterface | null = null;\n    let thisClaimType: ClaimTypesInterfaceAPI | undefined = whichClaimType(\n      claiming.claimTypes!,\n      thisClaim\n    );\n    if (thisClaimType) {\n      if (\n        thisClaimType.title.toLocaleLowerCase() ===\n        ClaimTypesInterface.DOCUMENT.toLocaleLowerCase()\n      ) {\n        result = getUserDocuments(props.userList, thisClaim.user)\n          ? getUserDocuments(props.userList, thisClaim.user)!.user\n          : null;\n      }\n      if (\n        thisClaimType.title.toLocaleLowerCase() ===\n        ClaimTypesInterface.APPLICATION.toLocaleLowerCase()\n      ) {\n        if (props.claiming.allApplications) {\n          result = getUserDocuments(props.userList, thisClaim.user)\n            ? getUserDocuments(props.userList, thisClaim.user)!.user\n            : null;\n        }\n      }\n    }\n\n    return result;\n  };\n\n  const displayClaimTitle = (\n    claiming: ClaimingReducerType,\n    thisClaim: CandidateClaimInterface\n  ): string => {\n    let result: string = thisClaim.claiming_on_id;\n    let thisClaimType: ClaimTypesInterfaceAPI | undefined = whichClaimType(\n      claiming.claimTypes!,\n      thisClaim\n    );\n    if (thisClaimType) {\n      if (\n        thisClaimType.title.toLocaleLowerCase() ===\n        ClaimTypesInterface.DOCUMENT.toLocaleLowerCase()\n      ) {\n        result = getUserDocuments(props.userList, thisClaim.user)\n          ? adminDisplayClaimTitle(\n              props.documentReducer,\n              props.claiming.claimTypes!,\n              getUserDocuments(props.userList, thisClaim.user)!.document,\n              thisClaim\n            )\n          : \"Document not found\";\n      }\n      if (\n        thisClaimType.title.toLocaleLowerCase() ===\n        ClaimTypesInterface.APPLICATION.toLocaleLowerCase()\n      ) {\n        if (props.claiming.allApplications) {\n          let thisApplication = props.claiming.allApplications.find(\n            (item) => item._id === thisClaim.claiming_on_id\n          );\n          if (\n            thisApplication &&\n            props.claiming.allApplications &&\n            props.systemPositions\n          ) {\n            let thisPosition = props.systemPositions.find(\n              (item) => item.position_id === thisApplication!.position\n            );\n            if (thisPosition) {\n              result = thisPosition.position_title;\n            } else {\n              result = \"Application not found\";\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  const ClaimTypes = (\n    claims: ClaimToPrintInterface[],\n    claimsTypes: ClaimTypesInterfaceAPI[]\n  ): {\n    title: string;\n    count: {\n      all: number;\n      accepted: number;\n      rejected: number;\n      pending: number;\n    };\n    type: string | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: {\n        all: number;\n        accepted: number;\n        rejected: number;\n        pending: number;\n      };\n      type: string | \"all\";\n    }[] = [\n      {\n        title: \"All claim types status\",\n        count: {\n          all: claims.length,\n          accepted: claims.filter(\n            (item) => item.decision === ClaimDecisionStatus.ACCEPTED\n          ).length,\n          rejected: claims.filter(\n            (item) => item.decision === ClaimDecisionStatus.REJECTED\n          ).length,\n          pending: claims.filter((item) => item.decision === \"PENDING\").length,\n        },\n        type: \"all\",\n      },\n    ];\n    for (let i in claimsTypes) {\n      output.push({\n        title: claimsTypes[i].title + \" claim status\",\n        count: {\n          all: claims.filter((itm) => itm.claim_type === claimsTypes[i].title)\n            .length,\n          accepted: claims.filter(\n            (itm) =>\n              itm.claim_type === claimsTypes[i].title &&\n              itm.decision === ClaimDecisionStatus.ACCEPTED\n          ).length,\n          rejected: claims.filter(\n            (itm) =>\n              itm.claim_type === claimsTypes[i].title &&\n              itm.decision === ClaimDecisionStatus.REJECTED\n          ).length,\n          pending: claims.filter(\n            (itm) =>\n              itm.claim_type === claimsTypes[i].title &&\n              itm.decision === \"PENDING\"\n          ).length,\n        },\n        type: claimsTypes[i].title,\n      });\n    }\n    return output;\n  };\n\n  const FC_ClaimData = (\n    allClaims: CandidateClaimInterface[] | null,\n    claimTypes: ClaimTypesInterfaceAPI[] | null\n  ): ClaimToPrintInterface[] | null => {\n    if (allClaims === null || claimTypes === null) return null;\n    let arrayNew: ClaimToPrintInterface[] = [];\n    let n: number = 1;\n    // LOOP IN ALL CLAIM ONE BY ONE ###########################\n    for (const key in allClaims) {\n      if (Object.prototype.hasOwnProperty.call(allClaims, key)) {\n        // LOOP IN ALL CLAIM OF ONE FILE ONE BY ONE ===========================\n        for (const keyClaim in allClaims[key].claims) {\n          if (\n            Object.prototype.hasOwnProperty.call(\n              allClaims[key].claims,\n              keyClaim\n            )\n          ) {\n            const element = allClaims[key].claims[keyClaim];\n            const thisUser = displayClaimName(props.claiming, allClaims[key]);\n            const thisType = whichClaimType(claimTypes, allClaims[key]);\n            let dataArray: ClaimToPrintInterface = {\n              claim_id: n,\n              names: thisUser\n                ? thisUser.user_info.fname + \" \" + thisUser.user_info.lname\n                : \"\",\n              gender: thisUser\n                ? thisUser!.user_info.sex\n                  ? \"Male\"\n                  : \"Female\"\n                : \"\",\n              national_id: thisUser ? thisUser!.n_id! : \"\",\n              phone: thisUser ? thisUser!.phone_number : \"\",\n              email: thisUser ? thisUser!.email : \"\",\n              claim_type: thisType ? thisType.title : \"\",\n              claim_level: element.level,\n              education_category: getClaimInstitute(\n                props.claiming,\n                allClaims[key]\n              ),\n              claim_session: thisPeriod,\n              date: DATE(element.createdAt),\n              decision: element.decision_taken_status\n                ? element.decision_taken_status\n                : \"PENDING\",\n              claim_title: displayClaimTitle(props.claiming, allClaims[key]),\n            };\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n      }\n    }\n    return arrayNew;\n  };\n\n  const getClaimDataByTitle = (\n    allData: {\n      title: string;\n      count: {\n        all: number;\n        accepted: number;\n        rejected: number;\n        pending: number;\n      };\n      type: string | \"all\";\n    }[]\n  ):\n    | {\n        title: string;\n        count: {\n          all: number;\n          accepted: number;\n          rejected: number;\n          pending: number;\n        };\n        type: string | \"all\";\n      }\n    | undefined => {\n    return allData.find((item) => item.title === thisLabel);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n  return (\n    <Fragment>\n      {/* HEADER TITLE */}\n      <ClaimDashBoardTitle\n        education_categories={props.schoolLevels.education_categories}\n        loading={loading}\n        loadingApplications={loadingApplications}\n        loadingEducation={loadingInstitutes}\n        thisEducation={thisEducation}\n        setThisEducation={setThisEducation}\n        thisPeriod={thisPeriod}\n        setThisPeriod={setThisPeriod}\n        application_sessions={props.application_sessions}\n        reportTitle={\"Claim Dashboard\"}\n        allEducation={true}\n        periodChanged={periodChanged}\n        onPeriodChange={onPeriodChange}\n      />\n      {/* END HEADER TITLE */}\n\n      {/* CLAIM ALL STATUS LABELS ======================================= */}\n      {props.claiming.claimTypes &&\n        FC_ClaimData(props.claiming.allClaims, props.claiming.claimTypes) && (\n          <section className=\"my-2\">\n            <div className=\"text-2xl font-semibold text-gray-600\">\n              {thisLabel}{\" \"}\n              <select\n                className={`bg-white text-gray-600 border-2 border-blue-600 rounded-lg px-2 py-1 focus:outline-none`}\n                value={thisLabel}\n                onChange={(e) => setThisLabel(e.target.value)}\n              >\n                {ClaimTypes(\n                  FC_ClaimData(\n                    props.claiming.allClaims,\n                    props.claiming.claimTypes\n                  )!,\n                  props.claiming.claimTypes!\n                ).map((item, index: number) => (\n                  <option key={item.type + index} value={item.title}>\n                    {capitalizeFirstLetter(item.type.toLocaleLowerCase())}\n                  </option>\n                ))}\n              </select>\n            </div>\n            {getClaimDataByTitle(\n              ClaimTypes(\n                FC_ClaimData(\n                  props.claiming.allClaims,\n                  props.claiming.claimTypes\n                )!,\n                props.claiming.claimTypes!\n              )\n            ) && (\n              <ExamDashboardLabels\n                dataLabels={[\n                  {\n                    title: \"Total claim\",\n                    icon: FaBookOpen,\n                    iconColor: \"blue\",\n                    count: getClaimDataByTitle(\n                      ClaimTypes(\n                        FC_ClaimData(\n                          props.claiming.allClaims,\n                          props.claiming.claimTypes\n                        )!,\n                        props.claiming.claimTypes!\n                      )\n                    )!.count.all,\n                  },\n                  {\n                    title: \"Accepted Claim\",\n                    icon: FaBookOpen,\n                    iconColor: \"green\",\n                    count: getClaimDataByTitle(\n                      ClaimTypes(\n                        FC_ClaimData(\n                          props.claiming.allClaims,\n                          props.claiming.claimTypes\n                        )!,\n                        props.claiming.claimTypes!\n                      )\n                    )!.count.accepted,\n                  },\n                  {\n                    title: \"Rejected Claim\",\n                    icon: FaBookOpen,\n                    iconColor: \"yellow\",\n                    count: getClaimDataByTitle(\n                      ClaimTypes(\n                        FC_ClaimData(\n                          props.claiming.allClaims,\n                          props.claiming.claimTypes\n                        )!,\n                        props.claiming.claimTypes!\n                      )\n                    )!.count.rejected,\n                  },\n                  {\n                    title: \"Pending Claim\",\n                    icon: FaBookOpen,\n                    iconColor: \"gray\",\n                    count: getClaimDataByTitle(\n                      ClaimTypes(\n                        FC_ClaimData(\n                          props.claiming.allClaims,\n                          props.claiming.claimTypes\n                        )!,\n                        props.claiming.claimTypes!\n                      )\n                    )!.count.pending,\n                  },\n                ]}\n                labelsOnRow={5}\n              >\n                <div className=\"flex justify-center\">\n                  <PieChart\n                    options={{\n                      labels: [\"Accepted\", \"Rejected\", \"Pending\"],\n                      legend: {\n                        show: false,\n                        position: \"bottom\",\n                        horizontalAlign: \"center\",\n                        fontSize: \"16px\",\n                        itemMargin: {\n                          horizontal: 3,\n                          vertical: 0,\n                        },\n                      },\n                      plotOptions: {\n                        pie: {\n                          donut: {\n                            labels: {\n                              show: true,\n                              name: {\n                                show: true,\n                                fontSize: \"16px\",\n                                //   fontFamily: \"Rubik\",\n                                color: \"#2564eb\",\n                                offsetY: -10,\n                              },\n                              value: {\n                                show: true,\n                                fontSize: \"20px\",\n                                fontFamily: \"Helvetica, Arial, sans-serif\",\n                                color: \"#2564eb\",\n                                offsetY: 10,\n                                formatter: function (val) {\n                                  return val;\n                                },\n                              },\n                              total: {\n                                show: true,\n                                label: \"Total\",\n                                color: \"#2564eb\",\n                                formatter: function (w) {\n                                  return w.globals.seriesTotals.reduce(\n                                    (a: number, b: number) => {\n                                      return a + b;\n                                    },\n                                    0\n                                  );\n                                },\n                              },\n                            },\n                          },\n                        },\n                      },\n                      colors: [\"#469769\", \"#d97724\", \"#4b5563\"],\n                    }}\n                    series={[\n                      getClaimDataByTitle(\n                        ClaimTypes(\n                          FC_ClaimData(\n                            props.claiming.allClaims,\n                            props.claiming.claimTypes\n                          )!,\n                          props.claiming.claimTypes!\n                        )\n                      )!.count.accepted,\n                      getClaimDataByTitle(\n                        ClaimTypes(\n                          FC_ClaimData(\n                            props.claiming.allClaims,\n                            props.claiming.claimTypes\n                          )!,\n                          props.claiming.claimTypes!\n                        )\n                      )!.count.rejected,\n                      getClaimDataByTitle(\n                        ClaimTypes(\n                          FC_ClaimData(\n                            props.claiming.allClaims,\n                            props.claiming.claimTypes\n                          )!,\n                          props.claiming.claimTypes!\n                        )\n                      )!.count.pending,\n                    ]}\n                    width={210}\n                  />\n                </div>\n              </ExamDashboardLabels>\n            )}\n          </section>\n        )}\n      {/* CLAIM STATUS ON COUNTRY LEVEL LABELS ======================================= */}\n\n      {/* ===================================================================================== */}\n\n      {/* EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n      {props.claiming.claimTypes &&\n        FC_ClaimData(props.claiming.allClaims, props.claiming.claimTypes) && (\n          <AllClaimChart\n            ClaimTypes={ClaimTypes(\n              FC_ClaimData(\n                props.claiming.allClaims,\n                props.claiming.claimTypes\n              )!,\n              props.claiming.claimTypes\n            )}\n          />\n        )}\n      {/* END EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  claiming,\n  document,\n  users,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: ApplicationSessionInterface[];\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  userList: UserInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    application_sessions: system_settings.applicationSessions,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    userList: users,\n    schoolLevels,\n  };\n};\n\nexport const ClaimDashboard = connect(mapStateToProps, {\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  getApplicationSessions,\n  loadEducationCategories,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  setSelectedClaimType,\n  fetchUserAccess,\n  getPositions,\n  PushPopupAlert,\n})(_ClaimDashboard);\n"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","components/Courses/Courses.tsx","containers/QuestionBank/AddQuestion/UploadQuestion/EditQuestion/EditQuestion.tsx","containers/QuestionBank/AddQuestion/UploadQuestion/EditQuestion/QuestionAnswer.tsx","containers/QuestionBank/AddQuestion/UploadQuestion/EditQuestion/HandleInput.tsx","containers/QuestionBank/AddQuestion/UploadQuestion/EditQuestion/QuestionChapters.tsx","utils/question_bank.ts","containers/Application/ApplicationPositions/SchoolLevelsFilter/SchoolLevelsItem.tsx","containers/Application/ApplicationPositions/SchoolLevelsFilter/SchoolLevelsFilter.tsx","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","_UploadQuestion","props","setLoading","status","setState","loading","setSearchLevel","educationCategory","schoolLevel","searchLevel","setSelectedEducationCategory","setSelectedSchoolLevel","showFilter","setSchoolLevelFilterFn","filteredCourses","courses","searched","filtered","filter","itm","school_levels","find","itm1","school_level_id","item2","setUploadingStatus","uploadingStatus","componentDidMount","course","loadCourses","state","searchCourseInput","className","this","education_category_title","school_level_name","onClick","schoolLevels","education_categories","loadEducationCategories","loadSchoolLevels","onChange","target","type","placeholder","style","minHeight","searchData","map","item","setSelectedCourse","selected_course_id","course_id","course_name","course_code","title","backDrop","theme","Themes","default","close","backDropClose","widthSizeClass","ModalSize","medium","displayClose","padding","educationCategories","Component","UploadQuestion","connect","auth","questionBank","SelectedKeysEdit","QuestionAnswer","useState","addedAnswer","setAddedAnswer","showAddAnswerStatus","setShowAddAnswer","selectedKey","updateMarks","parseInt","marks","setSelectedKey","QuestionLanguages","lang","key","answer","id","uuidv4","undefined","backup","push","handleStatus","alert","selectedQL","wholeQuestion","language","addAnswerSingleMultiple","AddAnswer","console","log","selectedQuestionType","questionTypeElementsType","SingleMultiple","MultipleChoice","selectedQuestionItem","check","selectedLanguage","updateAnswerSingleMultiple","editSingleMultipleStatus","removeAnswerSingleMultiple","HandleInput","Title","languages","questionItems","handleUpdateQuestionDetails","description","Description","QuestionChapters","selectedCourse","chapters","setAddChapter","addedChapters","name","_EditQuestion","QuestionLang","question","res","actionStatus","msg","PushPopupAlert","PopupAlertTheme","success","danger","updatedQuestion","current","editedAnswerIndex","editedAnswer","newFiltered","getQuestionType","questionTypes","removed","window","confirm","answer_id","ans","chapter_id","submitEditedQuestion","a","addedQuestion","customNumber","UpdateQuestion","addExamQuestion","unSelectQuestion","loadQuestionTypes","showQuestionChapters","selectedQuestion","Loading","LoadingType","white","onSubmit","Modal","large","Courses","selected_course","EditQuestion","system","prepareExam","setUploadedQuestions","question_types","type_id","check_type","questionTypeElements","element","SchoolLevelsItem","levelsDropDown","setLevelsDropDown","educationCategoryDetails","education_institute_id","initializeItem","activateItem","education_institute","educationCate","activateLevelItem","SchoolLevelsFilter","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","toString","substr","stringify","arr","offset","arguments","toLowerCase","v4","options","buf","rnds","random"],"mappings":"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","file":"static/js/1.b1bc1ee3.chunk.js","sourcesContent":["import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { Component, Fragment } from 'react'\nimport { FiFilter } from 'react-icons/fi';\nimport * as Interfaces from \"../../interfaces/index\";\nimport searchData from \"../../utils/search\";\n\nimport { connect } from \"react-redux\";\nimport {\n  Auth, \n  courseStoreInterface,\n  loadCourses,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  QuestionBankStoreInterface,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { course } from '../../interfaces/course';\nimport Loading from '../../components/Loading/Loading';\nimport Modal, { ModalSize, Themes } from '../../components/Modal/Modal';\nimport { FaAngleRight } from 'react-icons/fa';\nimport { searchItem } from '../../containers/Application/ApplicationPositions/ApplicationPositions';\nimport SchoolLevelsFilter from '../../containers/Application/ApplicationPositions/SchoolLevelsFilter/SchoolLevelsFilter';\n\ninterface UploadQuestionState {\n  loading: boolean;\n  searchLevel: searchItem | null;\n  showFilter: boolean;\n  uploadingStatus: boolean;\n  searchCourseInput: string;\n}\ninterface UploadQuestionProps {\n  auth: Auth;\n  course: courseStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  questionBank: QuestionBankStoreInterface;\n  selected_course_id: string | null;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  setSelectedEducationCategory: (\n    education_category: Interfaces.education_category\n  ) => void;\n  setSelectedSchoolLevel: (education_category: Interfaces.school_level) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  setSelectedCourse: (course: course | null) => void;\n}\n\nclass _UploadQuestion extends Component<UploadQuestionProps, UploadQuestionState> {\n  constructor(props: UploadQuestionProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n      loading: false,\n      searchLevel: null,\n      showFilter: false,\n      uploadingStatus: false,\n      searchCourseInput: \"\",\n\t\t};\n\t}\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  }\n\n  setSearchLevel = (\n    educationCategory: Interfaces.education_category | null,\n    schoolLevel: Interfaces.school_level | null\n  ) => {\n    this.setState({\n      searchLevel: {\n        educationCategory: educationCategory,\n        schoolLevel: schoolLevel,\n      },\n    });\n    if (educationCategory) {\n      this.props.setSelectedEducationCategory(educationCategory);\n    }\n    if (schoolLevel) {\n      this.props.setSelectedSchoolLevel(schoolLevel);\n      this.setState({ showFilter: false });\n    }\n  };\n\n  setSchoolLevelFilterFn = (status: boolean) => {\n    this.setState({ showFilter: status });\n  };\n\n  filteredCourses = (courses: course[], searched: searchItem | null): course[] => {\n    let filtered: course[] = courses;\n    if (searched !== null) {\n      if (searched.schoolLevel !== null) {\n        filtered = courses.filter((itm) => {\n          if (itm.school_levels.find(itm1 => itm1 === searched.schoolLevel?.school_level_id)) {\n            let status = false;\n            for (let item2 of itm.school_levels) {\n              if (searched.educationCategory?.school_levels.find(i => i === item2)) {\n                status = true;\n              }\n            }\n            return status === true ? itm : null;\n          } else {\n            return null;\n          }\n        })\n      } else if (searched.educationCategory !== null) {\n        filtered = courses.filter((itm) => {\n          let status = false;\n          for (let item2 of itm.school_levels) {\n            if (searched.educationCategory?.school_levels.find(i => i === item2)) {\n              status = true;\n            }\n          }\n          return status === true ? itm : null;\n        })\n      }\n    }\n    return filtered;\n  }\n\n  setUploadingStatus = (status: boolean) => {\n    this.setState({ uploadingStatus: status});\n  }\n\n  componentDidMount = () => {\n    if (this.props.course.courses === null || this.props.course.courses.length === 0) {\n      this.props.loadCourses(this.setLoading);\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"flex-col\">\n          <div className=\"my-4 grid md:grid-cols-5 gap-2\">\n            <div className={`animate__animated md:col-span-5 md:flex md:flex-col min-h-full bg-white shadow rounded`}>\n              <div className=\"py-2 px-2\">\n                <div className=\"flex flex-row gap-2 mb-2 items-center justify-between\">\n                  <div className=\"flex flex-col\">\n                    <div><span className=\"text-lg text-gray-600 font-bold\">Choose a course</span></div>\n                    <div className=\"flex flex-row items-center\">\n                      {this.state.searchLevel?.educationCategory && <span className=\"bg-blue-50 rounded-full px-2 text-xs text-blue-600 font-bold\">{this.state.searchLevel.educationCategory?.education_category_title}</span>}\n                      {this.state.searchLevel?.schoolLevel && <div className=\"flex flex-row items-center\"><FaAngleRight className=\"\" /><span className=\"bg-blue-50 rounded-full px-2 text-xs text-blue-600 font-bold\">{this.state.searchLevel.schoolLevel?.school_level_name}</span></div>}\n                    </div>\n                  </div>\n                  <div onClick={() => { \n                    this.props.schoolLevels.education_categories === null && this.props.loadEducationCategories(this.setLoading);\n                    this.props.schoolLevels.school_levels === null && this.props.loadSchoolLevels(this.setLoading);\n                    this.setState({ showFilter: true }) }} className=\"btn cursor-pointer bg-blue-50 hover:bg-blue-100 text-blue-600 flex flex-row gap-1 items-center\">\n                    <FiFilter className=\"text-xl\" />\n                    <span>Filter</span>\n                  </div> \n                </div>\n                <div>\n                  <input onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.setState({ searchCourseInput: e.target.value })} type=\"text\" className=\"input-white h-10 text-sm border-2 border-blue-500\" placeholder=\"Search question by title or description\" />\n                </div>\n                <div className=\"mt-4\" style={{minHeight: '500px'}}>\n                  {this.state.uploadingStatus === true ? <div className=\"my-2 flex flex-col gap-2\">\n                    <div className=\"rounded-xl bg-gray-100 h-8\"></div>\n                    <div className=\"rounded-xl bg-gray-100 h-8 w-4/5\"></div>\n                    <div className=\"rounded-xl bg-gray-100 h-8 w-5/6\"></div>\n                    <div className=\"rounded-xl bg-gray-100 h-8\"></div>\n                    <div className=\"rounded-xl bg-gray-100 h-8 w-3/4\"></div>\n                    <div className=\"rounded-xl bg-gray-100 h-8\"></div>\n                  </div> :\n                  this.props.course.courses === null ? <Loading /> :\n                  this.props.course.courses && this.filteredCourses(this.props.course.courses, this.state.searchLevel).length === 0 ? <span className=\"text-gray-400 font-extrabold ml-2 animate__animated animate__shakeX\">No courses available!</span> :\n                  this.props.course.courses && searchData(this.filteredCourses(this.props.course.courses, this.state.searchLevel), this.state.searchCourseInput).map((item, i) => (\n                    <div key={i + 1} \n                    onClick={() => this.props.setSelectedCourse(item)} \n                    className={`rounded border ${this.props.selected_course_id !== null && this.props.selected_course_id === item.course_id ? \"bg-blue-100 border-blue-300 text-blue-600 animate__animated animate__bounceIn\" : \"border-gray-200 hover:bg-blue-100 hover:border-blue-600 text-gray-600\"}  px-2 py-3 flex flex-row gap-3 items-center my-2 cursor-pointer`}>\n                      <span className=\"text-sm\">\n                        <div className={`h-8 w-8 rounded-full flex justify-center items-center text-white ${this.props.selected_course_id !== null && this.props.selected_course_id === item.course_id ? \"bg-blue-600 text-white\" : \"font-bold bg-gray-500\"}`}>{i + 1}</div>\n                      </span>\n                      <div className=\"flex flex-col\">\n                        <span className={`text-md font-bold`}>{item.course_name}</span>\n                        <span className={`text-xs`}>Code: {item.course_code}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.state.showFilter === true &&\n        <Modal\n          title=\"Filter courses by school levels\"\n          backDrop={true}\n          theme={Themes.default}\n          close={() => this.setState({ showFilter: false })}\n          backDropClose={true}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{title: true,}}\n        >\n          <SchoolLevelsFilter \n            educationCategories={this.props.schoolLevels.education_categories}\n            schoolLevels={this.props.schoolLevels.school_levels}\n            searchLevel={this.state.searchLevel}\n            setSearchLevel={this.setSearchLevel}\n            setSchoolLevelFilterFn={this.setSchoolLevelFilterFn}\n          />\n        </Modal>}\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  course,\n  schoolLevels,\n  questionBank,\n}: StoreState): { auth: Auth; course: courseStoreInterface; schoolLevels: schoolLevelsStoreInterface; questionBank: QuestionBankStoreInterface; } => {\n  return { auth: auth, course: course, schoolLevels: schoolLevels, questionBank: questionBank };\n};\n\nconst UploadQuestion = connect(mapStateToProps, {\n  loadCourses,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n})(_UploadQuestion);\n\nexport default UploadQuestion;\n","import React, { Component, Fragment } from 'react'\nimport { LanguageInterface, QuestionAnswerInterface, QuestionInterface, QuestionItemInterface, QuestionLanguages, questionTypeElementsType } from '../../../../../interfaces/question'\nimport { connect } from \"react-redux\";\nimport {\n  Auth, \n  courseStoreInterface,\n  loadCourses,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  QuestionBankStoreInterface,\n  setUploadedQuestions,\n  questionTypesStoreInterface,\n  loadQuestionTypes,\n  System,\n  PushPopupAlert,\n  UpdateQuestion,\n  PrepareExamsStoreInterface,\n  addExamQuestion,\n} from \"../../../../../actions\";\nimport { StoreState } from \"../../../../../reducers\";\nimport { PopupAlertData } from '../../../../../components/Alert/Popup';\nimport Courses from '../../../../../components/Courses/Courses';\nimport { course } from '../../../../../interfaces/course';\nimport Modal, { ModalSize, Themes } from '../../../../../components/Modal/Modal';\nimport QuestionAnswer from './QuestionAnswer';\nimport { MdModeEdit } from 'react-icons/md';\nimport HandleInputProps from './HandleInput'\nimport { HiCheck } from 'react-icons/hi';\nimport Loading from '../../../../../components/Loading/Loading';\nimport { LoadingType } from '../../../../../components/Loading/LoadingV2';\nimport QuestionChapters from './QuestionChapters';\nimport { PopupAlertTheme } from '../../../../../interfaces/popupAlert';\nimport { BiArrowBack } from 'react-icons/bi';\nimport { getQuestionType } from '../../../../../utils/question_bank';\n\ninterface EditQuestionProps {\n  selectedQuestion: QuestionInterface;\n  questionsList: QuestionInterface[];\n  questionTypes: questionTypesStoreInterface;\n  system: System;\n  course: courseStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  unSelectQuestion: () => void;\n  UpdateQuestion: (question: QuestionInterface, callback: (loading: boolean) => void, actionStatus: (loading: boolean, msg: string) => void) => void;\n  prepareExam: PrepareExamsStoreInterface;\n  addExamQuestion: (question: QuestionInterface) => void;\n}\n\ninterface EditQuestionState {\n  loading: boolean;\n  id: string;\n  course: string; // Course ID\n  question: QuestionItemInterface[];\n  type: questionTypeElementsType | \"Invalid\";\n  chapters: string[] // CourseChapter: ID\n  customNumber: number;\n  marks: number;\n  answer: QuestionAnswerInterface | QuestionAnswerInterface[];\n  selectedLanguage: LanguageInterface;\n  showFilter: boolean;\n  selectedKey: SelectedKeysEdit | null;\n  showQuestionChapters: boolean;\n}\n\nexport enum SelectedKeysEdit {\n  Title = \"Title\",\n  Description = \"Description\",\n  QuestionAnswer = \"QuestionAnswer\",\n}\n\nclass _EditQuestion extends Component<EditQuestionProps, EditQuestionState> {\n  constructor(props: EditQuestionProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n      loading: false,\n      id: this.props.selectedQuestion.id,\n      course: this.props.selectedQuestion.course,\n      question: this.props.selectedQuestion.question,\n      type: this.props.selectedQuestion.type,\n      chapters: this.props.selectedQuestion.chapters,\n      customNumber: this.props.selectedQuestion.customNumber,\n      marks: this.props.selectedQuestion.marks,\n      answer: this.props.selectedQuestion.answer,\n      selectedLanguage: QuestionLanguages[0],\n      showFilter: false,\n      selectedKey: null,\n      showQuestionChapters: false,\n\t\t};\n\t}\n\n  QuestionLang = (question: QuestionItemInterface[]) => {\n    let res = question.find(itm => itm.language === this.state.selectedLanguage.key);\n    console.log(\"sel: \", res);\n    return res !== undefined ? res : question[0];\n  }\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  }\n\n  actionStatus = (status: boolean, msg: string) => {\n    this.props.PushPopupAlert({\n      title: status === true ? \"Success!\" : \"Failed!\",\n      description: msg,\n      theme: status === true ? PopupAlertTheme.success : PopupAlertTheme.danger,\n    });\n  }\n\n  handleUpdateQuestionDetails = (question: QuestionItemInterface) => {\n    let updatedQuestion: QuestionItemInterface[] = [];\n    for (let current of this.state.question) {\n      if (question.language === current.language) {\n        updatedQuestion.push(question);\n      } else {\n        updatedQuestion.push(current);\n      }\n    }\n    this.setState({ question: updatedQuestion });\n  }\n\n  updateAnswerSingleMultiple = (question: QuestionItemInterface, editedAnswerIndex: string, editedAnswer: QuestionAnswerInterface) => {\n    let updatedQuestion: QuestionItemInterface[] = [];\n    for (let current of this.state.question) {\n      if (question.language === current.language) {\n        let res: QuestionAnswerInterface[] = [];\n        for (let answer = 0; answer < current.answer.length; answer++) {\n          if (current.answer.find(itm => itm.value === editedAnswerIndex) !== undefined) {\n            if (current.answer[answer].value === editedAnswerIndex) {\n              res.push(editedAnswer);\n            } else {\n              res.push(current.answer[answer])\n            }\n          }\n        }\n        updatedQuestion.push({\n          description: question.description,\n          language: question.language,\n          status: question.status,\n          title: question.title,\n          answer: res\n        })\n      } else {\n        updatedQuestion.push(current);\n      }\n    }\n    this.setState({ question: updatedQuestion });\n  }\n\n  addAnswerSingleMultiple = (question: QuestionItemInterface, addedAnswer: QuestionAnswerInterface) => {\n    let updatedQuestion: QuestionItemInterface[] = [];\n    let newFiltered: QuestionAnswerInterface[] = [];\n    for (let current of this.state.question) {\n      if (question.language === current.language) {\n        newFiltered = current.answer;\n        if (getQuestionType(this.props.questionTypes.questionTypes, this.state.type) === questionTypeElementsType.MultipleChoice) {\n          newFiltered.push(addedAnswer);\n        } \n        if (getQuestionType(this.props.questionTypes.questionTypes, this.state.type) === questionTypeElementsType.SingleMultiple) {\n          if (addedAnswer.status === true && current.answer.filter(itm => itm.status === true).length !== 0) {\n            newFiltered.push({\n              id: addedAnswer.id,\n              value: addedAnswer.value,\n              status: false,\n            });\n          } else {\n            newFiltered.push(addedAnswer);\n          }\n        }\n        updatedQuestion.push({\n          description: question.description,\n          language: question.language,\n          status: question.status,\n          title: question.title,\n          answer: newFiltered\n        })\n      } else {\n        updatedQuestion.push(current);\n      }\n    }\n    this.setState({ question: updatedQuestion });\n  }\n\n  removeAnswerSingleMultiple = (question: QuestionItemInterface[], removed: QuestionAnswerInterface) => {\n    if (window.confirm(\"Are you sure do ypu want to delete?\") === true) {\n      let updatedQuestion: QuestionItemInterface[] = [];\n      for (let current of this.state.question) {\n        let res: QuestionAnswerInterface[] = current.answer.filter(itm => itm.id !== removed.id);\n        updatedQuestion.push({\n          description: current.description,\n          language: current.language,\n          status: current.status,\n          title: current.title,\n          answer: res\n        });\n      }\n      this.setState({ question: updatedQuestion });\n    }\n  }\n\n  editSingleMultipleStatus = (answer_id: string, status: boolean) => {\n    let updatedQuestion: QuestionItemInterface[] = [];\n    for (let current of this.state.question) {\n      let res: QuestionAnswerInterface[] = [];\n      for (let ans of current.answer) {\n        if (ans.status === true) {\n          res.push({\n            id: ans.id,\n            value: ans.value,\n            status: false,\n          });\n        }else if (ans.id === answer_id) {\n          res.push({\n            id: ans.id,\n            value: ans.value,\n            status: status,\n          });\n        }\n        else {\n          res.push(ans);\n        }\n      }\n      updatedQuestion.push({\n        description: current.description,\n        language: current.language,\n        status: current.status,\n        title: current.title,\n        answer: res\n      });\n    }\n    this.setState({ question: updatedQuestion });\n  }\n\n  setAddChapter = (chapter_id: string) => {\n    if (this.state.chapters.find(itm => itm === chapter_id) === undefined) {\n      this.setState({ chapters: [...this.state.chapters, chapter_id] });\n    } else {\n      this.setState({ chapters: this.state.chapters.filter(itm => itm !== chapter_id) });\n    }\n  }\n\n  submitEditedQuestion = async () => {\n    if (this.state.chapters.length === 0) {\n      return this.props.PushPopupAlert({\n        title: \"Error\",\n        description: \"Please choose question chapters!\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setState({ loading: true });\n    let addedQuestion = {\n      id: this.state.id,\n      course: this.state.course,\n      question: this.state.question,\n      type: this.state.type,\n      chapters: this.state.chapters,\n      customNumber: this.state.customNumber,\n      marks: this.state.marks,\n      answer: this.state.answer,\n    }\n    await this.props.UpdateQuestion(addedQuestion, this.setLoading, this.actionStatus);\n    // Write twice to replace current state\n    this.props.addExamQuestion(addedQuestion);\n    this.props.addExamQuestion(addedQuestion);\n    this.props.unSelectQuestion();\n  }\n\n  componentDidMount = () => {\n    if (this.props.questionTypes.questionTypes === null || this.props.questionTypes.questionTypes.length === 0) {\n      this.props.loadQuestionTypes(this.setLoading);\n    }\n\n    if (this.props.course.courses === null || this.props.course.courses.length === 0) {\n      this.props.loadCourses(this.setLoading);\n    }\n  }\n\n  setSelectedCourse = (course: course | null) => {\n    if (course !== null) {\n      this.setState({ course: course.course_id });\n      this.setState({ showFilter: false });\n      this.setState({ chapters: [] });\n      this.setState({ showQuestionChapters: true });\n    }\n  }\n\n  setSelectedKey = (selectedKey: SelectedKeysEdit | null) => {\n    this.setState({ selectedKey: selectedKey });\n  }\n\n  updateMarks = (marks: number) => {\n    if (marks) {\n      this.setState({ marks: marks });\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        {this.state.loading === true ? \n        <div className=\"bg-white rounded px-4 py-5 mt-4\">\n          <Loading type={LoadingType.white} /> \n        </div>\n        :\n        <div className=\"bg-gray-100 shadow-md pb-2 rounded animate__animated animate__fadeIn animate__fast\">\n          <div className=\"flex flex-col items-center justify-between\">\n            <div className=\"flex flex-row items-center justify-between relative bottom-0 bg-white border-t-4 border-blue-500 w-full py-2 px-2 shadow-md\">\n              <div className=\"flex flex-row items-center gap-2\">\n                <div onClick={() => this.props.unSelectQuestion()} className=\"btn cursor-pointer bg-blue-100 text-blue-600 hover:bg-blue-200 h-full flex flex-row gap-2 items-center\"><BiArrowBack className=\"text-xl\" /> Back to list</div>\n                <div className=\"text-xl font-extrabold text-gray-600\">Edit question</div>\n              </div>\n              <div className=\"flex flex-row items-center gap-2\">\n                <div className=\"flex flex-row items-center justify-end\">\n                  {QuestionLanguages.map((item, i) => (\n                    <div onClick={() => this.setState({ selectedLanguage: item })} key={i + 1}\n                    className={`${this.state.selectedLanguage.key === item.key ? \"text-blue-600 bg-blue-50 rounded font-bold\" : \"text-gray-600\"} text-center text-sm px-3 py-2 cursor-pointer hover:bg-blue-50 hover:text-blue-600 hover:border-blue-600`}>\n                      {item.value}\n                    </div>\n                  ))}\n                </div>\n                <div onClick={() => this.submitEditedQuestion()} className=\"btn cursor-pointer bg-blue-600 text-white\">Save changes</div>\n              </div>\n            </div>\n          </div>\n          <form onSubmit={this.submitEditedQuestion} className=\"px-2 py-2\">\n            <div className=\"flex flex-row items-center justify-between border mb-3 text-sm gap-1 bg-white px-4 py-3 rounded\">\n              <div className=\"flex flex-col\">\n                <label className=\"text-gray-600 font-bold\">Selected course</label>\n                <span className=\"font-bold text-blue-600 flex flex-row items-center gap-2\">\n                  {/* <BsFillCaretRightFill className=\"text-xl\" /> */}\n                  {this.props.course.courses !== null && this.props.course.courses.find(itm => itm.course_id === this.state.course)?.course_code} -\n                  &nbsp;{this.props.course.courses !== null && this.props.course.courses.find(itm => itm.course_id === this.state.course)?.course_name}\n                </span>\n              </div>\n              <div className=\"flex flex-row items-center gap-2\">\n                {this.state.chapters.length === 0 ?\n                <div onClick={() => this.setState({ showQuestionChapters: true })} className={`bg-yellow-100 hover:bg-yellow-700 text-yellow-700 hover:text-white rounded px-3 py-2 cursor-pointer font-bold`}>\n                  Add chapters\n                </div> : \n                <div onClick={() => this.setState({ showQuestionChapters: true })} className=\"bg-blue-50 hover:bg-blue-200 text-blue-600 hover:text-blue-800 rounded px-3 py-2 cursor-pointer font-bold\">\n                  Edit chapters ({this.state.chapters.length})\n                </div>\n                }\n\n                <div onClick={() => this.setState({ showFilter: true })} className=\"bg-gray-100 text-gray-600 rounded-full flex items-center justify-center h-12 w-12 cursor-pointer hover:bg-blue-100 hover:text-blue-600\">\n                  <MdModeEdit className=\"text-3xl\" />\n                </div>\n              </div>\n            </div>\n            <div className=\"flex flex-row items-center justify-between mb-3 text-sm bg-white px-4 py-3 rounded border gap-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"text-gray-600 font-bold flex flex-row items-center justify-between\">\n                  Question title\n                  {this.state.selectedKey !== null && this.state.selectedKey === SelectedKeysEdit.Title &&\n                  <div onClick={() => this.setState({ selectedKey: null })} className=\"bg-blue-100 text-blue-600 rounded-full flex items-center justify-center h-12 w-12 cursor-pointer hover:bg-blue-200 hover:text-blue-700\">\n                    <HiCheck className=\"text-3xl\" />\n                  </div>}\n                </div>\n                {this.state.selectedKey !== SelectedKeysEdit.Title &&\n                <label className=\"text-blue-600 font-bold flex flex-row gap-2 items-center\">\n                  {/* <BsFillCaretRightFill className=\"text-xl\" /> */}\n                  {this.QuestionLang(this.state.question).title}\n                </label>}\n                {this.state.selectedKey !== null && this.state.selectedKey === SelectedKeysEdit.Title &&\n                <HandleInputProps \n                languages={QuestionLanguages} \n                questionItems={this.state.question}\n                selectedKey={this.state.selectedKey}\n                handleUpdateQuestionDetails={this.handleUpdateQuestionDetails} />}\n              </div>\n              {this.state.selectedKey !== SelectedKeysEdit.Title &&\n              <div onClick={() => this.setState({ selectedKey: SelectedKeysEdit.Title })} className=\"bg-gray-100 text-gray-600 rounded-full flex items-center justify-center h-12 w-12 cursor-pointer hover:bg-blue-100 hover:text-blue-600\">\n                <MdModeEdit className=\"text-3xl\" />\n              </div>}\n            </div>\n            <div className=\"flex flex-row items-center justify-between mb-3 text-sm bg-white border px-4 py-3 rounded gap-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"text-gray-600 font-bold flex flex-row items-center justify-between\">\n                  Question details\n                  {this.state.selectedKey !== null && this.state.selectedKey === SelectedKeysEdit.Description &&\n                  <div onClick={() => this.setState({ selectedKey: null })} className=\"bg-blue-100 text-blue-600 rounded-full flex items-center justify-center h-12 w-12 cursor-pointer hover:bg-blue-200 hover:text-blue-700\">\n                    <HiCheck className=\"text-3xl\" />\n                  </div>}\n                </div>\n                {this.state.selectedKey !== SelectedKeysEdit.Description &&\n                <label className=\"text-blue-600 font-bold flex flex-row gap-2 items-center\">\n                  {/* <BsFillCaretRightFill className=\"text-xl\" /> */}\n                  {this.QuestionLang(this.state.question).description}\n                </label>}\n                {this.state.selectedKey !== null && this.state.selectedKey === SelectedKeysEdit.Description &&\n                <HandleInputProps \n                languages={QuestionLanguages} \n                questionItems={this.state.question}\n                selectedKey={this.state.selectedKey}\n                handleUpdateQuestionDetails={this.handleUpdateQuestionDetails} />}\n              </div>\n              {this.state.selectedKey !== SelectedKeysEdit.Description &&\n              <div onClick={() => this.setState({ selectedKey: SelectedKeysEdit.Description })} className=\"bg-gray-100 text-gray-600 rounded-full flex items-center justify-center h-12 w-12 cursor-pointer hover:bg-blue-100 hover:text-blue-600\">\n                <MdModeEdit className=\"text-3xl\" />\n              </div>}\n            </div>\n            \n            <QuestionAnswer \n              selectedQuestionType={getQuestionType(this.props.questionTypes.questionTypes, this.state.type)} \n              selectedQuestionItem={this.QuestionLang(this.state.question)} \n              wholeQuestion={this.state.question} \n              selectedLanguage={this.state.selectedLanguage} \n              updateAnswerSingleMultiple={this.updateAnswerSingleMultiple} \n              addAnswerSingleMultiple={this.addAnswerSingleMultiple}\n              removeAnswerSingleMultiple={this.removeAnswerSingleMultiple} \n              selectedKey={this.state.selectedKey} \n              setSelectedKey={this.setSelectedKey}\n              editSingleMultipleStatus={this.editSingleMultipleStatus} \n              marks={this.state.marks}\n              updateMarks={this.updateMarks}\n              />\n          </form>\n        </div>}\n        {this.state.showFilter === true &&\n        <Modal\n          title=\"Filter courses by school levels\"\n          backDrop={true}\n          theme={Themes.default}\n          close={() => this.setState({ showFilter: false })}\n          backDropClose={true}\n          widthSizeClass={ModalSize.large}\n          displayClose={true}\n          padding={{title: true,}}>\n          <Courses setSelectedCourse={this.setSelectedCourse} selected_course_id={this.state.course} />\n        </Modal>}\n        {this.state.showQuestionChapters === true && \n        <Modal\n          title=\"Question course chapters\"\n          backDrop={true}\n          theme={Themes.default}\n          close={() => this.setState({ showQuestionChapters: false })}\n          backDropClose={true}\n          widthSizeClass={ModalSize.large}\n          displayClose={true}\n          padding={{title: true,}}>\n          {this.props.course.selected_course !== null &&\n            <QuestionChapters \n              selectedCourse={this.props.course.courses && this.props.course.courses.find(itm => itm.course_id === this.state.course)} \n              addedChapters={this.state.chapters} \n              setAddChapter={this.setAddChapter} />}\n              <div className=\"flex flex-row items-center justify-between mt-3 px-2 py-2\">\n                <div className=\"\"></div>\n                <div className=\"btn bg-blue-600 text-white cursor-pointer\" onClick={() => this.setState({ showQuestionChapters: false })}>Done</div>\n              </div>\n        </Modal>}\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  course,\n  schoolLevels,\n  questionBank,\n  questionTypes,\n  system,\n  prepareExam,\n}: StoreState): { auth: Auth; course: courseStoreInterface; schoolLevels: schoolLevelsStoreInterface; questionBank: QuestionBankStoreInterface; questionTypes: questionTypesStoreInterface; system: System; prepareExam: PrepareExamsStoreInterface; } => {\n  return { auth: auth, course: course, schoolLevels: schoolLevels, questionBank: questionBank, questionTypes: questionTypes, system: system, prepareExam: prepareExam, };\n};\n\nconst EditQuestion = connect(mapStateToProps, {\n  loadCourses,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  setUploadedQuestions,\n  loadQuestionTypes,\n  PushPopupAlert,\n  UpdateQuestion,\n  addExamQuestion,\n})(_EditQuestion);\n\nexport default EditQuestion;","import React, { useState } from 'react'\nimport { HiCheck } from 'react-icons/hi';\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im';\nimport { MdBookmark, MdModeEdit } from 'react-icons/md';\nimport { LanguageInterface, QuestionAnswerInterface, QuestionItemInterface, QuestionLanguages, questionTypeElementsType } from '../../../../../interfaces/question';\nimport { SelectedKeysEdit } from './EditQuestion';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FaCheckCircle, FaTimesCircle } from 'react-icons/fa';\nimport { RiShieldCheckFill } from 'react-icons/ri';\n\ninterface QuestionAnswerProps {\n  selectedQuestionType: questionTypeElementsType | null;\n  selectedQuestionItem: QuestionItemInterface;\n  wholeQuestion: QuestionItemInterface[];\n  selectedLanguage: LanguageInterface;\n  updateAnswerSingleMultiple: (question: QuestionItemInterface, editedAnswerIndex: string, editedAnswer: QuestionAnswerInterface) => void;\n  addAnswerSingleMultiple: (question: QuestionItemInterface, addedAnswer: QuestionAnswerInterface) => void;\n  removeAnswerSingleMultiple: (question: QuestionItemInterface[], removedAnswer: QuestionAnswerInterface) => void;\n  selectedKey: SelectedKeysEdit | null;\n  setSelectedKey: (selectedKey: SelectedKeysEdit | null) => void;\n  editSingleMultipleStatus: (answer_id: string, status: boolean) => void;\n  marks: number;\n  updateMarks: (marks: number) => void;\n}\n\nconst QuestionAnswer = (props: QuestionAnswerProps) => {\n  const [addedAnswer, setAddedAnswer] = useState<{lang: LanguageInterface; answer: QuestionAnswerInterface}[]>([]);\n  const [showAddAnswerStatus, setShowAddAnswer] = useState<boolean>(false);\n  const AddAnswer = () => {\n    if (addedAnswer !== null) {\n      if (addedAnswer.length !== QuestionLanguages.length) {\n        alert(\"Please fill question answer!\" + addedAnswer.length);\n      } else {\n        for (let answer of addedAnswer) {\n          let selectedQL = props.wholeQuestion.find(itm => itm.language === answer.lang.key);\n          if (selectedQL !== undefined) {\n            props.addAnswerSingleMultiple(selectedQL, answer.answer);\n          }\n        }\n        setAddedAnswer([]);\n        setShowAddAnswer(false);\n      }\n    }\n  }\n  const handleAnswer = (lang: LanguageInterface, answer: QuestionAnswerInterface) => {\n    if (addedAnswer.find(itm => itm.lang.key === lang.key) === undefined) {\n      setAddedAnswer([...addedAnswer, { lang: lang, answer: answer }]);\n    } else {\n      setAddedAnswer([...addedAnswer.filter(itm => itm.lang.key !== lang.key), { lang: lang, answer: answer }]);\n    }\n  }\n\n  const handleStatus = (status: boolean) => {\n    if (addedAnswer.length > 0) {\n      let backup = [];\n      for (let itm of addedAnswer) {\n        backup.push({\n          lang: itm.lang,\n          answer: { value: itm.answer.value, status: status, id: itm.answer.id }\n        })\n      }\n      setAddedAnswer(backup);\n    }\n  }\n  return (\n    <div className=\"flex flex-col mb-3 text-sm gap-2 bg-white px-2 py-2 rounded\">\n      {showAddAnswerStatus === true && \n        <label className=\"text-gray-600 font-bold\">Add question Answer</label>\n      }\n      \n      {showAddAnswerStatus === false ?\n      <div className=\"flex flex-row items-center gap-3 animate__animated animate__fadeIn animate__fast\">\n        <div onClick={() => setShowAddAnswer(true)} className=\"btn bg-blue-50 text-blue-600 cursor-pointer hover:bg-blue-200 hover:text-blue-800 border border-blue-300 w-32\">\n          Add answer\n        </div>\n        <div className=\"w-full flex flex-row items-center justify-between pr-2 py-1\">\n          <div className=\"text-gray-600 font-bold flex flex-row items-center\">\n            {props.selectedKey !== null && props.selectedKey === SelectedKeysEdit.QuestionAnswer ?\n            \"Edit Question answers\" : \"Question answers\"}\n          </div>\n          <div className=\"flex flex-row gap-2 items-center\">\n            {props.selectedKey !== null && props.selectedKey === SelectedKeysEdit.QuestionAnswer &&\n            <>\n            <div className=\"flex flex-row items-center justify-end gap-2\">\n              <span className=\"font-bold text-gray-600\">Marks</span>\n              <input onChange={(e: React.ChangeEvent<HTMLInputElement>) => props.updateMarks(parseInt(e.target.value))} type=\"number\" placeholder=\"Marks\" value={props.marks} className=\"input-gray-lg h-10\" />\n            </div>\n            <div onClick={() => props.setSelectedKey(null)} className=\"bg-blue-100 text-blue-600 rounded-full flex items-center justify-center h-12 w-12 cursor-pointer hover:bg-blue-200 hover:text-blue-700\">\n              <HiCheck className=\"text-3xl\" />\n            </div>\n            </>}\n            {props.selectedKey !== SelectedKeysEdit.QuestionAnswer &&\n            <>\n            <div className=\"px-4 py-2 rounded-full bg-blue-100 text-blue-600 font-bold\">Marks: {props.marks}</div>\n            <div onClick={() => props.setSelectedKey(SelectedKeysEdit.QuestionAnswer)} className=\"bg-gray-100 text-gray-600 rounded-full flex items-center justify-center h-12 w-12 cursor-pointer hover:bg-blue-100 hover:text-blue-600\">\n              <MdModeEdit className=\"text-3xl\" />\n            </div>\n            </>}\n          </div>\n        </div>\n      </div>\n      :\n      <div className=\"mb-2 gap-3 bg-white rounded animate__animated animate__fadeIn animate__fast\">\n        <div className=\"flex flex-col gap-2\">\n        {QuestionLanguages.map((item, i) => (\n          <div key={i + 1}className=\"flex flex-col gap-2\">\n            <span className=\"font-bold text-blue-600\">{item.value}</span>\n          <input \n            value={addedAnswer.length > 0 ? addedAnswer.find(itm => itm.lang.key === item.key)?.answer.value : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => \n              handleAnswer(\n                item, \n                { \n                  id: addedAnswer.length > 0 ? addedAnswer[0].answer.id : uuidv4(),\n                  value: e.target.value, \n                  status: addedAnswer.length > 0 ? addedAnswer[0].answer.status : false\n                })}\n            type=\"text\" className=\"input-gray-lg\" />\n          </div>\n        ))}\n        </div>\n        <div className=\"flex flex-row mt-3 items-center justify-end gap-2\">\n        <div \n        onClick={() => handleStatus(addedAnswer.length > 0 ? !(addedAnswer[0].answer.status) : false)}\n        className={`flex flex-row items-center gap-2 cursor-pointer ${addedAnswer.length > 0 && addedAnswer[0].answer.status === true ? \"text-blue-600\" : \"text-gray-600\"} hover:text-blue-600`}>\n          {addedAnswer.length > 0 && addedAnswer[0].answer.status === false ?\n          <ImCheckboxUnchecked className=\"text-2xl cursor-pointer\" /> :\n          <ImCheckboxChecked className=\"text-2xl cursor-pointer\" />}\n          <span className=\"font-bold text-xl\">{addedAnswer.length > 0 && addedAnswer[0].answer.status === true ? \"True\" : \"False\"}</span>\n        </div>\n        <div onClick={() => AddAnswer()} className=\"btn bg-blue-600 text-white hover:bg-blue-800 cursor-pointer w-24 text-center\">Add</div>\n        <div onClick={() => setShowAddAnswer(false)} className=\"btn bg-gray-500 text-white hover:bg-gray-700 cursor-pointer w-24 text-center\">Cancel</div>\n      </div>\n      </div>}\n      {showAddAnswerStatus === false &&\n      <div className=\"rounded bg-white px-2 py-2\">{console.log(props.selectedQuestionType)}\n        {(props.selectedQuestionType === questionTypeElementsType.SingleMultiple || \n        props.selectedQuestionType === questionTypeElementsType.MultipleChoice) && \n        props.selectedQuestionItem.answer.map((item, i) => (\n          <div className={`flex flex-row items-center justify-between mb-2 gap-3 ${props.selectedKey !== SelectedKeysEdit.QuestionAnswer ? \"border-b border-gray-300\" : \"\"}`}>\n            {props.selectedKey === SelectedKeysEdit.QuestionAnswer ?\n            <input\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                let check = props.wholeQuestion.find(itm => itm.language === props.selectedLanguage.key);\n                if (check === undefined) {\n                  check = props.wholeQuestion[0];\n                }\n                props.updateAnswerSingleMultiple(\n                  check, item.value, {\n                    value: e.target.value,\n                    status: item.status,\n                    id: item.id,\n                  }\n                )\n              }}\n              key={i + 1}\n              value={`${item.value}`}\n              type=\"text\" \n              className=\"input-gray-lg w-full border-2 border-gray-500\" /> :\n              <div className=\"w-full flex flex-row items-center gap-3 py-2\">\n                {item.status === true ?\n                <RiShieldCheckFill className=\"text-2xl text-blue-600\" /> :\n                <MdBookmark className=\"text-2xl text-gray-500\" />}\n                {item.value}\n              </div>}\n              {props.selectedKey === SelectedKeysEdit.QuestionAnswer ?\n              <div \n                onClick={() => {\n                  let check = props.wholeQuestion.find(itm => itm.language === props.selectedLanguage.key);\n                  if (check === undefined) {\n                    check = props.wholeQuestion[0];\n                  }\n                  props.editSingleMultipleStatus(\n                    item.id, !item.status\n                  )\n                }}\n                className={`flex flex-row items-center gap-2 cursor-pointer ${item.status === true ? \"text-blue-600\" : \"text-gray-600\"} hover:text-blue-600 w-40`}>\n                  {item.status === false ?\n                  <ImCheckboxUnchecked className=\"text-2xl cursor-pointer\" /> :\n                  <ImCheckboxChecked className=\"text-2xl cursor-pointer\" />}\n                  <span className=\"font-bold \">{item.status === true ? \"Correct\" : \"Incorrect\"}</span>\n                </div> :\n                <div className=\"w-28 flex justify-end text-center\">\n                  <div className={`font-bold px-3 py-2 rounded-full w-28 ${item.status === true ? \"text-green-600 bg-white\" : \"text-gray-600 bg-white\"}`}>\n                    {item.status === true ? \n                      <div className=\"flex flex-row gap-2 items-center\">\n                        <FaCheckCircle className=\"text-xl\" /> <span>Correct</span>\n                      </div> : \n                      <div className=\"flex flex-row gap-2 items-center\">\n                        <FaTimesCircle className=\"text-xl\" /> <span>Incorrect</span>\n                      </div>\n                    }\n                  </div>\n                </div>}\n              <div \n              onClick={() => {\n                props.removeAnswerSingleMultiple(props.wholeQuestion, item)\n              }}\n              className=\"btn bg-red-50 text-red-600 hover:bg-red-200 hover:text-red-800 cursor-pointer\">Remove</div>\n          </div>\n        ))\n        }\n      </div>}\n    </div>\n  )\n}\n\nexport default QuestionAnswer\n","import React, { useState } from 'react'\nimport { LanguageInterface, QuestionItemInterface } from '../../../../../interfaces';\nimport { SelectedKeysEdit } from './EditQuestion';\n\ninterface HandleInputProps {\n  languages: LanguageInterface[];\n  questionItems: QuestionItemInterface[];\n  selectedKey: SelectedKeysEdit;\n  handleUpdateQuestionDetails: (question: QuestionItemInterface) => void;\n}\n\ninterface editedQuestionInterface {\n  lang: LanguageInterface;\n  value: string;\n  status: boolean;\n}\n\nconst HandleInput = (props: HandleInputProps) => {\n  if (props.selectedKey === SelectedKeysEdit.Title) {\n  return (\n    <div>\n      {props.languages.map((item, i) => (\n        <div className=\"flex flex-row items-center animate__animated animate__fadeInDown animate__fast\">\n          <span className=\"font-bold w-24 truncate text-blue-600 flex flex-row items-center gap-2\">\n            {item.value}\n          </span>\n          <input \n            key={i + 1}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              let check = props.questionItems.find(itm => itm.language === item.key);\n              if (check === undefined) {\n                check = props.questionItems[0];\n              }\n              props.handleUpdateQuestionDetails({\n                description: check.description,\n                language: check.language,\n                status: check.status,\n                title: e.target.value,\n                answer: check.answer\n              })\n            }}\n            value={props.questionItems.find(itm => itm.language === item.key)?.title}\n            type=\"text\" className=\"input-gray-lg w-full mt-3\" />\n        </div>\n      ))}\n    </div>\n  )} else if (props.selectedKey === SelectedKeysEdit.Description) {\n    return (\n      <div>\n        {props.languages.map((item, i) => (\n          <div className=\"flex flex-row items-center animate__animated animate__fadeInDown animate__fast\">\n            <span className=\"font-bold w-24 truncate text-blue-600 flex flex-row items-center gap-2\">\n              {item.value}\n            </span>\n            <textarea \n              key={i + 1}\n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n                let check = props.questionItems.find(itm => itm.language === item.key);\n                if (check === undefined) {\n                  check = props.questionItems[0];\n                }\n                props.handleUpdateQuestionDetails({\n                  description: e.target.value,\n                  language: check.language,\n                  status: check.status,\n                  title: check.title,\n                  answer: check.answer\n                })\n              }}\n              value={props.questionItems.find(itm => itm.language === item.key)?.description}\n              className=\"input-gray-lg w-full mt-3\"></textarea>\n          </div>\n        ))}\n      </div>\n    )} else {\n      return <div></div>\n    }\n}\n\nexport default HandleInput\n","import React from 'react'\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im'\nimport { course } from '../../../../../interfaces'\n\ninterface QuestionChaptersProps {\n  selectedCourse: course | null | undefined;\n  addedChapters: string[];\n  setAddChapter: (chapter: string) => void;\n}\n\nconst QuestionChapters = (props: QuestionChaptersProps) => {\n  if (props.selectedCourse === undefined || props.selectedCourse === null) {\n    return (\n      <div>\n        <div className=\"text-6xl text-center text-red-800 font-bold rounded bg-red-100 px-3 py-4\">\n          Invalid course selected!\n        </div>\n      </div>\n    )\n  }\n  else if (props.selectedCourse !== undefined && props.selectedCourse !== null && props.selectedCourse.chapters?.length === 0) {\n    return (\n      <div>\n        <div className=\"text-3xl text-center text-yellow-800 font-bold rounded bg-yellow-100 px-3 py-4\">\n          No chapter available for this course!\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"px-2 pb-2\">\n        <div className=\"text-sm text-gray-500 font-bold\">Selected course</div>\n        <div className=\"bg-blue-50 text-blue-600 font-bold rounded px-3 py-2\">\n          {props.selectedCourse.course_code} - {props.selectedCourse.course_name}\n        </div>\n        <div className=\"flex flex-col gap-2 mt-3\">\n          {props.selectedCourse.chapters !== undefined && props.selectedCourse.chapters.length === 0 ? \n          <div>No chapters found!</div>:\n          props.selectedCourse.chapters && props.selectedCourse.chapters.map((item, i) => (\n            <div \n            onClick={() => props.setAddChapter(item.id)}\n            className={`${props.addedChapters.find(itm => itm === item.id) ? \"text-blue-600\" : \"text-gray-600\"} border rounded px-2 py-2 flex flex-row items-center gap-3 hover:border-blue-500 hover:bg-blue-50 hover:text-blue-600 cursor-pointer`}>\n              {props.addedChapters.find(itm => itm === item.id) ? \n              <ImCheckboxChecked className=\"text-2xl cursor-pointer\" /> :\n              <ImCheckboxUnchecked className=\"text-2xl cursor-pointer\" />}\n              <span>{item.name}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default QuestionChapters\n","import { questionType, questionTypeElements, questionTypeElementsType } from \"../interfaces/question\";\n\nexport const getQuestionType = (question_types: questionType[] | null, type_id: string) => {\n  let type: questionTypeElementsType | null = null;\n  if (question_types !== null) {\n    let check = question_types.find(itm => itm.id === type_id);\n    if (check !== undefined) {\n      let check_type = questionTypeElements.find(itm => check && itm.key === check.element);\n      if (check_type !== undefined) {\n        type = check_type.key\n      }\n    }\n  }\n  return type;\n}","import {useState} from 'react'\nimport * as Interfaces from '../../../../interfaces/index';\nimport { FiChevronDown, FiChevronRight } from 'react-icons/fi';\nimport { searchItem } from '../ApplicationPositions';\n\ninterface SchoolLevelsItemPropsInterface {\n  educationCategoryDetails: Interfaces.education_category;\n  schoolLevels: Interfaces.school_level[] | null;\n  searchLevel: searchItem | null;\n  setSearchLevel: (educationCategory: Interfaces.education_category | null, schoolLevel: Interfaces.school_level | null) => void;\n}\n\nconst SchoolLevelsItem = (props: SchoolLevelsItemPropsInterface):JSX.Element => {\n  const [levelsDropDown, setLevelsDropDown] = useState<boolean>(false);\n  const initializeItem = (levelsDropDown: boolean, props: any) => { \n    if ((props.searchLevel !== null && props.searchLevel.schoolLevel === null) || (props.searchLevel !== null && props.educationCategoryDetails.education_institute_id !== props.searchLevel.educationCategory.education_institute_id) || props.setSearchLevel === null) {\n      levelsDropDown === false && props.setSearchLevel(null, null); \n      levelsDropDown === false && props.setSearchLevel(props.educationCategoryDetails, null); \n    }\n  }\n  const activateItem = (levelsDropDown: boolean, props: any) => { \n    props.setSearchLevel(null, null); \n    props.setSearchLevel(props.educationCategoryDetails, null); \n  }\n  const activateLevelItem = (educationCate: Interfaces.education_category, item: Interfaces.school_level) => { \n    props.setSearchLevel(null, null); \n    props.setSearchLevel(educationCate, item); \n  }\n  return (\n    <div className=\"flex flex-col\">\n      <div onClick={() => {setLevelsDropDown(!levelsDropDown); initializeItem(levelsDropDown, props)}} className=\"flex flex-row justify-between items-center py-2 px-2 bg-blue-100 rounded cursor-pointer hover:bg-blue-200 mb-2\">\n        <div className=\"flex flex-col pl-1\">\n          <span className=\"uppercase text-blue-600 text-lg font-bold\">{props.educationCategoryDetails.education_category_title}</span>\n          <span className=\"text-xs\">{props.educationCategoryDetails.description}</span>\n        </div>\n        <div className=\"px-1 py-1 rounded-full flex items-center justify-center cursor-pointer text-blue-600 bg-blue-100 hover:bg-white hover:text-blue-800\">\n          {levelsDropDown === false ? <FiChevronRight className=\"text-2xl\" /> : <FiChevronDown className=\"text-2xl\" />}\n        </div>\n      </div>\n      {levelsDropDown === true &&\n      <div className=\"flex flex-col\">\n        <div onClick={() => activateItem(levelsDropDown, props)} className={`flex flex-row justify-between items-center py-2 px-2 bg-blue-50 rounded cursor-pointer hover:bg-blue-50 mb-2 ml-5 border ${props.searchLevel !== null && props.searchLevel.educationCategory !== null && props.searchLevel.educationCategory.education_institute_id === props.educationCategoryDetails.education_institute_id && props.searchLevel.schoolLevel === null ? \"border-blue-500\" : \"border-blue-100\"} hover:border-blue-500`}>\n          <div className=\"flex flex-col pl-1\">\n            <span className=\"text-blue-700 text-sm font-bold\">All levels</span>\n          </div>\n        </div>\n        {console.log(\"Institute: \", props.educationCategoryDetails)}\n        {props.schoolLevels === null ? \"Loading...\" :\n        props.schoolLevels.length === 0 ? \"No levels found\" :\n        props.schoolLevels.map((item, i) => (\n          item.education_institute.find(itm => itm === props.educationCategoryDetails.education_institute_id) && \n          <div onClick={() => activateLevelItem(props.educationCategoryDetails, item)} key={i + 1} className={`flex flex-row justify-between items-center py-2 px-2 bg-blue-50 rounded cursor-pointer hover:bg-blue-50 mb-2 ml-5 border ${props.searchLevel !== null && props.searchLevel.schoolLevel !== null && props.searchLevel.schoolLevel === item && props.searchLevel.educationCategory !== null && props.searchLevel.educationCategory.education_institute_id === props.educationCategoryDetails.education_institute_id ? \"border-blue-500\" : \"border-blue-100\"} hover:border-blue-500`}>\n            <div className=\"flex flex-col pl-1\">\n              <span className=\"text-blue-700 text-sm font-bold\">{item.school_level_name}</span>\n            </div>\n          </div>\n        ))}\n      </div>}\n    </div>\n  )\n}\n\nexport default SchoolLevelsItem\n","import SchoolLevelsItem from './SchoolLevelsItem'\nimport * as Interfaces from '../../../../interfaces/index';\nimport { searchItem } from '../ApplicationPositions';\nimport Loading from '../../../../components/Loading/Loading';\n\ninterface SchoolLevelsFilterPropsInterface {\n  educationCategories: Interfaces.education_category[] | null;\n  schoolLevels: Interfaces.school_level[] | null;\n  searchLevel: searchItem | null;\n  setSearchLevel: (educationCategory: Interfaces.education_category | null, schoolLevel: Interfaces.school_level | null) => void\n  setSchoolLevelFilterFn: (status: boolean) => void;\n}\n\nconst SchoolLevelsFilter = (props: SchoolLevelsFilterPropsInterface) => {\n  return (\n    <div className=\"col-span-12 md:col-span-4 md:static w-full top-2\">\n      <div className=\"bg-white shadow rounded-sm px-2 py-2\">\n        {console.log(props.educationCategories)}\n        {props.educationCategories === null ? <Loading /> :\n        props.educationCategories.length === 0 ? \"No Education categories available\" :\n        props.educationCategories.map((item, i) => (\n          <SchoolLevelsItem \n            key={i + 1} educationCategoryDetails={item} \n            schoolLevels={props.schoolLevels}\n            searchLevel={props.searchLevel}\n            setSearchLevel={props.setSearchLevel}\n            />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default SchoolLevelsFilter\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;"],"sourceRoot":""}
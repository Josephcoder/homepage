{"version":3,"sources":["containers/AdminDashboard/DashboardLabels.tsx","containers/AdminDashboard/DashBoardTitle.tsx","containers/AdminDashboard/index.tsx","containers/SessionSettings/NoSession.tsx","actions/settings.ts","containers/AdminDashboard/DashboardLabelItem.tsx"],"names":["DashboardLabels","props","className","DashboardLabelItem","title","icon","FaUsers","iconColor","count","applicants","IoDocumentTextSharp","positions","countOver","allPositions","MdFolderSpecial","applications","AiOutlineFieldTime","shortlisted","rejected","MdCheck","MdClose","React","memo","connect","auth","GetApplicationPerPeriod","PushPopupAlert","reportTitle","FC_HasInstitute","education_institution_id","education_categories","length","map","education","i","onClick","loading","loadingEducation","setThisEducation","FC_OnInstitutionChanged","education_institute_id","thisEducation","education_category_title","loadingApplications","application_sessions","value","thisPeriod","disabled","onChange","e","setThisPeriod","target","setLoadingApplications","FC_OnSessionChanged","session","item","_id","session_plan_name","Index","setLoading","setState","setLoadingEducation","institution_id","FC_GetPositionsByInstitution","status","msg","console","log","theme","PopupAlertTheme","danger","FC_GetAllSessionByInstitution","errorMsg","sessionData","isEmptyOrSpaces","warning","activeSession","find","is_active","session_id","FC_GetApplicationCountPerPeriod","data","applicationsCounts","errorToText","componentDidMount","loadEducationCategories","_data","state","setSortOrder","thisOrder","sortOrder","setSortProperty","thisProperty","sortProperty","setIsSorted","isSorted","setSort","FC_PositionCount","allPosition","allCounts","result","labels","position_key","elementCounts","totalApplicationOnPosition","position_id","rejectedCounts","totalRejectedApplicationApplication","shortlistedCounts","totalShortListedApplication","push","position_name","position_title","total","chooseSession","displayTabs","this","systemPositions","NoSession","DATA_POSITIONS","allEducation","totalApplicants","totalApplications","id","colSpan","sortThisArray","Component","AdminDashboard","locations","schoolLevels","dashboard","course","system_settings","sessionPlan","roomLocation","allSessionPlans","getAllRoom","loadCourses","description","content","undefined","url","API","AUTH","getSystemSettings","callback","dispatch","a","setAxiosToken","axios","get","res","type","ActionTypes","GET_SYSTEM_SETTINGS","payload","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","task","key","permitted","GET_TASK_ACCESS","getPositions","APPLICATION","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","IconDefined","toAnyDigit","displayNumbers"],"mappings":"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","file":"static/js/41.6c5fe871.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport { AiOutlineFieldTime } from \"react-icons/ai\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { IoDocumentTextSharp } from \"react-icons/io5\";\nimport { MdCheck, MdClose, MdFolderSpecial } from \"react-icons/md\";\nimport { RiLoaderFill } from \"react-icons/ri\";\nimport DashboardLabelItem from \"./DashboardLabelItem\";\n\ntype DashboardLabelProps = {\n  applicants: number;\n  applications: number;\n  positions: number;\n  allPositions?: number;\n  shortlisted: number;\n  rejected: number;\n};\n\nconst DashboardLabels: FC<DashboardLabelProps> = (props) => {\n  return (\n    <div className=\"grid lg:grid-cols-4 md:grid-cols-3 sm:grid-cols-2 grid-cols-1 gap-4 items-center mx-auto\">\n      <DashboardLabelItem\n        title=\"Applicants\"\n        icon={FaUsers}\n        iconColor=\"blue\"\n        count={props.applicants}\n      />\n\n      <DashboardLabelItem\n        title=\"Positions\"\n        icon={IoDocumentTextSharp}\n        iconColor=\"gray\"\n        count={props.positions}\n        countOver={props.allPositions}\n      />\n\n      <DashboardLabelItem\n        title=\"Applications\"\n        icon={MdFolderSpecial}\n        iconColor=\"indigo\"\n        count={props.applications}\n      />\n\n      <DashboardLabelItem\n        title=\"Remaining\"\n        icon={AiOutlineFieldTime}\n        iconColor=\"yellow\"\n        count={props.applications - (props.shortlisted + props.rejected)}\n      />\n\n      <DashboardLabelItem\n        title=\"Shortlisted\"\n        icon={MdCheck}\n        iconColor=\"green\"\n        count={props.shortlisted}\n      />\n\n      <DashboardLabelItem\n        title=\"Rejected\"\n        icon={MdClose}\n        iconColor=\"red\"\n        count={props.rejected}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(DashboardLabels);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { MdBrightness1 } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport { GetApplicationPerPeriod } from \"../../actions/dashboard\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { SessionPlanInterface } from \"../../interfaces\";\nimport { education_category } from \"../../interfaces/education_category\";\nimport { StoreState } from \"../../reducers\";\nimport { FC_HasInstitute } from \"../../utils/functions\";\n\ntype DashBoardTitleProps = {\n  reportTitle: string;\n  education_categories: education_category[] | null;\n  loading: boolean;\n  loadingApplications: boolean;\n  loadingEducation: boolean;\n  thisEducation: education_category | null;\n  allEducation: boolean;\n  periodChanged?: boolean;\n  setThisEducation: (value: education_category | null) => void;\n  thisPeriod: string;\n  setThisPeriod: (value: string) => void;\n  setPeriodChanged?: React.Dispatch<React.SetStateAction<boolean>>;\n  setLoadingApplications: (value: boolean) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  application_sessions: SessionPlanInterface[] | null;\n  FC_OnInstitutionChanged: (institution_id: string) => void;\n  FC_OnSessionChanged: (session_id: string) => void;\n\n  auth: Auth;\n};\n\nconst DashBoardTitle: React.FC<DashBoardTitleProps> = (props) => {\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.reportTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        {/* EDUCATION CATEGORY sections */}\n        <section>\n          {FC_HasInstitute(props.auth.education_institution_id) === false &&\n            props.education_categories &&\n            props.education_categories.length > 0 && (\n              <div className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n                {props.education_categories.map((education, i) => (\n                  <div\n                    key={i + education.education_institute_id}\n                    onClick={() => {\n                      !props.loading &&\n                        !props.loadingEducation &&\n                        props.setThisEducation(education);\n                      !props.loading &&\n                        !props.loadingEducation &&\n                        props.FC_OnInstitutionChanged(\n                          education.education_institute_id\n                        );\n                    }}\n                    className={`w-auto ${\n                      props.loading || props.loadingEducation\n                        ? \"cursor-not-allowed\"\n                        : \"cursor-pointer\"\n                    } ${\n                      props.thisEducation &&\n                      education.education_institute_id ===\n                        props.thisEducation.education_institute_id\n                        ? \"bg-blue-500 text-white font-bold\"\n                        : \"bg-gray-100 text-blue-800\"\n                    } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  >\n                    <div className=\"flex-1\">\n                      <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                      <span>{education.education_category_title}</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n        </section>\n        {/* end EDUCATION CATEGORY sections */}\n        <div className=\"mb-2\">\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              (props.loadingApplications ||\n                props.application_sessions === null) &&\n              \"cursor-wait\"\n            }`}\n            value={props.thisPeriod}\n            disabled={\n              props.loading ||\n              props.loadingApplications ||\n              props.loadingEducation ||\n              props.application_sessions === null\n            }\n            onChange={(e) => {\n              props.setThisPeriod(e.target.value);\n              props.setLoadingApplications(true);\n              props.FC_OnSessionChanged(e.target.value);\n            }}\n          >\n            {props.application_sessions &&\n              props.application_sessions.map((session, item) => (\n                <option key={session._id + item} value={session._id}>\n                  {session.session_plan_name}\n                </option>\n              ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    GetApplicationPerPeriod,\n    PushPopupAlert,\n  })(DashBoardTitle)\n);\n","import React, { Component } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { GrBarChart } from \"react-icons/gr\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport { MdTableChart } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport Chart from \"react-apexcharts\";\nimport {\n  Auth,\n  courseStoreInterface,\n  loadEducationCategories,\n  GetApplicationPerPeriod,\n  loadCourses,\n  PushPopupAlert,\n  DashboardCountType,\n  FC_GetApplicationCountPerPeriod,\n} from \"../../actions\";\nimport { getAllRoom } from \"../../actions/location\";\nimport { FC_GetAllSessionByInstitution } from \"../../actions/session\";\nimport { FC_GetPositionsByInstitution } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport {\n  education_category,\n  PositionAPI,\n  SessionPlanInterface,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { DashboardReducerType } from \"../../reducers/dashboard\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { RoomLocationInterface } from \"../../shared/interfaces\";\nimport { errorToText } from \"../../utils/errors\";\nimport { FC_HasInstitute, sortThisArray } from \"../../utils/functions\";\nimport NoSession from \"../SessionSettings/NoSession\";\nimport DashboardLabels from \"./DashboardLabels\";\nimport DashBoardTitle from \"./DashBoardTitle\";\n\ninterface AppProps {\n  auth: Auth;\n  locations: RoomLocationInterface[];\n  education_categories: education_category[] | null;\n  dashboard: DashboardReducerType;\n  systemPositions: PositionAPI[] | null;\n  application_sessions: SessionPlanInterface[] | null;\n  course: courseStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  getAllRoom: Function;\n  FC_GetAllSessionByInstitution: Function;\n  FC_GetPositionsByInstitution: Function;\n  GetApplicationPerPeriod: Function;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingEducation: boolean;\n  loadingApplications: boolean;\n  thisEducation: education_category | null;\n  thisPeriod: string;\n  chooseSession: boolean;\n  applicationsCounts: DashboardCountType | null;\n  sortProperty: string;\n  isSorted: boolean;\n  sortOrder: \"ASC\" | \"DESC\";\n  displayTabs: \"table\" | \"chart\";\n}\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingEducation: true,\n      loadingApplications: false,\n      thisEducation: null,\n      thisPeriod: \"\",\n      chooseSession: true,\n      applicationsCounts: null,\n      sortProperty: \"\",\n      isSorted: false,\n      sortOrder: \"ASC\",\n      displayTabs: \"table\",\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n  setLoadingEducation = (value: boolean) => {\n    this.setState({ loadingEducation: value });\n  };\n  setLoadingApplications = (value: boolean) => {\n    this.setState({ loadingApplications: value });\n  };\n  setThisEducation = (value: education_category | null) => {\n    this.setState({ thisEducation: value });\n  };\n  setThisPeriod = (value: string) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  FC_OnInstitutionChanged = (institution_id: string) => {\n    // LOAD POSITIONS BY INSTITUTION =================\n    this.props.FC_GetPositionsByInstitution(\n      institution_id,\n      (status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n\n    // LOAD SESSION BY INSTITUTION =================\n    this.props.FC_GetAllSessionByInstitution(\n      institution_id,\n      (\n        status: boolean,\n        errorMsg: string,\n        sessionData: SessionPlanInterface[]\n      ) => {\n        this.setLoading(status);\n        if (!status) {\n          if (!isEmptyOrSpaces(errorMsg)) {\n            this.props.PushPopupAlert({\n              title: errorMsg,\n              theme: PopupAlertTheme.warning,\n            });\n          }\n\n          if (sessionData && sessionData.length > 0) {\n            let activeSession = sessionData.find((item) => item.is_active);\n            if (activeSession) {\n              this.setThisPeriod(activeSession._id);\n              this.FC_OnSessionChanged(activeSession._id);\n            } else {\n              this.setThisPeriod(sessionData[0]._id);\n              this.FC_OnSessionChanged(sessionData[0]._id);\n            }\n          }\n        }\n      }\n    );\n  };\n\n  FC_OnSessionChanged = (session_id: string) => {\n    FC_GetApplicationCountPerPeriod(\n      session_id,\n      (status: boolean, msg: string, data: DashboardCountType | null) => {\n        this.setLoadingEducation(status);\n        this.setState({ applicationsCounts: data });\n        if (!status && msg.length > 0) {\n          this.props.PushPopupAlert({\n            title: errorToText(msg),\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.education_categories === null ||\n      this.props.education_categories.length\n    ) {\n      this.props.loadEducationCategories(\n        (status: boolean, data?: education_category[]) => {\n          this.setLoading(status);\n          if (!status && data && data.length > 0) {\n            if (\n              FC_HasInstitute(this.props.auth.education_institution_id) ===\n              false\n            ) {\n              this.setThisEducation(data[0]);\n              this.FC_OnInstitutionChanged(data[0].education_institute_id);\n            } else {\n              const _data = data.find(\n                (item) =>\n                  item.education_institute_id ===\n                  this.props.auth.education_institution_id!\n              );\n              this.setThisEducation(_data ? _data : data[0]);\n              this.FC_OnInstitutionChanged(\n                this.props.auth.education_institution_id!\n              );\n            }\n          }\n        }\n      );\n    } else if (this.state.thisEducation === null) {\n      if (FC_HasInstitute(this.props.auth.education_institution_id) === false) {\n        this.setThisEducation(this.props.education_categories[0]);\n        this.FC_OnInstitutionChanged(\n          this.props.education_categories[0].education_institute_id\n        );\n      } else {\n        this.FC_OnInstitutionChanged(this.props.auth.education_institution_id!);\n        const data = this.props.education_categories.find(\n          (item) =>\n            item.education_institute_id ===\n            this.props.auth.education_institution_id\n        );\n        this.setThisEducation(data ? data : this.props.education_categories[0]);\n      }\n    }\n  };\n\n  setSortOrder = (thisOrder: \"ASC\" | \"DESC\") => {\n    this.setState({ sortOrder: thisOrder });\n  };\n\n  setSortProperty = (thisProperty: string) => {\n    this.setState({ sortProperty: thisProperty });\n  };\n\n  setIsSorted = (status: boolean) => {\n    this.setState({ isSorted: status });\n  };\n\n  setSort = (thisProperty: string) => {\n    if (\n      this.state.sortProperty === thisProperty &&\n      this.state.sortOrder === \"ASC\"\n    ) {\n      this.setSortOrder(\"DESC\");\n    } else {\n      this.setSortOrder(\"ASC\");\n    }\n    this.setSortProperty(thisProperty);\n    this.setIsSorted(true);\n  };\n\n  FC_PositionCount = (\n    allPosition: PositionAPI[],\n    allCounts: DashboardCountType\n  ): {\n    data: {\n      _id: string;\n      position_name: string;\n      applications: number;\n      rejected: number;\n      shortlisted: number;\n    }[];\n    positions: number;\n    rejected: number;\n    shortlisted: number;\n    labels: string[];\n  } => {\n    let result: {\n      data: {\n        _id: string;\n        position_name: string;\n        applications: number;\n        rejected: number;\n        shortlisted: number;\n      }[];\n      positions: number;\n      rejected: number;\n      shortlisted: number;\n      labels: string[];\n    } = { data: [], positions: 0, rejected: 0, shortlisted: 0, labels: [] };\n\n    for (const position_key in allPosition) {\n      const elementCounts = allCounts.totalApplicationOnPosition.find(\n        (item) => item._id === allPosition[position_key].position_id\n      );\n      const rejectedCounts = allCounts.totalRejectedApplicationApplication.find(\n        (item) => item._id === allPosition[position_key].position_id\n      );\n      const shortlistedCounts = allCounts.totalShortListedApplication.find(\n        (item) => item._id === allPosition[position_key].position_id\n      );\n\n      result.data.push({\n        _id: allPosition[position_key].position_id,\n        position_name: allPosition[position_key].position_title,\n        applications: elementCounts ? elementCounts.total : 0,\n        rejected: rejectedCounts ? rejectedCounts.total : 0,\n        shortlisted: shortlistedCounts ? shortlistedCounts.total : 0,\n      });\n      result.labels.push(allPosition[position_key].position_title);\n      result.positions += elementCounts && elementCounts.total > 0 ? 1 : 0;\n      result.shortlisted += shortlistedCounts ? shortlistedCounts.total : 0;\n      result.rejected += rejectedCounts ? rejectedCounts.total : 0;\n    }\n    return result;\n  };\n\n  // generateChartData = (applications: {\n  //   data: {\n  //     _id: string;\n  //     position_name: string;\n  //     applications: number;\n  //     rejected: number;\n  //     shortlisted: number;\n  //   }[];\n  //   positions: number;\n  //   rejected: number;\n  //   shortlisted: number;\n  //   labels: string[];\n  // }): {\n  //   series: {\n  //     name: string;\n  //     data: number[];\n  //   }[];\n  //   categories: (string | string[])[];\n  //   labels: string[];\n  // } => {\n  //   let categories: (string | string[])[] = [],\n  //     labels: string[] = [],\n  //     shortlisted: number[] = [],\n  //     remaining: number[] = [],\n  //     district_ids: string[] = [];\n  //   let thisOccupation: number = 0,\n  //     thisRemaining: number = 0,\n  //     thisDefaultOccupation: number = 0,\n  //     thisDefaultRemaining: number = 0,\n  //     districtName: string = \"\";\n  //   this.distinctDistricts().forEach((district) => {\n  //     const thisDistrict = this.props.allData.filter(\n  //       (item) => item.district_id === district\n  //     );\n\n  //     for (const key in thisDistrict) {\n  //       if (thisDistrict[key].room_number !== 0) {\n  //         districtName = thisDistrict[key].district_name;\n  //         const selectedExam = this.props.selectedExam;\n  //         if (selectedExam !== \"all\") {\n  //           thisDefaultOccupation = thisDistrict[key].course_in_room.find(\n  //             (itemCourse) => itemCourse.course_id === selectedExam.course_id\n  //           )\n  //             ? thisDistrict[key].course_in_room.find(\n  //                 (itemCourse) =>\n  //                   itemCourse.course_id === selectedExam.course_id\n  //               )!.occupied\n  //             : 0;\n  //           thisDefaultRemaining =\n  //             thisDistrict[key].capacity -\n  //             (thisDistrict[key].course_in_room.find(\n  //               (itemCourse) => itemCourse.course_id === selectedExam.course_id\n  //             )\n  //               ? thisDistrict[key].course_in_room.find(\n  //                   (itemCourse) =>\n  //                     itemCourse.course_id === selectedExam.course_id\n  //                 )!.occupied\n  //               : 0);\n  //         } else {\n  //           thisDefaultOccupation = thisDistrict[key].occupied;\n  //           thisDefaultRemaining =\n  //             thisDistrict[key].capacity - thisDistrict[key].occupied;\n  //         }\n  //         thisOccupation += thisDefaultOccupation;\n  //         thisRemaining += thisDefaultRemaining;\n  //       }\n  //     }\n  //     if (!district_ids.includes(district)) {\n  //       district_ids.push(district);\n  //       occupied.push(thisOccupation);\n  //       remaining.push(thisRemaining);\n  //       categories.push([districtName]);\n  //       labels.push(districtName);\n  //     }\n  //     districtName = \"\";\n  //     thisRemaining = 0;\n  //     thisOccupation = 0;\n  //   });\n\n  //   return {\n  //     series: [\n  //       {\n  //         name: \"Occupied room\",\n  //         data: occupied,\n  //       },\n  //       {\n  //         name: \"Remaining room\",\n  //         data: remaining,\n  //       },\n  //     ],\n  //     categories,\n  //     labels,\n  //   };\n  // };\n\n  render() {\n    if (\n      this.props.application_sessions === null ||\n      this.props.education_categories === null ||\n      this.state.applicationsCounts === null ||\n      this.props.systemPositions === null ||\n      this.state.loading ||\n      this.state.loadingEducation\n    ) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return <NoSession />;\n    }\n\n    const DATA_POSITIONS = this.FC_PositionCount(\n      this.props.systemPositions,\n      this.state.applicationsCounts\n    );\n\n    return (\n      <div>\n        {/* HEADER TITLE */}\n        <DashBoardTitle\n          education_categories={this.props.education_categories}\n          loading={this.state.loading}\n          loadingApplications={this.state.loadingApplications}\n          loadingEducation={this.state.loadingEducation}\n          thisEducation={this.state.thisEducation}\n          setThisEducation={this.setThisEducation}\n          thisPeriod={this.state.thisPeriod}\n          setThisPeriod={this.setThisPeriod}\n          application_sessions={this.props.application_sessions}\n          setLoadingApplications={this.setLoadingApplications}\n          reportTitle={\"Application Dashboard\"}\n          allEducation={false}\n          FC_OnInstitutionChanged={this.FC_OnInstitutionChanged}\n          FC_OnSessionChanged={this.FC_OnSessionChanged}\n        />\n        {/* END HEADER TITLE */}\n\n        <DashboardLabels\n          applicants={this.state.applicationsCounts.totalApplicants}\n          applications={this.state.applicationsCounts.totalApplications}\n          shortlisted={DATA_POSITIONS.shortlisted}\n          rejected={DATA_POSITIONS.rejected}\n          positions={DATA_POSITIONS.positions}\n          allPositions={this.props.systemPositions.length}\n        />\n\n        <div className=\"my-8\">\n          {/* <div className=\"border-b border-gray-200 dark:border-gray-700 bg-white pb-2 pr-1\">\n            <ul className=\"flex flex-wrap gap-x-2  justify-end -mb-px text-sm font-medium text-center text-gray-500 dark:text-gray-400\">\n              <li>\n                <button\n                  type=\"button\"\n                  className={`inline-flex p-4 rounded-t-lg border-b-2 border-transparent group ${\n                    this.state.displayTabs === \"table\"\n                      ? \"text-blue-600 border-blue-600 dark:text-blue-500 dark:border-blue-500\"\n                      : \"hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300\"\n                  }`}\n                  onClick={() => this.setState({ displayTabs: \"table\" })}\n                >\n                  <MdTableChart className=\"mr-2 w-5 h-5 text-gray-400 group-hover:text-gray-500 dark:text-gray-500 dark:group-hover:text-gray-300\" />\n                  Table\n                </button>\n              </li>\n              <li>\n                <button\n                  type=\"button\"\n                  className={`inline-flex p-4 rounded-t-lg border-b-2 active group ${\n                    this.state.displayTabs === \"chart\"\n                      ? \"text-blue-600 border-blue-600 dark:text-blue-500 dark:border-blue-500\"\n                      : \"hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300\"\n                  }`}\n                  onClick={() => this.setState({ displayTabs: \"chart\" })}\n                >\n                  <GrBarChart className=\"mr-2 w-5 h-5 text-blue-600 dark:text-blue-500\" />\n                  Chart\n                </button>\n              </li>\n            </ul>\n          </div> */}\n\n          {this.state.displayTabs === \"table\" && (\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"position_name\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Position <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"applications\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Application <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"shortlisted\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Shortlisted <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"rejected\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Rejected <BiSort />\n                    </div>\n                  </td>\n                </tr>\n              </thead>\n              <tbody>\n                {DATA_POSITIONS.data.length === 0 ? (\n                  <tr>\n                    <td colSpan={5} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          No result found! Please try to search again\n                        </span>\n                        <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                          <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                            <li className=\"underline text-gray-500 cursor-pointer\">\n                              Filter by session\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                ) : (\n                  sortThisArray(\n                    this.state.isSorted,\n                    DATA_POSITIONS.data,\n                    this.state.sortProperty,\n                    this.state.sortOrder\n                  ).map(\n                    (\n                      item: {\n                        _id: string;\n                        position_name: string;\n                        applications: number;\n                        rejected: number;\n                        shortlisted: number;\n                      },\n                      i: number\n                    ) => (\n                      <tr\n                        key={i + item._id}\n                        className={`${\n                          i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                        } hover:bg-blue-100 hover:text-blue-700 border-b hover:border-blue-500 text-base text-gray-600 border-gray-300`}\n                      >\n                        <td className=\"px-2 py-2\">{i + 1}</td>\n                        <td className=\"px-2 py-2\">{item.position_name}</td>\n                        <td className=\"px-2 py-2\">{item.applications}</td>\n                        <td className=\"px-2 py-2\">{item.shortlisted}</td>\n                        <td className=\"px-2 py-2\">{item.rejected}</td>\n                      </tr>\n                    )\n                  )\n                )}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  locations,\n  schoolLevels,\n  dashboard,\n  course,\n  system_settings,\n  sessionPlan,\n}: StoreState): {\n  auth: Auth;\n  locations: RoomLocationInterface[];\n  education_categories: education_category[] | null;\n  dashboard: DashboardReducerType;\n  systemPositions: PositionAPI[] | null;\n  course: courseStoreInterface;\n  application_sessions: SessionPlanInterface[] | null;\n} => {\n  return {\n    auth: auth,\n    locations: locations.roomLocation,\n    education_categories: schoolLevels.education_categories,\n    dashboard,\n    course: course,\n    systemPositions: system_settings.systemPositions,\n    application_sessions: sessionPlan.allSessionPlans,\n  };\n};\n\nexport const AdminDashboard = connect(mapStateToProps, {\n  getAllRoom,\n  loadEducationCategories,\n  FC_GetPositionsByInstitution,\n  FC_GetAllSessionByInstitution,\n  GetApplicationPerPeriod,\n  loadCourses,\n  PushPopupAlert,\n})(Index);\n","import React from \"react\";\nimport { IoWarning } from \"react-icons/io5\";\n// import { MdInfoOutline } from \"react-icons/md\";\nimport { NavLink } from \"react-router-dom\";\n\ntype NoSessionProps = {\n  title?: string;\n  description?: string;\n  content?: any;\n};\n\nconst NoSession: React.FC<NoSessionProps> = ({\n  title = \"No session available\",\n  description = \"Please Wait for the system to publish the sessions or contact the administrator\",\n  content = undefined,\n}) => {\n  return (\n    <div className=\"w-full my-5\">\n      <section className=\"py-10 flex flex-col items-center rounded border border-gray-300 bg-white text-2xl font-medium text-yellow-800 animate__animated animate__pulse\">\n        <div className=\"flex flex-col items-center\">\n          <IoWarning className=\"w-32 h-32\" />\n          {description}\n        </div>\n        {content && content}\n        {false && (\n          <div className=\"text-center group text-sm -mb-3 mt-5\">\n            <NavLink\n              to=\"/apps-page\"\n              className=\"border border-rounded-md bg-gray-100 text-gray-900 rounded border-gray-100 group-hover:bg-gray-50 group-hover:border-gray-400 px-2 py-1\"\n            >\n              Back to App\n            </NavLink>\n          </div>\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default React.memo(NoSession);\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\nconst url = `${API.AUTH}/auth/user/access`;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/system/setting`\n      );\n      console.log(\"=================getSystemSettings===================\");\n      console.log(res);\n      console.log(\"=================getSystemSettings===================\");\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${url}/roleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_GetPositionsByInstitution = (\n  institution_id: string,\n  callback: (status: boolean, msg: string, data?: PositionAPI[]) => void\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(\n        `${API.APPLICATION}/position/instituteposition/${institution_id}`\n      );\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import React, { FC } from \"react\";\nimport { IconType } from \"react-icons\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { toAnyDigit } from \"../../shared/dataTest\";\nimport { displayNumbers } from \"../../utils/functions\";\n\nexport type DashboardLabelItemInterface = {\n  // TITLE: Application or Exam or Shortlisted ....\n  title: string;\n  // ICON: FaExpand ....\n  icon: IconType;\n  // ICON COLOR: blue, indigo, gray ....\n  iconColor: string;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  count: number;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  countOver?: number;\n};\n\nconst DashboardLabelItem: FC<DashboardLabelItemInterface> = (\n  props = {\n    title: \"\",\n    icon: FaUsers,\n    iconColor: \"indigo\",\n    count: 0,\n    countOver: undefined,\n  }\n) => {\n  const IconDefined = props.icon;\n  return (\n    <div className=\"flex items-center px-6 py-4 bg-white w-full rounded-md space-x-2 mb-2 lg:mb-0 shadow-md\">\n      <div\n        className={`p-3 rounded-full bg-${props.iconColor}-200 bg-opacity-75`}\n      >\n        <IconDefined className={`h-8 w-8 text-${props.iconColor}-600`} />\n      </div>\n      <div>\n        <h1 className=\"text-3xl font-semibold text-gray-700\">\n          {props.count < 1000\n            ? toAnyDigit(props.count)\n            : displayNumbers(props.count)}{\" \"}\n          {props.countOver && \"/ \" + toAnyDigit(props.countOver)}\n        </h1>\n        <span className=\"text-gray-500 text-lg\">{props.title}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DashboardLabelItem);\n"],"sourceRoot":""}
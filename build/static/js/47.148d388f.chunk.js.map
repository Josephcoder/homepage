{"version":3,"sources":["utils/question_bank.ts","containers/DoExam/QuestionDetails/ConvertingAnswers.ts","components/AnswersDetails/AnswersDetails.tsx","containers/DoExam/DoExamTitle/FindAnswer.tsx","components/ClaimForm/ClaimFormComponent.tsx","containers/CandidateExams/CandidateExams.tsx","containers/ApplicationsDashboard/ApplicationHistory/ApplicationHistory.tsx","containers/ApplicationsDashboard/ExamDetails/ExamDetails.tsx","containers/ApplicationsDashboard/ExamStatus/PreparedExams.tsx","containers/ApplicationsDashboard/ExamStatus/ActiveExams.tsx","containers/ApplicationsDashboard/ExamStatus/ExamsDone.tsx","containers/ApplicationsDashboard/Exams.tsx","components/CandidatePlacementCheck/CandidatePlacementCheck.tsx","containers/ApplicationsDashboard/ApplicationsDashboard.tsx"],"names":["ExamTimeStatus","today","moment","tz","TimeZone","getQuestionType","question_types","type_id","type","check","find","itm","id","undefined","check_type","questionTypeElements","key","element","findTotalMarks","courses","results","sum","course","test","course_id","total_marks","toFixed","CheckIfExamDone","res","validateCalculatedFormula","formula","characters","length","status","msg","el","filter","nextCharacter","i","convertFromStringToDate","responseDate","dateComponents","split","datePieces","timePieces","Date","parseInt","validateExamDate","exam_date","start_time","end_time","Expired","toDay","toString","examDate","startTime","getDate","getMonth","getFullYear","endTime","Waiting","getTime","Online","InitializeExamsDone","selected_period","selectedPosition","candidateExam","loadExamsDone","user_id","setLoadingExamsDone","selectedExams","InitializeExamDetails","setLoadingExams","session_plan_id","user_exams_temp","center_id","district_id","room_id","position_id","proctoringDefaultRules","rule","caption","toMultipleChoice","answers","answer","value","toTrueFalse","toMatching","toSimpleCalculated","toShortAnswer","toNumerical","toCalculatedMultipleChoice","_AnswersDetails","props","setLoading","setState","loading","componentDidMount","questionTypes","loadQuestionTypes","exam_id","user_exams_done","period","DATE","item","exam_paper","requestUserAnswers","auth","user","userAnswersTotalMarks","user_answers","total","user_marks","state","user_exam_details","this","className","dangerouslySetInnerHTML","__html","course_name","discription","termes","map","questions","question_id","question","language","description","selectedLanguage","chapters","customNumber","marks","answersList","showCorrectAnswer","showAnswers","onClick","exam_total_marks","Component","AnswersDetails","connect","candidateApplications","FC_GetProfileDetails","LoadCandidateApplications","setSelectedCandidateExam","setSelectedCourse","setSelectedPosition","AddUserApplication","loadApplicationPeriods","FindAnswer","UserAnswersSel","findQuestionType","questionTypeElementsType","MultipleChoice","userAnswer","SingleMultiple","userAnswerSingle","CalculatedMultipleChoice","userAnswer1","Matching","userAnswerMatch","TrueFalse","userAnswerTureFalse","Numeric","userAnswerNumerical","SimpleCalculate","userAnswerSimpleCalculate","ShortAnswer","userAnswerShortAnswer","ClaimFormComponent","isDocumentIdValid","documents","doc_id","doc","validated_by","validation_status","alert","PopupAlertTheme","info","claiming","myClaims","activeSession","isClaimAllowed","success","warning","isApplicationIdValid","applications","app_id","app","application_id","console","log","application_status","ApplicationStates","Rejected","setLoadingForm","loadingForm","setFormError","data","formError","setAlertError","alertError","setClaimFileId","claimFileId","setViewThisFile","viewThisFile","setChooseClaimFile","chooseClaimFile","setClaimComment","claimComment","isClaimTypeOpen","thisSession","thisType","PlansTypeKeys","APPLICATION","plans","type_key","isPlanActive","DOCUMENT_VALIDATION","PLACEMENT_TRANSFER","isClaimBtnValid","file_id","claim_type","PushPopupAlert","title","theme","setFormState","thisClaimType","thisClaimTypeId","formType","displayClaimType","claimType","result","EXAMINATION","MARKS_PUBLICATION","isClaimsAllowed","thisPeriod","getMyClaims","danger","claim","claiming_on_id","period_id","found_claim","sessionPlan","activeSessionPlan","getActiveSessionPlan","_isClaimsAllowed","documentReducer","documentCategory","getDocumentCategory","documentSubCategory","getDocumentSubCategory","documentFields","getDocumentFields","getMyRejectedApplications","_isApplicationIdValid","candidateDocuments","getMyRejectedDocuments","_isDocumentIdValid","getDocumentById","getApplicationById","getValidation","thisId","old_reason","old_status","old_evaluated_by","comment","override_by","cleanToClose","handleSubmit","e","a","preventDefault","isEmptyOrSpaces","toLocaleLowerCase","setAxiosToken","axios","post","API","CLAIMING","reason","createClaim","error","errorToText","selectClaimType","thisClaim","generateChooseFileTitle","claims","date_created","evaluation_comment","decision_taken_status","onSubmit","onChange","target","disabled","Object","values","index","capitalizeFirstLetter","replace","ClaimGetDocTitle","main","position","position_title","documentCategories","placeholder","style","resize","rows","thisDoc","thisApplication","document","GetClaimingTypes","compareWithToday","tooday","date","myDate","todayConverted","get","ChangeLocationComponent","useState","display","setDisplay","changeLocation","_CandidateExams","setloadingExamsDone","loadingExamsDone","loadCandidateExams","QBank","candidateExams","loadUserProfileDetails","InitializationFn","application","application_session","exams","loadUserApplications","candidate_applications","findLocation","updateLocation","selectedCourse","centersModal","maxExamModal","successMessage","updateLocationFunction","addLocation","course_code","location","proctoring_type","sex","removeDuplicatesExams","temp","_id","removeDuplicatesNotPreparedExams","setTimeOut","temps","activeExams","selectApplication","setMaxExamModal","closeModal","selectedExam","FC_Access","UserAccessList","MY_APPLICATION","view","selected_exam_id","to","preparedExam","user_status","center_name","room_number","school_levels","UserExamStatus","Editing","Paused","Shortlisted","Done","Removed","rules","found","duration_min","getMinutesFromTwoDates","timeout","returnString","labels","days","notPreparedExam","positionCourses","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","CandidateExams","periods","ApplicationHistory","applicationHistory","ApplicationStatesDescription","ExamDetails","locationsData","Locations_list","loadAllLocationsData","examDetails","locationDetails","Loading","LoadingType","dark","duration","province_name","district_name","PreparedExams","NotPreparedExamsFilter","ex","findExam","PreparedExamsFilter","AllPendingExams","totalPending","loadingExams","selectedApplicationDetails","appointmentDetailsModal","is_active","positions","selected_position","Initiated","ActiveExams","ActiveExamsFilter","exam_start_time","exam_end_time","x","ExamsDone","viewMarksDetailsFn","Exam","examTest","courseSelected","viewMarksDetails","ExamsDoneFilter","_PostExams","renderExam","exam","examStatus","loadExam","redirect","setClaim","selected_application","numberOfIncomplete","count","courseId","current_temp","testDone","findCourse","pendingCourses","loadCourses","doExam","exam_answers","displayResults","selectedLocation","applicationHistoryState","selectedExamDetails","applicationPeriods","setSelectedLocationData","ChooseExamCenter","deleteApplication","PostExams","prepareExam","loadExamsList","setSelectedPeriod","CandidatePlacementCheck","_ApplicationsDashboard","filteredApplications","Status","searchPeriod","appl","closeApplicationDetails","displayDetailsModal","setDisplayDetailsModal","applicationStatuses","output","push","LoadApplications","loadingErr","number_of_incomplete","response","Incomplete","incrementIncomplete","applicationError","noRoomsApplication","errors","field","newArr","removeLocation","message","changeLoadingState","window","confirm","delete","RemoveUserApplication","setShowFilterStatus","showPeriodFilter","loadAllPositions","apply","currentStep","ApplicationStepsTypes","Step3","initiateApplication","Step1","doTestStatus","applicationDetails","selectedApplicationStatus","viewSchools","session_plan_name","Pass","checkApplication","SelectUserApplication","Exams","changeLocationError","application_history","SideNavigation","positions_list","active","LoadingV2","NoResult","NoResultThemes","Dark","component","createdAt","Modal","body","ApplicationPeriods","ApplicationsDashboard","system"],"mappings":"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","file":"static/js/47.148d388f.chunk.js","sourcesContent":["import { candidateExamStoreInterface } from \"../actions/candidate_exam\";\nimport {\n  applicationExamAPI,\n  ApplicationPeriodGet,\n} from \"../interfaces/application\";\nimport { ExamAnswerSheetDone } from \"../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../interfaces/position\";\nimport {\n  questionType,\n  questionTypeElements,\n  questionTypeElementsType,\n} from \"../interfaces/question\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"./app.config\";\n\nconst today = moment().tz(TimeZone);\n\nexport const getQuestionType = (\n  question_types: questionType[] | null,\n  type_id: string\n) => {\n  let type: questionTypeElementsType | null = null;\n  if (question_types !== null) {\n    let check = question_types.find((itm) => itm.id === type_id);\n    if (check !== undefined) {\n      let check_type = questionTypeElements.find(\n        (itm) => check && itm.key === check.element\n      );\n      if (check_type !== undefined) {\n        type = check_type.key;\n      }\n    }\n  }\n  return type;\n};\n\nexport const findTotalMarks = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  if (results !== null) {\n    let sum: number = 0;\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        sum = sum + test.total_marks;\n      }\n    }\n    return sum.toFixed(2);\n  } else {\n    return \"Wait...\";\n  }\n};\n\nexport const CheckIfExamDone = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  let res: boolean = false;\n  if (results !== null) {\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        res = true;\n      }\n    }\n  }\n  return res;\n};\n\nexport const validateCalculatedFormula = (\n  formula: string\n): { status: boolean; msg: string } => {\n  let characters: string[] = [];\n  if (\n    formula === undefined ||\n    formula === \"\" ||\n    formula.length === undefined ||\n    formula.length === 0\n  ) {\n    return {\n      status: false,\n      msg: `Please type a formula`,\n    };\n  }\n  if (formula.length < 3) {\n    return {\n      status: false,\n      msg: `The formula in not valid, it is not complete!`,\n    };\n  }\n  for (let el of formula) {\n    characters = [...characters, el];\n  }\n  if (characters[0] !== `\"`) {\n    return {\n      status: false,\n      msg: `Formula should start with (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length < 2) {\n    return {\n      status: false,\n      msg: `Formula is missing closing (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length > 2) {\n    return {\n      status: false,\n      msg: `Formula is invalid, because it has many (\") characters (${\n        characters.filter((itm) => itm === `\"`).length\n      })`,\n    };\n  }\n  if (\n    characters[characters.length - 1] !== `\"` &&\n    characters.filter((itm) => itm === `\"`).length === 2\n  ) {\n    let nextCharacter: string = \"\";\n    for (let i = 0; i < characters.length; i++) {\n      if (characters[i] === `\"` && i !== 0) {\n        nextCharacter = characters[i + 1];\n      }\n    }\n    if (nextCharacter !== `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing separation character (;) between formula and error`,\n      };\n    }\n    if (characters[characters.length - 1] === `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing error after (;) character`,\n      };\n    }\n  }\n  return {\n    status: true,\n    msg: `Formula is valid`,\n  };\n};\n\nexport function convertFromStringToDate(responseDate: string) {\n  let dateComponents = responseDate.split(\"T\");\n  let datePieces = dateComponents[0].split(\"-\");\n  let timePieces = dateComponents[1].split(\":\");\n  return new Date(\n    parseInt(datePieces[2]),\n    parseInt(datePieces[1]) - 1,\n    parseInt(datePieces[0]),\n    parseInt(timePieces[0]),\n    parseInt(timePieces[1]),\n    parseInt(timePieces[2])\n  );\n}\n\nexport enum ExamTimeStatus {\n  Waiting = \"Waiting\",\n  Online = \"Online\",\n  Expired = \"Expired\",\n}\n\nexport const validateExamDate = (\n  exam_date: string,\n  start_time: string,\n  end_time: string\n) => {\n  let status: ExamTimeStatus = ExamTimeStatus.Expired;\n  // Dates\n  const toDay: Date = new Date(today.toString());\n  const examDate = new Date(exam_date);\n\n  // Time\n  const startTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      start_time +\n      \":0\"\n  );\n  const endTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      end_time +\n      \":0\"\n  );\n\n  // check exam date\n  if (\n    examDate.getDate() > toDay.getDate() ||\n    examDate.getMonth() > toDay.getMonth() ||\n    examDate.getFullYear() > toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Waiting;\n  }\n\n  if (\n    examDate.getDate() < toDay.getDate() ||\n    examDate.getMonth() < toDay.getMonth() ||\n    examDate.getFullYear() < toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Expired;\n  }\n\n  if (\n    examDate.getDate() === toDay.getDate() &&\n    examDate.getMonth() === toDay.getMonth() &&\n    examDate.getFullYear() === toDay.getFullYear()\n  ) {\n    if (startTime.getTime() > toDay.getTime()) {\n      status = ExamTimeStatus.Waiting;\n    } else if (\n      startTime.getTime() <= toDay.getTime() &&\n      endTime.getTime() >= toDay.getTime()\n    ) {\n      status = ExamTimeStatus.Online;\n    } else {\n      status = ExamTimeStatus.Expired;\n    }\n  }\n  // console.log(\n  //   \"Dates comparison: \" + examDate.getDate() + \"=>\" + toDay.getDate()\n  // );\n  // console.log(\"Exam Status: \", status);\n  return status;\n};\n\nexport const InitializeExamsDone = (\n  selected_period: ApplicationPeriodGet | null,\n  selectedPosition: PositionAPI | null,\n  candidateExam: candidateExamStoreInterface,\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void,\n  user_id: string,\n  setLoadingExamsDone: (status: boolean) => void,\n  selectedExams: applicationExamAPI[] | null,\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void,\n  setLoadingExams: (status: boolean) => void\n) => {\n  if (selected_period !== null && selectedPosition !== null) {\n    loadExamsDone(\n      selected_period.session_plan_id,\n      user_id,\n      setLoadingExamsDone\n    );\n    for (let course of selectedPosition.courses) {\n      let testDone = candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = selectedExams?.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          InitializeExamDetails(\n            selected_period.session_plan_id,\n            course.course_id,\n            center_id.district_id,\n            center_id.center_id,\n            center_id.room_id,\n            selectedPosition.position_id,\n            setLoadingExams\n          );\n        }\n      }\n    }\n  }\n};\n\nexport const getActiveExam = (\n  candidateExam: candidateExamStoreInterface\n): ExamAnswerSheetDone | null => {\n  if (candidateExam.user_exams_done.length > 0) {\n    for (let exam of candidateExam.user_exams_done) {\n      if (\n        validateExamDate(\n          exam.exam_date,\n          exam.exam_start_time,\n          exam.exam_end_time\n        ) === ExamTimeStatus.Online\n      ) {\n        return exam;\n      }\n    }\n  }\n  return null;\n};\n\nexport const proctoringDefaultRules: {\n  rule: string;\n  status: boolean;\n  caption: string;\n}[] = [\n  {\n    rule: \"right_click_enabled\",\n    status: false,\n    caption: \"Enable right click\",\n  },\n  {\n    rule: \"copy_enabled\",\n    status: false,\n    caption: \"Enable copy\",\n  },\n  {\n    rule: \"paste_enabled\",\n    status: false,\n    caption: \"Enable paste\",\n  },\n  {\n    rule: \"stop_candidate_when_comeback\",\n    status: false,\n    caption: \"Enable Candidate when coming back\",\n  },\n  {\n    rule: \"allow_to_leave_browser\",\n    status: false,\n    caption: \"Enable to leave browser\",\n  },\n];\n","import { CalculatedMultipleChoiceQuestionAnswerInterface, MatchingQuestionAnswerInterface, MultipleChoiceQuestionAnswerInterface, NumericalQuestionAnswerInterface, ShortAnswerQuestionAnswerInterface, SimpleCalculatedQuestionAnswerInterface, TrueFalseQuestionAnswerInterface } from \"../../../interfaces/question\";\n\nexport const toMultipleChoice = (answers: any[]): MultipleChoiceQuestionAnswerInterface[] => {\n  let res: MultipleChoiceQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toTrueFalse = (answers: any[]): TrueFalseQuestionAnswerInterface[] => {\n  let res: TrueFalseQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toMatching = (answers: any[]): MatchingQuestionAnswerInterface[] => {\n  let res: MatchingQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toSimpleCalculated = (answers: any[]): SimpleCalculatedQuestionAnswerInterface[] => {\n  let res: SimpleCalculatedQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toShortAnswer = (answers: any[]): ShortAnswerQuestionAnswerInterface[] => {\n  let res: ShortAnswerQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toNumerical = (answers: any[]): NumericalQuestionAnswerInterface[] => {\n  let res: NumericalQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toCalculatedMultipleChoice = (answers: any[]): CalculatedMultipleChoiceQuestionAnswerInterface[] => {\n  let res: CalculatedMultipleChoiceQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}","import React, { Component } from \"react\";\nimport FindAnswer from \"../../containers/DoExam/DoExamTitle/FindAnswer\";\nimport { ExamAnswerSheetDone } from \"../../interfaces/exam\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  requestUserAnswers,\n  loadQuestionTypes,\n  questionTypesStoreInterface,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { DATE } from \"../../utils/functions\";\nimport { AiOutlineFileText } from \"react-icons/ai\";\nimport { ExamDoneDetailsAnswers } from \"../../containers/CandidateExams/CandidateExams\";\n\ninterface AnswersDetailsProps {\n  exam_id: ExamDoneDetailsAnswers;\n  showAnswers: boolean;\n  questionTypes: questionTypesStoreInterface;\n  requestUserAnswers: (\n    exam_id: string,\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  FC_GetProfileDetails: Function;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n}\ninterface AnswersDetailsState {\n  loading: boolean;\n}\n\nexport class _AnswersDetails extends Component<\n  AnswersDetailsProps,\n  AnswersDetailsState\n> {\n  constructor(props: AnswersDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  componentDidMount = () => {\n    if (\n      this.props.questionTypes.questionTypes === null ||\n      this.props.questionTypes.questionTypes.length === 0\n    ) {\n      this.props.loadQuestionTypes(this.setLoading);\n    }\n    if (this.props.exam_id) {\n      let check = this.props.candidateExam.user_exams_done.find(\n        (itm) =>\n          itm.course === this.props.exam_id.course &&\n          itm.period === this.props.exam_id.period &&\n          DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n      );\n      if (check !== undefined) {\n        if (\n          this.props.candidateExam.user_exams_done.find(\n            (item) => item.exam_paper === check?.exam_paper\n          ) === undefined\n        ) {\n          this.props.requestUserAnswers(\n            check.exam_paper,\n            this.props.auth.user.user_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n  userAnswersTotalMarks = (user_answers: ExamAnswerSheetDone) => {\n    let total: number = 0;\n    for (let item of user_answers.user_answers) {\n      total += item.user_marks;\n    }\n    return total;\n  };\n  render() {\n    let user_exam_details: ExamAnswerSheetDone | undefined =\n      this.props.candidateExam.user_exams_done.find(\n        (itm) =>\n          itm.course === this.props.exam_id.course &&\n          itm.period === this.props.exam_id.period &&\n          DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n      );\n    return (\n      <div className=\"p-2 bg-gray-100\">\n        <div className=\"mb-5 -mt-5\">\n          {user_exam_details !== undefined && (\n            <div className=\"mt-5\">\n              <div className=\"px-3 mb-2 flex flex-row items-center gap-3\">\n                <div>\n                  <AiOutlineFileText className=\"text-5xl text-gray-500\" />\n                </div>\n                <div\n                  className=\"text-2xl font-extrabold\"\n                  dangerouslySetInnerHTML={{\n                    __html: \"Exam for \" + this.props.exam_id.course_name,\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white rounded-t mb-0 border-b\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam date:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: DATE(this.props.exam_id.exam_date),\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white mb-0 border-b\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam description:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.exam_id.discription,\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white rounded-b mb-0\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam terms and conditions:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.exam_id.termes,\n                  }}\n                ></div>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"text-2xl font-extrabold text-blue-600 px-2 mb-3\">\n          Exam answers & marks\n        </div>\n        {user_exam_details === undefined\n          ? \"Not Found\"\n          : user_exam_details.user_answers.map((item, i) => (\n              <div\n                key={i + 1}\n                className=\"bg-white hover:bg-white border border-white hover:border-blue-400 px-2 py-2 rounded  animate__animated animate__fadeIn animate__fast group mb-2\"\n              >\n                <div className=\"grid md:grid-cols-11 w-full\">\n                  <div className=\"col-span-12 flex flex-row items-center gap-3\">\n                    <div\n                      key={i + 1}\n                      className=\"w-6 h-6 p-2 rounded-full bg-gray-600 flex justify-center items-center font-bold text-lg text-white cursor-pointer\"\n                    >\n                      {i + 1}\n                    </div>\n                    {user_exam_details &&\n                      user_exam_details.questions.find(\n                        (itm) => itm.question_id === item.question\n                      ) !== undefined && (\n                        <div className=\"text-sm w-full\">\n                          <div\n                            className=\"font-bold text-gray-700 text-base\"\n                            dangerouslySetInnerHTML={{\n                              __html: user_exam_details.questions\n                                .find(\n                                  (itm) => itm.question_id === item.question\n                                )!\n                                .question.find(\n                                  (test) => test.language === item.language\n                                )!.description,\n                            }}\n                          ></div>\n                          <div className=\"text-blue-700 font-bold text-sm w-full\">\n                            Answer:&nbsp;{\" \"}\n                            {this.props.questionTypes.questionTypes !== null &&\n                              user_exam_details.user_answers.find(\n                                (itm) => itm.question === item.question\n                              ) && (\n                                <div className=\"mb-2\">\n                                  <FindAnswer\n                                    selectedLanguage={item.language}\n                                    question={{\n                                      question_id: item.question,\n                                      course: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.course,\n                                      question:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.question,\n                                      type: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.type,\n                                      chapters:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.chapters,\n                                      customNumber:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.customNumber,\n                                      marks: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.marks,\n                                      answer: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.answer,\n                                    }}\n                                    answersList={[\n                                      {\n                                        question_id: item.question,\n                                        status: true,\n                                        answer:\n                                          user_exam_details.user_answers.find(\n                                            (itm) =>\n                                              itm.question === item.question\n                                          )!.answer,\n                                      },\n                                    ]}\n                                    questionTypes={\n                                      this.props.questionTypes.questionTypes\n                                    }\n                                    showCorrectAnswer={this.props.showAnswers}\n                                    onClick={() => {}}\n                                  />\n                                </div>\n                              )}\n                          </div>\n                        </div>\n                      )}\n                  </div>\n                </div>\n                <div className=\"col-span-1 flex items-center justify-between\">\n                  <div></div>\n\n                  <div className=\"w-max flex flex-col items-end justify-center border border-blue-400 rounded-md px-2\">\n                    <div className=\"text-sm font-normal text-gray-600\">\n                      Marks\n                    </div>\n                    <div className=\"text-base font-extrabold text-gray-900 -mt-1\">\n                      <span className=\"text-blue-500\">\n                        {item.user_marks.toFixed(2)}\n                      </span>{\" \"}\n                      /{\" \"}\n                      {user_exam_details &&\n                        user_exam_details.questions.find(\n                          (itm) => itm.question_id === item.question\n                        )?.marks}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n        <div className=\"flex flex-row items-center justify-between gap-3 mb-10\">\n          <div className=\"bg-blue-100 p-3 pr-3 text-blue-700 flex flex-col items-start justify-center rounded-lg border-2 border-white\">\n            <span className=\"text-gray-700\">Total marks percentage</span>\n            <span className=\"text-3xl font-extrabold\">\n              {user_exam_details && user_exam_details.total_marks.toFixed(2)}%\n            </span>\n          </div>\n          <div>\n            <div className=\"bg-white rounded-lg p-3\">\n              <div className=\"text-gray-500 font-bold text-base text-right\">\n                Exam total marks\n              </div>\n              {user_exam_details !== undefined && (\n                <div className=\"font-extrabold text-3xl text-gray-900 text-right\">\n                  {this.userAnswersTotalMarks(user_exam_details).toFixed(2)} /{\" \"}\n                  {user_exam_details.exam_total_marks}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  candidateExam,\n  candidateApplications,\n  questionTypes,\n}: StoreState): {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return {\n    auth: auth,\n    candidateExam: candidateExam,\n    candidateApplications: candidateApplications,\n    questionTypes: questionTypes,\n  };\n};\n\nexport const AnswersDetails = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  requestUserAnswers,\n  loadQuestionTypes,\n})(_AnswersDetails);\n","import React from \"react\";\nimport {\n  BsCheckSquareFill,\n  BsCheckCircleFill,\n  BsArrowRightSquareFill,\n  BsArrowRightCircleFill,\n} from \"react-icons/bs\";\nimport { QuestionAnswersStore } from \"../../../actions\";\nimport {\n  CalculatedMultipleChoiceQuestionAnswerInterface,\n  MatchingQuestionAnswerInterface,\n  MultipleChoiceQuestionAnswerInterface,\n  QuestionInterface,\n  questionType,\n  questionTypeElementsType,\n  TrueFalseQuestionAnswerInterface,\n  NumericalQuestionAnswerInterface,\n  ShortAnswerQuestionAnswerInterface,\n  SimpleCalculatedQuestionAnswerInterface,\n  QuestionLanguage,\n  LanguageInterface,\n} from \"../../../interfaces\";\nimport {\n  toCalculatedMultipleChoice,\n  toMatching,\n  toMultipleChoice,\n  toNumerical,\n  toShortAnswer,\n  toSimpleCalculated,\n  toTrueFalse,\n} from \"../QuestionDetails/ConvertingAnswers\";\nimport { findQuestionType } from \"../utils/utils\";\n\ninterface FindAnswerProps {\n  question: QuestionInterface;\n  answersList: QuestionAnswersStore[];\n  selectedLanguage: QuestionLanguage | LanguageInterface;\n  questionTypes: questionType[];\n  showCorrectAnswer: boolean;\n  onClick: () => void;\n}\n\nconst FindAnswer = (props: FindAnswerProps) => {\n  const answer = props.answersList.find(\n    (item) => item.question_id === props.question.question_id\n  );\n  const UserAnswersSel = props.question.question.find(\n    (itm) => itm.language === props.selectedLanguage\n  );\n  if (answer === undefined || UserAnswersSel === undefined) {\n    return (\n      <div className=\"text-yellow-600 font-extrabold text-2xl text-center\">\n        No answer found!\n      </div>\n    );\n  } else {\n    switch (findQuestionType(props.question.type, props.questionTypes)) {\n      case questionTypeElementsType.MultipleChoice:\n        const userAnswer: MultipleChoiceQuestionAnswerInterface[] =\n          toMultipleChoice(answer.answer);\n        return (\n          <div className=\"w-full\">\n            {userAnswer\n              .filter((itm) => itm.status === true)\n              .map((item, i) => (\n                <div\n                  key={i + 1}\n                  onClick={props.onClick}\n                  className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                >\n                  <div className=\"text-xl text-blue-600\">\n                    <BsCheckSquareFill />\n                  </div>\n                  <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n                </div>\n              ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer\n                    .filter((itm) => itm.status === true)\n                    .map((item, i) => (\n                      <div\n                        key={i + 1}\n                        onClick={props.onClick}\n                        className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                      >\n                        <div className=\"text-xl text-blue-600\">\n                          <BsCheckSquareFill />\n                        </div>\n                        <div\n                          dangerouslySetInnerHTML={{ __html: item.value }}\n                        ></div>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      case questionTypeElementsType.SingleMultiple:\n        const userAnswerSingle: MultipleChoiceQuestionAnswerInterface[] =\n          toMultipleChoice(answer.answer);\n        return (\n          <div className=\"w-full\">\n            {userAnswerSingle\n              .filter((itm) => itm.status === true)\n              .map((item, i) => (\n                <div\n                  key={i + 1}\n                  onClick={props.onClick}\n                  className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                >\n                  <div className=\"text-xl text-blue-600\">\n                    <BsCheckCircleFill />\n                  </div>\n                  <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n                </div>\n              ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer\n                    .filter((itm) => itm.status === true)\n                    .map((item, i) => (\n                      <div\n                        key={i + 1}\n                        onClick={props.onClick}\n                        className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                      >\n                        <div className=\"text-xl text-blue-600\">\n                          <BsCheckCircleFill />\n                        </div>\n                        <div\n                          dangerouslySetInnerHTML={{ __html: item.value }}\n                        ></div>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n\n      case questionTypeElementsType.CalculatedMultipleChoice:\n        const userAnswer1: CalculatedMultipleChoiceQuestionAnswerInterface[] =\n          toCalculatedMultipleChoice(answer.answer);\n        return (\n          <div className=\"w-full\">\n            {userAnswer1\n              .filter((itm) => itm.status === true)\n              .map((item, i) => (\n                <div\n                  key={i + 1}\n                  onClick={props.onClick}\n                  className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                >\n                  <div className=\"text-xl text-blue-600\">\n                    <BsCheckSquareFill />\n                  </div>\n                  <div className=\"text-base font-normal text-gray-500\">\n                    {item.value.length > 1 ? (\n                      <>\n                        Between{\" \"}\n                        <span className=\"underline text-gray-600 font-extrabold\">\n                          {item.value[0]}\n                        </span>{\" \"}\n                        and{\" \"}\n                        <span className=\"underline text-gray-600 font-extrabold\">\n                          {item.value[1]}\n                        </span>\n                      </>\n                    ) : (\n                      <span className=\"text-gray-700\">\n                        {item.value[0].toString()}\n                      </span>\n                    )}\n                  </div>\n                </div>\n              ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer\n                    .filter((itm) => itm.status === true)\n                    .map((item, i) => (\n                      <div\n                        key={i + 1}\n                        onClick={props.onClick}\n                        className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 mb-1 py-3 font-bold\"\n                      >\n                        <div className=\"text-xl text-blue-600\">\n                          <BsCheckSquareFill />\n                        </div>\n                        <div className=\"text-base font-normal text-gray-500\">\n                          {item.value.length > 1 ? (\n                            <>\n                              Between{\" \"}\n                              <span className=\"underline text-blue-600 font-extrabold\">\n                                {item.value[0]}\n                              </span>{\" \"}\n                              and{\" \"}\n                              <span className=\"underline text-blue-600 font-extrabold\">\n                                {item.value[1]}\n                              </span>\n                            </>\n                          ) : (\n                            <span className=\"text-blue-600\">\n                              {item.value[0].toString()}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n\n      case questionTypeElementsType.Matching:\n        const userAnswerMatch: MatchingQuestionAnswerInterface[] = toMatching(\n          answer.answer\n        );\n        return (\n          <div className=\"w-full\">\n            {userAnswerMatch.map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 font-bold border border-blue-300\"\n              >\n                <div className=\"text-xl text-blue-600 font-bold p-3 pr-1 md:pr-3\">\n                  <div className=\"h-8 w-8 p-3 bg-blue-100 rounded-full flex items-center justify-center\">\n                    {i + 1}\n                  </div>\n                </div>\n                <div className=\"flex flex-col lg:flex-row items-center gap-3 w-full h-full truncate\">\n                  <div\n                    className=\"w-full mt-3 lg:mb-0\"\n                    dangerouslySetInnerHTML={{ __html: item.value }}\n                  ></div>\n                  <div className=\"flex flex-row items-center gap-3 w-full mb-3 lg:mb-0\">\n                    <div className=\"text-3xl text-gray-500 group-hover:text-blue-600\">\n                      <BsArrowRightSquareFill />\n                    </div>\n                    <div\n                      className=\"w-full mr-2\"\n                      dangerouslySetInnerHTML={{ __html: item.status }}\n                    ></div>\n                  </div>\n                </div>\n              </div>\n            ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer.map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 font-bold border border-blue-300\"\n                    >\n                      <div className=\"text-xl text-blue-600 font-bold p-3 pr-1 md:pr-3\">\n                        <div className=\"h-8 w-8 p-3 bg-blue-100 rounded-full flex items-center justify-center\">\n                          {i + 1}\n                        </div>\n                      </div>\n                      <div className=\"flex flex-col lg:flex-row items-center gap-3 w-full h-full truncate\">\n                        <div\n                          className=\"w-full mt-3 lg:mb-0\"\n                          dangerouslySetInnerHTML={{ __html: item.value }}\n                        ></div>\n                        <div className=\"flex flex-row items-center gap-3 w-full mb-3 lg:mb-0\">\n                          <div className=\"text-3xl text-gray-500 group-hover:text-blue-600\">\n                            <BsArrowRightSquareFill />\n                          </div>\n                          <div\n                            className=\"w-full mr-2\"\n                            dangerouslySetInnerHTML={{ __html: item.status }}\n                          ></div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      case questionTypeElementsType.TrueFalse:\n        const userAnswerTureFalse: TrueFalseQuestionAnswerInterface[] =\n          toTrueFalse(answer.answer);\n        return (\n          <div className=\"w-full\">\n            {userAnswerTureFalse\n              .filter((itm) => itm.status === true)\n              .map((item, i) => (\n                <div\n                  key={i + 1}\n                  onClick={props.onClick}\n                  className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                >\n                  <div className=\"text-xl\">\n                    <BsArrowRightCircleFill />\n                  </div>\n                  <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n                </div>\n              ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer\n                    .filter((itm) => itm.status === true)\n                    .map((item, i) => (\n                      <div\n                        key={i + 1}\n                        onClick={props.onClick}\n                        className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                      >\n                        <div className=\"text-xl\">\n                          <BsArrowRightCircleFill />\n                        </div>\n                        <div\n                          dangerouslySetInnerHTML={{ __html: item.value }}\n                        ></div>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      case questionTypeElementsType.Numeric:\n        const userAnswerNumerical: NumericalQuestionAnswerInterface[] =\n          toNumerical(answer.answer);\n        return (\n          <div className=\"w-full\">\n            {userAnswerNumerical.map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl\">\n                  <BsArrowRightCircleFill />\n                </div>\n                <div className=\"text-gray-600 text-base font-normal\">\n                  {item.value.length > 1 ? (\n                    <>\n                      Between{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[0]}\n                      </span>{\" \"}\n                      and{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[1]}\n                      </span>\n                    </>\n                  ) : (\n                    item.value.length > 0 && (\n                      <span className=\"text-gray-700\">\n                        {item.value[0].toString()}\n                      </span>\n                    )\n                  )}\n                </div>\n              </div>\n            ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer.map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl\">\n                        <BsArrowRightCircleFill />\n                      </div>\n                      <div className=\"text-gray-600 text-base font-normal\">\n                        {item.value.length > 1 ? (\n                          <>\n                            Between{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[0] - item.value[1]}\n                            </span>{\" \"}\n                            and{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[0] + item.value[1]}\n                            </span>\n                          </>\n                        ) : (\n                          item.value.length > 0 && (\n                            <span className=\"text-blue-700\">\n                              {item.value[0].toString()}\n                            </span>\n                          )\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      case questionTypeElementsType.SimpleCalculate:\n        const userAnswerSimpleCalculate: SimpleCalculatedQuestionAnswerInterface[] =\n          toSimpleCalculated(answer.answer);\n        return (\n          <div className=\"w-full\">\n            {userAnswerSimpleCalculate.map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl\">\n                  <BsArrowRightCircleFill />\n                </div>\n                <div className=\"text-gray-600 text-base font-normal\">\n                  {item.value.length > 1 ? (\n                    <>\n                      Between{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[0]}\n                      </span>{\" \"}\n                      and{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[1]}\n                      </span>\n                    </>\n                  ) : (\n                    item.value.length > 0 && (\n                      <span className=\"text-gray-700\">\n                        {item.value[0].toString()}\n                      </span>\n                    )\n                  )}\n                </div>\n              </div>\n            ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer.map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl\">\n                        <BsArrowRightCircleFill />\n                      </div>\n                      <div className=\"text-gray-600 text-base font-normal\">\n                        {item.value.length > 1 ? (\n                          <>\n                            Between{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[0]}\n                            </span>{\" \"}\n                            and{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[1]}\n                            </span>\n                          </>\n                        ) : (\n                          item.value.length > 0 && (\n                            <span className=\"text-blue-700\">\n                              {item.value[0].toString()}\n                            </span>\n                          )\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      case questionTypeElementsType.ShortAnswer:\n        const userAnswerShortAnswer: ShortAnswerQuestionAnswerInterface[] =\n          toShortAnswer(answer.answer);\n        return (\n          <div className=\"w-full\">\n            {userAnswerShortAnswer.map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl\">\n                  <BsArrowRightCircleFill />\n                </div>\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: item.value,\n                  }}\n                ></div>\n              </div>\n            ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer.map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl\">\n                        <BsArrowRightCircleFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{\n                          __html: item.value,\n                        }}\n                      ></div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      default:\n        return <div className=\"text-blue-600 font-extrabold\">Answer added</div>;\n    }\n  }\n};\n\nexport default FindAnswer;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getMyClaims,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../actions/document\";\nimport { getActiveSessionPlan } from \"../../actions/session\";\nimport { PopupAlertData } from \"../Alert/Popup\";\nimport ApplicationFormView from \"../../containers/Claimings/Candidate/ApplicationFormView\";\nimport {\n  isClaimAllowed,\n  ClaimGetDocTitle,\n} from \"../../containers/Claimings/Candidate/ClaimForm\";\nimport DocFormView from \"../../containers/Claimings/Candidate/DocFormView\";\nimport FormApplicationList from \"../../containers/Claimings/Candidate/FormApplicationList\";\nimport FormDocumentList from \"../../containers/Claimings/Candidate/FormDocumentList\";\nimport { isPlanActive } from \"../../containers/SessionSettings/SessionDetails\";\nimport {\n  PlansTypeKeys,\n  SessionPlanInterface,\n  claimApplicationsInterface,\n  PlansInterface,\n  CandidateClaimInterface,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { ClaimingReducerType } from \"../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { SessionPlanReducerInterface } from \"../../reducers/session\";\nimport { isEmptyOrSpaces, capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText } from \"../../utils/errors\";\n\ntype ClaimFormProps = {\n  // FOR SHORTCUT BUTTONS CALL\n  // REQUIRED PROPS\n  claim_type: PlansTypeKeys;\n  file_id: string;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  getActiveSessionPlan: Function;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n  activeSession: SessionPlanInterface | null;\n  found_claim: CandidateClaimInterface | null;\n};\n\nclass ClaimFormComponent extends Component<ClaimFormProps, ClaimFormState> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      activeSession: null,\n      found_claim: null,\n    };\n  }\n\n  isDocumentIdValid = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let doc = documents.find((item) => item.doc_id === doc_id);\n    if (doc) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (doc.validated_by.validation_status !== \"rejected\") {\n        return {\n          status: false,\n          msg: \"Only rejected document are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.state.activeSession &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.state.activeSession.session_plan_id,\n          doc_id\n        )\n      ) {\n        return {\n          status: false,\n          msg: \"This document already in claiming list!\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.success };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid document id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Documents, please try again\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  isApplicationIdValid = (\n    applications: claimApplicationsInterface[],\n    app_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let app = applications.find((item) => item.application_id === app_id);\n    console.log(\"====================================\");\n    console.log({ app, app_id });\n    console.log(\"====================================\");\n    if (app) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (app.application_status !== ApplicationStates.Rejected) {\n        return {\n          status: false,\n          msg: \"Only rejected application are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.state.activeSession &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.state.activeSession.session_plan_id,\n          app.application_id\n        )\n      ) {\n        return {\n          status: false,\n          msg: \"This application already in claiming list!\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid application id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Application, please try again!\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  isClaimTypeOpen = (\n    thisSession: SessionPlanInterface,\n    thisType: PlansTypeKeys\n  ): boolean => {\n    let data: PlansInterface | undefined;\n    if (thisType === PlansTypeKeys.APPLICATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.PLACEMENT_TRANSFER) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  isClaimBtnValid = (thisSession: SessionPlanInterface) => {\n    if (this.props.file_id || this.props.claim_type) {\n      // CHECK IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n      if (!this.props.claim_type) {\n        this.props.PushPopupAlert({\n          title: \"Claim type is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.props.file_id) {\n        this.props.PushPopupAlert({\n          title: \"Claim file is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.isClaimTypeOpen(thisSession, this.props.claim_type)) {\n        // IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n        // CHECK IF CLAIM TYPE IS OPEN ================\n        this.props.PushPopupAlert({\n          title: \"Claim type is closed!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      }\n    }\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  isClaimsAllowed = (\n    thisPeriod: SessionPlanInterface\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      this.props.claiming.myClaims === null &&\n      this.props.file_id &&\n      this.props.claim_type\n    ) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string, data?: CandidateClaimInterface[]) => {\n          // !status && setLoadingClaims(status);\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data) {\n            let claim = data.find(\n              (item) =>\n                item.claiming_on_id === this.props.file_id &&\n                item.period_id === thisPeriod.session_plan_id\n            );\n            if (claim) {\n              this.setState({ found_claim: claim });\n              return {\n                status: true,\n                msg: `You have already claimed on this ${this.displayClaimType(\n                  this.props.claim_type!\n                )}`,\n                alert: PopupAlertTheme.info,\n              };\n            }\n          }\n        }\n      );\n    } else if (\n      this.props.claiming.myClaims &&\n      this.props.file_id &&\n      this.props.claim_type\n    ) {\n      let claim = this.props.claiming.myClaims.find(\n        (item) =>\n          item.claiming_on_id === this.props.file_id &&\n          item.period_id === thisPeriod.session_plan_id\n      );\n      if (claim) {\n        this.setState({ found_claim: claim });\n\n        return {\n          status: true,\n          msg: `You have already claimed on this ${this.displayClaimType(\n            this.props.claim_type!\n          )}`,\n          alert: PopupAlertTheme.info,\n        };\n      }\n    }\n\n    return {\n      status: true,\n      msg: \"\",\n      alert: PopupAlertTheme.success,\n    };\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.sessionPlan.activeSessionPlan === null ||\n      this.props.sessionPlan.activeSessionPlan === \"none\"\n    ) {\n      this.props.getActiveSessionPlan(\n        (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data === \"none\") {\n            this.props.PushPopupAlert({\n              title: \"No session active session\",\n              theme: PopupAlertTheme.danger,\n            });\n            this.props.setFormState(false);\n            this.setState({\n              claimFileId: \"\",\n              thisClaimType: null,\n              thisClaimTypeId: \"\",\n              claimComment: \"\",\n              chooseClaimFile: false,\n              formType: \"DEFAULT\",\n              viewThisFile: \"\",\n              formError: null,\n            });\n          } else if (data) {\n            let _isClaimsAllowed = this.isClaimsAllowed(data);\n            if (!_isClaimsAllowed.status) {\n              this.props.PushPopupAlert({\n                title: _isClaimsAllowed.msg,\n                theme: _isClaimsAllowed.alert,\n              });\n            }\n            // this.props.setFormState(false);\n            this.setState({ activeSession: data });\n            this.isClaimBtnValid(data);\n          }\n        }\n      );\n    } else {\n      this.setState({\n        activeSession: this.props.sessionPlan.activeSessionPlan,\n      });\n      this.isClaimBtnValid(this.props.sessionPlan.activeSessionPlan);\n      let _isClaimsAllowed = this.isClaimsAllowed(\n        this.props.sessionPlan.activeSessionPlan\n      );\n      if (!_isClaimsAllowed.status) {\n        this.props.PushPopupAlert({\n          title: _isClaimsAllowed.msg,\n          theme: _isClaimsAllowed.alert,\n        });\n        this.props.setFormState(false);\n      }\n      this.setLoading(false);\n    }\n\n    if (this.props.documentReducer.documentCategory === null) {\n      this.props.getDocumentCategory();\n    }\n    if (this.props.documentReducer.documentSubCategory === null) {\n      this.props.getDocumentSubCategory();\n    }\n    if (this.props.documentReducer.documentFields === null) {\n      this.props.getDocumentFields();\n    }\n\n    if (this.props.claiming.candidateApplications === null) {\n      this.props.getMyRejectedApplications(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string, data?: claimApplicationsInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              // PROPS VALIDATION PROCESS ###############\n              if (\n                this.props.claim_type &&\n                this.props.file_id &&\n                this.state.formType === \"DEFAULT\"\n              ) {\n                if (this.props.claim_type === PlansTypeKeys.APPLICATION) {\n                  let _isApplicationIdValid = this.isApplicationIdValid(\n                    data,\n                    this.props.file_id\n                  );\n                  if (!_isApplicationIdValid.status) {\n                    this.props.PushPopupAlert({\n                      title: _isApplicationIdValid.msg,\n                      theme: _isApplicationIdValid.alert,\n                    });\n                    this.props.setFormState(false);\n                  } else {\n                    this.setState({\n                      thisClaimType: this.props.claim_type,\n                      claimFileId: this.props.file_id,\n                      formType: \"PROPS\",\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    if (this.props.claiming.candidateDocuments === null) {\n      this.props.getMyRejectedDocuments(\n        (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              // PROPS VALIDATION PROCESS ###############\n              if (\n                this.props.claim_type &&\n                this.props.file_id &&\n                this.state.formType === \"DEFAULT\"\n              ) {\n                if (\n                  this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n                ) {\n                  let _isDocumentIdValid = this.isDocumentIdValid(\n                    data,\n                    this.props.file_id\n                  );\n                  if (!_isDocumentIdValid.status) {\n                    this.props.PushPopupAlert({\n                      title: _isDocumentIdValid.msg,\n                      theme: _isDocumentIdValid.alert,\n                    });\n                    // setAlertError(_isDocumentIdValid.msg);\n                    this.props.setFormState(false);\n                  } else {\n                    this.setState({\n                      thisClaimType: this.props.claim_type,\n                      claimFileId: this.props.file_id,\n                      formType: \"PROPS\",\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    // PROPS VALIDATION PROCESS ###############\n    if (\n      this.props.claim_type &&\n      this.props.file_id &&\n      this.state.formType === \"DEFAULT\"\n    ) {\n      this.setState({ thisClaimType: this.props.claim_type });\n      if (\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION &&\n        this.props.claiming.candidateDocuments\n      ) {\n        let _isDocumentIdValid = this.isDocumentIdValid(\n          this.props.claiming.candidateDocuments,\n          this.props.file_id\n        );\n        if (!_isDocumentIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isDocumentIdValid.msg,\n            theme: _isDocumentIdValid.alert,\n          });\n          // setAlertError(_isDocumentIdValid.msg);\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n      if (\n        this.props.claim_type === PlansTypeKeys.APPLICATION &&\n        this.props.claiming.candidateApplications\n      ) {\n        let _isApplicationIdValid = this.isApplicationIdValid(\n          this.props.claiming.candidateApplications,\n          this.props.file_id\n        );\n        if (!_isApplicationIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isApplicationIdValid.msg,\n            theme: _isApplicationIdValid.alert,\n          });\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  cleanToClose = () => {\n    this.props.setFormState(false);\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.state.activeSession) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n\n    this.setLoadingForm(true);\n    try {\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.state.activeSession.session_plan_id,\n          reason: this.state.claimComment,\n          old_reason: this.getValidation(this.state.claimFileId).old_reason,\n          old_status: this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by: this.getValidation(this.state.claimFileId)\n            .old_evaluated_by,\n        }\n      );\n      console.log({ createClaim: res.data });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose();\n        this.props.setFormState(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setFormState(false);\n    this.setLoadingForm(false);\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  render() {\n    if (this.state.found_claim !== null) {\n      return (\n        <div>\n          <h2 className=\"text-center text-2xl font-bold p-3 text-gray-500\">\n            Claims on this {this.displayClaimType(this.props.claim_type!)}\n          </h2>\n          {this.state.found_claim.claims.length >= 1 ? (\n            <div>\n              {this.state.found_claim.claims.map((itm) => (\n                <div className=\"p-2 border rounded mb-2\">\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Created date:</span>{\" \"}\n                    <b>{itm.date_created}</b>\n                  </div>\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Reason:</span>{\" \"}\n                    <p>{itm.reason}</p>\n                  </div>\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Evaluation comment:</span>{\" \"}\n                    <p>{itm.evaluation_comment}</p>\n                  </div>\n                  <div className=\"p-1\">\n                    <span className=\"text-gray-400 block\">decision:</span>{\" \"}\n                    <h3 className=\"text-xl font-bold\">\n                      {itm.decision_taken_status}\n                    </h3>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div>No claims found!</div>\n          )}\n        </div>\n      );\n    }\n\n    if (\n      this.state.loading ||\n      this.state.activeSession === null ||\n      (this.props.claiming.myClaims === null &&\n        this.props.file_id &&\n        this.props.claim_type)\n    ) {\n      return null;\n    }\n    return (\n      <div className=\"pb-3\">\n        {/* CLAIM FORM ============================================== */}\n        {this.state.viewThisFile.length <= 0 && (\n          <form onSubmit={(e) => this.handleSubmit(e)}>\n            <div className=\"px-6 pb-3\">\n              {this.state.alertError && (\n                <div\n                  className=\"alert-warning cursor-pointer\"\n                  onClick={() => this.setAlertError(null)}\n                >\n                  {this.state.alertError}\n                </div>\n              )}\n              <div className=\"text-base text-gray-700 sm:text-lg\">\n                {/* SELECT CLAIM TYPE ============================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>Claim type</label>\n                  <select\n                    className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                      this.state.formType === \"PROPS\" && \"cursor-not-allowed\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_type\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                      this.selectClaimType(e.target.value);\n                      this.setClaimFileId(\"\");\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_type\" &&\n                        this.setFormError(null);\n                    }}\n                    value={\n                      this.state.thisClaimType ? this.state.thisClaimType : \"\"\n                    }\n                    disabled={\n                      this.state.loadingForm || this.state.formType === \"PROPS\"\n                    }\n                  >\n                    <option value=\"\">Choose claim type</option>\n                    {Object.values(PlansTypeKeys).map((item, index) => (\n                      <option value={item} key={index + item}>\n                        {capitalizeFirstLetter(\n                          item.toLocaleLowerCase().replace(/_/g, \" \")\n                        )}\n                      </option>\n                    ))}\n                  </select>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_type\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END SELECT CLAIM TYPE ============================================== */}\n\n                {/* SELECT FILE TO CLAIM ON ============================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>\n                    {this.generateChooseFileTitle(this.state.thisClaimType)}\n                  </label>\n                  <div\n                    className={`text-left bg-white border-2 ${\n                      this.state.formType !== \"PROPS\"\n                        ? \"border-gray-700\"\n                        : \"border-gray-400 text-gray-500\"\n                    } rounded w-full ${\n                      this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_file\"\n                        ? \"border-red-500\"\n                        : \"\"\n                    } border-2 ${\n                      this.state.thisClaimType &&\n                      !this.state.chooseClaimFile &&\n                      this.state.formType !== \"PROPS\"\n                        ? \"cursor-pointer\"\n                        : !this.state.chooseClaimFile && \"cursor-not-allowed\"\n                    }`}\n                    title={\n                      !this.state.thisClaimType\n                        ? \"Choose claim type first!\"\n                        : \"\"\n                    }\n                    onClick={() => {\n                      this.state.formType === \"DEFAULT\" &&\n                        this.state.thisClaimType &&\n                        !this.state.chooseClaimFile &&\n                        this.setChooseClaimFile(true);\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_file\" &&\n                        this.setFormError(null);\n                    }}\n                  >\n                    {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                    {this.state.claimFileId.length > 0 &&\n                    !this.state.chooseClaimFile ? (\n                      <p className=\"my-1 mx-2\">\n                        {this.state.thisClaimType ===\n                          PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          ClaimGetDocTitle(\n                            this.props.documentReducer,\n                            this.getDocumentById(\n                              this.props.claiming.candidateDocuments,\n                              this.state.claimFileId\n                            )\n                          ).main}\n                        {this.state.thisClaimType ===\n                          PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.getApplicationById(\n                            this.props.claiming.candidateApplications,\n                            this.state.claimFileId\n                          ).position.position_title}\n                      </p>\n                    ) : (\n                      !this.state.chooseClaimFile && (\n                        <p className=\"my-1 mx-2\">\n                          Select Claim{\" \"}\n                          {this.state.thisClaimType &&\n                            this.state.thisClaimType\n                              .toLocaleLowerCase()\n                              .replace(/_/g, \" \")}\n                        </p>\n                      )\n                    )}\n                    {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                    {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                    {this.state.chooseClaimFile &&\n                      this.state.thisClaimType ===\n                        PlansTypeKeys.DOCUMENT_VALIDATION &&\n                      this.props.claiming.candidateDocuments &&\n                      this.props.claiming.myClaims &&\n                      this.props.sessionPlan.activeSessionPlan &&\n                      this.props.sessionPlan.activeSessionPlan !== \"none\" && (\n                        <FormDocumentList\n                          setChooseClaimFile={this.setChooseClaimFile}\n                          setClaimFileId={this.setClaimFileId}\n                          setViewThisFile={this.setViewThisFile}\n                          viewThisFile={this.state.viewThisFile}\n                          candidateDocuments={\n                            this.props.claiming.candidateDocuments\n                          }\n                          documentCategories={this.props.documentReducer}\n                          myClaims={this.props.claiming.myClaims}\n                          activeSession={\n                            this.props.sessionPlan.activeSessionPlan\n                          }\n                        />\n                      )}\n                    {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                    {/* LISTING OF REJECTED APPLICATION ============================ */}\n                    {this.state.chooseClaimFile &&\n                      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                      this.props.claiming.candidateApplications &&\n                      this.props.claiming.myClaims &&\n                      this.props.sessionPlan.activeSessionPlan &&\n                      this.props.sessionPlan.activeSessionPlan !== \"none\" && (\n                        <FormApplicationList\n                          setChooseClaimFile={this.setChooseClaimFile}\n                          setClaimFileId={this.setClaimFileId}\n                          setViewThisFile={this.setViewThisFile}\n                          viewThisFile={this.state.viewThisFile}\n                          candidateApplications={\n                            this.props.claiming.candidateApplications\n                          }\n                          myClaims={this.props.claiming.myClaims}\n                          activeSession={\n                            this.props.sessionPlan.activeSessionPlan\n                          }\n                        />\n                      )}\n                    {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                  </div>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_file\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                {/* CLAIM COMMENT ============================================== */}\n                <div className=\"flex flex-col\">\n                  <label>Comment</label>\n                  <textarea\n                    className={`text-left input-white w-20 inline-block ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_comment\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    placeholder={`Claim comment`}\n                    style={{ resize: \"none\" }}\n                    value={this.state.claimComment}\n                    onChange={(e) => {\n                      this.setClaimComment(e.target.value);\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" &&\n                        this.setFormError(null);\n                    }}\n                    rows={3}\n                    disabled={this.state.loadingForm}\n                  ></textarea>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_comment\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END CLAIM COMMENT ============================================== */}\n              </div>\n              <div className=\"pt-3 flex justify-between\">\n                <button\n                  onClick={() => this.cleanToClose()}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                    this.state.loadingForm && \"cursor-not-allowed\"\n                  }`}\n                  type=\"button\"\n                  disabled={this.state.loadingForm}\n                >\n                  Exit\n                </button>\n                <button\n                  className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                    this.state.loadingForm && \"cursor-wait\"\n                  }`}\n                  type=\"submit\"\n                  disabled={this.state.loadingForm}\n                >\n                  {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                </button>\n              </div>\n            </div>\n          </form>\n        )}\n        {/* END CLAIM FORM ============================================== */}\n\n        {/* CLAIM DOCUMENT VIEW ============================================== */}\n        {this.state.viewThisFile.length > 0 &&\n          this.props.claiming.candidateDocuments &&\n          this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION && (\n            <DocFormView\n              thisDoc={this.getDocumentById(\n                this.props.claiming.candidateDocuments,\n                this.state.viewThisFile\n              )}\n              setViewThisFile={this.setViewThisFile}\n              documentCategories={this.props.documentReducer}\n              setChooseClaimFile={this.setChooseClaimFile}\n              setClaimFileId={this.setClaimFileId}\n            />\n          )}\n        {/* END CLAIM DOCUMENT VIEW ============================================== */}\n        {/* CLAIM APPLICATION VIEW ============================================== */}\n        {this.state.viewThisFile.length > 0 &&\n          this.props.claiming.candidateApplications &&\n          this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n            <ApplicationFormView\n              thisApplication={this.getApplicationById(\n                this.props.claiming.candidateApplications,\n                this.state.viewThisFile\n              )}\n              documentCategories={this.props.documentReducer}\n              setChooseClaimFile={this.setChooseClaimFile}\n              setClaimFileId={this.setClaimFileId}\n              setViewThisFile={this.setViewThisFile}\n            />\n          )}\n        {/* END CLAIM APPLICATION VIEW ============================================== */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  sessionPlan,\n}: StoreState): {\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n} => {\n  return {\n    auth: auth,\n    sessionPlan,\n    documentReducer: document,\n    claiming,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getActiveSessionPlan,\n  getMyClaims,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(ClaimFormComponent);\n","import React, { Component, Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { BsFillFileEarmarkTextFill } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"../../utils/app.config\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Auth,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n  FC_Access,\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { UserExamStatus, UserExamsListInterface } from \"../../interfaces/exam\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { DATE, getMinutesFromTwoDates } from \"../../utils/functions\";\nimport { CountDown } from \"../../components/CountDown/CountDown\";\nimport { ExamTimeStatus, validateExamDate } from \"../../utils/question_bank\";\nimport { course, PositionAPI, PositionAPICourse } from \"../../interfaces\";\nimport {\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport { MdClose } from \"react-icons/md\";\nimport ChooseExamCenter, {\n  LocationTableInterface,\n} from \"../Application/ExamCenter/ChooseExamCenter\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { AnswersDetails } from \"../../components/AnswersDetails/AnswersDetails\";\n\nexport const compareWithToday = (tooday: moment.Moment, date: string) => {\n  const myDate = DATE(date, \"MM/DD/YYYY\");\n  let todayConverted =\n    (tooday.get(\"month\") < 9 ? \"0\" : \"\") +\n    (tooday.get(\"month\") + 1).toString() +\n    \"/\" +\n    tooday.get(\"date\") +\n    \"/\" +\n    tooday.get(\"year\");\n  if (new Date(myDate).getTime() < new Date(todayConverted).getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport interface ExamDoneDetailsAnswers {\n  course: string;\n  course_name: string;\n  discription: string;\n  termes: string;\n  rules: {\n    right_click_enabled: boolean;\n    copy_enabled: boolean;\n    paste_enabled: boolean;\n    stop_candidate_when_comeback: boolean;\n    allow_to_leave_browser: boolean;\n  };\n  period: string;\n  exam_date: string;\n}\n\ninterface NotPreparedExam {\n  course: string;\n  course_name: string;\n  course_code: string;\n  position: string;\n}\ninterface changeLocProps {\n  changeLocation: () => void;\n}\ninterface CandidateExamsProps {\n  FC_GetProfileDetails: Function;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  LoadCandidateApplications: (\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  setSelectedCourse: (course: course | null) => void;\n  setSelectedPosition: (position: PositionAPI) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  AddUserApplication: (application: GetApplicationsAPI) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n}\n\nconst ChangeLocationComponent = (props: changeLocProps): JSX.Element => {\n  const [display, setDisplay] = useState<boolean>(true);\n  if (display === false) {\n    return <div></div>;\n  }\n  return (\n    <div className=\"absolute right-2 left-2 md:right-1/4 md:left-1/4 lg:left-1/2 lg:right-auto bg-yellow-50 shadow-xl rounded py-1 px-1 flex flex-row justify-between items-center gap-2 text-yellow-800 -mt-5 lg:-mt-8\">\n      <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-1\">\n        <span className=\"font-bold\">You are advised to change location</span>\n        <div\n          onClick={props.changeLocation}\n          className=\"px-2 py-1 rounded bg-blue-100 text-blue-600 w-max cursor-pointer\"\n        >\n          Change\n        </div>\n      </div>\n      <div\n        onClick={() => setDisplay(false)}\n        className=\"bg-yellow-100 text-yellow-600 rounded-full flex items-center justify-center p-1 h-8 w-8 cursor-pointer\"\n      >\n        <MdClose className=\"text-4xl\" />\n      </div>\n    </div>\n  );\n};\n\ninterface candidatePendingExamsList {\n  preparedExam: UserExamsListInterface[];\n  notPreparedExam: NotPreparedExam[];\n}\ninterface CandidateExamsState {\n  loading: boolean;\n  loadingExamsDone: boolean;\n  candidateExams: candidatePendingExamsList | null;\n  activeExams: string[];\n  candidateApplications: GetApplicationsAPI[] | null;\n  selectedCourse: course | null;\n  centersModal: boolean;\n  maxExamModal: boolean;\n  selectedPosition: string;\n  successMessage: string;\n  selectedExam: ExamDoneDetailsAnswers | null;\n}\n\nexport class _CandidateExams extends Component<\n  CandidateExamsProps,\n  CandidateExamsState\n> {\n  constructor(props: CandidateExamsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingExamsDone: false,\n      candidateExams: null,\n      activeExams: [],\n      candidateApplications: null,\n      selectedCourse: null,\n      centersModal: false,\n      maxExamModal: false,\n      selectedPosition: \"\",\n      successMessage: \"\",\n      selectedExam: null,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setloadingExamsDone = (status: boolean) => {\n    this.setState({ loadingExamsDone: status });\n  };\n  loadCandidateExams = async (user: string, period: string) => {\n    this.setLoading(true);\n    setAxiosToken();\n    try {\n      const res = await axios.get<candidatePendingExamsList>(\n        `${API.QBank}/exam/user/${user}/${period}`\n      );\n      this.setState({ candidateExams: res.data });\n      // console.log(\"My exams list: \", res.data);\n    } catch (error: any) {\n      console.log(\"My exams error: \", { ...error });\n      alert(errorToText(error));\n    }\n    this.setLoading(false);\n  };\n  loadUserProfileDetails = () => {\n    this.setState({\n      loading: true,\n    });\n    this.props.FC_GetProfileDetails(\n      this.props.auth.user.user_id,\n      (status: boolean, msg: string) => {\n        if (status === true) {\n          this.setState({\n            loading: false,\n          });\n        } else {\n          this.setState({\n            loading: false,\n          });\n        }\n      }\n    );\n    this.setState({\n      loading: false,\n    });\n  };\n\n  InitializationFn = (application: GetApplicationsAPI) => {\n    if (this.props.candidateExam.user_exams_done.length === 0) {\n      this.props.loadExamsDone(\n        application.application_session.session_plan_id,\n        this.props.auth.user.user_id,\n        this.setloadingExamsDone\n      );\n    }\n    for (let course of application.position.courses) {\n      let testDone = this.props.candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = application.exams.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          this.props.InitializeExamDetails(\n            application.application_session.session_plan_id,\n            course.course_id,\n            center_id.district_id,\n            center_id.center_id,\n            center_id.room_id,\n            application.position.position_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n  loadUserApplications = async () => {\n    this.setLoading(true);\n    try {\n      const res = await axios.get<GetApplicationsAPI[]>(\n        `${API.APPLICATION}/application/${this.props.auth.user.user_id}`\n      );\n      if (res.status === 200) {\n        this.setState({ candidateApplications: res.data });\n        for (let application of res.data) {\n          this.InitializationFn(application);\n        }\n        if (\n          this.props.candidateApplications.candidate_applications === null ||\n          this.props.candidateApplications.candidate_applications.length === 0\n        ) {\n          for (let application of res.data) {\n            this.props.AddUserApplication(application);\n          }\n        }\n      }\n    } catch (error: any) {\n      console.log(\"Appl ex Err: \", { ...error });\n    }\n    this.setLoading(false);\n  };\n  findLocation = (position_id: string, course_id: string) => {\n    if (this.state.candidateApplications !== null) {\n      const test = this.state.candidateApplications.find(\n        (item) =>\n          item.position.position_id === position_id &&\n          item.exams.filter((itm) => itm.course_id === course_id)\n      );\n      if (test !== undefined) {\n        let course = test.exams.find((itm) => itm.course_id === course_id);\n        if (course !== undefined) {\n          return course;\n        }\n      }\n    }\n    return null;\n  };\n  updateLocation = async (\n    application_id: string,\n    exams: sentExamInterface[]\n  ) => {\n    this.setState({ loading: true });\n    for (let i in exams) {\n      try {\n        const res = await axios.post(\n          `${API.APPLICATION}/application/updatemissed`,\n          {\n            application_id: application_id,\n            exams: exams[i],\n          }\n        );\n        if (res.status === 200) {\n          this.setState({\n            selectedCourse: null,\n            centersModal: false,\n            maxExamModal: false,\n            selectedPosition: \"\",\n            successMessage: \"Location updated successfully!\",\n          });\n          this.loadUserApplications();\n        }\n      } catch (error: any) {\n        console.log(\"Update loc err: \", { ...error });\n      }\n    }\n  };\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.state.candidateApplications !== null) {\n      let application = this.state.candidateApplications.find(\n        (item) => item.position.position_id === this.state.selectedPosition\n      );\n      if (application !== undefined) {\n        this.updateLocation(application.application_id, exams);\n      } else {\n        alert(\"Invalid application\");\n      }\n    } else {\n      alert(\"Missing application\");\n    }\n  };\n  addLocation = (\n    course_id: string,\n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string\n  ) => {\n    return this.updateLocationFunction([\n      {\n        course_id: course_id,\n        proctoring_type: \"Center\",\n        center_id: location.center_id,\n        district_id: location.district_id,\n      },\n    ]);\n  };\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.setLoading);\n\n    if (\n      this.props.auth.user.sex === \"\" ||\n      this.props.auth.user.sex.length === 0\n    ) {\n      this.loadUserProfileDetails();\n    }\n    this.loadUserApplications();\n    if (this.props.auth.application_session !== null) {\n      this.loadCandidateExams(\n        this.props.auth.user.user_id,\n        this.props.auth.application_session.session_plan_id\n      );\n    }\n    if (this.props.auth.application_session !== null) {\n      this.props.loadExamsDone(\n        this.props.auth.application_session.session_plan_id,\n        this.props.auth.user.user_id,\n        this.setloadingExamsDone\n      );\n    }\n  };\n\n  removeDuplicatesExams = (\n    exams: UserExamsListInterface[]\n  ): UserExamsListInterface[] => {\n    let temp: UserExamsListInterface[] = [];\n    if (this.state.candidateApplications !== null) {\n      for (let item of exams) {\n        if (\n          this.state.candidateApplications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm._id === item._id) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n\n  removeDuplicatesNotPreparedExams = (\n    exams: NotPreparedExam[]\n  ): NotPreparedExam[] => {\n    let temp: NotPreparedExam[] = [];\n    if (this.state.candidateApplications !== null) {\n      for (let item of exams) {\n        if (\n          this.state.candidateApplications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm.course === item.course) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n  setTimeOut = (exam_id: string) => {\n    let temps: string[] = this.state.activeExams;\n    this.setState({\n      activeExams: [...temps, exam_id],\n    });\n  };\n  selectApplication = (\n    applications: GetApplicationsAPI[] | null,\n    position_id: string,\n    course_id: string\n  ): GetApplicationsAPI | null => {\n    if (applications !== null) {\n      let temp = applications.find(\n        (item) => item.position.position_id === position_id\n      );\n      if (temp !== undefined) {\n        if (\n          temp.position.courses.find((itm) => itm.course_id === course_id) !==\n          undefined\n        ) {\n          return temp;\n        }\n      }\n    }\n    return null;\n  };\n  setMaxExamModal = (status: boolean) => {\n    this.setState({ maxExamModal: status });\n  };\n\n  changeLocation = (item: PositionAPICourse) => {\n    this.setState({ selectedCourse: item, centersModal: true });\n    this.setMaxExamModal(true);\n  };\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n    this.setMaxExamModal(false);\n  };\n\n  render() {\n    const today = moment().tz(TimeZone);\n    // console.log(\"TODAY: \", today.get(\"days\"));\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />;\n    }\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    return (\n      <Fragment>\n        {this.state.selectedCourse === null ? (\n          <div className=\"mt-2 -ml-2 mr-3 pb-5\">\n            <div className=\"rounded mt-2\">\n              <div className=\"flex flex-row items-center gap-3\">\n                <Link\n                  to=\"/apps-page\"\n                  title=\"Back to menus\"\n                  className=\"bg-white group hover:bg-blue-50 h-10 w-10 flex items-center justify-center rounded-full cursor-pointer\"\n                >\n                  <BiArrowBack className=\"text-3xl text-blue-600 group-hover:text-blue-800\" />\n                </Link>\n                <div className=\"flex flex-col\">\n                  <span className=\"font-extrabold text-3xl\">My exams</span>\n                  <span className=\"text-gray-600 text-sm\">\n                    List of exams that are assigned to me\n                  </span>\n                </div>\n              </div>\n            </div>\n            {this.state.successMessage !== \"\" && (\n              <div\n                title=\"Click to close the message\"\n                onClick={() => this.setState({ successMessage: \"\" })}\n                className=\"animate__animated animate__zoomIn px-3 py-2 bg-green-500 text-white my-2 rounded cursor-pointer\"\n              >\n                {this.state.successMessage}\n              </div>\n            )}\n            {this.state.loading === true ||\n            this.state.loadingExamsDone === true ||\n            this.state.candidateExams === null ||\n            this.state.candidateApplications == null ? (\n              <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n                <Loading />\n              </div>\n            ) : this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).length === 0 ? (\n              <div className=\"bg-gray-50 rounded px-4 py-5 text-center font-bold mt-2 text-2xl text-gray-400\">\n                No exams found\n              </div>\n            ) : (\n              this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).map((item, i) => (\n                <div key={i + 1} className=\"my-2 rounded bg-white p-2 group\">\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div>\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-600 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col w-full\">\n                        <span className=\"text-base text-gray-800 font-extrabold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center justify-start w-full gap-3 -mt-1\">\n                          <div className=\"text-sm text-gray-500 group-hover:text-blue-600\">\n                            Date: {DATE(item.exam_date, \"DD/MM/YYYY\")}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-gray-100 underline text-gray-500  font-bold rounded-full px-2\">\n                            Start time: {item.start_time}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-blue-100 text-blue-900  font-bold rounded-full px-2\">\n                            Status: {item.user_status}\n                          </div>\n                        </div>\n                        {this.findLocation(item.position, item.course) !==\n                          null && (\n                          <div className=\"flex flex-row items-center gap-2 mt-2\">\n                            <div>\n                              Exam center:{\" \"}\n                              <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                {\n                                  this.findLocation(item.position, item.course)\n                                    ?.center_name\n                                }\n                              </span>\n                            </div>\n                            <div className=\"w-max flex flex-col md:flex-row\">\n                              Room number:{\" \"}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 ? (\n                                <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                  Waiting room\n                                </span>\n                              ) : (\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.room_number\n                                  }\n                                </span>\n                              )}\n                              {/* Change loc */}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 &&\n                                validateExamDate(\n                                  item.exam_date,\n                                  item.start_time,\n                                  item.end_time\n                                ) !== ExamTimeStatus.Expired && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"lg:w-full flex flex-row items-center justify-end\">\n                      {this.state.activeExams.find(\n                        (itm) => itm === item._id\n                      ) !== undefined ||\n                      item.user_status === UserExamStatus.Editing ||\n                      item.user_status === UserExamStatus.Paused ? (\n                        validateExamDate(\n                          item.exam_date,\n                          item.start_time,\n                          item.end_time\n                        ) !== ExamTimeStatus.Expired ? (\n                          this.selectApplication(\n                            this.state.candidateApplications,\n                            item.position,\n                            item.course\n                          )?.application_status !==\n                          ApplicationStates.Shortlisted ? (\n                            <div className=\"text-yellow-800 font-extrabold text-base bg-yellow-100 rounded px-3 py-1 cursor-not-allowed\">\n                              Not shortlisted\n                            </div>\n                          ) : (\n                            <div\n                              onClick={() => {\n                                let application = this.selectApplication(\n                                  this.state.candidateApplications,\n                                  item.position,\n                                  item.course\n                                );\n                                if (application !== null) {\n                                  if (\n                                    application.application_status ===\n                                    ApplicationStates.Shortlisted\n                                  ) {\n                                    // Select exam\n                                    this.props.setSelectedPosition(\n                                      application.position\n                                    );\n                                    this.props.setSelectedCourse(\n                                      application.position.courses.find(\n                                        (itm) => itm.course_id === item.course\n                                      )!\n                                    );\n                                    this.props.setSelectedCandidateExam(\n                                      item._id\n                                    );\n                                  } else {\n                                    alert(\n                                      \"Corresponding application is not shortlisted!\"\n                                    );\n                                  }\n                                } else {\n                                  alert(\"Invalid exam!\");\n                                }\n                              }}\n                              className={`${\n                                item.user_status === UserExamStatus.Editing ||\n                                item.user_status === UserExamStatus.Paused\n                                  ? \"bg-green-600 group-hover:bg-green-800\"\n                                  : \"bg-blue-600 group-hover:bg-blue-800\"\n                              } btn  text-white cursor-pointer w-max`}\n                            >\n                              {item.user_status === UserExamStatus.Editing\n                                ? \"Back to Exam\"\n                                : item.user_status === UserExamStatus.Paused\n                                ? \"Paused, back to exam\"\n                                : \"Start Exam\"}\n                            </div>\n                          )\n                        ) : item.user_status === UserExamStatus.Editing ||\n                          item.user_status === UserExamStatus.Done ||\n                          item.user_status === UserExamStatus.Paused ||\n                          item.user_status === UserExamStatus.Removed ? (\n                          <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                            <span>Marks</span>\n                            <span className=\"text-2xl font-extrabold -mt-2\">\n                              {item.user_marks.toFixed(2)}%\n                            </span>\n                            <div\n                              onClick={() =>\n                                this.setState({\n                                  selectedExam: {\n                                    course: item.course,\n                                    course_name: item.course_name,\n                                    discription: item.discription,\n                                    termes: item.termes,\n                                    rules: item.rules,\n                                    period: item.period,\n                                    exam_date: item.exam_date,\n                                  },\n                                })\n                              }\n                              className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                            >\n                              Check details\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"bg-yellow-100 text-yellow-700 font-extrabold text-base px-3 py-1 rounded-md w-max\">\n                            Expired\n                          </div>\n                        )\n                      ) : item.found === false ? (\n                        <div\n                          title=\"Please wait for the exam time\"\n                          className=\"text-lg lg:text-xl font-extrabold bg-green-100 text-green-700 px-3 py-1 rounded cursor-not-allowed w-max\"\n                        >\n                          <CountDown\n                            start_time={new Date(today.toString()).toString()}\n                            duration_min={getMinutesFromTwoDates(\n                              new Date(today.toString()),\n                              new Date(\n                                DATE(item.exam_date, \"MM/DD/YYYY\") +\n                                  \" \" +\n                                  item.start_time\n                              )\n                            )}\n                            timeout={() => this.setTimeOut(item._id)}\n                            returnString={true}\n                            labels={true}\n                            days\n                          />\n                        </div>\n                      ) : (\n                        <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                          <span>Marks</span>\n                          <span className=\"text-2xl font-extrabold -mt-2\">\n                            {item.user_marks.toFixed(2)}%\n                          </span>\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selectedExam: {\n                                  course: item.course,\n                                  course_name: item.course_name,\n                                  discription: item.discription,\n                                  termes: item.termes,\n                                  rules: item.rules,\n                                  period: item.period,\n                                  exam_date: item.exam_date,\n                                },\n                              })\n                            }\n                            className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                          >\n                            Check details\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n            {/* Not prepared exams */}\n            {this.state.candidateExams !== null &&\n              this.state.loading !== true &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).length > 0 &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).map((item, i) => (\n                <div\n                  key={i + 1}\n                  className=\"my-2 rounded bg-white p-2 py-3 group\"\n                >\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div className=\"\">\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-300 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-base text-gray-600 font-bold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center gap-3 -mt-1\">\n                          {this.findLocation(item.position, item.course) !==\n                            null && (\n                            <div className=\"flex flex-row items-center gap-2 mt-2\">\n                              <div className=\"flex flex-col md:flex-row md:items-center\">\n                                Exam center:{\" \"}\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.center_name\n                                  }\n                                </span>\n                              </div>\n                              <div className=\"w-max flex flex-col md:flex-row md:items-center\">\n                                Room number:{\" \"}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 ? (\n                                  <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                    Waiting room\n                                  </span>\n                                ) : (\n                                  <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                    {\n                                      this.findLocation(\n                                        item.position,\n                                        item.course\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )}\n                                {/* Change loc */}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-100 text-gray-600 font-extrabold text-base px-3 py-1 rounded-md\">\n                      Not prepared\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        ) : this.state.loading === true ? (\n          <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n            <Loading />\n          </div>\n        ) : (\n          <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mr-1 -ml-3 rounded-t-md bg-white shadow-md pb-5\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Change exam location\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() => {\n                        this.setState({\n                          centersModal: false,\n                          selectedCourse: null,\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ChooseExamCenter\n              positionCourses={this.state.selectedCourse}\n              addLocation={this.addLocation}\n              closeModal={this.closeModal}\n            />\n          </div>\n        )}\n        {this.state.selectedExam !== null && (\n          <Modal\n            title={\n              <div className=\"text-2xl font-extrabold text-blue-600 px-2\">\n                Exam result details\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ selectedExam: null })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            {/* Check if period is open for claims */}\n            {compareWithToday(today, this.state.selectedExam.exam_date) ===\n            false ? (\n              <div className=\"bg-yellow-100 text-yellow-800 font-extrabold text-center flex flex-col items-center justify-center text-lg px-2 py-6\">\n                <div className=\"mb-5 text-3xl\">\n                  Please wait, the exam details will be visible soon!\n                </div>\n                <div className=\"text-gray-600\">\n                  Please come after this date:{\" \"}\n                </div>\n                <div className=\"bg-white rounded-full px-3 py-1 text-gray-700\">\n                  {DATE(new Date(this.state.selectedExam.exam_date).toString())}\n                </div>\n              </div>\n            ) : (\n              <AnswersDetails\n                exam_id={this.state.selectedExam}\n                showAnswers={false}\n              />\n            )}\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  candidateExam,\n  candidateApplications,\n  periods,\n}: StoreState): {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    candidateExam: candidateExam,\n    candidateApplications: candidateApplications,\n    periods: periods,\n  };\n};\n\nexport const CandidateExams = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n})(_CandidateExams);\n","import React from 'react'\nimport { applicationHistory, ApplicationStatesDescription } from '../../../interfaces/application'\nimport { DATE } from '../../../utils/functions'\n\ninterface ApplicationHistoryProps {\n  applicationHistory: applicationHistory[];\n}\n\nconst ApplicationHistory = (props: ApplicationHistoryProps) => {\n  return (\n    <div className=\"flex flex-col justify-between items-start gap-1 bg-white px-3 py-2\">\n      {/* <span className=\"text-sm text-blue-800 font-bold\">Application status history</span> */}\n      <hr className=\"bg-blue-600\" />\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-3\">\n      {props.applicationHistory !== undefined &&\n        props.applicationHistory.length > 0 && \n        props.applicationHistory.map((item, i) => (\n          <div key={i + 1} className=\"col-span-1 flex flex-col border border-blue-500 rounded px-3 py-2\">\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Date:</span>\n              <span className=\"font-bold\">{DATE(item.date, \"DD/MM/YYYY\")}</span>\n            </div>\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Action:</span>\n              <span className=\"font-bold\">{item.comment}</span>\n            </div>\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Application status:</span>\n              <span className=\"font-bold\">{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption}</span>\n            </div>\n          </div>\n        ))}\n      </div> \n    </div>\n  )\n}\n\nexport default ApplicationHistory\n","import React, { Component } from \"react\";\nimport { MdInfo, MdLocationOn } from \"react-icons/md\";\nimport { Redirect } from \"react-router-dom\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { LocationsDataStoreInterface } from \"../../../actions/locations_data\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { LoadingType } from \"../../../components/Loading/LoadingV2\";\nimport { applicationExamAPI } from \"../../../interfaces/application\";\nimport { DATE } from \"../../../utils/functions\";\nimport { LocationTableInterface } from \"../../Application/ExamCenter/ChooseExamCenter\";\n\ninterface ExamDetailsProps {\n  locationDetails: applicationExamAPI | undefined;\n  examDetails: InitialExamDetails | null;\n  locationsData: LocationsDataStoreInterface;\n  loadAllLocationsData: (callback: (loading: boolean) => void) => void;\n  setSelectedLocationData: (locationData: LocationTableInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  // selectedCourse: course;\n}\ninterface ExamDetailsState {\n  loading: boolean;\n}\n\nclass ExamDetails extends Component<ExamDetailsProps, ExamDetailsState> {\n  constructor(props: ExamDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  componentDidMount = () => {\n    if (\n      this.props.locationsData.Locations_list === null ||\n      this.props.locationsData.Locations_list.length === 0\n    ) {\n      this.props.loadAllLocationsData(this.setLoading);\n    }\n    // if (this.props.periods.applicationPeriods === null || this.props.periods.applicationPeriods.length === 0 || this.props.periods.selected_period === null) {\n    this.props.loadApplicationPeriods(this.setLoading);\n    // }\n  };\n  render() {\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (this.props.examDetails === null) {\n      return (\n        <div className=\"bg-yellow-50 text-yellow-800 font-bold rounded px-2 py-4 text-center text-3xl border border-yellow-600 mx-4 my-4\">\n          No Exam details found!\n        </div>\n      );\n    }\n    if (this.props.locationDetails === undefined) {\n      return (\n        <div className=\"bg-yellow-50 text-yellow-800 font-bold rounded px-2 py-4 text-center text-3xl border border-yellow-600 mx-4 my-4\">\n          No exam location details found!\n        </div>\n      );\n    }\n    return (\n      <div>\n        {this.state.loading === true ? (\n          <div className=\"px-4 py-4 rounded bg-gray-100\">\n            <Loading type={LoadingType.dark} />\n          </div>\n        ) : (\n          <div>\n            <div className=\"bg-gray-100 rounded mx-2 mb-2 px-2 py-2\">\n              <div className=\"font-bold text-xl text-blue-600 mb-4 flex flex-row items-center justify-between gap-2 bg-white py-2 px-2 rounded\">\n                <div className=\"flex flex-row items-center gap-2\">\n                  <MdInfo className=\"text-4xl text-blue-600\" />\n                  Exam information\n                </div>\n                <button\n                  onClick={() => {\n                    // this.props.setSelectedCourse(this.props.selectedCourse);\n                    this.props.examDetails &&\n                      this.props.setSelectedCandidateExam(\n                        this.props.examDetails.id\n                      );\n                  }}\n                  type=\"button\"\n                  className={`btn ${\n                    this.props.candidateExam.selected_exam_id !== null\n                      ? \"bg-yellow-700 hover:bg-yellow-900\"\n                      : \"bg-blue-600 hover:bg-blue-700\"\n                  } text-white cursor-pointer text-base`}\n                >\n                  {this.props.candidateExam.selected_exam_id !== null\n                    ? \"Return to Exam\"\n                    : \"Start Exam\"}\n                </button>\n              </div>\n              <div className=\"grid md:grid-cols-3 gap-4\">\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam date:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {DATE(this.props.examDetails.exam_date, \"DD/MM/YYYY\")}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam start time:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.examDetails.start_time}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam duration:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.examDetails.duration / 60} hours{\" \"}\n                      {this.props.examDetails.duration % 60 > 0 && (\n                        <div>{this.props.examDetails.duration % 60} mins</div>\n                      )}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-3\">\n                  <div className=\"flex flex-col px-2 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam description:\n                    </span>\n                    <span className=\"text-gray-700 font-bold px-2 py-2 rounded bg-white mt-2\">\n                      {this.props.examDetails.discription}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-3\">\n                  <div className=\"flex flex-col px-2 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Terms and conditions / Rules:\n                    </span>\n                    <div\n                      className=\"px-2 py-2 rounded bg-white mt-2\"\n                      dangerouslySetInnerHTML={{\n                        __html: this.props.examDetails.termes,\n                      }}\n                    ></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"bg-gray-100 rounded mx-2 mb-2 px-2 py-2\">\n              <div className=\"font-bold text-xl text-blue-600 mb-4 flex flex-row items-center justify-between gap-2 bg-white py-2 px-2 rounded\">\n                <div className=\"flex flex-row items-center gap-2\">\n                  <MdLocationOn className=\"text-4xl text-blue-600\" />\n                  Examination location\n                </div>\n              </div>\n              <div className=\"grid md:grid-cols-3 gap-4 px-2\">\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Province:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationsData.Locations_list &&\n                        this.props.locationsData.Locations_list.find(\n                          (itm) =>\n                            this.props.locationDetails !== undefined &&\n                            itm.center_id ===\n                              this.props.locationDetails.center_id\n                        )?.province_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      District:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationsData.Locations_list &&\n                        this.props.locationsData.Locations_list.find(\n                          (itm) =>\n                            this.props.locationDetails !== undefined &&\n                            itm.center_id ===\n                              this.props.locationDetails.center_id\n                        )?.district_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Center:{\" \"}\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.center_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Room number:{\" \"}\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.room_number}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Proctoring type\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.proctoring_type}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ExamDetails;\n","import React, { Component } from \"react\";\nimport { CgCheckO } from \"react-icons/cg\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  applicationExamAPI,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\n\ninterface PreparedExamsProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  changeLocation: (item: PositionAPICourse) => void;\n  selectedApplicationDetails: GetApplicationsAPI;\n}\ninterface PreparedExamsState {}\n\nexport class PreparedExams extends Component<\n  PreparedExamsProps,\n  PreparedExamsState\n> {\n  render() {\n    let NotPreparedExamsFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) => ex.course === itm.course_id\n        ).length === 0 && this.props.findExam(itm.course_id) === null\n    );\n    let PreparedExamsFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) => ex.course === itm.course_id\n        ).length === 0 && this.props.findExam(itm.course_id) !== null\n    );\n    let AllPendingExams = [...PreparedExamsFilter, ...NotPreparedExamsFilter];\n    let totalPending =\n      NotPreparedExamsFilter.length + PreparedExamsFilter.length;\n    return (\n      <div className=\"bg-white px-2 py-2\">\n        <div className=\"bg-gray-100 rounded px-2 py-2\">\n          <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n            <span className=\"font-bold \">Waiting exams</span>\n            <span className=\"font-bold bg-white text-blue-600 rounded-full px-2 text-base border border-blue-200\">\n              {this.props.selectedPosition !== null &&\n                this.props.selectedExams !== null &&\n                this.props.loadingExams === false &&\n                totalPending}\n            </span>\n          </div>\n          <div className=\"flex flex-col gap-2\">\n            {this.props.selectedPosition === null ||\n            this.props.selectedExams === null ||\n            this.props.loadingExams === true ? (\n              <Loading />\n            ) : AllPendingExams.length === 0 ? (\n              <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                <div className=\"flex justify-center items-center w-full text-4xl\">\n                  <IoMdInformationCircleOutline />\n                </div>\n                <div className=\"text-gray-500\">No exams found!</div>\n              </div>\n            ) : (\n              AllPendingExams.map((item, i) => (\n                <div\n                  key={i + 1}\n                  className={`px-3 py-2 rounded group bg-white border`}\n                >\n                  <div className=\"grid md:grid-cols-12 gap-2\">\n                    {/* First col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex fex-row items-center gap-3\">\n                      <div className=\"flex flex-row gap-2 items-center\">\n                        <div\n                          className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                        >\n                          {this.props.findExam(item.course_id) !== null ? (\n                            <CgCheckO className=\"text-4xl text-blue-600\" />\n                          ) : (\n                            <RiCheckboxBlankCircleFill className=\"text-4xl text-blue-100\" />\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"flex flex-col\">\n                        <div className={`font-bold text-gray-600 truncate`}>\n                          {item.course_name}\n                        </div>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">\n                            Exam date:{\" \"}\n                          </span>\n                          {this.props.findExam(item.course_id) !== null ? (\n                            <div className=\"flex flex-row items-center gap-2\">\n                              {validateExamDate(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                this.props.findExam(item.course_id)!.start_time,\n                                this.props.findExam(item.course_id)!.end_time\n                              ) === ExamTimeStatus.Online ? (\n                                <span className=\"bg-blue-100 text-blue-600 font-bold px-2 rounded-full\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              ) : validateExamDate(\n                                  this.props.findExam(item.course_id)!\n                                    .exam_date,\n                                  this.props.findExam(item.course_id)!\n                                    .start_time,\n                                  this.props.findExam(item.course_id)!.end_time\n                                ) === ExamTimeStatus.Expired ? (\n                                <span className=\"italic text-yellow-700 underline\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              ) : (\n                                <span className=\"italic\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              )}\n                              <span className=\"font-bold text-blue-600 text-sm\">\n                                {DATE(\n                                  this.props.findExam(item.course_id)!\n                                    .exam_date,\n                                  \"DD/MM/YYYY\"\n                                )}\n                              </span>\n                              <span\n                                className={`bg-blue-100 text-blue-600 font-bold px-2 py-1 rounded-full text-sm`}\n                              >\n                                {\n                                  this.props.findExam(item.course_id)!\n                                    .start_time\n                                }\n                              </span>\n                            </div>\n                          ) : (\n                            <span className=\"text-gray-500 text-sm\">\n                              Waiting for preparation\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    {/* Second col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex flex-col items-start justify-center\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <>\n                          <div className=\"flex flex-row justify-start items-center gap-2\">\n                            <span className=\"text-gray-500 text-xs\">\n                              Proctoring type:{\" \"}\n                            </span>\n                            <span className=\"text-gray-700 font-bold text-sm\">\n                              {this.props.selectedExams === null\n                                ? \"\"\n                                : this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  ) !== undefined &&\n                                  this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  )?.proctoring_type}\n                            </span>\n                          </div>\n                          <div className=\"flex flex-col justify-center items-start gap-2\">\n                            {/* <span className=\"text-gray-500 text-xs\">\n                              Exam location:{\" \"}\n                            </span> */}\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Center:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.center_name\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Room:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.room_number === 0 ? (\n                                  <span className=\"bg-yellow-100 text-yellow-700 font-bold px-2 py-1 rounded\">\n                                    Waiting room, you are advised to choose\n                                    another center\n                                  </span>\n                                ) : (\n                                  <span className=\"text-blue-600 bg-blue-100 px-2 py-1 rounded\">\n                                    No:{\" \"}\n                                    {\n                                      this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                          </div>\n                        </>\n                      ) : (\n                        <div className=\"flex flex-row gap-2 items-center justify-start\">\n                          <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                          <span className=\"text-yellow-700 italic text-sm\">\n                            No location selected\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    {/* Third col */}\n                    <div className=\"col-span-12 md:col-span-12 lg:col-span-4 flex items-center justify-start lg:justify-end\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            ((this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            ) === undefined &&\n                              this.props.findExam(item.course_id) !== null &&\n                              validateExamDate(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                this.props.findExam(item.course_id)!.start_time,\n                                this.props.findExam(item.course_id)!.end_time\n                              ) === ExamTimeStatus.Waiting) ||\n                              this.props.findExam(item.course_id) === null) && (\n                              <div\n                                onClick={() => this.props.changeLocation(item)}\n                                className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                              >\n                                Change location\n                              </div>\n                            )\n                          )}\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.course !==\n                              undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status !== UserExamStatus.Editing &&\n                            validateExamDate(\n                              this.props.findExam(item.course_id)!.exam_date,\n                              this.props.findExam(item.course_id)!.start_time,\n                              this.props.findExam(item.course_id)!.end_time\n                            ) === ExamTimeStatus.Online &&\n                            this.props.selectedApplicationDetails\n                              .application_status ===\n                              ApplicationStates.Shortlisted && (\n                              <div\n                                onClick={() => {\n                                  this.props.course.courses &&\n                                    this.props.setSelectedCourse(\n                                      this.props.course.courses.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )!\n                                    );\n                                  this.props.findExam(item.course_id) !==\n                                    null &&\n                                    this.setState({\n                                      appointmentDetailsModal: {\n                                        status: true,\n                                        item: this.props.findExam(\n                                          item.course_id\n                                        ),\n                                      },\n                                    });\n                                }}\n                                className=\"hidden btn border border-blue-500 text-blue-600 cursor-pointer hover:bg-blue-600 hover:text-white text-sm text-center\"\n                              >\n                                Details\n                              </div>\n                            )\n                          )}\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.periods.selected_period !== null &&\n                            this.props.periods.selected_period.is_active ===\n                              true &&\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.id !==\n                              undefined &&\n                            validateExamDate(\n                              this.props.findExam(item.course_id)!.exam_date,\n                              this.props.findExam(item.course_id)!.start_time,\n                              this.props.findExam(item.course_id)!.end_time\n                            ) === ExamTimeStatus.Online &&\n                            this.props.selectedApplicationDetails\n                              .application_status ===\n                              ApplicationStates.Shortlisted && (\n                              <div\n                                onClick={() => {\n                                  if (this.props.selectedPosition !== null) {\n                                    if (\n                                      this.props.positions.selected_position ===\n                                        null ||\n                                      this.props.positions.selected_position\n                                        .position_id !==\n                                        this.props.selectedPosition.position_id\n                                    ) {\n                                      this.props.setSelectedPosition(\n                                        this.props.selectedPosition\n                                      );\n                                    }\n                                    this.props.selectedExams !== null &&\n                                      this.props.course.courses &&\n                                      this.props.setSelectedCourse(\n                                        this.props.course.courses.find(\n                                          (itm) =>\n                                            itm.course_id === item.course_id\n                                        )!\n                                      );\n                                    this.props.selectedExams !== null &&\n                                      this.props.findExam(item.course_id) !==\n                                        null &&\n                                      this.props.setSelectedCandidateExam(\n                                        this.props.findExam(item.course_id)!.id\n                                      );\n                                  }\n                                }}\n                                className={`btn border ${\n                                  this.props.candidateExam.user_exams_done.find(\n                                    (itm) => itm.course === item.course_id\n                                  )?.user_status !== UserExamStatus.Editing\n                                    ? \"border-blue-500 bg-blue-600 hover:text-blue-600\"\n                                    : \"border-green-500 bg-green-600 hover:text-green-600\"\n                                } text-white cursor-pointer hover:bg-white text-sm w-max text-center`}\n                              >\n                                {this.props.candidateExam.user_exams_done.find(\n                                  (itm) => itm.course === item.course_id\n                                )?.user_status !== UserExamStatus.Editing\n                                  ? \"Start exam\"\n                                  : \"Back to Exam\"}\n                              </div>\n                            )\n                          )}\n                          {this.props.selectedApplicationDetails\n                            .application_status ===\n                            ApplicationStates.Initiated && (\n                            <div className=\"font-semibold text-yellow-800 bg-yellow-50 py-2 px-4 text-base\">\n                              Waiting for shortlisting\n                            </div>\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined && (\n                            <div\n                              onClick={() => this.props.changeLocation(item)}\n                              className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                            >\n                              Choose location\n                            </div>\n                          )}\n                        </div>\n                      )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status !== UserExamStatus.Editing && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <div className=\"flex flex-col gap-0\">\n                                <span className=\"text-sm\">Marks</span>\n                                <span className=\"text-lg font-bold -mt-1\">\n                                  {this.props.candidateExam.user_exams_done\n                                    .find(\n                                      (itm) => itm.course === item.course_id\n                                    )\n                                    ?.total_marks.toFixed(2)}\n                                  %\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PreparedExams;\n","import React, { Component } from \"react\";\nimport { HiInformationCircle } from \"react-icons/hi\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { MdCheckCircle, MdPauseCircleFilled } from \"react-icons/md\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  applicationExamAPI,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\n\ninterface ActiveExamsProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  selectedApplicationDetails: GetApplicationsAPI;\n}\ninterface ActiveExamsState {}\n\nexport class ActiveExams extends Component<ActiveExamsProps, ActiveExamsState> {\n  render() {\n    let ExamsDoneFilterTemp = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.findExam(itm.course_id) !== null &&\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) =>\n            ex.course === itm.course_id &&\n            validateExamDate(\n              ex.exam_date,\n              ex.exam_start_time,\n              ex.exam_end_time\n            ) === ExamTimeStatus.Online\n        ).length > 0\n    );\n    let ActiveExamsFilter = ExamsDoneFilterTemp.filter(\n      (check) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (itm) => itm.course === check.course_id\n        ) !== undefined &&\n        (this.props.candidateExam.user_exams_done.find(\n          (itm) => itm.course === check.course_id\n        )?.user_status === UserExamStatus.Editing ||\n          this.props.candidateExam.user_exams_done.find(\n            (itm) => itm.course === check.course_id\n          )?.user_status === UserExamStatus.Paused)\n    );\n    return (\n      <>\n        {ActiveExamsFilter.length > 0 ? (\n          <div className=\"bg-white px-2 py-2\">\n            <div className=\"bg-gray-100 rounded px-2 py-2\">\n              <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n                <span className=\"font-bold \">Active exam</span>\n                <span className=\"font-bold bg-white text-green-600 rounded-full px-2 text-base border border-gray-200\">\n                  {this.props.selectedPosition !== null &&\n                    this.props.selectedExams !== null &&\n                    this.props.loadingExams === false &&\n                    ActiveExamsFilter.length}\n                </span>\n              </div>\n              <div className=\"flex flex-col gap-2\">\n                {this.props.selectedPosition === null ||\n                this.props.selectedExams === null ||\n                this.props.loadingExams === true ? (\n                  <Loading />\n                ) : ActiveExamsFilter.length === 0 ? (\n                  <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                    <div className=\"flex justify-center items-center w-full text-4xl\">\n                      <IoMdInformationCircleOutline />\n                    </div>\n                    <div className=\"text-gray-500\">No exams found!</div>\n                  </div>\n                ) : (\n                  ActiveExamsFilter.map((item, i) => (\n                    <div\n                      key={i + 1}\n                      className={`px-3 py-2 rounded group bg-white border-2 border-green-600 hover:bg-green-50`}\n                    >\n                      <div className=\"grid md:grid-cols-12 gap-2\">\n                        {/* First col */}\n                        <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex fex-row items-center gap-3\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Editing && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-green-600 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <HiInformationCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Done && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdCheckCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Removed && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-yellow-800 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdCheckCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Paused && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-green-500 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdPauseCircleFilled className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined &&\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.id !==\n                              undefined && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2 animate-ping`}\n                                >\n                                  <HiInformationCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined &&\n                            (this.props.findExam(item.course_id) === null ||\n                              this.props.findExam(item.course_id)?.id ===\n                                undefined) && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <RiCheckboxBlankCircleFill className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          <div className=\"flex flex-col\">\n                            <div className={`font-bold text-gray-600 truncate`}>\n                              {item.course_name}\n                            </div>\n                            <div className=\"flex flex-row justify-start items-center gap-2\">\n                              <span className=\"text-gray-500 text-xs\">\n                                Exam date:{\" \"}\n                              </span>\n                              <div className=\"flex flex-row items-center gap-2\">\n                                <span className=\"font-bold text-green-600 text-sm\">\n                                  {DATE(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    \"DD/MM/YYYY\"\n                                  )}\n                                </span>\n                                <span\n                                  className={`bg-gray-100 text-green-600 font-bold px-2 py-1 rounded-full text-sm`}\n                                >\n                                  {\n                                    this.props.findExam(item.course_id)!\n                                      .start_time\n                                  }\n                                </span>\n                                <span\n                                  className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm underline`}\n                                >\n                                  {\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )?.user_status\n                                  }\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        {/* Second col */}\n                        <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex flex-col items-start justify-center\">\n                          {this.props.selectedExams === null ? (\n                            \"\"\n                          ) : this.props.selectedExams.find(\n                              (itm) => itm.course_id === item.course_id\n                            ) !== undefined ? (\n                            <>\n                              <div className=\"flex flex-row justify-start items-center gap-2\">\n                                <span className=\"text-gray-500 text-xs\">\n                                  Proctoring type:{\" \"}\n                                </span>\n                                <span className=\"text-gray-700 font-bold text-sm\">\n                                  {this.props.selectedExams === null\n                                    ? \"\"\n                                    : this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      ) !== undefined &&\n                                      this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )?.proctoring_type}\n                                </span>\n                              </div>\n                              <div className=\"flex flex-col justify-center items-start gap-2\">\n                                {/* <span className=\"text-gray-500 text-xs\">\n                                  Exam location:{\" \"}\n                                </span> */}\n                                <span\n                                  className={`text-gray-700 font-bold text-sm`}\n                                >\n                                  Center:{\" \"}\n                                  {this.props.selectedExams === null ? (\n                                    \"\"\n                                  ) : this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    ) !== undefined ? (\n                                    this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    )?.center_name\n                                  ) : (\n                                    <span className=\"italic text-xs\">\n                                      No location selected\n                                    </span>\n                                  )}\n                                </span>\n                                <span\n                                  className={`text-gray-700 font-bold text-sm`}\n                                >\n                                  Room:{\" \"}\n                                  {this.props.selectedExams === null ? (\n                                    \"\"\n                                  ) : this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    ) !== undefined ? (\n                                    this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    )?.room_number === 0 ? (\n                                      <span className=\"bg-yellow-100 text-yellow-700 font-bold px-2 py-1 rounded\">\n                                        Waiting room, you are advised to choose\n                                        another center\n                                      </span>\n                                    ) : (\n                                      <span className=\"text-blue-600 bg-blue-100 px-2 py-1 rounded\">\n                                        No:{\" \"}\n                                        {\n                                          this.props.selectedExams.find(\n                                            (itm) =>\n                                              itm.course_id === item.course_id\n                                          )?.room_number\n                                        }\n                                      </span>\n                                    )\n                                  ) : (\n                                    <span className=\"italic text-xs\">\n                                      No location selected\n                                    </span>\n                                  )}\n                                </span>\n                              </div>\n                            </>\n                          ) : (\n                            <div className=\"flex flex-row gap-2 items-center justify-start\">\n                              <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                              <span className=\"text-yellow-700 italic text-sm\">\n                                No location selected\n                              </span>\n                            </div>\n                          )}\n                        </div>\n                        {/* Third col */}\n                        <div className=\"col-span-12 md:col-span-12 lg:col-span-4 flex items-center justify-start lg:justify-end\">\n                          {this.props.selectedExams === null ? (\n                            \"\"\n                          ) : this.props.selectedExams.find(\n                              (itm) => itm.course_id === item.course_id\n                            ) !== undefined ? (\n                            <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                              {this.props.loadingExams === true ||\n                              this.props.loadingExamsDone === true ? (\n                                <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                                  Checking...\n                                </div>\n                              ) : (\n                                this.props.candidateExam.user_exams_done.find(\n                                  (itm) => itm.course === item.course_id\n                                ) === undefined && (\n                                  <div\n                                    onClick={() => {\n                                      this.setState({\n                                        selectedCourse: item,\n                                        centersModal: true,\n                                      });\n                                      this.props.setMaxExamModal(true);\n                                    }}\n                                    className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                                  >\n                                    Change location\n                                  </div>\n                                )\n                              )}\n                              {this.props.loadingExams === true ||\n                              this.props.loadingExamsDone === true ? (\n                                <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                                  Checking...\n                                </div>\n                              ) : (\n                                this.props.periods.selected_period !== null &&\n                                this.props.periods.selected_period.is_active ===\n                                  true &&\n                                this.props.findExam(item.course_id) !== null &&\n                                this.props.findExam(item.course_id)?.id !==\n                                  undefined &&\n                                this.props.selectedApplicationDetails\n                                  .application_status ===\n                                  ApplicationStates.Shortlisted && (\n                                  <div\n                                    onClick={() => {\n                                      if (\n                                        this.props.selectedPosition !== null\n                                      ) {\n                                        if (\n                                          this.props.positions\n                                            .selected_position === null ||\n                                          this.props.positions.selected_position\n                                            .position_id !==\n                                            this.props.selectedPosition\n                                              .position_id\n                                        ) {\n                                          this.props.setSelectedPosition(\n                                            this.props.selectedPosition\n                                          );\n                                        }\n                                        this.props.selectedExams !== null &&\n                                          this.props.course.courses &&\n                                          this.props.setSelectedCourse(\n                                            this.props.course.courses.find(\n                                              (itm) =>\n                                                itm.course_id === item.course_id\n                                            )!\n                                          );\n                                        this.props.selectedExams !== null &&\n                                          this.props.findExam(\n                                            item.course_id\n                                          ) !== null &&\n                                          this.props.setSelectedCandidateExam(\n                                            this.props.findExam(item.course_id)!\n                                              .id\n                                          );\n                                      }\n                                    }}\n                                    className={`btn border border-green-500 bg-green-600 hover:text-green-600 text-white cursor-pointer hover:bg-white text-sm w-max text-center`}\n                                  >\n                                    Back to exam\n                                  </div>\n                                )\n                              )}\n                            </div>\n                          ) : (\n                            <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                              {this.props.candidateExam.user_exams_done.find(\n                                (itm) => itm.course === item.course_id\n                              ) === undefined && (\n                                <div\n                                  onClick={() =>\n                                    this.setState({\n                                      selectedCourse: item,\n                                      centersModal: true,\n                                    })\n                                  }\n                                  className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                                >\n                                  Choose location\n                                </div>\n                              )}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default ActiveExams;\n","import React, { Component } from \"react\";\nimport { HiInformationCircle } from \"react-icons/hi\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { MdCheckCircle, MdPauseCircleFilled } from \"react-icons/md\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { applicationExamAPI } from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamAnswerSheetDone, UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\nimport { ExamDoneDetailsAnswers } from \"../../CandidateExams/CandidateExams\";\n\ninterface ExamsDoneProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  viewMarksDetails: (selectedExamDetails: ExamDoneDetailsAnswers) => void;\n}\ninterface ExamsDoneState {\n  loading: boolean;\n  selectedCourse: PositionAPICourse | null;\n  centersModal: boolean;\n}\n\nexport class ExamsDone extends Component<ExamsDoneProps, ExamsDoneState> {\n  constructor(props: ExamsDoneProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      centersModal: false,\n      selectedCourse: null,\n    };\n  }\n  viewMarksDetailsFn = (Exam: ExamAnswerSheetDone) => {\n    const examTest = this.props.candidateExam.user_exams_temp.find(\n      (itm) => itm.course === Exam.course && itm.period === Exam.period\n    );\n    if (examTest !== undefined) {\n      let courseSelected = this.props.selectedPosition.courses.find(\n        (itm) => itm.course_id === examTest.course\n      );\n      if (courseSelected !== undefined) {\n        this.props.viewMarksDetails({\n          course: examTest.course,\n          course_name: courseSelected.course_name,\n          discription: examTest.discription,\n          termes: examTest.termes,\n          rules: examTest.rules,\n          period: Exam.period,\n          exam_date: Exam.exam_date,\n        });\n      }\n    }\n  };\n  render() {\n    let ExamsDoneFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.findExam(itm.course_id) !== null &&\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) =>\n            ex.course === itm.course_id &&\n            (ex.user_status === UserExamStatus.Done ||\n              ex.user_status === UserExamStatus.Removed ||\n              validateExamDate(\n                ex.exam_date,\n                ex.exam_start_time,\n                ex.exam_end_time\n              ) === ExamTimeStatus.Expired)\n        ).length > 0\n    );\n    // console.log(\"Done ex: \", ExamsDoneFilter);\n    return (\n      <div className=\"bg-white px-2 py-2\">\n        <div className=\"bg-gray-100 rounded px-2 py-2\">\n          <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n            <span className=\"font-bold \">Completed exams</span>\n            <span className=\"font-bold bg-white text-gray-600 rounded-full px-2 text-base border border-gray-200\">\n              {this.props.selectedPosition !== null &&\n                this.props.selectedExams !== null &&\n                this.props.loadingExams === false &&\n                ExamsDoneFilter.length}\n            </span>\n          </div>\n          <div className=\"flex flex-col gap-2\">\n            {this.props.selectedPosition === null ||\n            this.props.selectedExams === null ||\n            this.props.loadingExams === true ? (\n              <Loading />\n            ) : ExamsDoneFilter.length === 0 ? (\n              <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                <div className=\"flex justify-center items-center w-full text-4xl\">\n                  <IoMdInformationCircleOutline />\n                </div>\n                <div className=\"text-gray-500\">No exams found!</div>\n              </div>\n            ) : (\n              ExamsDoneFilter.map((item, i) => (\n                <div key={i + 1} className={`px-3 py-2 rounded group bg-white`}>\n                  <div className=\"grid md:grid-cols-12 gap-2\">\n                    {/* First col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex fex-row items-center gap-3\">\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Editing && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <HiInformationCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Done && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdCheckCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Removed && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdCheckCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Paused && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdPauseCircleFilled className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) === undefined &&\n                        this.props.findExam(item.course_id) !== null &&\n                        this.props.findExam(item.course_id)?.id !==\n                          undefined && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2 animate-ping`}\n                            >\n                              <HiInformationCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) === undefined &&\n                        (this.props.findExam(item.course_id) === null ||\n                          this.props.findExam(item.course_id)?.id ===\n                            undefined) && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <RiCheckboxBlankCircleFill className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      <div className=\"flex flex-col\">\n                        <div className={`font-bold text-gray-600 truncate`}>\n                          {item.course_name}\n                        </div>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">\n                            Exam date:{\" \"}\n                          </span>\n                          <div className=\"flex flex-row items-center gap-2\">\n                            <span className=\"font-bold text-gray-800 text-sm\">\n                              {DATE(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                \"DD/MM/YYYY\"\n                              )}\n                            </span>\n                            <span\n                              className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm`}\n                            >\n                              {this.props.findExam(item.course_id)!.start_time}\n                            </span>\n                            <span\n                              className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm underline`}\n                            >\n                              {this.props.candidateExam.user_exams_done.find(\n                                (x) => x.course === item.course_id\n                              ) !== undefined\n                                ? validateExamDate(\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_date,\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_start_time,\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_end_time\n                                  ) === ExamTimeStatus.Expired &&\n                                  (this.props.candidateExam.user_exams_done.find(\n                                    (x) => x.course === item.course_id\n                                  )?.user_status === UserExamStatus.Editing\n                                    ? \"Not submitted\"\n                                    : this.props.candidateExam.user_exams_done.find(\n                                        (x) => x.course === item.course_id\n                                      )?.user_status === UserExamStatus.Paused)\n                                  ? \"Paused\"\n                                  : this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )?.user_status\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Second col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex flex-col items-start justify-center\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <>\n                          <div className=\"flex flex-row justify-start items-center gap-2\">\n                            <span className=\"text-gray-500 text-xs\">\n                              Proctoring type:{\" \"}\n                            </span>\n                            <span className=\"text-gray-700 font-bold text-sm\">\n                              {this.props.selectedExams === null\n                                ? \"\"\n                                : this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  ) !== undefined &&\n                                  this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  )?.proctoring_type}\n                            </span>\n                          </div>\n                          <div className=\"flex flex-col justify-center items-start gap-2\">\n                            {/* <span className=\"text-gray-500 text-xs\">\n                              Exam location:{\" \"}\n                            </span> */}\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Center:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.center_name\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Room:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.room_number === 0 ? (\n                                  <span className=\"bg-yellow-100 text-yellow-700 font-bold px-2 py-1 rounded\">\n                                    Waiting room, you are advised to choose\n                                    another center\n                                  </span>\n                                ) : (\n                                  <span className=\"text-blue-600 bg-blue-100 px-2 py-1 rounded\">\n                                    No:{\" \"}\n                                    {\n                                      this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                          </div>\n                        </>\n                      ) : (\n                        <div className=\"flex flex-row gap-2 items-center justify-start\">\n                          <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                          <span className=\"text-yellow-700 italic text-sm\">\n                            No location selected\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    {/* Third col */}\n                    <div className=\"col-span-12 md:col-span-12 lg:col-span-4 items-center justify-start lg:justify-end\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            ) === undefined && (\n                              <div\n                                onClick={() => {\n                                  this.setState({\n                                    selectedCourse: item,\n                                    centersModal: true,\n                                  });\n                                  this.props.setMaxExamModal(true);\n                                }}\n                                className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                              >\n                                Change location\n                              </div>\n                            )\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined && (\n                            <div\n                              onClick={() =>\n                                this.setState({\n                                  selectedCourse: item,\n                                  centersModal: true,\n                                })\n                              }\n                              className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                            >\n                              Choose location\n                            </div>\n                          )}\n                        </div>\n                      )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined && (\n                        // this.props.candidateExam.user_exams_done.find(\n                        //   (itm) => itm.course === item.course_id\n                        // )?.user_status !== UserExamStatus.Editing &&\n                        <div className=\"flex flex-row gap-2 items-center justify-end h-full\">\n                          <div\n                            className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                          >\n                            <div className=\"flex flex-col gap-0\">\n                              <span className=\"text-sm\">Marks</span>\n                              <span className=\"text-lg font-bold -mt-1\">\n                                {this.props.candidateExam.user_exams_done\n                                  .find((itm) => itm.course === item.course_id)\n                                  ?.total_marks.toFixed(2)}\n                                %\n                              </span>\n                            </div>\n                            <div\n                              onClick={() =>\n                                this.viewMarksDetailsFn(\n                                  this.props.candidateExam.user_exams_done.find(\n                                    (itm) => itm.course === item.course_id\n                                  )!\n                                )\n                              }\n                              className=\"btn bg-blue-100 hover:bg-blue-200 cursor-pointer text-blue-700 hover:text-blue-900\"\n                            >\n                              Details\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExamsDone;\n","import React, { Component } from \"react\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"../../utils/app.config\";\n\nimport { Fragment } from \"react\";\nimport { MdClose, MdHistory } from \"react-icons/md\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport ChooseExamCenter, {\n  LocationTableInterface,\n} from \"../Application/ExamCenter/ChooseExamCenter\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadExam,\n  examDataInterface,\n  PrepareExamsStoreInterface,\n  loadExamsList,\n  LocationsDataStoreInterface,\n  loadAllLocationsData,\n  setSelectedLocationData,\n  applicationPeriodsStoreInterface,\n  loadApplicationPeriods,\n  candidateExamStoreInterface,\n  setSelectedCandidateExam,\n  courseStoreInterface,\n  loadCourses,\n  setSelectedCourse,\n  InitializeExamDetails,\n  InitialExamDetails,\n  setSelectedPeriod,\n  setSelectedPosition,\n  positionsStoreInterface,\n  loadExamsDone,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  ExamInterface,\n  examStatus,\n  UserExamStatus,\n} from \"../../interfaces/exam\";\nimport {\n  CandidateClaimInterface,\n  course,\n  PlansTypeKeys,\n  PositionAPI,\n  PositionAPICourse,\n} from \"../../interfaces/index\";\nimport {\n  applicationExamAPI,\n  applicationHistory,\n  ApplicationPeriodGet,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport { BsFileEarmarkText } from \"react-icons/bs\";\nimport { IoMdTrash } from \"react-icons/io\";\nimport ApplicationHistory from \"./ApplicationHistory/ApplicationHistory\";\nimport ExamDetails from \"./ExamDetails/ExamDetails\";\nimport { CheckIfExamDone, findTotalMarks } from \"../../utils/question_bank\";\nimport PreparedExams from \"./ExamStatus/PreparedExams\";\nimport ActiveExams from \"./ExamStatus/ActiveExams\";\nimport ExamsDone from \"./ExamStatus/ExamsDone\";\nimport { IoHandLeftSharp } from \"react-icons/io5\";\nimport { isClaimAllowed } from \"../Claimings/Candidate/ClaimForm\";\nimport ClaimFormComponent from \"../../components/ClaimForm/ClaimFormComponent\";\nimport { ClaimingReducerType } from \"../../reducers/claiming\";\nimport { getMyClaims } from \"../../actions/claiming\";\nimport {\n  compareWithToday,\n  ExamDoneDetailsAnswers,\n} from \"../CandidateExams/CandidateExams\";\nimport { AnswersDetails } from \"../../components/AnswersDetails/AnswersDetails\";\nimport { DATE } from \"../../utils/functions\";\n\ninterface PostExamsProps {\n  doExam: examDataInterface;\n  auth: Auth;\n  loadExam: (user_id: string, exam: ExamInterface) => void;\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  selected_application: string | null;\n  updateLocation: (application_id: string, exams: sentExamInterface[]) => void;\n  changeLocationError: string | null;\n  loading: boolean;\n  incrementIncomplete: () => void;\n  applicationHistory: applicationHistory[] | undefined;\n  deleteApplication: (id: string) => void;\n  selectedApplicationDetails: GetApplicationsAPI | null;\n  locationsData: LocationsDataStoreInterface;\n  loadAllLocationsData: (callback: (loading: boolean) => void) => void;\n  setSelectedLocationData: (locationData: LocationTableInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  course: courseStoreInterface;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  setSelectedCourse: (course: course | null) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  positions: positionsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setMaxExamModal: (status: boolean) => void;\n  setDisplayDetailsModal: (status: boolean) => void;\n  claiming: ClaimingReducerType;\n  getMyClaims: Function;\n}\ninterface PostExamsState {\n  appointmentDetailsModal: {\n    status: boolean;\n    item: InitialExamDetails | null;\n  };\n  redirect: boolean;\n  displayResults: boolean;\n  changeLocation: {\n    status: boolean;\n    location: ExamInterface | null;\n  };\n  centersModal: boolean;\n  selectedCourse: course | null;\n  selectedLocation: applicationExamAPI | null;\n  applicationHistoryState: boolean;\n  loading: boolean;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  claim: boolean;\n  selectedExamDetails: ExamDoneDetailsAnswers | null;\n}\n\nclass _PostExams extends Component<PostExamsProps, PostExamsState> {\n  constructor(props: PostExamsProps) {\n    super(props);\n\n    this.state = {\n      appointmentDetailsModal: {\n        status: false,\n        item: null,\n      },\n      redirect: false,\n      displayResults: false,\n      changeLocation: {\n        status: false,\n        location: null,\n      },\n      centersModal: false,\n      selectedCourse: null,\n      selectedLocation: null,\n      applicationHistoryState: false,\n      loading: false,\n      loadingExams: false,\n      loadingExamsDone: true,\n      claim: false,\n      selectedExamDetails: null,\n    };\n  }\n\n  renderExam = (user_id: string, exam: ExamInterface) => {\n    exam.status = examStatus.Editing;\n    this.props.loadExam(user_id, exam);\n    this.setState({ redirect: true });\n  };\n\n  setClaim = (status: boolean) => {\n    this.setState({ claim: status });\n  };\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n    this.props.setMaxExamModal(false);\n  };\n\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.props.selected_application !== null) {\n      this.props.updateLocation(this.props.selected_application, exams);\n    }\n  };\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setLoadingExams = (status: boolean) => {\n    this.setState({ loadingExams: status });\n  };\n  setLoadingExamsDone = (status: boolean) => {\n    this.setState({ loadingExamsDone: status });\n  };\n\n  numberOfIncomplete = (\n    exams: sentExamInterface[],\n    courses: {\n      course_name: string;\n      course_code: string;\n      description: string;\n      school_levels: string[];\n      course_id: string;\n    }[]\n  ) => {\n    let count: number = 0;\n    for (let i in courses) {\n      if (\n        exams.filter((item) => item.course_id === courses[i].course_id)\n          .length === 0\n      ) {\n        count = count + 1;\n      }\n    }\n    return count;\n  };\n\n  findLocation = (\n    course_id: string,\n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string\n  ) => {\n    return this.updateLocationFunction([\n      {\n        course_id: course_id,\n        proctoring_type: \"Center\",\n        center_id: location.center_id,\n        district_id: location.district_id,\n      },\n    ]);\n  };\n\n  findExam = (courseId: string) => {\n    if (this.props.candidateExam.user_exams_temp !== null) {\n      let current_temp = this.props.candidateExam.user_exams_temp.find(\n        (itm) => itm.course === courseId\n      );\n      let testDone = this.props.candidateExam.user_exams_done.find(\n        (itm) => itm.course === courseId\n      );\n      if (\n        current_temp !== undefined &&\n        (testDone === undefined ||\n          testDone.user_status === UserExamStatus.Editing ||\n          testDone.user_status === UserExamStatus.Paused ||\n          testDone.user_status === UserExamStatus.Done ||\n          testDone.user_status === UserExamStatus.Removed)\n      ) {\n        return current_temp;\n      }\n    }\n    return null;\n  };\n\n  findCourse = (course_id: string): applicationExamAPI | null => {\n    if (this.props.selectedExams !== null) {\n      let x: applicationExamAPI | null | undefined =\n        this.props.selectedExams.find(\n          (itm) =>\n            this.state.appointmentDetailsModal && itm.course_id === course_id\n        );\n      if (x !== undefined && x !== null) {\n        return x;\n      }\n    }\n    return null;\n  };\n\n  pendingCourses = () => {\n    let count = 0;\n    for (let course of this.props.selectedPosition.courses) {\n      if (this.props.candidateExam.user_exams_temp !== null) {\n        // let current_temp = this.props.candidateExam.user_exams_temp.find(itm => itm.course === course.course_id);\n        let testDone = this.props.candidateExam.user_exams_done.find(\n          (itm) => itm.course === course.course_id\n        );\n        if (testDone === undefined) {\n          count = count + 1;\n        }\n      }\n    }\n    return count;\n  };\n\n  changeLocation = (item: PositionAPICourse) => {\n    this.setState({ selectedCourse: item, centersModal: true });\n    this.props.setMaxExamModal(true);\n  };\n\n  InitializationFn = () => {\n    if (\n      this.props.periods.selected_period !== null &&\n      this.props.selectedPosition !== null\n    ) {\n      this.props.loadExamsDone(\n        this.props.periods.selected_period.session_plan_id,\n        this.props.auth.user.user_id,\n        this.setLoadingExamsDone\n      );\n      // if (this.state.loadingExamsDone === false) {\n      for (let course of this.props.selectedPosition.courses) {\n        let testDone = this.props.candidateExam.user_exams_temp.find(\n          (itm) => itm.course === course.course_id\n        );\n        if (testDone === undefined) {\n          let center_id = this.props.selectedExams?.find(\n            (itm) => itm.course_id === course.course_id\n          );\n          if (center_id !== undefined) {\n            this.props.InitializeExamDetails(\n              this.props.periods.selected_period.session_plan_id,\n              course.course_id,\n              center_id.district_id,\n              center_id.center_id,\n              center_id.room_id,\n              this.props.selectedPosition.position_id,\n              this.setLoadingExams\n            );\n          }\n        }\n      }\n      // }\n    }\n  };\n\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.setLoading);\n    if (\n      this.props.course.courses === null ||\n      this.props.course.courses.length === 0\n    ) {\n      this.props.loadCourses(this.setLoading);\n    }\n    this.InitializationFn();\n    if (this.props.doExam.exam_answers) {\n      if (this.props.doExam.exam_answers.status === examStatus.Editing) {\n        this.setState({ redirect: true });\n      }\n    }\n    if (\n      this.props.claiming.myClaims === null &&\n      this.props.periods.selected_period !== null\n    ) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        this.props.periods.selected_period.session_plan_id,\n        (status: boolean, msg: string, data?: CandidateClaimInterface[]) => {\n          this.setState({ loading: status });\n          if (msg !== \"\") {\n            alert(msg);\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    const today = moment().tz(TimeZone);\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (this.state.redirect === true) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (\n      this.props.loading === true ||\n      this.state.loadingExams === true ||\n      this.state.loadingExamsDone === true\n    ) {\n      return (\n        <div className=\"bg-white border my-4 mx-4 rounded px-4 py-4 flex flex-col\">\n          <span className=\"mx-4 animate-pulse\">Loading, Please wait...</span>\n          <Loading />\n        </div>\n      );\n    }\n    return this.props.selectedExams === null ? (\n      \"No result found!\"\n    ) : (\n      <Fragment>\n        {this.state.selectedExamDetails !== null ? (\n          <>\n            <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n                <div className=\"flex flex-col w-full\">\n                  <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                    <span className=\"font-bold text-xl text-gray-800\">\n                      Exam answers details\n                    </span>\n                    <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                      <MdClose\n                        className=\"cursor-pointer font-extrabold text-3xl\"\n                        onClick={() => {\n                          this.setState({\n                            selectedExamDetails: null,\n                          });\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* Check if period is open for claims */}\n              {compareWithToday(\n                today,\n                this.state.selectedExamDetails.exam_date\n              ) === false ? (\n                <div className=\"bg-yellow-100 text-yellow-800 font-extrabold text-center flex flex-col items-center justify-center text-lg px-2 py-6\">\n                  <div className=\"mb-5 text-3xl\">\n                    Please wait, the exam details will be visible soon!\n                  </div>\n                  <div className=\"text-gray-600\">\n                    Please come after this date:{\" \"}\n                  </div>\n                  <div className=\"bg-white rounded-full px-3 py-1 text-gray-700\">\n                    {DATE(\n                      new Date(\n                        this.state.selectedExamDetails.exam_date\n                      ).toString()\n                    )}\n                  </div>\n                </div>\n              ) : (\n                <AnswersDetails\n                  exam_id={this.state.selectedExamDetails}\n                  showAnswers={false}\n                />\n              )}\n            </div>\n          </>\n        ) : this.state.appointmentDetailsModal.status === true &&\n          this.state.appointmentDetailsModal.item !== null ? (\n          <>\n            <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Exam:{\" \"}\n                    {this.state.appointmentDetailsModal.item !== null && (\n                      <>\n                        {\n                          this.findCourse(\n                            this.state.appointmentDetailsModal.item!.course\n                          )?.course_name\n                        }\n                      </>\n                    )}\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() =>\n                        this.setState({\n                          appointmentDetailsModal: {\n                            status: false,\n                            item: null,\n                          },\n                          displayResults: false,\n                        })\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n              {this.findExam(this.state.appointmentDetailsModal.item.course) ===\n              null ? (\n                <div className=\"text-yellow-700 font-bold text-center text-3xl bg-yellow-50 border border-yellow-200 rounded px-4 py-4 mx-4 my-4\">\n                  No exam found for selected course\n                </div>\n              ) : this.props.periods.applicationPeriods &&\n                (this.props.periods.applicationPeriods.find(\n                  (itm) =>\n                    this.state.appointmentDetailsModal.item &&\n                    itm.session_plan_id ===\n                      this.state.appointmentDetailsModal.item.period\n                )?.is_active === false ||\n                  this.props.periods.applicationPeriods.find(\n                    (itm) =>\n                      this.state.appointmentDetailsModal.item &&\n                      itm.session_plan_id ===\n                        this.state.appointmentDetailsModal.item.period\n                  )?.is_active === undefined) ? (\n                <div className=\"text-yellow-700 font-bold text-center text-3xl bg-yellow-50 border border-yellow-200 rounded px-4 py-4 mx-4 my-4 flex flex-col items-center\">\n                  <div>No exam for the selected period</div>\n                  <div\n                    onClick={() =>\n                      this.props.loadApplicationPeriods(this.setLoading)\n                    }\n                    className=\"btn bg-white text-gray-700 w-max text-base border border-gray-700 mt-4 cursor-pointer\"\n                  >\n                    Reload\n                  </div>\n                </div>\n              ) : (\n                <ExamDetails\n                  locationDetails={this.props.selectedExams.find(\n                    (itm) =>\n                      this.state.appointmentDetailsModal.item &&\n                      itm.course_id ===\n                        this.state.appointmentDetailsModal.item.course\n                  )}\n                  examDetails={this.findExam(\n                    this.state.appointmentDetailsModal.item.course\n                  )}\n                  locationsData={this.props.locationsData}\n                  loadAllLocationsData={this.props.loadAllLocationsData}\n                  setSelectedLocationData={this.props.setSelectedLocationData}\n                  periods={this.props.periods}\n                  loadApplicationPeriods={this.props.loadApplicationPeriods}\n                  candidateExam={this.props.candidateExam}\n                  setSelectedCandidateExam={this.props.setSelectedCandidateExam}\n                />\n              )}\n            </div>\n          </>\n        ) : this.state.centersModal === true &&\n          this.state.selectedCourse !== null ? (\n          <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Change exam location\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() => {\n                        this.setState({\n                          centersModal: false,\n                          selectedCourse: null,\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ChooseExamCenter\n              positionCourses={this.state.selectedCourse}\n              addLocation={this.findLocation}\n              closeModal={this.closeModal}\n            />\n          </div>\n        ) : this.state.applicationHistoryState === true ? (\n          this.props.applicationHistory === undefined ? (\n            <div className=\"text-yellow-700 font-bold text-2xl text-center\">\n              No application history found!\n            </div>\n          ) : (\n            <div className=\"animate__animated animate__fadeInUp animate__faster bg-white mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Application history\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() =>\n                        this.setState({ applicationHistoryState: false })\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n              <ApplicationHistory\n                applicationHistory={this.props.applicationHistory}\n              />\n            </div>\n          )\n        ) : (\n          <div className=\"\">\n            <div className=\"px-2 md:py-2\">\n              <div className=\"flex flex-col md:flex-row justify-between items-center md:items-center\">\n                <div className=\"flex flex-row items-center gap-3 mb-3 pt-4 lg:pt-0\">\n                  <span className=\"bg-blue-50  text-blue-700 font-bold rounded-md px-3 py-1 mt-0\">\n                    Status:{\" \"}\n                    {this.props.selectedApplicationDetails?.application_status}\n                  </span>\n                  <div\n                    onClick={() =>\n                      this.setState({ applicationHistoryState: true })\n                    }\n                    className=\"btn bg-gray-100 text-gray-600 border border-gray-300 text-sm flex flex-row items-center gap-2 cursor-pointer hover:border-blue-500 hover:bg-blue-50 hover:text-blue-600 md:mt-0\"\n                  >\n                    <MdHistory className=\"text-xl\" />\n                    <span>View application history</span>\n                  </div>\n                </div>\n                <div\n                  className={`grid ${\n                    this.pendingCourses() > 0 ? \"grid-cols-3\" : \"grid-cols-2\"\n                  } gap-4 w-full md:w-max bg-gray-100 md:bg-white p-2 md:p-0 rounded mb-2 md:mb-0`}\n                >\n                  <div className=\"col-span-1 flex justify-start md:justify-end\">\n                    <div className=\"flex flex-row items-center\">\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                          Total\n                        </span>\n                        <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                          {this.props.selectedExams.length}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  {this.pendingCourses() > 0 && (\n                    <div className=\"col-span-1 flex justify-start md:justify-end\">\n                      <div className=\"flex flex-row items-center\">\n                        <div className=\"flex flex-col\">\n                          <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                            Pending\n                          </span>\n                          <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                            {this.props.selectedPosition !== null &&\n                              this.pendingCourses()}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  <div className=\"col-span-1 flex justify-start md:justify-end\">\n                    <div className=\"flex flex-row items-center\">\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                          Total marks\n                        </span>\n                        {\n                          // this.state.loadingExams === true || this.state.loadingExamsDone === true ? <span>Wait...</span> :\n                          <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                            {parseInt(\n                              findTotalMarks(\n                                this.props.selectedPosition.courses,\n                                this.props.candidateExam.user_exams_done\n                              )\n                            ) > 0\n                              ? (\n                                  parseInt(\n                                    findTotalMarks(\n                                      this.props.selectedPosition.courses,\n                                      this.props.candidateExam.user_exams_done\n                                    )\n                                  ) / this.props.selectedPosition.courses.length\n                                ).toFixed(2)\n                              : 0}\n                            %\n                          </span>\n                        }\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"font-bold flex flex-col md:flex-row items-start md:items-center justify-start md:justify-between gap-2\">\n                {this.props.selectedApplicationDetails &&\n                this.props.selectedApplicationDetails.application_status !==\n                  ApplicationStates.Rejected ? (\n                  <div className=\"text-xl flex flex-row items-center gap-2\">\n                    <BsFileEarmarkText className=\"text-2xl\" />\n                    <span>Exams list: </span>\n                  </div>\n                ) : (\n                  <div>\n                    {this.state.loadingExams === false &&\n                    this.state.loadingExamsDone === false &&\n                    CheckIfExamDone(\n                      this.props.selectedPosition.courses,\n                      this.props.candidateExam.user_exams_done\n                    ) === false &&\n                    this.props.periods.selected_period &&\n                    this.props.selected_application &&\n                    this.props.claiming.myClaims &&\n                    isClaimAllowed(\n                      this.props.claiming.myClaims,\n                      this.props.periods.selected_period.session_plan_id,\n                      this.props.selected_application\n                    ) === true ? (\n                      <div\n                        onClick={() => this.setClaim(!this.state.claim)}\n                        className=\"btn hidden flex-row gap-2 items-center text-green-700 bg-green-50 cursor-pointer hover:bg-green-100 hover:text-green-900 border border-green-600 hover:border-green-800\"\n                      >\n                        <IoHandLeftSharp className=\"text-xl \" />\n                        <span className=\"text-sm\">Claim now</span>\n                      </div>\n                    ) : this.props.claiming.myClaims === null ? (\n                      <div>Loading...</div>\n                    ) : (\n                      this.props.claiming.myClaims.length > 0 && (\n                        <Link\n                          to=\"claiming-candidate\"\n                          className=\"text-lg font-bold text-blue-600 bg-white hover:bg-blue-100 border border-blue-600 rounded px-3 py-2\"\n                        >\n                          Go to claims list\n                        </Link>\n                      )\n                    )}\n                  </div>\n                )}\n                {this.state.loadingExams === false &&\n                  this.state.loadingExamsDone === false &&\n                  CheckIfExamDone(\n                    this.props.selectedPosition.courses,\n                    this.props.candidateExam.user_exams_done\n                  ) === false && (\n                    <div\n                      onClick={() =>\n                        this.props.selected_application &&\n                        this.props.deleteApplication(\n                          this.props.selected_application\n                        )\n                      }\n                      className=\"btn flex flex-row gap-2 items-center text-red-700 bg-red-50 cursor-pointer hover:bg-red-100 hover:text-red-900\"\n                    >\n                      <IoMdTrash className=\"text-xl \" />\n                      <span className=\"text-sm\">Remove application</span>\n                    </div>\n                  )}\n              </div>\n              {this.state.claim === true &&\n                this.props.selected_application !== null && (\n                  <div className=\"bg-gray-100 mt-4 pt-2 rounded\">\n                    <div className=\"font-bold text-xl px-3 pb-2\">\n                      Submit application claim\n                    </div>\n                    <ClaimFormComponent\n                      setFormState={this.setClaim}\n                      claim_type={PlansTypeKeys.APPLICATION}\n                      file_id={this.props.selected_application}\n                    />\n                  </div>\n                )}\n            </div>\n            {this.props.selectedApplicationDetails &&\n              this.props.selectedApplicationDetails.application_status !==\n                ApplicationStates.Rejected && (\n                <>\n                  <ActiveExams\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    selectedApplicationDetails={\n                      this.props.selectedApplicationDetails\n                    }\n                  />\n                  <PreparedExams\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    changeLocation={this.changeLocation}\n                    selectedApplicationDetails={\n                      this.props.selectedApplicationDetails\n                    }\n                  />\n                  <ExamsDone\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    viewMarksDetails={(\n                      selectedExamDetails: ExamDoneDetailsAnswers\n                    ) => {\n                      this.setState({\n                        selectedExamDetails: selectedExamDetails,\n                      });\n                    }}\n                  />\n                </>\n              )}\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  doExam,\n  prepareExam,\n  locationsData,\n  periods,\n  candidateExam,\n  course,\n  positions,\n  claiming,\n}: StoreState): {\n  auth: Auth;\n  doExam: examDataInterface;\n  prepareExam: PrepareExamsStoreInterface;\n  locationsData: LocationsDataStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n  course: courseStoreInterface;\n  positions: positionsStoreInterface;\n  claiming: ClaimingReducerType;\n} => {\n  return {\n    auth: auth,\n    doExam: doExam,\n    prepareExam: prepareExam,\n    locationsData: locationsData,\n    periods: periods,\n    candidateExam: candidateExam,\n    course: course,\n    positions: positions,\n    claiming: claiming,\n  };\n};\n\nconst PostExams = connect(mapStateToProps, {\n  loadExam,\n  loadExamsList,\n  loadAllLocationsData,\n  setSelectedLocationData,\n  loadApplicationPeriods,\n  setSelectedCandidateExam,\n  loadCourses,\n  setSelectedCourse,\n  InitializeExamDetails,\n  setSelectedPeriod,\n  setSelectedPosition,\n  loadExamsDone,\n  getMyClaims,\n})(_PostExams);\n\nexport default PostExams;\n","import React, { Component } from \"react\";\nimport { GetApplicationsAPI } from \"../../interfaces/application\";\nimport { CandidateInterface } from \"../../interfaces/candidatesInterfaces\";\nimport { PlacedCandidateStatus } from \"../../interfaces/marks_publication\";\nimport { UserInfoInterface } from \"../../shared/interfaces\";\n\ninterface CandidatePlacementCheckProps {\n  position: GetApplicationsAPI;\n  user: CandidateInterface;\n}\ninterface CandidatePlacementCheckState {\n  loading: boolean;\n}\ninterface SchoolItemPlacement {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\nexport interface SchoolPlacementInterface {\n  n_id: string;\n  phone_number: string;\n  email: string;\n  user_info: UserInfoInterface;\n  placed: {\n    _id: string;\n    comment: string;\n    status: PlacedCandidateStatus;\n    waiting_list_id: string;\n    user_id: string;\n    school_id: string;\n    district_id: string;\n    position_id: string;\n    request_id: string;\n    createdAt: string;\n    updatedAt: string;\n    school: SchoolItemPlacement;\n    __v: number;\n  };\n}\n\n// interface CandidatePlacementSchool {}\n\nexport class CandidatePlacementCheck extends Component<\n  CandidatePlacementCheckProps,\n  CandidatePlacementCheckState\n> {\n  constructor(props: CandidatePlacementCheckProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  render() {\n    return <div>Candidate Placement check</div>;\n  }\n}\n\nexport default CandidatePlacementCheck;\n","import React, { Component, Fragment } from \"react\";\nimport { MdAdd } from \"react-icons/md\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n  setSelectedPeriod,\n  System,\n  PushPopupAlert,\n  positionsStoreInterface,\n  loadAllPositions,\n  FC_Access,\n  CandidateApplicationsStoreInterface,\n  LoadCandidateApplications,\n  candidateExamStoreInterface,\n  InitializeExamDetails,\n  loadExamsDone,\n  setSelectedPosition,\n  setSelectedCourse,\n  courseStoreInterface,\n  setSelectedCandidateExam,\n  examDataInterface,\n  AddUserApplication,\n  RemoveUserApplication,\n  SelectUserApplication,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  applicationStoreInterface,\n  initialApplicationInterface,\n} from \"../../actions/application\";\nimport { ApplicationStepsTypes } from \"../Application/ApplicationSteps/ApplicationSteps\";\nimport {\n  applicationExamAPI,\n  ApplicationPeriodGet,\n  ApplicationStates,\n  ApplicationStatesDescription,\n  GetApplicationsAPI,\n  NoRoomsInterface,\n} from \"../../interfaces/application\";\nimport Exams from \"./Exams\";\nimport { course, PositionAPI } from \"../../interfaces/index\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { AiOutlineFilter } from \"react-icons/ai\";\nimport { IoBriefcase, IoBriefcaseOutline } from \"react-icons/io5\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../components/Navigation/SideNavigation\";\nimport { BsCaretRightFill } from \"react-icons/bs\";\nimport LoadingV2, { LoadingType } from \"../../components/Loading/LoadingV2\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { RiFileForbidLine } from \"react-icons/ri\";\nimport { IoMdList } from \"react-icons/io\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport ApplicationPeriods from \"../../components/ApplicationPeriods/ApplicationPeriods\";\nimport { DATE } from \"../../utils/functions\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { InitializeExamsDone } from \"../../utils/question_bank\";\nimport { examStatus } from \"../../interfaces/exam\";\nimport CandidatePlacementCheck from \"../../components/CandidatePlacementCheck/CandidatePlacementCheck\";\n\ninterface ApplicationsDashboardState {\n  selectedPosition: PositionAPI | null;\n  selectedExams: applicationExamAPI[] | null;\n  applications: GetApplicationsAPI[] | [] | null;\n  selected_application: string | null;\n  noRoomsApplication: NoRoomsInterface[] | null | [];\n  loading: boolean;\n  applicationError: string | null;\n  number_of_incomplete: number;\n  applicationDetails: boolean;\n  selectedApplicationStatus: ApplicationStates | null;\n  showPeriodFilter: boolean;\n  maxExamModal: boolean;\n  loadingErr: string;\n  displayDetailsModal: boolean;\n  viewSchools: GetApplicationsAPI | null;\n}\ninterface ApplicationsDashboardProps {\n  auth: Auth;\n  application: applicationStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  initiateApplication: (initial: initialApplicationInterface) => void;\n  removeLocation: (course_id: string) => void;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  system: System;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  positions: positionsStoreInterface;\n  loadAllPositions: (callback: (loading: boolean) => void) => void;\n  FC_Access: Function;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  LoadCandidateApplications: (\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  doExam: examDataInterface;\n  AddUserApplication: (application: GetApplicationsAPI) => void;\n  RemoveUserApplication: (application_id: string) => void;\n  SelectUserApplication: (application: GetApplicationsAPI | null) => void;\n}\n\nclass _ApplicationsDashboard extends Component<\n  ApplicationsDashboardProps,\n  ApplicationsDashboardState\n> {\n  constructor(props: ApplicationsDashboardProps) {\n    super(props);\n\n    this.state = {\n      selectedPosition: null,\n      selectedExams: null,\n      applications: null,\n      selected_application: null,\n      noRoomsApplication: null,\n      loading: false,\n      applicationError: null,\n      number_of_incomplete: 0,\n      applicationDetails: false,\n      selectedApplicationStatus: null,\n      showPeriodFilter: false,\n      maxExamModal: false,\n      loadingErr: \"\",\n      displayDetailsModal: false,\n      viewSchools: null,\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  filteredApplications = (\n    applications: GetApplicationsAPI[],\n    Status: ApplicationStates | null,\n    searchPeriod?: ApplicationPeriodGet | null\n  ) => {\n    let appl: GetApplicationsAPI[];\n    if (searchPeriod !== undefined && searchPeriod !== null) {\n      appl = applications.filter(\n        (itm) =>\n          itm.application_session.session_plan_id ===\n          searchPeriod.session_plan_id\n      );\n    } else {\n      appl = applications;\n    }\n    if (Status === null) {\n      return appl;\n    } else {\n      return appl.filter((item) => item.application_status === Status);\n    }\n  };\n\n  closeApplicationDetails = () => {\n    this.setState({ selected_application: null });\n    this.setState({ selectedPosition: null, selected_application: null });\n    this.setState({ selectedExams: null });\n    this.setState({ displayDetailsModal: false });\n  };\n\n  setDisplayDetailsModal = (status: boolean) => {\n    this.setState({ displayDetailsModal: status });\n  };\n\n  applicationStatuses = (\n    application: GetApplicationsAPI[]\n  ): { title: string; count: number; status: ApplicationStates }[] => {\n    let output: { title: string; count: number; status: ApplicationStates }[] =\n      [];\n    for (let i in ApplicationStatesDescription) {\n      output.push({\n        title: ApplicationStatesDescription[i].caption,\n        count: application.filter(\n          (itm) =>\n            itm.application_status === ApplicationStatesDescription[i].key\n        ).length,\n        status: ApplicationStatesDescription[i].key,\n      });\n    }\n    return output;\n  };\n\n  setMaxExamModal = (status: boolean) => {\n    this.setState({ maxExamModal: status });\n  };\n\n  LoadApplications = async () => {\n    this.setState({ loadingErr: \"\" });\n    this.setState({ number_of_incomplete: 0 });\n    if (this.props.auth.user.user_id) {\n      const selected_position = this.state.selectedPosition;\n      this.setState({ applications: null });\n      this.setState({ selectedPosition: null });\n      this.setState({ selectedExams: null });\n      let response: GetApplicationsAPI[] | null = null;\n      if (\n        this.props.candidateApplications.candidate_applications === null &&\n        this.props.auth.user\n      ) {\n        try {\n          const res = await axios.get<GetApplicationsAPI[]>(\n            `${API.APPLICATION}/application/${this.props.auth.user.user_id}`\n          );\n          // console.log(\"Applications list: \", res.data);\n          if (res.status === 200) {\n            response = res.data;\n            if (res.data.length === 0) {\n              response = [];\n            } else {\n              for (let application of response) {\n                this.props.AddUserApplication(application);\n              }\n            }\n          } else {\n            response = [];\n          }\n        } catch (error: any) {\n          response = [];\n          console.log(\"Appl Err: \", { ...error });\n        }\n      } else {\n        response = this.props.candidateApplications.candidate_applications;\n      }\n      this.setState({ applications: response });\n      if (response !== null) {\n        if (response.length > 0) {\n          // let done = false;\n          for (let i in response) {\n            let courses = response[i].position.courses;\n            let exams = response[i].exams;\n            if (\n              response[i].position.position_id ===\n              selected_position?.position_id\n            ) {\n              this.setState({ selectedPosition: response[i].position });\n              this.setState({ selectedExams: exams });\n            }\n            // Load Exams done\n            InitializeExamsDone(\n              this.props.periods.selected_period,\n              response[i].position,\n              this.props.candidateExam,\n              this.props.loadExamsDone,\n              this.props.auth.user.user_id,\n              this.setLoading,\n              response[i].exams,\n              this.props.InitializeExamDetails,\n              this.setLoading\n            );\n            for (let x in courses) {\n              if (\n                exams.filter((itm) => itm.course_id === courses[x].course_id)\n                  .length === 0 &&\n                response[i].application_status === ApplicationStates.Incomplete\n              ) {\n                this.setState({\n                  selected_application: response[i].application_id,\n                });\n                this.setState({\n                  selectedPosition: response[i].position,\n                  selected_application: response[i].application_id,\n                });\n                this.setState({ selectedExams: response[i].exams });\n                this.setState({ displayDetailsModal: true });\n                this.incrementIncomplete();\n              }\n            }\n          }\n        } else {\n          this.props.LoadCandidateApplications(\n            this.props.auth.user.user_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n\n  updateLocation = async (\n    application_id: string,\n    exams: sentExamInterface[]\n  ) => {\n    this.setState({ loading: true });\n    this.setState({ applicationError: null });\n    console.log(application_id);\n    for (let i in exams) {\n      try {\n        const res = await axios.post(\n          `${API.APPLICATION}/application/updatemissed`,\n          {\n            application_id: application_id,\n            exams: exams[i],\n          }\n        );\n        if (res.status === 200 && this.state.noRoomsApplication !== null) {\n          this.setState({\n            noRoomsApplication: this.state.noRoomsApplication?.filter(\n              (itm) => itm.course_id !== exams[i].course_id\n            ),\n          });\n        }\n        if (res.status === 200) {\n          this.props.LoadCandidateApplications(\n            this.props.auth.user.user_id,\n            this.setLoading\n          );\n          this.LoadApplications();\n          this.setState({ displayDetailsModal: false });\n          this.setState({ selectedPosition: null, selected_application: null });\n          this.setState({ selectedExams: null });\n          this.props.PushPopupAlert({\n            title: `Location updated successfully`,\n            description:\n              \"Location has updated successfully! You can continue to update before starting of the examination!\",\n            theme: PopupAlertTheme.success,\n          });\n        }\n      } catch (error: any) {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.errors !== undefined) {\n              if (error.response.data.errors.length > 0) {\n                if (this.state.noRoomsApplication) {\n                  let newArr: sentExamInterface[];\n                  if (error.response.data.errors[0].field !== undefined) {\n                    newArr = this.state.noRoomsApplication?.filter(\n                      (itm) =>\n                        itm.course_id ===\n                        error.response.data.errors[0].field.course_id\n                    );\n                    if (newArr !== undefined) {\n                      for (let i in newArr) {\n                        this.props.removeLocation(newArr[i].course_id);\n                      }\n                    }\n                  }\n                }\n                this.setState({\n                  applicationError: error.response.data.errors[0].message,\n                });\n                this.props.PushPopupAlert({\n                  title: error.response.data.errors[0].message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            } else {\n              this.props.PushPopupAlert({\n                title: \"Something went wrong! Please try again\",\n                theme: PopupAlertTheme.danger,\n              });\n              this.setState({\n                applicationError: \"Something went wrong! Please try again\",\n              });\n            }\n          }\n        }\n        console.log(\"Change error: \", { ...error });\n      }\n    }\n    if (this.state.selectedPosition) {\n      this.setState({ selectedPosition: this.state.selectedPosition });\n    }\n    this.setState({ selected_application: application_id });\n    this.setState({ loading: false });\n  };\n\n  incrementIncomplete = () => {\n    this.setState({\n      number_of_incomplete: this.state.number_of_incomplete + 1,\n    });\n  };\n\n  changeLoadingState = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  deleteApplication = async (id: string) => {\n    if (\n      window.confirm(\"Are you sure do you want to delete this application?\") &&\n      id\n    ) {\n      this.changeLoadingState(true);\n      try {\n        await axios.delete(`${API.APPLICATION}/application/${id}`);\n        this.props.RemoveUserApplication(id);\n        this.LoadApplications();\n        this.props.PushPopupAlert({\n          title: `Application deleted successfully!`,\n          theme: PopupAlertTheme.success,\n        });\n        this.setState({ selectedExams: null });\n      } catch (error: any) {\n        this.props.PushPopupAlert({\n          title: `Failed to delete application!`,\n          theme: PopupAlertTheme.warning,\n        });\n      }\n      this.changeLoadingState(false);\n    }\n  };\n\n  setShowFilterStatus = (status: boolean) => {\n    this.setState({ showPeriodFilter: status });\n  };\n\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.changeLoadingState);\n    this.LoadApplications();\n    this.props.loadAllPositions(this.changeLoadingState);\n    if (\n      this.props.application.apply === undefined ||\n      this.props.application.apply.currentStep === ApplicationStepsTypes.Step3\n    ) {\n      this.props.initiateApplication({\n        user_id: this.props.auth.user.user_id,\n        selectedPosition: null,\n        currentStep: ApplicationStepsTypes.Step1,\n        positions: null,\n        doTestStatus: {\n          status: false,\n        },\n        selectedLocation: [],\n      });\n    }\n    // if (this.props.candidateApplications.candidate_applications !== null) {\n    //   if (this.props.candidateApplications.candidate_applications.length > 0) {\n    //     if (this.state.selectedPosition === null) {\n    //       this.setState({ selectedPosition: this.props.candidateApplications.candidate_applications[0].position, selected_application: this.props.candidateApplications.candidate_applications[0].application_id })\n    //     }\n    //     if (this.state.selectedExams === null) {\n    //       this.setState({ selectedExams: this.props.candidateApplications.candidate_applications[0].exams })\n    //     }\n    //   }\n    // }\n  };\n  render() {\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />;\n    }\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (this.props.doExam.exam_answers) {\n      if (\n        this.props.doExam.exam_answers.status === examStatus.Editing ||\n        this.props.doExam.exam_answers.status === examStatus.Paused\n      ) {\n        return <Redirect to=\"/do-exam\" />;\n      }\n    }\n    return (\n      <Fragment>\n        {this.state.selectedPosition !== null &&\n        this.state.selectedExams !== null &&\n        this.state.displayDetailsModal === true ? (\n          <div className=\"border-t border-gray-200 my-2 pb-2 bg-white rounded animate__animated animate__fadeInUp animate__faster -ml-2 mr-1\">\n            <div className=\"flex flex-col md:flex-row gap-4 items-center md:justify-between bg-blue-600 rounded-t py-2 px-2\">\n              <div className=\"flex flex-row gap-4 w-full\">\n                <div>\n                  <div className=\"h-12 w-12 rounded-full bg-blue-500 hover:bg-blue-700 cursor-pointer flex items-center justify-center\">\n                    <BiArrowBack\n                      className=\"text-3xl text-white\"\n                      onClick={() => this.closeApplicationDetails()}\n                    />\n                  </div>\n                </div>\n                <div className=\"flex flex-col w-full\">\n                  <span className=\"font-bold text-xl text-white\">\n                    {this.state.selectedPosition.position_title}\n                  </span>\n                  <span className=\"text-sm text-gray-100 font-normal pl-1\">\n                    {this.props.candidateApplications.candidate_applications &&\n                      this.state.selectedPosition !== null &&\n                      this.props.candidateApplications.candidate_applications.find(\n                        (itm) =>\n                          itm.position.position_id ===\n                          this.state.selectedPosition?.position_id\n                      )?.application_session.session_plan_name}{\" \"}\n                    -{\" \"}\n                    {this.props.candidateApplications.candidate_applications !==\n                      null &&\n                      this.state.selectedPosition !== null &&\n                      this.props.candidateApplications.candidate_applications.find(\n                        (itm) =>\n                          itm.position.position_id ===\n                          this.state.selectedPosition?.position_id\n                      )?.application_session.period}\n                  </span>\n                </div>\n              </div>\n              {this.props.candidateApplications.candidate_applications !==\n                null &&\n              this.props.candidateApplications.candidate_applications.find(\n                (itm) =>\n                  itm.application_id === this.state.selected_application &&\n                  (itm.application_status === ApplicationStates.Shortlisted ||\n                    itm.application_status === ApplicationStates.Pass)\n              ) !== undefined ? (\n                <div\n                  title=\"Choose the Province, Choose the District, etc.\"\n                  className=\"mb-3 md:mb-0\"\n                  onClick={() => {\n                    if (\n                      this.props.candidateApplications\n                        .candidate_applications !== null\n                    ) {\n                      let checkApplication =\n                        this.props.candidateApplications.candidate_applications.find(\n                          (itm) =>\n                            itm.application_id ===\n                            this.state.selected_application\n                        );\n                      if (checkApplication !== undefined) {\n                        this.props.SelectUserApplication(checkApplication);\n                      }\n                    }\n                  }}\n                >\n                  <Link\n                    to=\"/placement-contract\"\n                    className=\"bg-blue-500 px-4 py-3 font-bold rounded-md border-2 border-white text-white hover:bg-blue-800\"\n                  >\n                    Placement\n                  </Link>\n                </div>\n              ) : (\n                <div\n                  title=\"Wait for being shortlisted to fill placement agreement\"\n                  className=\"bg-blue-500 text-blue-300 rounded px-3 py-2 cursor-not-allowed hidden md:block\"\n                >\n                  Placement\n                </div>\n              )}\n            </div>\n            {/* Check application */}\n            <div className=\"bg-gray-100\"></div>\n            <Exams\n              selectedExams={this.state.selectedExams}\n              selectedPosition={this.state.selectedPosition}\n              selected_application={this.state.selected_application}\n              updateLocation={this.updateLocation}\n              changeLocationError={this.state.applicationError}\n              loading={this.state.loading}\n              incrementIncomplete={this.incrementIncomplete}\n              applicationHistory={\n                this.props.candidateApplications.candidate_applications !==\n                  null && this.state.selectedPosition !== null\n                  ? this.props.candidateApplications.candidate_applications.find(\n                      (itm) =>\n                        itm.position.position_id ===\n                        this.state.selectedPosition?.position_id\n                    )?.application_history\n                  : undefined\n              }\n              deleteApplication={this.deleteApplication}\n              selectedApplicationDetails={\n                this.props.candidateApplications.candidate_applications &&\n                this.props.candidateApplications.candidate_applications.find(\n                  (itm) =>\n                    itm.application_id === this.state.selected_application\n                )!\n              }\n              setMaxExamModal={this.setMaxExamModal}\n              setDisplayDetailsModal={this.setDisplayDetailsModal}\n            />\n          </div>\n        ) : (\n          <>\n            <SideNavigation>\n              {this.props.positions.positions_list === null ? (\n                <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 cursor-not-allowed animate__animated animate__zoomIn\">\n                  <RiFileForbidLine className=\"text-2xl text-white\" /> Please\n                  wait...\n                </div>\n              ) : this.props.positions.positions_list.length > 0 &&\n                this.props.periods.applicationPeriods &&\n                this.props.periods.applicationPeriods.filter(\n                  (itm) => itm.is_active === true\n                ).length !== 0 ? (\n                <Link to=\"/apply\">\n                  <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn\">\n                    <MdAdd className=\"text-2xl text-white\" /> Apply\n                  </div>\n                </Link>\n              ) : (\n                <div className=\"btn bg-gray-200 cursor-not-allowed text-gray-500 mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\">\n                  No vacancies!\n                </div>\n              )}\n              {/* <div className=\"mb-6\"></div> */}\n              {/* <Search data={[1, 2, 3]} /> */}\n              <div\n                onClick={() =>\n                  this.setState({ selectedApplicationStatus: null })\n                }\n                className={`cursor-pointer ${\n                  this.state.selectedApplicationStatus !== null\n                    ? \"text-gray-600 hover:text-blue-600 border border-gray-200 hover:border-blue-600 hover:bg-blue-100 bg-white\"\n                    : \"text-blue-600 border border-blue-600 hover:bg-blue-100 bg-blue-100\"\n                } flex flex-row items-center gap-2 px-2 py-1 rounded font-bold`}\n              >\n                <IoMdList className=\"text-xl\" />\n                <span>\n                  View all (\n                  {this.props.candidateApplications.candidate_applications ===\n                  null\n                    ? 0\n                    : this.props.candidateApplications.candidate_applications.filter(\n                        (itm) =>\n                          itm.application_session.session_plan_id ===\n                          this.props.periods.selected_period?.session_plan_id\n                      ).length}\n                  )\n                </span>\n              </div>\n              <div className=\"pt-1\">\n                {this.props.candidateApplications.candidate_applications &&\n                this.filteredApplications(\n                  this.props.candidateApplications.candidate_applications,\n                  null,\n                  this.props.periods.selected_period\n                ) === null ? (\n                  <Loading />\n                ) : (\n                  this.props.candidateApplications.candidate_applications &&\n                  this.applicationStatuses(\n                    this.filteredApplications(\n                      this.props.candidateApplications.candidate_applications,\n                      null,\n                      this.props.periods.selected_period\n                    )\n                  ).map(\n                    (\n                      itm: {\n                        title: string;\n                        count: number;\n                        status: ApplicationStates;\n                      },\n                      i: number\n                    ) =>\n                      itm.count > 0 && (\n                        <Fragment key={itm.title}>\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selectedApplicationStatus: itm.status,\n                              })\n                            }\n                          >\n                            <MainItem\n                              title={itm.title}\n                              count={itm.count}\n                              active={\n                                this.state.selectedApplicationStatus ===\n                                itm.status\n                                  ? true\n                                  : false\n                              }\n                            />\n                          </div>\n                        </Fragment>\n                      )\n                  )\n                )}\n              </div>\n            </SideNavigation>\n            <div className=\"px-2 -ml-2 lg:ml-0\">\n              <div className=\"mt-2 rounded px-2 md:px-0 py-3 md:py-3\">\n                <div className=\"flex flex-col\">\n                  <div className=\"flex flex-col md:flex-row justify-between md:items-center\">\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-3xl font-bold\">\n                        My Applications{\" \"}\n                        <span className=\"md:hidden\">\n                          (\n                          {this.props.candidateApplications\n                            .candidate_applications &&\n                          this.filteredApplications(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            this.state.selectedApplicationStatus,\n                            this.props.periods.selected_period\n                          )\n                            ? this.filteredApplications(\n                                this.props.candidateApplications\n                                  .candidate_applications,\n                                this.state.selectedApplicationStatus,\n                                this.props.periods.selected_period\n                              ).length\n                            : 0}\n                          )\n                        </span>\n                      </span>\n                      <div className=\"text-gray-700 font-bold text-xs md:text-sm lg:text-md flex flex-row gap-1 items-center\">\n                        <AiOutlineFilter className=\"text-2xl\" /> Selected period{\" \"}\n                        <span\n                          onClick={() =>\n                            this.setState({ showPeriodFilter: true })\n                          }\n                          className={`px-2 ${\n                            this.props.periods.selected_period !== null\n                              ? \"text-blue-600 hover:bg-blue-100 border-2 border-gray-200 hover:border-blue-600 underline\"\n                              : \"bg-white text-gray-600 hover:bg-gray-100 border border-gray-300\"\n                          }  rounded-full py-1 flex flex-row justify-center items-center font-bold cursor-pointer`}\n                        >\n                          {this.props.periods.selected_period !== null ? (\n                            <>\n                              <BsCaretRightFill className=\"mr-3\" />\n                              {\n                                this.props.periods.selected_period\n                                  .session_plan_name\n                              }\n                            </>\n                          ) : (\n                            \"Choose period\"\n                          )}\n                        </span>\n                      </div>\n                    </div>\n                    <div>\n                      <div\n                        onClick={() =>\n                          this.setState({ showPeriodFilter: true })\n                        }\n                        className=\"bg-white border border-white hover:border-blue-600 text-blue-600 font-bold items-center btn w-max cursor-pointer hover:bg-blue-100 my-2 md:my-0\"\n                      >\n                        {this.props.periods.selected_period === null\n                          ? \"Choose period\"\n                          : \"Change period\"}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {this.state.loadingErr !== \"\" && (\n                <div className=\"bg-yellow-100 text-yellow-700 font-extrabold text-2xl mx-4 px-3 py-3 rounded\">\n                  {this.state.loadingErr}\n                </div>\n              )}\n              <div className=\"mb-2\">\n                <div className=\"grid grid-cols-12 gap-3\">\n                  <div className=\"col-span-12\">\n                    <div className={`grid md:grid-cols-1 lg:grid-cols-1 gap-2`}>\n                      <div className=\"-my-2 md:hidden lg:hidden xl:hidden\">\n                        {this.props.positions.positions_list === null ? (\n                          <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                            <RiFileForbidLine className=\"text-2xl text-white\" />{\" \"}\n                            Please wait...\n                          </div>\n                        ) : this.props.positions.positions_list.length > 0 ? (\n                          <Link to=\"/apply\">\n                            <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                              <MdAdd className=\"text-2xl text-white\" /> Create\n                              application\n                            </div>\n                          </Link>\n                        ) : (\n                          <div className=\"btn bg-gray-400 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                            <RiFileForbidLine className=\"text-2xl text-white\" />{\" \"}\n                            No vacancies!\n                          </div>\n                        )}\n                      </div>\n                      {this.props.candidateApplications\n                        .candidate_applications === null ? (\n                        <LoadingV2 type={LoadingType.dark} />\n                      ) : this.filteredApplications(\n                          this.props.candidateApplications\n                            .candidate_applications,\n                          this.state.selectedApplicationStatus,\n                          this.props.periods.selected_period\n                        ).length === 0 ? (\n                        <div className=\"\">\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value=\"No Applications found!\"\n                            component={\n                              <div className=\"-my-2 hidden md:block\">\n                                {this.props.positions.positions_list !== null &&\n                                  this.props.positions.positions_list.length >\n                                    0 &&\n                                  this.props.periods.applicationPeriods &&\n                                  this.props.periods.applicationPeriods.filter(\n                                    (itm) => itm.is_active === true\n                                  ).length !== 0 && (\n                                    <Link to=\"/apply\">\n                                      <div className=\"text-blue-600 font-bold underline mb-2 hover:text-blue-800 animate__animated animate__zoomIn\">\n                                        Click here to create new application\n                                      </div>\n                                    </Link>\n                                  )}\n                              </div>\n                            }\n                          />\n                        </div>\n                      ) : (\n                        this.filteredApplications(\n                          this.props.candidateApplications\n                            .candidate_applications,\n                          this.state.selectedApplicationStatus,\n                          this.props.periods.selected_period\n                        ).map((item, i) => (\n                          <div\n                            key={i + 1}\n                            onClick={() => {\n                              this.setState({\n                                selectedPosition: item.position,\n                                selected_application: item.application_id,\n                              });\n                              this.setState({ selectedExams: item.exams });\n                              this.setState({ displayDetailsModal: true });\n                            }}\n                            className={`bg-white rounded-md animate__animated animate__fadeIn animate__faster\n                      ${\n                        this.state.selectedPosition?.position_id ===\n                        item.position.position_id\n                          ? \"border-2 border-blue-600 shadow\"\n                          : item.application_status ===\n                            ApplicationStates.Initiated\n                          ? \"border-gray-200 bg-gray-50 hover:border-gray-600\"\n                          : item.application_status ===\n                            ApplicationStates.Rejected\n                          ? \"bg-white border-white\"\n                          : item.application_status ===\n                            ApplicationStates.Shortlisted\n                          ? \"border-gray-200 bg-white hover:border-blue-600\"\n                          : \"bg-white border-yellow-600 hover:border-yellow-500\"\n                      } flex flex-col cursor-pointer font-normal hover:font-bold border-2`}\n                          >\n                            <div\n                              className={`grid md:grid-cols-12 group px-3 py-3 rounded-md gap-2 ${\n                                this.state.selectedPosition?.position_id ===\n                                item.position.position_id\n                                  ? \"bg-gray-100 rounded-t\"\n                                  : \"bg-white\"\n                              }`}\n                            >\n                              <div className=\"col-span-1 flex items-center justify-center\">\n                                {item.application_status ===\n                                ApplicationStates.Initiated ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Rejected ? (\n                                  <IoBriefcase className=\"text-5xl text-gray-400 group-hover:text-gray-700\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Shortlisted ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Incomplete ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-yellow-800\" />\n                                ) : (\n                                  <IoBriefcase className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                )}\n                              </div>\n                              <div className=\"col-span-7\">\n                                <span\n                                  className={`font-extrabold \n                          ${\n                            item.application_status !==\n                            ApplicationStates.Initiated\n                              ? item.application_status ===\n                                ApplicationStates.Rejected\n                                ? \"text-gray-900 group-hover:text-gray-900\"\n                                : item.application_status ===\n                                  ApplicationStates.Shortlisted\n                                ? \"text-gray-900 group-hover:text-blue-600\"\n                                : item.application_status ===\n                                  ApplicationStates.Incomplete\n                                ? \"text-gray-900 group-hover:text-yellow-800\"\n                                : \"text-gray-900 group-hover:text-blue-600\"\n                              : \"text-gray-900 group-hover:text-blue-600\"\n                          }`}\n                                >\n                                  {item.position.position_title}\n                                </span>\n                                <div className=\"flex flex-col text-xs text-gray-600\">\n                                  <div className=\"flex flex-row gap-2\">\n                                    <div>\n                                      <div className=\"flex flex-col float-left text-sm md:justify-end pt-2\">\n                                        <span\n                                          className={`${\n                                            item.application_status ===\n                                            ApplicationStates.Rejected\n                                              ? \"text-yellow-700\"\n                                              : \"text-gray-500\"\n                                          } md:text-right`}\n                                        >\n                                          {/* Status */}\n                                        </span>\n                                        {item.application_status ===\n                                        ApplicationStates.Initiated ? (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-gray-600 text-gray-100 border border-gray-500 rounded-full\"\n                                                : \"bg-gray-50 text-gray-800 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        ) : item.application_status ===\n                                          ApplicationStates.Rejected ? (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-yellow-900 text-yellow-100 border border-yellow-700 rounded-full\"\n                                                : \"bg-yellow-100 text-yellow-900 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        ) : item.application_status ===\n                                          ApplicationStates.Shortlisted ? (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-blue-900 text-blue-100 border border-blue-700 rounded-full\"\n                                                : \"bg-blue-100 text-blue-900 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        ) : (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-yellow-600 text-yellow-100 border border-yellow-500 rounded-full\"\n                                                : \"bg-yellow-100 text-yellow-700 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        )}\n                                      </div>\n                                    </div>\n                                    <div className=\"flex flex-col\">\n                                      <span\n                                        className={`${\n                                          item.application_status !==\n                                          ApplicationStates.Initiated\n                                            ? item.application_status ===\n                                              ApplicationStates.Rejected\n                                              ? \"text-gray-500\"\n                                              : item.application_status ===\n                                                ApplicationStates.Shortlisted\n                                              ? \"text-gray-500\"\n                                              : \"text-gray-500\"\n                                            : \"text-gray-500\"\n                                        }`}\n                                      >\n                                        {/* Application period: */}\n                                      </span>\n                                      <span\n                                        className={`${\n                                          item.application_status !==\n                                          ApplicationStates.Initiated\n                                            ? item.application_status ===\n                                              ApplicationStates.Rejected\n                                              ? \"text-gray-800\"\n                                              : item.application_status ===\n                                                ApplicationStates.Shortlisted\n                                              ? \"text-gray-800\"\n                                              : \"text-gray-800\"\n                                            : \"text-black\"\n                                        } font-bold`}\n                                      >\n                                        {item.application_session &&\n                                          item.application_session\n                                            .session_plan_name}{\" \"}\n                                        -{\" \"}\n                                        {item.application_session &&\n                                          item.application_session.period}\n                                      </span>\n                                      <div className=\"flex flex-row gap-2\">\n                                        <span\n                                          className={`${\n                                            item.application_status !==\n                                            ApplicationStates.Initiated\n                                              ? item.application_status ===\n                                                ApplicationStates.Rejected\n                                                ? \"text-gray-500\"\n                                                : item.application_status ===\n                                                  ApplicationStates.Shortlisted\n                                                ? \"text-gray-500\"\n                                                : \"text-gray-500\"\n                                              : \"text-gray-500\"\n                                          }`}\n                                        >\n                                          Date:\n                                        </span>\n                                        <span\n                                          className={`${\n                                            item.application_status !==\n                                            ApplicationStates.Initiated\n                                              ? item.application_status ===\n                                                ApplicationStates.Rejected\n                                                ? \"text-gray-800\"\n                                                : item.application_status ===\n                                                  ApplicationStates.Shortlisted\n                                                ? \"text-gray-800\"\n                                                : \"text-gray-800\"\n                                              : \"text-black\"\n                                          } font-bold`}\n                                        >\n                                          {DATE(item.createdAt, \"DD/MM/YYYY\")}\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                              <div className=\"col-span-12 md:col-span-4 flex md:justify-end items-center\">\n                                {/* Action */}\n                                <div className=\"flex flex-row items-center justify-end gap-2 w-full\">\n                                  {/* <div className=\"btn bg-gray-100 text-gray-600\">\n                                    Details\n                                  </div> */}\n                                  {item.application_status ===\n                                    ApplicationStates.Shortlisted && (\n                                    <div\n                                      className=\"mt-2 md:mt-0\"\n                                      title=\"Choose the Province, Choose the District, etc.\"\n                                      onClick={() => {\n                                        this.props.SelectUserApplication(item);\n                                      }}\n                                    >\n                                      <Link to=\"/placement-contract\">\n                                        <div className=\"rounded px-2 py-1 font-bold bg-blue-50 text-blue-600 group-hover:bg-blue-600 group-hover:text-white\">\n                                          <span>Placement agreement</span>\n                                        </div>\n                                      </Link>\n                                    </div>\n                                  )}\n                                  <div className=\"rounded px-2 py-1 bg-gray-100 hover:bg-gray-200 text-gray-600 cursor-pointer mt-2 md:mt-0 font-bold\">\n                                    Details\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        ))\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n\n        {this.state.showPeriodFilter === true && (\n          <Modal\n            title={<div className=\"text-2xl\">Choose a period</div>}\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ showPeriodFilter: false })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true, body: false }}\n          >\n            <ApplicationPeriods\n              applicationPeriods={this.props.periods.applicationPeriods}\n              setSelectedPeriod={this.props.setSelectedPeriod}\n              showPeriodFilter={this.setShowFilterStatus}\n            />\n          </Modal>\n        )}\n        {this.state.viewSchools !== null && (\n          <Modal\n            title={\n              <div className=\"flex flex-col\">\n                <span className=\"text-4xl font-extrabold text-blue-600\">\n                  {this.state.viewSchools.position.position_title}\n                </span>\n                <span className=\"text-base\">View placement schools</span>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ viewSchools: null })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true, body: false }}\n          >\n            <CandidatePlacementCheck\n              position={this.state.viewSchools}\n              user={this.props.auth.user}\n            />\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  application,\n  periods,\n  system,\n  positions,\n  candidateApplications,\n  candidateExam,\n  course,\n  doExam,\n}: StoreState): {\n  auth: Auth;\n  application: applicationStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  system: System;\n  positions: positionsStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n  course: courseStoreInterface;\n  doExam: examDataInterface;\n} => {\n  return {\n    auth: auth,\n    application: application,\n    periods,\n    system: system,\n    positions: positions,\n    candidateApplications: candidateApplications,\n    candidateExam: candidateExam,\n    course: course,\n    doExam: doExam,\n  };\n};\n\nexport const ApplicationsDashboard = connect(mapStateToProps, {\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  PushPopupAlert,\n  loadAllPositions,\n  FC_Access,\n  LoadCandidateApplications,\n  InitializeExamDetails,\n  loadExamsDone,\n  setSelectedPosition,\n  setSelectedCourse,\n  setSelectedCandidateExam,\n  AddUserApplication,\n  RemoveUserApplication,\n  SelectUserApplication,\n})(_ApplicationsDashboard);\n"],"sourceRoot":""}
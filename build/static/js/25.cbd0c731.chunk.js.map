{"version":3,"sources":["components/Table/Table.tsx","components/Navigation/SideNavigation.tsx","actions/session.ts","actions/document.ts","actions/settings.ts","containers/SessionSettings/NoSession.tsx","containers/Claimings/Candidate/ChooseReason.tsx","containers/Claimings/Candidate/ExaminationFormView.tsx","containers/Claimings/Candidate/FormPlacementList.tsx","containers/Claimings/Candidate/ClaimForm.tsx","shared/interfaces.tsx","containers/Claimings/ClaimDocView.tsx","utils/ExportToExcel.tsx","components/Loading/TableLoading.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","containers/SessionSettings/ChooseSession.tsx","containers/Positions/ViewRequirements.tsx","containers/Claimings/Candidate/FormExamList.tsx","containers/Claimings/Candidate/ApplicationFormView.tsx","containers/SessionSettings/SessionDetails.tsx","containers/Claimings/Admin/AdminFilterByType.tsx","containers/Claimings/ClaimHeaderTitle.tsx","containers/Claimings/Candidate/DocFormView.tsx","containers/Claimings/Candidate/FormApplicationList.tsx","containers/Claimings/Candidate/FormDocumentList.tsx","containers/Claimings/Candidate/index.tsx","containers/Claimings/ClaimApplView.tsx","containers/Claimings/ClaimExamView.tsx","containers/Claimings/ClaimPlacementView.tsx","containers/Claimings/Candidate/FilterByType.tsx","containers/Claimings/Admin/AdminClaimAppView.tsx","containers/Claimings/Admin/AdminClaimExamView.tsx","containers/Claimings/Admin/AdminClaimDocView.tsx","containers/Claimings/Admin/index.tsx","containers/Admin/Claiming/ClaimingReport.tsx"],"names":["Table","props","table","tr","tableId","length","result","characters","charactersLength","i","charAt","Math","floor","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","pagination","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","map","style","display","className","tableSize","search","searchBG","type","placeholder","onChange","e","data","filterType","filter","td","rows","cols","toLowerCase","columns","textContent","innerText","indexOf","filterTable","target","value","disabled","loading","Number","tableClass","rounded","id","hideColumns","thColor","column","index","padding","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","_SideNavigation","componentDidMount","PageHasSubNav","componentWillUnmount","state","this","auth","isAuthenticated","navActive","system","navigation","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","GetPlansTypes","callback","dispatch","a","setAxiosToken","axios","get","API","CLAIMING","res","console","log","GET_PLANS_TYPES","plan_types","status","ActionTypes","payload","error","errorToText","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","undefined","is_active","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","getDocumentCategory","AUTH","docCategory","GET_DOCUMENT_CATEGORY","createDocumentCategory","CREATE_DOCUMENT_CATEGORY","updateDocumentCategory","UPDATE_DOCUMENT_CATEGORY","deleteDocumentCategory","DELETE_DOCUMENT_CATEGORY","getDocumentSubCategory","docSubCategory","GET_DOCUMENT_SUB_CATEGORY","doc_SUB_category_error","createDocumentSubCategory","CREATE_DOCUMENT_SUB_CATEGORY","updateDocumentSubCategory","UPDATE_DOCUMENT_SUB_CATEGORY","deleteDocumentSubCategory","DELETE_DOCUMENT_SUB_CATEGORY","getDocumentFields","docFields","GET_DOCUMENT_FIELDS","createDocumentFields","CREATE_DOCUMENT_FIELDS","updateDocumentFields","reducer","UPDATE_DOCUMENT_FIELDS","deleteDocumentFields","DELETE_DOCUMENT_FIELDS","getCandidatesInInstitute","educatin_type_id","session_id","APPLICATION","newArray","element","GET_CANDIDATE_IN_INSTITUTE","verifyDocument","action_verify","VERIFY_DOCUMENT","getSystemSettings","GET_SYSTEM_SETTINGS","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","task","key","permitted","GET_TASK_ACCESS","getPositions","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","NoSession","ChooseReason","setSearchInput","setState","searchInput","setChooseClaimReason","allClaimReasons","item","claimReason","setClaimReason","reason","toString","ExaminationFormView","thisAnswerSheet","course","setChooseClaimFile","setClaimFileId","answer_sheet_id","setViewThisFile","DATE","createdAt","questions","question","find","q","language","QuestionLanguage","Eng","description","answer","myPlacement","isClaimAllowed","myClaims","activeSession","session_plan_id","placed","_id","school","school_name","ClaimGetDocTitle","documentCategories","doc","DocCategory","DocSubCategory","DocField","DocTitle","sub_category_id","documentSubCategory","c","user_detail_subcategory_id","category_id","documentCategory","user_detail_category_id","category_subcategory_data","category_subcategory_Data_id","documentFields","category","sub_category","field","main","allClaim","period_id","claimOnId","claiming_on_id","ClaimForm","isDocumentIdValid","documents","doc_id","validated_by","validation_status","msg","alert","PopupAlertTheme","info","claiming","success","warning","isApplicationIdValid","applications","app_id","app","application_id","application_status","ApplicationStates","Rejected","setLoading","setLoadingForm","loadingForm","setFormError","formError","setAlertError","alertError","claimFileId","viewThisFile","chooseClaimFile","chooseClaimReason","setClaimComment","claimComment","isClaimTypeOpen","thisSession","PlansTypeKeys","plans","type_key","isPlanActive","DOCUMENT_VALIDATION","PLACEMENT_TRANSFER","isClaimBtnValid","file_id","claim_type","PushPopupAlert","theme","setFormState","thisClaimType","thisClaimTypeId","formType","displayClaimType","claimType","EXAMINATION","MARKS_PUBLICATION","isClaimsAllowed","thisPeriod","getMyClaims","user","user_id","danger","loadExamAnswers","activeSessionPlan","getMyAnswers","sessionPlan","_isClaimsAllowed","documentReducer","candidateApplications","getMyRejectedApplications","_isApplicationIdValid","candidateDocuments","getMyRejectedDocuments","_isDocumentIdValid","claimReasons","getClaimReasons","getMyPlacement","courses","loadCourses","getDocumentById","getApplicationById","getExamById","exams","getValidation","thisId","old_reason","old_status","old_evaluated_by","comment","override_by","cleanToClose","loadUserById","isEmptyOrSpaces","handleSubmit","preventDefault","toLocaleLowerCase","old_evaluator_email","old_evaluator_name","evaluator_email","evaluator_name","email","user_info","fname","lname","default_claim_resaons","post","createClaim","selectClaimType","thisClaim","generateChooseFileTitle","formState","Modal","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","extraLarge","medium","body","footer","onSubmit","Object","values","capitalizeFirstLetter","replace","position","position_title","myAnswer","getCourseIdBySheetId","getCourseById","course_name","FormDocumentList","FormApplicationList","FormExamList","candidateAnswers","resize","DocFormView","thisDoc","ApplicationFormView","thisApplication","GetClaimingTypes","PostRequestStatusInterface","DocumentAttributesInterface","DocValidationStatusInterface","SESSION_PLAN_KEYS","isReclaimAllowed","claim_level","_thisClaim","claims","level","decision_taken_status","ClaimDecisionStatus","REJECTED","isClaimEvaluated","claim_status","ClaimStatus","EVALUATED","createReClaim","reClaimingMsg","setLoadingRequest","put","setReClaimingMsg","setReClaiming","setViewImage","viewImage","previous","evaluater","name","src","AUTH_FILES","files","alt","claim","showDate","timestampToDate","date_created","timeFR","evaluation_comment","reClaiming","last_claim_status","PENDING","DELETED","loadingRequest","ExportToExcel","fileData","fileName","btnName","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","TableLoading","displayCols","colsArray","push","require","addFooters","pageCount","internal","getNumberOfPages","setFont","setFontSize","setPage","text","String","width","align","generatePDF","reportSettings","callBack","orientation","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","institute","lines","splitTextToSize","subject","pdfInMM","subjectTitle","getTextWidth","addPage","period","autoTable","html","startY","margin","horizontal","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","doneBy","Date","save","returnPromise","then","isPlansActive","today","activePlans","plan","startDate","start_date","endDate","end_date","getTime","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","selectedPlan","setSelectedPlan","setSearch","allSession","chooseAll","currentSelected","setSelectSession","searchData","session_plan_name","itm","type_title","ViewRequirements","requirements","colSpan","subcategory_title","field_id","field_title","subcategory_required","required","getFailedExam","allData","allCourses","forEach","total_marks","course_id","sheet_id","FC_ApplicationPositionDistinctCategory","thisPosition","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","req","thisRequirements","thisCategory","thisSubCategory","thisField","position_requirement","category_subcategory_data_id","category_title","subcategory_id","includes","school_level_id","school_level_name","education_institute_id","education_category_title","course_code","NoResultThemes","Dark","isActivationAllowed","thisPlans","getPlanTypeByKey","allPlanTypes","viewThisSession","thisPlan","planEndDate","planStartDate","CLOSED","SessionDetails","handlePlanActivation","session","newState","window","confirm","newData","updatedAt","prototype","hasOwnProperty","call","type_id","allowed_claim_level","history","setViewThisSession","filterClaimsByClaimType","claimList","setSelectedClaimType","getAllClaims","loadingClaimTypes","setLoadingClaimTypes","claimTypes","countClaims","allClaims","Fragment","loadingClaims","selectedClaimType","ClaimHeaderTitle","isLoading","loadingSession","periodChanged","headerTitle","sessions","application_sessions","selectPeriod","setThisPeriod","setLoadingSession","onPeriodChange","getRejectedApplicants","applicationData","objList","product","flag","prop","DocumentTitleData","documentData","documentTemp","company","end_year","names","phone_number","school_id","start_year","year","doc_title","getRejectedDocuments","rejected","ClaimTypesEnum","setViewPosition","viewPosition","NoResult","questionTypes","loadQuestionTypes","getAnswersByQuestion","question_id","thisExamSheet","user_answers","thisExam","findQuestionType","questionTypeElementsType","MultipleChoice","SingleMultiple","TrueFalse","indexAnswer","user_marks","SimpleCalculate","Matching","ShortAnswer","Numeric","CalculatedMultipleChoice","userDetails","district_id","district_name","loadingRejectedApplications","setLoadingRejectedApplications","loadingRejectedDocuments","setLoadingRejectedDocuments","COMPLETED","document_id","whichClaimType","application","exam","marks_publication","placement","whichClaimStatus","classes","getClaimById","claim_id","displayDocClaimTitle","displayClaimTitle","allCourse","thisAnswer","Index","setViewClaim","viewClaim","setPeriodChanged","setClaimForm","claimForm","setClaimId","claimId","loadClaims","setSession","isDeleteAllowed","thisCLaim","Light","ClaimApplView","ClaimExamView","CandidateClaim","allSessionPlans","viewTabs","FC_AdminApplicationPositionDistinctCategory","subcategory","evaluateClaim","reAssessApplication","actionTaken","setActionTaken","responseMsg","setResponseMsg","profile","selectedTab","setSelectedTab","handleVerify","subClaim","api_body","sub_claim_id","evaluated_by","evaluate_claim_res","ACCEPTED","overrideDecision","getReasonById","reason_id","patch","Shortlisted","getPositionById","position_id","systemPositions","FC_DocValidation","APPROVED","in_education","disability","api_redux","date","FC_shortListing","candidate_id","details","adminDisplayClaimTitle","commet","marks","setMarks","Loading","handleMarksAddition","DO_EXAM","sex","AdminClaimGetDocTitle","allApplications","setLoadingData","loadingData","setClaimType","setCandidateId","candidateId","setDefaultSession","loadsAllClaims","loadsApplications","loadsAlAnswers","getAllApplications","allAnswer","getAllAnswers","thisDocs","AdminFilterByType","ClaimTypesInterface","DOCUMENT","AdminClaim","system_settings","reportClaimType","defaultReportContent","claimReportContentKeyInterface","national_id","gender","phone","claim_session","education_category","decision","claim_title","ClaimingReport","schoolLevels","loadEducationCategories","thisLevel","setThisLevel","loadingPosition","setLoadingPosition","loadingApplications","setLoadingApplications","setLoadingClaims","loadingCourses","setLoadingCourses","loadingDocuments","setLoadingDocuments","loadingInstitutes","setLoadingInstitutes","loadingClarifications","setLoadingClarifications","loadingFields","setLoadingFields","downloading","setDownloading","claimToPrint","setClaimToPrint","sortProperty","setSortProperty","isSorted","setIsSorted","sortOrder","setSortOrder","generateReportModal","setGenerateReportModal","reportTitle","setReportTitle","reportContent","setReportContent","selectAll","setSelectAll","setSelectPeriod","thisEducation","setThisEducation","education_categories","getClaimInstitute","setSort","thisProperty","updateClaimToPrint","arrayNew","n","keyClaim","dataArray","n_id","FC_ClaimData","isChangeAllowed","FC_FilterClaims","claimLevel","output","PlansKey","ClaimTypes","selectedType","currentType","levels","ClaimLevels","reportType","querySelectorAll","FC_GeneratePDF","sortThisArray","findIndex","isSelectAllNeeded","updateReportContent","currentState","resetReportContent"],"mappings":"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","file":"static/js/25.cbd0c731.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = (props) => {\n  const startPage = 1;\n  const tableId =\n    !props.tableId || props.tableId === \"myTable\" ? FC_makeID() : props.tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    props.pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId!)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < props.columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${props.tableSize} overflow-x-auto`}>\n      {/* search box  */}\n      {props.search && (\n        <div className={`${props.searchBG} w-full mb-2`}>\n          {props.search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={props.loading}\n              />\n\n              {props.pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={props.loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"overflow-x-auto w-full\">\n        <table\n          className={\n            props.tableClass\n              ? props.tableClass\n              : `w-full shadow ${\n                  props.rounded && \"sm:rounded-lg\"\n                } table-auto order-table`\n          }\n          id={tableId}\n        >\n          {!props.hideColumns && (\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n              <tr\n                className={`text-left tracking-wide bg-${props.thColor}-100 border-b-2 border-${props.thColor}-500 text-${props.thColor}-600`}\n              >\n                {props.columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className={`${column.padding} text-${\n                      column.alignText\n                    } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                    onClick={() =>\n                      column.isSortAllowed && sortThisColumn(tableId, index)\n                    }\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      {column.columnTitle}\n                      {column.isSortAllowed && <BiSort />}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n            {props.rows()}\n          </tbody>\n        </table>\n        {props.pagination && (\n          <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n            <div>\n              <span className=\"text-xs xs:text-sm text-gray-900\">\n                Showing 1 to {pageSize} of {totalItems - 1} Entries\n              </span>\n            </div>\n            <div>\n              <nav className=\"inline-flex shadow-sm\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                      currentPage !== 1 && \"bg-white\"\n                    }`}\n                    aria-label=\"Previous\"\n                    disabled={currentPage === 1 || props.loading}\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                  >\n                    <MdNavigateBefore className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <div>\n                  {pages &&\n                    pages.map((page, pageIndex) => (\n                      <button\n                        key={pageIndex}\n                        className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                          page !== currentPage\n                            ? \"bg-white\"\n                            : \"bg-gray-100 cursor-default\"\n                        }`}\n                        disabled={page === currentPage || props.loading}\n                        onClick={() => setCurrentPage(page)}\n                      >\n                        {page}\n                      </button>\n                    ))}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                      currentPage !== totalPages && \"bg-white\"\n                    }`}\n                    aria-label=\"Next\"\n                    disabled={currentPage === totalPages || props.loading}\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                  >\n                    <MdNavigateNext className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PlansTypeInterface, SessionPlanInterface } from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  CandidatesInterface,\n  DocumentCategoryInterface,\n  DocumentFieldsInterface,\n  DocumentSubCategoryInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { VerifyDocumentInterface } from \"./users\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CATEGORY\nexport interface GetDocumentCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface[];\n}\n\nexport interface CreateDocumentCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface UpdateDocumentCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface DeleteDocumentCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_CATEGORY;\n  payload: string;\n}\n\n// SUB CATEGORY\nexport interface GetDocumentSubCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface[];\n}\n\nexport interface CreateDocumentSubCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface UpdateDocumentSubCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface DeleteDocumentSubCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY;\n  payload: string;\n}\n\n// FIELDS\nexport interface GetDocumentFieldsAction {\n  type: ActionTypes.GET_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface[];\n}\n\nexport interface CreateDocumentFieldsAction {\n  type: ActionTypes.CREATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface UpdateDocumentFieldsAction {\n  type: ActionTypes.UPDATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface DeleteDocumentFieldsAction {\n  type: ActionTypes.DELETE_DOCUMENT_FIELDS;\n  payload: string;\n}\n\n// DOCUMENT CHECKING\nexport interface GetCandidatesInInstituteAtion {\n  type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE;\n  payload: CandidatesInterface[];\n}\n\nexport interface VerifyDocumentAction {\n  type: ActionTypes.VERIFY_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type DocumentCategoryActionType =\n  | GetDocumentCategoryAction\n  | CreateDocumentCategoryAction\n  | UpdateDocumentCategoryAction\n  | DeleteDocumentCategoryAction\n  | GetDocumentSubCategoryAction\n  | CreateDocumentSubCategoryAction\n  | UpdateDocumentSubCategoryAction\n  | DeleteDocumentSubCategoryAction\n  | GetDocumentFieldsAction\n  | CreateDocumentFieldsAction\n  | UpdateDocumentFieldsAction\n  | DeleteDocumentFieldsAction\n  | GetCandidatesInInstituteAtion\n  | VerifyDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CATEGORY\n\nexport const getDocumentCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get(`${API.AUTH}/detailcategory`);\n      console.log({ docCategory: res });\n      dispatch<GetDocumentCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_CATEGORY,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n    }\n  };\n};\n\nexport const createDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// SUB CATEGORY\nexport const getDocumentSubCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentSubCategoryInterface[]>(\n        `${API.AUTH}/detailsubcategory`\n      );\n      console.log({ docSubCategory: res });\n      dispatch<GetDocumentSubCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentSubCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentSubCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentSubCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentSubCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// FIELDS\nexport const getDocumentFields = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentFieldsInterface[]>(\n        `${API.AUTH}/categorysubcatedata`\n      );\n      console.log({ docFields: res });\n      dispatch<GetDocumentFieldsAction>({\n        type: ActionTypes.GET_DOCUMENT_FIELDS,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentFields = (data: DocumentFieldsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentFieldsAction>({\n      type: ActionTypes.CREATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentFields = (data: DocumentFieldsInterface) => {\n  console.log({ reducer: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentFieldsAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentFields = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentFieldsAction>({\n      type: ActionTypes.DELETE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\n// CANDIDATE IN EDUCATION CATEGORY\nexport const getCandidatesInInstitute = (\n  educatin_type_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\", null);\n    try {\n      setAxiosToken();\n      const res = await axios.get<CandidatesInterface[]>(\n        `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}/${session_id}`\n      );\n      const newArray: CandidatesInterface[] = res.data.filter((element) => {\n        return element !== null && element !== undefined;\n      });\n      console.log(\"====================================\");\n      console.log({ getCandidatesInInstitute: res, newArray });\n      console.log(\"====================================\");\n      dispatch<GetCandidatesInInstituteAtion>({\n        type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE,\n        payload: newArray,\n        // payload: response.data,\n      });\n      callback(false, \"\", newArray);\n    } catch (error) {\n      console.log({ getCandidatesInInstitute: error });\n      callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const verifyDocument = (data: VerifyDocumentInterface) => {\n  console.log({ action_verify: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyDocumentAction>({\n      type: ActionTypes.VERIFY_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${API.AUTH}/allroleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import React from \"react\";\nimport { MdInfoOutline } from \"react-icons/md\";\n\nconst NoSession = () => {\n  return (\n    <div className=\"my-5\">\n      <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n        <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n        <div className=\"text-center flex flex-col\">\n          <span className=\"text-2xl md:text-4xl font-extrabold\">\n            No session available\n          </span>\n          <span className=\"text-lg\">\n            Please Wait for the system to publish the sessions or contact the\n            administrator\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoSession;\n","import React, { Component } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { claimReasonInterface } from \"../../../interfaces\";\nimport search from \"../../../utils/search\";\n\nexport const claimReasonsData = [\n  { key: 1, reason: \"Not placed (Sinahawe umwanya)\" },\n  {\n    key: 2,\n    reason:\n      \"Not placed with higher marks (Sinahawe umwanya kandi hari abo ndusha twakoze bimwe bawuhawe)\",\n  },\n  {\n    key: 3,\n    reason:\n      \"Want to change district of placement (Nifuza guhindurirwa akarere nahawemo umwanya)\",\n  },\n  {\n    key: 4,\n    reason: \"Rejected offer by mistake (Nibeshye nanga umwanya nahawe)\",\n  },\n  {\n    key: 0,\n    reason: \"None of the above (nta na kimwe muri ibyo byavuzwe haruguru)\",\n  },\n];\n\ntype ChooseReasonProps = {\n  claimReason: claimReasonInterface | null;\n  setClaimReason: (value: claimReasonInterface | null) => void;\n  setChooseClaimReason: (value: boolean) => void;\n  allClaimReasons: claimReasonInterface[];\n};\n\ntype ChooseReasonState = {\n  searchInput: string;\n};\n\nclass ChooseReason extends Component<ChooseReasonProps, ChooseReasonState> {\n  constructor(props: ChooseReasonProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* SEARCH PART */}\n        <div className=\"flex items-center w-full my-1\">\n          <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            value={this.state.searchInput}\n          />\n          <button\n            className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n            type=\"button\"\n            onClick={() => this.props.setChooseClaimReason(false)}\n          >\n            Cancel\n          </button>\n        </div>\n        {/* END SEARCH PART ///////////////// */}\n\n        <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n          {search(this.props.allClaimReasons, this.state.searchInput).map(\n            (item: claimReasonInterface, index) => (\n              <section key={index.toString() + item.id}>\n                <div\n                  className={`my-1 py-1 w-full px-2 hover:bg-gray-100 cursor-pointer ${\n                    this.props.claimReason &&\n                    this.props.claimReason.id === item.id &&\n                    \"border-l-2 border-blue-600\"\n                  }`}\n                  onClick={() => {\n                    this.props.setChooseClaimReason(false);\n                    this.props.setClaimReason(item);\n                  }}\n                >\n                  <p className=\"text-base text-black\">{item.reason}</p>\n                </div>\n              </section>\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChooseReason;\n","import React from \"react\";\nimport {\n  claimApplicationsPositionInterface,\n  ClaimExamResultsDetails,\n  QuestionLanguage,\n} from \"../../../interfaces\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\ntype ExaminationFormViewProps = {\n  thisAnswerSheet: ClaimExamResultsDetails;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n};\n\nconst ExaminationFormView: React.FC<ExaminationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisAnswerSheet.course}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisAnswerSheet.answer_sheet_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisAnswerSheet.createdAt)}\n            </span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">Questions</div>\n          {props.thisAnswerSheet.questions.map((item, index) => (\n            <div\n              key={index + item.id}\n              className=\"rounded border my-1 p-1 divide-y\"\n            >\n              <div className=\"flex flex-col gap-1 text-base text-gray-600\">\n                <span className={`font-semibold`}>\n                  {item.question.find(\n                    (q) => q.language === QuestionLanguage.Eng\n                  )\n                    ? item.question.find(\n                        (q) => q.language === QuestionLanguage.Eng\n                      )!.title\n                    : item.question[0].title}\n                  :\n                </span>\n                <span className=\"\">\n                  {item.question.find(\n                    (q) => q.language === QuestionLanguage.Eng\n                  )\n                    ? item.question.find(\n                        (q) => q.language === QuestionLanguage.Eng\n                      )!.description\n                    : item.question[0].description}\n                </span>\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-medium\">Right answer</span>\n                  <span className=\"\">\n                    {item.question.find(\n                      (q) => q.language === QuestionLanguage.Eng\n                    )\n                      ? item.question.find(\n                          (q) => q.language === QuestionLanguage.Eng\n                        )!.description\n                      : item.question[0].answer}\n                  </span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ExaminationFormView;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormPlacementListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  myPlacement: candidatePlacementInterface | null;\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n\n  // REDUX //////////////////////\n};\n\nconst FormPlacementList: React.FC<FormPlacementListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            props.myPlacement === null ||\n            isClaimAllowed(\n              props.myClaims,\n              props.activeSession.session_plan_id,\n              props.myPlacement.placed._id\n            )\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.myPlacement ? (\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            props.myPlacement.placed._id\n          ) && (\n            <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(props.myPlacement!.placed._id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  Placed on {props.myPlacement.placed.school.school_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(props.myPlacement!.placed._id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          )\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No placement to claim on!\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\n// const mapStateToProps = ({\n//   course,\n// }: StoreState): {\n//   courses: course[] | null;\n// } => {\n//   return {\n//     courses: course.courses,\n//   };\n// };\nexport default connect(null, {})(FormPlacementList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { getActiveSessionPlan } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  course,\n  PlansInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { isPlanActive } from \"../../SessionSettings/SessionDetails\";\nimport ApplicationFormView from \"./ApplicationFormView\";\nimport ChooseReason from \"./ChooseReason\";\nimport DocFormView from \"./DocFormView\";\nimport ExaminationFormView from \"./ExaminationFormView\";\nimport FormApplicationList from \"./FormApplicationList\";\nimport FormDocumentList from \"./FormDocumentList\";\nimport FormExamList, {\n  getCourseById,\n  getCourseIdBySheetId,\n} from \"./FormExamList\";\nimport FormPlacementList from \"./FormPlacementList\";\n\nexport const ClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: DocumentClaimUser\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data &&\n    doc.category_subcategory_data.category_subcategory_Data_id.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    console.log({ doc });\n    DocField = documentCategories.documentFields.filter(\n      (c) =>\n        c._id === doc.category_subcategory_data?.category_subcategory_Data_id\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const isClaimAllowed = (\n  allClaim: CandidateClaimInterface[],\n  period_id: string,\n  claimOnId: string\n): boolean => {\n  if (\n    allClaim.find(\n      (item) =>\n        item.period_id === period_id && item.claiming_on_id === claimOnId\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\ntype ClaimFormProps = {\n  // FOR SHORTCUT BUTTONS CALL\n  claim_type?: PlansTypeKeys;\n  file_id?: string;\n  // REQUIRED PROPS\n  formState: boolean;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getMyPlacement: Function;\n  getClaimReasons: Function;\n  getActiveSessionPlan: Function;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  chooseClaimReason: boolean;\n  claimReason: claimReasonInterface | null;\n  myPlacement: candidatePlacementInterface | null;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n  activeSession: SessionPlanInterface | null;\n};\n\nclass ClaimForm extends Component<ClaimFormProps, ClaimFormState> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      activeSession: null,\n      myPlacement: this.props.claiming.myPlacement,\n      chooseClaimReason: false,\n      claimReason: null,\n    };\n  }\n\n  isDocumentIdValid = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let doc = documents.find((item) => item.doc_id === doc_id);\n    if (doc) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (doc.validated_by.validation_status !== \"rejected\") {\n        return {\n          status: false,\n          msg: \"Only rejected document are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.state.activeSession &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.state.activeSession.session_plan_id,\n          doc_id\n        )\n      ) {\n        return {\n          status: false,\n          msg: \"This document already in claiming list!\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.success };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid document id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Documents, please try again\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  isApplicationIdValid = (\n    applications: claimApplicationsInterface[],\n    app_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let app = applications.find((item) => item.application_id === app_id);\n    console.log(\"====================================\");\n    console.log({ app, app_id });\n    console.log(\"====================================\");\n    if (app) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (app.application_status !== ApplicationStates.Rejected) {\n        return {\n          status: false,\n          msg: \"Only rejected application are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.state.activeSession &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.state.activeSession.session_plan_id,\n          app.application_id\n        )\n      ) {\n        return {\n          status: false,\n          msg: \"This application already in claiming list!\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid application id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Application, please try again!\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setChooseClaimReason = (data: boolean) => {\n    this.setState({ chooseClaimReason: data });\n  };\n\n  setClaimReason = (value: claimReasonInterface | null) => {\n    this.setState({ claimReason: value });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  isClaimTypeOpen = (\n    thisSession: SessionPlanInterface,\n    thisType: PlansTypeKeys\n  ): boolean => {\n    let data: PlansInterface | undefined;\n    if (thisType === PlansTypeKeys.APPLICATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.PLACEMENT_TRANSFER) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  isClaimBtnValid = (thisSession: SessionPlanInterface) => {\n    if (this.props.file_id || this.props.claim_type) {\n      // CHECK IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n      if (!this.props.claim_type) {\n        this.props.PushPopupAlert({\n          title: \"Claim type is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.props.file_id) {\n        this.props.PushPopupAlert({\n          title: \"Claim file is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.isClaimTypeOpen(thisSession, this.props.claim_type)) {\n        // IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n        // CHECK IF CLAIM TYPE IS OPEN ================\n        this.props.PushPopupAlert({\n          title: \"Claim type is closed!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      }\n    }\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  isClaimsAllowed = (\n    thisPeriod: SessionPlanInterface\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      this.props.claiming.myClaims === null &&\n      this.props.file_id &&\n      this.props.claim_type\n    ) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string, data?: CandidateClaimInterface[]) => {\n          // !status && setLoadingClaims(status);\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data) {\n            let claim = data.find(\n              (item) =>\n                item.claiming_on_id === this.props.file_id &&\n                item.period_id === thisPeriod.session_plan_id\n            );\n            if (claim) {\n              return {\n                status: false,\n                msg: `You have already claimed on this ${this.displayClaimType(\n                  this.props.claim_type!\n                )}`,\n                alert: PopupAlertTheme.info,\n              };\n            }\n          }\n        }\n      );\n    } else if (\n      this.props.claiming.myClaims &&\n      this.props.file_id &&\n      this.props.claim_type\n    ) {\n      let claim = this.props.claiming.myClaims.find(\n        (item) =>\n          item.claiming_on_id === this.props.file_id &&\n          item.period_id === thisPeriod.session_plan_id\n      );\n      if (claim) {\n        return {\n          status: false,\n          msg: `You have already claimed on this ${this.displayClaimType(\n            this.props.claim_type!\n          )}`,\n          alert: PopupAlertTheme.info,\n        };\n      }\n    }\n\n    return {\n      status: true,\n      msg: \"\",\n      alert: PopupAlertTheme.success,\n    };\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.sessionPlan.activeSessionPlan === null ||\n      this.props.sessionPlan.activeSessionPlan === \"none\"\n    ) {\n      this.props.getActiveSessionPlan(\n        (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data === \"none\") {\n            this.props.PushPopupAlert({\n              title: \"No session active session\",\n              theme: PopupAlertTheme.danger,\n            });\n            this.props.setFormState(false);\n            this.setState({\n              claimFileId: \"\",\n              thisClaimType: null,\n              thisClaimTypeId: \"\",\n              claimComment: \"\",\n              chooseClaimFile: false,\n              formType: \"DEFAULT\",\n              viewThisFile: \"\",\n              formError: null,\n            });\n          } else if (data) {\n            let _isClaimsAllowed = this.isClaimsAllowed(data);\n            if (!_isClaimsAllowed.status) {\n              this.props.PushPopupAlert({\n                title: _isClaimsAllowed.msg,\n                theme: _isClaimsAllowed.alert,\n              });\n              this.props.setFormState(false);\n            }\n            this.setState({ activeSession: data });\n            this.loadExamAnswers(data, this.props.auth.user.user_id);\n            this.isClaimBtnValid(data);\n          }\n        }\n      );\n    } else {\n      this.setState({\n        activeSession: this.props.sessionPlan.activeSessionPlan,\n      });\n      this.isClaimBtnValid(this.props.sessionPlan.activeSessionPlan);\n      let _isClaimsAllowed = this.isClaimsAllowed(\n        this.props.sessionPlan.activeSessionPlan\n      );\n      if (!_isClaimsAllowed.status) {\n        this.props.PushPopupAlert({\n          title: _isClaimsAllowed.msg,\n          theme: _isClaimsAllowed.alert,\n        });\n        this.props.setFormState(false);\n      }\n      this.loadExamAnswers(\n        this.props.sessionPlan.activeSessionPlan,\n        this.props.auth.user.user_id\n      );\n      this.setLoading(false);\n    }\n\n    if (this.props.documentReducer.documentCategory === null) {\n      this.props.getDocumentCategory();\n    }\n    if (this.props.documentReducer.documentSubCategory === null) {\n      this.props.getDocumentSubCategory();\n    }\n    if (this.props.documentReducer.documentFields === null) {\n      this.props.getDocumentFields();\n    }\n\n    if (this.props.claiming.candidateApplications === null) {\n      this.props.getMyRejectedApplications(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string, data?: claimApplicationsInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              // PROPS VALIDATION PROCESS ###############\n              if (\n                this.props.claim_type &&\n                this.props.file_id &&\n                this.state.formType === \"DEFAULT\"\n              ) {\n                if (this.props.claim_type === PlansTypeKeys.APPLICATION) {\n                  let _isApplicationIdValid = this.isApplicationIdValid(\n                    data,\n                    this.props.file_id\n                  );\n                  if (!_isApplicationIdValid.status) {\n                    this.props.PushPopupAlert({\n                      title: _isApplicationIdValid.msg,\n                      theme: _isApplicationIdValid.alert,\n                    });\n                    this.props.setFormState(false);\n                  } else {\n                    this.setState({\n                      thisClaimType: this.props.claim_type,\n                      claimFileId: this.props.file_id,\n                      formType: \"PROPS\",\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    if (this.props.claiming.candidateDocuments === null) {\n      this.props.getMyRejectedDocuments(\n        (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              // PROPS VALIDATION PROCESS ###############\n              if (\n                this.props.claim_type &&\n                this.props.file_id &&\n                this.state.formType === \"DEFAULT\"\n              ) {\n                if (\n                  this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n                ) {\n                  let _isDocumentIdValid = this.isDocumentIdValid(\n                    data,\n                    this.props.file_id\n                  );\n                  if (!_isDocumentIdValid.status) {\n                    this.props.PushPopupAlert({\n                      title: _isDocumentIdValid.msg,\n                      theme: _isDocumentIdValid.alert,\n                    });\n                    // setAlertError(_isDocumentIdValid.msg);\n                    this.props.setFormState(false);\n                  } else {\n                    this.setState({\n                      thisClaimType: this.props.claim_type,\n                      claimFileId: this.props.file_id,\n                      formType: \"PROPS\",\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (this.props.claiming.myPlacement === null) {\n      this.props.getMyPlacement(\n        this.props.auth.user.user_id,\n        (\n          status: boolean,\n          msg: string,\n          data?: candidatePlacementInterface | null\n        ) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n          if (data) {\n            this.setState({ myPlacement: data });\n          }\n        }\n      );\n    }\n\n    // PROPS VALIDATION PROCESS ###############\n    if (\n      this.props.claim_type &&\n      this.props.file_id &&\n      this.state.formType === \"DEFAULT\"\n    ) {\n      this.setState({ thisClaimType: this.props.claim_type });\n      if (\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION &&\n        this.props.claiming.candidateDocuments\n      ) {\n        let _isDocumentIdValid = this.isDocumentIdValid(\n          this.props.claiming.candidateDocuments,\n          this.props.file_id\n        );\n        if (!_isDocumentIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isDocumentIdValid.msg,\n            theme: _isDocumentIdValid.alert,\n          });\n          // setAlertError(_isDocumentIdValid.msg);\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n      if (\n        this.props.claim_type === PlansTypeKeys.APPLICATION &&\n        this.props.claiming.candidateApplications\n      ) {\n        let _isApplicationIdValid = this.isApplicationIdValid(\n          this.props.claiming.candidateApplications,\n          this.props.file_id\n        );\n        if (!_isApplicationIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isApplicationIdValid.msg,\n            theme: _isApplicationIdValid.alert,\n          });\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getExamById = (\n    exams: ClaimExamResultsDetails[],\n    answer_sheet_id: string\n  ): ClaimExamResultsDetails | undefined => {\n    return exams.find((item) => item.answer_sheet_id === answer_sheet_id);\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  cleanToClose = (response?: boolean) => {\n    if (this.state.formType === \"PROPS\" && response) {\n      this.props.setFormState(false, response);\n    } else {\n      this.props.setFormState(false);\n    }\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  loadUserById = async (user_id: string, callback: Function) => {\n    if (isEmptyOrSpaces(user_id)) {\n      return this.props.PushPopupAlert({\n        title: \"No user id provided\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface>(\n        `${API.AUTH}/users/${user_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ loadUserById: res });\n      console.log(\"====================================\");\n      if (res) {\n        callback(res.data);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (!this.state.claimReason) {\n      return this.setFormError({\n        element: \"claim_reason\",\n        msg: `Please select the reason of your claim!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.state.activeSession) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n\n    this.setLoadingForm(true);\n    let old_evaluator_email: string = \"info@system.com\";\n    let old_evaluator_name: string = \"System\";\n    let evaluator_email: string = \"\";\n    let evaluator_name: string = \"\";\n\n    if (this.state.thisClaimType !== PlansTypeKeys.EXAMINATION) {\n      await this.loadUserById(\n        this.getValidation(this.state.claimFileId).old_evaluated_by,\n        (data: UserInterface) => {\n          old_evaluator_email = data.email;\n          old_evaluator_name =\n            data.user_info.fname + \" \" + data.user_info.lname;\n        }\n      );\n    }\n\n    try {\n      console.log(\"====================================\");\n      console.log({\n        claiming_on_id: this.state.claimFileId,\n        type_key: this.state.thisClaimType,\n        user: this.props.auth.user.user_id,\n        period_id: this.state.activeSession.session_plan_id,\n        default_claim_resaons: this.state.claimReason.id,\n        reason: this.state.claimComment,\n        old_reason:\n          this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n          this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n            ? \"System\"\n            : this.getValidation(this.state.claimFileId).old_reason,\n        old_status:\n          this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n          this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n            ? \"Failed\"\n            : this.getValidation(this.state.claimFileId).old_status,\n        old_evaluated_by:\n          this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n          this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n            ? \"\"\n            : this.getValidation(this.state.claimFileId).old_evaluated_by,\n        old_evaluator_email,\n        old_evaluator_name,\n        evaluator_email,\n        evaluator_name,\n      });\n      console.log(\"====================================\");\n\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.state.activeSession.session_plan_id,\n          default_claim_resaons: this.state.claimReason.id,\n          reason: this.state.claimComment,\n          old_reason:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"System\"\n              : this.getValidation(this.state.claimFileId).old_reason,\n          old_status:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Failed\"\n              : this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"\"\n              : this.getValidation(this.state.claimFileId).old_evaluated_by,\n          old_evaluator_email,\n          old_evaluator_name,\n          evaluator_email,\n          evaluator_name,\n        }\n      );\n      console.log({ createClaim: res.data });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose(true);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingForm(false);\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  render() {\n    if (\n      this.state.loading ||\n      this.state.activeSession === null ||\n      (this.props.claiming.myClaims === null &&\n        this.props.file_id &&\n        this.props.claim_type)\n    ) {\n      return null;\n    }\n\n    return (\n      <div className=\"pb-3\">\n        {this.props.formState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length <= 0 &&\n                this.cleanToClose();\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length > 0 &&\n                this.setViewThisFile(\"\");\n            }}\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-900 font-bold text-xl md:ml-1\">\n                {this.state.viewThisFile.length <= 0 && \"Claiming form\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType ===\n                    PlansTypeKeys.DOCUMENT_VALIDATION &&\n                  \"Viewing document\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                  \"Viewing application\"}\n              </div>\n            }\n            widthSizeClass={\n              this.state.viewThisFile.length > 0\n                ? ModalSize.extraLarge\n                : ModalSize.medium\n            }\n            padding={{ title: true, body: false, footer: false }}\n          >\n            {/* CLAIM FORM ============================================== */}\n            {this.state.viewThisFile.length <= 0 && (\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"px-6 pb-3\">\n                  {this.state.alertError && (\n                    <div\n                      className=\"alert-warning cursor-pointer\"\n                      onClick={() => this.setAlertError(null)}\n                    >\n                      {this.state.alertError}\n                    </div>\n                  )}\n                  <div className=\"text-base text-gray-700 sm:text-lg\">\n                    {/* SELECT CLAIM TYPE ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Claim type</label>\n                      <select\n                        className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                          this.state.formType === \"PROPS\" &&\n                          \"cursor-not-allowed\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_type\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                          this.selectClaimType(e.target.value);\n                          this.setClaimFileId(\"\");\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_type\" &&\n                            this.setFormError(null);\n                        }}\n                        value={\n                          this.state.thisClaimType\n                            ? this.state.thisClaimType\n                            : \"\"\n                        }\n                        disabled={\n                          this.state.loadingForm ||\n                          this.state.formType === \"PROPS\"\n                        }\n                      >\n                        <option value=\"\">Choose claim type</option>\n                        {Object.values(PlansTypeKeys).map((item, index) => (\n                          <option\n                            value={item}\n                            key={index + item}\n                            className={`${\n                              item === PlansTypeKeys.MARKS_PUBLICATION ||\n                              item === PlansTypeKeys.PLACEMENT_TRANSFER\n                                ? \"hidden\"\n                                : \"block\"\n                            }`}\n                          >\n                            {capitalizeFirstLetter(\n                              item.toLocaleLowerCase().replace(/_/g, \" \")\n                            )}\n                          </option>\n                        ))}\n                      </select>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_type\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT CLAIM TYPE ============================================== */}\n\n                    {/* SELECT FILE TO CLAIM ON ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>\n                        {this.generateChooseFileTitle(this.state.thisClaimType)}\n                      </label>\n                      <div\n                        className={`text-left bg-white border-2 ${\n                          this.state.formType !== \"PROPS\"\n                            ? \"border-gray-700\"\n                            : \"border-gray-400 text-gray-500\"\n                        } rounded w-full ${\n                          this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_file\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.state.thisClaimType &&\n                          !this.state.chooseClaimFile &&\n                          this.state.formType !== \"PROPS\"\n                            ? \"cursor-pointer\"\n                            : !this.state.chooseClaimFile &&\n                              \"cursor-not-allowed\"\n                        }`}\n                        title={\n                          !this.state.thisClaimType\n                            ? \"Choose claim type first!\"\n                            : \"\"\n                        }\n                        onClick={() => {\n                          this.state.formType === \"DEFAULT\" &&\n                            this.state.thisClaimType &&\n                            !this.state.chooseClaimFile &&\n                            this.setChooseClaimFile(true);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_file\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                        {this.state.claimFileId.length > 0 &&\n                        !this.state.chooseClaimFile ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.DOCUMENT_VALIDATION &&\n                              this.props.claiming.candidateDocuments &&\n                              ClaimGetDocTitle(\n                                this.props.documentReducer,\n                                this.getDocumentById(\n                                  this.props.claiming.candidateDocuments,\n                                  this.state.claimFileId\n                                )\n                              ).main}\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.APPLICATION &&\n                              this.props.claiming.candidateApplications &&\n                              this.getApplicationById(\n                                this.props.claiming.candidateApplications,\n                                this.state.claimFileId\n                              ).position.position_title}\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.EXAMINATION &&\n                              this.props.courses &&\n                              this.props.claiming.myAnswer &&\n                              getCourseIdBySheetId(\n                                this.props.claiming.myAnswer,\n                                this.state.claimFileId\n                              ) &&\n                              getCourseById(\n                                this.props.courses,\n                                getCourseIdBySheetId(\n                                  this.props.claiming.myAnswer,\n                                  this.state.claimFileId\n                                )!.course\n                              ) &&\n                              getCourseById(\n                                this.props.courses,\n                                getCourseIdBySheetId(\n                                  this.props.claiming.myAnswer,\n                                  this.state.claimFileId\n                                )!.course\n                              )!.course_name}\n\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.PLACEMENT_TRANSFER &&\n                              this.state.myPlacement &&\n                              !isEmptyOrSpaces(this.state.claimFileId) &&\n                              \"Placed on \" +\n                                this.state.myPlacement.placed.school\n                                  .school_name}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimFile && (\n                            <p className=\"my-1 mx-2\">\n                              Select Claim{\" \"}\n                              {this.state.thisClaimType &&\n                                this.state.thisClaimType\n                                  .toLocaleLowerCase()\n                                  .replace(/_/g, \" \")}\n                            </p>\n                          )\n                        )}\n                        {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                        {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormDocumentList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateDocuments={\n                                this.props.claiming.candidateDocuments\n                              }\n                              documentCategories={this.props.documentReducer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF REJECTED APPLICATION ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormApplicationList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateApplications={\n                                this.props.claiming.candidateApplications\n                              }\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF FAILED EXAM ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.EXAMINATION &&\n                          this.props.claiming.myAnswer &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormExamList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateAnswers={this.props.claiming.myAnswer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF FAILED EXAM ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* PENDING PLACMENT ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.PLACEMENT_TRANSFER &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormPlacementList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                              myPlacement={this.state.myPlacement}\n                            />\n                          )}\n                        {/* END LISTING OF FAILED EXAM ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_file\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                    {/* CLAIM REASONS ========================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Choose reason of your claim</label>\n                      <div\n                        className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                          this.state.chooseClaimReason ? \"h-64\" : \"h-auto\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_reason\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.props.claiming.claimReasons === null\n                            ? \"cursor-wait\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title=\"Choose the reason for your claim!\"\n                        onClick={() => {\n                          !this.state.chooseClaimReason &&\n                            this.setState({ chooseClaimReason: true });\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_reason\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING SELECTED REASON ============================ */}\n                        {this.state.claimReason &&\n                        !this.state.chooseClaimReason ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.claimReason.reason}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimReason && (\n                            <p className=\"my-1 mx-2\">Select reason</p>\n                          )\n                        )}\n                        {/* END DISPLAYING SELECTED REASON ============================ */}\n\n                        {/* LISTING OF CLAIM REASONS ============================ */}\n                        {this.state.chooseClaimReason &&\n                          this.props.claiming.claimReasons && (\n                            <ChooseReason\n                              setChooseClaimReason={this.setChooseClaimReason}\n                              setClaimReason={this.setClaimReason}\n                              claimReason={this.state.claimReason}\n                              allClaimReasons={this.props.claiming.claimReasons}\n                            />\n                          )}\n                        {/* END LISTING OF CLAIM REASONS ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_reason\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM REASONS ========================================== */}\n\n                    {/* CLAIM COMMENT ============================================== */}\n                    <div className=\"flex flex-col\">\n                      <label>Comment</label>\n                      <textarea\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_comment\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder={`Claim comment`}\n                        style={{ resize: \"none\" }}\n                        value={this.state.claimComment}\n                        onChange={(e) => {\n                          this.setClaimComment(e.target.value);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_comment\" &&\n                            this.setFormError(null);\n                        }}\n                        rows={3}\n                        disabled={this.state.loadingForm}\n                      ></textarea>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM COMMENT ============================================== */}\n                  </div>\n\n                  <div className=\"pt-3 flex justify-between\">\n                    <button\n                      onClick={() => this.cleanToClose()}\n                      className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-not-allowed\"\n                      }`}\n                      type=\"button\"\n                      disabled={this.state.loadingForm}\n                    >\n                      Exit\n                    </button>\n                    <button\n                      className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-wait\"\n                      }`}\n                      type=\"submit\"\n                      disabled={this.state.loadingForm}\n                    >\n                      {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n            {/* END CLAIM FORM ============================================== */}\n\n            {/* CLAIM DOCUMENT VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateDocuments &&\n              this.state.thisClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION && (\n                <DocFormView\n                  thisDoc={this.getDocumentById(\n                    this.props.claiming.candidateDocuments,\n                    this.state.viewThisFile\n                  )}\n                  setViewThisFile={this.setViewThisFile}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                />\n              )}\n            {/* END CLAIM DOCUMENT VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM APPLICATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateApplications &&\n              this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n                <ApplicationFormView\n                  thisApplication={this.getApplicationById(\n                    this.props.claiming.candidateApplications,\n                    this.state.viewThisFile\n                  )}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                />\n              )}\n            {/* END CLAIM APPLICATION VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM EXAMINATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.myAnswer &&\n              this.state.thisClaimType === PlansTypeKeys.EXAMINATION &&\n              this.getExamById(\n                this.props.claiming.myAnswer,\n                this.state.viewThisFile\n              ) && (\n                <ExaminationFormView\n                  thisAnswerSheet={\n                    this.getExamById(\n                      this.props.claiming.myAnswer,\n                      this.state.viewThisFile\n                    )!\n                  }\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                  // thisAnswerSheet={undefined}\n                  // setViewThisFile={undefined}\n                  // setChooseClaimFile={undefined}\n                  // setClaimFileId={undefined}\n                />\n              )}\n            {/* END CLAIM EXAMINATION VIEW ============================================== */}\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  sessionPlan,\n  course,\n}: StoreState): {\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    sessionPlan,\n    documentReducer: document,\n    claiming,\n    courses: course.courses,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getActiveSessionPlan,\n  loadCourses,\n  getMyClaims,\n  getClaimReasons,\n  getMyAnswers,\n  getMyPlacement,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(ClaimForm);\n","import {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  _id?: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active: boolean;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  in_education?: boolean;\n  disability?: boolean;\n  residence: {\n    province_id: string;\n    province_name: string;\n    district_id: string;\n    district_name: string;\n    sector_id: string;\n    sector_name: string;\n  };\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: boolean;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  _id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  _id: string;\n  center_name: string;\n  center_code: number;\n  district_id: string;\n}\n\nexport interface SectorInterface {\n  district_code: number;\n  district_id: string;\n  sector_name: string;\n  sector_code: number;\n  sector_id: string;\n}\n\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  sectors: SectorInterface[];\n  province_code: number;\n  province_id: string;\n  district_name: string;\n  district_code: number;\n  _id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_code: number;\n  _id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  requested_post_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n  school: {\n    _id: string;\n    school_name: string;\n    school_code: string;\n    province_id: string;\n    province_code: string;\n    district_id: {\n      _id: string;\n      district_name: string;\n    };\n    district_code: string;\n    sector_code: string;\n    sector_id: string;\n    school_status: string;\n    status: number;\n    createdAt: string;\n    updatedAt: string;\n  };\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  school_code: number;\n  province_id: string;\n  province_code: number;\n  district_id: string;\n  district_code: number;\n  sector_id: string;\n  sector_code: number;\n  education_category_id: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: string;\n  application_status: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  district: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface LocationSectorTableInterface {\n  province_id: string;\n  province_name: string;\n  province_code: number;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  sub_category_required: boolean;\n  required: boolean;\n  isAnyField: boolean;\n}\n\nexport interface PositionRequirementsQualificationInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  fields: DocumentFieldsInterface[];\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  userInfo: {\n    n_id: string;\n    phone_number: string;\n    email: string;\n    user_info: {\n      document_type: string;\n      issue_number: string;\n      date_of_issue: string;\n      date_of_expiry: string;\n      place_of_issue: string;\n      application_number: string;\n      fname: string;\n      lname: string;\n      father_names: string;\n      mother_names: string;\n      sex: string;\n      date_of_birth: string;\n      place_of_birth: string;\n      country_of_birth: string;\n      village_id: string;\n      village: string;\n      cell: string;\n      sector: string;\n      district: string;\n      province: string;\n      civil_status: string;\n      spouse: null;\n      status: string;\n      photo: string;\n    };\n  };\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim, DocumentClaimUser } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate, timestampToDate } from \"../../utils/functions\";\nimport { ClaimGetDocTitle } from \"./Candidate/ClaimForm\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisDoc: DocumentClaimUser;\n  // setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Title:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisDoc.validation_status === \"rejected\"\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected.session_plan_id === item.session_plan_id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected.session_plan_id ===\n                      item.session_plan_id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected.session_plan_id ===\n                            item.session_plan_id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan.session_plan_id !==\n                        item.session_plan_id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null &&\n                      selectedPlan.session_plan_id === item.session_plan_id && (\n                        <div\n                          onClick={() => setSelectedPlan(null)}\n                          className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                        >\n                          Close\n                        </div>\n                      )}\n                  </div>\n                </div>\n                {selectedPlan !== null &&\n                  selectedPlan.session_plan_id === item.session_plan_id && (\n                    <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                      <table className=\"w-full\">\n                        <thead className=\"bg-blue-50\">\n                          <tr className=\"text-left\">\n                            <th className=\"px-3 py-3\">#</th>\n                            <th>Plan</th>\n                            <th>Start date</th>\n                            <th>Ending date</th>\n                            <th>Status</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"text-sm\">\n                          {selectedPlan !== null &&\n                            selectedPlan.session_plan_id ===\n                              item.session_plan_id &&\n                            selectedPlan.plans.length > 0 &&\n                            item.plans.map((plan, i) => (\n                              <tr\n                                key={i + 1}\n                                className={`${\n                                  isPlansActive(item.plans).find(\n                                    (itm) => itm.type_key === plan.type_key\n                                  ) !== undefined\n                                    ? \"bg-blue-100 text-blue-600 font-bold\"\n                                    : \"\"\n                                } text-left border-b border-blue-50`}\n                              >\n                                <td className=\"px-3 py-1\">{i + 1}</td>\n                                <td>{plan.type_title}</td>\n                                <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                                <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                                <td>{plan.type_status}</td>\n                              </tr>\n                            ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChooseSession;\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title}</span>\n        </td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id) ? \"Any document\" : item.field_title}\n          </span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {isEmptyOrSpaces(item.field_id) ? (\n            item.subcategory_required ? (\n              <span className=\"text-yellow-800\">Required</span>\n            ) : (\n              \"Optional\"\n            )\n          ) : item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          // {\n          //   columnTitle: \"Qualification Status\",\n          //   alignText: \"left\",\n          //   padding: \"p-3\",\n          // },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default ViewRequirements;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { search } from \"../../../utils/functions\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getFailedExam = (\n  allData: ClaimExamResultsDetails[],\n  allCourses: course[]\n): ClaimExamResultsDetails[] => {\n  let result: ClaimExamResultsDetails[] = [];\n  allData.forEach((element) => {\n    if (element.total_marks <= 50) {\n      let data = element;\n      data.course_name = getCourseById(allCourses, element.course)\n        ? getCourseById(allCourses, element.course)!.course_name\n        : \"Unknown exam\";\n      result.push(data);\n    }\n  });\n\n  return result;\n};\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormExamListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateAnswers: ClaimExamResultsDetails[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n\n  // REDUX //////////////////////\n  courses: course[] | null;\n};\n\nconst FormExamList: React.FC<FormExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            !props.courses ||\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.courses &&\n        getFailedExam(props.candidateAnswers, props.courses).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.answer_sheet_id\n          )\n        ).length > 0 ? (\n          search(\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ),\n            searchInput\n          ).map((item: ClaimExamResultsDetails, index: number) => (\n            <div\n              className=\"group flex items-center justify-between my-1 hover:bg-gray-100\"\n              key={index + item.answer_sheet_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.answer_sheet_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.course_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.answer_sheet_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No failed exam available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  course,\n}: StoreState): {\n  courses: course[] | null;\n} => {\n  return {\n    courses: course.courses,\n  };\n};\nexport default connect(mapStateToProps, {})(FormExamList);\n","import React from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  claimApplicationsInterface,\n  claimApplicationsPositionInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\ntype ApplicationFormViewProps = {\n  thisApplication: claimApplicationsInterface;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  PushPopupAlert: Function;\n};\n\nconst ApplicationFormView: React.FC<ApplicationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisApplication.application_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisApplication.application_status ===\n                ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } py-1`}\n            >\n              {capitalizeFirstLetter(props.thisApplication.application_status)}\n            </span>\n          </div>\n          {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {props.thisApplication.}\n            </span>\n          </div> */}\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-semibold text-gray-900\">\n              {props.thisApplication.override_by.comment}\n            </span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Details\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisApplication.position.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisApplication.position.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !==\n                    props.thisApplication.position.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisApplication.position.requirements.length > 0 ? (\n            FC_ApplicationPositionDistinctCategory(\n              props.thisApplication.position,\n              props.documentCategories\n            ).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_ApplicationPositionDistinctCategory(\n                      props.thisApplication.position,\n                      props.documentCategories\n                    ).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default connect(null, { PushPopupAlert })(ApplicationFormView);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { updateSessionPlan } from \"../../actions/session\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport {\n  allPlanTypes,\n  PlansInterface,\n  PlansTypeInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { DATE, errorToText } from \"../../utils/functions\";\n\nexport const isActivationAllowed = (thisPlans: PlansInterface): boolean => {\n  let today: Date = new Date(),\n    end_date = new Date(thisPlans.end_date);\n  if (end_date.getTime() >= today.getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport const getPlanTypeByKey = (\n  type_key: PlansTypeKeys\n): PlansTypeInterface | undefined => {\n  return allPlanTypes.find((item) => item.type_key === type_key);\n};\n\nexport const isPlanActive = (\n  viewThisSession: SessionPlanInterface,\n  thisPlan: PlansInterface\n): \"OPEN\" | \"CLOSED\" | \"WAITING\" => {\n  if (viewThisSession.is_active) {\n    let today = new Date(),\n      planEndDate = new Date(thisPlan.end_date),\n      planStartDate = new Date(thisPlan.start_date);\n    if (\n      planEndDate.getTime() >= today.getTime() &&\n      planStartDate.getTime() <= today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"OPEN\";\n    } else if (\n      planStartDate.getTime() > today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"WAITING\";\n    }\n  }\n  return \"CLOSED\";\n};\n\ntype SessionDetailsProps = {\n  viewThisSession: SessionPlanInterface;\n  setViewThisSession: (data: SessionPlanInterface) => void;\n\n  // REDUX ----------------\n  updateSessionPlan: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype SessionDetailsState = {\n  loadingRequest: string;\n};\n\nexport class SessionDetails extends Component<\n  SessionDetailsProps,\n  SessionDetailsState\n> {\n  constructor(props: SessionDetailsProps) {\n    super(props);\n\n    this.state = {\n      loadingRequest: \"\",\n    };\n  }\n\n  handlePlanActivation = async (\n    session: SessionPlanInterface,\n    thisPlan: PlansInterface\n  ) => {\n    const newState: \"open\" | \"close\" = session.is_active ? \"close\" : \"open\";\n\n    if (!window.confirm(`Are you sure you want to ${newState} this plan?`)) {\n      return true;\n    }\n\n    if (!isActivationAllowed(thisPlan)) {\n      this.props.PushPopupAlert({\n        title: `Opening/Closing plan which has been expired is not allowed!`,\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    let newData: SessionPlanInterface = {\n      session_plan_name: session.session_plan_name,\n      period: session.period,\n      is_active: session.is_active,\n      plans: [],\n      createdAt: session.createdAt,\n      updatedAt: session.updatedAt,\n      session_plan_id: session.session_plan_id,\n    };\n    for (const key in session.plans) {\n      if (Object.prototype.hasOwnProperty.call(session.plans, key)) {\n        const element = session.plans[key];\n        if (thisPlan.type_key === element.type_key) {\n          if (thisPlan.type_status === SessionPlanTypeStatus.OPEN) {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.CLOSED,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          } else {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.OPEN,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          }\n        } else {\n          newData.plans.push(element);\n        }\n      }\n    }\n\n    console.log(\"====================================\");\n    console.log({ newData });\n    console.log(\"====================================\");\n\n    this.setState({ loadingRequest: thisPlan.type_key });\n    try {\n      const res = await axios.put<SessionPlanInterface>(\n        `${API.CLAIMING}/session/${session.session_plan_id}`,\n        newData\n      );\n      this.props.updateSessionPlan(res.data);\n      this.props.setViewThisSession(res.data);\n      this.props.PushPopupAlert({\n        title: `Session ${newState}d successfully`,\n        theme: PopupAlertTheme.info,\n      });\n      this.setState({ loadingRequest: \"\" });\n      console.log(\"updateSessionPlan: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.warning,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <table className=\"w-full bg-white shadow p-5\" id=\"session_content\">\n        <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n          <tr>\n            <td className=\"p-2\">#</td>\n            <td className=\"p-2\">Plan Type</td>\n            <td className=\"p-2\">Start Date</td>\n            <td className=\"p-2\">End date</td>\n            {this.props.viewThisSession.is_active && (\n              <td className=\"p-2\" colSpan={2}>\n                Status\n              </td>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {/* WHILE DATA FOUND ====================== */}\n          {this.props.viewThisSession.plans.map((item, index) => (\n            <tr\n              key={index + item._id}\n              className={`border-b border-gray-200 hover:bg-gray-100`}\n            >\n              <td className=\"p-2 text-left whitespace-nowrap\">{index + 1}</td>\n              <td className=\"p-2 text-left\">\n                <span className=\"text-lg\">\n                  {getPlanTypeByKey(item.type_key) &&\n                    capitalizeFirstLetter(\n                      getPlanTypeByKey(item.type_key)!.type_title\n                    )}\n                </span>\n              </td>\n              <td className=\"p-2 text-left\">{DATE(item.start_date)}</td>\n              <td className=\"p-2 text-left\">{DATE(item.end_date)}</td>\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isPlanActive(this.props.viewThisSession, item) === \"OPEN\" ? (\n                    <span className={`px-2 py-1 font-semibold text-green-700`}>\n                      Open\n                    </span>\n                  ) : isPlanActive(this.props.viewThisSession, item) ===\n                    \"WAITING\" ? (\n                    <span className={`px-2 py-1 font-semibold text-gray-700`}>\n                      Waiting\n                    </span>\n                  ) : (\n                    <span className={`px-2 py-1 font-semibold text-red-700`}>\n                      Closed\n                    </span>\n                  )}\n                </td>\n              )}\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isActivationAllowed(item) && (\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <div\n                        className={`relative ${\n                          this.state.loadingRequest.length > 0\n                            ? \"cursor-not-allowed\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title={\n                          item.type_status === SessionPlanTypeStatus.OPEN\n                            ? \"Deactivating session\"\n                            : \"Activating session\"\n                        }\n                        onClick={() =>\n                          this.state.loadingRequest.length <= 0 &&\n                          this.handlePlanActivation(\n                            this.props.viewThisSession,\n                            item\n                          )\n                        }\n                      >\n                        <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                        <span\n                          className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                            item.type_status === SessionPlanTypeStatus.CLOSED\n                              ? \"bg-red-500\"\n                              : \"bg-green-500 transform translate-x-full\"\n                          }`}\n                        ></span>\n                      </div>\n                      {this.state.loadingRequest === item.type_key && (\n                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                      )}\n                    </div>\n                  )}\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default connect(null, {\n  updateSessionPlan,\n  PushPopupAlert,\n})(SessionDetails);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  GetClaimingTypes,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\nexport const filterClaimsByClaimType = (\n  claimList: CandidateClaimInterface[],\n  claimType: PlansTypeKeys | \"all\"\n): CandidateClaimInterface[] => {\n  if (claimType === \"all\") {\n    return claimList;\n  }\n\n  return claimList.filter((item) => item.type_key === claimType);\n};\n\ntype AdminFilterByTypeProps = {\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getAllClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst AdminFilterByType: React.FC<AdminFilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n          setLoading(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n      setLoading(false);\n    }\n  }, [loadingClaimTypes, props]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.allClaims && thisType === \"all\") {\n      result = claiming.allClaims.filter(\n        (item) => item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n    if (claiming.allClaims && thisType !== \"all\") {\n      result = claiming.allClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && props.claiming.claimTypes && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default connect(mapStateToProps, {\n  GetClaimingTypes,\n  setSelectedClaimType,\n  getAllClaims,\n  PushPopupAlert,\n})(AdminFilterByType);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { SessionPlanInterface } from \"../../interfaces\";\n\ntype ClaimHeaderTitleProps = {\n  headerTitle: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  setThisPeriod: (state: SessionPlanInterface | null) => void;\n  setLoadingSession: (state: boolean) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst selectPeriod = (\n  sessions: SessionPlanInterface[],\n  period_id: string,\n  setThisPeriod: (state: SessionPlanInterface | null) => void\n) => {\n  setThisPeriod(\n    sessions.filter((item) => item.session_plan_id === period_id)[0]\n  );\n};\n\nconst ClaimHeaderTitle: React.FC<ClaimHeaderTitleProps> = (props) => {\n  const isLoading = (): boolean => {\n    if (props.loading || props.loadingSession || props.periodChanged) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.headerTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              isLoading() ? \"cursor-wait\" : \"cursor-default\"\n            }`}\n            value={props.thisPeriod ? props.thisPeriod.session_plan_id : \"\"}\n            disabled={isLoading()}\n            onChange={(e) => {\n              selectPeriod(\n                props.application_sessions,\n                e.target.value,\n                props.setThisPeriod\n              );\n              props.setLoadingSession(true);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option\n                key={session.session_plan_id + item}\n                value={session.session_plan_id}\n              >\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default ClaimHeaderTitle;\n","import React from \"react\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { ClaimGetDocTitle } from \"./ClaimForm\";\n\ntype DocFormViewProps = {\n  thisDoc: DocumentClaimUser;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n};\n\nconst DocFormView: React.FC<DocFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-xl\">\n              {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisDoc.doc_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              ################\n              {/* {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )} */}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n          <div className=\"w-full my-1\">\n            <img\n              src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n              alt=\"doc file\"\n              className={`w-full`}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default DocFormView;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getRejectedApplicants = (\n  applicationData: claimApplicationsInterface[]\n): claimApplicationsInterface[] => {\n  return applicationData.filter(\n    (item) => item.application_status === ApplicationStates.Rejected\n  );\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormApplicationListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateApplications: claimApplicationsInterface[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n};\n\nconst FormApplicationList: React.FC<FormApplicationListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateApplications, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {getRejectedApplicants(props.candidateApplications).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.application_id\n          )\n        ).length > 0 ? (\n          searchApplication(\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ),\n            searchInput\n          ).map((item, index) => (\n            <div\n              className=\"group flex items-center justify-between my-1 hover:bg-gray-100\"\n              key={index + item.application_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.application_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.position.position_title}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.application_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormApplicationList;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { ClaimGetDocTitle, isClaimAllowed } from \"./ClaimForm\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { CategorySubcategoryData } from \"../../../interfaces/candidatesInterfaces\";\nimport {\n  CandidateClaimInterface,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\n\nexport interface DocumentTitleInterface {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  doc_title: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport const DocumentTitleData = (\n  documentData: DocumentClaimUser[],\n  documentCategories: DocumentReducerInterface\n): DocumentTitleInterface[] | [] => {\n  let documentTemp: DocumentTitleInterface[] = [];\n  for (let i in documentData) {\n    documentTemp.push({\n      category_id: documentData[i].category_id,\n      company: documentData[i].company,\n      description: documentData[i].description,\n      email: documentData[i].email,\n      end_year: documentData[i].end_year,\n      files: documentData[i].files,\n      names: documentData[i].names,\n      phone_number: documentData[i].phone_number,\n      school: documentData[i].school,\n      school_id: documentData[i].school_id,\n      start_year: documentData[i].start_year,\n      sub_category_id: documentData[i].sub_category_id,\n      title: documentData[i].title,\n      year: documentData[i].year,\n      validation_status: documentData[i].validation_status,\n      validated_by: documentData[i].validated_by,\n      doc_id: documentData[i].doc_id,\n      doc_title: ClaimGetDocTitle(documentCategories, documentData[i]).main,\n      category_subcategory_data: documentData[i].category_subcategory_data,\n    });\n  }\n  return documentTemp;\n};\n\nconst getRejectedDocuments = (\n  documentData: DocumentClaimUser[]\n): DocumentClaimUser[] => {\n  console.log({\n    rejected: documentData.filter(\n      (item) => item.validation_status === \"rejected\"\n    ),\n  });\n  return documentData.filter((item) => item.validation_status === \"rejected\");\n};\n\nexport const searchDocuments = (\n  objList: DocumentTitleInterface[],\n  text: any\n): DocumentTitleInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter(\n    (product) =>\n      product.doc_title.toString().toLowerCase().indexOf(text.toLowerCase()) >\n      -1\n  );\n};\n\ntype FormDocumentListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateDocuments: DocumentClaimUser[];\n  documentCategories: DocumentReducerInterface;\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n};\n\nconst FormDocumentList: React.FC<FormDocumentListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.candidateDocuments.filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.doc_id\n          )\n        ).length > 0 ? (\n          searchDocuments(\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ),\n            searchInput\n          ).map((doc, index) => (\n            <section key={index + doc.doc_id}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseClaimFile(false);\n                    props.setClaimFileId(doc.doc_id);\n                  }}\n                >\n                  <p className=\"text-base font-medium text-black\">\n                    {ClaimGetDocTitle(props.documentCategories, doc).main}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => {\n                    props.viewThisFile === doc.doc_id\n                      ? props.setViewThisFile(\"\")\n                      : props.setViewThisFile(doc.doc_id);\n                  }}\n                >\n                  {props.viewThisFile === doc.doc_id ? \"Close\" : \"View\"}\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormDocumentList;\n","import React, { Component } from \"react\";\nimport { MdAdd, MdArrowBack, MdDelete, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  DocumentClaimUser,\n  getMyClaims,\n  getMyPlacement,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { filterClaimsByClaimType } from \"../Admin/AdminFilterByType\";\nimport ClaimApplView from \"../ClaimApplView\";\nimport ClaimDocView, { isClaimEvaluated } from \"../ClaimDocView\";\nimport ClaimExamView from \"../ClaimExamView\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport ClaimPlacementView from \"../ClaimPlacementView\";\nimport ClaimForm, { ClaimGetDocTitle } from \"./ClaimForm\";\nimport FilterByType from \"./FilterByType\";\nimport { getCourseById, getCourseIdBySheetId } from \"./FormExamList\";\n\nexport enum ClaimTypesEnum {\n  application = \"application\",\n  document = \"document\",\n  exam = \"exam\",\n  marks_publication = \"marks publication\",\n  placement = \"placement\",\n}\n\nexport const getDocumentById = (\n  candidateDocuments: DocumentClaimUser[],\n  document_id: string\n): DocumentClaimUser | null => {\n  let result: DocumentClaimUser | undefined = candidateDocuments.find(\n    (item) => item.doc_id === document_id\n  );\n  return result ? result : null;\n};\n\nexport const whichClaimType = (\n  thisClaim: CandidateClaimInterface\n): ClaimTypesEnum | undefined => {\n  if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n    return ClaimTypesEnum.application;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    return ClaimTypesEnum.document;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.EXAMINATION) {\n    return ClaimTypesEnum.exam;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.MARKS_PUBLICATION) {\n    return ClaimTypesEnum.marks_publication;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    return ClaimTypesEnum.placement;\n  }\n};\n\nexport const whichClaimStatus = (\n  thisClaim: CandidateClaimInterface\n): {\n  classes: string;\n  status: string;\n} => {\n  let classes: string, status: string;\n  switch (thisClaim.last_claim_status) {\n    case ClaimStatus.COMPLETED:\n      classes = \"text-blue-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.COMPLETED.toLocaleLowerCase());\n      break;\n    case ClaimStatus.EVALUATED:\n      classes = \"text-green-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.EVALUATED.toLocaleLowerCase());\n      break;\n\n    case ClaimStatus.DELETED:\n      classes = \"text-red-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.DELETED.toLocaleLowerCase());\n      break;\n\n    default:\n      classes = \"text-yellow-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.PENDING.toLocaleLowerCase());\n      break;\n  }\n\n  return { classes, status };\n};\n\nexport const getClaimById = (\n  claimList: CandidateClaimInterface[],\n  claim_id: string\n): CandidateClaimInterface | null => {\n  let result: CandidateClaimInterface | undefined = claimList.find(\n    (item) => item._id === claim_id\n  );\n  return result ? result : null;\n};\n\nexport const getApplicationById = (\n  candidateApplications: claimApplicationsInterface[],\n  application_id: string\n): claimApplicationsInterface | null => {\n  let result: claimApplicationsInterface | undefined =\n    candidateApplications.find(\n      (item) => item.application_id === application_id\n    );\n  return result ? result : null;\n};\n\nexport const displayDocClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: DocumentClaimUser[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = getDocumentById(candidateDocuments, thisClaim.claiming_on_id);\n    result = thisDoc\n      ? ClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  return result;\n};\n\nexport const displayClaimTitle = (\n  claiming: ClaimingReducerType,\n  documentReducer: DocumentReducerInterface,\n  allCourse: course[] | null,\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = thisClaim.claiming_on_id;\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n    claiming.candidateDocuments\n  ) {\n    result = displayDocClaimTitle(\n      documentReducer,\n      claiming.candidateDocuments,\n      thisClaim\n    );\n  }\n  if (\n    thisClaim.type_key === PlansTypeKeys.APPLICATION &&\n    claiming.candidateApplications\n  ) {\n    let thisApplication = getApplicationById(\n      claiming.candidateApplications,\n      thisClaim.claiming_on_id\n    );\n    if (thisApplication) {\n      result = thisApplication.position.position_title;\n    } else {\n      result = \"Application not found\";\n    }\n  }\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n    allCourse &&\n    claiming.myAnswer\n  ) {\n    let thisAnswer = getCourseIdBySheetId(\n      claiming.myAnswer,\n      thisClaim.claiming_on_id\n    );\n    if (thisAnswer && getCourseById(allCourse, thisAnswer.course)) {\n      result = getCourseById(allCourse, thisAnswer.course)!.course_name;\n    } else {\n      result = \"Exam not found\";\n    }\n  }\n\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    result = claiming.myPlacement\n      ? \"Placed on \" + claiming.myPlacement.placed.school.school_name\n      : \"Placement not found\";\n  }\n\n  return result;\n};\n\n// -------------------------------------------------------------------------\n\ntype AppProps = {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  courses: course[] | null;\n  documentReducer: DocumentReducerInterface;\n  getMyPlacement: Function;\n  getMyClaims: Function;\n  loadCourses: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingSession: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  periodChanged: boolean;\n  viewClaim: boolean;\n  claimId: string | null;\n  claimForm: boolean;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  reClaiming: boolean;\n  reClaimingMsg: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingSession: true,\n      thisPeriod: null,\n      periodChanged: false,\n      viewClaim: false,\n      claimId: null,\n      claimForm: false,\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      reClaiming: false,\n      reClaimingMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingSession = (value: boolean) => {\n    this.setState({ loadingSession: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setClaimForm = (value: boolean) => {\n    this.setState({ claimForm: value });\n  };\n\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setReClaiming = (value: boolean) => {\n    this.setState({ reClaiming: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setReClaimingMsg = (value: string) => {\n    this.setState({ reClaimingMsg: value });\n  };\n\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  loadClaims = (thisPeriod: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.myClaims === null && thisPeriod !== null) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && this.setLoading(status);\n          if (status === false && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && this.state.loading) {\n      this.setLoading(false);\n    }\n  };\n\n  setSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null && sessions.length > 0) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadClaims(thisSession ? thisSession : sessions[0]);\n    }\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          if (!status) {\n            this.setLoadingSession(false);\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              // SETTING ACTIVE SESSION ==========================\n              if (this.state.thisPeriod === null) {\n                this.setSession(data);\n              }\n            }\n          }\n        }\n      );\n    } else {\n      this.setSession(this.props.application_sessions);\n      this.setLoadingSession(false);\n    }\n\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n    if (!this.props.documentReducer.documentSubCategory && this.state.loading) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (!this.props.documentReducer.documentFields && this.state.loading) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.myPlacement === null) {\n      this.props.getMyPlacement(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        }\n      );\n    }\n  };\n\n  isDeleteAllowed = (thisCLaim: CandidateClaimInterface): boolean => {\n    if (!isClaimEvaluated(thisCLaim, 1)) {\n      return true;\n    }\n    return false;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getMyClaims(\n      this.props.auth.user.user_id,\n      period_id,\n      (status: boolean, msg: string) => {\n        this.setLoadingRequest(status);\n        !status && this.setPeriodChanged(false);\n        if (status === false && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.myClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            <button\n              className=\"btn mb-3 border-2 border-blue-500 hover:bg-blue-500 hover:text-white flex items-center flex-1 font-bold w-full focus:outline-none\"\n              onClick={() => this.setClaimForm(true)}\n              disabled={\n                this.state.viewClaim ||\n                this.state.loading ||\n                this.state.loadingRequest\n              }\n            >\n              <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n              <span>Claiming</span>\n            </button>\n\n            {/* FILTER SECTION */}\n            <FilterByType loadingClaims={this.state.loadingRequest} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* ------------------------------------------------------------------- */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loading}\n            loadingSession={this.state.loadingSession}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingSession}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td className=\"px-2 py-2\">Claim title</td>\n                  {this.props.claiming.selectedClaimType === \"all\" && (\n                    <td className=\"px-2 py-2\">Claim type</td>\n                  )}\n                  <td className=\"px-2 py-2\">Claim status</td>\n                  <td className=\"px-2 py-2\"></td>\n                </tr>\n              </thead>\n              <tbody>\n                {filterClaimsByClaimType(\n                  this.props.claiming.myClaims,\n                  this.props.claiming.selectedClaimType\n                ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={4}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"No claim found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : (\n                  filterClaimsByClaimType(\n                    this.props.claiming.myClaims,\n                    this.props.claiming.selectedClaimType\n                  ).map((claim, index) => (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={index + claim._id}\n                      onClick={() => {\n                        this.setViewClaim(true);\n                        this.setClaimId(claim._id);\n                      }}\n                    >\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {index + 1}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {displayClaimTitle(\n                          this.props.claiming,\n                          this.props.documentReducer,\n                          this.props.courses,\n                          claim\n                        )}\n                      </td>\n                      {this.props.claiming.selectedClaimType === \"all\" && (\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {whichClaimType(claim)\n                            ? capitalizeFirstLetter(whichClaimType(claim)!)\n                            : \"-\"}\n                        </td>\n                      )}\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        <span\n                          className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                            whichClaimStatus(claim).classes\n                          }`}\n                        >\n                          {whichClaimStatus(claim).status}\n                        </span>\n                      </td>\n                      <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                        <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                          View\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </section>\n        )}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {this.state.viewClaim &&\n          this.props.claiming.myClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.myClaims, this.state.claimId) && (\n            <section className=\"bg-white w-full p-1 my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(false);\n                    this.setLoadingRequest(false);\n                    this.setFormError(null);\n                    this.setReClaiming(false);\n                    this.setReClaimingMsg(\"\");\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                {this.isDeleteAllowed(\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!\n                ) && (\n                  <button\n                    className={`bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                      this.state.loadingRequest\n                        ? \"cursor-not-allowed\"\n                        : \"cursor-pointer\"\n                    } animate__animated animate__fadeIn hidden`}\n                    disabled={this.state.loadingRequest}\n                    // onClick={() => {\n                    //   this.handleDelete();\n                    // }}\n                  >\n                    <MdDelete className=\"w-7 h-7\" />\n                  </button>\n                )}\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n\n              <section className=\"my-2\">\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n                this.props.claiming.candidateDocuments &&\n                getDocumentById(\n                  this.props.claiming.candidateDocuments,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimDocView\n                    thisDoc={\n                      getDocumentById(\n                        this.props.claiming.candidateDocuments,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewImage={this.state.viewImage}\n                    setViewImage={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.DOCUMENT_VALIDATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Document not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n\n                {/* ############################################################### */}\n\n                {/* VIEWING CLAIM OF AN APPLICATION ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.APPLICATION &&\n                this.props.claiming.candidateApplications &&\n                getApplicationById(\n                  this.props.claiming.candidateApplications,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimApplView\n                    thisApplication={\n                      getApplicationById(\n                        this.props.claiming.candidateApplications,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.APPLICATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Application not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN APPLICATION ===================== */}\n\n                {/* VIEWING CLAIM OF AN EXAM ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.EXAMINATION &&\n                this.props.claiming.myAnswer &&\n                this.props.courses &&\n                getCourseIdBySheetId(\n                  this.props.claiming.myAnswer,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) &&\n                getCourseById(\n                  this.props.courses,\n                  getCourseIdBySheetId(\n                    this.props.claiming.myAnswer,\n                    getClaimById(\n                      this.props.claiming.myClaims,\n                      this.state.claimId\n                    )!.claiming_on_id\n                  )!.course\n                ) ? (\n                  <ClaimExamView\n                    thisExam={\n                      getCourseById(\n                        this.props.courses,\n                        getCourseIdBySheetId(\n                          this.props.claiming.myAnswer,\n                          getClaimById(\n                            this.props.claiming.myClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        )!.course\n                      )!\n                    }\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    thisExamSheet={\n                      getCourseIdBySheetId(\n                        this.props.claiming.myAnswer,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.EXAMINATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Exam not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN EXAM ===================== */}\n\n                {/* ----------------------------------------------------------- */}\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.PLACEMENT_TRANSFER &&\n                this.props.claiming.myPlacement ? (\n                  <ClaimPlacementView\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    myPlacement={this.props.claiming.myPlacement}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.DOCUMENT_VALIDATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Document not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n              </section>\n            </section>\n          )}\n        {/* end view claim */}\n\n        {/* ----------------------------------------------------------------------- */}\n        {/* CLAIM FORM  ################ */}\n        {this.state.claimForm && (\n          <ClaimForm\n            formState={this.state.claimForm}\n            setFormState={this.setClaimForm}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    claiming,\n    application_sessions: sessionPlan.allSessionPlans,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const CandidateClaim = connect(mapStateToProps, {\n  getMyClaims,\n  GetAllSessionPlans,\n  loadCourses,\n  getMyPlacement,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(Index);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport {\n  DATE,\n  errorToText,\n  showDate,\n  timestampToDate,\n} from \"../../utils/functions\";\nimport ViewRequirements from \"../Positions/ViewRequirements\";\nimport { FC_ApplicationPositionDistinctCategory } from \"./Candidate/ApplicationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisApplication: claimApplicationsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous.status === ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisClaim.previous.status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous.reason}\n            </span>\n          </div>\n\n          {/* DISPLAY POSITION ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {props.thisApplication.position.description}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.school_level_id\n                        .school_level_name\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.education_institute_id\n                        .education_category_title\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {props.thisApplication.position.courses.map(\n                      (item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            props.thisApplication.position.courses.length - 1 &&\n                            \",\"}\n                        </div>\n                      )\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {props.thisApplication.position.requirements.length > 0 ? (\n                  FC_ApplicationPositionDistinctCategory(\n                    props.thisApplication.position,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewRequirements\n                          requirements={FC_ApplicationPositionDistinctCategory(\n                            props.thisApplication.position,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { ImInfo, ImRadioChecked, ImRadioUnchecked } from \"react-icons/im\";\nimport { MdSwapHoriz } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport {\n  CalculatedMultipleChoiceInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  ClaimGetUserAnswers,\n  ClaimStatus,\n  course,\n  matchingAnswerInterface,\n  multipleChoiceAnswerInterface,\n  questionTypeElementsType,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate, timestampToDate } from \"../../utils/functions\";\nimport { findQuestionType } from \"../DoExam/utils/utils\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisExam: course;\n  thisExamSheet: ClaimExamResultsDetails;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [loading, props]);\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getAnswersByQuestion = (question_id: string): ClaimGetUserAnswers[] => {\n    return props.thisExamSheet.user_answers.filter(\n      (item) => item.question === question_id\n    );\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              Exam of {props.thisExam.course_name}{\" \"}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n\n          {/* DISPLAY EXAM SHEET ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"bg-white w-full rounded p-2 mb-2\">\n              <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                Questions\n              </div>\n              {props.thisExamSheet.questions.map((item, index) => (\n                <div\n                  key={index + item.id}\n                  className=\"rounded border my-2 p-1 shadow divide-y\"\n                >\n                  {/* SINGLE & MULTIPLE && TRUE+FALSE QUESTIONS ===================================== */}\n                  {findQuestionType(\n                    item.type,\n                    props.questionTypes.questionTypes\n                  ) &&\n                    (findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    )! === questionTypeElementsType.MultipleChoice ||\n                      findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! === questionTypeElementsType.SingleMultiple ||\n                      findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! === questionTypeElementsType.TrueFalse) && (\n                      <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                        <span className={`font-semibold`}>\n                          {item.question[0].title}:\n                        </span>\n                        <span className=\"\">{item.question[0].description}</span>\n                        <div className=\"grid grid-cols-2 gap-4 mt-2 mb-1 pt-2 divide-x border bg-gray-50\">\n                          <div className=\"px-4\">\n                            <p className=\"text-md font-medium\">\n                              Expected answer :\n                            </p>\n                            <ul className=\"text-sm w-full my-2\">\n                              {item.question[0].answer.map(\n                                (\n                                  question: multipleChoiceAnswerInterface,\n                                  index\n                                ) => (\n                                  <li\n                                    className={`mb-1 flex items-center`}\n                                    key={index + question.id}\n                                  >\n                                    {question.status ? (\n                                      <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                    ) : (\n                                      <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                    )}\n                                    {question.value}\n                                  </li>\n                                )\n                              )}\n                            </ul>\n                          </div>\n\n                          <div className=\"px-4\">\n                            <p className=\"text-md font-medium\">\n                              Given answers :\n                            </p>\n                            <ul className=\"text-sm w-full my-2\">\n                              {getAnswersByQuestion(item.question_id).length >\n                              0 ? (\n                                getAnswersByQuestion(\n                                  item.question_id\n                                )[0].answer.map(\n                                  (\n                                    answer: multipleChoiceAnswerInterface,\n                                    indexAnswer\n                                  ) => (\n                                    <li\n                                      className=\"mb-3 flex items-center\"\n                                      key={indexAnswer}\n                                    >\n                                      {answer.status ? (\n                                        <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                      ) : (\n                                        <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                      )}\n                                      {answer.value}\n                                    </li>\n                                  )\n                                )\n                              ) : (\n                                <li className=\"mb-3 flex items-center\">\n                                  <ImInfo className=\"h-6 w-6 mr-2\" />\n                                  No Answer provided\n                                </li>\n                              )}\n                            </ul>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center px-4 mb-2\">\n                          <p className=\"text-md font-medium\">Marks :</p>\n                          <span>\n                            {getAnswersByQuestion(item.question_id) &&\n                            getAnswersByQuestion(item.question_id).length > 0\n                              ? getAnswersByQuestion(item.question_id)[0]\n                                  .user_marks\n                              : \"\"}\n                          </span>\n                        </div>\n                      </div>\n                    )}\n\n                  {/* Simple Calculate QUESTIONS ===================================== */}\n                  {findQuestionType(\n                    item.type,\n                    props.questionTypes.questionTypes\n                  ) &&\n                    findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    )! === questionTypeElementsType.SimpleCalculate && (\n                      <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                        <span className={`font-semibold`}>\n                          {item.question[0].title}:\n                        </span>\n                        <span className=\"\">{item.question[0].description}</span>\n                        <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                          <div className=\"px-4 flex items-center gap-2\">\n                            <p className=\"text-md font-medium\">\n                              Expected answer :\n                            </p>\n                            <span>\n                              Between {item.question[0].answer[0].value[0]} + \"\n                              and \"+{item.question[0].answer[0].value[1]}\n                            </span>\n                          </div>\n\n                          <div className=\"px-4 flex items-center gap-2\">\n                            <p className=\"text-md font-medium\">\n                              Given answers :\n                            </p>\n                            {getAnswersByQuestion(item.question_id).length >\n                            0 ? (\n                              getAnswersByQuestion(\n                                item.question_id\n                              )[0].answer.map(\n                                (\n                                  answer: multipleChoiceAnswerInterface,\n                                  indexAnswer\n                                ) => (\n                                  <span key={indexAnswer}>{answer.value}</span>\n                                )\n                              )\n                            ) : (\n                              <span>No Answer provided</span>\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"flex items-center px-4 mb-2\">\n                          <p className=\"text-md font-medium\">Marks :</p>\n                          <span>\n                            {getAnswersByQuestion(item.question_id) &&\n                            getAnswersByQuestion(item.question_id).length > 0\n                              ? getAnswersByQuestion(item.question_id)[0]\n                                  .user_marks\n                              : \"\"}\n                          </span>\n                        </div>\n                      </div>\n                    )}\n\n                  {/* MATCHING QUESTIONS ===================================== */}\n                  {findQuestionType(\n                    item.type,\n                    props.questionTypes.questionTypes\n                  ) &&\n                    findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    )! === questionTypeElementsType.Matching && (\n                      <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                        <span className={`font-semibold`}>\n                          {item.question[0].title}:\n                        </span>\n                        <span className=\"\">{item.question[0].description}</span>\n                        <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                          <div className=\"grid grid-cols-2 gap-4 mt-2 mb-1 pt-2 divide-x border bg-gray-50\">\n                            <div className=\"px-4\">\n                              <p className=\"text-md font-medium\">\n                                Expected answer :\n                              </p>\n                              <ul className=\"text-sm w-full my-2\">\n                                {item.question[0].answer.map(\n                                  (\n                                    question: matchingAnswerInterface,\n                                    index\n                                  ) => (\n                                    <li\n                                      className={`mb-1 flex items-center gap-2 text-lg`}\n                                      key={index + question.id}\n                                    >\n                                      {question.value}\n                                      <MdSwapHoriz className=\"\" />\n                                      {question.status}\n                                    </li>\n                                  )\n                                )}\n                              </ul>\n                            </div>\n\n                            <div className=\"px-4\">\n                              <p className=\"text-md font-medium\">\n                                Given answers :\n                              </p>\n                              <ul className=\"text-sm w-full my-2\">\n                                {getAnswersByQuestion(item.question_id).length >\n                                0 ? (\n                                  getAnswersByQuestion(\n                                    item.question_id\n                                  )[0].answer.map(\n                                    (\n                                      answer: multipleChoiceAnswerInterface,\n                                      indexAnswer\n                                    ) => (\n                                      <li\n                                        className=\"mb-3 flex items-center\"\n                                        key={indexAnswer}\n                                      >\n                                        {answer.status ? (\n                                          <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                        ) : (\n                                          <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                        )}\n                                        {answer.value}\n                                      </li>\n                                    )\n                                  )\n                                ) : (\n                                  <li className=\"mb-3 flex items-center\">\n                                    <ImInfo className=\"h-6 w-6 mr-2\" />\n                                    No Answer provided\n                                  </li>\n                                )}\n                              </ul>\n                            </div>\n                          </div>\n                          <div className=\"flex items-center px-4 mb-2\">\n                            <p className=\"text-md font-medium\">Marks :</p>\n                            <span>\n                              {getAnswersByQuestion(item.question_id) &&\n                              getAnswersByQuestion(item.question_id).length > 0\n                                ? getAnswersByQuestion(item.question_id)[0]\n                                    .user_marks\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n\n                  {/* Short Answer QUESTIONS ===================================== */}\n                  {findQuestionType(\n                    item.type,\n                    props.questionTypes.questionTypes\n                  ) &&\n                    findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    )! === questionTypeElementsType.ShortAnswer && (\n                      <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                        <span className={`font-semibold`}>\n                          {item.question[0].title}:\n                        </span>\n                        <span className=\"\">{item.question[0].description}</span>\n\n                        <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                          <div className=\"px-4 flex items-center gap-2\">\n                            <p className=\"text-md font-medium\">\n                              Expected answer :\n                            </p>\n                            <span>\n                              {capitalizeFirstLetter(\n                                item.question[0].answer[0].value\n                              )}\n                            </span>\n                          </div>\n\n                          <div className=\"px-4 flex items-center gap-2\">\n                            <p className=\"text-md font-medium\">\n                              Given answers :\n                            </p>\n                            {getAnswersByQuestion(item.question_id).length >\n                            0 ? (\n                              getAnswersByQuestion(\n                                item.question_id\n                              )[0].answer.map(\n                                (\n                                  answer: multipleChoiceAnswerInterface,\n                                  indexAnswer\n                                ) => (\n                                  <span key={indexAnswer}>{answer.value}</span>\n                                )\n                              )\n                            ) : (\n                              <span>No Answer provided</span>\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"flex items-center px-4 mb-2\">\n                          <p className=\"text-md font-medium\">Marks :</p>\n                          <span>\n                            {getAnswersByQuestion(item.question_id) &&\n                            getAnswersByQuestion(item.question_id).length > 0\n                              ? getAnswersByQuestion(item.question_id)[0]\n                                  .user_marks\n                              : \"\"}\n                          </span>\n                        </div>\n                      </div>\n                    )}\n\n                  {/* Numeric QUESTIONS ===================================== */}\n                  {findQuestionType(\n                    item.type,\n                    props.questionTypes.questionTypes\n                  ) &&\n                    findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    )! === questionTypeElementsType.Numeric && (\n                      <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                        <span className={`font-semibold`}>\n                          {item.question[0].title}:\n                        </span>\n                        <span className=\"\">{item.question[0].description}</span>\n                        <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                          <div className=\"px-4 flex items-center gap-2\">\n                            <p className=\"text-md font-medium\">\n                              Expected answer :\n                            </p>\n                            <span>{item.question[0].answer[0].value[0]}</span>\n                          </div>\n\n                          <div className=\"px-4 flex items-center gap-2\">\n                            <p className=\"text-md font-medium\">\n                              Given answers :\n                            </p>\n                            {getAnswersByQuestion(item.question_id).length >\n                            0 ? (\n                              getAnswersByQuestion(\n                                item.question_id\n                              )[0].answer.map(\n                                (\n                                  answer: multipleChoiceAnswerInterface,\n                                  indexAnswer\n                                ) => (\n                                  <span key={indexAnswer}>{answer.value}</span>\n                                )\n                              )\n                            ) : (\n                              <span>No Answer provided</span>\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"flex items-center px-4 mb-2\">\n                          <p className=\"text-md font-medium\">Marks :</p>\n                          <span>\n                            {getAnswersByQuestion(item.question_id) &&\n                            getAnswersByQuestion(item.question_id).length > 0\n                              ? getAnswersByQuestion(item.question_id)[0]\n                                  .user_marks\n                              : \"\"}\n                          </span>\n                        </div>\n                      </div>\n                    )}\n\n                  {/* Calculated Multiple Choice QUESTIONS ===================================== */}\n                  {findQuestionType(\n                    item.type,\n                    props.questionTypes.questionTypes\n                  ) &&\n                    findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    )! ===\n                      questionTypeElementsType.CalculatedMultipleChoice && (\n                      <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                        <span className={`font-semibold`}>\n                          {item.question[0].title}:\n                        </span>\n                        <span className=\"\">{item.question[0].description}</span>\n                        <div className=\"grid grid-cols-2 gap-4 mt-2 mb-1 pt-2 divide-x border bg-gray-50\">\n                          <div className=\"px-4\">\n                            <p className=\"text-md font-medium\">\n                              Expected answer :\n                            </p>\n                            <ul className=\"text-sm w-full my-2\">\n                              {item.question[0].answer.map(\n                                (\n                                  question: CalculatedMultipleChoiceInterface,\n                                  index\n                                ) => (\n                                  <li\n                                    className={`mb-1 flex items-center`}\n                                    key={index + question.id}\n                                  >\n                                    {question.status ? (\n                                      <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                    ) : (\n                                      <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                    )}\n                                    {question.value}\n                                  </li>\n                                )\n                              )}\n                            </ul>\n                          </div>\n\n                          <div className=\"px-4\">\n                            <p className=\"text-md font-medium\">\n                              Given answers :\n                            </p>\n                            <ul className=\"text-sm w-full my-2\">\n                              {getAnswersByQuestion(item.question_id).length >\n                              0 ? (\n                                getAnswersByQuestion(\n                                  item.question_id\n                                )[0].answer.map(\n                                  (\n                                    answer: multipleChoiceAnswerInterface,\n                                    indexAnswer\n                                  ) => (\n                                    <li\n                                      className=\"mb-3 flex items-center\"\n                                      key={indexAnswer}\n                                    >\n                                      {answer.status ? (\n                                        <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                      ) : (\n                                        <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                      )}\n                                      {answer.value}\n                                    </li>\n                                  )\n                                )\n                              ) : (\n                                <li className=\"mb-3 flex items-center\">\n                                  <ImInfo className=\"h-6 w-6 mr-2\" />\n                                  No Answer provided\n                                </li>\n                              )}\n                            </ul>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center px-4 mb-2\">\n                          <p className=\"text-md font-medium\">Marks :</p>\n                          <span>\n                            {getAnswersByQuestion(item.question_id) &&\n                            getAnswersByQuestion(item.question_id).length > 0\n                              ? getAnswersByQuestion(item.question_id)[0]\n                                  .user_marks\n                              : \"\"}\n                          </span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n              ))}\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {loading ? (\n                          <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n                        ) : (\n                          props.thisClaim.userDetails.user_info.fname +\n                          \" \" +\n                          props.thisClaim.userDetails.user_info.lname\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  questionTypes,\n}: StoreState): {\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return { questionTypes: questionTypes };\n};\n\nexport default connect(mapStateToProps, {\n  loadQuestionTypes,\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { candidatePlacementInterface } from \"../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate, timestampToDate } from \"../../utils/functions\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimPlacementViewProps = {\n  myPlacement: candidatePlacementInterface;\n  thisClaim: CandidateClaimInterface;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimPlacementView: React.FC<ClaimPlacementViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>School:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div>\n          {/* <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Position:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div> */}\n          <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>District:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.district_id.district_name}\n              </span>\n            </div>\n          </div>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimPlacementView);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ClaimStatus, PlansTypeKeys } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\ntype FilterByTypeProps = {\n  // thisClaimType: ClaimTypesInterface | \"ALL\";\n  // setThisClaimType: React.Dispatch<\n  //   React.SetStateAction<ClaimTypesInterface | \"ALL\">\n  // >;\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst FilterByType: React.FC<FilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRejectedApplications, setLoadingRejectedApplications] =\n    useState<boolean>(true);\n  const [loadingRejectedDocuments, setLoadingRejectedDocuments] =\n    useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.candidateApplications === null) {\n      props.getMyRejectedApplications(\n        props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          if (status === false) {\n            if (msg.length > 0) {\n              props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            setLoadingRejectedApplications(false);\n          }\n        }\n      );\n    } else if (loadingRejectedApplications) {\n      setLoadingRejectedApplications(false);\n    }\n\n    if (props.claiming.candidateDocuments === null) {\n      console.log(\"filterrrrrrrrrrrrrrrrrrrr loadingRejectedDocuments\");\n      props.getMyRejectedDocuments((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingRejectedDocuments(false);\n        }\n      });\n    } else if (loadingRejectedDocuments) {\n      setLoadingRejectedDocuments(false);\n    }\n\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n    }\n\n    if (\n      !loadingRejectedApplications &&\n      !loadingRejectedDocuments &&\n      !loadingClaimTypes &&\n      loading\n    ) {\n      setLoading(false);\n    }\n  }, [\n    loading,\n    loadingClaimTypes,\n    loadingRejectedApplications,\n    loadingRejectedDocuments,\n    props,\n  ]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.myClaims && thisType === \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n    if (claiming.myClaims && thisType !== \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {/* PLACEMENT TRANSFER ================================= */}\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n          {/* <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.APPLICATION)}\n              active={props.thisClaimType === ClaimTypesInterface.APPLICATION}\n              count={countClaims(props.claiming).applications}\n            />\n          </div>\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.PLACEMENT);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.PLACEMENT)}\n              active={props.thisClaimType === ClaimTypesInterface.PLACEMENT}\n              count={countClaims(props.claiming).placement}\n            />\n          </div> */}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default connect(mapStateToProps, {\n  GetClaimingTypes,\n  setSelectedClaimType,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  PushPopupAlert,\n})(FilterByType);\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert, reAssessApplication } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  PositionAPI,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { DATE, showDate } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\nexport const FC_AdminApplicationPositionDistinctCategory = (\n  thisPosition: PositionAPI,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.position_requirement[field]._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.position_requirement[field]._id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nenum viewTabs {\n  profile = \"Applicant Profile\",\n  application = \"Application Details\",\n}\n\ntype AdminClaimAppViewProps = {\n  thisApplication: allClaimApplicationInterface;\n  thisPosition: PositionAPI;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  systemPositions: PositionAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  reAssessApplication: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimAppView: React.FC<AdminClaimAppViewProps> = (props) => {\n  const [viewPosition, setViewPosition] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [selectedTab, setSelectedTab] = useState<viewTabs>(viewTabs.profile);\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: {\n        sub_claim_id: string;\n        evaluation_comment: string;\n        evaluated_by: string;\n        decision_taken_status: ClaimDecisionStatus;\n      } = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await overrideDecision();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  const overrideDecision = async () => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/tolerateappl/${props.thisClaim.claiming_on_id}`,\n        {\n          user_id: props.auth.user.user_id,\n          comment: responseMsg,\n          application_status: ApplicationStates.Shortlisted,\n        }\n      );\n\n      res.data &&\n        props.reAssessApplication({\n          application_id: props.thisClaim.claiming_on_id,\n          application_status: ApplicationStates.Shortlisted,\n        });\n    } catch (error) {\n      console.error({ code_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      // errorToText(error);\n    }\n    setLoadingRequest(false);\n  };\n\n  const getPositionById = (position_id: string): PositionAPI | undefined => {\n    let result = props.systemPositions.find(\n      (item) => item.position_id === position_id\n    );\n\n    return result;\n  };\n\n  return (\n    <section className=\"\">\n      {/* #################### VIEW TABS ################################## */}\n      <div className=\"flex flex-row items-center mx-4\">\n        {Object.values(viewTabs).map((item, i) => (\n          <div\n            key={i}\n            onClick={() => setSelectedTab(item)}\n            className={`animate__animated ${\n              selectedTab === item\n                ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                : \"bg-white border-white text-gray-600\"\n            } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mr-1`}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n      {/* #################### END VIEW TABS ################################## */}\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY POSITION ==================================================== */}\n          {selectedTab === viewTabs.application && (\n            <section className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center\">\n                  <div className=\"flex items-center gap-2\">\n                    <span className={`italic text-gray-600`}>Name:</span>\n                    <span className=\"text-gray-800 font-bold text-2xl\">\n                      {getPositionById(props.thisApplication.position)\n                        ? getPositionById(props.thisApplication.position)!\n                            .position_title\n                        : \"Position not found\"}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .description\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .school_level_id.school_level_name\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .education_institute_id.education_category_title\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {getPositionById(props.thisApplication.position) ? (\n                      getPositionById(\n                        props.thisApplication.position\n                      )!.courses.map((item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            getPositionById(props.thisApplication.position)!\n                              .courses.length -\n                              1 && \",\"}\n                        </div>\n                      ))\n                    ) : (\n                      <NoResult\n                        theme={NoResultThemes.Dark}\n                        value={\"No courses found\"}\n                      />\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {getPositionById(props.thisApplication.position) ? (\n                  getPositionById(props.thisApplication.position)!.requirements\n                    .length > 0 ? (\n                    FC_AdminApplicationPositionDistinctCategory(\n                      getPositionById(props.thisApplication.position)!,\n                      props.documentCategories\n                    ).DistinctCategoriesTemp.map((item, index) => (\n                      <div\n                        className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                        key={index + item.category_id}\n                      >\n                        <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                          <MdTurnedIn />\n                          <span>{item.category_title}</span>\n                        </div>\n                        <div className=\"border bg-white mt-1\">\n                          <ViewRequirements\n                            requirements={FC_AdminApplicationPositionDistinctCategory(\n                              getPositionById(props.thisApplication.position)!,\n                              props.documentCategories\n                            ).PositionsTemp.filter(\n                              (req) => req.category_id === item.category_id\n                            )}\n                          />\n                        </div>\n                      </div>\n                    ))\n                  ) : (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"No requirements\"}\n                    ></NoResult>\n                  )\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <section className=\"w-full my-2 animate__animated animate__fadeIn rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Names:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.previous.evaluater.name}\n                  </span>\n                </div>\n                {false && (\n                  <button\n                    type=\"button\"\n                    className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                    onClick={() => setViewPosition(!viewPosition)}\n                  >\n                    {viewPosition ? \"Hide\" : \"More\"}\n                  </button>\n                )}\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <div className=\"flex items-center\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Position name:</span>\n                <span className=\"text-gray-800 font-bold text-2xl\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .position_title\n                    : \"Position not found\"}\n                </span>\n              </div>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous\n                  ? props.thisClaim.previous.status ===\n                    ApplicationStates.Rejected\n                  : props.thisApplication.application_status ===\n                    ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(\n                    props.thisApplication.application_status\n                  )}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {props.thisApplication.application_session}\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisApplication.override_by.comment}\n            </span>\n          </div>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 mb-5 mt-3\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  formError && formError.element === \"comment\" ? \"red\" : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={responseMsg}\n                onChange={(e) => {\n                  setResponseMsg(e.target.value);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              ></textarea>\n              {formError && formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  evaluateClaim,\n  reAssessApplication,\n  PushPopupAlert,\n})(AdminClaimAppView);\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { ImRadioChecked, ImRadioUnchecked, ImInfo } from \"react-icons/im\";\nimport { MdCancel, MdInfoOutline, MdSwapHoriz } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  CalculatedMultipleChoiceInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  ClaimGetUserAnswers,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  course,\n  matchingAnswerInterface,\n  multipleChoiceAnswerInterface,\n  questionTypeElementsType,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { findQuestionType } from \"../../DoExam/utils/utils\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\nenum viewTabs {\n  profile = \"Applicant Profile\",\n  exam = \"Exam Details\",\n}\n\ntype AdminClaimExamViewProps = {\n  thisExamSheet: ClaimExamResultsDetails;\n  thisExam: course;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n  evaluateClaim: Function;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimExamView: React.FC<AdminClaimExamViewProps> = (props) => {\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loading, setLoading] = useState(true);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [marks, setMarks] = useState<number>(0);\n  const [selectedTab, setSelectedTab] = useState<viewTabs>(viewTabs.profile);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading || props.questionTypes.questionTypes === null) {\n    return <Loading />;\n  }\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (\n      actionTaken === ClaimDecisionStatus.ACCEPTED &&\n      (marks <= 0 || marks > 100)\n    ) {\n      setFormError({\n        element: \"marks\",\n        msg: \"Invalid marks, marks must be between 1 and 10\",\n      });\n\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: {\n        sub_claim_id: string;\n        evaluation_comment: string;\n        evaluated_by: string;\n        evaluator_name: string;\n        evaluator_email: string;\n        decision_taken_status: ClaimDecisionStatus;\n      } = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await handleMarksAddition();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const handleMarksAddition = async () => {\n    try {\n      await axios.put(`${API.DO_EXAM}/answersheet/user/marks/update`, {\n        answer_sheet_id: props.thisClaim.claiming_on_id,\n        marks: marks,\n      });\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  const getAnswersByQuestion = (question_id: string): ClaimGetUserAnswers[] => {\n    return props.thisExamSheet.user_answers.filter(\n      (item) => item.question === question_id\n    );\n  };\n\n  return (\n    <section className=\"\">\n      {/* #################### VIEW TABS ################################## */}\n      <div className=\"flex flex-row items-center mx-4\">\n        {Object.values(viewTabs).map((item, i) => (\n          <div\n            key={i}\n            onClick={() => setSelectedTab(item)}\n            className={`animate__animated ${\n              selectedTab === item\n                ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                : \"bg-white border-white text-gray-600\"\n            } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mr-1`}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n      {/* #################### END VIEW TABS ################################## */}\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY POSITION ==================================================== */}\n          {selectedTab === viewTabs.exam && (\n            <section className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full rounded p-2 mb-2\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Questions\n                </div>\n                {props.thisExamSheet.questions.map((item, index) => (\n                  <div\n                    key={index + item.id}\n                    className=\"rounded border my-2 p-1 shadow divide-y\"\n                  >\n                    {/* SINGLE & MULTIPLE && TRUE+FALSE QUESTIONS ===================================== */}\n                    {findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    ) &&\n                      (findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! === questionTypeElementsType.MultipleChoice ||\n                        findQuestionType(\n                          item.type,\n                          props.questionTypes.questionTypes\n                        )! === questionTypeElementsType.SingleMultiple ||\n                        findQuestionType(\n                          item.type,\n                          props.questionTypes.questionTypes\n                        )! === questionTypeElementsType.TrueFalse) && (\n                        <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                          <span className={`font-semibold`}>\n                            {item.question[0].title}:\n                          </span>\n                          <span className=\"\">\n                            {item.question[0].description}\n                          </span>\n                          <div className=\"grid grid-cols-2 gap-4 mt-2 mb-1 pt-2 divide-x border bg-gray-50\">\n                            <div className=\"px-4\">\n                              <p className=\"text-md font-medium\">\n                                Expected answer :\n                              </p>\n                              <ul className=\"text-sm w-full my-2\">\n                                {item.question[0].answer.map(\n                                  (\n                                    question: multipleChoiceAnswerInterface,\n                                    index\n                                  ) => (\n                                    <li\n                                      className={`mb-1 flex items-center`}\n                                      key={index + question.id}\n                                    >\n                                      {question.status ? (\n                                        <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                      ) : (\n                                        <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                      )}\n                                      {question.value}\n                                    </li>\n                                  )\n                                )}\n                              </ul>\n                            </div>\n\n                            <div className=\"px-4\">\n                              <p className=\"text-md font-medium\">\n                                Given answers :\n                              </p>\n                              <ul className=\"text-sm w-full my-2\">\n                                {getAnswersByQuestion(item.question_id).length >\n                                0 ? (\n                                  getAnswersByQuestion(\n                                    item.question_id\n                                  )[0].answer.map(\n                                    (\n                                      answer: multipleChoiceAnswerInterface,\n                                      indexAnswer\n                                    ) => (\n                                      <li\n                                        className=\"mb-3 flex items-center\"\n                                        key={indexAnswer}\n                                      >\n                                        {answer.status ? (\n                                          <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                        ) : (\n                                          <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                        )}\n                                        {answer.value}\n                                      </li>\n                                    )\n                                  )\n                                ) : (\n                                  <li className=\"mb-3 flex items-center\">\n                                    <ImInfo className=\"h-6 w-6 mr-2\" />\n                                    No Answer provided\n                                  </li>\n                                )}\n                              </ul>\n                            </div>\n                          </div>\n                          <div className=\"flex items-center px-4 mb-2\">\n                            <p className=\"text-md font-medium\">Marks :</p>\n                            <span>\n                              {getAnswersByQuestion(item.question_id) &&\n                              getAnswersByQuestion(item.question_id).length > 0\n                                ? getAnswersByQuestion(item.question_id)[0]\n                                    .user_marks\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      )}\n\n                    {/* Simple Calculate QUESTIONS ===================================== */}\n                    {findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    ) &&\n                      findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! === questionTypeElementsType.SimpleCalculate && (\n                        <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                          <span className={`font-semibold`}>\n                            {item.question[0].title}:\n                          </span>\n                          <span className=\"\">\n                            {item.question[0].description}\n                          </span>\n                          <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                            <div className=\"px-4 flex items-center gap-2\">\n                              <p className=\"text-md font-medium\">\n                                Expected answer :\n                              </p>\n                              <span>\n                                Between {item.question[0].answer[0].value[0]} +\n                                \" and \"+{item.question[0].answer[0].value[1]}\n                              </span>\n                            </div>\n\n                            <div className=\"px-4 flex items-center gap-2\">\n                              <p className=\"text-md font-medium\">\n                                Given answers :\n                              </p>\n                              {getAnswersByQuestion(item.question_id).length >\n                              0 ? (\n                                getAnswersByQuestion(\n                                  item.question_id\n                                )[0].answer.map(\n                                  (\n                                    answer: multipleChoiceAnswerInterface,\n                                    indexAnswer\n                                  ) => (\n                                    <span key={indexAnswer}>\n                                      {answer.value}\n                                    </span>\n                                  )\n                                )\n                              ) : (\n                                <span>No Answer provided</span>\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"flex items-center px-4 mb-2\">\n                            <p className=\"text-md font-medium\">Marks :</p>\n                            <span>\n                              {getAnswersByQuestion(item.question_id) &&\n                              getAnswersByQuestion(item.question_id).length > 0\n                                ? getAnswersByQuestion(item.question_id)[0]\n                                    .user_marks\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      )}\n\n                    {/* MATCHING QUESTIONS ===================================== */}\n                    {findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    ) &&\n                      findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! === questionTypeElementsType.Matching && (\n                        <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                          <span className={`font-semibold`}>\n                            {item.question[0].title}:\n                          </span>\n                          <span className=\"\">\n                            {item.question[0].description}\n                          </span>\n                          <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                            <div className=\"grid grid-cols-2 gap-4 mt-2 mb-1 pt-2 divide-x border bg-gray-50\">\n                              <div className=\"px-4\">\n                                <p className=\"text-md font-medium\">\n                                  Expected answer :\n                                </p>\n                                <ul className=\"text-sm w-full my-2\">\n                                  {item.question[0].answer.map(\n                                    (\n                                      question: matchingAnswerInterface,\n                                      index\n                                    ) => (\n                                      <li\n                                        className={`mb-1 flex items-center gap-2 text-lg`}\n                                        key={index + question.id}\n                                      >\n                                        {question.value}\n                                        <MdSwapHoriz className=\"\" />\n                                        {question.status}\n                                      </li>\n                                    )\n                                  )}\n                                </ul>\n                              </div>\n\n                              <div className=\"px-4\">\n                                <p className=\"text-md font-medium\">\n                                  Given answers :\n                                </p>\n                                <ul className=\"text-sm w-full my-2\">\n                                  {getAnswersByQuestion(item.question_id)\n                                    .length > 0 ? (\n                                    getAnswersByQuestion(\n                                      item.question_id\n                                    )[0].answer.map(\n                                      (\n                                        answer: multipleChoiceAnswerInterface,\n                                        indexAnswer\n                                      ) => (\n                                        <li\n                                          className=\"mb-3 flex items-center\"\n                                          key={indexAnswer}\n                                        >\n                                          {answer.status ? (\n                                            <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                          ) : (\n                                            <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                          )}\n                                          {answer.value}\n                                        </li>\n                                      )\n                                    )\n                                  ) : (\n                                    <li className=\"mb-3 flex items-center\">\n                                      <ImInfo className=\"h-6 w-6 mr-2\" />\n                                      No Answer provided\n                                    </li>\n                                  )}\n                                </ul>\n                              </div>\n                            </div>\n                            <div className=\"flex items-center px-4 mb-2\">\n                              <p className=\"text-md font-medium\">Marks :</p>\n                              <span>\n                                {getAnswersByQuestion(item.question_id) &&\n                                getAnswersByQuestion(item.question_id).length >\n                                  0\n                                  ? getAnswersByQuestion(item.question_id)[0]\n                                      .user_marks\n                                  : \"\"}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                      )}\n\n                    {/* Short Answer QUESTIONS ===================================== */}\n                    {findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    ) &&\n                      findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! === questionTypeElementsType.ShortAnswer && (\n                        <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                          <span className={`font-semibold`}>\n                            {item.question[0].title}:\n                          </span>\n                          <span className=\"\">\n                            {item.question[0].description}\n                          </span>\n\n                          <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                            <div className=\"px-4 flex items-center gap-2\">\n                              <p className=\"text-md font-medium\">\n                                Expected answer :\n                              </p>\n                              <span>\n                                {capitalizeFirstLetter(\n                                  item.question[0].answer[0].value\n                                )}\n                              </span>\n                            </div>\n\n                            <div className=\"px-4 flex items-center gap-2\">\n                              <p className=\"text-md font-medium\">\n                                Given answers :\n                              </p>\n                              {getAnswersByQuestion(item.question_id).length >\n                              0 ? (\n                                getAnswersByQuestion(\n                                  item.question_id\n                                )[0].answer.map(\n                                  (\n                                    answer: multipleChoiceAnswerInterface,\n                                    indexAnswer\n                                  ) => (\n                                    <span key={indexAnswer}>\n                                      {answer.value}\n                                    </span>\n                                  )\n                                )\n                              ) : (\n                                <span>No Answer provided</span>\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"flex items-center px-4 mb-2\">\n                            <p className=\"text-md font-medium\">Marks :</p>\n                            <span>\n                              {getAnswersByQuestion(item.question_id) &&\n                              getAnswersByQuestion(item.question_id).length > 0\n                                ? getAnswersByQuestion(item.question_id)[0]\n                                    .user_marks\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      )}\n\n                    {/* Numeric QUESTIONS ===================================== */}\n                    {findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    ) &&\n                      findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! === questionTypeElementsType.Numeric && (\n                        <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                          <span className={`font-semibold`}>\n                            {item.question[0].title}:\n                          </span>\n                          <span className=\"\">\n                            {item.question[0].description}\n                          </span>\n                          <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                            <div className=\"px-4 flex items-center gap-2\">\n                              <p className=\"text-md font-medium\">\n                                Expected answer :\n                              </p>\n                              <span>{item.question[0].answer[0].value[0]}</span>\n                            </div>\n\n                            <div className=\"px-4 flex items-center gap-2\">\n                              <p className=\"text-md font-medium\">\n                                Given answers :\n                              </p>\n                              {getAnswersByQuestion(item.question_id).length >\n                              0 ? (\n                                getAnswersByQuestion(\n                                  item.question_id\n                                )[0].answer.map(\n                                  (\n                                    answer: multipleChoiceAnswerInterface,\n                                    indexAnswer\n                                  ) => (\n                                    <span key={indexAnswer}>\n                                      {answer.value}\n                                    </span>\n                                  )\n                                )\n                              ) : (\n                                <span>No Answer provided</span>\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"flex items-center px-4 mb-2\">\n                            <p className=\"text-md font-medium\">Marks :</p>\n                            <span>\n                              {getAnswersByQuestion(item.question_id) &&\n                              getAnswersByQuestion(item.question_id).length > 0\n                                ? getAnswersByQuestion(item.question_id)[0]\n                                    .user_marks\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      )}\n\n                    {/* Calculated Multiple Choice QUESTIONS ===================================== */}\n                    {findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    ) &&\n                      findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! ===\n                        questionTypeElementsType.CalculatedMultipleChoice && (\n                        <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                          <span className={`font-semibold`}>\n                            {item.question[0].title}:\n                          </span>\n                          <span className=\"\">\n                            {item.question[0].description}\n                          </span>\n                          <div className=\"grid grid-cols-2 gap-4 mt-2 mb-1 pt-2 divide-x border bg-gray-50\">\n                            <div className=\"px-4\">\n                              <p className=\"text-md font-medium\">\n                                Expected answer :\n                              </p>\n                              <ul className=\"text-sm w-full my-2\">\n                                {item.question[0].answer.map(\n                                  (\n                                    question: CalculatedMultipleChoiceInterface,\n                                    index\n                                  ) => (\n                                    <li\n                                      className={`mb-1 flex items-center`}\n                                      key={index + question.id}\n                                    >\n                                      {question.status ? (\n                                        <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                      ) : (\n                                        <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                      )}\n                                      {question.value}\n                                    </li>\n                                  )\n                                )}\n                              </ul>\n                            </div>\n\n                            <div className=\"px-4\">\n                              <p className=\"text-md font-medium\">\n                                Given answers :\n                              </p>\n                              <ul className=\"text-sm w-full my-2\">\n                                {getAnswersByQuestion(item.question_id).length >\n                                0 ? (\n                                  getAnswersByQuestion(\n                                    item.question_id\n                                  )[0].answer.map(\n                                    (\n                                      answer: multipleChoiceAnswerInterface,\n                                      indexAnswer\n                                    ) => (\n                                      <li\n                                        className=\"mb-3 flex items-center\"\n                                        key={indexAnswer}\n                                      >\n                                        {answer.status ? (\n                                          <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                        ) : (\n                                          <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                        )}\n                                        {answer.value}\n                                      </li>\n                                    )\n                                  )\n                                ) : (\n                                  <li className=\"mb-3 flex items-center\">\n                                    <ImInfo className=\"h-6 w-6 mr-2\" />\n                                    No Answer provided\n                                  </li>\n                                )}\n                              </ul>\n                            </div>\n                          </div>\n                          <div className=\"flex items-center px-4 mb-2\">\n                            <p className=\"text-md font-medium\">Marks :</p>\n                            <span>\n                              {getAnswersByQuestion(item.question_id) &&\n                              getAnswersByQuestion(item.question_id).length > 0\n                                ? getAnswersByQuestion(item.question_id)[0]\n                                    .user_marks\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      )}\n                  </div>\n                ))}\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <section className=\"w-full my-2 animate__animated animate__fadeIn rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Names:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.userDetails.user_info.fname +\n                      \" \" +\n                      props.thisClaim.userDetails.user_info.lname}\n                  </span>\n                </div>\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <div className=\"\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Email:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.email}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Phone:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.phone_number}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Gender:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.user_info.sex === \"M\"\n                    ? \"Male\"\n                    : \"Female\"}\n                </span>\n              </div>\n            </div>\n          )}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-2 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 mb-5 mt-3\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full space-y-1\">\n              {actionTaken === ClaimDecisionStatus.ACCEPTED && (\n                <div className=\"flex items-center justify-end w-full gap-2\">\n                  <span className=\"font-semibold\">Addition marks</span>\n                  <div className=\"px-2\">\n                    <input\n                      placeholder={`Addition marks`}\n                      className={`border border-${\n                        formError && formError.element === \"marks\"\n                          ? \"red\"\n                          : \"gray\"\n                      }-400 rounded px-3 py-1 w-auto focus:outline-none`}\n                      value={marks}\n                      onChange={(e) => {\n                        setMarks(Number(e.target.value));\n                        setFormError(null);\n                      }}\n                      disabled={loadingRequest}\n                    />\n                    {formError && formError.element === \"marks\" && (\n                      <p className=\"text-red-800\">{formError.msg}</p>\n                    )}\n                  </div>\n                </div>\n              )}\n              <div className=\"w-full px-2\">\n                <textarea\n                  placeholder={`Reason of your decision...`}\n                  cols={50}\n                  rows={actionTaken === ClaimDecisionStatus.ACCEPTED ? 2 : 3}\n                  className={`border border-${\n                    formError && formError.element === \"comment\"\n                      ? \"red\"\n                      : \"gray\"\n                  }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                  style={{ resize: \"none\" }}\n                  value={responseMsg}\n                  onChange={(e) => {\n                    setResponseMsg(e.target.value);\n                    setFormError(null);\n                  }}\n                  disabled={loadingRequest}\n                ></textarea>\n                {formError && formError.element === \"comment\" && (\n                  <p className=\"text-red-800\">{formError.msg}</p>\n                )}\n              </div>\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  questionTypes,\n}: StoreState): {\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return {\n    auth,\n    questionTypes,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadQuestionTypes,\n  evaluateClaim,\n  PushPopupAlert,\n})(AdminClaimExamView);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { adminDisplayClaimTitle } from \".\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { verifyDocument } from \"../../../actions/document\";\nimport { VerifyDocumentInterface } from \"../../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DocValidationStatusInterface,\n  UserDocumentsInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate, timestampToDate } from \"../../../utils/functions\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\ntype AdminClaimDocViewProps = {\n  thisDoc: UserDocumentsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimReasons: claimReasonInterface[] | null;\n  candidateId: string;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  actionTaken: ClaimDecisionStatus | null;\n  setActionTaken: (value: ClaimDecisionStatus | null) => void;\n  responseMsg: string;\n  setResponseMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX ==================\n  auth: Auth;\n  verifyDocument: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimDocView: React.FC<AdminClaimDocViewProps> = (props) => {\n  const handleVerify = async () => {\n    if (!props.actionTaken) {\n      props.setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(props.responseMsg)) {\n      props.setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      props.setLoadingRequest(true);\n      const api_body: {\n        sub_claim_id: string;\n        evaluation_comment: string;\n        evaluated_by: string;\n        evaluator_name: string;\n        evaluator_email: string;\n        decision_taken_status: ClaimDecisionStatus;\n      } = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: props.responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: props.actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (props.actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await FC_DocValidation();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          props.setResponseMsg(\"\");\n          props.setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const FC_DocValidation = async () => {\n    const api_body: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n      },\n      in_education: false,\n      disability: false,\n    };\n    const api_redux: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n        date: \"\",\n      },\n      in_education: false,\n      disability: false,\n    };\n\n    try {\n      const res = await axios.post<VerifyDocumentInterface>(\n        `${API.AUTH}/validateuserdoc`,\n        api_body\n      );\n      if (res) {\n        props.verifyDocument(api_redux);\n        await FC_shortListing(props.thisClaim.user);\n        // setDocumentId(\"null\");\n      }\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const FC_shortListing = async (candidate_id: string) => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/doccheckshortlist/${candidate_id}`\n      );\n      console.log({ res });\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Names:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.thisClaim.userDetails.user_info.fname +\n                  \" \" +\n                  props.thisClaim.userDetails.user_info.lname}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className={`italic text-gray-600`}>Title:</span>\n            <span className=\"text-gray-800 font-bold text-2xl\">\n              {/* {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main} */}\n              {props.thisClaim.userDetails.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ).length > 0\n                ? adminDisplayClaimTitle(\n                    props.documentCategories,\n                    props.thisClaim.userDetails.details.filter(\n                      (item) => item.validation_status !== \"waiting\"\n                    ),\n                    props.thisClaim\n                  )\n                : \"-\"}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.commet}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!props.actionTaken && (\n        <section className=\"flex items-center justify-between\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 mb-5 mt-3\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {props.actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.responseMsg}\n                onChange={(e) => {\n                  props.setResponseMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setResponseMsg(\"\");\n                  props.setActionTaken(null);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  evaluateClaim,\n  verifyDocument,\n  PushPopupAlert,\n})(AdminClaimDocView);\n","import React, { Component } from \"react\";\nimport { MdArrowBack, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  getClaimReasons,\n  getAllAnswers,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  PlansTypeKeys,\n  ClaimDecisionStatus,\n  ClaimTypesInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../../shared/interfaces\";\nimport { getClaimById, whichClaimStatus, whichClaimType } from \"../Candidate\";\nimport { getCourseById, getCourseIdBySheetId } from \"../Candidate/FormExamList\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport AdminClaimAppView from \"./AdminClaimAppView\";\nimport AdminClaimDocView from \"./AdminClaimDocView\";\nimport AdminClaimExamView from \"./AdminClaimExamView\";\nimport AdminFilterByType, {\n  filterClaimsByClaimType,\n} from \"./AdminFilterByType\";\n\n// export const getUserDocuments = (\n//   userList: UserInterface[],\n//   user_id: String\n// ): { user: UserInterface; document: UserDocumentsInterface[] } | null => {\n//   const thisUser = userList.find((item) => item.user_id === user_id);\n//   if (thisUser) {\n//     const thisDoc = thisUser.details.filter(\n//       (item) => item.validation_status !== \"waiting\"\n//     );\n//     return { user: thisUser, document: thisDoc };\n//   }\n//   return null;\n// };\n\nexport const adminDisplayClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: UserDocumentsInterface[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = candidateDocuments.find(\n      (item) => item.doc_id === thisClaim.claiming_on_id\n    );\n    result = thisDoc\n      ? AdminClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n\n  return result;\n};\n\nexport const AdminClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: UserDocumentsInterface\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id &&\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    DocField = documentCategories.documentFields.filter(\n      (c) => c._id === doc.category_subcategory_data\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const getApplicationById = (\n  allApplications: allClaimApplicationInterface[] | null,\n  systemPositions: PositionAPI[] | null,\n  application_id: String\n): {\n  application: allClaimApplicationInterface;\n  position: PositionAPI;\n} | null => {\n  if (allApplications) {\n    let thisApplication = allApplications.find(\n      (item) => item._id === application_id\n    );\n    if (thisApplication && systemPositions) {\n      let thisPosition = systemPositions.find(\n        (item) => item.position_id === thisApplication!.position\n      );\n      if (thisPosition) {\n        return { application: thisApplication, position: thisPosition };\n      }\n    }\n  }\n  return null;\n};\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  courses: course[] | null;\n  loadCourses: Function;\n  getPositions: Function;\n  getClaimReasons: Function;\n  getAllApplications: Function;\n  getAllClaims: Function;\n  getAllAnswers: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  verifyAllDocument: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingData: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  viewClaim: boolean;\n  periodChanged: boolean;\n  claimId: string | null;\n  claimType: string | null;\n  candidateId: string | null;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  actionTaken: ClaimDecisionStatus | null;\n  responseMsg: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingData: false,\n      thisPeriod: null,\n      viewClaim: false,\n      periodChanged: false,\n      claimId: null,\n      claimType: null,\n      candidateId: null,\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      actionTaken: null,\n      responseMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingData = (value: boolean) => {\n    this.setState({ loadingData: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  // ------------------------------\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n  setClaimType = (value: string | null) => {\n    this.setState({ claimType: value });\n  };\n  setCandidateId = (value: string | null) => {\n    this.setState({ candidateId: value });\n  };\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setActionTaken = (value: ClaimDecisionStatus | null) => {\n    this.setState({ actionTaken: value });\n  };\n  setResponseMsg = (value: string) => {\n    this.setState({ responseMsg: value });\n  };\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setDefaultSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadsAllClaims(thisSession ? thisSession : sessions[0]);\n      this.loadsApplications(thisSession ? thisSession : sessions[0]);\n      this.loadsAlAnswers(thisSession ? thisSession : sessions[0]);\n    }\n  };\n\n  loadsAllClaims = (thisSession: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.allClaims === null) {\n      this.props.getAllClaims(\n        2,\n        thisSession.session_plan_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsApplications = (thisSession: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.allApplications === null) {\n      this.props.getAllApplications(\n        thisSession.session_plan_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsAlAnswers = (thisSession: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.allAnswer === null) {\n      this.props.getAllAnswers(\n        thisSession.session_plan_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  componentDidMount = () => {\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              this.setDefaultSession(data);\n            }\n          }\n        }\n      );\n    } else if (this.props.application_sessions.length > 0) {\n      this.setDefaultSession(this.props.application_sessions);\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!this.props.documentReducer.documentSubCategory) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!this.props.documentReducer.documentFields) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    }\n\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n  };\n\n  displayClaimTitle = (\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      let thisDocs = thisClaim.userDetails.details.filter(\n        (item) => item.validation_status !== \"waiting\"\n      );\n      result =\n        thisDocs.length > 0\n          ? adminDisplayClaimTitle(\n              this.props.documentReducer,\n              thisDocs,\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    if (\n      thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.allAnswer\n    ) {\n      let thisAnswer = getCourseIdBySheetId(\n        this.props.claiming.allAnswer,\n        thisClaim.claiming_on_id\n      );\n      if (thisAnswer && getCourseById(this.props.courses, thisAnswer.course)) {\n        result =\n          \"Exam of \" +\n          getCourseById(this.props.courses, thisAnswer.course)!.course_name;\n      } else {\n        result = \"Unknown exam\";\n      }\n    }\n\n    return result;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && this.setPeriodChanged(false);\n      this.setLoadingData(status);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.allClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            {/* FILTER SECTION */}\n            <AdminFilterByType loadingClaims={this.state.loadingData} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loadingData}\n            loadingSession={this.state.loading}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingData}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM CONTENT LIST ===================================== */}\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td className=\"px-2 py-2\">Applicant names</td>\n                  <td className=\"px-2 py-2\">Claim title</td>\n                  {this.props.claiming.selectedClaimType === \"all\" && (\n                    <td className=\"px-2 py-2\">Claim type</td>\n                  )}\n                  <td className=\"px-2 py-2\">Claim status</td>\n                  <td className=\"px-2 py-2\"></td>\n                </tr>\n              </thead>\n              <tbody>\n                {!this.props.claiming.allClaims ||\n                !this.props.claiming.claimTypes ||\n                !this.props.claiming.allApplications ||\n                !this.props.systemPositions ||\n                this.state.loadingData ? (\n                  <TableLoading\n                    cols={\n                      this.props.claiming.selectedClaimType === \"all\" ? 6 : 5\n                    }\n                  />\n                ) : filterClaimsByClaimType(\n                    this.props.claiming.allClaims,\n                    this.props.claiming.selectedClaimType\n                  ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={6}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"No claim found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : (\n                  filterClaimsByClaimType(\n                    this.props.claiming.allClaims,\n                    this.props.claiming.selectedClaimType\n                  ).map((claim, index) => (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={index + claim._id}\n                      onClick={() => {\n                        this.setViewClaim(true);\n                        this.setClaimId(claim._id);\n                        this.setCandidateId(claim.user);\n                        this.setClaimType(\n                          whichClaimType(claim) ? whichClaimType(claim)! : null\n                        );\n                      }}\n                    >\n                      <td className=\"px-3 py-1\">{index + 1}</td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {claim.userDetails.user_info.fname +\n                          \" \" +\n                          claim.userDetails.user_info.lname}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {this.displayClaimTitle(claim)}\n                      </td>\n                      {this.props.claiming.selectedClaimType === \"all\" && (\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {whichClaimType(claim)\n                            ? capitalizeFirstLetter(whichClaimType(claim)!)\n                            : \"-\"}\n                        </td>\n                      )}\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        <span\n                          className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                            whichClaimStatus(claim).classes\n                          }`}\n                        >\n                          {whichClaimStatus(claim).status}\n                        </span>\n                      </td>\n                      <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                        <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                          View\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </section>\n        )}\n        {/* END CLAIM CONTENT LIST ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* view claim */}\n        {this.state.viewClaim &&\n          this.state.candidateId &&\n          this.props.claiming.allClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.allClaims, this.state.claimId) &&\n          this.props.claiming.claimTypes && (\n            <section className=\"bg-white w-full p-1 my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(true);\n                    this.setLoadingRequest(false);\n                    this.setActionTaken(null);\n                    this.setResponseMsg(\"\");\n                    this.setFormError(null);\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                <div className={`text-gray-600 font-extrabold text-2xl px-2`}>\n                  Viewing claim\n                </div>\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n\n              <section className=\"my-2\">\n                {/* FOR DOCUMENT ========================== */}\n                {this.state.claimType &&\n                  this.state.claimType.toLocaleLowerCase() ===\n                    ClaimTypesInterface.DOCUMENT.toLocaleLowerCase() && (\n                    <div>\n                      {getClaimById(\n                        this.props.claiming.allClaims!,\n                        this.state.claimId!\n                      )!.userDetails.details.find(\n                        (item) =>\n                          item.doc_id ===\n                          getClaimById(\n                            this.props.claiming.allClaims!,\n                            this.state.claimId!\n                          )!.claiming_on_id\n                      ) ? (\n                        <AdminClaimDocView\n                          thisDoc={\n                            getClaimById(\n                              this.props.claiming.allClaims!,\n                              this.state.claimId!\n                            )!.userDetails.details.find(\n                              (item) =>\n                                item.doc_id ===\n                                getClaimById(\n                                  this.props.claiming.allClaims!,\n                                  this.state.claimId!\n                                )!.claiming_on_id\n                            )!\n                          }\n                          documentCategories={this.props.documentReducer}\n                          thisClaim={\n                            getClaimById(\n                              this.props.claiming.allClaims,\n                              this.state.claimId\n                            )!\n                          }\n                          claimTypes={this.props.claiming.claimTypes}\n                          viewImage={this.state.viewImage}\n                          setViewImage={this.setViewImage}\n                          loadingRequest={this.state.loadingRequest}\n                          setLoadingRequest={this.setLoadingRequest}\n                          actionTaken={this.state.actionTaken}\n                          setActionTaken={this.setActionTaken}\n                          responseMsg={this.state.responseMsg}\n                          setResponseMsg={this.setResponseMsg}\n                          formError={this.state.formError}\n                          setFormError={this.setFormError}\n                          candidateId={this.state.candidateId}\n                          claimReasons={this.props.claiming.claimReasons}\n                        />\n                      ) : (\n                        <NoResult\n                          theme={NoResultThemes.Dark}\n                          value={\"Document not found\"}\n                        />\n                      )}\n                    </div>\n                  )}\n\n                {/* FOR APPLICATION ========================== */}\n                {this.state.claimType &&\n                  this.state.claimType.toLocaleLowerCase() ===\n                    ClaimTypesInterface.APPLICATION.toLocaleLowerCase() && (\n                    <div>\n                      {getApplicationById(\n                        this.props.claiming.allApplications,\n                        this.props.systemPositions,\n                        getClaimById(\n                          this.props.claiming.allClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      ) ? (\n                        this.props.systemPositions && (\n                          <AdminClaimAppView\n                            thisApplication={\n                              getApplicationById(\n                                this.props.claiming.allApplications,\n                                this.props.systemPositions,\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!.claiming_on_id\n                              )!.application\n                            }\n                            thisPosition={\n                              getApplicationById(\n                                this.props.claiming.allApplications,\n                                this.props.systemPositions,\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!.claiming_on_id\n                              )!.position\n                            }\n                            documentCategories={this.props.documentReducer}\n                            thisClaim={\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!\n                            }\n                            claimTypes={this.props.claiming.claimTypes}\n                            systemPositions={this.props.systemPositions}\n                            claimReasons={this.props.claiming.claimReasons}\n                          />\n                        )\n                      ) : (\n                        <NoResult\n                          theme={NoResultThemes.Dark}\n                          value={\"Application not found\"}\n                        />\n                      )}\n                    </div>\n                  )}\n\n                {/* FOR EXAMINATION ========================== */}\n                {this.state.claimType &&\n                  this.state.claimType.toLocaleLowerCase() ===\n                    ClaimTypesInterface.EXAMINATION.toLocaleLowerCase() && (\n                    <div>\n                      {this.props.claiming.allAnswer &&\n                      this.props.courses &&\n                      getCourseIdBySheetId(\n                        this.props.claiming.allAnswer,\n                        getClaimById(\n                          this.props.claiming.allClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      ) &&\n                      getCourseById(\n                        this.props.courses,\n                        getCourseIdBySheetId(\n                          this.props.claiming.allAnswer,\n                          getClaimById(\n                            this.props.claiming.allClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        )!.course\n                      ) ? (\n                        <AdminClaimExamView\n                          thisExamSheet={\n                            getCourseIdBySheetId(\n                              this.props.claiming.allAnswer,\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!.claiming_on_id\n                            )!\n                          }\n                          thisExam={\n                            getCourseById(\n                              this.props.courses,\n                              getCourseIdBySheetId(\n                                this.props.claiming.allAnswer,\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!.claiming_on_id\n                              )!.course\n                            )!\n                          }\n                          thisClaim={\n                            getClaimById(\n                              this.props.claiming.allClaims,\n                              this.state.claimId\n                            )!\n                          }\n                          claimTypes={this.props.claiming.claimTypes}\n                          claimReasons={this.props.claiming.claimReasons}\n                        />\n                      ) : (\n                        <NoResult\n                          theme={NoResultThemes.Dark}\n                          value={\"Application not found\"}\n                        />\n                      )}\n                    </div>\n                  )}\n              </section>\n            </section>\n          )}\n        {/* end view claim */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const AdminClaim = connect(mapStateToProps, {\n  getAllClaims,\n  loadCourses,\n  getAllAnswers,\n  getClaimReasons,\n  getAllApplications,\n  GetAllSessionPlans,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  getPositions,\n  PushPopupAlert,\n})(Index);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { BiExport, BiSort } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadCourses,\n  loadEducationCategories,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  setSelectedClaimType,\n  GetClaimingTypes,\n  getAllAnswers,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  claimReportContentInterface,\n  claimReportContentKeyInterface,\n  ClaimToPrintInterface,\n} from \"../../../interfaces/claimings\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { PositionAPI } from \"../../../interfaces/position\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\nimport { adminDisplayClaimTitle } from \"../../Claimings/Admin\";\nimport { ClaimTypesEnum, whichClaimType } from \"../../Claimings/Candidate\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport {\n  education_category,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  course,\n} from \"../../../interfaces\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport {\n  getCourseIdBySheetId,\n  getCourseById,\n} from \"../../Claimings/Candidate/FormExamList\";\nimport NoSession from \"../../SessionSettings/NoSession\";\n\nexport const reportClaimType = (\n  type: PlansTypeKeys | \"all\"\n): ClaimTypesEnum | \"all\" => {\n  let result: ClaimTypesEnum | \"all\" = \"all\";\n  switch (type) {\n    case PlansTypeKeys.APPLICATION:\n      result = ClaimTypesEnum.application;\n      break;\n    case PlansTypeKeys.DOCUMENT_VALIDATION:\n      result = ClaimTypesEnum.document;\n      break;\n    case PlansTypeKeys.EXAMINATION:\n      result = ClaimTypesEnum.exam;\n      break;\n    case PlansTypeKeys.MARKS_PUBLICATION:\n      result = ClaimTypesEnum.marks_publication;\n      break;\n    case PlansTypeKeys.PLACEMENT_TRANSFER:\n      result = ClaimTypesEnum.placement;\n      break;\n    default:\n      result = \"all\";\n      break;\n  }\n\n  return result;\n};\n\nconst searchData = (\n  objList: ClaimToPrintInterface[],\n  text: string\n): ClaimToPrintInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"names\" ||\n        prop === \"gender\" ||\n        prop === \"national_id\" ||\n        prop === \"phone\" ||\n        prop === \"email\" ||\n        prop === \"claim_title\" ||\n        prop === \"claim_type\" ||\n        prop === \"claim_level\" ||\n        prop === \"education_category\" ||\n        prop === \"claim_session\" ||\n        prop === \"date\" ||\n        prop === \"decision\"\n      ) {\n        if (product[prop]) {\n          flag =\n            product[prop]!.toString()\n              .toLowerCase()\n              .indexOf(text.toLowerCase()) > -1;\n        }\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nconst defaultReportContent: claimReportContentInterface[] = [\n  {\n    key: claimReportContentKeyInterface.names,\n    title: \"Applicant Names\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  { key: claimReportContentKeyInterface.gender, title: \"Gender\", status: true },\n  { key: claimReportContentKeyInterface.phone, title: \"Phone\", status: true },\n  {\n    key: claimReportContentKeyInterface.claim_session,\n    title: \"Claim Session\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.education_category,\n    title: \"Education Institute\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.date,\n    title: \"Claim Date\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.decision,\n    title: \"Decision\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_title,\n    title: \"Claim Title\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_type,\n    title: \"Claim Type\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_level,\n    title: \"Claim Level\",\n    status: true,\n  },\n];\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  courses: course[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadCourses: Function;\n  getAllAnswers: Function;\n  setSelectedClaimType: Function;\n  getPositions: Function;\n  getAllClaims: Function;\n  GetClaimingTypes: Function;\n  getAllApplications: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst _ClaimingReport: React.FC<AppProps> = (props) => {\n  const [thisPeriod, setThisPeriod] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [thisLevel, setThisLevel] = useState<number | \"all\">(\"all\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [periodChanged, setPeriodChanged] = useState<boolean>(false);\n  const [loadingPosition, setLoadingPosition] = useState<boolean>(true);\n  const [loadingApplications, setLoadingApplications] = useState<boolean>(true);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(true);\n  const [loadingCourses, setLoadingCourses] = useState<boolean>(true);\n  const [loadingDocuments, setLoadingDocuments] = useState<boolean>(true);\n  const [loadingInstitutes, setLoadingInstitutes] = useState<boolean>(true);\n  const [loadingClarifications, setLoadingClarifications] =\n    useState<boolean>(true);\n  const [loadingFields, setLoadingFields] = useState<boolean>(true);\n  const [downloading, setDownloading] = useState<boolean>(false);\n  const [claimToPrint, setClaimToPrint] = useState<\n    ClaimToPrintInterface[] | null\n  >();\n\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [generateReportModal, setGenerateReportModal] = useState<{\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null>(null);\n  const [reportTitle, setReportTitle] = useState<string>(\"\");\n  const [reportContent, setReportContent] =\n    useState<claimReportContentInterface[]>(defaultReportContent);\n  const [selectAll, setSelectAll] = useState<boolean>(true);\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [selectPeriod, setSelectPeriod] = useState<boolean>(false);\n  const [thisEducation, setThisEducation] = useState<\n    education_category | \"all\"\n  >(\"all\");\n\n  useEffect(() => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      props.schoolLevels.education_categories === null ||\n      props.schoolLevels.education_categories.length === 0\n    ) {\n      props.loadEducationCategories(setLoadingInstitutes);\n    } else {\n      setLoadingInstitutes(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n    // LOADING CLAIM TYPES ========================================\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n    // END LOADING CLAIM TYPES ========================================\n    // LOADING APPLICATION SESSION ====================================\n    if (props.application_sessions === null) {\n      props.GetAllSessionPlans((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (\n      thisPeriod === null &&\n      !loadingSession &&\n      props.application_sessions &&\n      props.application_sessions.length > 0\n    ) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setThisPeriod(thisSession ? thisSession : props.application_sessions[0]);\n      if (props.claiming.allAnswer === null) {\n        props.getAllAnswers(\n          thisSession\n            ? thisSession.session_plan_id\n            : props.application_sessions[0].session_plan_id,\n          (status: boolean, msg: string) => {\n            setLoading(status);\n            if (!status && msg.length) {\n              props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        );\n      }\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!props.documentReducer.documentCategory && loadingDocuments) {\n      props.getDocumentCategory();\n      setLoadingDocuments(false);\n    } else if (loadingDocuments) {\n      setLoadingDocuments(false);\n    }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!props.documentReducer.documentSubCategory && loadingClarifications) {\n      props.getDocumentSubCategory();\n      setLoadingClarifications(false);\n    } else if (loadingClarifications) {\n      setLoadingClarifications(false);\n    }\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!props.documentReducer.documentFields && loadingFields) {\n      props.getDocumentFields();\n      setLoadingFields(false);\n    } else if (loadingFields) {\n      setLoadingFields(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allClaims === null && thisPeriod !== null) {\n      props.getAllClaims(\n        2,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingClaims(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingClaims) {\n      setLoadingClaims(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allApplications === null && thisPeriod !== null) {\n      props.getAllApplications(\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingApplications(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingApplications) {\n      setLoadingApplications(false);\n    }\n\n    if (props.systemPositions === null) {\n      props.getPositions((status: boolean, msg: string) => {\n        setLoadingPosition(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (loadingPosition) {\n      setLoadingPosition(false);\n    }\n\n    // LOADING COURSE ====================================\n    if (\n      props.courses === null ||\n      (props.courses.length === 0 && loadingCourses)\n    ) {\n      props.loadCourses(setLoadingCourses);\n    } else if (loadingCourses) {\n      setLoadingCourses(false);\n    }\n  }, [\n    loadingApplications,\n    loadingClaims,\n    loadingClarifications,\n    loadingCourses,\n    loadingDocuments,\n    loadingFields,\n    loadingPosition,\n    loadingSession,\n    props,\n    thisPeriod,\n  ]);\n\n  if (\n    loading === true ||\n    props.courses === null ||\n    props.systemPositions === null\n  ) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  if (props.application_sessions && props.application_sessions.length === 0) {\n    return <NoSession />;\n  }\n\n  const displayClaimTitle = (thisClaim: CandidateClaimInterface): string => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      result =\n        thisClaim.userDetails.details.filter(\n          (item) => item.validation_status !== \"waiting\"\n        ).length > 0\n          ? adminDisplayClaimTitle(\n              props.documentReducer,\n              thisClaim.userDetails.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ),\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (props.claiming.allApplications) {\n        let thisApplication = props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          props.claiming.allApplications &&\n          props.systemPositions\n        ) {\n          let thisPosition = props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    if (\n      thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n      props.courses &&\n      props.claiming.allAnswer\n    ) {\n      let thisAnswer = getCourseIdBySheetId(\n        props.claiming.allAnswer,\n        thisClaim.claiming_on_id\n      );\n      if (thisAnswer && getCourseById(props.courses, thisAnswer.course)) {\n        result =\n          \"Exam of \" +\n          getCourseById(props.courses, thisAnswer.course)!.course_name;\n      } else {\n        result = \"Unknown exam\";\n      }\n    }\n\n    return result;\n  };\n\n  const getClaimInstitute = (\n    thisClaim: CandidateClaimInterface\n  ): string | null => {\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      return null;\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (props.claiming.allApplications) {\n        let thisApplication = props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          props.claiming.allApplications &&\n          props.systemPositions\n        ) {\n          // return thisApplication.\n          let thisPosition = props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            return thisPosition.education_institute_id.education_institute_id;\n          }\n        }\n      }\n    }\n\n    return null;\n  };\n\n  const onPeriodChange = (period_id: string) => {\n    setPeriodChanged(true);\n    props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && setPeriodChanged(false);\n      if (status === false && msg.length) {\n        props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  const isClaimTypeActive = (\n    selectedType: PlansTypeKeys | \"all\",\n    currentType: PlansTypeKeys | \"all\"\n  ): boolean => {\n    if (currentType === \"all\" && selectedType === \"all\") {\n      return true;\n    } else if (currentType !== \"all\" && selectedType !== \"all\") {\n      if (currentType === selectedType) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n    } else {\n      setSortOrder(\"ASC\");\n    }\n    setSortProperty(thisProperty);\n    setIsSorted(true);\n  };\n\n  const ClaimTypes = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    type: PlansTypeKeys | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: number;\n      type: PlansTypeKeys | \"all\";\n    }[] = [{ title: \"All types\", count: claims.length, type: \"all\" }];\n\n    Object.values(PlansTypeKeys).forEach((PlansKey) => {\n      if (PlansKey !== PlansTypeKeys.MARKS_PUBLICATION) {\n        output.push({\n          title: capitalizeFirstLetter(reportClaimType(PlansKey)),\n          count:\n            claims.length > 0\n              ? claims.filter(\n                  (itm) => itm.claim_type === reportClaimType(PlansKey)\n                ).length\n              : 0,\n          type: PlansKey,\n        });\n      }\n    });\n\n    return output;\n  };\n\n  const ClaimLevels = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    level: number | \"all\";\n  }[] => {\n    let output: {\n        title: string;\n        count: number;\n        level: number | \"all\";\n      }[] = [{ title: \"All levels\", count: claims.length, level: \"all\" }],\n      levels: number[] = [1, 2];\n    for (let i in levels) {\n      output.push({\n        title: \"Level \" + levels[i],\n        count: claims.filter((itm) => itm.claim_level === levels[i]).length,\n        level: levels[i],\n      });\n    }\n    return output;\n  };\n\n  const updateReportContent = (key: claimReportContentKeyInterface) => {\n    let index: number = reportContent.findIndex((item) => item.key === key);\n    let newArray: claimReportContentInterface[] = reportContent;\n    newArray[index].status = !newArray[index].status;\n    setReportContent(newArray);\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      setSelectAll(false);\n    } else {\n      setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    updateClaimToPrint();\n  };\n\n  const updateClaimToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (thisPeriod) {\n      let title = \"Claim Report \" + thisPeriod.session_plan_name;\n      // if (thisLevel!==\"all\") {\n      //   title = \"Claim Report - Level \"+thisLevel + thisPeriod.session_plan_name;\n      // }\n      setReportTitle(title);\n    }\n    // UPDATE CONTENT =============================\n    if (props.claiming.allClaims && props.claiming.claimTypes) {\n      let arrayNew: ClaimToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in props.claiming.allClaims) {\n        if (\n          Object.prototype.hasOwnProperty.call(props.claiming.allClaims, key)\n        ) {\n          for (const keyClaim in props.claiming.allClaims[key].claims) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                props.claiming.allClaims[key].claims,\n                keyClaim\n              )\n            ) {\n              const element = props.claiming.allClaims[key].claims[keyClaim];\n              const thisType = whichClaimType(props.claiming.allClaims[key]);\n              let dataArray: ClaimToPrintInterface = {\n                claim_id: n,\n                names:\n                  props.claiming.allClaims[key].userDetails.user_info.fname +\n                  \" \" +\n                  props.claiming.allClaims[key].userDetails.user_info.lname,\n                gender: props.claiming.allClaims[key].userDetails.user_info.sex\n                  ? \"Male\"\n                  : \"Female\",\n                national_id: props.claiming.allClaims[key].userDetails.n_id!,\n                phone: props.claiming.allClaims[key].userDetails.phone_number,\n                email: props.claiming.allClaims[key].userDetails.email,\n                claim_type: thisType ? thisType : \"\",\n                claim_level: element.level,\n                education_category: \"\",\n                claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n                date: DATE(element.createdAt),\n                decision: element.decision_taken_status\n                  ? element.decision_taken_status\n                  : \"PENDING\",\n                claim_title: displayClaimTitle(props.claiming.allClaims[key]),\n              };\n              for (const key in reportContent) {\n                if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n                  if (!reportContent[key].status) {\n                    delete dataArray[reportContent[key].key];\n                  }\n                }\n              }\n              arrayNew.push(dataArray);\n              n++;\n            }\n          }\n        }\n      }\n      setClaimToPrint(arrayNew);\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  const FC_ClaimData = (\n    allClaims: CandidateClaimInterface[] | null\n  ): ClaimToPrintInterface[] | null => {\n    if (allClaims === null) return null;\n    let arrayNew: ClaimToPrintInterface[] = [];\n    let n: number = 1;\n    // LOOP IN ALL CLAIM ONE BY ONE ###########################\n    for (const key in allClaims) {\n      if (Object.prototype.hasOwnProperty.call(allClaims, key)) {\n        // LOOP IN ALL CLAIM OF ONE FILE ONE BY ONE ===========================\n        for (const keyClaim in allClaims[key].claims) {\n          if (\n            Object.prototype.hasOwnProperty.call(\n              allClaims[key].claims,\n              keyClaim\n            )\n          ) {\n            const element = allClaims[key].claims[keyClaim];\n            const thisType = whichClaimType(allClaims[key]);\n            let dataArray: ClaimToPrintInterface = {\n              claim_id: n,\n              names:\n                allClaims[key].userDetails.user_info.fname +\n                \" \" +\n                allClaims[key].userDetails.user_info.lname,\n              gender: allClaims[key].userDetails.user_info.sex\n                ? \"Male\"\n                : \"Female\",\n              national_id: allClaims[key].userDetails.n_id!,\n              phone: allClaims[key].userDetails.phone_number,\n              email: allClaims[key].userDetails.email,\n              claim_type: thisType ? thisType : \"\",\n              claim_level: element.level,\n              education_category: getClaimInstitute(allClaims[key]),\n              claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n              date: DATE(element.createdAt),\n              decision: element.decision_taken_status\n                ? element.decision_taken_status\n                : \"PENDING\",\n              claim_title: displayClaimTitle(allClaims[key]),\n            };\n            // for (const key in reportContent) {\n            //   if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n            //     if (!reportContent[key].status) {\n            //       delete dataArray[reportContent[key].key];\n            //     }\n            //   }\n            // }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n      }\n    }\n    return arrayNew;\n  };\n\n  const resetReportContent = (currentState: boolean) => {\n    let newArray: claimReportContentInterface[] = reportContent;\n    for (const key in newArray) {\n      if (isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    setReportContent(newArray);\n    setSelectAll(!currentState);\n    updateClaimToPrint();\n  };\n\n  const isChangeAllowed = (key: claimReportContentKeyInterface): boolean => {\n    if (\n      key === claimReportContentKeyInterface.names ||\n      key === claimReportContentKeyInterface.decision ||\n      key === claimReportContentKeyInterface.claim_session ||\n      key === claimReportContentKeyInterface.claim_type ||\n      key === claimReportContentKeyInterface.date\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  const FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return;\n    }\n\n    if (thisPeriod) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: props.auth.user.fname + \" \" + props.auth.user.lname,\n        title: \"Claim Report\",\n        subjectTitle: \"Claim type\",\n        subject:\n          props.claiming.selectedClaimType === \"all\"\n            ? \"All Types\"\n            : props.claiming.selectedClaimType,\n        period: thisPeriod.session_plan_name,\n        footer: \"Online Recruitment\",\n        institute:\n          thisEducation === \"all\"\n            ? \"All institute\"\n            : thisEducation.education_category_title,\n      };\n      table && generatePDF(reportSettings, table, setDownloading);\n    }\n  };\n\n  const FC_FilterClaims = (\n    allClaims: ClaimToPrintInterface[],\n    claimType: PlansTypeKeys | \"all\",\n    claimLevel: number | \"all\",\n    institute: education_category | \"all\"\n  ): ClaimToPrintInterface[] => {\n    let result: ClaimToPrintInterface[] = allClaims;\n    if (claimType !== \"all\") {\n      result = result.filter((item) => item.claim_type === claimType);\n    }\n    if (claimLevel !== \"all\") {\n      result = result.filter((item) => item.claim_level === claimLevel);\n    }\n\n    if (institute !== \"all\") {\n      result = result.filter(\n        (item) =>\n          item.education_category === null ||\n          item.education_category === institute.education_institute_id\n      );\n    }\n\n    return result;\n  };\n\n  return (\n    <Fragment>\n      <SideNavigation>\n        <div className=\"flex flex-col mb-4\">\n          <span className=\"text-sm text-gray-600 mb-2\">\n            Education categories:\n          </span>\n          {props.schoolLevels.education_categories === null ||\n          loadingInstitutes ? (\n            <Loading />\n          ) : props.schoolLevels.education_categories.length === 0 ? (\n            <span>No result found</span>\n          ) : (\n            <Fragment>\n              <div\n                onClick={() => setThisEducation(\"all\")}\n                className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                  thisEducation === \"all\"\n                    ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                } font-bold flex flex-row items-center gap-2`}\n              >\n                {thisEducation === \"all\" ? (\n                  <MdRadioButtonChecked />\n                ) : (\n                  <MdRadioButtonUnchecked />\n                )}\n                <span>All</span>\n              </div>\n              {props.schoolLevels.education_categories.map((item, i) => (\n                <div\n                  onClick={() => setThisEducation(item)}\n                  key={i + 1}\n                  className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                    thisEducation !== \"all\" &&\n                    thisEducation.education_institute_id ===\n                      item.education_institute_id\n                      ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                      : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                  } font-bold flex flex-row items-center gap-2`}\n                >\n                  {thisEducation !== \"all\" &&\n                  thisEducation.education_institute_id ===\n                    item.education_institute_id ? (\n                    <MdRadioButtonChecked />\n                  ) : (\n                    <MdRadioButtonUnchecked />\n                  )}\n                  <span>{item.education_category_title}</span>\n                </div>\n              ))}\n            </Fragment>\n          )}\n        </div>\n        <div className=\"\">\n          <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n          <div\n            onClick={() => setSelectPeriod(true)}\n            className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n          >\n            {thisPeriod !== null\n              ? `${thisPeriod.session_plan_name} - ${thisPeriod.period}`\n              : \"Filter by period\"}\n            <FiEdit className=\"text-3xl text-blue-600\" />\n          </div>\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim types:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimTypes(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() =>\n                    props.setSelectedClaimType(reportClaimType(item.type))\n                  }\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={isClaimTypeActive(\n                      props.claiming.selectedClaimType,\n                      item.type\n                    )}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim level:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimLevels(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() => setThisLevel(item.level)}\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={item.level === thisLevel}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n      </SideNavigation>\n      <section>\n        {/* REPORT TITLE ============================================ */}\n        <div className=\"grid md:grid-cols-12\">\n          <div className=\"col-span-8\">\n            <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n              <span className=\"text-3xl font-bold text-gray-700\">\n                Claim report\n              </span>\n            </div>\n          </div>\n          <div className=\"col-span-4\">\n            <div className=\"float-right mt-2\">\n              {props.claiming.allClaims && props.claiming.allClaims.length > 0 && (\n                <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                  <BiExport className=\"text-2xl text-gray-500\" />\n                  <span className=\"text-gray-500\">Export as</span>\n                  <button\n                    className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                    disabled={loading}\n                    onClick={() => {\n                      updateClaimToPrint();\n                      setGenerateReportModal({\n                        reportType: \"EXCEL\",\n                        status: true,\n                      });\n                    }}\n                  >\n                    EXCEL\n                  </button>\n                  <button\n                    className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                      downloading && \"cursor-wait\"\n                    }`}\n                    onClick={() => FC_GeneratePDF()}\n                    disabled={loading || downloading}\n                  >\n                    PDF\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        {/* END REPORT TITLE ============================================ */}\n        <div className=\"bg-white my-4\">\n          <div className=\"w-full px-2 py-2\">\n            <input\n              onChange={(e) => setSearchInput(e.target.value)}\n              type=\"text\"\n              value={searchInput}\n              placeholder=\"Search...\"\n              className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n              disabled={\n                props.claiming.allClaims === null ||\n                props.claiming.claimTypes === null ||\n                FC_ClaimData(props.claiming.allClaims) === null ||\n                periodChanged\n              }\n            />\n          </div>\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"names\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Applicant names <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"gender\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Gender <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_title\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Title <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_type\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Type <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_level\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Level <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"decision\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Status <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"date\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Date <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.claiming.allClaims === null ||\n              props.claiming.claimTypes === null ||\n              periodChanged ? (\n                <TableLoading cols={10} />\n              ) : FC_ClaimData(props.claiming.allClaims) === null ? (\n                <TableLoading cols={10} />\n              ) : FC_FilterClaims(\n                  FC_ClaimData(props.claiming.allClaims)!,\n                  props.claiming.selectedClaimType,\n                  thisLevel,\n                  thisEducation\n                ).length === 0 ? (\n                <tr>\n                  <td colSpan={10} className=\"px-2 py-2\">\n                    <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                      <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                      <span className=\"text-sm font-bold\">\n                        No result found! Please try to search again\n                      </span>\n                      <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                        <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                          <li\n                            onClick={() => setSelectPeriod(true)}\n                            className=\"underline text-gray-500 cursor-pointer\"\n                          >\n                            Filter by period\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim type\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim Level\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              ) : (\n                sortThisArray(\n                  isSorted,\n                  searchData(\n                    FC_FilterClaims(\n                      FC_ClaimData(props.claiming.allClaims)!,\n                      props.claiming.selectedClaimType,\n                      thisLevel,\n                      thisEducation\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                    } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">{item.names}</td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.gender}</td>\n                    <td className=\"px-2 py-2\">{item.phone}</td>\n                    <td className=\"px-2 py-2\">{item.claim_title}</td>\n                    <td className=\"px-2 py-2\">{item.claim_type}</td>\n                    <td className=\"px-2 py-2\">{\"Level \" + item.claim_level}</td>\n                    <td className=\"px-2 py-2\">\n                      {item.decision}\n                      {/* {capitalizeFirstLetter(item.decision)} */}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.date}</td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </section>\n      {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {generateReportModal !== null && generateReportModal.status === true && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-2xl text-gray-500\">\n                  Generating Report contents\n                </span>\n                <span className=\"text-sm text-blue-600 font-normal\">\n                  Generating {generateReportModal.reportType} Report\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => setGenerateReportModal(null)}\n          backDropClose={false}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-6\">\n            <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n              <div className=\"flex flex-col\">\n                <label>Title</label>\n                <input\n                  type=\"text\"\n                  className={`text-left input-white w-20 inline-block ${\n                    formError && formError.element === \"report_title\"\n                      ? \"border-red-500\"\n                      : \"border-gray-500\"\n                  } border-2`}\n                  placeholder=\"Sub Category Title\"\n                  value={reportTitle}\n                  onChange={(e) => {\n                    setFormError(null);\n                    setReportTitle(e.target.value);\n                  }}\n                  disabled={loading}\n                />\n                {formError && formError.element === \"report_title\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n              <div className=\"flex flex-col mt-2\">\n                <label>Report content</label>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                  {reportContent.map((item, index) => (\n                    <div\n                      key={index}\n                      className={`flex items-center gap-1 ${\n                        isChangeAllowed(item.key)\n                          ? \"cursor-pointer\"\n                          : \"cursor-not-allowed\"\n                      }`}\n                      onClick={() =>\n                        isChangeAllowed(item.key) &&\n                        updateReportContent(item.key)\n                      }\n                      title={\n                        !isChangeAllowed(item.key)\n                          ? \"Required for every report!\"\n                          : \"\"\n                      }\n                    >\n                      {item.status ? (\n                        <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                      ) : (\n                        <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                      )}\n                      <span>{item.title}</span>\n                    </div>\n                  ))}\n                </div>\n                {formError && formError.element === \"report_content\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n            </div>\n            <div className=\"flex justify-between mb-2 mt-4\">\n              <div\n                className={`flex items-center gap-1 cursor-pointer`}\n                onClick={() => resetReportContent(selectAll)}\n              >\n                {selectAll ? (\n                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                ) : (\n                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                )}\n                <span>Select all</span>\n              </div>\n\n              {claimToPrint && !loading && (\n                <ExportToExcel\n                  fileData={claimToPrint}\n                  fileName={reportTitle}\n                  btnName=\"Generate\"\n                />\n              )}\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {selectPeriod && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <MdHistory className=\"text-5xl text-blue-600\" />\n              <span className=\"flex flex-col\">Choose a period</span>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => thisPeriod !== null && setSelectPeriod(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <ChooseSession\n            allSession={props.application_sessions}\n            setSelectSession={(value: SessionPlanInterface | \"all\") => {\n              value !== \"all\" && setThisPeriod(value);\n              value !== \"all\" && onPeriodChange(value.session_plan_id);\n              value !== \"all\" && setSelectPeriod(false);\n            }}\n            chooseAll={false}\n            currentSelected={thisPeriod ? thisPeriod : \"all\"}\n          />\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  courses: course[] | null;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    courses: course.courses,\n    documentReducer: document,\n    schoolLevels,\n  };\n};\n\nexport const ClaimingReport = connect(mapStateToProps, {\n  getAllClaims,\n  getAllAnswers,\n  GetClaimingTypes,\n  loadCourses,\n  getAllApplications,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  setSelectedClaimType,\n  getPositions,\n  PushPopupAlert,\n})(_ClaimingReport);\n"],"sourceRoot":""}
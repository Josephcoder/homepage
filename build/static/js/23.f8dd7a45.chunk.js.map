{"version":3,"sources":["shared/dataTest.tsx","utils/question_bank.ts","components/Table/Table.tsx","components/Navigation/SideNavigation.tsx","actions/session.ts","actions/document.ts","containers/SessionSettings/NoSession.tsx","components/Loading/TableLoading.tsx","containers/Claimings/Candidate/FormPlacementList.tsx","containers/Claimings/Candidate/ClaimForm.tsx","utils/ExportToExcel.tsx","containers/Claimings/ClaimDocView.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","components/AnswersDetails/CandidateAnswersDetails.tsx","containers/SessionSettings/ChooseSession.tsx","containers/Positions/ViewRequirements.tsx","components/AnswersDetails/AnswersDetails.tsx","containers/Claimings/Candidate/ApplicationFormView.tsx","components/ClaimForm/ClaimFormComponent.tsx","containers/Claimings/Candidate/ExaminationFormView.tsx","containers/DoExam/DoExamTitle/FindAnswer.tsx","containers/DoExam/DoExamTitle/FindAnswerHybrid.tsx","containers/Claimings/Candidate/FormExamList.tsx","containers/CandidateExams/CandidateExams.tsx","containers/Claimings/Admin/AdminFilterByType.tsx","containers/Claimings/ClaimHeaderTitle.tsx","containers/Claimings/Candidate/ChooseReason.tsx","containers/Claimings/Candidate/DocFormView.tsx","containers/Claimings/Candidate/FormApplicationList.tsx","containers/Claimings/Candidate/FormDocumentList.tsx","containers/SessionSettings/ApplicationSession/SessionDetails.tsx","containers/Claimings/Candidate/index.tsx","containers/Claimings/ClaimApplView.tsx","containers/Claimings/ClaimExamView.tsx","containers/Claimings/ClaimPlacementView.tsx","containers/Claimings/Candidate/FilterByType.tsx","containers/Admin/Claiming/ClaimingReport.tsx"],"names":["isEmptyOrSpaces","str","match","getRoleById","roles","roleId","filter","role","system_user_role_id","getInstituteById","institutes","instituteId","find","item","education_institute_id","getPositionById","positions","position_id","position","toTwoDigit","value","dec","Math","floor","slice","toString","substr","toAnyDigit","padding","zeroes","Array","join","capitalizeFirstLetter","charAt","toUpperCase","ExamTimeStatus","today","moment","tz","TimeZone","getQuestionType","question_types","type_id","type","check","itm","id","undefined","check_type","questionTypeElements","key","element","findTotalMarks","courses","results","sum","course","test","course_id","total_marks","toFixed","CheckIfExamDone","res","validateCalculatedFormula","formula","characters","length","status","msg","el","nextCharacter","i","convertFromStringToDate","responseDate","dateComponents","split","datePieces","timePieces","Date","parseInt","validateExamDate","exam_date","start_time","end_time","Expired","toDay","examDate","startTime","getDate","getMonth","getFullYear","endTime","Waiting","getTime","Online","proctoringDefaultRules","rule","caption","Table","props","table","tr","tableId","result","charactersLength","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","pagination","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","from","keys","map","style","display","className","tableSize","search","searchBG","placeholder","onChange","e","data","filterType","td","rows","cols","toLowerCase","columns","textContent","innerText","indexOf","filterTable","target","disabled","loading","Number","tableClass","rounded","hideColumns","thColor","column","index","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","_SideNavigation","componentDidMount","PageHasSubNav","componentWillUnmount","state","this","auth","isAuthenticated","navActive","system","navigation","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","GetPlansTypes","callback","dispatch","a","setAxiosToken","axios","get","API","CLAIMING","console","log","GET_PLANS_TYPES","plan_types","ActionTypes","payload","error","errorToText","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","is_active","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","createAcademicSession","CREATE_ACADEMIC_SESSION","GetAllAcademicSession","PLACEMENT","GET_ALL_ACADEMIC_SESSION","updateAcademicSession","UPDATE_ACADEMIC_SESSION","academicSessionActivation","ACADEMIC_SESSION_ACTIVATION","deleteAcademicSession","DELETE_ACADEMIC_SESSION","getActiveAcademicSession","GET_ACTIVE_ACADEMIC_SESSION","getDocumentCategory","AUTH","docCategory","GET_DOCUMENT_CATEGORY","createDocumentCategory","CREATE_DOCUMENT_CATEGORY","updateDocumentCategory","UPDATE_DOCUMENT_CATEGORY","deleteDocumentCategory","DELETE_DOCUMENT_CATEGORY","getDocumentSubCategory","docSubCategory","GET_DOCUMENT_SUB_CATEGORY","doc_SUB_category_error","createDocumentSubCategory","CREATE_DOCUMENT_SUB_CATEGORY","updateDocumentSubCategory","UPDATE_DOCUMENT_SUB_CATEGORY","deleteDocumentSubCategory","DELETE_DOCUMENT_SUB_CATEGORY","getDocumentFields","docFields","GET_DOCUMENT_FIELDS","createDocumentFields","CREATE_DOCUMENT_FIELDS","updateDocumentFields","reducer","UPDATE_DOCUMENT_FIELDS","deleteDocumentFields","DELETE_DOCUMENT_FIELDS","distinctCandidates","candidatesData","user_ids","candidate","forEach","includes","user_id","push","getCandidatesInInstitute","educatin_type_id","session_id","APPLICATION","GET_CANDIDATE_IN_INSTITUTE","verifyDocument","VERIFY_DOCUMENT","NoSession","TableLoading","displayCols","colsArray","memo","searchInput","setSearchInput","myPlacement","isClaimAllowed","myClaims","activeSession","session_plan_id","placed","_id","setChooseClaimFile","setViewThisFile","setClaimFileId","school","school_name","ClaimGetDocTitle","documentCategories","doc","DocCategory","DocSubCategory","DocField","DocTitle","sub_category_id","documentSubCategory","c","user_detail_subcategory_id","category_id","documentCategory","user_detail_category_id","category_subcategory_data","category_subcategory_Data_id","documentFields","category","sub_category","field","main","allClaim","period_id","claimOnId","claiming_on_id","ClaimForm","setLoading","setState","setLoadingForm","loadingForm","setFormError","formError","setAlertError","alertError","claimFileId","viewThisFile","chooseClaimFile","setChooseClaimReason","chooseClaimReason","setClaimReason","claimReason","setClaimComment","claimComment","isClaimTypeOpen","thisSession","PlansTypeKeys","plans","type_key","isPlanActive","DOCUMENT_VALIDATION","PLACEMENT_TRANSFER","displayClaimType","claimType","EXAMINATION","MARKS_PUBLICATION","loadExamAnswers","activeSessionPlan","getMyAnswers","PushPopupAlert","theme","PopupAlertTheme","danger","application_session","setFormState","thisClaimType","thisClaimTypeId","formType","documentReducer","claiming","claimReasons","getClaimReasons","getDocumentById","documents","doc_id","getApplicationById","applications","application_id","getExamById","exams","answer_sheet_id","getValidation","thisId","old_reason","old_status","old_evaluated_by","candidateDocuments","validated_by","comment","validation_status","candidateApplications","override_by","application_status","cleanToClose","response","loadUserById","getClaimTitle","position_title","myAnswer","getCourseIdBySheetId","getCourseById","course_name","getClaimInstitute","handleSubmit","preventDefault","toLocaleLowerCase","old_evaluator_email","old_evaluator_name","evaluator_email","evaluator_name","institute_id","email","user_info","fname","lname","post","user","default_claim_resaons","reason","createClaim","success","selectClaimType","thisClaim","getMyRejectedApplications","loadCourses","getMyRejectedDocuments","getMyPlacement","generateChooseFileTitle","formState","Modal","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","extraLarge","medium","body","footer","onSubmit","Object","values","replace","FormDocumentList","FormApplicationList","FormExamList","candidateAnswers","ChooseReason","allClaimReasons","resize","DocFormView","thisDoc","ApplicationFormView","thisApplication","ExaminationFormView","thisAnswerSheet","getMyClaims","GetClaimingTypes","ExportToExcel","fileData","fileName","btnName","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","isReclaimAllowed","claim_level","_thisClaim","claims","level","decision_taken_status","ClaimDecisionStatus","REJECTED","isClaimEvaluated","claim_status","ClaimStatus","EVALUATED","createReClaim","reClaimingMsg","warning","setLoadingRequest","put","setReClaimingMsg","setReClaiming","getReasonById","reason_id","setViewImage","viewImage","previous","evaluater","name","src","AUTH_FILES","files","alt","claim","showDate","createdAt","evaluation_comment","reClaiming","last_claim_status","PENDING","DELETED","loadingRequest","require","addFooters","pageCount","internal","getNumberOfPages","setFont","setFontSize","setPage","text","String","width","align","generatePDF","reportSettings","callBack","orientation","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","institute","lines","splitTextToSize","subject","pdfInMM","subjectTitle","getTextWidth","addPage","period","autoTable","html","startY","margin","horizontal","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","doneBy","DATE","save","returnPromise","then","CandidateAnswersDetails","tomorrow","setDate","date","setClaim","compareWithToday","exam_id","showAnswers","claim_type","file_id","isPlansActive","activePlans","plan","startDate","start_date","endDate","end_date","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","selectedPlan","setSelectedPlan","setSearch","allSession","chooseAll","currentSelected","setSelectSession","searchData","session_plan_name","type_title","ViewRequirements","requirements","colSpan","subcategory_title","field_id","field_title","subcategory_required","required","_AnswersDetails","setLoadingStatus","loadingStatus","questionTypes","loadQuestionTypes","candidateExam","user_exams_done","allAnswers","loadExamsDone","exam_paper","requestUserAnswers","userAnswersTotalMarks","user_answers","total","user_marks","user_exam_details","dangerouslySetInnerHTML","__html","discription","termes","questions","question_id","question","findQuestionType","questionTypeElementsType","Embedded","EmbeddedQuestion","language","answers","description","Hybrid","selectedLanguage","answersList","setSelectedExamQuestion","submitQuestionAnswer","submitExam","selectedExam","setSubmitModal","wholeQuestion","is_deleted","chapters","customNumber","marks","showCorrectAnswer","exam_total_marks","AnswersDetails","FC_GetProfileDetails","LoadCandidateApplications","setSelectedCandidateExam","setSelectedCourse","setSelectedPosition","InitializeExamDetails","AddUserApplication","loadApplicationPeriods","FC_ApplicationPositionDistinctCategory","thisPosition","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","req","thisRequirements","thisCategory","thisSubCategory","subcategory","thisField","position_requirement","category_title","subcategory_id","ApplicationStates","Rejected","school_level_id","school_level_name","education_category_title","course_code","NoResultThemes","Dark","allData","sheet_id","ClaimFormComponent","isDocumentIdValid","alert","info","isApplicationIdValid","app_id","app","isExamIdValid","exam","candidate_applications","_isDocumentIdValid","_isApplicationIdValid","_isExamIdValid","application_period","updatedAt","application_history","getClaimById","fileId","sessionId","claimShowAnswer","answer","rules","right_click_enabled","copy_enabled","paste_enabled","stop_candidate_when_comeback","allow_to_leave_browser","resultDiv","question_answers","subQuestionType","MultipleChoice","userAnswer","toMultipleChoice","SingleMultiple","userAnswerSingle","CalculatedMultipleChoice","userAnswer1","toCalculatedMultipleChoice","Matching","userAnswerMatch","toMatching","TrueFalse","userAnswerTureFalse","toTrueFalse","Numeric","userAnswerNumerical","toNumerical","SimpleCalculate","userAnswerSimpleCalculate","toSimpleCalculated","ShortAnswer","userAnswerShortAnswer","toShortAnswer","Essay","userAnswerEssay","toEssay","FindAnswer","UserAnswersSel","SubQ","sub_question","findQType","typeShort","reference","user_answer","testQ","changed","QuestionForHybrid","Calculated","FindAnswerHybrid","maxHeight","stri","fromCharCode","charCodeAt","getFailedExam","allCourses","tooday","myDate","todayConverted","ChangeLocationComponent","setDisplay","changeLocation","_CandidateExams","setloadingExamsDone","loadingExamsDone","loadCandidateExams","QBank","candidateExams","loadUserProfileDetails","InitializationFn","application","user_exams_temp","center_id","Shortlisted","doing_exam","periods","selected_period","district_id","room_id","loadUserApplications","findLocation","updateLocation","selectedCourse","centersModal","maxExamModal","selectedPosition","successMessage","updateLocationFunction","addLocation","location","proctoring_type","sex","applicationPeriods","removeDuplicatesExams","temp","removeDuplicatesNotPreparedExams","setTimeOut","temps","activeExams","selectApplication","setMaxExamModal","closeModal","selPeriod","FC_Access","UserAccessList","MY_APPLICATION","view","selected_exam_id","selected_exam_details","to","preparedExam","user_status","center_name","room_number","school_levels","UserExamStatus","Editing","Paused","Done","Removed","found","duration_min","getMinutesFromTwoDates","timeout","returnString","labels","days","notPreparedExam","positionCourses","CandidateExams","filterClaimsByClaimType","claimList","setSelectedClaimType","getAllClaims","loadingClaimTypes","setLoadingClaimTypes","claimTypes","countClaims","allClaims","Fragment","loadingClaims","selectedClaimType","ClaimHeaderTitle","isLoading","loadingSession","periodChanged","headerTitle","thisPeriod","sessions","application_sessions","selectPeriod","setThisPeriod","setLoadingSession","onPeriodChange","session","getRejectedApplicants","applicationData","objList","product","flag","prop","DocumentTitleData","documentData","documentTemp","company","end_year","names","phone_number","school_id","start_year","year","doc_title","getRejectedDocuments","rejected","isActivationAllowed","thisPlans","getPlanTypeByKey","allPlanTypes","viewThisSession","thisPlan","planEndDate","planStartDate","CLOSED","SessionDetails","handlePlanActivation","newState","window","confirm","newData","prototype","hasOwnProperty","call","allowed_claim_level","history","setViewThisSession","ClaimTypesEnum","setViewPosition","viewPosition","NoResult","thisExam","thisExamSheet","userDetails","district_name","loadingRejectedApplications","setLoadingRejectedApplications","loadingRejectedDocuments","setLoadingRejectedDocuments","COMPLETED","document_id","whichClaimType","marks_publication","placement","whichClaimStatus","classes","claim_id","displayDocClaimTitle","displayClaimTitle","allCourse","thisAnswer","Index","setViewClaim","viewClaim","setPeriodChanged","setClaimForm","claimForm","setClaimId","claimId","setSearchClaim","searchClaim","loadClaims","setSession","isDeleteAllowed","thisCLaim","Light","ClaimApplView","ClaimExamView","CandidateClaim","sessionPlan","allSessionPlans","reportClaimType","defaultReportContent","claimReportContentKeyInterface","national_id","gender","phone","claim_session","education_category","decision","claim_title","ClaimingReport","schoolLevels","getAllApplications","loadEducationCategories","thisLevel","setThisLevel","setLoadingClaims","loadingInstitutes","setLoadingInstitutes","downloading","setDownloading","claimToPrint","setClaimToPrint","sortProperty","setSortProperty","isSorted","setIsSorted","sortOrder","setSortOrder","generateReportModal","setGenerateReportModal","reportTitle","setReportTitle","reportContent","setReportContent","selectAll","setSelectAll","setSelectPeriod","thisEducation","setThisEducation","education_categories","setSort","thisProperty","updateClaimToPrint","arrayNew","n","keyClaim","dataArray","n_id","FC_ClaimData","isChangeAllowed","FC_FilterClaims","claimLevel","output","PlansKey","ClaimTypes","selectedType","currentType","levels","ClaimLevels","reportType","querySelectorAll","FC_GeneratePDF","sortThisArray","findIndex","newArray","isSelectAllNeeded","updateReportContent","currentState","resetReportContent"],"mappings":"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","file":"static/js/23.f8dd7a45.chunk.js","sourcesContent":["import { education_category } from \"../interfaces\";\nimport { PositionAPI } from \"../interfaces/position\";\nimport {\n  CustomeAccessInterface,\n  PostSchoolInterface,\n  RoleToUserInterface,\n  SchoolInfoInterface,\n  SystemUserRoleInterface,\n} from \"./interfaces\";\n\nexport const data_posts_school: PostSchoolInterface[] = [];\n\nexport const isEmptyOrSpaces = (str: string): boolean => {\n  return str === null || str.match(/^ *$/) !== null;\n};\n\nexport const getUserTitle = (\n  accessRoles: SystemUserRoleInterface[],\n  roleId: string\n): string => {\n  const result = accessRoles.find((e) => e.system_user_role_id === roleId);\n  return result ? result.role : \"\";\n};\n\nexport const getRoleById = (\n  roles: SystemUserRoleInterface[],\n  roleId: string\n): SystemUserRoleInterface => {\n  return roles.filter((role) => role.system_user_role_id === roleId)[0];\n};\n\nexport const getInstituteById = (\n  institutes: education_category[],\n  instituteId: string\n): education_category | undefined => {\n  return institutes.find((item) => item.education_institute_id === instituteId);\n};\n\nexport const getPositionById_old = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI => {\n  console.log({\n    positions,\n    position_id,\n    data: positions.filter(\n      (position) => position.position_id === position_id\n    )[0],\n  });\n  return positions.filter(\n    (position) => position.position_id === position_id\n  )[0];\n};\n\nexport const getPositionById = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI | undefined => {\n  return positions.find((position) => position.position_id === position_id);\n};\n\nexport const getSchoolById = (\n  schools: SchoolInfoInterface[],\n  school_id: string\n): SchoolInfoInterface => {\n  return schools.filter((school) => school.school_id === school_id)[0];\n};\n\nexport const getPostById = (\n  posts: PostSchoolInterface[],\n  post_id: string\n): PostSchoolInterface => {\n  return posts.filter((post) => post.school_id === post_id)[0];\n};\n\nexport const getPostsBySchoolId = (\n  posts: PostSchoolInterface[],\n  school_id: string\n): PostSchoolInterface[] => {\n  return posts.filter((post) => post.school_id === school_id);\n};\n\nexport const getPostsByIds = (\n  posts: PostSchoolInterface[],\n  school_id: string,\n  position_id: string\n): PostSchoolInterface[] => {\n  return posts.filter(\n    (post) => post.school_id === school_id && post.position_id === position_id\n  );\n};\n\nexport const displayDate = (dateToDisplay: Date): string => {\n  return new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\",\n  }).format(dateToDisplay);\n};\n\nexport const userAccess = (\n  defaultAccess: RoleToUserInterface,\n  customAccess: CustomeAccessInterface\n): RoleToUserInterface => {\n  // const data = defaultAccess.access.map((default,index,customAccess)=>{\n  //   let data_custom = customAccess\n  //   if\n  // })\n  // return customAccess.filter((custom) => custom.id === accecc_id)[0];\n  return defaultAccess;\n};\n\n// export const groupBy = (list: [], keyGetter: Function) => {\n//   const map = new Map();\n//   list.forEach((item) => {\n//     const key = keyGetter(item);\n//     const collection = map.get(key);\n//     if (!collection) {\n//       map.set(key, [item]);\n//     } else {\n//       collection.push(item);\n//     }\n//   });\n//   return map;\n// };\n\nexport const toTwoDigit = (value: number): string => {\n  var dec = value - Math.floor(value);\n  value = value - dec;\n  return (\"0\" + value).slice(-2) + dec.toString().substr(1);\n};\n\nexport const toAnyDigit = (\n  value: string | number,\n  padding: number = 3\n): string => {\n  var zeroes = new Array(padding + 1).join(\"0\");\n  return (zeroes + value).slice(-padding);\n};\n\nexport const capitalizeFirstLetter = (value: string): string => {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n};\n\nexport const isDateExpiried = (paramDate: string) => {\n  const thisDate = new Date(paramDate);\n  const today = new Date();\n  if (thisDate.getTime() < today.getTime()) {\n    return true;\n  }\n\n  return false;\n};\n","import { candidateExamStoreInterface } from \"../actions/candidate_exam\";\nimport {\n  applicationExamAPI,\n  ApplicationPeriodGet,\n} from \"../interfaces/application\";\nimport { ExamAnswerSheetDone } from \"../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../interfaces/position\";\nimport { questionType, questionTypeElements } from \"../interfaces/question\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"./app.config\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\nconst today = moment().tz(TimeZone);\n\nexport const getQuestionType = (\n  question_types: questionType[] | null,\n  type_id: string\n) => {\n  let type: questionTypeElementsType | null = null;\n  if (question_types !== null) {\n    let check = question_types.find((itm) => itm.id === type_id);\n    if (check !== undefined) {\n      let check_type = questionTypeElements.find(\n        (itm) => check && itm.key === check.element\n      );\n      if (check_type !== undefined) {\n        type = check_type.key;\n      }\n    }\n  }\n  return type;\n};\n\nexport const findTotalMarks = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  if (results !== null) {\n    let sum: number = 0;\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        sum = sum + test.total_marks;\n      }\n    }\n    return sum.toFixed(2);\n  } else {\n    return \"Wait...\";\n  }\n};\n\nexport const CheckIfExamDone = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  let res: boolean = false;\n  if (results !== null) {\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        res = true;\n      }\n    }\n  }\n  return res;\n};\n\nexport const CheckIfNoPendingExam = (\n  //NOT COMPLETE --> TO BE DONE\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  let res: boolean = false;\n  if (results !== null) {\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        res = true;\n      }\n    }\n  }\n  return res;\n};\n\nexport const validateCalculatedFormula = (\n  formula: string\n): { status: boolean; msg: string } => {\n  let characters: string[] = [];\n  if (\n    formula === undefined ||\n    formula === \"\" ||\n    formula.length === undefined ||\n    formula.length === 0\n  ) {\n    return {\n      status: false,\n      msg: `Please type a formula`,\n    };\n  }\n  if (formula.length < 3) {\n    return {\n      status: false,\n      msg: `The formula in not valid, it is not complete!`,\n    };\n  }\n  for (let el of formula) {\n    characters = [...characters, el];\n  }\n  if (characters[0] !== `\"`) {\n    return {\n      status: false,\n      msg: `Formula should start with (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length < 2) {\n    return {\n      status: false,\n      msg: `Formula is missing closing (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length > 2) {\n    return {\n      status: false,\n      msg: `Formula is invalid, because it has many (\") characters (${\n        characters.filter((itm) => itm === `\"`).length\n      })`,\n    };\n  }\n  if (\n    characters[characters.length - 1] !== `\"` &&\n    characters.filter((itm) => itm === `\"`).length === 2\n  ) {\n    let nextCharacter: string = \"\";\n    for (let i = 0; i < characters.length; i++) {\n      if (characters[i] === `\"` && i !== 0) {\n        nextCharacter = characters[i + 1];\n      }\n    }\n    if (nextCharacter !== `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing separation character (;) between formula and error`,\n      };\n    }\n    if (characters[characters.length - 1] === `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing error after (;) character`,\n      };\n    }\n  }\n  return {\n    status: true,\n    msg: `Formula is valid`,\n  };\n};\n\nexport function convertFromStringToDate(responseDate: string) {\n  let dateComponents = responseDate.split(\"T\");\n  let datePieces = dateComponents[0].split(\"-\");\n  let timePieces = dateComponents[1].split(\":\");\n  return new Date(\n    parseInt(datePieces[2]),\n    parseInt(datePieces[1]) - 1,\n    parseInt(datePieces[0]),\n    parseInt(timePieces[0]),\n    parseInt(timePieces[1]),\n    parseInt(timePieces[2])\n  );\n}\n\nexport enum ExamTimeStatus {\n  Waiting = \"Waiting\",\n  Online = \"Online\",\n  Expired = \"Expired\",\n}\n\nexport const validateExamDate = (\n  exam_date: string,\n  start_time: string,\n  end_time: string\n) => {\n  let status: ExamTimeStatus = ExamTimeStatus.Expired;\n  // Dates\n  const toDay: Date = new Date(today.toString());\n  const examDate = new Date(exam_date);\n\n  // Time\n  const startTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      start_time +\n      \":0\"\n  );\n  const endTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      end_time +\n      \":0\"\n  );\n\n  // check exam date\n  if (\n    examDate.getDate() > toDay.getDate() ||\n    examDate.getMonth() > toDay.getMonth() ||\n    examDate.getFullYear() > toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Waiting;\n  }\n\n  if (\n    examDate.getDate() < toDay.getDate() ||\n    examDate.getMonth() < toDay.getMonth() ||\n    examDate.getFullYear() < toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Expired;\n  }\n\n  if (\n    examDate.getDate() === toDay.getDate() &&\n    examDate.getMonth() === toDay.getMonth() &&\n    examDate.getFullYear() === toDay.getFullYear()\n  ) {\n    if (startTime.getTime() > toDay.getTime()) {\n      status = ExamTimeStatus.Waiting;\n    } else if (\n      startTime.getTime() <= toDay.getTime() &&\n      endTime.getTime() >= toDay.getTime()\n    ) {\n      status = ExamTimeStatus.Online;\n    } else {\n      status = ExamTimeStatus.Expired;\n    }\n  }\n  // console.log(\n  //   \"Dates comparison: \" + examDate.getDate() + \"=>\" + toDay.getDate()\n  // );\n  // console.log(\"Exam Status: \", status);\n  return status;\n};\n\nexport const InitializeExamsDone = (\n  selected_period: ApplicationPeriodGet | null,\n  selectedPosition: PositionAPI | null,\n  candidateExam: candidateExamStoreInterface,\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void,\n  user_id: string,\n  setLoadingExamsDone: (status: boolean) => void,\n  selectedExams: applicationExamAPI[] | null,\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void,\n  setLoadingExams: (status: boolean) => void\n) => {\n  if (selected_period !== null && selectedPosition !== null) {\n    loadExamsDone(\n      selected_period.session_plan_id,\n      user_id,\n      setLoadingExamsDone\n    );\n    for (let course of selectedPosition.courses) {\n      let testDone = candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = selectedExams?.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          InitializeExamDetails(\n            selected_period.session_plan_id,\n            course.course_id,\n            center_id.district_id,\n            center_id.center_id,\n            center_id.room_id,\n            selectedPosition,\n            false,\n            setLoadingExams\n          );\n        }\n      }\n    }\n  }\n};\n\nexport const getActiveExam = (\n  candidateExam: candidateExamStoreInterface\n): ExamAnswerSheetDone | null => {\n  if (candidateExam.user_exams_done.length > 0) {\n    for (let exam of candidateExam.user_exams_done) {\n      if (\n        validateExamDate(\n          exam.exam_date,\n          exam.exam_start_time,\n          exam.exam_end_time\n        ) === ExamTimeStatus.Online\n      ) {\n        return exam;\n      }\n    }\n  }\n  return null;\n};\n\nexport const proctoringDefaultRules: {\n  rule: string;\n  status: boolean;\n  caption: string;\n}[] = [\n  {\n    rule: \"right_click_enabled\",\n    status: false,\n    caption: \"Enable right click\",\n  },\n  {\n    rule: \"copy_enabled\",\n    status: false,\n    caption: \"Enable copy\",\n  },\n  {\n    rule: \"paste_enabled\",\n    status: false,\n    caption: \"Enable paste\",\n  },\n  {\n    rule: \"stop_candidate_when_comeback\",\n    status: false,\n    caption: \"Enable Candidate when coming back\",\n  },\n  {\n    rule: \"allow_to_leave_browser\",\n    status: false,\n    caption: \"Enable to leave browser\",\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = (props) => {\n  const startPage = 1;\n  const tableId =\n    !props.tableId || props.tableId === \"myTable\" ? FC_makeID() : props.tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    props.pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId!)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < props.columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${props.tableSize} overflow-x-auto`}>\n      {/* search box  */}\n      {props.search && (\n        <div className={`${props.searchBG} w-full mb-2`}>\n          {props.search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={props.loading}\n              />\n\n              {props.pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={props.loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"overflow-x-auto w-full\">\n        <table\n          className={\n            props.tableClass\n              ? props.tableClass\n              : `w-full shadow ${\n                  props.rounded && \"sm:rounded-lg\"\n                } table-auto order-table`\n          }\n          id={tableId}\n        >\n          {!props.hideColumns && (\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n              <tr\n                className={`text-left tracking-wide bg-${props.thColor}-100 border-b-2 border-${props.thColor}-500 text-${props.thColor}-600`}\n              >\n                {props.columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className={`${column.padding} text-${\n                      column.alignText\n                    } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                    onClick={() =>\n                      column.isSortAllowed && sortThisColumn(tableId, index)\n                    }\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      {column.columnTitle}\n                      {column.isSortAllowed && <BiSort />}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n            {props.rows()}\n          </tbody>\n        </table>\n        {props.pagination && (\n          <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n            <div>\n              <span className=\"text-xs xs:text-sm text-gray-900\">\n                Showing 1 to {pageSize} of {totalItems - 1} Entries\n              </span>\n            </div>\n            <div>\n              <nav className=\"inline-flex shadow-sm\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                      currentPage !== 1 && \"bg-white\"\n                    }`}\n                    aria-label=\"Previous\"\n                    disabled={currentPage === 1 || props.loading}\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                  >\n                    <MdNavigateBefore className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <div>\n                  {pages &&\n                    pages.map((page, pageIndex) => (\n                      <button\n                        key={pageIndex}\n                        className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                          page !== currentPage\n                            ? \"bg-white\"\n                            : \"bg-gray-100 cursor-default\"\n                        }`}\n                        disabled={page === currentPage || props.loading}\n                        onClick={() => setCurrentPage(page)}\n                      >\n                        {page}\n                      </button>\n                    ))}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                      currentPage !== totalPages && \"bg-white\"\n                    }`}\n                    aria-label=\"Next\"\n                    disabled={currentPage === totalPages || props.loading}\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                  >\n                    <MdNavigateNext className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport {\n  AcademicSessionInterface,\n  PlansTypeInterface,\n  SessionPlanInterface,\n} from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\n// GET ALL ACADEMIC SESSION\nexport interface GetAllAcademicSessionAction {\n  type: ActionTypes.GET_ALL_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface[];\n}\n\n// CREATE ACADEMIC SESSION\nexport interface CreateAcademicSessionAction {\n  type: ActionTypes.CREATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// UPDATE ACADEMIC SESSION\nexport interface UpdateAcademicSessionAction {\n  type: ActionTypes.UPDATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// ACTIVATE ACADEMIC SESSION\nexport interface ActivateAcademicSessionAction {\n  type: ActionTypes.ACADEMIC_SESSION_ACTIVATION;\n  payload: AcademicSessionInterface;\n}\n\n// DELETE ACADEMIC SESSION\nexport interface DeleteAcademicSessionAction {\n  type: ActionTypes.DELETE_ACADEMIC_SESSION;\n  payload: string;\n}\n\n// GET ACTIVE ACADEMIC SESSION\nexport interface GetActiveAcademicSessionAction {\n  type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface | \"none\";\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions\n  | GetAllAcademicSessionAction\n  | CreateAcademicSessionAction\n  | UpdateAcademicSessionAction\n  | ActivateAcademicSessionAction\n  | DeleteAcademicSessionAction\n  | GetActiveAcademicSessionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// CREATE ACADEMIC SESSION\nexport const createAcademicSession = (\n  data: AcademicSessionInterface\n): CreateAcademicSessionAction => {\n  return {\n    type: ActionTypes.CREATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ALL ACADEMIC SESSION ==========================\nexport const GetAllAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface[]>(\n        `${API.PLACEMENT}/postrequestperiod/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: AcademicSessionInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      console.log(\"====================================\");\n      console.log({ GetAllAcademicSession: res });\n      console.log(\"====================================\");\n      dispatch<GetAllAcademicSessionAction>({\n        type: ActionTypes.GET_ALL_ACADEMIC_SESSION,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// UPDATE ACADEMIC SESSION\nexport const updateAcademicSession = (\n  data: AcademicSessionInterface\n): UpdateAcademicSessionAction => {\n  return {\n    type: ActionTypes.UPDATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// ACTIVATE ACADEMIC SESSION\nexport const academicSessionActivation = (\n  data: AcademicSessionInterface\n): ActivateAcademicSessionAction => {\n  return {\n    type: ActionTypes.ACADEMIC_SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE ACADEMIC SESSION\nexport const deleteAcademicSession = (\n  data: string\n): DeleteAcademicSessionAction => {\n  return {\n    type: ActionTypes.DELETE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface>(\n        `${API.PLACEMENT}/postrequestperiod/one`\n      );\n      console.log({ GET_ACTIVE_ACADEMIC_SESSION: res.data });\n      let session_plan: AcademicSessionInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveAcademicSessionAction>({\n        type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  CandidatesInterface,\n  DocumentCategoryInterface,\n  DocumentFieldsInterface,\n  DocumentSubCategoryInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { VerifyDocumentInterface } from \"./users\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CATEGORY\nexport interface GetDocumentCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface[];\n}\n\nexport interface CreateDocumentCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface UpdateDocumentCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface DeleteDocumentCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_CATEGORY;\n  payload: string;\n}\n\n// SUB CATEGORY\nexport interface GetDocumentSubCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface[];\n}\n\nexport interface CreateDocumentSubCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface UpdateDocumentSubCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface DeleteDocumentSubCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY;\n  payload: string;\n}\n\n// FIELDS\nexport interface GetDocumentFieldsAction {\n  type: ActionTypes.GET_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface[];\n}\n\nexport interface CreateDocumentFieldsAction {\n  type: ActionTypes.CREATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface UpdateDocumentFieldsAction {\n  type: ActionTypes.UPDATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface DeleteDocumentFieldsAction {\n  type: ActionTypes.DELETE_DOCUMENT_FIELDS;\n  payload: string;\n}\n\n// DOCUMENT CHECKING\nexport interface GetCandidatesInInstituteAtion {\n  type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE;\n  payload: CandidatesInterface[];\n}\n\nexport interface VerifyDocumentAction {\n  type: ActionTypes.VERIFY_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type DocumentCategoryActionType =\n  | GetDocumentCategoryAction\n  | CreateDocumentCategoryAction\n  | UpdateDocumentCategoryAction\n  | DeleteDocumentCategoryAction\n  | GetDocumentSubCategoryAction\n  | CreateDocumentSubCategoryAction\n  | UpdateDocumentSubCategoryAction\n  | DeleteDocumentSubCategoryAction\n  | GetDocumentFieldsAction\n  | CreateDocumentFieldsAction\n  | UpdateDocumentFieldsAction\n  | DeleteDocumentFieldsAction\n  | GetCandidatesInInstituteAtion\n  | VerifyDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CATEGORY\n\nexport const getDocumentCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get(`${API.AUTH}/detailcategory`);\n      console.log({ docCategory: res });\n      dispatch<GetDocumentCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_CATEGORY,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n    }\n  };\n};\n\nexport const createDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// SUB CATEGORY\nexport const getDocumentSubCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentSubCategoryInterface[]>(\n        `${API.AUTH}/detailsubcategory`\n      );\n      console.log({ docSubCategory: res });\n      dispatch<GetDocumentSubCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentSubCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentSubCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentSubCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentSubCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// FIELDS\nexport const getDocumentFields = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentFieldsInterface[]>(\n        `${API.AUTH}/categorysubcatedata`\n      );\n      console.log({ docFields: res });\n      dispatch<GetDocumentFieldsAction>({\n        type: ActionTypes.GET_DOCUMENT_FIELDS,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentFields = (data: DocumentFieldsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentFieldsAction>({\n      type: ActionTypes.CREATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentFields = (data: DocumentFieldsInterface) => {\n  console.log({ reducer: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentFieldsAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentFields = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentFieldsAction>({\n      type: ActionTypes.DELETE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\n// REMOVE DUPLICATION IN CANDIDATES IN EDUCATION CATEGORY PER SESSION\nconst distinctCandidates = (\n  candidatesData: CandidatesInterface[]\n): CandidatesInterface[] => {\n  let result: CandidatesInterface[] = [];\n  let user_ids: string[] = [];\n  const newArray: CandidatesInterface[] = candidatesData.filter((candidate) => {\n    return candidate !== null && candidate !== undefined;\n  });\n  newArray.forEach((candidate) => {\n    if (!user_ids.includes(candidate.user_id)) {\n      result.push(candidate);\n      user_ids.push(candidate.user_id);\n    }\n  });\n  return result;\n};\n// CANDIDATE IN EDUCATION CATEGORY PER SESSION\nexport const getCandidatesInInstitute = (\n  educatin_type_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\", null);\n    try {\n      setAxiosToken();\n      const res = await axios.get<CandidatesInterface[]>(\n        `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({\n        getCandidatesInInstitute: res,\n        distinctCandidates: distinctCandidates(res.data),\n      });\n      console.log(\"====================================\");\n      dispatch<GetCandidatesInInstituteAtion>({\n        type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE,\n        payload: distinctCandidates(res.data),\n        // payload: response.data,\n      });\n      callback(false, \"\", distinctCandidates(res.data));\n    } catch (error) {\n      console.log({ getCandidatesInInstitute: error });\n      callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const verifyDocument = (data: VerifyDocumentInterface) => {\n  console.log(\"================verifyDocument====================\");\n  console.log({ verifyDocument: data });\n  console.log(\"================verifyDocument====================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyDocumentAction>({\n      type: ActionTypes.VERIFY_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import React from \"react\";\nimport { MdInfoOutline } from \"react-icons/md\";\n\nconst NoSession = () => {\n  return (\n    <div className=\"my-5\">\n      <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n        <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n        <div className=\"text-center flex flex-col\">\n          <span className=\"text-2xl md:text-4xl font-extrabold\">\n            No session available\n          </span>\n          <span className=\"text-lg\">\n            Please Wait for the system to publish the sessions or contact the\n            administrator\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoSession;\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormPlacementListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  myPlacement: candidatePlacementInterface | null;\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n\n  // REDUX //////////////////////\n};\n\nconst FormPlacementList: React.FC<FormPlacementListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            props.myPlacement === null ||\n            isClaimAllowed(\n              props.myClaims,\n              props.activeSession.session_plan_id,\n              props.myPlacement.placed._id\n            )\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.myPlacement ? (\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            props.myPlacement.placed._id\n          ) && (\n            <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(props.myPlacement!.placed._id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  Placed on {props.myPlacement.placed.school.school_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(props.myPlacement!.placed._id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          )\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No placement to claim on!\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\n// const mapStateToProps = ({\n//   course,\n// }: StoreState): {\n//   courses: course[] | null;\n// } => {\n//   return {\n//     courses: course.courses,\n//   };\n// };\nexport default React.memo(connect(null, {})(FormPlacementList));\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  course,\n  PlansInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { isPlanActive } from \"../../SessionSettings/ApplicationSession/SessionDetails\";\nimport ApplicationFormView from \"./ApplicationFormView\";\nimport ChooseReason from \"./ChooseReason\";\nimport DocFormView from \"./DocFormView\";\nimport ExaminationFormView from \"./ExaminationFormView\";\nimport FormApplicationList from \"./FormApplicationList\";\nimport FormDocumentList from \"./FormDocumentList\";\nimport FormExamList, {\n  getCourseById,\n  getCourseIdBySheetId,\n} from \"./FormExamList\";\nimport FormPlacementList from \"./FormPlacementList\";\n\nexport const ClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: DocumentClaimUser\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data &&\n    doc.category_subcategory_data.category_subcategory_Data_id.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    console.log({ doc });\n    DocField = documentCategories.documentFields.filter(\n      (c) =>\n        c._id === doc.category_subcategory_data?.category_subcategory_Data_id\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const isClaimAllowed = (\n  allClaim: CandidateClaimInterface[],\n  period_id: string,\n  claimOnId: string\n): boolean => {\n  if (\n    allClaim.find(\n      (item) =>\n        item.period_id === period_id && item.claiming_on_id === claimOnId\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\ntype ClaimFormProps = {\n  // REQUIRED PROPS\n  formState: boolean;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getMyPlacement: Function;\n  getClaimReasons: Function;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  chooseClaimReason: boolean;\n  claimReason: claimReasonInterface | null;\n  myPlacement: candidatePlacementInterface | null;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n};\n\nclass ClaimForm extends Component<ClaimFormProps, ClaimFormState> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      myPlacement: this.props.claiming.myPlacement,\n      chooseClaimReason: false,\n      claimReason: null,\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setChooseClaimReason = (data: boolean) => {\n    this.setState({ chooseClaimReason: data });\n  };\n\n  setClaimReason = (value: claimReasonInterface | null) => {\n    this.setState({ claimReason: value });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  isClaimTypeOpen = (\n    thisSession: SessionPlanInterface,\n    thisType: PlansTypeKeys\n  ): boolean => {\n    let data: PlansInterface | undefined;\n    if (thisType === PlansTypeKeys.APPLICATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.PLACEMENT_TRANSFER) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: ClaimExamResultsDetails[]) => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ loadExamAnswers: data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (this.props.auth.application_session === null) {\n      this.props.PushPopupAlert({\n        title: \"No session active session\",\n        theme: PopupAlertTheme.danger,\n      });\n      this.props.setFormState(false);\n      this.setState({\n        claimFileId: \"\",\n        thisClaimType: null,\n        thisClaimTypeId: \"\",\n        claimComment: \"\",\n        chooseClaimFile: false,\n        formType: \"DEFAULT\",\n        viewThisFile: \"\",\n        formError: null,\n      });\n    } else {\n      if (this.props.documentReducer.documentCategory === null) {\n        this.props.getDocumentCategory();\n      }\n      if (this.props.documentReducer.documentSubCategory === null) {\n        this.props.getDocumentSubCategory();\n      }\n      if (this.props.documentReducer.documentFields === null) {\n        this.props.getDocumentFields();\n      }\n      if (this.props.claiming.claimReasons === null) {\n        this.props.getClaimReasons((status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        });\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getExamById = (\n    exams: ClaimExamResultsDetails[],\n    answer_sheet_id: string\n  ): ClaimExamResultsDetails | undefined => {\n    return exams.find((item) => item.answer_sheet_id === answer_sheet_id);\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  cleanToClose = (response?: boolean) => {\n    this.props.setFormState(false);\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  loadUserById = async (user_id: string, callback: Function) => {\n    if (isEmptyOrSpaces(user_id)) {\n      return this.props.PushPopupAlert({\n        title: \"No user id provided\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface>(\n        `${API.AUTH}/users/${user_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ loadUserById: res });\n      console.log(\"====================================\");\n      if (res) {\n        callback(res.data);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  getClaimTitle = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    if (\n      claimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = ClaimGetDocTitle(\n        this.props.documentReducer,\n        this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          this.state.claimFileId\n        )\n      ).main;\n    }\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = this.getApplicationById(\n        this.props.claiming.candidateApplications,\n        this.state.claimFileId\n      ).position.position_title;\n    }\n    if (\n      claimType === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.myAnswer &&\n      getCourseIdBySheetId(\n        this.props.claiming.myAnswer,\n        this.state.claimFileId\n      ) &&\n      getCourseById(\n        this.props.courses,\n        getCourseIdBySheetId(\n          this.props.claiming.myAnswer,\n          this.state.claimFileId\n        )!.course\n      )\n    ) {\n      result = getCourseById(\n        this.props.courses,\n        getCourseIdBySheetId(\n          this.props.claiming.myAnswer,\n          this.state.claimFileId\n        )!.course\n      )!.course_name;\n    }\n    if (\n      claimType === PlansTypeKeys.PLACEMENT_TRANSFER &&\n      this.state.myPlacement\n    ) {\n      result = \"Placed on \" + this.state.myPlacement.placed.school.school_name;\n    }\n\n    return result;\n  };\n\n  getClaimInstitute = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = this.getApplicationById(\n        this.props.claiming.candidateApplications,\n        this.state.claimFileId\n      ).position.education_institute_id.education_institute_id;\n    }\n\n    return result;\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (!this.state.claimReason) {\n      return this.setFormError({\n        element: \"claim_reason\",\n        msg: `Please select the reason of your claim!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.props.auth.application_session) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n\n    this.setLoadingForm(true);\n    let old_evaluator_email: string = \"info@system.com\";\n    let old_evaluator_name: string = \"System\";\n    let evaluator_email: string = \"\";\n    let evaluator_name: string = \"\";\n    let title: string = this.getClaimTitle(this.state.thisClaimType);\n    let institute_id: string = this.getClaimInstitute(this.state.thisClaimType);\n\n    if (\n      this.state.thisClaimType !== PlansTypeKeys.EXAMINATION &&\n      this.getValidation(this.state.claimFileId).old_evaluated_by !== \"system\"\n    ) {\n      await this.loadUserById(\n        this.getValidation(this.state.claimFileId).old_evaluated_by,\n        (data: UserInterface) => {\n          old_evaluator_email = data.email;\n          old_evaluator_name =\n            data.user_info.fname + \" \" + data.user_info.lname;\n        }\n      );\n    }\n\n    if (this.state.thisClaimType === PlansTypeKeys.EXAMINATION) {\n    }\n\n    try {\n      // console.log(\"====================================\");\n      // console.log({\n      //   claiming_on_id: this.state.claimFileId,\n      //   type_key: this.state.thisClaimType,\n      //   user: this.props.auth.user.user_id,\n      //   period_id: this.props.auth.application_session.session_plan_id,\n      //   default_claim_resaons: this.state.claimReason.id,\n      //   reason: this.state.claimComment,\n      //   old_reason:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"System\"\n      //       : this.getValidation(this.state.claimFileId).old_reason,\n      //   old_status:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"Failed\"\n      //       : this.getValidation(this.state.claimFileId).old_status,\n      //   old_evaluated_by:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"\"\n      //       : this.getValidation(this.state.claimFileId).old_evaluated_by,\n      //   old_evaluator_email,\n      //   old_evaluator_name,\n      //   evaluator_email,\n      //   evaluator_name,\n      //   title,\n      // });\n      // console.log(\"====================================\");\n\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.props.auth.application_session.session_plan_id,\n          default_claim_resaons: this.state.claimReason.id,\n          reason: this.state.claimComment,\n          old_reason:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"System\"\n              : this.getValidation(this.state.claimFileId).old_reason,\n          old_status:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Failed\"\n              : this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"\"\n              : this.getValidation(this.state.claimFileId).old_evaluated_by,\n          old_evaluator_email,\n          old_evaluator_name,\n          evaluator_email,\n          evaluator_name,\n          title,\n          institute_id,\n        }\n      );\n      console.log({ createClaim: res });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose(true);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingForm(false);\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n\n    if ((thisClaim as PlansTypeKeys) === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.candidateApplications === null) {\n        this.props.getMyRejectedApplications(\n          this.props.auth.user.user_id,\n          (\n            status: boolean,\n            msg: string,\n            data?: claimApplicationsInterface[]\n          ) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          }\n        );\n      }\n      if (\n        this.props.courses === null ||\n        (this.props.courses.length === 0 && this.state.loading)\n      ) {\n        this.props.loadCourses(this.setLoading);\n        this.setLoading(false);\n      } else {\n        this.setLoading(false);\n      }\n    } else if ((thisClaim as PlansTypeKeys) === PlansTypeKeys.EXAMINATION) {\n      if (\n        this.props.courses === null ||\n        (this.props.courses.length === 0 && this.state.loading)\n      ) {\n        this.props.loadCourses(this.setLoading);\n        this.setLoading(false);\n      } else {\n        this.setLoading(false);\n      }\n    } else if (\n      (thisClaim as PlansTypeKeys) === PlansTypeKeys.DOCUMENT_VALIDATION\n    ) {\n      if (this.props.claiming.candidateDocuments === null) {\n        this.props.getMyRejectedDocuments(\n          (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          }\n        );\n      }\n    } else if (\n      (thisClaim as PlansTypeKeys) === PlansTypeKeys.PLACEMENT_TRANSFER\n    ) {\n      if (this.props.claiming.myPlacement === null) {\n        this.props.getMyPlacement(\n          this.props.auth.user.user_id,\n          (\n            status: boolean,\n            msg: string,\n            data?: candidatePlacementInterface | null\n          ) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n            if (data) {\n              this.setState({ myPlacement: data });\n            }\n          }\n        );\n      }\n    }\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  render() {\n    if (\n      this.props.auth.application_session === null ||\n      this.props.claiming.myClaims === null\n    ) {\n      return null;\n    }\n\n    return (\n      <div className=\"pb-3\">\n        {this.props.formState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length <= 0 &&\n                this.cleanToClose();\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length > 0 &&\n                this.setViewThisFile(\"\");\n            }}\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-900 font-bold text-xl md:ml-1\">\n                {this.state.viewThisFile.length <= 0 && \"Claiming form\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType ===\n                    PlansTypeKeys.DOCUMENT_VALIDATION &&\n                  \"Viewing document\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                  \"Viewing application\"}\n              </div>\n            }\n            widthSizeClass={\n              this.state.viewThisFile.length > 0\n                ? ModalSize.extraLarge\n                : ModalSize.medium\n            }\n            padding={{ title: true, body: false, footer: false }}\n          >\n            {/* CLAIM FORM ============================================== */}\n            {this.state.viewThisFile.length <= 0 && (\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"px-6 pb-3\">\n                  {this.state.alertError && (\n                    <div\n                      className=\"alert-warning cursor-pointer\"\n                      onClick={() => this.setAlertError(null)}\n                    >\n                      {this.state.alertError}\n                    </div>\n                  )}\n                  <div className=\"text-base text-gray-700 sm:text-lg\">\n                    {/* SELECT CLAIM TYPE ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Claim type</label>\n                      <select\n                        className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                          this.state.formType === \"PROPS\" &&\n                          \"cursor-not-allowed\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_type\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                          this.selectClaimType(e.target.value);\n                          this.setClaimFileId(\"\");\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_type\" &&\n                            this.setFormError(null);\n                        }}\n                        value={\n                          this.state.thisClaimType\n                            ? this.state.thisClaimType\n                            : \"\"\n                        }\n                        disabled={\n                          this.state.loadingForm ||\n                          this.state.formType === \"PROPS\"\n                        }\n                      >\n                        <option value=\"\">Choose claim type</option>\n                        {Object.values(PlansTypeKeys).map((item, index) => (\n                          <option\n                            value={item}\n                            key={index + item}\n                            className={`${\n                              item === PlansTypeKeys.MARKS_PUBLICATION ||\n                              item === PlansTypeKeys.PLACEMENT_TRANSFER\n                                ? \"hidden\"\n                                : \"block\"\n                            }`}\n                          >\n                            {capitalizeFirstLetter(\n                              item.toLocaleLowerCase().replace(/_/g, \" \")\n                            )}\n                          </option>\n                        ))}\n                      </select>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_type\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT CLAIM TYPE ============================================== */}\n\n                    {/* SELECT FILE TO CLAIM ON ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>\n                        {this.generateChooseFileTitle(this.state.thisClaimType)}\n                      </label>\n                      <div\n                        className={`text-left bg-white border-2 ${\n                          this.state.formType !== \"PROPS\"\n                            ? \"border-gray-700\"\n                            : \"border-gray-400 text-gray-500\"\n                        } rounded w-full ${\n                          this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_file\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.state.loading\n                            ? \"cursor-waiting\"\n                            : this.state.thisClaimType &&\n                              !this.state.chooseClaimFile &&\n                              this.state.formType !== \"PROPS\"\n                            ? \"cursor-pointer\"\n                            : !this.state.chooseClaimFile &&\n                              \"cursor-not-allowed\"\n                        }`}\n                        title={\n                          !this.state.thisClaimType\n                            ? \"Choose claim type first!\"\n                            : \"\"\n                        }\n                        onClick={() => {\n                          !this.state.loading &&\n                            this.state.formType === \"DEFAULT\" &&\n                            this.state.thisClaimType &&\n                            !this.state.chooseClaimFile &&\n                            this.setChooseClaimFile(true);\n                          !this.state.loading &&\n                            this.state.formError &&\n                            this.state.formError.element === \"claim_file\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                        {this.state.claimFileId.length > 0 &&\n                        this.state.thisClaimType &&\n                        !this.state.chooseClaimFile ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.getClaimTitle(this.state.thisClaimType)}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimFile && (\n                            <p className=\"my-1 mx-2\">\n                              Select Claim{\" \"}\n                              {this.state.thisClaimType &&\n                                this.state.thisClaimType\n                                  .toLocaleLowerCase()\n                                  .replace(/_/g, \" \")}\n                            </p>\n                          )\n                        )}\n                        {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                        {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormDocumentList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateDocuments={\n                                this.props.claiming.candidateDocuments\n                              }\n                              documentCategories={this.props.documentReducer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF REJECTED APPLICATION ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormApplicationList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateApplications={\n                                this.props.claiming.candidateApplications\n                              }\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF FAILED EXAM ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.EXAMINATION &&\n                          this.props.claiming.myAnswer &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormExamList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateAnswers={this.props.claiming.myAnswer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF FAILED EXAM ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* PENDING PLACEMENT ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.PLACEMENT_TRANSFER &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormPlacementList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                              myPlacement={this.state.myPlacement}\n                            />\n                          )}\n                        {/* END LISTING OF FAILED Placement ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_file\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                    {/* CLAIM REASONS ========================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Choose reason of your claim</label>\n                      <div\n                        className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                          this.state.chooseClaimReason ? \"h-64\" : \"h-auto\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_reason\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.props.claiming.claimReasons === null\n                            ? \"cursor-wait\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title=\"Choose the reason for your claim!\"\n                        onClick={() => {\n                          !this.state.chooseClaimReason &&\n                            this.setState({ chooseClaimReason: true });\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_reason\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING SELECTED REASON ============================ */}\n                        {this.state.claimReason &&\n                        !this.state.chooseClaimReason ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.claimReason.reason}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimReason && (\n                            <p className=\"my-1 mx-2\">Select reason</p>\n                          )\n                        )}\n                        {/* END DISPLAYING SELECTED REASON ============================ */}\n\n                        {/* LISTING OF CLAIM REASONS ============================ */}\n                        {this.state.chooseClaimReason &&\n                          this.props.claiming.claimReasons && (\n                            <ChooseReason\n                              setChooseClaimReason={this.setChooseClaimReason}\n                              setClaimReason={this.setClaimReason}\n                              claimReason={this.state.claimReason}\n                              allClaimReasons={this.props.claiming.claimReasons}\n                            />\n                          )}\n                        {/* END LISTING OF CLAIM REASONS ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_reason\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM REASONS ========================================== */}\n\n                    {/* CLAIM COMMENT ============================================== */}\n                    <div className=\"flex flex-col\">\n                      <label>Comment</label>\n                      <textarea\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_comment\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder={`Claim comment`}\n                        style={{ resize: \"none\" }}\n                        value={this.state.claimComment}\n                        onChange={(e) => {\n                          this.setClaimComment(e.target.value);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_comment\" &&\n                            this.setFormError(null);\n                        }}\n                        rows={3}\n                        disabled={this.state.loadingForm}\n                      ></textarea>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM COMMENT ============================================== */}\n                  </div>\n\n                  <div className=\"pt-3 flex justify-between\">\n                    <button\n                      onClick={() => this.cleanToClose()}\n                      className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-not-allowed\"\n                      }`}\n                      type=\"button\"\n                      disabled={this.state.loadingForm || this.state.loading}\n                    >\n                      Exit\n                    </button>\n                    <button\n                      className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-wait\"\n                      }`}\n                      type=\"submit\"\n                      disabled={this.state.loadingForm || this.state.loading}\n                    >\n                      {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n            {/* END CLAIM FORM ============================================== */}\n\n            {/* CLAIM DOCUMENT VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateDocuments &&\n              this.state.thisClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION && (\n                <DocFormView\n                  thisDoc={this.getDocumentById(\n                    this.props.claiming.candidateDocuments,\n                    this.state.viewThisFile\n                  )}\n                  setViewThisFile={this.setViewThisFile}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                />\n              )}\n            {/* END CLAIM DOCUMENT VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM APPLICATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateApplications &&\n              this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n                <ApplicationFormView\n                  thisApplication={this.getApplicationById(\n                    this.props.claiming.candidateApplications,\n                    this.state.viewThisFile\n                  )}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                />\n              )}\n            {/* END CLAIM APPLICATION VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM EXAMINATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.myAnswer &&\n              this.state.thisClaimType === PlansTypeKeys.EXAMINATION &&\n              this.getExamById(\n                this.props.claiming.myAnswer,\n                this.state.viewThisFile\n              ) && (\n                <ExaminationFormView\n                  thisAnswerSheet={\n                    this.getExamById(\n                      this.props.claiming.myAnswer,\n                      this.state.viewThisFile\n                    )!\n                  }\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                  // thisAnswerSheet={undefined}\n                  // setViewThisFile={undefined}\n                  // setChooseClaimFile={undefined}\n                  // setClaimFileId={undefined}\n                />\n              )}\n            {/* END CLAIM EXAMINATION VIEW ============================================== */}\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  course,\n}: StoreState): {\n  auth: Auth;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    documentReducer: document,\n    claiming,\n    courses: course.courses,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    loadCourses,\n    getMyClaims,\n    getClaimReasons,\n    getMyAnswers,\n    getMyPlacement,\n    createClaim,\n    GetClaimingTypes,\n    getMyRejectedApplications,\n    getMyRejectedDocuments,\n    getDocumentCategory,\n    getDocumentSubCategory,\n    getDocumentFields,\n    PushPopupAlert,\n  })(ClaimForm)\n);\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim, DocumentClaimUser } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\nimport { ClaimGetDocTitle } from \"./Candidate/ClaimForm\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisDoc: DocumentClaimUser;\n  // setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  claimReasons: claimReasonInterface[] | null;\n  thisClaim: CandidateClaimInterface;\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Title:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisDoc.validation_status === \"rejected\"\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default React.memo(connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView));\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { IoHandLeftSharp } from \"react-icons/io5\";\nimport {\n  compareWithToday,\n  ExamDoneDetailsAnswers,\n} from \"../../containers/CandidateExams/CandidateExams\";\nimport { PlansTypeKeys } from \"../../interfaces\";\nimport { TimeZone } from \"../../utils/app.config\";\nimport { DATE } from \"../../utils/functions\";\nimport ClaimFormComponent from \"../ClaimForm/ClaimFormComponent\";\nimport { AnswersDetails } from \"./AnswersDetails\";\n\ninterface CandidateAnswersDetailsProps {\n  exam_id: ExamDoneDetailsAnswers;\n  showAnswers: boolean;\n}\n\nconst CandidateAnswersDetails = (props: CandidateAnswersDetailsProps) => {\n  const today = moment().tz(TimeZone);\n  let tomorrow = new Date();\n  tomorrow.setDate(today.date() + 1);\n  const [claim, setClaim] = useState<boolean>(false);\n  return (\n    <div>\n      {/* Check if period is open for claims */}\n      {compareWithToday(today, props.exam_id.exam_date) === false ? (\n        <div className=\"bg-yellow-100 text-yellow-800 font-extrabold text-center flex flex-col items-center justify-center text-lg px-2 py-6\">\n          <div className=\"mb-5 text-3xl\">\n            Please wait, the exam details will be visible soon!\n          </div>\n          <div className=\"text-gray-600\">Exam details will be visible from</div>\n          <div className=\"bg-white rounded-full px-3 py-1 text-gray-700\">\n            {DATE(tomorrow.toString())}\n          </div>\n        </div>\n      ) : claim === false ? (\n        <div className=\"mb-20\">\n          <AnswersDetails\n            exam_id={props.exam_id}\n            showAnswers={props.showAnswers}\n          />\n          {/* <div\n            onClick={() => setClaim(true)}\n            className=\"bg-blue-100 flex flex-row items-center px-3 py-2 -mt-10\"\n          >\n            <div className=\"btn bg-green-600 text-white text-center w-max px-6 text-2xl flex flex-row item-center justify-center gap-3 cursor-pointer\">\n              <IoHandLeftSharp className=\"text-3xl \" />{\" \"}\n              <span>Exam marks Claim</span>\n            </div>\n          </div> */}\n        </div>\n      ) : (\n        <div className=\"bg-gray-100 mt-4 pt-2 rounded\">\n          <ClaimFormComponent\n            setFormState={setClaim}\n            claim_type={PlansTypeKeys.EXAMINATION}\n            file_id={props.exam_id.exam_id}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CandidateAnswersDetails;\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected.session_plan_id === item.session_plan_id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected.session_plan_id ===\n                      item.session_plan_id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected.session_plan_id ===\n                            item.session_plan_id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan.session_plan_id !==\n                        item.session_plan_id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null &&\n                      selectedPlan.session_plan_id === item.session_plan_id && (\n                        <div\n                          onClick={() => setSelectedPlan(null)}\n                          className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                        >\n                          Close\n                        </div>\n                      )}\n                  </div>\n                </div>\n                {selectedPlan !== null &&\n                  selectedPlan.session_plan_id === item.session_plan_id && (\n                    <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                      <table className=\"w-full\">\n                        <thead className=\"bg-blue-50\">\n                          <tr className=\"text-left\">\n                            <th className=\"px-3 py-3\">#</th>\n                            <th>Plan</th>\n                            <th>Start date</th>\n                            <th>Ending date</th>\n                            <th>Status</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"text-sm\">\n                          {selectedPlan !== null &&\n                            selectedPlan.session_plan_id ===\n                              item.session_plan_id &&\n                            selectedPlan.plans.length > 0 &&\n                            item.plans.map((plan, i) => (\n                              <tr\n                                key={i + 1}\n                                className={`${\n                                  isPlansActive(item.plans).find(\n                                    (itm) => itm.type_key === plan.type_key\n                                  ) !== undefined\n                                    ? \"bg-blue-100 text-blue-600 font-bold\"\n                                    : \"\"\n                                } text-left border-b border-blue-50`}\n                              >\n                                <td className=\"px-3 py-1\">{i + 1}</td>\n                                <td>{plan.type_title}</td>\n                                <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                                <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                                <td>{plan.type_status}</td>\n                              </tr>\n                            ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ChooseSession);\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title}</span>\n        </td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id) ? \"Any document\" : item.field_title}\n          </span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {isEmptyOrSpaces(item.field_id) ? (\n            item.subcategory_required ? (\n              <span className=\"text-yellow-800\">Required</span>\n            ) : (\n              \"Optional\"\n            )\n          ) : item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          // {\n          //   columnTitle: \"Qualification Status\",\n          //   alignText: \"left\",\n          //   padding: \"p-3\",\n          // },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default React.memo(ViewRequirements);\n","import React, { Component } from \"react\";\nimport FindAnswer from \"../../containers/DoExam/DoExamTitle/FindAnswer\";\nimport { ExamAnswerSheetDone } from \"../../interfaces/exam\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  requestUserAnswers,\n  loadQuestionTypes,\n  questionTypesStoreInterface,\n  System,\n  courseStoreInterface,\n  loadCourses,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { DATE } from \"../../utils/functions\";\nimport { AiOutlineFileText } from \"react-icons/ai\";\nimport { ExamDoneDetailsAnswers } from \"../../containers/CandidateExams/CandidateExams\";\nimport Loading from \"../Loading/Loading\";\nimport { QuestionLanguage } from \"../../interfaces\";\nimport { findQuestionType } from \"../../containers/DoExam/utils/utils\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\nimport { EmbeddedQuestion } from \"../QuestionPreview/QuestionPreview\";\nimport FindAnswerHybrid from \"../../containers/DoExam/DoExamTitle/FindAnswerHybrid\";\n\ninterface AnswersDetailsProps {\n  exam_id: ExamDoneDetailsAnswers;\n  showAnswers: boolean;\n  allAnswers?: ExamAnswerSheetDone[];\n  user_id?: string;\n  questionTypes: questionTypesStoreInterface;\n  requestUserAnswers: (\n    exam_id: string,\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  FC_GetProfileDetails: Function;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  system: System;\n  course: courseStoreInterface;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n}\ninterface AnswersDetailsState {\n  loading: boolean;\n  loadingStatus: boolean;\n}\n\nexport class _AnswersDetails extends Component<\n  AnswersDetailsProps,\n  AnswersDetailsState\n> {\n  constructor(props: AnswersDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingStatus: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setLoadingStatus = (status: boolean) => {\n    this.setState({ loadingStatus: status });\n  };\n  componentDidMount = () => {\n    if (\n      this.props.questionTypes.questionTypes === null ||\n      this.props.questionTypes.questionTypes.length === 0\n    ) {\n      this.props.loadQuestionTypes(this.setLoading);\n    }\n    if (this.props.exam_id) {\n      if (this.props.course.courses === null) {\n        this.props.loadCourses(this.setLoading);\n      }\n      let check = this.props.candidateExam.user_exams_done.find(\n        (itm) =>\n          itm.course === this.props.exam_id.course &&\n          itm.period === this.props.exam_id.period &&\n          DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n      );\n      // Check if user exams loaded\n      if (\n        (this.props.candidateExam.user_exams_done.length === 0 ||\n          check === undefined) &&\n        this.props.allAnswers === undefined\n      ) {\n        this.props.loadExamsDone(\n          this.props.exam_id.period,\n          this.props.auth.user.user_id,\n          this.setLoadingStatus\n        );\n      }\n      if (check !== undefined) {\n        if (\n          this.props.candidateExam.user_exams_done.find(\n            (item) => item.exam_paper === check?.exam_paper\n          ) === undefined\n        ) {\n          this.props.requestUserAnswers(\n            check.exam_paper,\n            this.props.user_id === undefined\n              ? this.props.auth.user.user_id\n              : this.props.user_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n  userAnswersTotalMarks = (user_answers: ExamAnswerSheetDone) => {\n    let total: number = 0;\n    for (let item of user_answers.user_answers) {\n      total += item.user_marks;\n    }\n    return total;\n  };\n  render() {\n    let user_exam_details: ExamAnswerSheetDone | undefined =\n      this.props.allAnswers === undefined\n        ? this.props.candidateExam.user_exams_done.find(\n            (itm) =>\n              itm.course === this.props.exam_id.course &&\n              itm.period === this.props.exam_id.period &&\n              DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n          )\n        : this.props.allAnswers.find(\n            (itm) =>\n              itm.course === this.props.exam_id.course &&\n              itm.period === this.props.exam_id.period &&\n              DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n          );\n    if (\n      this.state.loading === true ||\n      this.state.loadingStatus === true ||\n      this.props.course.courses === null\n    ) {\n      return (\n        <div className=\"my-6 rounded bg-white p-3\">\n          <Loading />\n        </div>\n      );\n    }\n    if (user_exam_details === undefined) {\n      return (\n        <div className=\"my-6 rounded bg-white p-3\">\n          <span className=\"text-4xl font-bold\">Exam details not found!</span>\n        </div>\n      );\n    }\n    return (\n      <div className=\"p-2 bg-gray-100\">\n        <div className=\"mb-5 -mt-5\">\n          {user_exam_details !== undefined && (\n            <div className=\"mt-5\">\n              <div className=\"px-3 mb-2 flex flex-row items-center gap-3\">\n                <div>\n                  <AiOutlineFileText className=\"text-5xl text-gray-500\" />\n                </div>\n                <div\n                  className=\"text-2xl font-extrabold\"\n                  dangerouslySetInnerHTML={{\n                    __html: \"Exam for \" + this.props.exam_id.course_name,\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white rounded-t mb-0 border-b\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam date:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: DATE(this.props.exam_id.exam_date),\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white mb-0 border-b\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam description:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.exam_id.discription,\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white rounded-b mb-0\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam terms and conditions:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.exam_id.termes,\n                  }}\n                ></div>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"text-2xl font-extrabold text-blue-600 px-2 mb-3\">\n          Exam answers & marks\n        </div>\n        {user_exam_details === undefined ? (\n          \"Not Found\"\n        ) : user_exam_details.user_answers.length === 0 ? (\n          <div>\n            <div className=\"p-5 rounded-lg bg-yellow-100 text-black text-xl mb-5 text-center border border-white shadow-lg animate__animated animate__shakeX\">\n              Exam answers not found, You did not submit the exam!\n            </div>\n          </div>\n        ) : (\n          user_exam_details.user_answers.map((item, i) => (\n            <div\n              key={i + 1}\n              className=\"bg-white hover:bg-white border border-white hover:border-blue-400 px-2 py-2 rounded  animate__animated animate__fadeIn animate__fast group mb-2\"\n            >\n              <div className=\"grid md:grid-cols-11 w-full\">\n                <div className=\"col-span-12 flex flex-row items-center gap-3\">\n                  <div\n                    key={i + 1}\n                    className=\"w-6 h-6 p-2 rounded-full bg-gray-600 flex justify-center items-center font-bold text-lg text-white cursor-pointer\"\n                  >\n                    {i + 1}\n                  </div>\n                  {user_exam_details &&\n                    user_exam_details.questions.find(\n                      (itm) => itm.question_id === item.question\n                    ) !== undefined && (\n                      <div className=\"text-sm w-full\">\n                        {user_exam_details.questions.find(\n                          (itm) => itm.question_id === item.question\n                        ) &&\n                        findQuestionType(\n                          user_exam_details.questions.find(\n                            (itm) => itm.question_id === item.question\n                          )!.type,\n                          this.props.questionTypes.questionTypes\n                        ) !== null &&\n                        findQuestionType(\n                          user_exam_details.questions.find(\n                            (itm) => itm.question_id === item.question\n                          )!.type,\n                          this.props.questionTypes.questionTypes\n                        ) === questionTypeElementsType.Embedded ? (\n                          EmbeddedQuestion(\n                            user_exam_details.questions.find(\n                              (itm) => itm.question_id === item.question\n                            )!,\n                            this.props.questionTypes.questionTypes,\n                            item.language as QuestionLanguage,\n                            [\n                              {\n                                question_id: item.question,\n                                status: true,\n                                answers: item.answers,\n                                language: item.language as QuestionLanguage,\n                              },\n                            ],\n                            () => {}\n                          )\n                        ) : (\n                          <div\n                            dangerouslySetInnerHTML={{\n                              __html: user_exam_details.questions\n                                .find(\n                                  (itm) => itm.question_id === item.question\n                                )!\n                                .question.find(\n                                  (test) => test.language === item.language\n                                )!.description,\n                            }}\n                            className=\"font-bold text-gray-700 text-base\"\n                          ></div>\n                        )}\n                        {console.log(\n                          \"Test selected exam: \",\n                          item.answers,\n                          item.language\n                        )}\n                        <div className=\"text-blue-700 font-bold text-sm w-full\">\n                          {findQuestionType(\n                            user_exam_details.questions.find(\n                              (itm) => itm.question_id === item.question\n                            )!.type,\n                            this.props.questionTypes.questionTypes\n                          ) !== null &&\n                          findQuestionType(\n                            user_exam_details.questions.find(\n                              (itm) => itm.question_id === item.question\n                            )!.type,\n                            this.props.questionTypes.questionTypes\n                          ) === questionTypeElementsType.Embedded\n                            ? \"\"\n                            : \"Answer: \"}\n                          {this.props.questionTypes.questionTypes !== null &&\n                            user_exam_details.user_answers.find(\n                              (itm) => itm.question === item.question\n                            ) && (\n                              <div className=\"mb-2\">\n                                {findQuestionType(\n                                  user_exam_details.questions.find(\n                                    (itm) => itm.question_id === item.question\n                                  )!.type,\n                                  this.props.questionTypes.questionTypes\n                                ) &&\n                                findQuestionType(\n                                  user_exam_details.questions.find(\n                                    (itm) => itm.question_id === item.question\n                                  )!.type,\n                                  this.props.questionTypes.questionTypes\n                                ) === questionTypeElementsType.Hybrid ? (\n                                  <FindAnswerHybrid\n                                    selectedLanguage={\n                                      item.language as QuestionLanguage\n                                    }\n                                    questionTypes={this.props.questionTypes}\n                                    auth={this.props.auth}\n                                    candidateExam={this.props.candidateExam}\n                                    answersList={[\n                                      {\n                                        question_id: item.question,\n                                        status: true,\n                                        answers: item.answers,\n                                        language:\n                                          item.language as QuestionLanguage,\n                                      },\n                                    ]}\n                                    system={this.props.system}\n                                    setSelectedExamQuestion={() => {}}\n                                    submitQuestionAnswer={false}\n                                    loadQuestionTypes={\n                                      this.props.loadQuestionTypes\n                                    }\n                                    submitExam={() => {}}\n                                    selectedExam={\n                                      user_exam_details === undefined ||\n                                      this.props.course.courses === null\n                                        ? null\n                                        : this.props.course.courses.find(\n                                            (itm) =>\n                                              user_exam_details !== undefined &&\n                                              itm.course_id ===\n                                                user_exam_details.questions.find(\n                                                  (itm) =>\n                                                    itm.question_id ===\n                                                    item.question\n                                                )!.course\n                                          )!\n                                    }\n                                    setSubmitModal={(status: boolean) => {}}\n                                    wholeQuestion={\n                                      user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!\n                                    }\n                                  />\n                                ) : (\n                                  <FindAnswer\n                                    selectedLanguage={item.language}\n                                    question={{\n                                      is_deleted:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.is_deleted,\n                                      question_id: item.question,\n                                      course: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.course,\n                                      question:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.question,\n                                      type: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.type,\n                                      chapters:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.chapters,\n                                      customNumber:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.customNumber,\n                                      marks: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.marks,\n                                      answers: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.answers,\n                                    }}\n                                    answersList={[\n                                      {\n                                        question_id: item.question,\n                                        status: true,\n                                        answers:\n                                          user_exam_details.user_answers.find(\n                                            (itm) =>\n                                              itm.question === item.question\n                                          )!.answers,\n                                        language:\n                                          item.language as QuestionLanguage,\n                                      },\n                                    ]}\n                                    questionTypes={\n                                      this.props.questionTypes.questionTypes\n                                    }\n                                    showCorrectAnswer={this.props.showAnswers}\n                                    onClick={() => {}}\n                                  />\n                                )}\n                              </div>\n                            )}\n                        </div>\n                      </div>\n                    )}\n                </div>\n              </div>\n              <div className=\"col-span-1 flex items-center justify-between\">\n                <div></div>\n\n                <div className=\"w-max flex flex-col items-end justify-center bg-blue-50 rounded-md px-3 py-1 group-hover:bg-blue-100\">\n                  <div className=\"text-sm font-semibold text-gray-700\">\n                    Marks\n                  </div>\n                  <div className=\"text-sm font-extrabold text-gray-900 -mt-1\">\n                    <span className=\"text-blue-500\">\n                      {item.user_marks.toFixed(\n                        user_exam_details &&\n                          item.user_marks ===\n                            user_exam_details.questions.find(\n                              (itm) => itm.question_id === item.question\n                            )?.marks\n                          ? 0\n                          : 2\n                      )}\n                    </span>{\" \"}\n                    /{\" \"}\n                    {user_exam_details &&\n                      user_exam_details.questions.find(\n                        (itm) => itm.question_id === item.question\n                      )?.marks}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n        <div className=\"flex flex-row items-center justify-between gap-3 mb-10\">\n          <div className=\"bg-blue-100 p-3 pr-3 text-blue-700 flex flex-col items-start justify-center rounded-lg border-2 border-white\">\n            <span className=\"text-gray-700\">Total marks percentage</span>\n            <span className=\"text-3xl font-extrabold\">\n              {user_exam_details &&\n                user_exam_details.total_marks.toFixed(\n                  user_exam_details.total_marks === 100 ||\n                    user_exam_details.total_marks === 0\n                    ? 0\n                    : 2\n                )}\n              %\n            </span>\n          </div>\n          <div>\n            <div className=\"bg-white rounded-lg p-3\">\n              <div className=\"text-gray-500 font-bold text-base text-right\">\n                Exam total marks\n              </div>\n              {user_exam_details !== undefined && (\n                <div className=\"font-extrabold text-3xl text-gray-900 text-right\">\n                  {this.userAnswersTotalMarks(user_exam_details).toFixed(\n                    this.userAnswersTotalMarks(user_exam_details) ===\n                      user_exam_details.exam_total_marks ||\n                      this.userAnswersTotalMarks(user_exam_details) === 0\n                      ? 0\n                      : 2\n                  )}{\" \"}\n                  / {user_exam_details.exam_total_marks}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  candidateExam,\n  candidateApplications,\n  questionTypes,\n  system,\n  course,\n}: StoreState): {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  questionTypes: questionTypesStoreInterface;\n  system: System;\n  course: courseStoreInterface;\n} => {\n  return {\n    auth: auth,\n    candidateExam: candidateExam,\n    candidateApplications: candidateApplications,\n    questionTypes: questionTypes,\n    system: system,\n    course: course,\n  };\n};\n\nexport const AnswersDetails = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  requestUserAnswers,\n  loadQuestionTypes,\n  loadCourses,\n})(_AnswersDetails);\n","import React from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  claimApplicationsInterface,\n  claimApplicationsPositionInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.subcategory.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.subcategory.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\ntype ApplicationFormViewProps = {\n  thisApplication: claimApplicationsInterface;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  PushPopupAlert: Function;\n};\n\nconst ApplicationFormView: React.FC<ApplicationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisApplication.application_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisApplication.application_status ===\n                ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } py-1`}\n            >\n              {capitalizeFirstLetter(props.thisApplication.application_status)}\n            </span>\n          </div>\n          {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {props.thisApplication.}\n            </span>\n          </div> */}\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span\n              className=\"font-semibold text-gray-900\"\n              dangerouslySetInnerHTML={{\n                __html: props.thisApplication.override_by.comment,\n              }}\n            ></span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Details\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisApplication.position.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisApplication.position.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !==\n                    props.thisApplication.position.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisApplication.position.requirements.length > 0 ? (\n            FC_ApplicationPositionDistinctCategory(\n              props.thisApplication.position,\n              props.documentCategories\n            ).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_ApplicationPositionDistinctCategory(\n                      props.thisApplication.position,\n                      props.documentCategories\n                    ).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(connect(null, { PushPopupAlert })(ApplicationFormView));\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  getMyClaims,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  PushPopupAlert,\n  DocumentClaimUser,\n  getMyAnswers,\n  getClaimReasons,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n} from \"../../actions\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../actions/document\";\nimport ApplicationFormView from \"../../containers/Claimings/Candidate/ApplicationFormView\";\nimport ChooseReason from \"../../containers/Claimings/Candidate/ChooseReason\";\nimport { ClaimGetDocTitle } from \"../../containers/Claimings/Candidate/ClaimForm\";\nimport DocFormView from \"../../containers/Claimings/Candidate/DocFormView\";\nimport FormApplicationList from \"../../containers/Claimings/Candidate/FormApplicationList\";\nimport FormDocumentList from \"../../containers/Claimings/Candidate/FormDocumentList\";\nimport {\n  PlansTypeKeys,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  claimReasonInterface,\n} from \"../../interfaces\";\nimport {\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { ExamAnswerSheetDone } from \"../../interfaces/exam\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { ClaimingReducerType } from \"../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText } from \"../../utils/errors\";\nimport { DATE } from \"../../utils/functions\";\nimport { PopupAlertData } from \"../Alert/Popup\";\nimport Loading from \"../Loading/Loading\";\n\nconst getCourseIdBySheetId = (\n  allData: ExamAnswerSheetDone[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\ntype ClaimFormProps = {\n  claim_type: PlansTypeKeys;\n  file_id: string;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  getMyAnswers: Function;\n  getClaimReasons: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n\n  // DEFAULT DATA ==========\n  // candidateDocuments?: DocumentClaimUser[];\n  // candidateAnswers?: ClaimExamResultsDetails[];\n  // candidateApplications?: claimApplicationsInterface[];\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  chooseClaimReason: boolean;\n  claimReason: claimReasonInterface | null;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n};\n\nexport class ClaimFormComponent extends Component<\n  ClaimFormProps,\n  ClaimFormState\n> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      chooseClaimReason: false,\n      claimReason: null,\n    };\n  }\n\n  // GENERATE SET STATES FUNCTIONS\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  setChooseClaimReason = (value: boolean) => {\n    this.setState({ chooseClaimReason: value });\n  };\n\n  setClaimReason = (value: claimReasonInterface | null) => {\n    this.setState({ claimReason: value });\n  };\n\n  // CHECK IF PASSED ID IS VALID\n  isDocumentIdValid = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let doc = documents.find((item) => item.doc_id === doc_id);\n    if (doc) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (doc.validated_by.validation_status !== \"rejected\") {\n        return {\n          status: false,\n          msg: \"Only rejected document are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.success };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid document id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n  };\n\n  isApplicationIdValid = (\n    applications: GetApplicationsAPI[],\n    app_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    const app = applications.find((item) => item.application_id === app_id);\n    if (app) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (app.application_status !== ApplicationStates.Rejected) {\n        return {\n          status: false,\n          msg: \"Only rejected application are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid application id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n  };\n\n  isExamIdValid = (\n    exams: ExamAnswerSheetDone[],\n    exam_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    const exam = exams.find((item) => item.answer_sheet_id === exam_id);\n    if (exam) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (exam.total_marks === 100) {\n        return {\n          status: false,\n          msg: \"You can't claim on exam which you have 100%\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid answer sheet id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Application, please try again!\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  componentDidMount = () => {\n    if (this.props.auth.application_session === null) {\n      this.props.PushPopupAlert({\n        title: \"No session active session\",\n        theme: PopupAlertTheme.danger,\n      });\n      this.props.setFormState(false);\n      this.setState({\n        claimFileId: \"\",\n        thisClaimType: null,\n        thisClaimTypeId: \"\",\n        claimComment: \"\",\n        chooseClaimFile: false,\n        formType: \"DEFAULT\",\n        viewThisFile: \"\",\n        formError: null,\n      });\n    } else {\n      if (\n        this.props.documentReducer.documentCategory === null &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getDocumentCategory();\n      }\n      if (\n        this.props.documentReducer.documentSubCategory === null &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getDocumentSubCategory();\n      }\n      if (\n        this.props.documentReducer.documentFields === null &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getDocumentFields();\n      }\n      if (\n        this.props.candidateApplications.candidate_applications !== null &&\n        this.props.claim_type === PlansTypeKeys.APPLICATION\n      )\n        this.setLoading(false);\n\n      if (\n        (this.props.claiming.candidateDocuments === null ||\n          this.props.claiming.candidateDocuments.length !==\n            this.props.auth.documents.length) &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getMyRejectedDocuments(\n          (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              if (data) {\n                // PROPS VALIDATION PROCESS ###############\n                if (\n                  this.props.claim_type &&\n                  this.props.file_id &&\n                  this.state.formType === \"DEFAULT\"\n                ) {\n                  if (\n                    this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n                  ) {\n                    let _isDocumentIdValid = this.isDocumentIdValid(\n                      data,\n                      this.props.file_id\n                    );\n                    if (!_isDocumentIdValid.status) {\n                      this.props.PushPopupAlert({\n                        title: _isDocumentIdValid.msg,\n                        theme: _isDocumentIdValid.alert,\n                      });\n                      // setAlertError(_isDocumentIdValid.msg);\n                      this.props.setFormState(false);\n                    } else {\n                      this.setState({\n                        thisClaimType: this.props.claim_type,\n                        claimFileId: this.props.file_id,\n                        formType: \"PROPS\",\n                      });\n                    }\n                  }\n                }\n              }\n            }\n          }\n        );\n      } else this.setLoading(false);\n\n      if (this.props.claim_type === PlansTypeKeys.EXAMINATION)\n        this.setLoading(false);\n\n      if (this.props.claiming.claimReasons === null) {\n        this.props.getClaimReasons((status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        });\n      }\n\n      if (this.props.claiming.myClaims === null) {\n        this.props.getMyClaims(\n          this.props.auth.user.user_id,\n          this.props.auth.application_session.session_plan_id,\n          (status: boolean, msg: string) => {\n            this.setLoading(status);\n            if (status === false && msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        );\n      } else this.setLoading(false);\n\n      // PROPS VALIDATION PROCESS ###############\n      if (\n        !isEmptyOrSpaces(this.props.claim_type) &&\n        !isEmptyOrSpaces(this.props.file_id) &&\n        this.state.formType === \"DEFAULT\"\n      ) {\n        this.setState({ thisClaimType: this.props.claim_type });\n        if (\n          this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION &&\n          this.props.claiming.candidateDocuments\n        ) {\n          let _isDocumentIdValid = this.isDocumentIdValid(\n            this.props.claiming.candidateDocuments,\n            this.props.file_id\n          );\n          if (!_isDocumentIdValid.status) {\n            this.props.PushPopupAlert({\n              title: _isDocumentIdValid.msg,\n              theme: _isDocumentIdValid.alert,\n            });\n            // setAlertError(_isDocumentIdValid.msg);\n            this.props.setFormState(false);\n          } else {\n            this.setState({\n              thisClaimType: this.props.claim_type,\n              claimFileId: this.props.file_id,\n              formType: \"PROPS\",\n            });\n          }\n        }\n        if (\n          this.props.claim_type === PlansTypeKeys.APPLICATION &&\n          this.props.candidateApplications.candidate_applications\n        ) {\n          let _isApplicationIdValid = this.isApplicationIdValid(\n            this.props.candidateApplications.candidate_applications,\n            this.props.file_id\n          );\n          if (!_isApplicationIdValid.status) {\n            this.props.PushPopupAlert({\n              title: _isApplicationIdValid.msg,\n              theme: _isApplicationIdValid.alert,\n            });\n            this.props.setFormState(false);\n          } else {\n            this.setState({\n              thisClaimType: this.props.claim_type,\n              claimFileId: this.props.file_id,\n              formType: \"PROPS\",\n            });\n          }\n        }\n\n        if (\n          this.props.claim_type === PlansTypeKeys.EXAMINATION &&\n          this.props.candidateExam.user_exams_done\n        ) {\n          let _isExamIdValid = this.isExamIdValid(\n            this.props.candidateExam.user_exams_done,\n            this.props.file_id\n          );\n          if (!_isExamIdValid.status) {\n            this.props.PushPopupAlert({\n              title: _isExamIdValid.msg,\n              theme: _isExamIdValid.alert,\n            });\n            this.props.setFormState(false);\n          } else {\n            this.setState({\n              thisClaimType: this.props.claim_type,\n              claimFileId: this.props.file_id,\n              formType: \"PROPS\",\n            });\n          }\n        }\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: GetApplicationsAPI[],\n    application_id: string\n  ): claimApplicationsInterface | undefined => {\n    let result: claimApplicationsInterface | undefined = undefined;\n    let thisApplication = applications.find(\n      (item) => item.application_id === application_id\n    );\n\n    if (thisApplication)\n      result = {\n        application_id: thisApplication.application_id,\n        application_period: thisApplication.application_session.session_plan_id,\n        createdAt: thisApplication.createdAt,\n        exams: thisApplication.exams,\n        position: thisApplication.position,\n        application_status:\n          thisApplication.application_status as ApplicationStates,\n        updatedAt: thisApplication.updatedAt,\n        user_id: thisApplication.user_id,\n        application_history: thisApplication.application_history,\n        application_session: thisApplication.application_session,\n        override_by: {\n          application_status: thisApplication.override_by.application_status,\n          comment: thisApplication.override_by.comment,\n          date: thisApplication.override_by.date,\n          user_id: thisApplication.override_by.user_id,\n        },\n      };\n\n    return result;\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.candidateApplications.candidate_applications &&\n      this.getApplicationById(\n        this.props.candidateApplications.candidate_applications,\n        thisId\n      )\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.candidateApplications.candidate_applications,\n          thisId\n        )!.override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.candidateApplications.candidate_applications,\n          thisId\n        )!.override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.candidateApplications.candidate_applications,\n          thisId\n        )!.override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  loadUserById = async (user_id: string, callback: Function) => {\n    if (isEmptyOrSpaces(user_id)) {\n      return this.props.PushPopupAlert({\n        title: \"No user id provided\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface>(\n        `${API.AUTH}/users/${user_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ loadUserById: res });\n      console.log(\"====================================\");\n      if (res) {\n        callback(res.data);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  getClaimTitle = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    // title from document\n    if (\n      claimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = ClaimGetDocTitle(\n        this.props.documentReducer,\n        this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          this.state.claimFileId\n        )\n      ).main;\n    }\n    // title from application\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.candidateApplications.candidate_applications &&\n      this.getApplicationById(\n        this.props.candidateApplications.candidate_applications,\n        this.state.claimFileId\n      )\n    ) {\n      result = this.getApplicationById(\n        this.props.candidateApplications.candidate_applications,\n        this.state.claimFileId\n      )!.position.position_title;\n    }\n    // title from examination\n    if (\n      claimType === PlansTypeKeys.EXAMINATION &&\n      getCourseIdBySheetId(\n        this.props.candidateExam.user_exams_done,\n        this.state.claimFileId\n      )\n    ) {\n      result = getCourseIdBySheetId(\n        this.props.candidateExam.user_exams_done,\n        this.state.claimFileId\n      )!.course;\n    }\n    // if (\n    //   claimType === PlansTypeKeys.PLACEMENT_TRANSFER &&\n    //   this.state.myPlacement\n    // ) {\n    //   result = \"Placed on \" + this.state.myPlacement.placed.school.school_name;\n    // }\n\n    return result;\n  };\n\n  cleanToClose = () => {\n    this.props.setFormState(false);\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (!this.state.claimReason) {\n      return this.setFormError({\n        element: \"claim_reason\",\n        msg: `Please select the reason of your claim!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.props.auth.application_session) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n    let old_evaluator_email: string = \"info@system.com\";\n    let old_evaluator_name: string = \"System\";\n    let evaluator_email: string = \"\";\n    let evaluator_name: string = \"\";\n    let title: string = this.getClaimTitle(this.state.thisClaimType);\n\n    if (\n      this.state.thisClaimType !== PlansTypeKeys.EXAMINATION &&\n      this.getValidation(this.state.claimFileId).old_evaluated_by !== \"system\"\n    ) {\n      await this.loadUserById(\n        this.getValidation(this.state.claimFileId).old_evaluated_by,\n        (data: UserInterface) => {\n          old_evaluator_email = data.email;\n          old_evaluator_name =\n            data.user_info.fname + \" \" + data.user_info.lname;\n        }\n      );\n    }\n    this.setLoadingForm(true);\n    try {\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.props.auth.application_session.session_plan_id,\n          default_claim_resaons: this.state.claimReason.id,\n          reason: this.state.claimComment,\n          // old_reason: this.getValidation(this.state.claimFileId).old_reason,\n          // old_status: this.getValidation(this.state.claimFileId).old_status,\n          // old_evaluated_by: this.getValidation(this.state.claimFileId)\n          //   .old_evaluated_by,\n          old_reason:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"System\"\n              : this.getValidation(this.state.claimFileId).old_reason,\n          old_status:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Failed\"\n              : this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"\"\n              : this.getValidation(this.state.claimFileId).old_evaluated_by,\n          old_evaluator_email,\n          old_evaluator_name,\n          evaluator_email,\n          evaluator_name,\n          title,\n        }\n      );\n      console.log(\"====================================\");\n      console.log({ createClaim: res.data });\n      console.log(\"====================================\");\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose();\n        this.props.setFormState(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setFormState(false);\n    this.setLoadingForm(false);\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  getClaimById = (\n    myClaims: CandidateClaimInterface[],\n    fileId: string,\n    sessionId: string\n  ): CandidateClaimInterface | undefined => {\n    return myClaims.find(\n      (item) => item.claiming_on_id === fileId && item.period_id === sessionId\n    );\n  };\n\n  render() {\n    // CHECK IF STILL LOADING DATA ===============\n    if (\n      this.props.auth.application_session !== null &&\n      (this.state.loading ||\n        (this.props.claiming.myClaims === null &&\n          !isEmptyOrSpaces(this.props.file_id) &&\n          !isEmptyOrSpaces(this.props.claim_type)))\n    ) {\n      return <Loading />;\n    }\n\n    if (\n      this.props.claiming.myClaims &&\n      this.props.auth.application_session &&\n      this.getClaimById(\n        this.props.claiming.myClaims,\n        this.props.file_id,\n        this.props.auth.application_session.session_plan_id\n      ) !== undefined\n    ) {\n      return (\n        <div>\n          <h2 className=\"text-center text-2xl font-bold p-3 text-gray-500\">\n            Claims on this {this.displayClaimType(this.props.claim_type!)}\n          </h2>\n          {this.getClaimById(\n            this.props.claiming.myClaims,\n            this.props.file_id,\n            this.props.auth.application_session.session_plan_id\n          )!.claims.length >= 1 ? (\n            <div>\n              {this.getClaimById(\n                this.props.claiming.myClaims,\n                this.props.file_id,\n                this.props.auth.application_session.session_plan_id\n              )!.claims.map((itm) => (\n                <div className=\"p-2 border rounded mb-2\">\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Created date:</span>{\" \"}\n                    <b>{DATE(itm.createdAt)}</b>\n                  </div>\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Reason:</span>{\" \"}\n                    <p>{itm.reason}</p>\n                  </div>\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Evaluation comment:</span>{\" \"}\n                    <p>{itm.evaluation_comment}</p>\n                  </div>\n                  <div className=\"p-1\">\n                    <span className=\"text-gray-400 block\">decision:</span>{\" \"}\n                    <h3 className=\"text-xl font-bold\">\n                      {itm.decision_taken_status}\n                    </h3>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div>No claims found!</div>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"pb-3\">\n        {/* CLAIM FORM ============================================== */}\n        {this.state.viewThisFile.length <= 0 && (\n          <form onSubmit={(e) => this.handleSubmit(e)}>\n            <div className=\"px-6 pb-3\">\n              {this.state.alertError && (\n                <div\n                  className=\"alert-warning cursor-pointer\"\n                  onClick={() => this.setAlertError(null)}\n                >\n                  {this.state.alertError}\n                </div>\n              )}\n              <div className=\"text-base text-gray-700 sm:text-lg\">\n                {/* SELECT CLAIM TYPE ============================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>Claim type</label>\n                  <select\n                    className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                      this.state.formType === \"PROPS\" && \"cursor-not-allowed\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_type\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                      this.selectClaimType(e.target.value);\n                      this.setClaimFileId(\"\");\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_type\" &&\n                        this.setFormError(null);\n                    }}\n                    value={\n                      this.state.thisClaimType ? this.state.thisClaimType : \"\"\n                    }\n                    disabled={\n                      this.state.loadingForm || this.state.formType === \"PROPS\"\n                    }\n                  >\n                    <option value=\"\">Choose claim type</option>\n                    {Object.values(PlansTypeKeys).map((item, index) => (\n                      <option value={item} key={index + item}>\n                        {capitalizeFirstLetter(\n                          item.toLocaleLowerCase().replace(/_/g, \" \")\n                        )}\n                      </option>\n                    ))}\n                  </select>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_type\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END SELECT CLAIM TYPE ============================================== */}\n\n                {/* SELECT FILE TO CLAIM ON ============================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>\n                    {this.generateChooseFileTitle(this.state.thisClaimType)}\n                  </label>\n                  <div\n                    className={`text-left bg-white border-2 ${\n                      this.state.formType !== \"PROPS\"\n                        ? \"border-gray-700\"\n                        : \"border-gray-400 text-gray-500\"\n                    } rounded w-full ${\n                      this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_file\"\n                        ? \"border-red-500\"\n                        : \"\"\n                    } border-2 ${\n                      this.state.thisClaimType &&\n                      !this.state.chooseClaimFile &&\n                      this.state.formType !== \"PROPS\"\n                        ? \"cursor-pointer\"\n                        : !this.state.chooseClaimFile && \"cursor-not-allowed\"\n                    }`}\n                    title={\n                      !this.state.thisClaimType\n                        ? \"Choose claim type first!\"\n                        : \"\"\n                    }\n                    onClick={() => {\n                      this.state.formType === \"DEFAULT\" &&\n                        this.state.thisClaimType &&\n                        !this.state.chooseClaimFile &&\n                        this.setChooseClaimFile(true);\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_file\" &&\n                        this.setFormError(null);\n                    }}\n                  >\n                    {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                    {this.state.claimFileId.length > 0 &&\n                    !this.state.chooseClaimFile ? (\n                      <p className=\"my-1 mx-2\">\n                        {this.state.thisClaimType ===\n                          PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          ClaimGetDocTitle(\n                            this.props.documentReducer,\n                            this.getDocumentById(\n                              this.props.claiming.candidateDocuments,\n                              this.state.claimFileId\n                            )\n                          ).main}\n                        {this.state.thisClaimType ===\n                          PlansTypeKeys.APPLICATION &&\n                          this.props.candidateApplications\n                            .candidate_applications &&\n                          this.getApplicationById(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            this.state.claimFileId\n                          ) &&\n                          this.getApplicationById(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            this.state.claimFileId\n                          )!.position.position_title}\n                      </p>\n                    ) : (\n                      !this.state.chooseClaimFile && (\n                        <p className=\"my-1 mx-2\">\n                          Select Claim{\" \"}\n                          {this.state.thisClaimType &&\n                            this.state.thisClaimType\n                              .toLocaleLowerCase()\n                              .replace(/_/g, \" \")}\n                        </p>\n                      )\n                    )}\n                    {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                    {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                    {this.state.chooseClaimFile &&\n                      this.state.thisClaimType ===\n                        PlansTypeKeys.DOCUMENT_VALIDATION &&\n                      this.props.claiming.candidateDocuments &&\n                      this.props.claiming.myClaims &&\n                      this.props.auth.application_session && (\n                        <FormDocumentList\n                          setChooseClaimFile={this.setChooseClaimFile}\n                          setClaimFileId={this.setClaimFileId}\n                          setViewThisFile={this.setViewThisFile}\n                          claimFileId={this.state.claimFileId}\n                          viewThisFile={this.state.viewThisFile}\n                          candidateDocuments={\n                            this.props.claiming.candidateDocuments\n                          }\n                          documentCategories={this.props.documentReducer}\n                          myClaims={this.props.claiming.myClaims}\n                          activeSession={this.props.auth.application_session}\n                        />\n                      )}\n                    {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                    {/* LISTING OF REJECTED APPLICATION ============================ */}\n                    {this.state.chooseClaimFile &&\n                      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                      this.props.claiming.candidateApplications &&\n                      this.props.claiming.myClaims &&\n                      this.props.auth.application_session && (\n                        <FormApplicationList\n                          setChooseClaimFile={this.setChooseClaimFile}\n                          setClaimFileId={this.setClaimFileId}\n                          setViewThisFile={this.setViewThisFile}\n                          claimFileId={this.state.claimFileId}\n                          viewThisFile={this.state.viewThisFile}\n                          candidateApplications={\n                            this.props.claiming.candidateApplications\n                          }\n                          myClaims={this.props.claiming.myClaims}\n                          activeSession={this.props.auth.application_session}\n                        />\n                      )}\n                    {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                  </div>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_file\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                {/* CLAIM REASONS ========================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>Choose reason of your claim</label>\n                  <div\n                    className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                      this.state.chooseClaimReason ? \"h-64\" : \"h-auto\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_reason\"\n                        ? \"border-red-500\"\n                        : \"\"\n                    } border-2 ${\n                      this.props.claiming.claimReasons === null\n                        ? \"cursor-wait\"\n                        : \"cursor-pointer\"\n                    }`}\n                    title=\"Choose the reason for your claim!\"\n                    onClick={() => {\n                      !this.state.chooseClaimReason &&\n                        this.setState({ chooseClaimReason: true });\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_reason\" &&\n                        this.setFormError(null);\n                    }}\n                  >\n                    {/* DISPLAYING SELECTED REASON ============================ */}\n                    {this.state.claimReason && !this.state.chooseClaimReason ? (\n                      <p className=\"my-1 mx-2\">\n                        {this.state.claimReason.reason}\n                      </p>\n                    ) : (\n                      !this.state.chooseClaimReason && (\n                        <p className=\"my-1 mx-2\">Select reason</p>\n                      )\n                    )}\n                    {/* END DISPLAYING SELECTED REASON ============================ */}\n\n                    {/* LISTING OF CLAIM REASONS ============================ */}\n                    {this.state.chooseClaimReason &&\n                      this.props.claiming.claimReasons && (\n                        <ChooseReason\n                          setChooseClaimReason={this.setChooseClaimReason}\n                          setClaimReason={this.setClaimReason}\n                          claimReason={this.state.claimReason}\n                          allClaimReasons={this.props.claiming.claimReasons}\n                        />\n                      )}\n                    {/* END LISTING OF CLAIM REASONS ============================ */}\n                  </div>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_reason\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END CLAIM REASONS ========================================== */}\n\n                {/* CLAIM COMMENT ============================================== */}\n                <div className=\"flex flex-col\">\n                  <label>Comment</label>\n                  <textarea\n                    className={`text-left input-white w-20 inline-block ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_comment\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    placeholder={`Claim comment`}\n                    style={{ resize: \"none\" }}\n                    value={this.state.claimComment}\n                    onChange={(e) => {\n                      this.setClaimComment(e.target.value);\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" &&\n                        this.setFormError(null);\n                    }}\n                    rows={3}\n                    disabled={this.state.loadingForm}\n                  ></textarea>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_comment\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END CLAIM COMMENT ============================================== */}\n              </div>\n              <div className=\"pt-3 flex justify-between\">\n                <button\n                  onClick={() => this.cleanToClose()}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                    this.state.loadingForm && \"cursor-not-allowed\"\n                  }`}\n                  type=\"button\"\n                  disabled={this.state.loadingForm}\n                >\n                  Exit\n                </button>\n                <button\n                  className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                    this.state.loadingForm && \"cursor-wait\"\n                  }`}\n                  type=\"submit\"\n                  disabled={this.state.loadingForm}\n                >\n                  {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                </button>\n              </div>\n            </div>\n          </form>\n        )}\n        {/* END CLAIM FORM ============================================== */}\n\n        {/* CLAIM DOCUMENT VIEW ============================================== */}\n        {this.state.viewThisFile.length > 0 &&\n          this.props.claiming.candidateDocuments &&\n          this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION && (\n            <DocFormView\n              thisDoc={this.getDocumentById(\n                this.props.claiming.candidateDocuments,\n                this.state.viewThisFile\n              )}\n              setViewThisFile={this.setViewThisFile}\n              documentCategories={this.props.documentReducer}\n              setChooseClaimFile={this.setChooseClaimFile}\n              setClaimFileId={this.setClaimFileId}\n            />\n          )}\n        {/* END CLAIM DOCUMENT VIEW ============================================== */}\n        {/* CLAIM APPLICATION VIEW ============================================== */}\n        {this.state.viewThisFile.length > 0 &&\n          this.props.candidateApplications.candidate_applications &&\n          this.getApplicationById(\n            this.props.candidateApplications.candidate_applications,\n            this.state.viewThisFile\n          ) &&\n          this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n            <ApplicationFormView\n              thisApplication={\n                this.getApplicationById(\n                  this.props.candidateApplications.candidate_applications,\n                  this.state.viewThisFile\n                )!\n              }\n              documentCategories={this.props.documentReducer}\n              setChooseClaimFile={this.setChooseClaimFile}\n              setClaimFileId={this.setClaimFileId}\n              setViewThisFile={this.setViewThisFile}\n            />\n          )}\n        {/* END CLAIM APPLICATION VIEW ============================================== */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  candidateApplications,\n  candidateExam,\n}: StoreState): {\n  auth: Auth;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n} => {\n  return {\n    auth: auth,\n    documentReducer: document,\n    claiming,\n    candidateApplications: candidateApplications,\n    candidateExam: candidateExam,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getMyClaims,\n  getMyAnswers,\n  getClaimReasons,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(ClaimFormComponent);\n","import React from \"react\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport {\n  claimApplicationsPositionInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamDoneDetailsAnswers } from \"../../CandidateExams/CandidateExams\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.subcategory.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.subcategory.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\nexport const claimShowAnswer = (\n  answer: ClaimExamResultsDetails,\n  course_name: string\n): ExamDoneDetailsAnswers => {\n  const result: ExamDoneDetailsAnswers = {\n    course: answer.course,\n    course_name: course_name,\n    discription: answer.discription,\n    termes: answer.termes,\n    rules: {\n      right_click_enabled: false,\n      copy_enabled: false,\n      paste_enabled: false,\n      stop_candidate_when_comeback: false,\n      allow_to_leave_browser: false,\n    },\n    period: answer.period,\n    exam_date: answer.exam_date,\n    exam_id: answer.exam_id,\n  };\n  return result;\n};\n\ntype ExaminationFormViewProps = {\n  thisAnswerSheet: ClaimExamResultsDetails;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n};\n\nconst ExaminationFormView: React.FC<ExaminationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisAnswerSheet.course_name}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisAnswerSheet.answer_sheet_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisAnswerSheet.createdAt)}\n            </span>\n          </div>\n        </div>\n        {/* QUESTIONS ----------------------------- */}\n        <AnswersDetails\n          showAnswers={false}\n          exam_id={claimShowAnswer(\n            props.thisAnswerSheet,\n            props.thisAnswerSheet.course_name\n          )}\n        />\n        {/* END QUESTIONS ----------------------------- */}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(ExaminationFormView);\n","import React from \"react\";\nimport {\n  BsCheckSquareFill,\n  BsCheckCircleFill,\n  BsArrowRightSquareFill,\n  BsArrowRightCircleFill,\n} from \"react-icons/bs\";\nimport { QuestionAnswersStore } from \"../../../actions\";\nimport {\n  CalculatedMultipleChoiceQuestionAnswerInterface,\n  MatchingQuestionAnswerInterface,\n  MultipleChoiceQuestionAnswerInterface,\n  QuestionInterface,\n  questionType,\n  TrueFalseQuestionAnswerInterface,\n  NumericalQuestionAnswerInterface,\n  ShortAnswerQuestionAnswerInterface,\n  SimpleCalculatedQuestionAnswerInterface,\n  QuestionLanguage,\n  LanguageInterface,\n  EssayQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionAnswerFormat,\n} from \"../../../interfaces\";\nimport {\n  toCalculatedMultipleChoice,\n  toEssay,\n  toMatching,\n  toMultipleChoice,\n  toNumerical,\n  toShortAnswer,\n  toSimpleCalculated,\n  toTrueFalse,\n} from \"../QuestionDetails/ConvertingAnswers\";\nimport { findQuestionType } from \"../utils/utils\";\nimport {\n  QuestionForHybrid,\n  questionTypeElementsType,\n} from \"@mastrecruit/common\";\nimport { findQType } from \"./FindAnswerHybrid\";\n\ninterface FindAnswerProps {\n  question: QuestionInterface;\n  answersList: QuestionAnswersStore[];\n  selectedLanguage: QuestionLanguage | LanguageInterface;\n  questionTypes: questionType[];\n  showCorrectAnswer: boolean;\n  subQuestionType?: questionTypeElementsType;\n  reference?: number;\n  onClick: () => void;\n}\n\nconst resultDiv = (\n  user_answers: QuestionAnswerFormat[],\n  question_answers: QuestionAnswerFormat[],\n  props: FindAnswerProps\n): JSX.Element => {\n  switch (\n    props.subQuestionType === undefined\n      ? findQuestionType(props.question.type, props.questionTypes)\n      : props.subQuestionType\n  ) {\n    case questionTypeElementsType.MultipleChoice:\n      const userAnswer: MultipleChoiceQuestionAnswerInterface[] =\n        toMultipleChoice(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswer\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl text-blue-600\">\n                  <BsCheckSquareFill />\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl text-blue-600\">\n                        <BsCheckSquareFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.SingleMultiple:\n      const userAnswerSingle: MultipleChoiceQuestionAnswerInterface[] =\n        toMultipleChoice(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerSingle\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl text-blue-600\">\n                  <BsCheckCircleFill />\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl text-blue-600\">\n                        <BsCheckCircleFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n\n    case questionTypeElementsType.CalculatedMultipleChoice:\n      const userAnswer1: CalculatedMultipleChoiceQuestionAnswerInterface[] =\n        toCalculatedMultipleChoice(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswer1\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl text-blue-600\">\n                  <BsCheckSquareFill />\n                </div>\n                <div className=\"text-base font-normal text-gray-500\">\n                  {item.value.length > 1 ? (\n                    <>\n                      Between{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[0]}\n                      </span>{\" \"}\n                      and{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[1]}\n                      </span>\n                    </>\n                  ) : (\n                    <span className=\"text-gray-700\">\n                      {item.value[0].toString()}\n                    </span>\n                  )}\n                </div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl text-blue-600\">\n                        <BsCheckSquareFill />\n                      </div>\n                      <div className=\"text-base font-normal text-gray-500\">\n                        {item.value.length > 1 ? (\n                          <>\n                            Between{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[0]}\n                            </span>{\" \"}\n                            and{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[1]}\n                            </span>\n                          </>\n                        ) : (\n                          <span className=\"text-blue-600\">\n                            {item.value[0].toString()}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n\n    case questionTypeElementsType.Matching:\n      const userAnswerMatch: MatchingQuestionAnswerInterface[] =\n        toMatching(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerMatch.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 font-bold border border-blue-300\"\n            >\n              <div className=\"text-xl text-blue-600 font-bold p-3 pr-1 md:pr-3\">\n                <div className=\"h-8 w-8 p-3 bg-blue-100 rounded-full flex items-center justify-center\">\n                  {i + 1}\n                </div>\n              </div>\n              <div className=\"flex flex-col lg:flex-row items-center gap-3 w-full h-full truncate\">\n                <div\n                  className=\"w-full mt-3 lg:mb-0\"\n                  dangerouslySetInnerHTML={{ __html: item.value }}\n                ></div>\n                <div className=\"flex flex-row items-center gap-3 w-full mb-3 lg:mb-0\">\n                  <div className=\"text-3xl text-gray-500 group-hover:text-blue-600\">\n                    <BsArrowRightSquareFill />\n                  </div>\n                  <div\n                    className=\"w-full mr-2\"\n                    dangerouslySetInnerHTML={{ __html: item.status }}\n                  ></div>\n                </div>\n              </div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 font-bold border border-blue-300\"\n                  >\n                    <div className=\"text-xl text-blue-600 font-bold p-3 pr-1 md:pr-3\">\n                      <div className=\"h-8 w-8 p-3 bg-blue-100 rounded-full flex items-center justify-center\">\n                        {i + 1}\n                      </div>\n                    </div>\n                    <div className=\"flex flex-col lg:flex-row items-center gap-3 w-full h-full truncate\">\n                      <div\n                        className=\"w-full mt-3 lg:mb-0\"\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                      <div className=\"flex flex-row items-center gap-3 w-full mb-3 lg:mb-0\">\n                        <div className=\"text-3xl text-gray-500 group-hover:text-blue-600\">\n                          <BsArrowRightSquareFill />\n                        </div>\n                        <div\n                          className=\"w-full mr-2\"\n                          dangerouslySetInnerHTML={{ __html: item.status }}\n                        ></div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.TrueFalse:\n      const userAnswerTureFalse: TrueFalseQuestionAnswerInterface[] =\n        toTrueFalse(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerTureFalse\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl\">\n                  <BsArrowRightCircleFill />\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl\">\n                        <BsArrowRightCircleFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.Numeric:\n      const userAnswerNumerical: NumericalQuestionAnswerInterface[] =\n        toNumerical(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerNumerical.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div className=\"text-gray-600 text-base font-normal\">\n                {item.value.length > 1 ? (\n                  <>\n                    Between{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[0]}\n                    </span>{\" \"}\n                    and{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[1]}\n                    </span>\n                  </>\n                ) : (\n                  item.value.length > 0 && (\n                    <span className=\"text-gray-700\">\n                      {item.value[0].toString()}\n                    </span>\n                  )\n                )}\n              </div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div className=\"text-gray-600 text-base font-normal\">\n                      {item.value.length > 1 ? (\n                        <>\n                          Between{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[0] - item.value[1]}\n                          </span>{\" \"}\n                          and{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[0] + item.value[1]}\n                          </span>\n                        </>\n                      ) : (\n                        item.value.length > 0 && (\n                          <span className=\"text-blue-700\">\n                            {item.value[0].toString()}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.SimpleCalculate:\n      const userAnswerSimpleCalculate: SimpleCalculatedQuestionAnswerInterface[] =\n        toSimpleCalculated(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerSimpleCalculate.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div className=\"text-gray-600 text-base font-normal\">\n                {item.value.length > 1 ? (\n                  <>\n                    Between{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[0]}\n                    </span>{\" \"}\n                    and{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[1]}\n                    </span>\n                  </>\n                ) : (\n                  item.value.length > 0 && (\n                    <span className=\"text-gray-700\">\n                      {item.value[0].toString()}\n                    </span>\n                  )\n                )}\n              </div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div className=\"text-gray-600 text-base font-normal\">\n                      {item.value.length > 1 ? (\n                        <>\n                          Between{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[0]}\n                          </span>{\" \"}\n                          and{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[1]}\n                          </span>\n                        </>\n                      ) : (\n                        item.value.length > 0 && (\n                          <span className=\"text-blue-700\">\n                            {item.value[0].toString()}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.ShortAnswer:\n      const userAnswerShortAnswer: ShortAnswerQuestionAnswerInterface[] =\n        toShortAnswer(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerShortAnswer.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: item.value,\n                }}\n              ></div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: item.value,\n                      }}\n                    ></div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    // Essay\n    case questionTypeElementsType.Essay:\n      const userAnswerEssay: EssayQuestionAnswerInterface[] =\n        toEssay(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerEssay.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: item.value,\n                }}\n              ></div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: item.value,\n                      }}\n                    ></div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.Embedded:\n      return <div></div>;\n    case questionTypeElementsType.Hybrid:\n      return <div></div>;\n    default:\n      return <div className=\"text-blue-600 font-extrabold\">Answer added</div>;\n  }\n};\n\nconst FindAnswer = (props: FindAnswerProps) => {\n  const answer = props.answersList.find(\n    (item) => item.question_id === props.question.question_id\n  );\n  let UserAnswersSel = props.question.question.find(\n    (itm) => itm.language === props.selectedLanguage\n  );\n  if (UserAnswersSel === undefined && props.question.question.length > 0) {\n    UserAnswersSel =\n      props.question.question.find(\n        (itm) => itm.language === props.selectedLanguage\n      ) === undefined\n        ? props.question.question[0]\n        : props.question.question.find(\n            (itm) => itm.language === props.selectedLanguage\n          )!;\n  }\n  if (answer === undefined || UserAnswersSel === undefined) {\n    return (\n      <div className=\"text-yellow-600 font-extrabold text-2xl text-center\">\n        No answer found!\n      </div>\n    );\n  } else {\n    let SubQ = UserAnswersSel.sub_question.find(\n      (itm) => findQType(itm.typeShort) === props.subQuestionType\n    );\n    return (\n      <div>\n        {SubQ === undefined\n          ? resultDiv(\n              answer.answers[0].answer,\n              UserAnswersSel.answers[0].answer,\n              props\n            )\n          : answer.answers\n              .filter((itm) => SubQ && itm.reference === SubQ.reference)\n              .map((user_answer) => {\n                const testQ = UserAnswersSel!.answers.find(\n                  (itm) => itm.reference === user_answer.reference\n                );\n                if (testQ !== undefined) {\n                  return resultDiv(user_answer.answer, testQ.answer, props);\n                } else {\n                  return <div>Answered</div>;\n                }\n              })}\n      </div>\n    );\n  }\n};\n\nexport default FindAnswer;\n","import {\n  QuestionForEmbedded,\n  QuestionForHybrid,\n  questionShortElementsType,\n  questionTypeElementsType,\n} from \"@mastrecruit/common\";\nimport React from \"react\";\nimport { MdCheckCircle, MdClose } from \"react-icons/md\";\nimport { Auth } from \"../../../actions/auth\";\nimport {\n  candidateExamStoreInterface,\n  QuestionAnswersStore,\n} from \"../../../actions/candidate_exam\";\nimport { questionTypesStoreInterface } from \"../../../actions/questionTypes\";\nimport { System } from \"../../../actions/system\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { EmbeddedQuestion } from \"../../../components/QuestionPreview/QuestionPreview\";\nimport { course } from \"../../../interfaces/course\";\nimport {\n  QuestionAnswerInterface,\n  QuestionInterface,\n  QuestionLanguage,\n} from \"../../../interfaces/question\";\nimport {\n  ExamAnsweredQuestions,\n  ExamPendingQuestions,\n  findQuestionType,\n} from \"../utils/utils\";\nimport FindAnswer from \"./FindAnswer\";\n\ninterface QuestionsReviewProps {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  system: System;\n  setSelectedExamQuestion: (\n    exam_id: string,\n    question_id: string | null\n  ) => void;\n  submitQuestionAnswer: boolean;\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  submitExam: () => void;\n  selectedExam: course | null;\n  setSubmitModal: (status: boolean) => void;\n  selectedLanguage: QuestionLanguage;\n  wholeQuestion: QuestionInterface;\n  answersList: QuestionAnswersStore[];\n}\n\nexport const findQType = (\n  typeShort: questionShortElementsType | QuestionForEmbedded | QuestionForHybrid\n): questionTypeElementsType => {\n  let changed: questionTypeElementsType = questionTypeElementsType.Hybrid;\n  switch (typeShort) {\n    case QuestionForHybrid.Calculated:\n      changed = questionTypeElementsType.Calculated;\n      break;\n    case QuestionForHybrid.CalculatedMultipleChoice:\n      changed = questionTypeElementsType.CalculatedMultipleChoice;\n      break;\n    case QuestionForHybrid.Essay:\n      changed = questionTypeElementsType.Essay;\n      break;\n    case QuestionForHybrid.Matching:\n      changed = questionTypeElementsType.Matching;\n      break;\n    case QuestionForHybrid.MultipleChoice:\n      changed = questionTypeElementsType.MultipleChoice;\n      break;\n    case QuestionForHybrid.Numeric:\n      changed = questionTypeElementsType.Numeric;\n      break;\n    case QuestionForHybrid.ShortAnswer:\n      changed = questionTypeElementsType.ShortAnswer;\n      break;\n    case QuestionForHybrid.SimpleCalculate:\n      changed = questionTypeElementsType.SimpleCalculate;\n      break;\n    case QuestionForHybrid.SingleMultiple:\n      changed = questionTypeElementsType.SingleMultiple;\n      break;\n    case QuestionForHybrid.TrueFalse:\n      changed = questionTypeElementsType.TrueFalse;\n      break;\n  }\n  return changed;\n};\n\nconst FindAnswerHybrid = (props: QuestionsReviewProps) => {\n  let str = \"a\";\n  if (props.submitQuestionAnswer === true) {\n    return (\n      <div className=\"bg-white rounded mx-4 my-4\">\n        <div className=\"text-gray-600 mx-4\">Saving changes, Please wait...</div>\n        <Loading />\n      </div>\n    );\n  }\n  return (\n    <div className={`pt-4 border-t border-gray-300 bg-white`}>\n      <div className=\"px-4 pb-2\">\n        <div className=\"my-2\">\n          <div\n            className=\"flex flex-col gap-3 overflow-y-auto\"\n            style={{ maxHeight: \"100%\" }}\n          >\n            {console.log(\n              \"Whole: \",\n              props.wholeQuestion,\n              props.selectedLanguage\n            )}\n            <div>\n              {findQuestionType(\n                props.wholeQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.Hybrid &&\n                props.wholeQuestion.question.find(\n                  (test) => test.language === props.selectedLanguage\n                ) !== undefined &&\n                props.wholeQuestion.question\n                  .find((test) => test.language === props.selectedLanguage)!\n                  .sub_question.map((item, i) => {\n                    let stri = String.fromCharCode(\n                      str.charCodeAt(str.length - 1) + i\n                    );\n                    return (\n                      <div\n                        key={i + 1}\n                        className=\"bg-white hover:bg-white border border-white hover:border-blue-400 px-2 py-2 rounded  animate__animated animate__fadeIn animate__fast group\"\n                      >\n                        <div className=\"grid md:grid-cols-12 w-full\">\n                          <div className=\"col-span-12 flex flex-row items-center gap-3\">\n                            <div\n                              key={i + 1}\n                              className=\"w-6 h-6 p-2 rounded-full bg-blue-100 flex justify-center items-center font-bold text-lg text-blue-600 cursor-pointer\"\n                            >\n                              {stri}\n                            </div>\n                            <div className=\"text-sm w-full\">\n                              {props.wholeQuestion.question.find(\n                                (test) =>\n                                  test.language === props.selectedLanguage\n                              ) !== undefined ? (\n                                findQuestionType(\n                                  item.type,\n                                  props.questionTypes.questionTypes\n                                ) === questionTypeElementsType.Embedded ? (\n                                  EmbeddedQuestion(\n                                    props.wholeQuestion!,\n                                    props.questionTypes.questionTypes,\n                                    props.selectedLanguage,\n                                    props.candidateExam.question_answers,\n                                    (data: QuestionAnswerInterface) => {}\n                                  )\n                                ) : (\n                                  <div\n                                    className=\"font-bold text-gray-700 text-base\"\n                                    dangerouslySetInnerHTML={{\n                                      __html: item.description,\n                                    }}\n                                  ></div>\n                                )\n                              ) : (\n                                props.wholeQuestion.question.length > 0 && (\n                                  <div\n                                    className=\"font-bold text-gray-700 text-base max-h-20 truncate\"\n                                    dangerouslySetInnerHTML={{\n                                      __html: item.description,\n                                    }}\n                                  ></div>\n                                )\n                              )}\n                              <div className=\"text-blue-700 font-bold text-sm w-full\">\n                                Answer: &nbsp;\n                                {props.questionTypes.questionTypes !== null && (\n                                  <FindAnswer\n                                    selectedLanguage={props.selectedLanguage}\n                                    question={props.wholeQuestion}\n                                    answersList={props.answersList}\n                                    questionTypes={\n                                      props.questionTypes.questionTypes\n                                    }\n                                    onClick={() => {}}\n                                    showCorrectAnswer={false}\n                                    subQuestionType={findQType(item.typeShort)}\n                                    reference={item.reference}\n                                  />\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FindAnswerHybrid;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { search } from \"../../../utils/functions\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getFailedExam = (\n  allData: ClaimExamResultsDetails[],\n  allCourses: course[]\n): ClaimExamResultsDetails[] => {\n  let result: ClaimExamResultsDetails[] = [];\n  allData.forEach((element) => {\n    if (element.total_marks < 100) {\n      let data = element;\n      data.course_name = getCourseById(allCourses, element.course)\n        ? getCourseById(allCourses, element.course)!.course_name\n        : \"Unknown exam\";\n      result.push(data);\n    }\n  });\n\n  return result;\n};\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormExamListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateAnswers: ClaimExamResultsDetails[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n\n  // REDUX //////////////////////\n  courses: course[] | null;\n};\n\nconst FormExamList: React.FC<FormExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            !props.courses ||\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.courses &&\n        getFailedExam(props.candidateAnswers, props.courses).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.answer_sheet_id\n          )\n        ).length > 0 ? (\n          search(\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ),\n            searchInput\n          ).map((item: ClaimExamResultsDetails, index: number) => (\n            <div\n              className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                props.claimFileId === item.answer_sheet_id &&\n                \"bg-blue-50 border-l-4 border-blue-500\"\n              }`}\n              key={index + item.answer_sheet_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.answer_sheet_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.course_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.answer_sheet_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No failed exam available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  course,\n}: StoreState): {\n  courses: course[] | null;\n} => {\n  return {\n    courses: course.courses,\n  };\n};\nexport default React.memo(connect(mapStateToProps, {})(FormExamList));\n","import React, { Component, Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { BsFillFileEarmarkTextFill } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"../../utils/app.config\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Auth,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n  FC_Access,\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n  InitialExamDetails,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { UserExamStatus, UserExamsListInterface } from \"../../interfaces/exam\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { DATE, getMinutesFromTwoDates } from \"../../utils/functions\";\nimport { CountDown } from \"../../components/CountDown/CountDown\";\nimport { ExamTimeStatus, validateExamDate } from \"../../utils/question_bank\";\nimport { course, PositionAPI, PositionAPICourse } from \"../../interfaces\";\nimport {\n  ApplicationPeriodGet,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport { MdClose } from \"react-icons/md\";\nimport ChooseExamCenter, {\n  LocationTableInterface,\n} from \"../Application/ExamCenter/ChooseExamCenter\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\n\nexport const compareWithToday = (tooday: moment.Moment, date: string) => {\n  const myDate = DATE(date, \"MM/DD/YYYY\");\n  let todayConverted =\n    (tooday.get(\"month\") < 9 ? \"0\" : \"\") +\n    (tooday.get(\"month\") + 1).toString() +\n    \"/\" +\n    tooday.get(\"date\") +\n    \"/\" +\n    tooday.get(\"year\");\n  if (new Date(myDate).getTime() < new Date(todayConverted).getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport interface ExamDoneDetailsAnswers {\n  exam_id: string;\n  course: string;\n  course_name: string;\n  discription: string;\n  termes: string;\n  rules: {\n    right_click_enabled: boolean;\n    copy_enabled: boolean;\n    paste_enabled: boolean;\n    stop_candidate_when_comeback: boolean;\n    allow_to_leave_browser: boolean;\n  };\n  period: string;\n  exam_date: string;\n}\n\ninterface NotPreparedExam {\n  course: string;\n  course_name: string;\n  course_code: string;\n  position: string;\n}\ninterface changeLocProps {\n  changeLocation: () => void;\n}\ninterface CandidateExamsProps {\n  FC_GetProfileDetails: Function;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  LoadCandidateApplications: (\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void; // Not used\n  setSelectedCourse: (course: course | null) => void;\n  setSelectedPosition: (position: PositionAPI) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  AddUserApplication: (application: GetApplicationsAPI) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n}\n\nconst ChangeLocationComponent = (props: changeLocProps): JSX.Element => {\n  const [display, setDisplay] = useState<boolean>(true);\n  if (display === false) {\n    return <div></div>;\n  }\n  return (\n    <div className=\"absolute right-2 left-2 md:right-1/4 md:left-1/4 lg:left-1/2 lg:right-auto bg-yellow-50 shadow-xl rounded py-1 px-1 flex flex-row justify-between items-center gap-2 text-yellow-800 -mt-5 lg:-mt-8\">\n      <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-1\">\n        <span className=\"font-bold\">You are advised to change location</span>\n        <div\n          onClick={props.changeLocation}\n          className=\"px-2 py-1 rounded bg-blue-100 text-blue-600 w-max cursor-pointer\"\n        >\n          Change\n        </div>\n      </div>\n      <div\n        onClick={() => setDisplay(false)}\n        className=\"bg-yellow-100 text-yellow-600 rounded-full flex items-center justify-center p-1 h-8 w-8 cursor-pointer\"\n      >\n        <MdClose className=\"text-4xl\" />\n      </div>\n    </div>\n  );\n};\n\ninterface candidatePendingExamsList {\n  preparedExam: UserExamsListInterface[];\n  notPreparedExam: NotPreparedExam[];\n}\ninterface CandidateExamsState {\n  loading: boolean;\n  loadingExamsDone: boolean;\n  candidateExams: candidatePendingExamsList | null;\n  activeExams: string[];\n  candidateApplications: GetApplicationsAPI[] | null;\n  selectedCourse: course | null;\n  centersModal: boolean;\n  maxExamModal: boolean;\n  selectedPosition: string;\n  successMessage: string;\n  selectedExam: ExamDoneDetailsAnswers | null;\n  doing_exam: boolean;\n}\n\nexport class _CandidateExams extends Component<\n  CandidateExamsProps,\n  CandidateExamsState\n> {\n  constructor(props: CandidateExamsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingExamsDone: false,\n      candidateExams: null,\n      activeExams: [],\n      candidateApplications: null,\n      selectedCourse: null,\n      centersModal: false,\n      maxExamModal: false,\n      selectedPosition: \"\",\n      successMessage: \"\",\n      selectedExam: null,\n      doing_exam: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setloadingExamsDone = (status: boolean) => {\n    this.setState({ loadingExamsDone: status });\n  };\n  loadCandidateExams = async (user: string, period: string) => {\n    this.setLoading(true);\n    setAxiosToken();\n    try {\n      const res = await axios.get<candidatePendingExamsList>(\n        `${API.QBank}/exam/user/${user}/${period}`\n      );\n      this.setState({ candidateExams: res.data });\n      // console.log(\"My exams list: \", res.data);\n    } catch (error: any) {\n      console.log(\"My exams error: \", { ...error });\n      alert(errorToText(error));\n    }\n    this.setLoading(false);\n  };\n  loadUserProfileDetails = () => {\n    this.setLoading(true);\n    this.props.FC_GetProfileDetails(\n      this.props.auth.user.user_id,\n      (status: boolean, msg: string) => {\n        if (status === true) {\n          this.setLoading(false);\n        } else {\n          this.setLoading(true);\n        }\n      }\n    );\n  };\n\n  InitializationFn = (\n    application: GetApplicationsAPI,\n    item: UserExamsListInterface\n  ) => {\n    for (let course of application.position.courses) {\n      let testDone = this.props.candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = application.exams.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          if (\n            application.application_status === ApplicationStates.Shortlisted\n          ) {\n            // Select exam\n            this.props.setSelectedPosition(application.position);\n            this.props.setSelectedCourse(\n              application.position.courses.find(\n                (itm) => itm.course_id === item.course\n              )!\n            );\n            this.setState({ doing_exam: true });\n            return (\n              this.props.periods.selected_period &&\n              this.props.InitializeExamDetails(\n                application.application_session.session_plan_id,\n                course.course_id,\n                center_id.district_id,\n                center_id.center_id,\n                center_id.room_id,\n                application.position,\n                true,\n                this.setLoading\n              )\n            );\n          } else {\n            alert(\"Corresponding application is not shortlisted!\");\n          }\n        }\n      }\n    }\n  };\n  loadUserApplications = async () => {\n    this.props.LoadCandidateApplications(\n      this.props.auth.user.user_id,\n      this.setLoading\n    );\n  };\n  findLocation = (position_id: string, course_id: string) => {\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      const test = this.props.candidateApplications.candidate_applications.find(\n        (item) =>\n          item.position.position_id === position_id &&\n          item.exams.filter((itm) => itm.course_id === course_id) &&\n          item.application_session.session_plan_id ===\n            this.props.auth.application_session?.session_plan_id\n      );\n      if (test !== undefined) {\n        let course = test.exams.find((itm) => itm.course_id === course_id);\n        if (course !== undefined) {\n          return course;\n        }\n      }\n    }\n    return null;\n  };\n  updateLocation = async (\n    application_id: string,\n    exams: sentExamInterface[]\n  ) => {\n    this.setState({ loading: true });\n    for (let i in exams) {\n      try {\n        const res = await axios.post(\n          `${API.APPLICATION}/application/updatemissed`,\n          {\n            application_id: application_id,\n            exams: exams[i],\n          }\n        );\n        if (res.status === 200) {\n          this.setState({\n            selectedCourse: null,\n            centersModal: false,\n            maxExamModal: false,\n            selectedPosition: \"\",\n            successMessage: \"Location updated successfully!\",\n          });\n          this.loadUserApplications();\n        }\n      } catch (error: any) {\n        console.log(\"Update loc err: \", { ...error });\n      }\n    }\n  };\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      let application =\n        this.props.candidateApplications.candidate_applications.find(\n          (item) => item.position.position_id === this.state.selectedPosition\n        );\n      if (application !== undefined) {\n        this.updateLocation(application.application_id, exams);\n      } else {\n        alert(\"Invalid application\");\n      }\n    } else {\n      alert(\"Missing application\");\n    }\n  };\n  addLocation = (\n    course_id: string,\n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string\n  ) => {\n    return this.updateLocationFunction([\n      {\n        course_id: course_id,\n        proctoring_type: \"Center\",\n        center_id: location.center_id,\n        district_id: location.district_id,\n      },\n    ]);\n  };\n  componentDidMount = () => {\n    const selPeriod =\n      this.props.periods.selected_period === null\n        ? this.props.auth.application_session?.session_plan_id\n        : this.props.periods.selected_period.session_plan_id;\n\n    if (\n      this.props.auth.application_session !== null &&\n      this.state.candidateExams === null\n    ) {\n      this.loadCandidateExams(\n        this.props.auth.user.user_id,\n        this.props.auth.application_session.session_plan_id\n      );\n    }\n    if (\n      this.props.auth.user.sex === \"\" ||\n      this.props.auth.user.sex.length === 0\n    ) {\n      this.loadUserProfileDetails();\n    }\n    if (this.props.periods.applicationPeriods === null) {\n      this.props.loadApplicationPeriods(this.setLoading);\n    }\n    if (this.props.candidateApplications.candidate_applications === null) {\n      this.loadUserApplications();\n    }\n  };\n\n  removeDuplicatesExams = (\n    exams: UserExamsListInterface[]\n  ): UserExamsListInterface[] => {\n    let temp: UserExamsListInterface[] = [];\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      for (let item of exams) {\n        if (\n          this.props.candidateApplications.candidate_applications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm._id === item._id) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n\n  removeDuplicatesNotPreparedExams = (\n    exams: NotPreparedExam[]\n  ): NotPreparedExam[] => {\n    let temp: NotPreparedExam[] = [];\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      for (let item of exams) {\n        if (\n          this.props.candidateApplications.candidate_applications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm.course === item.course) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n  setTimeOut = (exam_id: string) => {\n    let temps: string[] = this.state.activeExams;\n    this.setState({\n      activeExams: [...temps, exam_id],\n    });\n  };\n  selectApplication = (\n    applications: GetApplicationsAPI[] | null,\n    position_id: string,\n    course_id: string,\n    selected_period: ApplicationPeriodGet | null\n  ): GetApplicationsAPI | null => {\n    if (applications !== null && selected_period !== null) {\n      let temp = applications.find(\n        (item) =>\n          item.position.position_id === position_id &&\n          item.application_session.session_plan_id ===\n            selected_period.session_plan_id\n      );\n      if (temp !== undefined) {\n        if (\n          temp.position.courses.find((itm) => itm.course_id === course_id) !==\n          undefined\n        ) {\n          return temp;\n        }\n      }\n    }\n    return null;\n  };\n  setMaxExamModal = (status: boolean) => {\n    this.setState({ maxExamModal: status });\n  };\n\n  changeLocation = (item: PositionAPICourse) => {\n    this.setState({ selectedCourse: item, centersModal: true });\n    this.setMaxExamModal(true);\n  };\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n    this.setMaxExamModal(false);\n  };\n\n  render() {\n    const today = moment().tz(TimeZone);\n    // console.log(\"TODAY: \", today.get(\"days\"));\n    const selPeriod =\n      this.props.periods.selected_period === null\n        ? this.props.auth.application_session\n        : this.props.periods.selected_period;\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />;\n    }\n    if (\n      this.props.candidateExam.selected_exam_id !== null &&\n      this.props.candidateExam.selected_exam_details !== null &&\n      (this.props.candidateExam.doing_exam === true ||\n        this.state.doing_exam === true)\n    ) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    return (\n      <Fragment>\n        {this.state.selectedCourse === null ? (\n          <div className=\"mt-2 -ml-2 mr-3 pb-5\">\n            <div className=\"rounded mt-2\">\n              <div className=\"flex flex-row items-center gap-3\">\n                <Link\n                  to=\"/apps-page\"\n                  title=\"Back to menus\"\n                  className=\"bg-white group hover:bg-blue-50 h-10 w-10 flex items-center justify-center rounded-full cursor-pointer\"\n                >\n                  <BiArrowBack className=\"text-3xl text-blue-600 group-hover:text-blue-800\" />\n                </Link>\n                <div className=\"flex flex-col\">\n                  <span className=\"font-extrabold text-3xl\">My exams</span>\n                  <span className=\"text-gray-600 text-sm\">\n                    List of exams for curent session:{\" \"}\n                    <span className=\"font-bold text-bold text-blue-600\">\n                      {this.props.auth.application_session?.session_plan_name}\n                    </span>\n                  </span>\n                </div>\n              </div>\n            </div>\n            {this.state.successMessage !== \"\" && (\n              <div\n                title=\"Click to close the message\"\n                onClick={() => this.setState({ successMessage: \"\" })}\n                className=\"animate__animated animate__zoomIn px-3 py-2 bg-green-500 text-white my-2 rounded cursor-pointer\"\n              >\n                {this.state.successMessage}\n              </div>\n            )}\n            {console.log(\"Not found: \", this.state.candidateExams)}\n            {this.state.loading === true ||\n            this.state.loadingExamsDone === true ||\n            this.state.candidateExams === null ||\n            this.props.candidateApplications.candidate_applications == null ? (\n              <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n                <Loading />\n              </div>\n            ) : this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).length === 0 ? (\n              <div className=\"bg-gray-50 rounded px-4 py-5 text-center font-bold mt-2 text-2xl text-gray-400\">\n                No exams found\n              </div>\n            ) : (\n              this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).map((item, i) => (\n                <div key={i + 1} className=\"my-2 rounded bg-white p-2 group\">\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div>\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-300 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col w-full\">\n                        <span className=\"text-base text-gray-800 font-extrabold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center justify-start w-full gap-3 -mt-1\">\n                          <div className=\"text-sm text-gray-500 group-hover:text-blue-600\">\n                            Date: {DATE(item.exam_date, \"DD/MM/YYYY\")}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-gray-100 underline text-gray-500  font-bold rounded-full px-2\">\n                            Start time: {item.start_time}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-blue-100 text-blue-900  font-bold rounded-full px-2\">\n                            Status: {item.user_status}\n                          </div>\n                        </div>\n                        {this.findLocation(item.position, item.course) !==\n                          null && (\n                          <div className=\"flex flex-row items-center gap-2 mt-2\">\n                            <div>\n                              Exam center:{\" \"}\n                              <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                {\n                                  this.findLocation(item.position, item.course)\n                                    ?.center_name\n                                }\n                              </span>\n                            </div>\n                            <div className=\"w-max flex flex-col md:flex-row\">\n                              Room number:{\" \"}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 ? (\n                                <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                  Waiting room\n                                </span>\n                              ) : (\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.room_number\n                                  }\n                                </span>\n                              )}\n                              {/* Change loc */}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 &&\n                                validateExamDate(\n                                  item.exam_date,\n                                  item.start_time,\n                                  item.end_time\n                                ) !== ExamTimeStatus.Expired && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"lg:w-full flex flex-row items-center justify-end\">\n                      {this.state.activeExams.find(\n                        (itm) => itm === item._id\n                      ) !== undefined ||\n                      item.user_status === UserExamStatus.Editing ||\n                      item.user_status === UserExamStatus.Paused ? (\n                        validateExamDate(\n                          item.exam_date,\n                          item.start_time,\n                          item.end_time\n                        ) !== ExamTimeStatus.Expired ? (\n                          this.selectApplication(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            item.position,\n                            item.course,\n                            selPeriod\n                          )?.application_status !==\n                          ApplicationStates.Shortlisted ? (\n                            <div className=\"text-yellow-800 font-extrabold text-base bg-yellow-100 rounded px-3 py-1 cursor-not-allowed\">\n                              Not shortlisted\n                            </div>\n                          ) : (\n                            <div\n                              onClick={() => {\n                                let application = this.selectApplication(\n                                  this.props.candidateApplications\n                                    .candidate_applications,\n                                  item.position,\n                                  item.course,\n                                  selPeriod\n                                );\n                                if (application !== null) {\n                                  this.InitializationFn(application, item);\n                                } else {\n                                  alert(\"Invalid exam!\");\n                                }\n                              }}\n                              className={`${\n                                item.user_status === UserExamStatus.Editing ||\n                                item.user_status === UserExamStatus.Paused\n                                  ? \"bg-green-600 group-hover:bg-green-800\"\n                                  : \"bg-blue-600 group-hover:bg-blue-800\"\n                              } btn  text-white cursor-pointer w-max`}\n                            >\n                              {item.user_status === UserExamStatus.Editing\n                                ? \"Back to Exam\"\n                                : item.user_status === UserExamStatus.Paused\n                                ? \"Paused, back to exam\"\n                                : \"Start Exam\"}\n                            </div>\n                          )\n                        ) : item.user_status === UserExamStatus.Editing ||\n                          item.user_status === UserExamStatus.Done ||\n                          item.user_status === UserExamStatus.Paused ||\n                          item.user_status === UserExamStatus.Removed ? (\n                          <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                            <span>Marks</span>\n                            <span className=\"text-2xl font-extrabold -mt-2\">\n                              {item.user_marks.toFixed(\n                                item.user_marks === 100 || item.user_marks === 0\n                                  ? 0\n                                  : 2\n                              )}\n                              %\n                            </span>\n                            <div\n                              onClick={() =>\n                                this.setState({\n                                  selectedExam: {\n                                    course: item.course,\n                                    course_name: item.course_name,\n                                    discription: item.discription,\n                                    termes: item.termes,\n                                    rules: item.rules,\n                                    period: item.period,\n                                    exam_date: item.exam_date,\n                                    exam_id: item._id,\n                                  },\n                                })\n                              }\n                              className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                            >\n                              Check details\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"bg-yellow-100 text-yellow-700 font-extrabold text-base px-3 py-1 rounded-md w-max\">\n                            Expired\n                          </div>\n                        )\n                      ) : item.found === false ? (\n                        <div\n                          title=\"Please wait for the exam time\"\n                          className=\"text-lg lg:text-xl font-extrabold bg-green-100 text-green-700 px-3 py-1 rounded cursor-not-allowed w-max\"\n                        >\n                          <CountDown\n                            start_time={new Date(today.toString()).toString()}\n                            duration_min={getMinutesFromTwoDates(\n                              new Date(today.toString()),\n                              new Date(\n                                DATE(item.exam_date, \"MM/DD/YYYY\") +\n                                  \" \" +\n                                  item.start_time\n                              )\n                            )}\n                            timeout={() => this.setTimeOut(item._id)}\n                            returnString={true}\n                            labels={true}\n                            days\n                          />\n                        </div>\n                      ) : (\n                        <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                          <span>Marks</span>\n                          <span className=\"text-2xl font-extrabold -mt-2\">\n                            {item.user_marks.toFixed(\n                              item.user_marks === 100 || item.user_marks === 0\n                                ? 0\n                                : 2\n                            )}\n                            %\n                          </span>\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selectedExam: {\n                                  course: item.course,\n                                  course_name: item.course_name,\n                                  discription: item.discription,\n                                  termes: item.termes,\n                                  rules: item.rules,\n                                  period: item.period,\n                                  exam_date: item.exam_date,\n                                  exam_id: item._id,\n                                },\n                              })\n                            }\n                            className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                          >\n                            Check details\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n            {/* Not prepared exams */}\n            {this.state.candidateExams !== null &&\n              this.state.loading !== true &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).length > 0 &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).map((item, i) => (\n                <div\n                  key={i + 1}\n                  className=\"my-2 rounded bg-white p-2 py-3 group\"\n                >\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div className=\"\">\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-300 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-base text-gray-600 font-bold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center gap-3 -mt-1\">\n                          {this.findLocation(item.position, item.course) !==\n                            null && (\n                            <div className=\"flex flex-row items-center gap-2 mt-2\">\n                              <div className=\"flex flex-col md:flex-row md:items-center\">\n                                Exam center:{\" \"}\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.center_name\n                                  }\n                                </span>\n                              </div>\n                              <div className=\"w-max flex flex-col md:flex-row md:items-center\">\n                                Room number:{\" \"}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 ? (\n                                  <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                    Waiting room\n                                  </span>\n                                ) : (\n                                  <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                    {\n                                      this.findLocation(\n                                        item.position,\n                                        item.course\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )}\n                                {/* Change loc */}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-100 text-gray-600 font-extrabold text-base px-3 py-1 rounded-md\">\n                      Not prepared\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        ) : this.state.loading === true ? (\n          <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n            <Loading />\n          </div>\n        ) : (\n          <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mr-1 -ml-3 rounded-t-md bg-white shadow-md pb-5\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Change exam location\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() => {\n                        this.setState({\n                          centersModal: false,\n                          selectedCourse: null,\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ChooseExamCenter\n              positionCourses={this.state.selectedCourse}\n              addLocation={this.addLocation}\n              closeModal={this.closeModal}\n            />\n          </div>\n        )}\n        {this.state.selectedExam !== null && (\n          <Modal\n            title={\n              <div className=\"text-2xl font-extrabold text-blue-600 px-2\">\n                Exam result details\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ selectedExam: null })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <CandidateAnswersDetails\n              exam_id={this.state.selectedExam}\n              showAnswers={false}\n            />\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  candidateExam,\n  candidateApplications,\n  periods,\n}: StoreState): {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    candidateExam: candidateExam,\n    candidateApplications: candidateApplications,\n    periods: periods,\n  };\n};\n\nexport const CandidateExams = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n})(_CandidateExams);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  GetClaimingTypes,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\nexport const filterClaimsByClaimType = (\n  claimList: CandidateClaimInterface[],\n  claimType: PlansTypeKeys | \"all\"\n): CandidateClaimInterface[] => {\n  if (claimType === \"all\") {\n    return claimList;\n  }\n\n  return claimList.filter((item) => item.type_key === claimType);\n};\n\ntype AdminFilterByTypeProps = {\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getAllClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst AdminFilterByType: React.FC<AdminFilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n          setLoading(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n      setLoading(false);\n    }\n  }, [loadingClaimTypes, props]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.allClaims && thisType === \"all\") {\n      result = claiming.allClaims.filter(\n        (item) => item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n    if (claiming.allClaims && thisType !== \"all\") {\n      result = claiming.allClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && props.claiming.claimTypes && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    GetClaimingTypes,\n    setSelectedClaimType,\n    getAllClaims,\n    PushPopupAlert,\n  })(AdminFilterByType)\n);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { SessionPlanInterface } from \"../../interfaces\";\n\ntype ClaimHeaderTitleProps = {\n  headerTitle: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  setThisPeriod: (state: SessionPlanInterface | null) => void;\n  setLoadingSession: (state: boolean) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst selectPeriod = (\n  sessions: SessionPlanInterface[],\n  period_id: string,\n  setThisPeriod: (state: SessionPlanInterface | null) => void\n) => {\n  setThisPeriod(\n    sessions.filter((item) => item.session_plan_id === period_id)[0]\n  );\n};\n\nconst ClaimHeaderTitle: React.FC<ClaimHeaderTitleProps> = (props) => {\n  const isLoading = (): boolean => {\n    if (props.loading || props.loadingSession || props.periodChanged) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.headerTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              isLoading() ? \"cursor-wait\" : \"cursor-default\"\n            }`}\n            value={props.thisPeriod ? props.thisPeriod.session_plan_id : \"\"}\n            disabled={isLoading()}\n            onChange={(e) => {\n              selectPeriod(\n                props.application_sessions,\n                e.target.value,\n                props.setThisPeriod\n              );\n              props.setLoadingSession(true);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option\n                key={session.session_plan_id + item}\n                value={session.session_plan_id}\n              >\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default React.memo(ClaimHeaderTitle);\n","import React, { Component } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { claimReasonInterface } from \"../../../interfaces\";\nimport search from \"../../../utils/search\";\n\nexport const claimReasonsData = [\n  { key: 1, reason: \"Not placed (Sinahawe umwanya)\" },\n  {\n    key: 2,\n    reason:\n      \"Not placed with higher marks (Sinahawe umwanya kandi hari abo ndusha twakoze bimwe bawuhawe)\",\n  },\n  {\n    key: 3,\n    reason:\n      \"Want to change district of placement (Nifuza guhindurirwa akarere nahawemo umwanya)\",\n  },\n  {\n    key: 4,\n    reason: \"Rejected offer by mistake (Nibeshye nanga umwanya nahawe)\",\n  },\n  {\n    key: 0,\n    reason: \"None of the above (nta na kimwe muri ibyo byavuzwe haruguru)\",\n  },\n];\n\ntype ChooseReasonProps = {\n  claimReason: claimReasonInterface | null;\n  setClaimReason: (value: claimReasonInterface | null) => void;\n  setChooseClaimReason: (value: boolean) => void;\n  allClaimReasons: claimReasonInterface[];\n};\n\ntype ChooseReasonState = {\n  searchInput: string;\n};\n\nclass ChooseReason extends Component<ChooseReasonProps, ChooseReasonState> {\n  constructor(props: ChooseReasonProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* SEARCH PART */}\n        <div className=\"flex items-center w-full my-1\">\n          <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            value={this.state.searchInput}\n          />\n          <button\n            className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n            type=\"button\"\n            onClick={() => this.props.setChooseClaimReason(false)}\n          >\n            Close\n          </button>\n        </div>\n        {/* END SEARCH PART ///////////////// */}\n\n        <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n          {search(this.props.allClaimReasons, this.state.searchInput).map(\n            (item: claimReasonInterface, index) => (\n              <section key={index.toString() + item.id}>\n                <div\n                  className={`py-1 w-full px-2 hover:bg-gray-100 cursor-pointer ${\n                    this.props.claimReason &&\n                    this.props.claimReason.id === item.id\n                      ? \"border-l-4 border-blue-500 bg-blue-50\"\n                      : \"my-1\"\n                  }`}\n                  onClick={() => {\n                    this.props.setChooseClaimReason(false);\n                    this.props.setClaimReason(item);\n                  }}\n                >\n                  <p className=\"text-base text-black\">{item.reason}</p>\n                </div>\n              </section>\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ChooseReason);\n","import React from \"react\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { ClaimGetDocTitle } from \"./ClaimForm\";\n\ntype DocFormViewProps = {\n  thisDoc: DocumentClaimUser;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n};\n\nconst DocFormView: React.FC<DocFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-xl\">\n              {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisDoc.doc_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              ################\n              {/* {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )} */}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n          <div className=\"w-full my-1\">\n            <img\n              src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n              alt=\"doc file\"\n              className={`w-full`}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(DocFormView);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getRejectedApplicants = (\n  applicationData: claimApplicationsInterface[]\n): claimApplicationsInterface[] => {\n  return applicationData.filter(\n    (item) => item.application_status === ApplicationStates.Rejected\n  );\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormApplicationListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateApplications: claimApplicationsInterface[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n};\n\nconst FormApplicationList: React.FC<FormApplicationListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateApplications, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {getRejectedApplicants(props.candidateApplications).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.application_id\n          )\n        ).length > 0 ? (\n          searchApplication(\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ),\n            searchInput\n          ).map((item, index) => (\n            <div\n              className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                props.claimFileId === item.application_id &&\n                \"bg-blue-50 border-l-4 border-blue-500\"\n              }`}\n              key={index + item.application_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.application_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.position.position_title}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.application_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(FormApplicationList);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { ClaimGetDocTitle, isClaimAllowed } from \"./ClaimForm\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { CategorySubcategoryData } from \"../../../interfaces/candidatesInterfaces\";\nimport { CandidateClaimInterface } from \"../../../interfaces\";\nimport { ApplicationSession } from \"../../../actions\";\n\nexport interface DocumentTitleInterface {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  doc_title: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport const DocumentTitleData = (\n  documentData: DocumentClaimUser[],\n  documentCategories: DocumentReducerInterface\n): DocumentTitleInterface[] | [] => {\n  let documentTemp: DocumentTitleInterface[] = [];\n  for (let i in documentData) {\n    documentTemp.push({\n      category_id: documentData[i].category_id,\n      company: documentData[i].company,\n      description: documentData[i].description,\n      email: documentData[i].email,\n      end_year: documentData[i].end_year,\n      files: documentData[i].files,\n      names: documentData[i].names,\n      phone_number: documentData[i].phone_number,\n      school: documentData[i].school,\n      school_id: documentData[i].school_id,\n      start_year: documentData[i].start_year,\n      sub_category_id: documentData[i].sub_category_id,\n      title: documentData[i].title,\n      year: documentData[i].year,\n      validation_status: documentData[i].validation_status,\n      validated_by: documentData[i].validated_by,\n      doc_id: documentData[i].doc_id,\n      doc_title: ClaimGetDocTitle(documentCategories, documentData[i]).main,\n      category_subcategory_data: documentData[i].category_subcategory_data,\n    });\n  }\n  return documentTemp;\n};\n\nconst getRejectedDocuments = (\n  documentData: DocumentClaimUser[]\n): DocumentClaimUser[] => {\n  console.log({\n    rejected: documentData.filter(\n      (item) => item.validation_status === \"rejected\"\n    ),\n  });\n  return documentData.filter((item) => item.validation_status === \"rejected\");\n};\n\nexport const searchDocuments = (\n  objList: DocumentTitleInterface[],\n  text: any\n): DocumentTitleInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter(\n    (product) =>\n      product.doc_title.toString().toLowerCase().indexOf(text.toLowerCase()) >\n      -1\n  );\n};\n\ntype FormDocumentListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateDocuments: DocumentClaimUser[];\n  documentCategories: DocumentReducerInterface;\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n};\n\nconst FormDocumentList: React.FC<FormDocumentListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.candidateDocuments.filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.doc_id\n          )\n        ).length > 0 ? (\n          searchDocuments(\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ),\n            searchInput\n          ).map((doc, index) => (\n            <section key={index + doc.doc_id}>\n              <div\n                className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                  props.claimFileId === doc.doc_id &&\n                  \"bg-blue-50 border-l-4 border-blue-500\"\n                }`}\n              >\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseClaimFile(false);\n                    props.setClaimFileId(doc.doc_id);\n                  }}\n                >\n                  <p className=\"text-base font-medium text-black\">\n                    {ClaimGetDocTitle(props.documentCategories, doc).main}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => {\n                    props.viewThisFile === doc.doc_id\n                      ? props.setViewThisFile(\"\")\n                      : props.setViewThisFile(doc.doc_id);\n                  }}\n                >\n                  {props.viewThisFile === doc.doc_id ? \"Close\" : \"View\"}\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(FormDocumentList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { updateSessionPlan } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  allPlanTypes,\n  PlansInterface,\n  PlansTypeInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { DATE, errorToText } from \"../../../utils/functions\";\n\nexport const isActivationAllowed = (thisPlans: PlansInterface): boolean => {\n  let today: Date = new Date(),\n    end_date = new Date(thisPlans.end_date);\n  if (end_date.getTime() >= today.getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport const getPlanTypeByKey = (\n  type_key: PlansTypeKeys\n): PlansTypeInterface | undefined => {\n  return allPlanTypes.find((item) => item.type_key === type_key);\n};\n\nexport const isPlanActive = (\n  viewThisSession: SessionPlanInterface,\n  thisPlan: PlansInterface\n): \"OPEN\" | \"CLOSED\" | \"WAITING\" => {\n  if (viewThisSession.is_active) {\n    let today = new Date(),\n      planEndDate = new Date(thisPlan.end_date),\n      planStartDate = new Date(thisPlan.start_date);\n    if (\n      planEndDate.getTime() >= today.getTime() &&\n      planStartDate.getTime() <= today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"OPEN\";\n    } else if (\n      planStartDate.getTime() > today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"WAITING\";\n    }\n  }\n  return \"CLOSED\";\n};\n\ntype SessionDetailsProps = {\n  viewThisSession: SessionPlanInterface;\n  setViewThisSession: (data: SessionPlanInterface) => void;\n\n  // REDUX ----------------\n  updateSessionPlan: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype SessionDetailsState = {\n  loadingRequest: string;\n};\n\nexport class SessionDetails extends Component<\n  SessionDetailsProps,\n  SessionDetailsState\n> {\n  constructor(props: SessionDetailsProps) {\n    super(props);\n\n    this.state = {\n      loadingRequest: \"\",\n    };\n  }\n\n  handlePlanActivation = async (\n    session: SessionPlanInterface,\n    thisPlan: PlansInterface\n  ) => {\n    const newState: \"open\" | \"close\" = session.is_active ? \"close\" : \"open\";\n\n    if (!window.confirm(`Are you sure you want to ${newState} this plan?`)) {\n      return true;\n    }\n\n    if (!isActivationAllowed(thisPlan)) {\n      this.props.PushPopupAlert({\n        title: `Opening/Closing plan which has been expired is not allowed!`,\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    let newData: SessionPlanInterface = {\n      session_plan_name: session.session_plan_name,\n      period: session.period,\n      is_active: session.is_active,\n      plans: [],\n      createdAt: session.createdAt,\n      updatedAt: session.updatedAt,\n      session_plan_id: session.session_plan_id,\n    };\n    for (const key in session.plans) {\n      if (Object.prototype.hasOwnProperty.call(session.plans, key)) {\n        const element = session.plans[key];\n        if (thisPlan.type_key === element.type_key) {\n          if (thisPlan.type_status === SessionPlanTypeStatus.OPEN) {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.CLOSED,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          } else {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.OPEN,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          }\n        } else {\n          newData.plans.push(element);\n        }\n      }\n    }\n\n    console.log(\"====================================\");\n    console.log({ newData });\n    console.log(\"====================================\");\n\n    this.setState({ loadingRequest: thisPlan.type_key });\n    try {\n      const res = await axios.put<SessionPlanInterface>(\n        `${API.CLAIMING}/session/${session.session_plan_id}`,\n        newData\n      );\n      this.props.updateSessionPlan(res.data);\n      this.props.setViewThisSession(res.data);\n      this.props.PushPopupAlert({\n        title: `Session ${newState}d successfully`,\n        theme: PopupAlertTheme.info,\n      });\n      this.setState({ loadingRequest: \"\" });\n      console.log(\"updateSessionPlan: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.warning,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <table className=\"w-full bg-white shadow p-5\" id=\"session_content\">\n        <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n          <tr>\n            <td className=\"p-2\">#</td>\n            <td className=\"p-2\">Plan Type</td>\n            <td className=\"p-2\">Start Date</td>\n            <td className=\"p-2\">End date</td>\n            {this.props.viewThisSession.is_active && (\n              <td className=\"p-2\" colSpan={2}>\n                Status\n              </td>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {/* WHILE DATA FOUND ====================== */}\n          {this.props.viewThisSession.plans.map((item, index) => (\n            <tr\n              key={index + item._id}\n              className={`border-b border-gray-200 hover:bg-gray-100`}\n            >\n              <td className=\"p-2 text-left whitespace-nowrap\">{index + 1}</td>\n              <td className=\"p-2 text-left\">\n                <span className=\"text-lg\">\n                  {getPlanTypeByKey(item.type_key) &&\n                    capitalizeFirstLetter(\n                      getPlanTypeByKey(item.type_key)!.type_title\n                    )}\n                </span>\n              </td>\n              <td className=\"p-2 text-left\">{DATE(item.start_date)}</td>\n              <td className=\"p-2 text-left\">{DATE(item.end_date)}</td>\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isPlanActive(this.props.viewThisSession, item) === \"OPEN\" ? (\n                    <span className={`px-2 py-1 font-semibold text-green-700`}>\n                      Open\n                    </span>\n                  ) : isPlanActive(this.props.viewThisSession, item) ===\n                    \"WAITING\" ? (\n                    <span className={`px-2 py-1 font-semibold text-gray-700`}>\n                      Waiting\n                    </span>\n                  ) : (\n                    <span className={`px-2 py-1 font-semibold text-red-700`}>\n                      Closed\n                    </span>\n                  )}\n                </td>\n              )}\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isActivationAllowed(item) && (\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <div\n                        className={`relative ${\n                          this.state.loadingRequest.length > 0\n                            ? \"cursor-not-allowed\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title={\n                          item.type_status === SessionPlanTypeStatus.OPEN\n                            ? \"Deactivating session\"\n                            : \"Activating session\"\n                        }\n                        onClick={() =>\n                          this.state.loadingRequest.length <= 0 &&\n                          this.handlePlanActivation(\n                            this.props.viewThisSession,\n                            item\n                          )\n                        }\n                      >\n                        <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                        <span\n                          className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                            item.type_status === SessionPlanTypeStatus.CLOSED\n                              ? \"bg-red-500\"\n                              : \"bg-green-500 transform translate-x-full\"\n                          }`}\n                        ></span>\n                      </div>\n                      {this.state.loadingRequest === item.type_key && (\n                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                      )}\n                    </div>\n                  )}\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default React.memo(connect(null, {\n  updateSessionPlan,\n  PushPopupAlert,\n})(SessionDetails));\n","import React, { Component } from \"react\";\nimport { MdAdd, MdArrowBack, MdDelete, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  DocumentClaimUser,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport search from \"../../../utils/search\";\nimport { filterClaimsByClaimType } from \"../Admin/AdminFilterByType\";\nimport ClaimApplView from \"../ClaimApplView\";\nimport ClaimDocView, { isClaimEvaluated } from \"../ClaimDocView\";\nimport ClaimExamView from \"../ClaimExamView\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport ClaimPlacementView from \"../ClaimPlacementView\";\nimport ClaimForm, { ClaimGetDocTitle } from \"./ClaimForm\";\nimport FilterByType from \"./FilterByType\";\nimport { getCourseById, getCourseIdBySheetId } from \"./FormExamList\";\n\nexport enum ClaimTypesEnum {\n  application = \"application\",\n  document = \"document\",\n  exam = \"exam\",\n  marks_publication = \"marks publication\",\n  placement = \"placement\",\n}\n\nexport const getDocumentById = (\n  candidateDocuments: DocumentClaimUser[],\n  document_id: string\n): DocumentClaimUser | null => {\n  let result: DocumentClaimUser | undefined = candidateDocuments.find(\n    (item) => item.doc_id === document_id\n  );\n  return result ? result : null;\n};\n\nexport const whichClaimType = (\n  thisClaim: CandidateClaimInterface\n): ClaimTypesEnum | undefined => {\n  if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n    return ClaimTypesEnum.application;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    return ClaimTypesEnum.document;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.EXAMINATION) {\n    return ClaimTypesEnum.exam;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.MARKS_PUBLICATION) {\n    return ClaimTypesEnum.marks_publication;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    return ClaimTypesEnum.placement;\n  }\n};\n\nexport const whichClaimStatus = (\n  thisClaim: CandidateClaimInterface\n): {\n  classes: string;\n  status: string;\n} => {\n  let classes: string, status: string;\n  switch (thisClaim.last_claim_status) {\n    case ClaimStatus.COMPLETED:\n      classes = \"text-blue-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.COMPLETED.toLocaleLowerCase());\n      break;\n    case ClaimStatus.EVALUATED:\n      classes = \"text-green-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.EVALUATED.toLocaleLowerCase());\n      break;\n\n    case ClaimStatus.DELETED:\n      classes = \"text-red-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.DELETED.toLocaleLowerCase());\n      break;\n\n    default:\n      classes = \"text-yellow-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.PENDING.toLocaleLowerCase());\n      break;\n  }\n\n  return { classes, status };\n};\n\nexport const getClaimById = (\n  claimList: CandidateClaimInterface[],\n  claim_id: string\n): CandidateClaimInterface | null => {\n  // console.log(\"====================================\");\n  // console.log({ claimList, claim_id });\n  // console.log(\"====================================\");\n  let result: CandidateClaimInterface | undefined = claimList.find(\n    (item) => item._id === claim_id\n  );\n  return result ? result : null;\n};\n\nexport const getApplicationById = (\n  candidateApplications: claimApplicationsInterface[],\n  application_id: string\n): claimApplicationsInterface | null => {\n  let result: claimApplicationsInterface | undefined =\n    candidateApplications.find(\n      (item) => item.application_id === application_id\n    );\n  return result ? result : null;\n};\n\nexport const displayDocClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: DocumentClaimUser[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = getDocumentById(candidateDocuments, thisClaim.claiming_on_id);\n    result = thisDoc\n      ? ClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  return result;\n};\n\nexport const displayClaimTitle = (\n  claiming: ClaimingReducerType,\n  documentReducer: DocumentReducerInterface,\n  allCourse: course[] | null,\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = thisClaim.claiming_on_id;\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n    claiming.candidateDocuments\n  ) {\n    result = displayDocClaimTitle(\n      documentReducer,\n      claiming.candidateDocuments,\n      thisClaim\n    );\n  }\n  if (\n    thisClaim.type_key === PlansTypeKeys.APPLICATION &&\n    claiming.candidateApplications\n  ) {\n    let thisApplication = getApplicationById(\n      claiming.candidateApplications,\n      thisClaim.claiming_on_id\n    );\n    if (thisApplication) {\n      result = thisApplication.position.position_title;\n    } else {\n      result = \"Application not found\";\n    }\n  }\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n    allCourse &&\n    claiming.myAnswer\n  ) {\n    let thisAnswer = getCourseIdBySheetId(\n      claiming.myAnswer,\n      thisClaim.claiming_on_id\n    );\n    if (thisAnswer && getCourseById(allCourse, thisAnswer.course)) {\n      result = getCourseById(allCourse, thisAnswer.course)!.course_name;\n    } else {\n      result = \"Exam not found\";\n    }\n  }\n\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    result = claiming.myPlacement\n      ? \"Placed on \" + claiming.myPlacement.placed.school.school_name\n      : \"Placement not found\";\n  }\n\n  return result;\n};\n\n// -------------------------------------------------------------------------\n\ntype AppProps = {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  courses: course[] | null;\n  documentReducer: DocumentReducerInterface;\n  getMyPlacement: Function;\n  getMyClaims: Function;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getClaimReasons: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingSession: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  periodChanged: boolean;\n  viewClaim: boolean;\n  claimId: string | null;\n  claimForm: boolean;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  reClaiming: boolean;\n  reClaimingMsg: string;\n  searchClaim: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingSession: true,\n      thisPeriod: null,\n      periodChanged: false,\n      viewClaim: false,\n      claimId: null,\n      claimForm: false,\n      searchClaim: \"\",\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      reClaiming: false,\n      reClaimingMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingSession = (value: boolean) => {\n    this.setState({ loadingSession: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setClaimForm = (value: boolean) => {\n    this.setState({ claimForm: value });\n  };\n\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setReClaiming = (value: boolean) => {\n    this.setState({ reClaiming: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setReClaimingMsg = (value: string) => {\n    this.setState({ reClaimingMsg: value });\n  };\n\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setSearchClaim = (value: string) => {\n    this.setState({ searchClaim: value });\n  };\n\n  loadClaims = (thisPeriod: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.myClaims === null && thisPeriod !== null) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && this.setLoading(status);\n          if (status === false && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && this.state.loading) {\n      this.setLoading(false);\n    }\n  };\n\n  setSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null && sessions.length > 0) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadClaims(thisSession ? thisSession : sessions[0]);\n      this.loadExamAnswers(\n        thisSession ? thisSession : sessions[0],\n        this.props.auth.user.user_id\n      );\n    }\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ loadExamAnswers: data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          if (!status) {\n            this.setLoadingSession(false);\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              // SETTING ACTIVE SESSION ==========================\n              if (this.state.thisPeriod === null) {\n                this.setSession(data);\n              }\n            }\n          }\n        }\n      );\n    } else {\n      this.setSession(this.props.application_sessions);\n      this.setLoadingSession(false);\n    }\n\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n    if (!this.props.documentReducer.documentSubCategory && this.state.loading) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (!this.props.documentReducer.documentFields && this.state.loading) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.myPlacement === null) {\n      this.props.getMyPlacement(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        }\n      );\n    }\n  };\n\n  isDeleteAllowed = (thisCLaim: CandidateClaimInterface): boolean => {\n    if (!isClaimEvaluated(thisCLaim, 1)) {\n      return true;\n    }\n    return false;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getMyClaims(\n      this.props.auth.user.user_id,\n      period_id,\n      (status: boolean, msg: string) => {\n        this.setLoadingRequest(status);\n        !status && this.setPeriodChanged(false);\n        if (status === false && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.myClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            <button\n              className=\"btn mb-3 border-2 border-blue-500 hover:bg-blue-500 hover:text-white flex items-center flex-1 font-bold w-full focus:outline-none\"\n              onClick={() => {\n                this.setClaimForm(true);\n                // alert(\"clicked\");\n              }}\n              disabled={\n                this.state.viewClaim ||\n                this.state.loading ||\n                this.state.loadingRequest\n              }\n            >\n              <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n              <span>Claiming</span>\n            </button>\n\n            {/* FILTER SECTION */}\n            <FilterByType loadingClaims={this.state.loadingRequest} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* ------------------------------------------------------------------- */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loading}\n            loadingSession={this.state.loadingSession}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingSession}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            {/* FILTER FORM =================================== */}\n            <section className=\"flex flex-col-reverse sm:flex-row items-center gap-2 w-full my-2\">\n              <div className=\"w-full\">\n                <input\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    this.setSearchClaim(e.target.value)\n                  }\n                  type=\"text\"\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Search claim by title or type`}\n                  value={this.state.searchClaim}\n                  disabled={\n                    filterClaimsByClaimType(\n                      this.props.claiming.myClaims,\n                      this.props.claiming.selectedClaimType\n                    ).length > 0\n                      ? false\n                      : true\n                  }\n                />\n              </div>\n            </section>\n            {/* END FILTER FORM =================================== */}\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td className=\"px-2 py-2\">Claim title</td>\n                  {this.props.claiming.selectedClaimType === \"all\" && (\n                    <td className=\"px-2 py-2\">Claim type</td>\n                  )}\n                  <td className=\"px-2 py-2\">Claim level</td>\n                  <td className=\"px-2 py-2\">Claim status</td>\n                  <td className=\"px-2 py-2\"></td>\n                </tr>\n              </thead>\n              <tbody>\n                {filterClaimsByClaimType(\n                  this.props.claiming.myClaims,\n                  this.props.claiming.selectedClaimType\n                ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={4}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"No claim found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : search(\n                    filterClaimsByClaimType(\n                      this.props.claiming.myClaims,\n                      this.props.claiming.selectedClaimType\n                    ),\n                    this.state.searchClaim\n                  ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={4}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"Nothing found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : (\n                  search(\n                    filterClaimsByClaimType(\n                      this.props.claiming.myClaims,\n                      this.props.claiming.selectedClaimType\n                    ),\n                    this.state.searchClaim\n                  ).map((claim: CandidateClaimInterface, index) => (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={index + claim._id}\n                      onClick={() => {\n                        this.setViewClaim(true);\n                        this.setClaimId(claim._id);\n                      }}\n                    >\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {index + 1}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {claim.title}\n                      </td>\n                      {this.props.claiming.selectedClaimType === \"all\" && (\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {whichClaimType(claim)\n                            ? capitalizeFirstLetter(whichClaimType(claim)!)\n                            : \"-\"}\n                        </td>\n                      )}\n                      <td className=\"px-3 py-1 whitespace-nowrap italic\">\n                        Level {claim.claim_level}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        <span\n                          className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                            whichClaimStatus(claim).classes\n                          }`}\n                        >\n                          {whichClaimStatus(claim).status}\n                        </span>\n                      </td>\n                      <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                        <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                          View\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </section>\n        )}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {this.state.viewClaim &&\n          this.props.claiming.myClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.myClaims, this.state.claimId) && (\n            <section className=\"bg-white w-full p-1 my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(false);\n                    this.setLoadingRequest(false);\n                    this.setFormError(null);\n                    this.setReClaiming(false);\n                    this.setReClaimingMsg(\"\");\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                {this.isDeleteAllowed(\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!\n                ) && (\n                  <button\n                    className={`bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                      this.state.loadingRequest\n                        ? \"cursor-not-allowed\"\n                        : \"cursor-pointer\"\n                    } animate__animated animate__fadeIn hidden`}\n                    disabled={this.state.loadingRequest}\n                    // onClick={() => {\n                    //   this.handleDelete();\n                    // }}\n                  >\n                    <MdDelete className=\"w-7 h-7\" />\n                  </button>\n                )}\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n              <section className=\"my-2\">\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n                this.props.claiming.candidateDocuments &&\n                getDocumentById(\n                  this.props.claiming.candidateDocuments,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimDocView\n                    thisDoc={\n                      getDocumentById(\n                        this.props.claiming.candidateDocuments,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewImage={this.state.viewImage}\n                    setViewImage={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.DOCUMENT_VALIDATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Document not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n\n                {/* ############################################################### */}\n\n                {/* VIEWING CLAIM OF AN APPLICATION ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.APPLICATION &&\n                this.props.claiming.candidateApplications &&\n                getApplicationById(\n                  this.props.claiming.candidateApplications,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimApplView\n                    thisApplication={\n                      getApplicationById(\n                        this.props.claiming.candidateApplications,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.APPLICATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Application not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN APPLICATION ===================== */}\n\n                {/* VIEWING CLAIM OF AN EXAM ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.EXAMINATION &&\n                this.props.claiming.myAnswer &&\n                this.props.courses &&\n                getCourseIdBySheetId(\n                  this.props.claiming.myAnswer,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) &&\n                getCourseById(\n                  this.props.courses,\n                  getCourseIdBySheetId(\n                    this.props.claiming.myAnswer,\n                    getClaimById(\n                      this.props.claiming.myClaims,\n                      this.state.claimId\n                    )!.claiming_on_id\n                  )!.course\n                ) ? (\n                  <ClaimExamView\n                    thisExam={\n                      getCourseById(\n                        this.props.courses,\n                        getCourseIdBySheetId(\n                          this.props.claiming.myAnswer,\n                          getClaimById(\n                            this.props.claiming.myClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        )!.course\n                      )!\n                    }\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    thisExamSheet={\n                      getCourseIdBySheetId(\n                        this.props.claiming.myAnswer,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.EXAMINATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Exam not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN EXAM ===================== */}\n\n                {/* ----------------------------------------------------------- */}\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.PLACEMENT_TRANSFER &&\n                this.props.claiming.myPlacement ? (\n                  <ClaimPlacementView\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    myPlacement={this.props.claiming.myPlacement}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.PLACEMENT_TRANSFER && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Placement not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n              </section>\n            </section>\n          )}\n        {/* end view claim */}\n\n        {/* ----------------------------------------------------------------------- */}\n        {/* CLAIM FORM  ################ */}\n        {this.state.claimForm && (\n          <ClaimForm\n            formState={this.state.claimForm}\n            setFormState={this.setClaimForm}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    claiming,\n    application_sessions: sessionPlan.allSessionPlans,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const CandidateClaim = connect(mapStateToProps, {\n  getMyClaims,\n  GetAllSessionPlans,\n  getClaimReasons,\n  loadCourses,\n  getMyPlacement,\n  getMyAnswers,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(Index);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { DATE, errorToText, showDate } from \"../../utils/functions\";\nimport ViewRequirements from \"../Positions/ViewRequirements\";\nimport { FC_ApplicationPositionDistinctCategory } from \"./Candidate/ApplicationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisApplication: claimApplicationsInterface;\n  documentCategories: DocumentReducerInterface;\n  claimReasons: claimReasonInterface[] | null;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous.status === ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisClaim.previous.status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span\n              className=\"font-normal\"\n              dangerouslySetInnerHTML={{\n                __html: props.thisClaim.previous.reason,\n              }}\n            ></span>\n          </div>\n\n          {/* DISPLAY POSITION ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {props.thisApplication.position.description}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.school_level_id\n                        .school_level_name\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.education_institute_id\n                        .education_category_title\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {props.thisApplication.position.courses.map(\n                      (item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            props.thisApplication.position.courses.length - 1 &&\n                            \",\"}\n                        </div>\n                      )\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {props.thisApplication.position.requirements.length > 0 ? (\n                  FC_ApplicationPositionDistinctCategory(\n                    props.thisApplication.position,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewRequirements\n                          requirements={FC_ApplicationPositionDistinctCategory(\n                            props.thisApplication.position,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default React.memo(connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView));\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  ClaimStatus,\n  course,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\nimport { claimShowAnswer } from \"./Candidate/ExaminationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisExam: course;\n  thisExamSheet: ClaimExamResultsDetails;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  claimReasons: claimReasonInterface[] | null;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [loading, props]);\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              Exam of {props.thisExam.course_name}{\" \"}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n\n          {/* DISPLAY EXAM SHEET ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"bg-white w-full rounded p-2 mb-2\">\n              <CandidateAnswersDetails\n                showAnswers={false}\n                exam_id={claimShowAnswer(\n                  props.thisExamSheet,\n                  props.thisExam.course_name\n                )}\n              />\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {loading ? (\n                          <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n                        ) : (\n                          props.thisClaim.userDetails.user_info.fname +\n                          \" \" +\n                          props.thisClaim.userDetails.user_info.lname\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  questionTypes,\n}: StoreState): {\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return { questionTypes: questionTypes };\n};\n\nexport default React.memo(connect(mapStateToProps, {\n  loadQuestionTypes,\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView));\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { candidatePlacementInterface } from \"../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimPlacementViewProps = {\n  myPlacement: candidatePlacementInterface;\n  thisClaim: CandidateClaimInterface;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimPlacementView: React.FC<ClaimPlacementViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>School:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div>\n          {/* <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Position:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div> */}\n          <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>District:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.district_id.district_name}\n              </span>\n            </div>\n          </div>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default React.memo(connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimPlacementView));\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ClaimStatus, PlansTypeKeys } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\ntype FilterByTypeProps = {\n  // thisClaimType: ClaimTypesInterface | \"ALL\";\n  // setThisClaimType: React.Dispatch<\n  //   React.SetStateAction<ClaimTypesInterface | \"ALL\">\n  // >;\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst FilterByType: React.FC<FilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRejectedApplications, setLoadingRejectedApplications] =\n    useState<boolean>(true);\n  const [loadingRejectedDocuments, setLoadingRejectedDocuments] =\n    useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.candidateApplications === null) {\n      props.getMyRejectedApplications(\n        props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          if (status === false) {\n            if (msg.length > 0) {\n              props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            setLoadingRejectedApplications(false);\n          }\n        }\n      );\n    } else if (loadingRejectedApplications) {\n      setLoadingRejectedApplications(false);\n    }\n\n    if (props.claiming.candidateDocuments === null) {\n      console.log(\"filterrrrrrrrrrrrrrrrrrrr loadingRejectedDocuments\");\n      props.getMyRejectedDocuments((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingRejectedDocuments(false);\n        }\n      });\n    } else if (loadingRejectedDocuments) {\n      setLoadingRejectedDocuments(false);\n    }\n\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n    }\n\n    if (\n      !loadingRejectedApplications &&\n      !loadingRejectedDocuments &&\n      !loadingClaimTypes &&\n      loading\n    ) {\n      setLoading(false);\n    }\n  }, [\n    loading,\n    loadingClaimTypes,\n    loadingRejectedApplications,\n    loadingRejectedDocuments,\n    props,\n  ]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.myClaims && thisType === \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n    if (claiming.myClaims && thisType !== \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {/* PLACEMENT TRANSFER ================================= */}\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n          {/* <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.APPLICATION)}\n              active={props.thisClaimType === ClaimTypesInterface.APPLICATION}\n              count={countClaims(props.claiming).applications}\n            />\n          </div>\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.PLACEMENT);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.PLACEMENT)}\n              active={props.thisClaimType === ClaimTypesInterface.PLACEMENT}\n              count={countClaims(props.claiming).placement}\n            />\n          </div> */}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    GetClaimingTypes,\n    setSelectedClaimType,\n    getMyRejectedApplications,\n    getMyRejectedDocuments,\n    PushPopupAlert,\n  })(FilterByType)\n);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { BiExport, BiSort } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadEducationCategories,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  setSelectedClaimType,\n  GetClaimingTypes,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  claimReportContentInterface,\n  claimReportContentKeyInterface,\n  ClaimToPrintInterface,\n} from \"../../../interfaces/claimings\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\nimport { ClaimTypesEnum, whichClaimType } from \"../../Claimings/Candidate\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport {\n  education_category,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport NoSession from \"../../SessionSettings/NoSession\";\n\nexport const reportClaimType = (\n  type: PlansTypeKeys | \"all\"\n): ClaimTypesEnum | \"all\" => {\n  let result: ClaimTypesEnum | \"all\" = \"all\";\n  switch (type) {\n    case PlansTypeKeys.APPLICATION:\n      result = ClaimTypesEnum.application;\n      break;\n    case PlansTypeKeys.DOCUMENT_VALIDATION:\n      result = ClaimTypesEnum.document;\n      break;\n    case PlansTypeKeys.EXAMINATION:\n      result = ClaimTypesEnum.exam;\n      break;\n    case PlansTypeKeys.MARKS_PUBLICATION:\n      result = ClaimTypesEnum.marks_publication;\n      break;\n    case PlansTypeKeys.PLACEMENT_TRANSFER:\n      result = ClaimTypesEnum.placement;\n      break;\n    default:\n      result = \"all\";\n      break;\n  }\n\n  return result;\n};\n\nconst searchData = (\n  objList: ClaimToPrintInterface[],\n  text: string\n): ClaimToPrintInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"names\" ||\n        prop === \"gender\" ||\n        prop === \"national_id\" ||\n        prop === \"phone\" ||\n        prop === \"email\" ||\n        prop === \"claim_title\" ||\n        prop === \"claim_type\" ||\n        prop === \"claim_level\" ||\n        prop === \"education_category\" ||\n        prop === \"claim_session\" ||\n        prop === \"date\" ||\n        prop === \"decision\"\n      ) {\n        if (product[prop]) {\n          flag =\n            product[prop]!.toString()\n              .toLowerCase()\n              .indexOf(text.toLowerCase()) > -1;\n        }\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nconst defaultReportContent: claimReportContentInterface[] = [\n  {\n    key: claimReportContentKeyInterface.names,\n    title: \"Applicant Names\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  { key: claimReportContentKeyInterface.gender, title: \"Gender\", status: true },\n  { key: claimReportContentKeyInterface.phone, title: \"Phone\", status: true },\n  {\n    key: claimReportContentKeyInterface.claim_session,\n    title: \"Claim Session\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.education_category,\n    title: \"Education Institute\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.date,\n    title: \"Claim Date\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.decision,\n    title: \"Decision\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_title,\n    title: \"Claim Title\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_type,\n    title: \"Claim Type\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_level,\n    title: \"Claim Level\",\n    status: true,\n  },\n];\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  // systemPositions: PositionAPI[] | null;\n  // courses: course[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  // loadCourses: Function;\n  // getAllAnswers: Function;\n  setSelectedClaimType: Function;\n  // getPositions: Function;\n  getAllClaims: Function;\n  GetClaimingTypes: Function;\n  // getAllApplications: Function;\n  GetAllSessionPlans: Function;\n  // getDocumentCategory: Function;\n  // getDocumentSubCategory: Function;\n  // getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst _ClaimingReport: React.FC<AppProps> = (props) => {\n  const [thisPeriod, setThisPeriod] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [thisLevel, setThisLevel] = useState<number | \"all\">(\"all\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [periodChanged, setPeriodChanged] = useState<boolean>(false);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(true);\n  const [loadingInstitutes, setLoadingInstitutes] = useState<boolean>(true);\n  const [downloading, setDownloading] = useState<boolean>(false);\n  const [claimToPrint, setClaimToPrint] = useState<\n    ClaimToPrintInterface[] | null\n  >();\n\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [generateReportModal, setGenerateReportModal] = useState<{\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null>(null);\n  const [reportTitle, setReportTitle] = useState<string>(\"\");\n  const [reportContent, setReportContent] =\n    useState<claimReportContentInterface[]>(defaultReportContent);\n  const [selectAll, setSelectAll] = useState<boolean>(true);\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [selectPeriod, setSelectPeriod] = useState<boolean>(false);\n  const [thisEducation, setThisEducation] = useState<\n    education_category | \"all\"\n  >(\"all\");\n\n  useEffect(() => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      props.schoolLevels.education_categories === null ||\n      props.schoolLevels.education_categories.length === 0\n    ) {\n      props.loadEducationCategories(setLoadingInstitutes);\n    } else {\n      setLoadingInstitutes(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n    // LOADING CLAIM TYPES ========================================\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n    // END LOADING CLAIM TYPES ========================================\n    // LOADING APPLICATION SESSION ====================================\n    if (props.application_sessions === null) {\n      props.GetAllSessionPlans((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (\n      thisPeriod === null &&\n      !loadingSession &&\n      props.application_sessions &&\n      props.application_sessions.length > 0\n    ) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setThisPeriod(thisSession ? thisSession : props.application_sessions[0]);\n      // if (props.claiming.allAnswer === null) {\n      //   props.getAllAnswers(\n      //     thisSession\n      //       ? thisSession.session_plan_id\n      //       : props.application_sessions[0].session_plan_id,\n      //     (status: boolean, msg: string) => {\n      //       setLoading(status);\n      //       if (!status && msg.length) {\n      //         props.PushPopupAlert({\n      //           title: msg,\n      //           theme: PopupAlertTheme.danger,\n      //         });\n      //       }\n      //     }\n      //   );\n      // }\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    // if (!props.documentReducer.documentCategory && loadingDocuments) {\n    //   props.getDocumentCategory();\n    //   setLoadingDocuments(false);\n    // } else if (loadingDocuments) {\n    //   setLoadingDocuments(false);\n    // }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    // if (!props.documentReducer.documentSubCategory && loadingClarifications) {\n    //   props.getDocumentSubCategory();\n    //   setLoadingClarifications(false);\n    // } else if (loadingClarifications) {\n    //   setLoadingClarifications(false);\n    // }\n    // LOADING DOCUMENT FIELDS ==========================\n    // if (!props.documentReducer.documentFields && loadingFields) {\n    //   props.getDocumentFields();\n    //   setLoadingFields(false);\n    // } else if (loadingFields) {\n    //   setLoadingFields(false);\n    // }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allClaims === null && thisPeriod !== null) {\n      props.getAllClaims(\n        2,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingClaims(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingClaims) {\n      setLoadingClaims(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    // if (props.claiming.allApplications === null && thisPeriod !== null) {\n    //   props.getAllApplications(\n    //     thisPeriod.session_plan_id,\n    //     (status: boolean, msg: string) => {\n    //       !status && setLoadingApplications(status);\n    //       if (status === false && msg.length) {\n    //         props.PushPopupAlert({\n    //           title: msg,\n    //           theme: PopupAlertTheme.danger,\n    //         });\n    //       }\n    //     }\n    //   );\n    // } else if (thisPeriod && loadingApplications) {\n    //   setLoadingApplications(false);\n    // }\n\n    // if (props.systemPositions === null) {\n    //   props.getPositions((status: boolean, msg: string) => {\n    //     setLoadingPosition(status);\n    //     console.log({ status: status, msg: msg });\n    //     if (msg.length) {\n    //       props.PushPopupAlert({\n    //         title: msg,\n    //         theme: PopupAlertTheme.danger,\n    //       });\n    //     }\n    //   });\n    // } else if (loadingPosition) {\n    //   setLoadingPosition(false);\n    // }\n\n    // LOADING COURSE ====================================\n    // if (\n    //   props.courses === null ||\n    //   (props.courses.length === 0 && loadingCourses)\n    // ) {\n    //   props.loadCourses(setLoadingCourses);\n    // } else if (loadingCourses) {\n    //   setLoadingCourses(false);\n    // }\n  }, [loadingClaims, loadingSession, props, thisPeriod]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  if (props.application_sessions && props.application_sessions.length === 0) {\n    return <NoSession />;\n  }\n\n  // const displayClaimTitle = (thisClaim: CandidateClaimInterface): string => {\n  //   let result: string = thisClaim.claiming_on_id;\n  //   if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n  //     result =\n  //       thisClaim.userDetails.details.filter(\n  //         (item) => item.validation_status !== \"waiting\"\n  //       ).length > 0\n  //         ? adminDisplayClaimTitle(\n  //             props.documentReducer,\n  //             thisClaim.userDetails.details.filter(\n  //               (item) => item.validation_status !== \"waiting\"\n  //             ),\n  //             thisClaim\n  //           )\n  //         : \"Document not found\";\n  //   }\n  //   if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n  //     if (props.claiming.allApplications) {\n  //       let thisApplication = props.claiming.allApplications.find(\n  //         (item) => item._id === thisClaim.claiming_on_id\n  //       );\n  //       if (\n  //         thisApplication &&\n  //         props.claiming.allApplications &&\n  //         props.systemPositions\n  //       ) {\n  //         let thisPosition = props.systemPositions.find(\n  //           (item) => item.position_id === thisApplication!.position\n  //         );\n  //         if (thisPosition) {\n  //           result = thisPosition.position_title;\n  //         } else {\n  //           result = \"Application not found\";\n  //         }\n  //       }\n  //     }\n  //   }\n\n  //   if (\n  //     thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n  //     props.courses &&\n  //     props.claiming.allAnswer\n  //   ) {\n  //     let thisAnswer = getCourseIdBySheetId(\n  //       props.claiming.allAnswer,\n  //       thisClaim.claiming_on_id\n  //     );\n  //     if (thisAnswer && getCourseById(props.courses, thisAnswer.course)) {\n  //       result =\n  //         \"Exam of \" +\n  //         getCourseById(props.courses, thisAnswer.course)!.course_name;\n  //     } else {\n  //       result = \"Unknown exam\";\n  //     }\n  //   }\n\n  //   return result;\n  // };\n\n  // const getClaimInstitute = (\n  //   thisClaim: CandidateClaimInterface\n  // ): string | null => {\n  //   if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n  //     return null;\n  //   }\n  //   // if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n  //   //   if (props.claiming.allApplications) {\n  //   //     let thisApplication = props.claiming.allApplications.find(\n  //   //       (item) => item._id === thisClaim.claiming_on_id\n  //   //     );\n  //   //     if (\n  //   //       thisApplication &&\n  //   //       props.claiming.allApplications &&\n  //   //       props.systemPositions\n  //   //     ) {\n  //   //       // return thisApplication.\n  //   //       let thisPosition = props.systemPositions.find(\n  //   //         (item) => item.position_id === thisApplication!.position\n  //   //       );\n  //   //       if (thisPosition) {\n  //   //         return thisPosition.education_institute_id.education_institute_id;\n  //   //       }\n  //   //     }\n  //   //   }\n  //   // }\n\n  //   return null;\n  // };\n\n  const onPeriodChange = (period_id: string) => {\n    setPeriodChanged(true);\n    props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && setPeriodChanged(false);\n      if (status === false && msg.length) {\n        props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  const isClaimTypeActive = (\n    selectedType: PlansTypeKeys | \"all\",\n    currentType: PlansTypeKeys | \"all\"\n  ): boolean => {\n    if (currentType === \"all\" && selectedType === \"all\") {\n      return true;\n    } else if (currentType !== \"all\" && selectedType !== \"all\") {\n      if (currentType === selectedType) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n    } else {\n      setSortOrder(\"ASC\");\n    }\n    setSortProperty(thisProperty);\n    setIsSorted(true);\n  };\n\n  const ClaimTypes = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    type: PlansTypeKeys | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: number;\n      type: PlansTypeKeys | \"all\";\n    }[] = [{ title: \"All types\", count: claims.length, type: \"all\" }];\n\n    Object.values(PlansTypeKeys).forEach((PlansKey) => {\n      if (PlansKey !== PlansTypeKeys.MARKS_PUBLICATION) {\n        output.push({\n          title: capitalizeFirstLetter(reportClaimType(PlansKey)),\n          count:\n            claims.length > 0\n              ? claims.filter(\n                  (itm) => itm.claim_type === reportClaimType(PlansKey)\n                ).length\n              : 0,\n          type: PlansKey,\n        });\n      }\n    });\n\n    return output;\n  };\n\n  const ClaimLevels = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    level: number | \"all\";\n  }[] => {\n    let output: {\n        title: string;\n        count: number;\n        level: number | \"all\";\n      }[] = [{ title: \"All levels\", count: claims.length, level: \"all\" }],\n      levels: number[] = [1, 2];\n    for (let i in levels) {\n      output.push({\n        title: \"Level \" + levels[i],\n        count: claims.filter((itm) => itm.claim_level === levels[i]).length,\n        level: levels[i],\n      });\n    }\n    return output;\n  };\n\n  const updateReportContent = (key: claimReportContentKeyInterface) => {\n    let index: number = reportContent.findIndex((item) => item.key === key);\n    let newArray: claimReportContentInterface[] = reportContent;\n    newArray[index].status = !newArray[index].status;\n    setReportContent(newArray);\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      setSelectAll(false);\n    } else {\n      setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    updateClaimToPrint();\n  };\n\n  const updateClaimToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (thisPeriod) {\n      let title = \"Claim Report \" + thisPeriod.session_plan_name;\n      // if (thisLevel!==\"all\") {\n      //   title = \"Claim Report - Level \"+thisLevel + thisPeriod.session_plan_name;\n      // }\n      setReportTitle(title);\n    }\n    // UPDATE CONTENT =============================\n    if (props.claiming.allClaims && props.claiming.claimTypes) {\n      let arrayNew: ClaimToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in props.claiming.allClaims) {\n        if (\n          Object.prototype.hasOwnProperty.call(props.claiming.allClaims, key)\n        ) {\n          for (const keyClaim in props.claiming.allClaims[key].claims) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                props.claiming.allClaims[key].claims,\n                keyClaim\n              )\n            ) {\n              const element = props.claiming.allClaims[key].claims[keyClaim];\n              const thisType = whichClaimType(props.claiming.allClaims[key]);\n              let dataArray: ClaimToPrintInterface = {\n                claim_id: n,\n                names:\n                  props.claiming.allClaims[key].userDetails.user_info.fname +\n                  \" \" +\n                  props.claiming.allClaims[key].userDetails.user_info.lname,\n                gender: props.claiming.allClaims[key].userDetails.user_info.sex\n                  ? \"Male\"\n                  : \"Female\",\n                national_id: props.claiming.allClaims[key].userDetails.n_id!,\n                phone: props.claiming.allClaims[key].userDetails.phone_number,\n                email: props.claiming.allClaims[key].userDetails.email,\n                claim_type: thisType ? thisType : \"\",\n                claim_level: element.level,\n                education_category: \"\",\n                claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n                date: DATE(element.createdAt),\n                decision: element.decision_taken_status\n                  ? element.decision_taken_status\n                  : \"PENDING\",\n                claim_title: props.claiming.allClaims[key].title,\n              };\n              for (const key in reportContent) {\n                if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n                  if (!reportContent[key].status) {\n                    delete dataArray[reportContent[key].key];\n                  }\n                }\n              }\n              arrayNew.push(dataArray);\n              n++;\n            }\n          }\n        }\n      }\n      setClaimToPrint(arrayNew);\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  const FC_ClaimData = (\n    allClaims: CandidateClaimInterface[] | null\n  ): ClaimToPrintInterface[] | null => {\n    if (allClaims === null) return null;\n    let arrayNew: ClaimToPrintInterface[] = [];\n    let n: number = 1;\n    // LOOP IN ALL CLAIM ONE BY ONE ###########################\n    for (const key in allClaims) {\n      if (Object.prototype.hasOwnProperty.call(allClaims, key)) {\n        // LOOP IN ALL CLAIM OF ONE FILE ONE BY ONE ===========================\n        for (const keyClaim in allClaims[key].claims) {\n          if (\n            Object.prototype.hasOwnProperty.call(\n              allClaims[key].claims,\n              keyClaim\n            )\n          ) {\n            const element = allClaims[key].claims[keyClaim];\n            const thisType = whichClaimType(allClaims[key]);\n            let dataArray: ClaimToPrintInterface = {\n              claim_id: n,\n              names:\n                allClaims[key].userDetails.user_info.fname +\n                \" \" +\n                allClaims[key].userDetails.user_info.lname,\n              gender: allClaims[key].userDetails.user_info.sex\n                ? \"Male\"\n                : \"Female\",\n              national_id: allClaims[key].userDetails.n_id!,\n              phone: allClaims[key].userDetails.phone_number,\n              email: allClaims[key].userDetails.email,\n              claim_type: thisType ? thisType : \"\",\n              claim_level: element.level,\n              education_category:\n                allClaims[key].institute_id &&\n                !isEmptyOrSpaces(allClaims[key].institute_id)\n                  ? allClaims[key].institute_id\n                  : null,\n              claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n              date: DATE(element.createdAt),\n              decision: element.decision_taken_status\n                ? element.decision_taken_status\n                : \"PENDING\",\n              claim_title: allClaims[key].title\n                ? allClaims[key].title\n                : \"Undefined\",\n            };\n            // for (const key in reportContent) {\n            //   if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n            //     if (!reportContent[key].status) {\n            //       delete dataArray[reportContent[key].key];\n            //     }\n            //   }\n            // }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n      }\n    }\n    return arrayNew;\n  };\n\n  const resetReportContent = (currentState: boolean) => {\n    let newArray: claimReportContentInterface[] = reportContent;\n    for (const key in newArray) {\n      if (isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    setReportContent(newArray);\n    setSelectAll(!currentState);\n    updateClaimToPrint();\n  };\n\n  const isChangeAllowed = (key: claimReportContentKeyInterface): boolean => {\n    if (\n      key === claimReportContentKeyInterface.names ||\n      key === claimReportContentKeyInterface.decision ||\n      key === claimReportContentKeyInterface.claim_session ||\n      key === claimReportContentKeyInterface.claim_type ||\n      key === claimReportContentKeyInterface.date\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  const FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return;\n    }\n\n    if (thisPeriod) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: props.auth.user.fname + \" \" + props.auth.user.lname,\n        title: \"Claim Report\",\n        subjectTitle: \"Claim type\",\n        subject:\n          props.claiming.selectedClaimType === \"all\"\n            ? \"All Types\"\n            : props.claiming.selectedClaimType,\n        period: thisPeriod.session_plan_name,\n        footer: \"Online Recruitment\",\n        institute:\n          thisEducation === \"all\"\n            ? \"All institute\"\n            : thisEducation.education_category_title,\n      };\n      table && generatePDF(reportSettings, table, setDownloading);\n    }\n  };\n\n  const FC_FilterClaims = (\n    allClaims: ClaimToPrintInterface[],\n    claimType: PlansTypeKeys | \"all\",\n    claimLevel: number | \"all\",\n    institute: education_category | \"all\"\n  ): ClaimToPrintInterface[] => {\n    let result: ClaimToPrintInterface[] = allClaims;\n    if (claimType !== \"all\") {\n      result = result.filter((item) => item.claim_type === claimType);\n    }\n    if (claimLevel !== \"all\") {\n      result = result.filter((item) => item.claim_level === claimLevel);\n    }\n\n    if (institute !== \"all\") {\n      result = result.filter(\n        (item) =>\n          item.education_category === null ||\n          item.education_category === institute.education_institute_id\n      );\n    }\n\n    return result;\n  };\n\n  return (\n    <Fragment>\n      <SideNavigation>\n        <div className=\"flex flex-col mb-4\">\n          <span className=\"text-sm text-gray-600 mb-2\">\n            Education categories:\n          </span>\n          {props.schoolLevels.education_categories === null ||\n          loadingInstitutes ? (\n            <Loading />\n          ) : props.schoolLevels.education_categories.length === 0 ? (\n            <span>No result found</span>\n          ) : (\n            <Fragment>\n              <div\n                onClick={() => setThisEducation(\"all\")}\n                className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                  thisEducation === \"all\"\n                    ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                } font-bold flex flex-row items-center gap-2`}\n              >\n                {thisEducation === \"all\" ? (\n                  <MdRadioButtonChecked />\n                ) : (\n                  <MdRadioButtonUnchecked />\n                )}\n                <span>All</span>\n              </div>\n              {props.schoolLevels.education_categories.map((item, i) => (\n                <div\n                  onClick={() => setThisEducation(item)}\n                  key={i + 1}\n                  className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                    thisEducation !== \"all\" &&\n                    thisEducation.education_institute_id ===\n                      item.education_institute_id\n                      ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                      : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                  } font-bold flex flex-row items-center gap-2`}\n                >\n                  {thisEducation !== \"all\" &&\n                  thisEducation.education_institute_id ===\n                    item.education_institute_id ? (\n                    <MdRadioButtonChecked />\n                  ) : (\n                    <MdRadioButtonUnchecked />\n                  )}\n                  <span>{item.education_category_title}</span>\n                </div>\n              ))}\n            </Fragment>\n          )}\n        </div>\n        <div className=\"\">\n          <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n          <div\n            onClick={() => setSelectPeriod(true)}\n            className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n          >\n            {thisPeriod !== null\n              ? `${thisPeriod.session_plan_name} - ${thisPeriod.period}`\n              : \"Filter by period\"}\n            <FiEdit className=\"text-3xl text-blue-600\" />\n          </div>\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim types:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimTypes(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() =>\n                    props.setSelectedClaimType(reportClaimType(item.type))\n                  }\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={isClaimTypeActive(\n                      props.claiming.selectedClaimType,\n                      item.type\n                    )}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim level:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimLevels(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() => setThisLevel(item.level)}\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={item.level === thisLevel}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n      </SideNavigation>\n      <section>\n        {/* REPORT TITLE ============================================ */}\n        <div className=\"grid md:grid-cols-12\">\n          <div className=\"col-span-8\">\n            <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n              <span className=\"text-3xl font-bold text-gray-700\">\n                Claim report\n              </span>\n            </div>\n          </div>\n          <div className=\"col-span-4\">\n            <div className=\"float-right mt-2\">\n              {props.claiming.allClaims && props.claiming.allClaims.length > 0 && (\n                <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                  <BiExport className=\"text-2xl text-gray-500\" />\n                  <span className=\"text-gray-500\">Export as</span>\n                  <button\n                    className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                    disabled={loading}\n                    onClick={() => {\n                      updateClaimToPrint();\n                      setGenerateReportModal({\n                        reportType: \"EXCEL\",\n                        status: true,\n                      });\n                    }}\n                  >\n                    EXCEL\n                  </button>\n                  <button\n                    className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                      downloading && \"cursor-wait\"\n                    }`}\n                    onClick={() => FC_GeneratePDF()}\n                    disabled={loading || downloading}\n                  >\n                    PDF\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        {/* END REPORT TITLE ============================================ */}\n        <div className=\"bg-white my-4\">\n          <div className=\"w-full px-2 py-2\">\n            <input\n              onChange={(e) => setSearchInput(e.target.value)}\n              type=\"text\"\n              value={searchInput}\n              placeholder=\"Search...\"\n              className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n              disabled={\n                props.claiming.allClaims === null ||\n                props.claiming.claimTypes === null ||\n                FC_ClaimData(props.claiming.allClaims) === null ||\n                periodChanged\n              }\n            />\n          </div>\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"names\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Applicant names <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"gender\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Gender <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_title\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Title <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_type\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Type <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_level\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Level <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"decision\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Status <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"date\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Date <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.claiming.allClaims === null ||\n              props.claiming.claimTypes === null ||\n              periodChanged ? (\n                <TableLoading cols={10} />\n              ) : FC_ClaimData(props.claiming.allClaims) === null ? (\n                <TableLoading cols={10} />\n              ) : FC_FilterClaims(\n                  FC_ClaimData(props.claiming.allClaims)!,\n                  props.claiming.selectedClaimType,\n                  thisLevel,\n                  thisEducation\n                ).length === 0 ? (\n                <tr>\n                  <td colSpan={10} className=\"px-2 py-2\">\n                    <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                      <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                      <span className=\"text-sm font-bold\">\n                        No result found! Please try to search again\n                      </span>\n                      <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                        <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                          <li\n                            onClick={() => setSelectPeriod(true)}\n                            className=\"underline text-gray-500 cursor-pointer\"\n                          >\n                            Filter by period\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim type\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim Level\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              ) : (\n                sortThisArray(\n                  isSorted,\n                  searchData(\n                    FC_FilterClaims(\n                      FC_ClaimData(props.claiming.allClaims)!,\n                      props.claiming.selectedClaimType,\n                      thisLevel,\n                      thisEducation\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item: ClaimToPrintInterface, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                    } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">{item.names}</td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.gender}</td>\n                    <td className=\"px-2 py-2\">{item.phone}</td>\n                    <td className=\"px-2 py-2\">{item.claim_title}</td>\n                    <td className=\"px-2 py-2\">{item.claim_type}</td>\n                    <td className=\"px-2 py-2\">{\"Level \" + item.claim_level}</td>\n                    <td className=\"px-2 py-2\">\n                      {item.decision}\n                      {/* {capitalizeFirstLetter(item.decision)} */}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.date}</td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </section>\n      {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {generateReportModal !== null && generateReportModal.status === true && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-2xl text-gray-500\">\n                  Generating Report contents\n                </span>\n                <span className=\"text-sm text-blue-600 font-normal\">\n                  Generating {generateReportModal.reportType} Report\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => setGenerateReportModal(null)}\n          backDropClose={false}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-6\">\n            <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n              <div className=\"flex flex-col\">\n                <label>Title</label>\n                <input\n                  type=\"text\"\n                  className={`text-left input-white w-20 inline-block ${\n                    formError && formError.element === \"report_title\"\n                      ? \"border-red-500\"\n                      : \"border-gray-500\"\n                  } border-2`}\n                  placeholder=\"Sub Category Title\"\n                  value={reportTitle}\n                  onChange={(e) => {\n                    setFormError(null);\n                    setReportTitle(e.target.value);\n                  }}\n                  disabled={loading}\n                />\n                {formError && formError.element === \"report_title\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n              <div className=\"flex flex-col mt-2\">\n                <label>Report content</label>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                  {reportContent.map((item, index) => (\n                    <div\n                      key={index}\n                      className={`flex items-center gap-1 ${\n                        isChangeAllowed(item.key)\n                          ? \"cursor-pointer\"\n                          : \"cursor-not-allowed\"\n                      }`}\n                      onClick={() =>\n                        isChangeAllowed(item.key) &&\n                        updateReportContent(item.key)\n                      }\n                      title={\n                        !isChangeAllowed(item.key)\n                          ? \"Required for every report!\"\n                          : \"\"\n                      }\n                    >\n                      {item.status ? (\n                        <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                      ) : (\n                        <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                      )}\n                      <span>{item.title}</span>\n                    </div>\n                  ))}\n                </div>\n                {formError && formError.element === \"report_content\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n            </div>\n            <div className=\"flex justify-between mb-2 mt-4\">\n              <div\n                className={`flex items-center gap-1 cursor-pointer`}\n                onClick={() => resetReportContent(selectAll)}\n              >\n                {selectAll ? (\n                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                ) : (\n                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                )}\n                <span>Select all</span>\n              </div>\n\n              {claimToPrint && !loading && (\n                <ExportToExcel\n                  fileData={claimToPrint}\n                  fileName={reportTitle}\n                  btnName=\"Generate\"\n                />\n              )}\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {selectPeriod && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <MdHistory className=\"text-5xl text-blue-600\" />\n              <span className=\"flex flex-col\">Choose a period</span>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => thisPeriod !== null && setSelectPeriod(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <ChooseSession\n            allSession={props.application_sessions}\n            setSelectSession={(value: SessionPlanInterface | \"all\") => {\n              value !== \"all\" && setThisPeriod(value);\n              value !== \"all\" && onPeriodChange(value.session_plan_id);\n              value !== \"all\" && setSelectPeriod(false);\n            }}\n            chooseAll={false}\n            currentSelected={thisPeriod ? thisPeriod : \"all\"}\n          />\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    claiming,\n    documentReducer: document,\n    schoolLevels,\n  };\n};\n\nexport const ClaimingReport = connect(mapStateToProps, {\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  setSelectedClaimType,\n  PushPopupAlert,\n})(_ClaimingReport);\n"],"sourceRoot":""}
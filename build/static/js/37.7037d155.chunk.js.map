{"version":3,"sources":["containers/AdminDashboard/DashboardLabels.tsx","containers/AdminDashboard/DashBoardTitle.tsx","containers/AdminDashboard/index.tsx","containers/SessionSettings/NoSession.tsx","actions/settings.ts","containers/AdminDashboard/DashboardLabelItem.tsx"],"names":["DashboardLabels","props","className","DashboardLabelItem","title","icon","FaUsers","iconColor","count","applicants","IoDocumentTextSharp","positions","countOver","allPositions","MdFolderSpecial","applications","React","memo","connect","auth","GetApplicationPerPeriod","PushPopupAlert","reportTitle","FC_HasInstitute","education_institution_id","education_categories","length","map","education","i","onClick","loading","loadingEducation","setThisEducation","FC_OnInstitutionChanged","education_institute_id","thisEducation","education_category_title","loadingApplications","application_sessions","value","thisPeriod","disabled","onChange","e","setThisPeriod","target","setLoadingApplications","FC_OnSessionChanged","session","item","_id","session_plan_name","Index","setLoading","setState","setLoadingEducation","institution_id","FC_GetPositionsByInstitution","status","msg","console","log","theme","PopupAlertTheme","danger","FC_GetAllSessionByInstitution","errorMsg","sessionData","isEmptyOrSpaces","warning","activeSession","find","is_active","session_id","FC_GetApplicationCountPerPeriod","data","applicationsCounts","errorToText","componentDidMount","loadEducationCategories","_data","state","setSortOrder","thisOrder","sortOrder","setSortProperty","thisProperty","sortProperty","setIsSorted","isSorted","setSort","FC_PositionCount","allPosition","allCounts","result","position_key","elementCounts","totalApplicationOnPosition","position_id","push","position_name","position_title","total","chooseSession","this","systemPositions","NoSession","DATA_POSITIONS","allEducation","totalApplicants","totalApplications","shortlisted","rejected","id","colSpan","sortThisArray","Component","AdminDashboard","locations","schoolLevels","dashboard","course","system_settings","sessionPlan","roomLocation","allSessionPlans","getAllRoom","loadCourses","description","url","API","AUTH","getSystemSettings","callback","dispatch","a","setAxiosToken","axios","get","res","type","ActionTypes","GET_SYSTEM_SETTINGS","payload","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","task","key","permitted","GET_TASK_ACCESS","getPositions","APPLICATION","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","undefined","IconDefined","toAnyDigit","displayNumbers"],"mappings":"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","file":"static/js/37.7037d155.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { IoDocumentTextSharp } from \"react-icons/io5\";\nimport { MdFolderSpecial } from \"react-icons/md\";\nimport DashboardLabelItem from \"./DashboardLabelItem\";\n\ntype DashboardLabelProps = {\n  applicants: number;\n  applications: number;\n  positions: number;\n  allPositions?: number;\n  shortlisted: number;\n  rejected: number;\n};\n\nconst DashboardLabels: FC<DashboardLabelProps> = (props) => {\n  return (\n    <div className=\"grid lg:grid-cols-4 md:grid-cols-3 sm:grid-cols-2 grid-cols-1 gap-4 items-center mx-auto\">\n      <DashboardLabelItem\n        title=\"Applicants\"\n        icon={FaUsers}\n        iconColor=\"blue\"\n        count={props.applicants}\n      />\n\n      <DashboardLabelItem\n        title=\"Positions\"\n        icon={IoDocumentTextSharp}\n        iconColor=\"pink\"\n        count={props.positions}\n        countOver={props.allPositions}\n      />\n\n      <DashboardLabelItem\n        title=\"Applications\"\n        icon={MdFolderSpecial}\n        iconColor=\"indigo\"\n        count={props.applications}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(DashboardLabels);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { MdBrightness1 } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport { GetApplicationPerPeriod } from \"../../actions/dashboard\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { SessionPlanInterface } from \"../../interfaces\";\nimport { education_category } from \"../../interfaces/education_category\";\nimport { StoreState } from \"../../reducers\";\nimport { FC_HasInstitute } from \"../../utils/functions\";\n\ntype DashBoardTitleProps = {\n  reportTitle: string;\n  education_categories: education_category[] | null;\n  loading: boolean;\n  loadingApplications: boolean;\n  loadingEducation: boolean;\n  thisEducation: education_category | null;\n  allEducation: boolean;\n  periodChanged?: boolean;\n  setThisEducation: (value: education_category | null) => void;\n  thisPeriod: string;\n  setThisPeriod: (value: string) => void;\n  setPeriodChanged?: React.Dispatch<React.SetStateAction<boolean>>;\n  setLoadingApplications: (value: boolean) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  application_sessions: SessionPlanInterface[] | null;\n  FC_OnInstitutionChanged: (institution_id: string) => void;\n  FC_OnSessionChanged: (session_id: string) => void;\n\n  auth: Auth;\n};\n\nconst DashBoardTitle: React.FC<DashBoardTitleProps> = (props) => {\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.reportTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        {/* EDUCATION CATEGORY sections */}\n        <section>\n          {FC_HasInstitute(props.auth.education_institution_id) === false &&\n            props.education_categories &&\n            props.education_categories.length > 0 && (\n              <div className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n                {props.education_categories.map((education, i) => (\n                  <div\n                    key={i + education.education_institute_id}\n                    onClick={() => {\n                      !props.loading &&\n                        !props.loadingEducation &&\n                        props.setThisEducation(education);\n                      !props.loading &&\n                        !props.loadingEducation &&\n                        props.FC_OnInstitutionChanged(\n                          education.education_institute_id\n                        );\n                    }}\n                    className={`w-auto ${\n                      props.loading || props.loadingEducation\n                        ? \"cursor-not-allowed\"\n                        : \"cursor-pointer\"\n                    } ${\n                      props.thisEducation &&\n                      education.education_institute_id ===\n                        props.thisEducation.education_institute_id\n                        ? \"bg-blue-500 text-white font-bold\"\n                        : \"bg-gray-100 text-blue-800\"\n                    } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  >\n                    <div className=\"flex-1\">\n                      <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                      <span>{education.education_category_title}</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n        </section>\n        {/* end EDUCATION CATEGORY sections */}\n        <div className=\"mb-2\">\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              (props.loadingApplications ||\n                props.application_sessions === null) &&\n              \"cursor-wait\"\n            }`}\n            value={props.thisPeriod}\n            disabled={\n              props.loading ||\n              props.loadingApplications ||\n              props.loadingEducation ||\n              props.application_sessions === null\n            }\n            onChange={(e) => {\n              props.setThisPeriod(e.target.value);\n              props.setLoadingApplications(true);\n              props.FC_OnSessionChanged(e.target.value);\n            }}\n          >\n            {props.application_sessions &&\n              props.application_sessions.map((session, item) => (\n                <option key={session._id + item} value={session._id}>\n                  {session.session_plan_name}\n                </option>\n              ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    GetApplicationPerPeriod,\n    PushPopupAlert,\n  })(DashBoardTitle)\n);\n","import React, { Component } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  courseStoreInterface,\n  loadEducationCategories,\n  GetApplicationPerPeriod,\n  loadCourses,\n  PushPopupAlert,\n  DashboardCountType,\n  FC_GetApplicationCountPerPeriod,\n} from \"../../actions\";\nimport { getAllRoom } from \"../../actions/location\";\nimport { FC_GetAllSessionByInstitution } from \"../../actions/session\";\nimport { FC_GetPositionsByInstitution } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport {\n  education_category,\n  PositionAPI,\n  SessionPlanInterface,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { DashboardReducerType } from \"../../reducers/dashboard\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { RoomLocationInterface } from \"../../shared/interfaces\";\nimport { errorToText } from \"../../utils/errors\";\nimport { FC_HasInstitute, sortThisArray } from \"../../utils/functions\";\nimport NoSession from \"../SessionSettings/NoSession\";\nimport DashboardLabels from \"./DashboardLabels\";\nimport DashBoardTitle from \"./DashBoardTitle\";\n\ninterface AppProps {\n  auth: Auth;\n  locations: RoomLocationInterface[];\n  education_categories: education_category[] | null;\n  dashboard: DashboardReducerType;\n  systemPositions: PositionAPI[] | null;\n  application_sessions: SessionPlanInterface[] | null;\n  course: courseStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  getAllRoom: Function;\n  FC_GetAllSessionByInstitution: Function;\n  FC_GetPositionsByInstitution: Function;\n  GetApplicationPerPeriod: Function;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingEducation: boolean;\n  loadingApplications: boolean;\n  thisEducation: education_category | null;\n  thisPeriod: string;\n  chooseSession: boolean;\n  applicationsCounts: DashboardCountType | null;\n  sortProperty: string;\n  isSorted: boolean;\n  sortOrder: \"ASC\" | \"DESC\";\n}\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingEducation: true,\n      loadingApplications: false,\n      thisEducation: null,\n      thisPeriod: \"\",\n      chooseSession: true,\n      applicationsCounts: null,\n      sortProperty: \"\",\n      isSorted: false,\n      sortOrder: \"ASC\",\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n  setLoadingEducation = (value: boolean) => {\n    this.setState({ loadingEducation: value });\n  };\n  setLoadingApplications = (value: boolean) => {\n    this.setState({ loadingApplications: value });\n  };\n  setThisEducation = (value: education_category | null) => {\n    this.setState({ thisEducation: value });\n  };\n  setThisPeriod = (value: string) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  FC_OnInstitutionChanged = (institution_id: string) => {\n    // LOAD POSITIONS BY INSTITUTION =================\n    this.props.FC_GetPositionsByInstitution(\n      institution_id,\n      (status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n\n    // LOAD SESSION BY INSTITUTION =================\n    this.props.FC_GetAllSessionByInstitution(\n      institution_id,\n      (\n        status: boolean,\n        errorMsg: string,\n        sessionData: SessionPlanInterface[]\n      ) => {\n        this.setLoading(status);\n        if (!status) {\n          if (!isEmptyOrSpaces(errorMsg)) {\n            this.props.PushPopupAlert({\n              title: errorMsg,\n              theme: PopupAlertTheme.warning,\n            });\n          }\n\n          if (sessionData && sessionData.length > 0) {\n            let activeSession = sessionData.find((item) => item.is_active);\n            if (activeSession) {\n              this.setThisPeriod(activeSession._id);\n              this.FC_OnSessionChanged(activeSession._id);\n            } else {\n              this.setThisPeriod(sessionData[0]._id);\n              this.FC_OnSessionChanged(sessionData[0]._id);\n            }\n          }\n        }\n      }\n    );\n  };\n\n  FC_OnSessionChanged = (session_id: string) => {\n    FC_GetApplicationCountPerPeriod(\n      session_id,\n      (status: boolean, msg: string, data: DashboardCountType | null) => {\n        this.setLoadingEducation(status);\n        this.setState({ applicationsCounts: data });\n        if (!status && msg.length > 0) {\n          this.props.PushPopupAlert({\n            title: errorToText(msg),\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.education_categories === null ||\n      this.props.education_categories.length\n    ) {\n      this.props.loadEducationCategories(\n        (status: boolean, data?: education_category[]) => {\n          this.setLoading(status);\n          if (!status && data && data.length > 0) {\n            if (\n              FC_HasInstitute(this.props.auth.education_institution_id) ===\n              false\n            ) {\n              this.setThisEducation(data[0]);\n              this.FC_OnInstitutionChanged(data[0].education_institute_id);\n            } else {\n              const _data = data.find(\n                (item) =>\n                  item.education_institute_id ===\n                  this.props.auth.education_institution_id!\n              );\n              this.setThisEducation(_data ? _data : data[0]);\n              this.FC_OnInstitutionChanged(\n                this.props.auth.education_institution_id!\n              );\n            }\n          }\n        }\n      );\n    } else if (this.state.thisEducation === null) {\n      if (FC_HasInstitute(this.props.auth.education_institution_id) === false) {\n        this.setThisEducation(this.props.education_categories[0]);\n        this.FC_OnInstitutionChanged(\n          this.props.education_categories[0].education_institute_id\n        );\n      } else {\n        this.FC_OnInstitutionChanged(this.props.auth.education_institution_id!);\n        const data = this.props.education_categories.find(\n          (item) =>\n            item.education_institute_id ===\n            this.props.auth.education_institution_id\n        );\n        this.setThisEducation(data ? data : this.props.education_categories[0]);\n      }\n    }\n  };\n\n  setSortOrder = (thisOrder: \"ASC\" | \"DESC\") => {\n    this.setState({ sortOrder: thisOrder });\n  };\n\n  setSortProperty = (thisProperty: string) => {\n    this.setState({ sortProperty: thisProperty });\n  };\n\n  setIsSorted = (status: boolean) => {\n    this.setState({ isSorted: status });\n  };\n\n  setSort = (thisProperty: string) => {\n    if (\n      this.state.sortProperty === thisProperty &&\n      this.state.sortOrder === \"ASC\"\n    ) {\n      this.setSortOrder(\"DESC\");\n    } else {\n      this.setSortOrder(\"ASC\");\n    }\n    this.setSortProperty(thisProperty);\n    this.setIsSorted(true);\n  };\n\n  FC_PositionCount = (\n    allPosition: PositionAPI[],\n    allCounts: DashboardCountType\n  ): {\n    data: { _id: string; position_name: string; applications: number }[];\n    positions: number;\n  } => {\n    let result: {\n      data: { _id: string; position_name: string; applications: number }[];\n      positions: number;\n    } = { data: [], positions: 0 };\n\n    for (const position_key in allPosition) {\n      const elementCounts = allCounts.totalApplicationOnPosition.find(\n        (item) => item._id === allPosition[position_key].position_id\n      );\n\n      result.data.push({\n        _id: allPosition[position_key].position_id,\n        position_name: allPosition[position_key].position_title,\n        applications: elementCounts ? elementCounts.total : 0,\n      });\n      result.positions += elementCounts && elementCounts.total > 0 ? 1 : 0;\n    }\n    return result;\n  };\n\n  render() {\n    if (\n      this.props.application_sessions === null ||\n      this.props.education_categories === null ||\n      this.state.applicationsCounts === null ||\n      this.props.systemPositions === null ||\n      this.state.loading ||\n      this.state.loadingEducation\n    ) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return <NoSession />;\n    }\n\n    const DATA_POSITIONS = this.FC_PositionCount(\n      this.props.systemPositions,\n      this.state.applicationsCounts\n    );\n\n    return (\n      <div>\n        {/* HEADER TITLE */}\n        <DashBoardTitle\n          education_categories={this.props.education_categories}\n          loading={this.state.loading}\n          loadingApplications={this.state.loadingApplications}\n          loadingEducation={this.state.loadingEducation}\n          thisEducation={this.state.thisEducation}\n          setThisEducation={this.setThisEducation}\n          thisPeriod={this.state.thisPeriod}\n          setThisPeriod={this.setThisPeriod}\n          application_sessions={this.props.application_sessions}\n          setLoadingApplications={this.setLoadingApplications}\n          reportTitle={\"Application Dashboard\"}\n          allEducation={false}\n          FC_OnInstitutionChanged={this.FC_OnInstitutionChanged}\n          FC_OnSessionChanged={this.FC_OnSessionChanged}\n        />\n        {/* END HEADER TITLE */}\n\n        <DashboardLabels\n          applicants={this.state.applicationsCounts.totalApplicants}\n          applications={this.state.applicationsCounts.totalApplications}\n          shortlisted={0}\n          rejected={0}\n          positions={DATA_POSITIONS.positions}\n          allPositions={this.props.systemPositions.length}\n        />\n\n        <div className=\"my-8\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => this.setSort(\"position_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Position <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => this.setSort(\"applications\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Application <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {DATA_POSITIONS.data.length === 0 ? (\n                <tr>\n                  <td colSpan={8} className=\"px-2 py-2\">\n                    <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                      <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                      <span className=\"text-sm font-bold\">\n                        No result found! Please try to search again\n                      </span>\n                      <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                        <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                          <li className=\"underline text-gray-500 cursor-pointer\">\n                            Filter by session\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              ) : (\n                sortThisArray(\n                  this.state.isSorted,\n                  DATA_POSITIONS.data,\n                  this.state.sortProperty,\n                  this.state.sortOrder\n                ).map(\n                  (\n                    item: {\n                      _id: string;\n                      position_name: string;\n                      applications: number;\n                    },\n                    i: number\n                  ) => (\n                    <tr\n                      key={i + item._id}\n                      className={`${\n                        i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                      } hover:bg-blue-100 hover:text-blue-700 border-b hover:border-blue-500 text-base text-gray-600 border-gray-300`}\n                    >\n                      <td className=\"px-2 py-2\">{i + 1}</td>\n                      <td className=\"px-2 py-2\">{item.position_name}</td>\n                      <td className=\"px-2 py-2\">{item.applications}</td>\n                    </tr>\n                  )\n                )\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  locations,\n  schoolLevels,\n  dashboard,\n  course,\n  system_settings,\n  sessionPlan,\n}: StoreState): {\n  auth: Auth;\n  locations: RoomLocationInterface[];\n  education_categories: education_category[] | null;\n  dashboard: DashboardReducerType;\n  systemPositions: PositionAPI[] | null;\n  course: courseStoreInterface;\n  application_sessions: SessionPlanInterface[] | null;\n} => {\n  return {\n    auth: auth,\n    locations: locations.roomLocation,\n    education_categories: schoolLevels.education_categories,\n    dashboard,\n    course: course,\n    systemPositions: system_settings.systemPositions,\n    application_sessions: sessionPlan.allSessionPlans,\n  };\n};\n\nexport const AdminDashboard = connect(mapStateToProps, {\n  getAllRoom,\n  loadEducationCategories,\n  FC_GetPositionsByInstitution,\n  FC_GetAllSessionByInstitution,\n  GetApplicationPerPeriod,\n  loadCourses,\n  PushPopupAlert,\n})(Index);\n","import React from \"react\";\nimport { IoWarning } from \"react-icons/io5\";\n// import { MdInfoOutline } from \"react-icons/md\";\nimport { NavLink } from \"react-router-dom\";\n\ntype NoSessionProps = {\n  title?: string;\n  description?: string;\n};\n\nconst NoSession: React.FC<NoSessionProps> = ({\n  title = \"No session available\",\n  description = \"Please Wait for the system to publish the sessions or contact the administrator\",\n}) => {\n  return (\n    <div className=\"w-full my-5\">\n      <section className=\"py-10 flex flex-col items-center rounded border border-gray-300 bg-white text-2xl font-medium text-yellow-800 animate__animated animate__pulse\">\n        <div className=\"flex flex-col items-center\">\n          <IoWarning className=\"w-32 h-32\" />\n          {description}\n        </div>\n        {false && (\n          <div className=\"text-center group text-sm -mb-3 mt-5\">\n            <NavLink\n              to=\"/apps-page\"\n              className=\"border border-rounded-md bg-gray-100 text-gray-900 rounded border-gray-100 group-hover:bg-gray-50 group-hover:border-gray-400 px-2 py-1\"\n            >\n              Back to App\n            </NavLink>\n          </div>\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default React.memo(NoSession);\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\nconst url = `${API.AUTH}/auth/user/access`;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/system/setting`\n      );\n      console.log(\"=================getSystemSettings===================\");\n      console.log(res);\n      console.log(\"=================getSystemSettings===================\");\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${url}/roleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_GetPositionsByInstitution = (\n  institution_id: string,\n  callback: (status: boolean, msg: string, data?: PositionAPI[]) => void\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(\n        `${API.APPLICATION}/position/instituteposition/${institution_id}`\n      );\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import React, { FC } from \"react\";\nimport { IconType } from \"react-icons\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { toAnyDigit } from \"../../shared/dataTest\";\nimport { displayNumbers } from \"../../utils/functions\";\n\nexport type DashboardLabelItemInterface = {\n  // TITLE: Application or Exam or Shortlisted ....\n  title: string;\n  // ICON: FaExpand ....\n  icon: IconType;\n  // ICON COLOR: blue, indigo, gray ....\n  iconColor: string;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  count: number;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  countOver?: number;\n};\n\nconst DashboardLabelItem: FC<DashboardLabelItemInterface> = (\n  props = {\n    title: \"\",\n    icon: FaUsers,\n    iconColor: \"indigo\",\n    count: 0,\n    countOver: undefined,\n  }\n) => {\n  const IconDefined = props.icon;\n  return (\n    <div className=\"flex items-center px-6 py-4 bg-white w-full rounded-md space-x-2 mb-2 lg:mb-0 shadow-md\">\n      <div\n        className={`p-3 rounded-full bg-${props.iconColor}-200 bg-opacity-75`}\n      >\n        <IconDefined className={`h-8 w-8 text-${props.iconColor}-600`} />\n      </div>\n      <div>\n        <h1 className=\"text-3xl font-semibold text-gray-700\">\n          {props.count < 1000\n            ? toAnyDigit(props.count)\n            : displayNumbers(props.count)}{\" \"}\n          {props.countOver && \"/ \" + toAnyDigit(props.countOver)}\n        </h1>\n        <span className=\"text-gray-500 text-lg\">{props.title}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DashboardLabelItem);\n"],"sourceRoot":""}
{"version":3,"sources":["containers/SessionSettings/index.tsx","containers/SessionSettings/CalendarView.tsx","containers/SessionSettings/ApplicationSession/ApplicationSession.tsx","containers/SessionSettings/AcademicSession/AcademicSession.tsx","shared/dataTest.tsx","actions/session.ts","components/Loading/TableLoading.tsx","components/ActionConfirm/ActionConfirm.tsx","containers/SessionSettings/ApplicationSession/SessionDetails.tsx"],"names":["sessionSettingsTabs","allViews","localizer","momentLocalizer","moment","CalendarView","props","setLoading","state","setState","loading","loadEvents","allSession","allEvents","n","key","Object","prototype","hasOwnProperty","call","thisSession","plan_key","plans","thisPlan","thisTitle","type_key","PlansTypeKeys","APPLICATION","session_plan_name","DOCUMENT_VALIDATION","EXAMINATION","MARKS_PUBLICATION","PLACEMENT_TRANSFER","push","id","title","allDay","start","start_date","toDate","end","end_date","events","componentDidMount","sessionPlan","allSessionPlans","length","GetAllSessionPlans","status","msg","data","PushPopupAlert","theme","PopupAlertTheme","danger","className","this","popup","defaultDate","Date","views","step","showMultiDayTimes","onSelectEvent","event","alert","startAccessor","endAccessor","Component","React","memo","connect","ApplicationSession","setCreateSession","createSession","setSessionTitle","sessionTitle","setViewThisSession","viewThisSession","session_plan_id","setActivateSession","activateSession","setSessionPeriod","sessionPeriod","setFormError","formError","planTypes","GetPlansTypes","isCreateDefault","handleSessionActivation","session","a","newState","is_active","window","confirm","loadingRequest","axios","put","API","CLAIMING","res","info","console","log","error","errorToText","warning","isDateRangeValid","planType","level","thisDate","currentDate","today","dd","getDate","mm","getMonth","yyyy","getFullYear","date","toString","month","setPlansForUpdate","application_start","find","item","application_end","document_start","document_end","examination_start","examination_end","publication_start","publication_end","placement_start","placement_end","handleSubmit","e","preventDefault","isEmptyOrSpaces","element","createFormData","period","type_status","SessionPlanTypeStatus","OPEN","updateSessionPlan","post","createSessionPlan","success","doAction","disabled","onClick","TableLoading","cols","colSpan","NoResult","NoResultThemes","Dark","value","component","map","index","capitalizeFirstLetter","SessionDetails","onSubmit","onChange","target","type","min","ActionConfirm","modalType","ActionConfirmEnum","OTHER","confirmFun","setModalAction","description","auth","setSelectedPlanType","sessionActivation","deleteSessionPlan","AcademicSession","academicSessions","GetAllAcademicSession","_id","patch","PLACEMENT","updateAcademicSession","createAcademicSession","academicSessionActivation","deleteAcademicSession","Index","setting_type","useParams","useState","calenderView","academicSession","applicationSession","selectedTab","setSelectedTab","values","i","str","match","getRoleById","roles","roleId","filter","role","system_user_role_id","getInstituteById","institutes","instituteId","education_institute_id","getPositionById","positions","position_id","position","toTwoDigit","dec","Math","floor","slice","substr","toAnyDigit","padding","zeroes","Array","join","charAt","toUpperCase","callback","dispatch","setAxiosToken","get","GET_PLANS_TYPES","plan_types","ActionTypes","payload","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","undefined","GET_ALL_SESSION_PLANS","session_data","CREATE_SESSION_PLAN","UPDATE_SESSION_PLAN","SESSION_ACTIVATION","DELETE_SESSION_PLAN","CREATE_ACADEMIC_SESSION","GET_ALL_ACADEMIC_SESSION","UPDATE_ACADEMIC_SESSION","ACADEMIC_SESSION_ACTIVATION","DELETE_ACADEMIC_SESSION","getActiveAcademicSession","GET_ACTIVE_ACADEMIC_SESSION","displayCols","colsArray","DELETE","RESTORE_DELETE","INFO","isActivationAllowed","thisPlans","getTime","getPlanTypeByKey","allPlanTypes","isPlanActive","planEndDate","planStartDate","CLOSED","handlePlanActivation","newData","createdAt","updatedAt","type_id","type_title","allowed_claim_level","history","DATE"],"mappings":"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","file":"static/js/47.e0312e3b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { RiFolderSettingsFill } from \"react-icons/ri\";\nimport { useParams } from \"react-router-dom\";\nimport CalendarView from \"./CalendarView\";\nimport ApplicationSession from \"./ApplicationSession/ApplicationSession\";\nimport AcademicSession from \"./AcademicSession/AcademicSession\";\n\nenum sessionSettingsTabs {\n  applicationSession = \"Application Session\",\n  academicSession = \"Academic Session\",\n  calenderView = \"Calendar View\",\n}\n\nexport const Index = () => {\n  const { setting_type } = useParams<{ setting_type: string }>();\n  const [selectedTab, setSelectedTab] = useState<sessionSettingsTabs | null>(\n    setting_type === \"calendar\"\n      ? sessionSettingsTabs.calenderView\n      : setting_type === \"academic\"\n      ? sessionSettingsTabs.academicSession\n      : sessionSettingsTabs.applicationSession\n  );\n\n  return (\n    <div className=\"\">\n      <div className=\"mt-3 rounded flex flex-row justify-between items-center\">\n        <div className=\"flex flex-row items-center gap-3\">\n          <RiFolderSettingsFill className=\"text-6xl text-blue-600\" />\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-2xl font-bold\">\n              Session settings\n            </span>\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3 mb-6 flex-col\">\n        <div className=\"bg-white w-full border border-white rounded\">\n          <div className=\"flex flex-row items-center\">\n            {Object.values(sessionSettingsTabs).map((item, i) => (\n              <div\n                key={i}\n                onClick={() => setSelectedTab(item)}\n                className={`animate__animated ${\n                  selectedTab === item\n                    ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                    : \"bg-white border-white text-gray-600\"\n                } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mx-1`}\n              >\n                {item}\n              </div>\n            ))}\n          </div>\n          <div className=\"=rounded mx-1 mb-1\">\n            {selectedTab === sessionSettingsTabs.applicationSession && (\n              <ApplicationSession\n                isCreateDefault={setting_type === \"create-session\"}\n              />\n            )}\n            {selectedTab === sessionSettingsTabs.academicSession && (\n              <AcademicSession\n                isCreateDefault={setting_type === \"create-session\"}\n              />\n            )}\n            {selectedTab === sessionSettingsTabs.calenderView && (\n              <CalendarView />\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { GetAllSessionPlans } from \"../../actions/session\";\nimport { StoreState } from \"../../reducers\";\nimport { SessionPlanReducerInterface } from \"../../reducers/session\";\nimport { Calendar, View, DateLocalizer } from \"react-big-calendar\";\nimport { momentLocalizer } from \"react-big-calendar\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport moment from \"moment\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { PlansTypeKeys, SessionPlanInterface } from \"../../interfaces\";\n\ntype eventsInterface = {\n  id: number;\n  title: string;\n  allDay?: boolean;\n  start: Date;\n  end: Date;\n  desc?: string;\n};\n\ninterface CalendarViewProps {\n  //   REDUX ############################\n  sessionPlan: SessionPlanReducerInterface;\n  GetAllSessionPlans: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface CalendarViewState {\n  loading: boolean;\n  events: eventsInterface[] | null;\n}\n\nconst allViews: View[] = [\"month\", \"agenda\"];\nconst localizer: DateLocalizer = momentLocalizer(moment);\n\nclass CalendarView extends Component<CalendarViewProps, CalendarViewState> {\n  constructor(props: CalendarViewProps) {\n    super(props);\n\n    this.state = { loading: true, events: null };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  loadEvents = (allSession: SessionPlanInterface[]) => {\n    let allEvents: eventsInterface[] = [],\n      n: number = 1;\n    for (const key in allSession) {\n      if (Object.prototype.hasOwnProperty.call(allSession, key)) {\n        const thisSession = allSession[key];\n        for (const plan_key in thisSession.plans) {\n          if (\n            Object.prototype.hasOwnProperty.call(thisSession.plans, plan_key)\n          ) {\n            const thisPlan = thisSession.plans[plan_key];\n            const thisTitle: string =\n              thisPlan.type_key === PlansTypeKeys.APPLICATION\n                ? thisSession.session_plan_name + \" - Applications\"\n                : thisPlan.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n                ? thisSession.session_plan_name + \" - Document validation\"\n                : thisPlan.type_key === PlansTypeKeys.EXAMINATION\n                ? thisSession.session_plan_name + \" - Examination\"\n                : thisPlan.type_key === PlansTypeKeys.MARKS_PUBLICATION\n                ? thisSession.session_plan_name + \" - Marks publication\"\n                : thisPlan.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n                ? thisSession.session_plan_name + \" - Placement transfer\"\n                : thisSession.session_plan_name;\n            allEvents.push({\n              id: n,\n              title: thisTitle,\n              allDay: true,\n              start: moment(thisPlan.start_date).toDate(),\n              end: moment(thisPlan.end_date).toDate(),\n            });\n            n++;\n          }\n        }\n      }\n    }\n    this.setState({ events: allEvents });\n    n = 1;\n    allEvents = [];\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.sessionPlan.allSessionPlans === null ||\n      this.props.sessionPlan.allSessionPlans.length <= 0\n    ) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data: SessionPlanInterface[]) => {\n          this.setLoading(status);\n          if (!status && data) {\n            this.loadEvents(data);\n          }\n          if (!status && msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else {\n      this.loadEvents(this.props.sessionPlan.allSessionPlans);\n      this.setLoading(false);\n    }\n  };\n\n  render() {\n    return (\n      <section className=\"my-3\">\n        {this.state.events && (\n          <Calendar\n            popup\n            localizer={localizer}\n            events={this.state.events}\n            defaultDate={new Date()}\n            views={allViews}\n            step={60}\n            showMultiDayTimes\n            onSelectEvent={(event) => alert(event.title)}\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n            className=\"min-h-screen\"\n            // style={{ height: \"100vh\" }}\n          />\n        )}\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  sessionPlan,\n}: StoreState): {\n  sessionPlan: SessionPlanReducerInterface;\n} => {\n  return {\n    sessionPlan,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    GetAllSessionPlans,\n    PushPopupAlert,\n  })(CalendarView)\n);\n","import axios from \"axios\";\nimport React, { Component, Fragment } from \"react\";\nimport {\n  MdArrowBack,\n  MdEdit,\n  MdExpandLess,\n  MdExpandMore,\n} from \"react-icons/md\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  GetPlansTypes,\n  setSelectedPlanType,\n  GetAllSessionPlans,\n  createSessionPlan,\n  updateSessionPlan,\n  deleteSessionPlan,\n  sessionActivation,\n} from \"../../../actions/session\";\nimport ActionConfirm, {\n  ActionConfirmEnum,\n} from \"../../../components/ActionConfirm/ActionConfirm\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  CreateSessionPlanInterface,\n  PlansInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/functions\";\n// import FormSteps from \"./FormSteps\";\nimport SessionDetails from \"./SessionDetails\";\n\ninterface ApplicationSessionProps {\n  isCreateDefault: boolean;\n\n  //   REDUX ############################\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  GetPlansTypes: Function;\n  setSelectedPlanType: Function;\n  GetAllSessionPlans: Function;\n  createSessionPlan: Function;\n  updateSessionPlan: Function;\n  sessionActivation: Function;\n  deleteSessionPlan: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface ApplicationSessionState {\n  loading: boolean;\n  createSession: boolean;\n  loadingRequest: string;\n  activateSession: SessionPlanInterface | null;\n  thisSession: SessionPlanInterface | null;\n  viewThisSession: SessionPlanInterface | null;\n  doAction: \"ACTIVATED\" | \"EDIT\" | \"DELETE\" | null;\n  sessionTitle: string;\n  sessionPeriod: string;\n  application_start: string;\n  application_end: string;\n  document_start: string;\n  document_end: string;\n  examination_start: string;\n  examination_end: string;\n  publication_start: string;\n  publication_end: string;\n  placement_start: string;\n  placement_end: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  // currentTab: \"ACTIVE\" | \"DELETED\";\n}\n\nexport class ApplicationSession extends Component<\n  ApplicationSessionProps,\n  ApplicationSessionState\n> {\n  constructor(props: ApplicationSessionProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingRequest: \"\",\n      createSession: false,\n      activateSession: null,\n      thisSession: null,\n      viewThisSession: null,\n      doAction: null,\n      sessionTitle: \"\",\n      sessionPeriod: \"\",\n      application_start: \"\",\n      application_end: \"\",\n      document_start: \"\",\n      document_end: \"\",\n      examination_start: \"\",\n      examination_end: \"\",\n      publication_start: \"\",\n      publication_end: \"\",\n      placement_start: \"\",\n      placement_end: \"\",\n      formError: null,\n      // currentTab: \"ACTIVE\",\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setCreateSession = (state: boolean) => {\n    this.setState({ createSession: state });\n  };\n\n  setSessionTitle = (data: string) => {\n    this.setState({ sessionTitle: data });\n  };\n\n  setViewThisSession = (data: SessionPlanInterface) => {\n    if (this.state.viewThisSession === null) {\n      this.setState({ viewThisSession: data });\n    } else if (\n      this.state.viewThisSession.session_plan_id === data.session_plan_id\n    ) {\n      this.setState({ viewThisSession: null });\n    } else {\n      this.setState({ viewThisSession: data });\n    }\n  };\n\n  setActivateSession = (data: SessionPlanInterface | null) => {\n    this.setState({ activateSession: data });\n  };\n\n  setSessionPeriod = (data: string) => {\n    this.setState({ sessionPeriod: data });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.sessionPlan.planTypes === null ||\n      this.props.sessionPlan.planTypes.length <= 0\n    ) {\n      this.props.GetPlansTypes((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status && msg.length > 0) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    }\n\n    if (\n      this.props.sessionPlan.planTypes !== null &&\n      this.props.sessionPlan.planTypes.length > 0\n    ) {\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.sessionPlan.allSessionPlans === null ||\n      this.props.sessionPlan.allSessionPlans.length <= 0\n    ) {\n      this.props.GetAllSessionPlans((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status && msg.length > 0) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    }\n\n    if (!this.state.createSession) {\n      this.setCreateSession(this.props.isCreateDefault);\n    }\n  };\n\n  handleSessionActivation = async (session: SessionPlanInterface) => {\n    const newState: \"activate\" | \"deactivate\" = session.is_active\n      ? \"deactivate\"\n      : \"activate\";\n\n    if (!window.confirm(`Are you sure you want to ${newState} this session?`)) {\n      return true;\n    }\n\n    this.setState({ loadingRequest: session.session_plan_id });\n\n    try {\n      const res = await axios.put<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/${session.session_plan_id}`,\n        {\n          is_active: !session.is_active,\n        }\n      );\n      // this.props.sessionActivation(res.data);\n      this.props.GetAllSessionPlans((status: boolean, msg: string) => {\n        // this.setLoading(status);\n        if (!status && msg.length > 0) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n      this.props.PushPopupAlert({\n        title: `Session ${newState}d successfully`,\n        theme: PopupAlertTheme.info,\n      });\n      console.log(\"updateSessionPlan: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    this.setState({ loadingRequest: \"\" });\n  };\n\n  isDateRangeValid = (\n    planType:\n      | \"APPLICATION\"\n      | \"DOCUMENT\"\n      | \"EXAMINATION\"\n      | \"PUBLICATION\"\n      | \"PLACEMENT\",\n    level: \"START\" | \"END\",\n    thisDate: string\n  ): boolean => {\n    // let currentDate: Date = new Date(thisDate),\n    //   compareDate: Date;\n    // APPLICATION VALIDATION ============================\n    // if (planType === \"APPLICATION\") {\n    //   if (level === \"START\") {\n    //     compareDate = new Date(this.state.application_end);\n    //     let today = new Date(this.currentDate());\n    //     if (\n    //       this.state.thisSession !== null &&\n    //       currentDate.getTime() < today.getTime()\n    //     ) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"application_period_start\",\n    //           msg: `Invalid date, application start period must be at least today ${this.currentDate()}`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.application_end.length > 0 &&\n    //       currentDate.getTime() >= compareDate.getTime()\n    //     ) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"application_period_end\",\n    //           msg: `Invalid date, must be greater than ${thisDate}`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.formError &&\n    //       this.state.formError.element === \"application_period_end\"\n    //     ) {\n    //       this.setState({\n    //         formError: null,\n    //       });\n    //       return false;\n    //     }\n    //   } else {\n    //     compareDate = new Date(this.state.application_start);\n    //     if (\n    //       this.state.application_start.length > 0 &&\n    //       compareDate.getTime() >= currentDate.getTime()\n    //     ) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"application_period_end\",\n    //           msg: `Invalid date, must be greater than ${this.state.application_start}`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (isEmptyOrSpaces(this.state.application_start)) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"application_period_start\",\n    //           msg: `Application period start date is required`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.formError &&\n    //       (this.state.formError.element === \"application_period_end\" ||\n    //         this.state.formError.element === \"application_period_start\")\n    //     ) {\n    //       this.setState({\n    //         formError: null,\n    //       });\n    //       return true;\n    //     }\n    //   }\n    // }\n\n    // DOCUMENT VALIDATION ============================\n    // if (planType === \"DOCUMENT\") {\n    //   if (level === \"START\") {\n    //     compareDate = new Date(this.state.document_end);\n    //     let application_end = new Date(this.state.application_end);\n    //     if (currentDate.getTime() <= application_end.getTime()) {\n    //       console.log({\n    //         currentDate: currentDate.getTime(),\n    //         application_end: application_end.getTime(),\n    //       });\n    //       this.setState({\n    //         formError: {\n    //           element: \"document_period_start\",\n    //           msg: `Invalid date, document validation must start after application period end`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.document_end.length > 0 &&\n    //       currentDate.getTime() >= compareDate.getTime()\n    //     ) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"document_period_end\",\n    //           msg: `Invalid date, must be greater than ${thisDate}`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.formError &&\n    //       this.state.formError.element === \"document_period_end\"\n    //     ) {\n    //       this.setState({\n    //         formError: null,\n    //       });\n    //       return true;\n    //     }\n    //   } else {\n    //     compareDate = new Date(this.state.document_start);\n    //     if (\n    //       this.state.document_start.length > 0 &&\n    //       compareDate.getTime() >= currentDate.getTime()\n    //     ) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"document_period_end\",\n    //           msg: `Invalid date, must be greater than ${this.state.document_start}`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (isEmptyOrSpaces(this.state.document_start)) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"document_period_start\",\n    //           msg: `Document validation period start date is required`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.formError &&\n    //       (this.state.formError.element === \"document_period_end\" ||\n    //         this.state.formError.element === \"document_period_start\")\n    //     ) {\n    //       this.setState({\n    //         formError: null,\n    //       });\n    //       return true;\n    //     }\n    //   }\n    // }\n\n    // EXAMINATION VALIDATION ============================\n    // if (planType === \"EXAMINATION\") {\n    //   if (level === \"START\") {\n    //     compareDate = new Date(this.state.examination_end);\n    //     let document_end = new Date(this.state.document_end);\n    //     if (currentDate.getTime() <= document_end.getTime()) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"examination_period_start\",\n    //           msg: `Invalid date, examination must start after document validation period end`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.examination_end.length > 0 &&\n    //       currentDate.getTime() >= compareDate.getTime()\n    //     ) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"examination_period_end\",\n    //           msg: `Invalid date, must be greater than ${thisDate}`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.formError &&\n    //       this.state.formError.element === \"examination_period_end\"\n    //     ) {\n    //       this.setState({\n    //         formError: null,\n    //       });\n    //       return true;\n    //     }\n    //   } else {\n    //     compareDate = new Date(this.state.document_start);\n    //     if (\n    //       this.state.document_start.length > 0 &&\n    //       compareDate.getTime() >= currentDate.getTime()\n    //     ) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"examination_period_end\",\n    //           msg: `Invalid date, must be greater than ${this.state.document_start}`,\n    //         },\n    //       });\n    //     } else if (isEmptyOrSpaces(this.state.document_start)) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"examination_period_start\",\n    //           msg: `Examination period start date is required`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.formError &&\n    //       (this.state.formError.element === \"examination_period_end\" ||\n    //         this.state.formError.element === \"examination_period_start\")\n    //     ) {\n    //       this.setState({\n    //         formError: null,\n    //       });\n    //       return true;\n    //     }\n    //   }\n    // }\n\n    // PUBLICATION VALIDATION ============================\n    // if (planType === \"PUBLICATION\") {\n    //   if (level === \"START\") {\n    //     compareDate = new Date(this.state.publication_end);\n    //     let examination_end = new Date(this.state.examination_end);\n    //     if (currentDate.getTime() <= examination_end.getTime()) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"publication_period_start\",\n    //           msg: `Invalid date, marks publication must start after examination period end`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.publication_end.length > 0 &&\n    //       currentDate.getTime() >= compareDate.getTime()\n    //     ) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"publication_period_end\",\n    //           msg: `Invalid date, must be greater than ${thisDate}`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.formError &&\n    //       this.state.formError.element === \"publication_period_end\"\n    //     ) {\n    //       this.setState({\n    //         formError: null,\n    //       });\n    //       return true;\n    //     }\n    //   } else {\n    //     compareDate = new Date(this.state.document_start);\n    //     if (\n    //       this.state.document_start.length > 0 &&\n    //       compareDate.getTime() >= currentDate.getTime()\n    //     ) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"publication_period_end\",\n    //           msg: `Invalid date, must be greater than ${this.state.document_start}`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (isEmptyOrSpaces(this.state.document_start)) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"publication_period_start\",\n    //           msg: `Marks publication period start date is required`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.formError &&\n    //       (this.state.formError.element === \"publication_period_end\" ||\n    //         this.state.formError.element === \"publication_period_start\")\n    //     ) {\n    //       this.setState({\n    //         formError: null,\n    //       });\n    //       return true;\n    //     }\n    //   }\n    // }\n\n    // PLACEMENT VALIDATION ============================\n    // if (planType === \"PLACEMENT\") {\n    //   if (level === \"START\") {\n    //     compareDate = new Date(this.state.placement_end);\n    //     let publication_end = new Date(this.state.publication_end);\n    //     if (currentDate.getTime() <= publication_end.getTime()) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"placement_period_start\",\n    //           msg: `Invalid date, Placement must start after marks publication period end`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.placement_end.length > 0 &&\n    //       currentDate.getTime() >= compareDate.getTime()\n    //     ) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"placement_period_end\",\n    //           msg: `Invalid date, must be greater than ${thisDate}`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.formError &&\n    //       this.state.formError.element === \"placement_period_end\"\n    //     ) {\n    //       this.setState({\n    //         formError: null,\n    //       });\n    //       return true;\n    //     }\n    //   } else {\n    //     compareDate = new Date(this.state.document_start);\n    //     if (\n    //       this.state.document_start.length > 0 &&\n    //       compareDate.getTime() >= currentDate.getTime()\n    //     ) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"placement_period_end\",\n    //           msg: `Invalid date, must be greater than ${this.state.document_start}`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (isEmptyOrSpaces(this.state.document_start)) {\n    //       this.setState({\n    //         formError: {\n    //           element: \"placement_period_start\",\n    //           msg: `Placement period start date is required`,\n    //         },\n    //       });\n    //       return false;\n    //     } else if (\n    //       this.state.formError &&\n    //       (this.state.formError.element === \"placement_period_end\" ||\n    //         this.state.formError.element === \"placement_period_start\")\n    //     ) {\n    //       this.setState({\n    //         formError: null,\n    //       });\n    //       return true;\n    //     }\n    //   }\n    // }\n\n    return true;\n  };\n\n  currentDate = (): string => {\n    let today = new Date();\n    let dd = today.getDate();\n    let mm = today.getMonth() + 1; //January is 0!\n    let yyyy = today.getFullYear(),\n      date: string = dd.toString(),\n      month: string = mm.toString();\n\n    if (dd < 10) {\n      date = \"0\" + dd;\n    }\n\n    if (mm < 10) {\n      month = \"0\" + mm;\n    }\n\n    return yyyy + \"-\" + month + \"-\" + date;\n  };\n\n  setPlansForUpdate = (data: PlansInterface[]) => {\n    this.setState({\n      application_start: data.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      )\n        ? data.find((item) => item.type_key === PlansTypeKeys.APPLICATION)!\n            .start_date\n        : \"\",\n      application_end: data.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      )\n        ? data.find((item) => item.type_key === PlansTypeKeys.APPLICATION)!\n            .end_date\n        : \"\",\n      document_start: data.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      )\n        ? data.find(\n            (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n          )!.start_date\n        : \"\",\n      document_end: data.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      )\n        ? data.find(\n            (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n          )!.end_date\n        : \"\",\n      examination_start: data.find(\n        (item) => item.type_key === PlansTypeKeys.EXAMINATION\n      )\n        ? data.find((item) => item.type_key === PlansTypeKeys.EXAMINATION)!\n            .start_date\n        : \"\",\n      examination_end: data.find(\n        (item) => item.type_key === PlansTypeKeys.EXAMINATION\n      )\n        ? data.find((item) => item.type_key === PlansTypeKeys.EXAMINATION)!\n            .end_date\n        : \"\",\n      publication_start: data.find(\n        (item) => item.type_key === PlansTypeKeys.MARKS_PUBLICATION\n      )\n        ? data.find(\n            (item) => item.type_key === PlansTypeKeys.MARKS_PUBLICATION\n          )!.start_date\n        : \"\",\n      publication_end: data.find(\n        (item) => item.type_key === PlansTypeKeys.MARKS_PUBLICATION\n      )\n        ? data.find(\n            (item) => item.type_key === PlansTypeKeys.MARKS_PUBLICATION\n          )!.end_date\n        : \"\",\n      placement_start: data.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      )\n        ? data.find(\n            (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n          )!.start_date\n        : \"\",\n      placement_end: data.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      )\n        ? data.find(\n            (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n          )!.end_date\n        : \"\",\n    });\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // validation\n    if (isEmptyOrSpaces(this.state.sessionTitle)) {\n      return this.setFormError({\n        element: \"title\",\n        msg: \"Please fill the session plan title\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.sessionPeriod)) {\n      return this.setFormError({\n        element: \"period\",\n        msg: \"Please fill session plan period\",\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.application_start)) {\n      return this.setFormError({\n        element: \"application_period_start\",\n        msg: \"Application period start date is required\",\n      });\n    } else if (\n      !this.isDateRangeValid(\n        \"APPLICATION\",\n        \"START\",\n        this.state.application_start\n      )\n    ) {\n      return false;\n    }\n\n    if (isEmptyOrSpaces(this.state.application_end)) {\n      return this.setFormError({\n        element: \"application_period_end\",\n        msg: \"Application period end date is required\",\n      });\n    } else if (\n      !this.isDateRangeValid(\"APPLICATION\", \"END\", this.state.application_end)\n    ) {\n      return true;\n    }\n\n    if (isEmptyOrSpaces(this.state.document_start)) {\n      return this.setFormError({\n        element: \"document_period_start\",\n        msg: \"Document validation period start date is required\",\n      });\n    } else if (\n      !this.isDateRangeValid(\"DOCUMENT\", \"START\", this.state.document_start)\n    ) {\n      return false;\n    }\n\n    if (isEmptyOrSpaces(this.state.document_end)) {\n      return this.setFormError({\n        element: \"document_period_end\",\n        msg: \"Document validation period end date is required\",\n      });\n    } else if (\n      !this.isDateRangeValid(\"DOCUMENT\", \"END\", this.state.document_end)\n    ) {\n      return true;\n    }\n\n    if (isEmptyOrSpaces(this.state.examination_start)) {\n      return this.setFormError({\n        element: \"examination_period_start\",\n        msg: \"Examination period start date is required\",\n      });\n    } else if (\n      !this.isDateRangeValid(\n        \"EXAMINATION\",\n        \"START\",\n        this.state.examination_start\n      )\n    ) {\n      return false;\n    }\n\n    if (isEmptyOrSpaces(this.state.examination_end)) {\n      return this.setFormError({\n        element: \"examination_period_end\",\n        msg: \"Examination period end date is required\",\n      });\n    } else if (\n      !this.isDateRangeValid(\"EXAMINATION\", \"END\", this.state.examination_end)\n    ) {\n      return true;\n    }\n\n    if (isEmptyOrSpaces(this.state.publication_start)) {\n      return this.setFormError({\n        element: \"publication_period_start\",\n        msg: \"Marks publication period start date is required\",\n      });\n    } else if (\n      !this.isDateRangeValid(\n        \"PUBLICATION\",\n        \"START\",\n        this.state.publication_start\n      )\n    ) {\n      return false;\n    }\n\n    if (isEmptyOrSpaces(this.state.publication_end)) {\n      return this.setFormError({\n        element: \"publication_period_end\",\n        msg: \"Marks publication period end date is required\",\n      });\n    } else if (\n      !this.isDateRangeValid(\"PUBLICATION\", \"END\", this.state.publication_end)\n    ) {\n      return true;\n    }\n\n    if (isEmptyOrSpaces(this.state.placement_start)) {\n      return this.setFormError({\n        element: \"placement_period_start\",\n        msg: \"Placement period start date is required\",\n      });\n    } else if (\n      !this.isDateRangeValid(\"PLACEMENT\", \"START\", this.state.placement_start)\n    ) {\n      return false;\n    }\n\n    if (isEmptyOrSpaces(this.state.placement_end)) {\n      return this.setFormError({\n        element: \"placement_period_end\",\n        msg: \"Placement period end date is required\",\n      });\n    } else if (\n      !this.isDateRangeValid(\"PLACEMENT\", \"END\", this.state.placement_end)\n    ) {\n      return true;\n    }\n\n    let createFormData: CreateSessionPlanInterface = {\n      session_plan_name: this.state.sessionTitle,\n      period: this.state.sessionPeriod,\n      plans: [\n        {\n          type_key: PlansTypeKeys.APPLICATION,\n          type_status: SessionPlanTypeStatus.OPEN,\n          start_date: this.state.application_start,\n          end_date: this.state.application_end,\n        },\n        {\n          type_key: PlansTypeKeys.DOCUMENT_VALIDATION,\n          type_status: SessionPlanTypeStatus.OPEN,\n          start_date: this.state.document_start,\n          end_date: this.state.document_end,\n        },\n        {\n          type_key: PlansTypeKeys.EXAMINATION,\n          type_status: SessionPlanTypeStatus.OPEN,\n          start_date: this.state.examination_start,\n          end_date: this.state.examination_end,\n        },\n        {\n          type_key: PlansTypeKeys.MARKS_PUBLICATION,\n          type_status: SessionPlanTypeStatus.OPEN,\n          start_date: this.state.publication_start,\n          end_date: this.state.publication_end,\n        },\n        {\n          type_key: PlansTypeKeys.PLACEMENT_TRANSFER,\n          type_status: SessionPlanTypeStatus.OPEN,\n          start_date: this.state.placement_start,\n          end_date: this.state.placement_end,\n        },\n      ],\n    };\n\n    console.log(\"====================================\");\n    console.log({ createFormData });\n    console.log(\"====================================\");\n\n    this.setState({\n      loadingRequest: this.state.thisSession\n        ? this.state.thisSession.session_plan_id\n        : \"true\",\n    });\n\n    try {\n      // Update current\n      if (this.state.thisSession !== null) {\n        const res = await axios.put<SessionPlanInterface>(\n          `${API.CLAIMING}/session/${this.state.thisSession.session_plan_id}`,\n          {\n            session_plan_name: this.state.sessionTitle,\n            period: this.state.sessionPeriod,\n            is_active: this.state.thisSession.is_active,\n            plans: [\n              {\n                type_key: PlansTypeKeys.APPLICATION,\n                start_date: this.state.application_start,\n                // type_status:this.state.thisSession.\n                end_date: this.state.application_end,\n              },\n              {\n                type_key: PlansTypeKeys.DOCUMENT_VALIDATION,\n                start_date: this.state.document_start,\n                // type_status:this.state.thisSession.\n                end_date: this.state.document_end,\n              },\n              {\n                type_key: PlansTypeKeys.EXAMINATION,\n                start_date: this.state.examination_start,\n                // type_status:this.state.thisSession.\n                end_date: this.state.examination_end,\n              },\n              {\n                type_key: PlansTypeKeys.MARKS_PUBLICATION,\n                start_date: this.state.publication_start,\n                end_date: this.state.publication_end,\n              },\n              {\n                type_key: PlansTypeKeys.PLACEMENT_TRANSFER,\n                start_date: this.state.placement_start,\n                // type_status:this.state.thisSession.\n                end_date: this.state.placement_end,\n              },\n            ],\n          }\n        );\n        this.props.updateSessionPlan(res.data);\n        this.props.PushPopupAlert({\n          title: `Session Plan updated successfully`,\n          theme: PopupAlertTheme.info,\n        });\n        this.setState({\n          formError: null,\n          sessionTitle: \"\",\n          sessionPeriod: \"\",\n          application_start: \"\",\n          application_end: \"\",\n          document_start: \"\",\n          document_end: \"\",\n          examination_start: \"\",\n          examination_end: \"\",\n          publication_start: \"\",\n          publication_end: \"\",\n          placement_start: \"\",\n          placement_end: \"\",\n          thisSession: null,\n          createSession: false,\n        });\n        console.log(\"updateSessionPlan: \", res);\n      } else {\n        // Add new\n        const res = await axios.post<SessionPlanInterface>(\n          `${API.CLAIMING}/session`,\n          createFormData\n        );\n        this.props.createSessionPlan(res.data);\n        this.props.PushPopupAlert({\n          title: `Session plan created successfully`,\n          theme: PopupAlertTheme.success,\n        });\n        this.setState({\n          formError: null,\n          sessionTitle: \"\",\n          sessionPeriod: \"\",\n          application_start: \"\",\n          application_end: \"\",\n          document_start: \"\",\n          document_end: \"\",\n          examination_start: \"\",\n          examination_end: \"\",\n          publication_start: \"\",\n          publication_end: \"\",\n          placement_start: \"\",\n          placement_end: \"\",\n          thisSession: null,\n          createSession: false,\n        });\n        console.log(\"createPlanType: \", res);\n      }\n    } catch (error) {\n      this.props.PushPopupAlert({\n        title: `${errorToText(error)}! Try again`,\n        theme: PopupAlertTheme.danger,\n      });\n      console.error(\"Err: \", { error });\n    }\n    this.setState({ loadingRequest: \"\" });\n  };\n\n  render() {\n    return (\n      <div className=\"my-2\">\n        {/* HEADER TITLE ===================================== */}\n        <div className=\"flex flex-row justify-between items-center bg-gray-100 py-1\">\n          {this.state.createSession && (\n            <div className=\"flex items-center gap-2\">\n              <button\n                className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                  this.state.loadingRequest.length > 0\n                    ? true\n                    : false\n                    ? \"cursor-not-allowed\"\n                    : \"cursor-pointer\"\n                } animate__animated animate__fadeIn`}\n                disabled={this.state.loadingRequest.length > 0 ? true : false}\n                onClick={() => {\n                  this.setState({\n                    formError: null,\n                    sessionTitle: \"\",\n                    sessionPeriod: \"\",\n                    thisSession: null,\n                    createSession: false,\n                    application_start: \"\",\n                    document_start: \"\",\n                    examination_start: \"\",\n                    publication_start: \"\",\n                    placement_start: \"\",\n                    application_end: \"\",\n                    document_end: \"\",\n                    examination_end: \"\",\n                    publication_end: \"\",\n                    placement_end: \"\",\n                  });\n                }}\n              >\n                <MdArrowBack className=\"w-7 h-7\" />\n              </button>\n\n              <div className=\"font-extrabold text-2xl text-gray-500\">\n                {this.state.thisSession !== null\n                  ? this.state.thisSession.session_plan_name\n                  : \"Add New Application Session Plan\"}\n              </div>\n            </div>\n          )}\n          {!this.state.createSession && (\n            <div className=\"text-blue-600 font-extrabold text-xl px-2\">\n              Application session plans\n            </div>\n          )}\n          {this.state.loading === false && !this.state.createSession && (\n            <div\n              onClick={() => this.setCreateSession(true)}\n              className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\"\n            >\n              Add new\n            </div>\n          )}\n        </div>\n        {/* END HEADER TITLE ===================================== */}\n        {/* ###################################################################### */}\n        {/* CONTENT ===================================== */}\n        {!this.state.createSession && (\n          <div className=\"flex flex-col my-2\">\n            <table className=\"w-full shadow\" id=\"session_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td className=\"px-2 py-2\">Session title</td>\n                  <td className=\"px-2 py-2\">Period</td>\n                  <td className=\"px-2 py-2\">Status</td>\n                  {this.state.viewThisSession && (\n                    <td className=\"px-2 py-2\"></td>\n                  )}\n                  <td className=\"px-2 py-2\"></td>\n                </tr>\n              </thead>\n              <tbody>\n                {/* WHILE STILL LOADING ====================== */}\n                {this.props.sessionPlan.allSessionPlans === null && (\n                  <TableLoading cols={5} />\n                )}\n                {/* WHILE NO DATA FOUND ====================== */}\n                {this.props.sessionPlan.allSessionPlans !== null &&\n                  !this.state.loading &&\n                  this.props.sessionPlan.allSessionPlans.length <= 0 && (\n                    <tr>\n                      <td colSpan={5} className=\"px-2 py-2\">\n                        <NoResult\n                          theme={NoResultThemes.Dark}\n                          value={\"No session plan found!\"}\n                          component={\n                            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                              <ul className=\"text-base py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                                <li\n                                  onClick={() => this.setCreateSession(true)}\n                                  className=\"underline text-blue-600 cursor-pointer\"\n                                >\n                                  Create new session\n                                </li>\n                              </ul>\n                            </div>\n                          }\n                        />\n                      </td>\n                    </tr>\n                  )}\n                {/* WHILE NO DATA FOUND ====================== */}\n                {this.props.sessionPlan.allSessionPlans !== null &&\n                  !this.state.loading &&\n                  this.props.sessionPlan.allSessionPlans.length > 0 &&\n                  this.props.sessionPlan.allSessionPlans.map((item, index) => (\n                    <Fragment key={index + item.session_plan_id}>\n                      <tr\n                        className={`border-b border-gray-200 hover:bg-gray-100 group cursor-pointer ${\n                          this.state.viewThisSession &&\n                          this.state.viewThisSession.session_plan_id ===\n                            item.session_plan_id &&\n                          \"border-blue-600 bg-blue-200\"\n                        }`}\n                        onClick={() => {\n                          this.state.loadingRequest.length <= 0 &&\n                            this.setViewThisSession(item);\n                        }}\n                      >\n                        <td className=\"p-3 text-left whitespace-nowrap\">\n                          {index + 1}\n                        </td>\n                        <td className=\"p-3 text-left\">\n                          <span className=\"text-lg\">\n                            {capitalizeFirstLetter(item.session_plan_name)}\n                          </span>\n                        </td>\n                        <td className=\"p-3 text-left\">{item.period}</td>\n                        <td>\n                          {item.is_active ? (\n                            <span\n                              className={`px-2 py-1 font-semibold text-green-700`}\n                            >\n                              Active\n                            </span>\n                          ) : (\n                            <span\n                              className={`px-2 py-1 font-semibold text-red-700`}\n                            >\n                              Inactive\n                            </span>\n                          )}\n                        </td>\n                        {this.state.viewThisSession &&\n                          this.state.viewThisSession.session_plan_id ===\n                            item.session_plan_id && (\n                            <td>\n                              <div className=\"flex items-center justify-center gap-1\">\n                                <div\n                                  className={`relative ${\n                                    this.state.loadingRequest.length > 0 ||\n                                    item.is_active\n                                      ? \"cursor-not-allowed\"\n                                      : \"cursor-pointer\"\n                                  }`}\n                                  title={\n                                    item.is_active\n                                      ? \"Activate another session to close this one!\"\n                                      : \"Activation of a session\"\n                                  }\n                                  onClick={() =>\n                                    this.state.loadingRequest.length <= 0 &&\n                                    !item.is_active &&\n                                    this.setActivateSession(item)\n                                  }\n                                >\n                                  <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                                  <span\n                                    className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                                      !item.is_active\n                                        ? \"bg-red-500\"\n                                        : \"bg-green-500 transform translate-x-full\"\n                                    }`}\n                                  ></span>\n                                </div>\n                                {this.state.loadingRequest ===\n                                  item.session_plan_id &&\n                                  this.state.doAction &&\n                                  this.state.doAction === \"ACTIVATED\" && (\n                                    <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                                  )}\n                              </div>\n                            </td>\n                          )}\n                        <td\n                          className=\"px-5 text-center\"\n                          colSpan={\n                            this.state.viewThisSession &&\n                            this.state.viewThisSession.session_plan_id !==\n                              item.session_plan_id\n                              ? 2\n                              : 0\n                          }\n                        >\n                          <div className=\"flex flex-row items-center gap-2 justify-end\">\n                            {this.state.viewThisSession &&\n                              this.state.viewThisSession.session_plan_id ===\n                                item.session_plan_id && (\n                                <div className=\"flex items-center gap-2\">\n                                  <div\n                                    onClick={() => {\n                                      this.state.loadingRequest.length <= 0 &&\n                                        this.setState({\n                                          thisSession: item,\n                                          createSession: true,\n                                          sessionTitle: item.session_plan_name,\n                                          sessionPeriod: item.period,\n                                        });\n                                      this.setPlansForUpdate(item.plans);\n                                    }}\n                                    className={`bg-gray-50 hover:bg-blue-200 rounded-full px-1 py-1 ${\n                                      this.state.loadingRequest.length > 0\n                                        ? \"cursor-not-allowed\"\n                                        : \"cursor-pointer\"\n                                    }`}\n                                  >\n                                    <MdEdit className=\"text-3xl text-blue-700\" />\n                                  </div>\n                                  {/* <div\n                                    // onClick={() => this.deletePlanType(item)}\n                                    className={`bg-gray-50 hover:bg-red-200 flex items-center rounded-full px-1 py-1 ${\n                                      this.state.loadingRequest.length > 0\n                                        ? \"cursor-not-allowed\"\n                                        : \"cursor-pointer\"\n                                    }`}\n                                  >\n                                    <IoMdTrash className=\"text-3xl text-yellow-700\" />\n                                    {this.state.loadingRequest ===\n                                      item.session_plan_id &&\n                                      this.state.doAction &&\n                                      this.state.doAction === \"DELETE\" && (\n                                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                                      )}\n                                  </div> */}\n                                </div>\n                              )}\n                            <div\n                              onClick={() => {\n                                this.state.loadingRequest.length <= 0 &&\n                                  this.setViewThisSession(item);\n                              }}\n                              className={`bg-gray-50 group-hover:bg-blue-200 rounded-full px-1 py-1 ${\n                                this.state.loadingRequest.length > 0\n                                  ? \"cursor-not-allowed\"\n                                  : \"cursor-pointer\"\n                              }`}\n                            >\n                              {this.state.viewThisSession &&\n                              this.state.viewThisSession.session_plan_id ===\n                                item.session_plan_id ? (\n                                <MdExpandLess className=\"text-3xl text-gray-700\" />\n                              ) : (\n                                <MdExpandMore className=\"text-3xl text-gray-700\" />\n                              )}\n                            </div>\n                          </div>\n                        </td>\n                      </tr>\n                      {this.state.viewThisSession &&\n                        this.state.viewThisSession.session_plan_id ===\n                          item.session_plan_id && (\n                          <tr className=\"bg-gray-200\">\n                            <td colSpan={6} className=\"px-3 py-2\">\n                              <SessionDetails\n                                viewThisSession={this.state.viewThisSession}\n                                setViewThisSession={this.setViewThisSession}\n                              />\n                            </td>\n                          </tr>\n                        )}\n                    </Fragment>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n        {/* END CONTENT ===================================== */}\n        {/* PLAN TYPES FORM =========================================== */}\n        {this.state.createSession && (\n          <section className=\"grid grid-cols-1 sm:grid-cols-4 gap-4\">\n            {/* TESTING ================== */}\n            {/* <FormSteps /> */}\n            <div className=\"col-span-1 sm:col-span-4 flex flex-col mx-4 my-6\">\n              <form onSubmit={this.handleSubmit} className=\"-mt-2\">\n                <div className=\"flex flex-col mb-2\">\n                  <span className=\"text-sm text-gray-600 font-bold mb-1\">\n                    Session title\n                  </span>\n                  <input\n                    disabled={\n                      this.state.loadingRequest.length > 0 ? true : false\n                    }\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      this.setSessionTitle(e.target.value);\n                      this.setFormError(null);\n                    }}\n                    type=\"text\"\n                    value={this.state.sessionTitle}\n                    className={`input-white border-2 ${\n                      this.state.formError !== null &&\n                      this.state.formError.element === \"title\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    }`}\n                  />\n                  {this.state.formError !== null &&\n                    this.state.formError.element === \"title\" && (\n                      <span className=\"text-red-600 font-bold text-xs\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                <div className=\"flex flex-col mb-2\">\n                  <span className=\"text-sm text-gray-600 font-bold mb-1\">\n                    Session period\n                  </span>\n                  <input\n                    disabled={\n                      this.state.loadingRequest.length > 0 ? true : false\n                    }\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      this.setSessionPeriod(e.target.value);\n                      this.setFormError(null);\n                    }}\n                    type=\"text\"\n                    value={this.state.sessionPeriod}\n                    className={`input-white border-2 ${\n                      this.state.formError !== null &&\n                      this.state.formError.element === \"period\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    }`}\n                  />\n                  {this.state.formError !== null &&\n                    this.state.formError.element === \"period\" && (\n                      <span className=\"text-red-600 font-bold text-xs\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                <div className=\"w-full mb-2\">\n                  <h6 className=\"text-blueGray-400 text-sm mt-3 mb-1 font-bold uppercase\">\n                    Application Session period\n                  </h6>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 my-1 gap-2\">\n                    <div className=\"w-full\">\n                      <span className=\"text-sm text-gray-600 font-bold mb-1\">\n                        Start\n                      </span>\n                      <input\n                        disabled={\n                          this.state.loadingRequest.length > 0 ? true : false\n                        }\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          this.setState({ application_start: e.target.value });\n                          this.setFormError(null);\n                          this.isDateRangeValid(\n                            \"APPLICATION\",\n                            \"START\",\n                            e.target.value\n                          );\n                        }}\n                        type=\"date\"\n                        value={this.state.application_start}\n                        min={this.state.thisSession ? \"\" : this.currentDate()}\n                        className={`input-white border-2 ${\n                          this.state.formError !== null &&\n                          this.state.formError.element ===\n                            \"application_period_start\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        }`}\n                      />\n                      {this.state.formError !== null &&\n                        this.state.formError.element ===\n                          \"application_period_start\" && (\n                          <span className=\"text-red-600 font-bold text-xs\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    <div className=\"w-full\">\n                      <span className=\"text-sm text-gray-600 font-bold mb-1\">\n                        End\n                      </span>\n                      <input\n                        disabled={\n                          this.state.loadingRequest.length > 0 ? true : false\n                        }\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          this.setState({ application_end: e.target.value });\n                          this.setFormError(null);\n                          this.isDateRangeValid(\n                            \"APPLICATION\",\n                            \"END\",\n                            e.target.value\n                          );\n                        }}\n                        type=\"date\"\n                        value={this.state.application_end}\n                        // min={this.state.application_start}\n                        className={`input-white border-2 ${\n                          this.state.formError !== null &&\n                          this.state.formError.element ===\n                            \"application_period_end\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        }`}\n                      />\n                      {this.state.formError !== null &&\n                        this.state.formError.element ===\n                          \"application_period_end\" && (\n                          <span className=\"text-red-600 font-bold text-xs\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"w-full mb-2\">\n                  <h6 className=\"text-blueGray-400 text-sm mt-3 mb-1 font-bold uppercase\">\n                    Document Validation Session period\n                  </h6>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 my-1 gap-2\">\n                    <div className=\"w-full\">\n                      <span className=\"text-sm text-gray-600 font-bold mb-1\">\n                        Start{\" \"}\n                        {this.state.formError !== null &&\n                          this.state.formError.element}\n                      </span>\n                      <input\n                        disabled={\n                          this.state.loadingRequest.length > 0 ? true : false\n                        }\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          this.setState({ document_start: e.target.value });\n                          this.setFormError(null);\n                          this.isDateRangeValid(\n                            \"DOCUMENT\",\n                            \"START\",\n                            e.target.value\n                          );\n                        }}\n                        type=\"date\"\n                        value={this.state.document_start}\n                        // min={this.state.application_end}\n                        className={`input-white border-2 ${\n                          this.state.formError !== null &&\n                          this.state.formError.element ===\n                            \"document_period_start\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        }`}\n                      />\n                      {this.state.formError !== null &&\n                        this.state.formError.element ===\n                          \"document_period_start\" && (\n                          <span className=\"text-red-600 font-bold text-xs\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    <div className=\"w-full\">\n                      <span className=\"text-sm text-gray-600 font-bold mb-1\">\n                        End\n                      </span>\n                      <input\n                        disabled={\n                          this.state.loadingRequest.length > 0 ? true : false\n                        }\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          this.setState({ document_end: e.target.value });\n                          this.setFormError(null);\n                          this.isDateRangeValid(\n                            \"DOCUMENT\",\n                            \"END\",\n                            e.target.value\n                          );\n                        }}\n                        type=\"date\"\n                        value={this.state.document_end}\n                        // min={this.state.document_start}\n                        className={`input-white border-2 ${\n                          this.state.formError !== null &&\n                          this.state.formError.element === \"document_period_end\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        }`}\n                      />\n                      {this.state.formError !== null &&\n                        this.state.formError.element ===\n                          \"document_period_end\" && (\n                          <span className=\"text-red-600 font-bold text-xs\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"w-full mb-2\">\n                  <h6 className=\"text-blueGray-400 text-sm mt-3 mb-1 font-bold uppercase\">\n                    Examination Session period\n                  </h6>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 my-1 gap-2\">\n                    <div className=\"w-full\">\n                      <span className=\"text-sm text-gray-600 font-bold mb-1\">\n                        Start\n                      </span>\n                      <input\n                        disabled={\n                          this.state.loadingRequest.length > 0 ? true : false\n                        }\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          this.setState({ examination_start: e.target.value });\n                          this.setFormError(null);\n                          this.isDateRangeValid(\n                            \"EXAMINATION\",\n                            \"START\",\n                            e.target.value\n                          );\n                        }}\n                        type=\"date\"\n                        value={this.state.examination_start}\n                        // min={this.state.document_end}\n                        className={`input-white border-2 ${\n                          this.state.formError !== null &&\n                          this.state.formError.element ===\n                            \"examination_period_start\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        }`}\n                      />\n                      {this.state.formError !== null &&\n                        this.state.formError.element ===\n                          \"examination_period_start\" && (\n                          <span className=\"text-red-600 font-bold text-xs\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    <div className=\"w-full\">\n                      <span className=\"text-sm text-gray-600 font-bold mb-1\">\n                        End\n                      </span>\n                      <input\n                        disabled={\n                          this.state.loadingRequest.length > 0 ? true : false\n                        }\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          this.setState({ examination_end: e.target.value });\n                          this.setFormError(null);\n                          this.isDateRangeValid(\n                            \"EXAMINATION\",\n                            \"END\",\n                            e.target.value\n                          );\n                        }}\n                        type=\"date\"\n                        value={this.state.examination_end}\n                        // min={this.state.examination_start}\n                        className={`input-white border-2 ${\n                          this.state.formError !== null &&\n                          this.state.formError.element ===\n                            \"examination_period_end\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        }`}\n                      />\n                      {this.state.formError !== null &&\n                        this.state.formError.element ===\n                          \"examination_period_end\" && (\n                          <span className=\"text-red-600 font-bold text-xs\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"w-full mb-2\">\n                  <h6 className=\"text-blueGray-400 text-sm mt-3 mb-1 font-bold uppercase\">\n                    Marks Publication Session period\n                  </h6>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 my-1 gap-2\">\n                    <div className=\"w-full\">\n                      <span className=\"text-sm text-gray-600 font-bold mb-1\">\n                        Start\n                      </span>\n                      <input\n                        disabled={\n                          this.state.loadingRequest.length > 0 ? true : false\n                        }\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          this.setState({ publication_start: e.target.value });\n                          this.setFormError(null);\n                          this.isDateRangeValid(\n                            \"PUBLICATION\",\n                            \"START\",\n                            e.target.value\n                          );\n                        }}\n                        type=\"date\"\n                        value={this.state.publication_start}\n                        // min={this.state.examination_end}\n                        className={`input-white border-2 ${\n                          this.state.formError !== null &&\n                          this.state.formError.element ===\n                            \"publication_period_start\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        }`}\n                      />\n                      {this.state.formError !== null &&\n                        this.state.formError.element ===\n                          \"publication_period_start\" && (\n                          <span className=\"text-red-600 font-bold text-xs\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    <div className=\"w-full\">\n                      <span className=\"text-sm text-gray-600 font-bold mb-1\">\n                        End\n                      </span>\n                      <input\n                        disabled={\n                          this.state.loadingRequest.length > 0 ? true : false\n                        }\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          this.setState({ publication_end: e.target.value });\n                          this.setFormError(null);\n                          this.isDateRangeValid(\n                            \"PUBLICATION\",\n                            \"END\",\n                            e.target.value\n                          );\n                        }}\n                        type=\"date\"\n                        value={this.state.publication_end}\n                        // min={this.state.publication_start}\n                        className={`input-white border-2 ${\n                          this.state.formError !== null &&\n                          this.state.formError.element ===\n                            \"publication_period_end\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        }`}\n                      />\n                      {this.state.formError !== null &&\n                        this.state.formError.element ===\n                          \"publication_period_end\" && (\n                          <span className=\"text-red-600 font-bold text-xs\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"w-full mb-2\">\n                  <h6 className=\"text-blueGray-400 text-sm mt-3 mb-1 font-bold uppercase\">\n                    Placement & Transfer Session period\n                  </h6>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 my-1 gap-2\">\n                    <div className=\"w-full\">\n                      <span className=\"text-sm text-gray-600 font-bold mb-1\">\n                        Start\n                      </span>\n                      <input\n                        disabled={\n                          this.state.loadingRequest.length > 0 ? true : false\n                        }\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          this.setState({ placement_start: e.target.value });\n                          this.setFormError(null);\n                          this.isDateRangeValid(\n                            \"PLACEMENT\",\n                            \"START\",\n                            e.target.value\n                          );\n                        }}\n                        type=\"date\"\n                        value={this.state.placement_start}\n                        // min={this.state.publication_end}\n                        className={`input-white border-2 ${\n                          this.state.formError !== null &&\n                          this.state.formError.element ===\n                            \"placement_period_start\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        }`}\n                      />\n                      {this.state.formError !== null &&\n                        this.state.formError.element ===\n                          \"placement_period_start\" && (\n                          <span className=\"text-red-600 font-bold text-xs\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    <div className=\"w-full\">\n                      <span className=\"text-sm text-gray-600 font-bold mb-1\">\n                        End\n                      </span>\n                      <input\n                        disabled={\n                          this.state.loadingRequest.length > 0 ? true : false\n                        }\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          this.setState({ placement_end: e.target.value });\n                          this.setFormError(null);\n                          this.isDateRangeValid(\n                            \"PLACEMENT\",\n                            \"END\",\n                            e.target.value\n                          );\n                        }}\n                        type=\"date\"\n                        value={this.state.placement_end}\n                        // min={this.state.placement_start}\n                        className={`input-white border-2 ${\n                          this.state.formError !== null &&\n                          this.state.formError.element ===\n                            \"placement_period_end\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        }`}\n                      />\n                      {this.state.formError !== null &&\n                        this.state.formError.element ===\n                          \"placement_period_end\" && (\n                          <span className=\"text-red-600 font-bold text-xs\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"flex flex-row justify-between items-center\">\n                  <button\n                    disabled={\n                      this.state.loadingRequest.length > 0 ? true : false\n                    }\n                    type=\"button\"\n                    className={`btn bg-gray-500 hover:bg-gray-700 text-white`}\n                    onClick={() => {\n                      this.setState({\n                        sessionTitle: this.state.thisSession\n                          ? this.state.thisSession.session_plan_name\n                          : \"\",\n                        sessionPeriod: this.state.thisSession\n                          ? this.state.thisSession.period\n                          : \"\",\n                        formError: null,\n                      });\n                      this.state.thisSession &&\n                        this.setPlansForUpdate(this.state.thisSession.plans);\n                      !this.state.thisSession &&\n                        this.setState({\n                          application_start: \"\",\n                          document_start: \"\",\n                          examination_start: \"\",\n                          publication_start: \"\",\n                          placement_start: \"\",\n                          application_end: \"\",\n                          document_end: \"\",\n                          examination_end: \"\",\n                          publication_end: \"\",\n                          placement_end: \"\",\n                        });\n                    }}\n                  >\n                    Cancel\n                  </button>\n\n                  <button\n                    disabled={\n                      this.state.loadingRequest.length > 0 ? true : false\n                    }\n                    type=\"submit\"\n                    className={`btn btn-blue text-white ${\n                      this.state.loadingRequest.length > 0\n                        ? \"animate__animated animate__flash animate__infinite cursor-wait\"\n                        : \"\"\n                    }`}\n                  >\n                    {this.state.loadingRequest.length > 0\n                      ? \"Please wait...\"\n                      : this.state.thisSession !== null\n                      ? \"Update\"\n                      : \"Create\"}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </section>\n        )}\n\n        {this.state.activateSession !== null && (\n          <ActionConfirm\n            modalType={ActionConfirmEnum.OTHER}\n            confirmFun={() =>\n              this.handleSessionActivation(this.state.activateSession!)\n            }\n            setModalAction={(status: boolean) =>\n              !status && this.setActivateSession(null)\n            }\n            description={\n              \"Do you really want to activate this session? This process will affect application processes!\"\n            }\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n}: StoreState): {\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n} => {\n  return {\n    auth,\n    sessionPlan,\n  };\n};\n\nexport default React.memo(connect(mapStateToProps, {\n  GetPlansTypes,\n  setSelectedPlanType,\n  GetAllSessionPlans,\n  createSessionPlan,\n  updateSessionPlan,\n  sessionActivation,\n  deleteSessionPlan,\n  PushPopupAlert,\n})(ApplicationSession));\n","import axios from \"axios\";\nimport React, { Component, Fragment } from \"react\";\nimport { MdArrowBack, MdEdit } from \"react-icons/md\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  GetPlansTypes,\n  setSelectedPlanType,\n  GetAllAcademicSession,\n  createAcademicSession,\n  updateAcademicSession,\n  deleteAcademicSession,\n  academicSessionActivation,\n} from \"../../../actions/session\";\nimport ActionConfirm, {\n  ActionConfirmEnum,\n} from \"../../../components/ActionConfirm/ActionConfirm\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport { AcademicSessionInterface } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/functions\";\n// import FormSteps from \"./FormSteps\";\n\ninterface AcademicSessionProps {\n  isCreateDefault: boolean;\n\n  //   REDUX ############################\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  GetPlansTypes: Function;\n  setSelectedPlanType: Function;\n  GetAllAcademicSession: Function;\n  createAcademicSession: Function;\n  updateAcademicSession: Function;\n  academicSessionActivation: Function;\n  deleteAcademicSession: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AcademicSessionState {\n  loading: boolean;\n  createSession: boolean;\n  loadingRequest: string;\n  activateSession: AcademicSessionInterface | null;\n  thisSession: AcademicSessionInterface | null;\n  doAction: \"ACTIVATED\" | \"EDIT\" | \"DELETE\" | null;\n  sessionTitle: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  // currentTab: \"ACTIVE\" | \"DELETED\";\n}\n\nexport class AcademicSession extends Component<\n  AcademicSessionProps,\n  AcademicSessionState\n> {\n  constructor(props: AcademicSessionProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingRequest: \"\",\n      createSession: false,\n      activateSession: null,\n      thisSession: null,\n      doAction: null,\n      sessionTitle: \"\",\n      formError: null,\n      // currentTab: \"ACTIVE\",\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setCreateSession = (state: boolean) => {\n    this.setState({ createSession: state });\n  };\n\n  setSessionTitle = (data: string) => {\n    this.setState({ sessionTitle: data });\n  };\n\n  setActivateSession = (data: AcademicSessionInterface | null) => {\n    this.setState({ activateSession: data });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.sessionPlan.academicSessions === null ||\n      this.props.sessionPlan.academicSessions.length <= 0\n    ) {\n      this.props.GetAllAcademicSession((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status && msg.length > 0) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else this.setLoading(false);\n\n    if (!this.state.createSession) {\n      this.setCreateSession(this.props.isCreateDefault);\n    }\n  };\n\n  handleSessionActivation = async (session: AcademicSessionInterface) => {\n    const newState: \"activate\" | \"deactivate\" = session.is_active\n      ? \"deactivate\"\n      : \"activate\";\n\n    this.setState({ loadingRequest: session._id });\n\n    try {\n      const res = await axios.patch<AcademicSessionInterface>(\n        `${API.PLACEMENT}/postrequestperiod/openorclose/${session._id}`,\n        {\n          value: !session.is_active,\n        }\n      );\n      // this.props.academicSessionActivation(res.data);\n      this.props.GetAllAcademicSession((status: boolean, msg: string) => {\n        // this.setLoading(status);\n        if (!status && msg.length > 0) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n      this.props.PushPopupAlert({\n        title: `Session ${newState}d successfully`,\n        theme: PopupAlertTheme.info,\n      });\n      console.log(\"updateAcademicSession: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    this.setState({ loadingRequest: \"\" });\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // validation\n    if (isEmptyOrSpaces(this.state.sessionTitle)) {\n      return this.setFormError({\n        element: \"title\",\n        msg: \"Please fill the session plan title\",\n      });\n    }\n\n    console.log(\"====================================\");\n    console.log({ title: this.state.sessionTitle });\n    console.log(\"====================================\");\n\n    this.setState({\n      loadingRequest: this.state.thisSession\n        ? this.state.thisSession._id\n        : \"true\",\n    });\n\n    try {\n      // Update current\n      if (this.state.thisSession !== null) {\n        const res = await axios.patch<{\n          msg: string;\n          data: AcademicSessionInterface;\n        }>(`${API.PLACEMENT}/postrequestperiod/${this.state.thisSession._id}`, {\n          title: this.state.sessionTitle,\n          // is_active: this.state.thisSession.is_active,\n        });\n        console.log(\"====================================\");\n        console.log({ updateAcademicSession: res });\n        console.log(\"====================================\");\n        this.props.updateAcademicSession(res.data.data);\n        this.props.PushPopupAlert({\n          title: `Academic session updated successfully`,\n          theme: PopupAlertTheme.info,\n        });\n        this.setState({\n          formError: null,\n          sessionTitle: \"\",\n          thisSession: null,\n          createSession: false,\n        });\n        console.log(\"updateAcademicSession: \", res);\n      } else {\n        // Add new\n        const res = await axios.post<any>(\n          `${API.PLACEMENT}/postrequestperiod`,\n          {\n            title: this.state.sessionTitle,\n          }\n        );\n        this.props.createAcademicSession(res.data);\n        this.props.PushPopupAlert({\n          title: `Academic session created successfully`,\n          theme: PopupAlertTheme.success,\n        });\n        this.setState({\n          formError: null,\n          sessionTitle: \"\",\n        });\n        console.log(\"createAcademicSessionType: \", res);\n      }\n    } catch (error) {\n      this.props.PushPopupAlert({\n        title: `${errorToText(error)}! Try again`,\n        theme: PopupAlertTheme.danger,\n      });\n      console.error(\"Err: \", { error });\n    }\n    this.setState({ loadingRequest: \"\" });\n  };\n\n  render() {\n    return (\n      <div className=\"my-2\">\n        {/* HEADER TITLE ===================================== */}\n        <div className=\"flex flex-row justify-between items-center bg-gray-100 py-1\">\n          {this.state.createSession && (\n            <div className=\"flex items-center gap-2\">\n              <button\n                className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                  this.state.loadingRequest.length > 0\n                    ? true\n                    : false\n                    ? \"cursor-not-allowed\"\n                    : \"cursor-pointer\"\n                } animate__animated animate__fadeIn`}\n                disabled={this.state.loadingRequest.length > 0 ? true : false}\n                onClick={() => {\n                  this.setState({\n                    formError: null,\n                    sessionTitle: \"\",\n                    thisSession: null,\n                    createSession: false,\n                  });\n                }}\n              >\n                <MdArrowBack className=\"w-7 h-7\" />\n              </button>\n\n              <div className=\"font-extrabold text-2xl text-gray-500\">\n                {this.state.thisSession !== null\n                  ? `Updating ${this.state.thisSession.title} Session`\n                  : \"Add New Academic Session\"}\n              </div>\n            </div>\n          )}\n          {!this.state.createSession && (\n            <div className=\"text-blue-600 font-extrabold text-xl px-2\">\n              Academic Sessions\n            </div>\n          )}\n          {this.state.loading === false && !this.state.createSession && (\n            <div\n              onClick={() => this.setCreateSession(true)}\n              className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\"\n            >\n              Add new\n            </div>\n          )}\n        </div>\n        {/* END HEADER TITLE ===================================== */}\n        {/* ###################################################################### */}\n        {/* CONTENT ===================================== */}\n        {!this.state.createSession && (\n          <div className=\"flex flex-col my-2\">\n            <table className=\"w-full shadow\" id=\"session_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td className=\"px-2 py-2\">Session title</td>\n                  <td className=\"px-2 py-2\">Status</td>\n                  <td className=\"px-2 py-2\"></td>\n                </tr>\n              </thead>\n              <tbody>\n                {/* WHILE STILL LOADING ====================== */}\n                {this.props.sessionPlan.academicSessions === null && (\n                  <TableLoading cols={4} />\n                )}\n                {/* WHILE NO DATA FOUND ====================== */}\n                {this.props.sessionPlan.academicSessions !== null &&\n                  !this.state.loading &&\n                  this.props.sessionPlan.academicSessions.length <= 0 && (\n                    <tr>\n                      <td colSpan={4} className=\"px-2 py-2\">\n                        <NoResult\n                          theme={NoResultThemes.Dark}\n                          value={\"No academic session found!\"}\n                          component={\n                            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                              <ul className=\"text-base py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                                <li\n                                  onClick={() => this.setCreateSession(true)}\n                                  className=\"underline text-blue-600 cursor-pointer\"\n                                >\n                                  Create new session\n                                </li>\n                              </ul>\n                            </div>\n                          }\n                        />\n                      </td>\n                    </tr>\n                  )}\n                {/* WHILE NO DATA FOUND ====================== */}\n                {this.props.sessionPlan.academicSessions !== null &&\n                  !this.state.loading &&\n                  this.props.sessionPlan.academicSessions.length > 0 &&\n                  this.props.sessionPlan.academicSessions.map((item, index) => (\n                    <Fragment key={index + item._id}>\n                      <tr\n                        className={`border-b border-gray-200 hover:bg-gray-100 group`}\n                      >\n                        <td className=\"p-3 text-left whitespace-nowrap\">\n                          {index + 1}\n                        </td>\n                        <td className=\"p-3 text-left\">\n                          <span className=\"text-lg\">\n                            {capitalizeFirstLetter(item.title)}\n                          </span>\n                        </td>\n                        <td>\n                          {item.is_active ? (\n                            <span\n                              className={`px-2 py-1 font-semibold text-green-700`}\n                            >\n                              Active\n                            </span>\n                          ) : (\n                            <span\n                              className={`px-2 py-1 font-semibold text-red-700`}\n                            >\n                              Inactive\n                            </span>\n                          )}\n                        </td>\n                        <td>\n                          <div className=\"flex items-center justify-center gap-1\">\n                            <div\n                              className={`relative ${\n                                this.state.loadingRequest.length > 0 ||\n                                item.is_active\n                                  ? \"cursor-not-allowed\"\n                                  : \"cursor-pointer\"\n                              }`}\n                              title={\n                                item.is_active\n                                  ? \"Activate another session to close this one!\"\n                                  : \"Activation of a session\"\n                              }\n                              onClick={() =>\n                                this.state.loadingRequest.length <= 0 &&\n                                !item.is_active &&\n                                this.setActivateSession(item)\n                              }\n                            >\n                              <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                              <span\n                                className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                                  !item.is_active\n                                    ? \"bg-red-500\"\n                                    : \"bg-green-500 transform translate-x-full\"\n                                }`}\n                              ></span>\n                            </div>\n                            {this.state.loadingRequest === item._id &&\n                              this.state.doAction &&\n                              this.state.doAction === \"ACTIVATED\" && (\n                                <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                              )}\n                          </div>\n                        </td>\n                        <td className=\"px-5 text-center\">\n                          <div className=\"flex flex-row items-center gap-2 justify-end\">\n                            <div\n                              onClick={() => {\n                                this.state.loadingRequest.length <= 0 &&\n                                  this.setState({\n                                    thisSession: item,\n                                    createSession: true,\n                                    sessionTitle: item.title,\n                                  });\n                              }}\n                              className={`bg-gray-50 group-hover:bg-blue-200 rounded-full px-1 py-1 ${\n                                this.state.loadingRequest.length > 0\n                                  ? \"cursor-not-allowed\"\n                                  : \"cursor-pointer\"\n                              }`}\n                            >\n                              <MdEdit className=\"text-3xl text-blue-700\" />\n                            </div>\n                            {/* <div\n                                    // onClick={() => this.deletePlanType(item)}\n                                    className={`bg-gray-50 group-hover:bg-red-200 flex items-center rounded-full px-1 py-1 ${\n                                      this.state.loadingRequest.length > 0\n                                        ? \"cursor-not-allowed\"\n                                        : \"cursor-pointer\"\n                                    }`}\n                                  >\n                                    <IoMdTrash className=\"text-3xl text-yellow-700\" />\n                                    {this.state.loadingRequest ===\n                                      item._id &&\n                                      this.state.doAction &&\n                                      this.state.doAction === \"DELETE\" && (\n                                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                                      )}\n                                  </div> */}\n                          </div>\n                        </td>\n                      </tr>\n                    </Fragment>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n        {/* END CONTENT ===================================== */}\n        {/* PLAN TYPES FORM =========================================== */}\n        {this.state.createSession && (\n          <section className=\"grid grid-cols-1 sm:grid-cols-4 gap-4\">\n            {/* TESTING ================== */}\n            {/* <FormSteps /> */}\n            <div className=\"col-span-1 sm:col-span-4 flex flex-col mx-4 my-6\">\n              <form onSubmit={this.handleSubmit} className=\"-mt-2\">\n                <div className=\"flex flex-col mb-2\">\n                  <span className=\"text-sm text-gray-600 font-bold mb-1\">\n                    Session title\n                  </span>\n                  <input\n                    disabled={\n                      this.state.loadingRequest.length > 0 ? true : false\n                    }\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      this.setSessionTitle(e.target.value);\n                      this.setFormError(null);\n                    }}\n                    type=\"text\"\n                    value={this.state.sessionTitle}\n                    className={`input-white border-2 ${\n                      this.state.formError !== null &&\n                      this.state.formError.element === \"title\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    }`}\n                  />\n                  {this.state.formError !== null &&\n                    this.state.formError.element === \"title\" && (\n                      <span className=\"text-red-600 font-bold text-xs\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n\n                <div className=\"flex flex-row justify-between items-center\">\n                  <button\n                    disabled={\n                      this.state.loadingRequest.length > 0 ? true : false\n                    }\n                    type=\"button\"\n                    className={`btn bg-gray-500 hover:bg-gray-700 text-white`}\n                    onClick={() => {\n                      this.setState({\n                        formError: null,\n                        sessionTitle: this.state.thisSession\n                          ? this.state.thisSession.title\n                          : \"\",\n                      });\n                    }}\n                  >\n                    Cancel\n                  </button>\n\n                  <button\n                    disabled={\n                      this.state.loadingRequest.length > 0 ? true : false\n                    }\n                    type=\"submit\"\n                    className={`btn btn-blue text-white ${\n                      this.state.loadingRequest.length > 0\n                        ? \"animate__animated animate__flash animate__infinite cursor-wait\"\n                        : \"\"\n                    }`}\n                  >\n                    {this.state.loadingRequest.length > 0\n                      ? \"Please wait...\"\n                      : this.state.thisSession !== null\n                      ? \"Update\"\n                      : \"Create\"}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </section>\n        )}\n\n        {this.state.activateSession !== null && (\n          <ActionConfirm\n            modalType={ActionConfirmEnum.OTHER}\n            confirmFun={() =>\n              this.handleSessionActivation(this.state.activateSession!)\n            }\n            setModalAction={(status: boolean) =>\n              !status && this.setActivateSession(null)\n            }\n            description={\n              \"Do you really want to activate this session? This process will affect post requests!\"\n            }\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n}: StoreState): {\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n} => {\n  return {\n    auth,\n    sessionPlan,\n  };\n};\n\nexport default React.memo(connect(mapStateToProps, {\n  GetPlansTypes,\n  setSelectedPlanType,\n  GetAllAcademicSession,\n  createAcademicSession,\n  updateAcademicSession,\n  academicSessionActivation,\n  deleteAcademicSession,\n  PushPopupAlert,\n})(AcademicSession));\n","import { education_category } from \"../interfaces\";\nimport { PositionAPI } from \"../interfaces/position\";\nimport {\n  CustomeAccessInterface,\n  PostSchoolInterface,\n  RoleToUserInterface,\n  SchoolInfoInterface,\n  SystemUserRoleInterface,\n} from \"./interfaces\";\n\nexport const data_posts_school: PostSchoolInterface[] = [];\n\nexport const isEmptyOrSpaces = (str: string): boolean => {\n  return str === null || str.match(/^ *$/) !== null;\n};\n\nexport const getUserTitle = (\n  accessRoles: SystemUserRoleInterface[],\n  roleId: string\n): string => {\n  const result = accessRoles.find((e) => e.system_user_role_id === roleId);\n  return result ? result.role : \"\";\n};\n\nexport const getRoleById = (\n  roles: SystemUserRoleInterface[],\n  roleId: string\n): SystemUserRoleInterface => {\n  return roles.filter((role) => role.system_user_role_id === roleId)[0];\n};\n\nexport const getInstituteById = (\n  institutes: education_category[],\n  instituteId: string\n): education_category | undefined => {\n  return institutes.find((item) => item.education_institute_id === instituteId);\n};\n\nexport const getPositionById_old = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI => {\n  console.log({\n    positions,\n    position_id,\n    data: positions.filter(\n      (position) => position.position_id === position_id\n    )[0],\n  });\n  return positions.filter(\n    (position) => position.position_id === position_id\n  )[0];\n};\n\nexport const getPositionById = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI | undefined => {\n  return positions.find((position) => position.position_id === position_id);\n};\n\nexport const getSchoolById = (\n  schools: SchoolInfoInterface[],\n  school_id: string\n): SchoolInfoInterface => {\n  return schools.filter((school) => school.school_id === school_id)[0];\n};\n\nexport const getPostById = (\n  posts: PostSchoolInterface[],\n  post_id: string\n): PostSchoolInterface => {\n  return posts.filter((post) => post.school_id === post_id)[0];\n};\n\nexport const getPostsBySchoolId = (\n  posts: PostSchoolInterface[],\n  school_id: string\n): PostSchoolInterface[] => {\n  return posts.filter((post) => post.school_id === school_id);\n};\n\nexport const getPostsByIds = (\n  posts: PostSchoolInterface[],\n  school_id: string,\n  position_id: string\n): PostSchoolInterface[] => {\n  return posts.filter(\n    (post) => post.school_id === school_id && post.position_id === position_id\n  );\n};\n\nexport const displayDate = (dateToDisplay: Date): string => {\n  return new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\",\n  }).format(dateToDisplay);\n};\n\nexport const userAccess = (\n  defaultAccess: RoleToUserInterface,\n  customAccess: CustomeAccessInterface\n): RoleToUserInterface => {\n  // const data = defaultAccess.access.map((default,index,customAccess)=>{\n  //   let data_custom = customAccess\n  //   if\n  // })\n  // return customAccess.filter((custom) => custom.id === accecc_id)[0];\n  return defaultAccess;\n};\n\n// export const groupBy = (list: [], keyGetter: Function) => {\n//   const map = new Map();\n//   list.forEach((item) => {\n//     const key = keyGetter(item);\n//     const collection = map.get(key);\n//     if (!collection) {\n//       map.set(key, [item]);\n//     } else {\n//       collection.push(item);\n//     }\n//   });\n//   return map;\n// };\n\nexport const toTwoDigit = (value: number): string => {\n  var dec = value - Math.floor(value);\n  value = value - dec;\n  return (\"0\" + value).slice(-2) + dec.toString().substr(1);\n};\n\nexport const toAnyDigit = (\n  value: string | number,\n  padding: number = 3\n): string => {\n  var zeroes = new Array(padding + 1).join(\"0\");\n  return (zeroes + value).slice(-padding);\n};\n\nexport const capitalizeFirstLetter = (value: string): string => {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n};\n\nexport const isDateExpiried = (paramDate: string) => {\n  const thisDate = new Date(paramDate);\n  const today = new Date();\n  if (thisDate.getTime() < today.getTime()) {\n    return true;\n  }\n\n  return false;\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport {\n  AcademicSessionInterface,\n  PlansTypeInterface,\n  SessionPlanInterface,\n} from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\n// GET ALL ACADEMIC SESSION\nexport interface GetAllAcademicSessionAction {\n  type: ActionTypes.GET_ALL_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface[];\n}\n\n// CREATE ACADEMIC SESSION\nexport interface CreateAcademicSessionAction {\n  type: ActionTypes.CREATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// UPDATE ACADEMIC SESSION\nexport interface UpdateAcademicSessionAction {\n  type: ActionTypes.UPDATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// ACTIVATE ACADEMIC SESSION\nexport interface ActivateAcademicSessionAction {\n  type: ActionTypes.ACADEMIC_SESSION_ACTIVATION;\n  payload: AcademicSessionInterface;\n}\n\n// DELETE ACADEMIC SESSION\nexport interface DeleteAcademicSessionAction {\n  type: ActionTypes.DELETE_ACADEMIC_SESSION;\n  payload: string;\n}\n\n// GET ACTIVE ACADEMIC SESSION\nexport interface GetActiveAcademicSessionAction {\n  type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface | \"none\";\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions\n  | GetAllAcademicSessionAction\n  | CreateAcademicSessionAction\n  | UpdateAcademicSessionAction\n  | ActivateAcademicSessionAction\n  | DeleteAcademicSessionAction\n  | GetActiveAcademicSessionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// CREATE ACADEMIC SESSION\nexport const createAcademicSession = (\n  data: AcademicSessionInterface\n): CreateAcademicSessionAction => {\n  return {\n    type: ActionTypes.CREATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ALL ACADEMIC SESSION ==========================\nexport const GetAllAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface[]>(\n        `${API.PLACEMENT}/postrequestperiod/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: AcademicSessionInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      console.log(\"====================================\");\n      console.log({ GetAllAcademicSession: res });\n      console.log(\"====================================\");\n      dispatch<GetAllAcademicSessionAction>({\n        type: ActionTypes.GET_ALL_ACADEMIC_SESSION,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// UPDATE ACADEMIC SESSION\nexport const updateAcademicSession = (\n  data: AcademicSessionInterface\n): UpdateAcademicSessionAction => {\n  return {\n    type: ActionTypes.UPDATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// ACTIVATE ACADEMIC SESSION\nexport const academicSessionActivation = (\n  data: AcademicSessionInterface\n): ActivateAcademicSessionAction => {\n  return {\n    type: ActionTypes.ACADEMIC_SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE ACADEMIC SESSION\nexport const deleteAcademicSession = (\n  data: string\n): DeleteAcademicSessionAction => {\n  return {\n    type: ActionTypes.DELETE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface>(\n        `${API.PLACEMENT}/postrequestperiod/one`\n      );\n      console.log({ GET_ACTIVE_ACADEMIC_SESSION: res.data });\n      let session_plan: AcademicSessionInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveAcademicSessionAction>({\n        type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import { FiAlertCircle } from \"react-icons/fi\";\nimport { GoAlert } from \"react-icons/go\";\nimport { MdDeleteForever, MdRestoreFromTrash } from \"react-icons/md\";\n\nexport enum ActionConfirmEnum {\n  RESTORE_DELETE = \"restore_delete\",\n  DELETE = \"delete\",\n  INFO = \"info\",\n  OTHER = \"other\",\n}\n\ninterface ActionConfirmProps {\n  confirmFun: Function;\n  setModalAction: (value: boolean) => void;\n  description: string;\n  modalType: ActionConfirmEnum;\n}\n\nconst ActionConfirm: React.FC<ActionConfirmProps> = (props) => {\n  return (\n    <div\n      className=\"min-w-screen h-screen animated fadeIn faster  fixed  left-0 top-0 flex justify-center items-center inset-0 z-50 outline-none focus:outline-none bg-no-repeat bg-center bg-cover\"\n      id=\"modal-id\"\n    >\n      <div className=\"absolute bg-black opacity-80 inset-0 z-0\"></div>\n      <div className=\"w-full  max-w-lg p-5 relative mx-auto my-auto rounded-xl shadow-lg bg-white animate__animated animate__zoomIn animate__faster\">\n        {/* <!--content--> */}\n        <div className=\"\">\n          {/* <!--body--> */}\n          <div className=\"text-center p-5 flex-auto justify-center\">\n            {props.modalType === ActionConfirmEnum.DELETE ||\n              (props.modalType === ActionConfirmEnum.RESTORE_DELETE && (\n                <FiAlertCircle className=\"w-4 h-4 -m-1 flex items-center text-red-500 mx-auto\" />\n              ))}\n            {props.modalType === ActionConfirmEnum.DELETE ? (\n              <MdDeleteForever className=\"w-16 h-16 flex items-center text-red-500 mx-auto\" />\n            ) : props.modalType === ActionConfirmEnum.RESTORE_DELETE ? (\n              <MdRestoreFromTrash className=\"w-16 h-16 flex items-center text-yellow-800 mx-auto\" />\n            ) : props.modalType === ActionConfirmEnum.INFO ? (\n              <GoAlert className=\"w-16 h-16 flex items-center text-blue-500 mx-auto\" />\n            ) : (\n              <GoAlert className=\"w-16 h-16 flex items-center text-yellow-500 mx-auto\" />\n            )}\n            <h2 className=\"text-xl font-bold py-4 \">Are you sure?</h2>\n            <p className=\"text-sm text-gray-500 px-8\">{props.description}</p>\n          </div>\n          {/* <!--footer--> */}\n          <div className=\"p-3  mt-2 text-center space-x-4 md:block\">\n            <button\n              className=\"mb-2 md:mb-0 bg-white px-5 py-2 text-sm shadow-sm font-medium tracking-wider border text-gray-600 rounded-full hover:shadow-lg hover:bg-gray-100\"\n              onClick={() => props.setModalAction(false)}\n            >\n              Cancel\n            </button>\n            <button\n              className={`mb-2 md:mb-0 border px-5 py-2 text-sm shadow-sm font-medium tracking-wider text-white rounded-full hover:shadow-lg ${\n                props.modalType === ActionConfirmEnum.DELETE\n                  ? \"border-red-500 hover:bg-red-600 bg-red-500\"\n                  : props.modalType === ActionConfirmEnum.RESTORE_DELETE\n                  ? \"border-yellow-700 hover:bg-yellow-800 bg-yellow-700\"\n                  : props.modalType === ActionConfirmEnum.INFO\n                  ? \"border-blue-500 hover:bg-blue-600 bg-blue-500\"\n                  : \"border-yellow-500 hover:bg-yellow-600 bg-yellow-500\"\n              }`}\n              onClick={() => {\n                props.confirmFun();\n                props.setModalAction(false);\n              }}\n            >\n              Confirm\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ActionConfirm;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { updateSessionPlan } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  allPlanTypes,\n  PlansInterface,\n  PlansTypeInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { DATE, errorToText } from \"../../../utils/functions\";\n\nexport const isActivationAllowed = (thisPlans: PlansInterface): boolean => {\n  let today: Date = new Date(),\n    end_date = new Date(thisPlans.end_date);\n  if (end_date.getTime() >= today.getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport const getPlanTypeByKey = (\n  type_key: PlansTypeKeys\n): PlansTypeInterface | undefined => {\n  return allPlanTypes.find((item) => item.type_key === type_key);\n};\n\nexport const isPlanActive = (\n  viewThisSession: SessionPlanInterface,\n  thisPlan: PlansInterface\n): \"OPEN\" | \"CLOSED\" | \"WAITING\" => {\n  if (viewThisSession.is_active) {\n    let today = new Date(),\n      planEndDate = new Date(thisPlan.end_date),\n      planStartDate = new Date(thisPlan.start_date);\n    if (\n      planEndDate.getTime() >= today.getTime() &&\n      planStartDate.getTime() <= today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"OPEN\";\n    } else if (\n      planStartDate.getTime() > today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"WAITING\";\n    }\n  }\n  return \"CLOSED\";\n};\n\ntype SessionDetailsProps = {\n  viewThisSession: SessionPlanInterface;\n  setViewThisSession: (data: SessionPlanInterface) => void;\n\n  // REDUX ----------------\n  updateSessionPlan: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype SessionDetailsState = {\n  loadingRequest: string;\n};\n\nexport class SessionDetails extends Component<\n  SessionDetailsProps,\n  SessionDetailsState\n> {\n  constructor(props: SessionDetailsProps) {\n    super(props);\n\n    this.state = {\n      loadingRequest: \"\",\n    };\n  }\n\n  handlePlanActivation = async (\n    session: SessionPlanInterface,\n    thisPlan: PlansInterface\n  ) => {\n    const newState: \"open\" | \"close\" = session.is_active ? \"close\" : \"open\";\n\n    if (!window.confirm(`Are you sure you want to ${newState} this plan?`)) {\n      return true;\n    }\n\n    if (!isActivationAllowed(thisPlan)) {\n      this.props.PushPopupAlert({\n        title: `Opening/Closing plan which has been expired is not allowed!`,\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    let newData: SessionPlanInterface = {\n      session_plan_name: session.session_plan_name,\n      period: session.period,\n      is_active: session.is_active,\n      plans: [],\n      createdAt: session.createdAt,\n      updatedAt: session.updatedAt,\n      session_plan_id: session.session_plan_id,\n    };\n    for (const key in session.plans) {\n      if (Object.prototype.hasOwnProperty.call(session.plans, key)) {\n        const element = session.plans[key];\n        if (thisPlan.type_key === element.type_key) {\n          if (thisPlan.type_status === SessionPlanTypeStatus.OPEN) {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.CLOSED,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          } else {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.OPEN,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          }\n        } else {\n          newData.plans.push(element);\n        }\n      }\n    }\n\n    console.log(\"====================================\");\n    console.log({ newData });\n    console.log(\"====================================\");\n\n    this.setState({ loadingRequest: thisPlan.type_key });\n    try {\n      const res = await axios.put<SessionPlanInterface>(\n        `${API.CLAIMING}/session/${session.session_plan_id}`,\n        newData\n      );\n      this.props.updateSessionPlan(res.data);\n      this.props.setViewThisSession(res.data);\n      this.props.PushPopupAlert({\n        title: `Session ${newState}d successfully`,\n        theme: PopupAlertTheme.info,\n      });\n      this.setState({ loadingRequest: \"\" });\n      console.log(\"updateSessionPlan: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.warning,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <table className=\"w-full bg-white shadow p-5\" id=\"session_content\">\n        <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n          <tr>\n            <td className=\"p-2\">#</td>\n            <td className=\"p-2\">Plan Type</td>\n            <td className=\"p-2\">Start Date</td>\n            <td className=\"p-2\">End date</td>\n            {this.props.viewThisSession.is_active && (\n              <td className=\"p-2\" colSpan={2}>\n                Status\n              </td>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {/* WHILE DATA FOUND ====================== */}\n          {this.props.viewThisSession.plans.map((item, index) => (\n            <tr\n              key={index + item._id}\n              className={`border-b border-gray-200 hover:bg-gray-100`}\n            >\n              <td className=\"p-2 text-left whitespace-nowrap\">{index + 1}</td>\n              <td className=\"p-2 text-left\">\n                <span className=\"text-lg\">\n                  {getPlanTypeByKey(item.type_key) &&\n                    capitalizeFirstLetter(\n                      getPlanTypeByKey(item.type_key)!.type_title\n                    )}\n                </span>\n              </td>\n              <td className=\"p-2 text-left\">{DATE(item.start_date)}</td>\n              <td className=\"p-2 text-left\">{DATE(item.end_date)}</td>\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isPlanActive(this.props.viewThisSession, item) === \"OPEN\" ? (\n                    <span className={`px-2 py-1 font-semibold text-green-700`}>\n                      Open\n                    </span>\n                  ) : isPlanActive(this.props.viewThisSession, item) ===\n                    \"WAITING\" ? (\n                    <span className={`px-2 py-1 font-semibold text-gray-700`}>\n                      Waiting\n                    </span>\n                  ) : (\n                    <span className={`px-2 py-1 font-semibold text-red-700`}>\n                      Closed\n                    </span>\n                  )}\n                </td>\n              )}\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isActivationAllowed(item) && (\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <div\n                        className={`relative ${\n                          this.state.loadingRequest.length > 0\n                            ? \"cursor-not-allowed\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title={\n                          item.type_status === SessionPlanTypeStatus.OPEN\n                            ? \"Deactivating session\"\n                            : \"Activating session\"\n                        }\n                        onClick={() =>\n                          this.state.loadingRequest.length <= 0 &&\n                          this.handlePlanActivation(\n                            this.props.viewThisSession,\n                            item\n                          )\n                        }\n                      >\n                        <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                        <span\n                          className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                            item.type_status === SessionPlanTypeStatus.CLOSED\n                              ? \"bg-red-500\"\n                              : \"bg-green-500 transform translate-x-full\"\n                          }`}\n                        ></span>\n                      </div>\n                      {this.state.loadingRequest === item.type_key && (\n                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                      )}\n                    </div>\n                  )}\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default React.memo(connect(null, {\n  updateSessionPlan,\n  PushPopupAlert,\n})(SessionDetails));\n"],"sourceRoot":""}
{"version":3,"sources":["components/Modal/Modal.tsx","components/Table/Table.tsx","components/Navigation/SideNavigation.tsx","containers/AccessManagement/AccessRole.tsx","containers/AccessManagement/StepOne.tsx","containers/AccessManagement/StepTwo.tsx","containers/AccessManagement/index.tsx"],"names":["Themes","ModalMarginTop","ModalSize","Modal","props","themeColor","title","backDrop","theme","close","backDropClose","widthSizeClass","displayClose","padding","body","footer","primary","secondary","danger","success","warning","onClick","className","undefined","marginTop","none","style","width","maxHeight","height","maxWidth","overflowY","margin","zIndex","default","children","Table","table","tr","rows","columns","hideColumns","pagination","search","tableSize","tableClass","tableId","rounded","searchBG","thColor","loading","length","result","characters","charactersLength","i","charAt","Math","floor","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","map","display","type","placeholder","onChange","e","data","filterType","filter","td","cols","toLowerCase","textContent","innerText","indexOf","filterTable","target","value","disabled","Number","id","column","index","alignText","isSortAllowed","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","_SideNavigation","componentDidMount","PageHasSubNav","componentWillUnmount","state","this","auth","isAuthenticated","navActive","system","navigation","React","Component","SideNavigation","connect","NavToogle","MainItem","icon","MdBrightness1","active","count","IconDefined","SubItemContainer","SubItem","ModalStateRole","StepOne","handleSubmit","setRoleTitle","openModal","roleTitle","roleRequirement","setRequirement","error","setError","onSubmit","htmlFor","element","msg","name","checked","setAccessToRole","accessToRole","loadingRequest","updateFieldChanged","newArr","permitted","create","view","update","delete","console","log","access","task","TabTypes","createAccessRoles","updateAccessRoles","filterStatus","roleId","setRoleId","stepOne","stepTwo","stepsStatus","setStepStatus","accessTasks","setAccessTasks","Close_Modal","setOpenModal","feedBack","setFeedBack","setLoadingRequest","viewRole","setViewRole","roleSelected","setRoleSelected","whichLevel","row","district_required","room_required","school_required","CustomizeAccess","userAccess","oneAccess","newArray","forEach","find","item","key","push","a","axios","get","API","AUTH","res","role_error","message","errorToText","loadAccessTasks","cleanAndCloseModal","Update_Role_Access","step","preventDefault","some","Add_Role_Access","post","role","status","patch","system_user_role_id","loadCurrentRoles","accessRoles","colSpan","extraLarge","StepTwo","large","role_id","changeViewRole","roleDetails","AccessManagement","fetchAccessRoles","allRole","activeRole","blockedRole","labelCounts","setLabelCounts","All_Roles","roleStatus","setRoleStatus","setLoading","Active_Roles","Blocked_Roles","toTwoDigit"],"mappings":"yJAAA,0GAMYA,EASAC,EAQAC,EAvBZ,e,SAMYF,K,kBAAAA,E,kBAAAA,E,sBAAAA,E,gBAAAA,E,kBAAAA,E,mBAAAA,M,cASAC,K,aAAAA,E,eAAAA,E,iBAAAA,E,gBAAAA,E,iBAAAA,M,cAQAC,K,iBAAAA,E,yBAAAA,E,wBAAAA,E,6BAAAA,E,gCAAAA,M,KAqFGC,IA/DD,SAACC,GACb,IAWIC,EAVFC,EAQkBF,EARlBE,MACAC,EAOkBH,EAPlBG,SACAC,EAMkBJ,EANlBI,MACAC,EAKkBL,EALlBK,MACAC,EAIkBN,EAJlBM,cACAC,EAGkBP,EAHlBO,eACAC,EAEkBR,EAFlBQ,aAPF,EASoBR,EADlBS,eARF,MAQY,CAAEP,OAAO,EAAMQ,MAAM,EAAMC,QAAQ,GAR/C,EAaA,OAAQP,GACN,KAAKR,EAAOgB,QACVX,EAAa,WACb,MACF,KAAKL,EAAOiB,UACVZ,EAAa,WACb,MACF,KAAKL,EAAOkB,OACVb,EAAa,UACb,MACF,KAAKL,EAAOmB,QACVd,EAAa,YACb,MACF,KAAKL,EAAOoB,QACVf,EAAa,aACb,MACF,QACEA,EAAa,QAGjB,OACE,qCACE,qBAAKgB,QAAS,kBAAYX,GAAiBD,KAASa,UAAS,6FAAoG,IAAbf,EAAoB,KAAO,OAC/K,sBAAKe,UAAS,uDAAiEC,IAApBnB,EAAMoB,UAA0BvB,EAAewB,KAAOrB,EAAMoB,UAAzG,2EAAqLb,EAArL,mCAA6OY,IAApBnB,EAAMoB,WAA2BpB,EAAMoB,YAAcvB,EAAewB,KAAO,oBAAsB,kBAA1T,oBAA+VC,MAAO,CAACC,MAAO,OAAQC,UAAW,OAAQC,OAAO,GAAD,OAAKlB,IAAmBT,EAAU4B,cAA+BP,IAApBnB,EAAMoB,UAA0B,OAAS,QAAU,eAAiBO,UAAW,OAAQC,OAAQ,OAAQC,OAAQ,UAAzjB,UACE,sBAAKX,UAAS,kCAA6BjB,EAA7B,aAA6D,IAAlBQ,EAAQP,MAAiB,YAAc,GAAlF,2BAAwGE,IAAUR,EAAOkC,SAAW1B,IAAUR,EAAOiB,UAAY,QAAU,SAAzL,UACIX,GAAmB,KAAVA,EAA8B,oBAAIgB,UAAS,qBAAb,SAAsChB,IAArD,yBACR,IAAjBM,EAAyB,GAAK,qBAAKU,UAAU,+DAAf,SAA8E,cAAC,IAAD,CAASA,UAAU,yCAAyCD,QAAS,kBAAWZ,YAE/L,qBACEa,UAAS,qBAAgC,IAAjBT,EAAQC,KAAgB,YAAc,IADhE,SAGE,8BAAyB,KAAnBV,EAAM+B,SAAkB/B,EAAM+B,SAAW,YAE/BZ,IAAjBnB,EAAMW,QAAyC,KAAjBX,EAAMW,OACnC,qBACEO,UAAS,4BACY,IAAnBT,EAAQE,OAAkB,YAAc,IAF5C,SAKGX,EAAMW,SAGT,W,2EC4NKqB,IAxNqB,SAAC,GAa9B,IAGDC,EAAoBC,EAfxBC,EAYI,EAZJA,KACAC,EAWI,EAXJA,QAWI,IAVJC,mBAUI,aATJC,kBASI,aARJC,cAQI,aAPJC,iBAOI,MAPQ,SAOR,EANJC,EAMI,EANJA,WAMI,IALJC,eAKI,MALM,UAKN,MAJJC,eAII,aAHJC,gBAGI,MAHO,cAGP,MAFJC,eAEI,MAFM,OAEN,MADJC,eACI,SAEJJ,EAAsB,YAAZA,EApHM,WAKhB,IALiD,IAAhCK,EAA+B,uDAAd,EAC9BC,EAAiB,GACjBC,EACF,iEACEC,EAAmBD,EAAWF,OACzBI,EAAY,EAAGA,EAAIJ,EAAQI,IAClCH,GAAUC,EAAWG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,IAEzD,OAAOF,EA4G2BQ,GAAcd,EAEhD,MAAoCe,mBAAiB,GAArD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,mBAAiB,GAArD,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAsCJ,mBAAiB,GAAvD,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA0BN,qBAA1B,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAAgCR,mBAAiB,IAAjD,mBAAOS,EAAP,KAAiBC,EAAjB,KACA,EAAoCV,mBAAiB,GAArD,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAgCZ,mBAAiB,GAAjD,oBAAOa,GAAP,MAAiBC,GAAjB,MAEAC,qBAAU,WACRlC,GAAcmC,QAGhB,IAyBMA,GAAkB,WACtBxC,EAAQyC,SAASC,eAAejC,GAChCR,EAAKD,EAAM2C,qBAAqB,MAChCjB,EAAczB,EAAGa,QACjBc,EAAcR,KAAKwB,KAAKnB,EAAaQ,IAGrCG,GAAeP,EAAc,GAAKI,GAClCK,GAAYlB,KAAKyB,IAAIV,EAAaF,EAAW,EAAGR,EAAa,IAM7D,IAAIqB,EAASC,MAAMC,KAAKD,MAAMpB,EAAa,EAtD3B,GAsD0CsB,QAAQC,KAChE,SAAChC,GAAD,OAvDc,EAuDKA,KAEhBa,GAASe,EAAOhC,SAAWiB,EAAMjB,QACpCkB,EAASc,GAGX,IAAK,IAAI5B,EAAY,EAAGA,EAAIjB,EAAGa,OAAQI,IAEnCjB,EAAGiB,GAAG7B,MAAM8D,QADVjC,GAAKiB,GAAcjB,GAAKmB,GACJ,GAEA,QAK5B,OACE,sBAAKpD,UAAS,UAAKsB,GAAnB,UAEGD,GACC,qBAAKrB,UAAS,UAAK0B,EAAL,gBAAd,SACGL,GACC,sBAAKrB,UAAU,yEAAf,UACE,cAAC,KAAD,CAAUA,UAAU,uCACpB,uBACEmE,KAAK,SACLC,YAAY,SACZC,SAAU,SAACC,GAAD,OAlEJ,SAClBC,EACAC,GAEA,IAAIC,EAAQzD,EAAI0D,EAAIzD,EAAc0D,EAKlC,IAJmB,UAAfH,GAAmC,QAATD,IAAgBA,EAAO,IACrDE,EAASF,EAAKK,cAEd5D,GADAD,EAAQyC,SAASC,eAAejC,IACrBkC,qBAAqB,MAC3BzC,EAAO,EAAGA,EAAOD,EAAGa,OAAQZ,IAC/B,IAAK0D,EAAO,EAAGA,EAAOzD,EAAQW,OAAQ8C,IAEpC,GADAD,EAAK1D,EAAGC,GAAMyC,qBAAqB,MAAMiB,GACjC,CAEN,IADWD,EAAGG,aAAeH,EAAGI,WACnBF,cAAcG,QAAQN,IAAW,EAAG,CAC/CzD,EAAGC,GAAMb,MAAM8D,QAAU,GACzB,MAEAlD,EAAGC,GAAMb,MAAM8D,QAAU,QAgDJc,CAAYV,EAAEW,OAAOC,QACtClF,UAAU,yEACVmF,SAAUvD,IAGXR,GACC,qBAAKpB,UAAU,SAAf,SACE,yBACEA,UAAU,2DACVqE,SAAU,SAACC,GAAD,OAAOrB,EAAYmC,OAAOd,EAAEW,OAAOC,SAC7CC,SAAUvD,EAHZ,UAKE,wBAAQsD,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,MAAd,2BAQd,wBACElF,UACEuB,GAAU,wBAGJE,GAAW,gBAHP,sCAMZ4D,GAAI7D,EARN,WAUIL,GACA,uBAAOnB,UAAU,wEAAjB,SACE,oBACEA,UAAS,qCAAgC2B,EAAhC,kCAAiEA,EAAjE,qBAAqFA,EAArF,wBADX,SAGGT,EAAQ+C,KAAI,SAACqB,EAAQC,GAAT,OACX,oBAEEvF,UAAS,UAAKsF,EAAO/F,QAAZ,iBACP+F,EAAOE,UADA,sBAEKF,EAAOG,eAAiB,kBACtC1F,QAAS,kBACPuF,EAAOG,eAtOG,SAC5BjE,GAGI,IACAT,EACFE,EACAyE,EACAzD,EACA0D,EACAC,EACAC,EATFC,EAEG,uDAFgB,EACnBC,EACG,uDADmB,MASpBC,EAAc,EAKhB,GAHAN,GAAY,EADZ3E,EAAQyC,SAASC,eAAejC,GAK9B,KAAOkE,GAAW,CAMhB,IAJAA,GAAY,EACZzE,EAAOF,EAAME,KAGRgB,EAAI,EAAGA,EAAIhB,EAAKY,OAAS,EAAGI,IAS/B,GAPA4D,GAAe,EAGfF,EAAI1E,EAAKgB,GAAGyB,qBAAqB,MAAMoC,GACvCF,EAAI3E,EAAKgB,EAAI,GAAGyB,qBAAqB,MAAMoC,GAG/B,QAARC,GAAiBJ,GAAKC,GACxB,GAAID,EAAEM,UAAUrB,cAAgBgB,EAAEK,UAAUrB,cAAe,CAEzDiB,GAAe,EACf,YAEG,GAAY,SAARE,GAAkBJ,GAAKC,GAC5BD,EAAEM,UAAUrB,cAAgBgB,EAAEK,UAAUrB,cAAe,CAEzDiB,GAAe,EACf,MAIFA,GAAgB5E,EAAKgB,GAAGiE,YAG1BjF,EAAKgB,GAAGiE,WAAYC,aAAalF,EAAKgB,EAAI,GAAIhB,EAAKgB,IACnDyD,GAAY,EAEZM,KAIoB,IAAhBA,GAA6B,QAARD,IACvBA,EAAM,OACNL,GAAY,IA2KsBU,CAAe5E,EAAS+D,IANpD,SASE,sBAAKvF,UAAU,0BAAf,UACGsF,EAAOe,YACPf,EAAOG,eAAiB,cAAC,IAAD,QAVtBF,UAiBf,uBAAOF,GAAG,aAAarF,UAAU,gCAAjC,SACGiB,SAGJG,GACC,sBAAKpB,UAAU,sEAAf,UACE,8BACE,uBAAMA,UAAU,mCAAhB,0BACgBgD,EADhB,OAC8BR,EAAa,EAD3C,gBAIF,8BACE,sBAAKxC,UAAU,wBAAf,UACE,8BACE,wBACEmE,KAAK,SACLnE,UAAS,mHACS,IAAhB4C,GAAqB,YAEvB0D,aAAW,WACXnB,SAA0B,IAAhBvC,GAAqBhB,EAC/B7B,QAAS,kBAAM8C,EAAeD,EAAc,IAP9C,SASE,cAAC,KAAD,CAAkB5C,UAAU,gBAGhC,8BACG8C,GACCA,EAAMmB,KAAI,SAACsC,EAAMC,GAAP,OACR,wBAEExG,UAAS,6GACPuG,IAAS3D,EACL,WACA,8BAENuC,SAAUoB,IAAS3D,GAAehB,EAClC7B,QAAS,kBAAM8C,EAAe0D,IARhC,SAUGA,GATIC,QAab,8BACE,wBACErC,KAAK,SACLnE,UAAS,6HACP4C,IAAgBF,GAAc,YAEhC4D,aAAW,OACXnB,SAAUvC,IAAgBF,GAAcd,EACxC7B,QAAS,kBAAM8C,EAAeD,EAAc,IAP9C,SASE,cAAC,KAAD,CAAgB5C,UAAU,6B,0PClStCyG,E,kDACJ,WAAY3H,GAAkB,IAAD,8BAC3B,cAAMA,IAOR4H,kBAAoB,kBAAM,EAAK5H,MAAM6H,eAAc,IARtB,EAS7BC,qBAAuB,kBAAM,EAAK9H,MAAM6H,eAAc,IANpD,EAAKE,MAAQ,CACXjF,SAAS,GAJgB,E,0CAW7B,WAGE,IAAwB,IAFAkF,KAAKhI,MAAMiI,KAAKC,gBAGtC,OAAO,KAGT,IAAMC,EAAYH,KAAKhI,MAAMoI,OAAOC,WACpC,OACE,qBACEnH,UAAS,2DACO,IAAdiH,EAAqB,sBAAwB,uBADtC,kGADX,SAKGH,KAAKhI,MAAM+B,e,GA1BUuG,IAAMC,WAuCvBC,EAAiBC,aAPN,SAAC,GAIvB,MAAO,CAAER,KADuC,EAFhDA,KAGqBG,OAD2B,EADhDA,UAKqD,CACrDM,eACAb,oBAF4BY,CAG3Bd,GAwCUgB,EAA2C,SAAC,GAKpC,IAAD,IAJlBzI,aAIkB,MAJV,GAIU,MAHlB0I,YAGkB,MAHXC,IAGW,MAFlBC,cAEkB,aADlBC,aACkB,MADV,EACU,EACZC,EAAcJ,EACpB,OACE,0BACE1H,UAAS,WACI,IAAX4H,EACI,mCACA,4BAHG,+HADX,UAOE,0BAAS5H,UAAU,SAAnB,UACE,cAAC8H,EAAD,CAAa9H,UAAU,8BACvB,+BAAOhB,OAGR6I,EAAQ,EACP,sBAAM7H,UAAU,0DAAhB,SACG6H,IAED,SAgBGE,EAA2D,SAAC,GAEpD,IADnBlH,EACkB,EADlBA,SAEA,OACE,qBAAKb,UAAU,sFAAf,SACGa,KAoBMmH,EAAyC,SAAC,GAKlC,IAAD,IAJlBhJ,aAIkB,MAJV,GAIU,MAHlB0I,YAGkB,MAHXC,IAGW,MAFlBC,cAEkB,aADlBC,aACkB,MADV,EACU,EACZC,EAAcJ,EAEpB,OACE,sBACE1H,UAAS,6DACI,IAAX4H,EAAkB,mCAAqC,iBADhD,oFADX,UAKE,cAACE,EAAD,CACE9H,UAAS,uCACI,IAAX4H,EAAkB,aAAe,MAGrC,sBACE5H,UAAS,6BAAkC,IAAX4H,EAAkB,aAAe,IADnE,SAGG5I,IAEF6I,GAAS,EACR,sBACE7H,UAAS,6BAAkC,IAAX4H,EAAkB,aAAe,IADnE,SAGGC,IAED,U,6FC5KEI,E,+FC6HGC,EA/HqB,SAAC,GAS9B,IARLC,EAQI,EARJA,aAEAC,GAMI,EAPJC,UAOI,EANJD,cACAE,EAKI,EALJA,UACAC,EAII,EAJJA,gBACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,MACAC,EACI,EADJA,SAEA,OACE,8BACE,uBAAM1I,UAAU,mBAAmB2I,SAAU,SAACrE,GAAD,OAAO6D,EAAa7D,EAAG,IAApE,UACE,oBAAItE,UAAU,+CAAd,+BAGA,qBAAKA,UAAU,qBAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,uBACE4I,QAAQ,aACR5I,UAAU,qEAFZ,kBAMA,uBACEmE,KAAK,OACLnE,UAAS,2DACW,eAAlByI,EAAMI,QACF,iBACA,mBAEN3D,MAAOoD,EACPlE,YAAY,aACZC,SAAU,SAACC,GACT8D,EAAa9D,EAAEW,OAAOC,OACtBwD,EAAS,CACPG,QAAS,GACTC,IAAK,QAKX,mBACE9I,UAAS,gDACW,eAAlByI,EAAMI,SAA4B,UAFtC,SAKGJ,EAAMK,WAKb,sBAAK9I,UAAU,qBAAf,UACE,0CACA,sBAAMA,UAAU,wBAAhB,0CAGA,sBAAKA,UAAU,kDAAf,UACE,wBAAOA,UAAU,gCAAjB,UACE,uBACEmE,KAAK,QACL4E,KAAK,QACL/I,UAAU,mCACVqE,SAAU,WACRmE,EAAe,QACfE,EAAS,CACPG,QAAS,GACTC,IAAK,MAGTE,QAA6B,SAApBT,IAEX,sBAAMvI,UAAU,qBAAhB,qBAEF,wBAAOA,UAAU,gCAAjB,UACE,uBACEmE,KAAK,QACL4E,KAAK,QACL/I,UAAU,mCACVqE,SAAU,kBAAMmE,EAAe,aAC/BQ,QAA6B,aAApBT,IAEX,sBAAMvI,UAAU,qBAAhB,yBAEF,wBAAOA,UAAU,gCAAjB,UACE,uBACEmE,KAAK,QACL4E,KAAK,QACL/I,UAAU,mCACVqE,SAAU,kBAAMmE,EAAe,WAC/BQ,QAA6B,WAApBT,IAEX,sBAAMvI,UAAU,qBAAhB,uBAEF,wBAAOA,UAAU,gCAAjB,UACE,uBACEmE,KAAK,QACL4E,KAAK,QACL/I,UAAU,mCACVqE,SAAU,kBAAMmE,EAAe,SAC/BQ,QAA6B,SAApBT,IAEX,sBAAMvI,UAAU,qBAAhB,wBAGJ,mBACEA,UAAS,gDACW,eAAlByI,EAAMI,SAA4B,UAFtC,SAKGJ,EAAMK,SAGX,qBAAK9I,UAAU,8BAAf,SACE,wBACEA,UAAU,iEACVmE,KAAK,SAFP,qC,iBCkFK+D,EA7LqB,SAAC,GAQ9B,IAPLC,EAOI,EAPJA,aACAc,EAMI,EANJA,gBACAC,EAKI,EALJA,aACAZ,EAII,EAJJA,UACAG,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACAS,EACI,EADJA,eAEMC,EAAqB,SACzB7D,EACAN,EACAC,GAEA,IAAImE,EAA6B,YAAOH,GACxC,OAAQjE,GACN,IAAK,SACHoE,EAAO9D,GAAO+D,UAAUC,OAASrE,EACjC,MACF,IAAK,OACHmE,EAAO9D,GAAO+D,UAAUE,KAAOtE,EAC/B,MACF,IAAK,SACHmE,EAAO9D,GAAO+D,UAAUG,OAASvE,EACjC,MACF,QACEmE,EAAO9D,GAAO+D,UAAUI,OAASxE,EAIrC+D,EAAgBI,IA2DlB,OACE,8BACE,sBAAMrJ,UAAU,mBAAmB2I,SAAU,SAACrE,GAAD,OAAO6D,EAAa7D,EAAG,IAApE,SACE,sBAAKtE,UAAU,OAAf,UACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,qCAAd,yCAGA,sBAAKA,UAAU,8CAAf,UACE,cAAC,IAAD,CAAgBA,UAAU,YAC1B,oBAAIA,UAAU,kDAAd,SACGsI,UAIP,qBAAKtI,UAAU,eAAf,SACE,sBAAKA,UAAU,qCAAf,UACE,sBAAKA,UAAU,iCAAf,UACE,cAAC,IAAD,CAAWA,UAAU,4BACrB,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,wBAAd,oBACA,sBAAMA,UAAU,gCAAhB,wEAMJ,sBAAKA,UAAU,iCAAf,UACE,cAAC,KAAD,CAAgBA,UAAU,4BAC1B,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,wBAAd,kBACA,sBAAMA,UAAU,gCAAhB,sEAMJ,sBAAKA,UAAU,iCAAf,UACE,cAAC,IAAD,CAAQA,UAAU,4BAClB,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,wBAAd,oBACA,sBAAMA,UAAU,gCAAhB,wEAMJ,sBAAKA,UAAU,iCAAf,UACE,cAAC,IAAD,CAAUA,UAAU,4BACpB,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,wBAAd,oBACA,sBAAMA,UAAU,gCAAhB,6EAQR,mBACEA,UAAS,kDACW,gBAAlByI,EAAMI,SAA6B,UAFvC,SAKGJ,EAAMK,MAGT,cAAChI,EAAA,EAAD,CACEI,QAAS,CACP,CACEmF,YAAa,cACbb,UAAW,OACXjG,QAAS,OAEX,CAAE8G,YAAa,SAAUb,UAAW,QACpC,CAAEa,YAAa,OAAQb,UAAW,QAClC,CAAEa,YAAa,SAAUb,UAAW,QACpC,CAAEa,YAAa,SAAUb,UAAW,SAEtCvE,KAxIQ,WAEhB,OADA0I,QAAQC,IAAI,CAAEV,iBACPA,EAAajF,KAAI,SAAC4F,EAAQtE,GAAT,OACtB,qBAEEvF,UAAU,yDAFZ,UAIE,oBAAIA,UAAU,qDAAd,SACG6J,EAAOC,OAEV,oBAAI9J,UAAU,YAAd,SACE,uBACEmE,KAAK,WACLnE,UAAU,sCACVqE,SAAU,WACR+E,EAAmB7D,EAAO,UAAWsE,EAAOP,UAAUC,QACtDb,EAAS,CAAEG,QAAS,GAAIC,IAAK,MAE/BE,QAASa,EAAOP,UAAUC,WAG9B,oBAAIvJ,UAAU,YAAd,SACE,uBACEmE,KAAK,WACLnE,UAAU,sCACVqE,SAAU,WACR+E,EAAmB7D,EAAO,QAASsE,EAAOP,UAAUE,MACpDd,EAAS,CAAEG,QAAS,GAAIC,IAAK,MAE/BE,QAASa,EAAOP,UAAUE,SAG9B,oBAAIxJ,UAAU,YAAd,SACE,uBACEmE,KAAK,WACLnE,UAAU,sCACVqE,SAAU,WACR+E,EAAmB7D,EAAO,UAAWsE,EAAOP,UAAUG,QACtDf,EAAS,CAAEG,QAAS,GAAIC,IAAK,MAE/BE,QAASa,EAAOP,UAAUG,WAG9B,oBAAIzJ,UAAU,YAAd,SACE,uBACEmE,KAAK,WACLnE,UAAU,sCACVqE,SAAU,WACR+E,EAAmB7D,EAAO,UAAWsE,EAAOP,UAAUI,QACtDhB,EAAS,CAAEG,QAAS,GAAIC,IAAK,MAE/BE,QAASa,EAAOP,UAAUI,aA/CzBG,EAAOxE,GAAKE,OAqIbnE,YAAY,EACZC,QAAQ,EACRM,QAAQ,SAGV,qBAAK3B,UAAU,8BAAf,SACE,wBACEA,UAAU,iEACVmE,KAAK,SACLgB,SAAUgE,EAHZ,UAKsB,IAAnBA,EAA0B,WAAa,uB,0CFzL1ClB,O,qCAAAA,I,2CAAAA,I,8BAAAA,M,KAaZ,IGzBK8B,EH0tBUxC,eAJS,SAAC,GACvB,MAAO,CAAEsC,OADiE,EAAjDA,UAIa,CACtCG,sBACAC,uBAFa1C,EAjsBwB,SAAC,GAKjC,IAJLsC,EAII,EAJJA,OACAG,EAGI,EAHJA,kBACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,aAEA,EAA4B3H,mBAAiB,IAA7C,mBAAO4H,EAAP,KAAeC,EAAf,KACA,EAAkC7H,mBAAiB,IAAnD,mBAAO+F,EAAP,KAAkBF,EAAlB,KACA,EAA0C7F,mBAExC,QAFF,mBAAOgG,EAAP,KAAwBC,EAAxB,KAGA,EAAqCjG,mBAGlC,CAAE8H,SAAS,EAAOC,SAAS,IAH9B,mBAAOC,EAAP,KAAoBC,EAApB,KAIA,EAAwCjI,qBAAxC,mBAAO2G,EAAP,KAAqBD,EAArB,KACA,EAAsC1G,mBACpC,MADF,mBAAOkI,EAAP,KAAoBC,EAApB,KAGA,EAAkCnI,mBAChC0F,EAAe0C,aADjB,mBAAOtC,EAAP,KAAkBuC,EAAlB,KAGA,EAA0BrI,mBAA2C,CACnEsG,QAAS,GACTC,IAAK,KAFP,mBAAOL,EAAP,KAAcC,EAAd,KAIA,EAAgCnG,qBAAhC,mBAAOsI,GAAP,KAAiBC,GAAjB,KAIA,GAA4CvI,oBAAkB,GAA9D,qBAAO4G,GAAP,MAAuB4B,GAAvB,MACA,GAAgCxI,oBAAkB,GAAlD,qBAAOyI,GAAP,MAAiBC,GAAjB,MACA,GACE1I,qBADF,qBAAO2I,GAAP,MAAqBC,GAArB,MAGMC,GAAa,SAACC,GAClB,OAAIA,EAAIC,kBACC,WACED,EAAIE,cACN,OACEF,EAAIG,gBACN,SAEF,QA+KHC,GAAkB,SACtBC,GAEA,IAAKjB,EAAa,MAAO,GACzB,IACIkB,EADAC,EAAkC,GAWtC,OATAnB,EAAYoB,SAAQ,SAAChD,EAAStD,IAC5BoG,EAAYD,EAAWI,MAAK,SAACC,GAAD,OAAUA,EAAKC,MAAQnD,EAAQmD,QAEzDJ,EAASK,KAAKN,GAEdC,EAASK,KAAKpD,MAIX+C,GAGTtI,qBAAU,YACa,uCAAG,8BAAA4I,EAAA,+EAEFC,IAAMC,IAAN,UAObC,IAAIC,KAPS,mBAFE,QAEdC,EAFc,UAWdhI,EAAOgI,EAAIhI,KAAKN,KAAI,SAACM,GAAD,MAAW,CACjCc,GAAId,EAAKc,GACTyE,KAAMvF,EAAKvF,MACXgN,IAAKzH,EAAKyH,IACV1C,UAAW/E,EAAK+E,cAElBoB,EAAenG,IAjBG,gDAqBpBoF,QAAQC,IAAI,CAAE4C,WAAW,EAAD,KACxB1B,GAAY,CAAE3G,KAAM,SAAUsI,QAASC,YAAY,EAAD,MAtB9B,yDAAH,qDAyBrBC,KACC,IAEH,IAAMC,GAAqB,WACzBpC,EAAc,CAAEH,SAAS,EAAOC,SAAS,IACrCjC,IAAcJ,EAAe4E,qBAC/BrE,EAAe,QACfJ,EAAa,IACbgC,EAAU,KAGZW,IAAkB,GAClBD,GAAY,CAAE3G,KAAM,GAAIsI,QAAS,KACjChC,GAAexB,EAAgBwB,GAE/B/B,EAAS,CACPG,QAAS,GACTC,IAAK,KAEPT,IAAcJ,EAAe4E,oBAC3BjC,EAAa3C,EAAe0C,cAG1BxC,GAAY,uCAAG,WACnB7D,EACAwI,GAFmB,iBAAAZ,EAAA,yDAInB5H,EAAEyI,iBACFjC,GAAY,CAAE3G,KAAM,GAAIsI,QAAS,KACjC/D,EAAS,CACPG,QAAS,GACTC,IAAK,KAEPiC,IAAkB,GACL,IAAT+B,EAXe,mBAYZxE,EAAUzG,OAZE,yCAaR6G,EAAS,CACdG,QAAS,aACTC,IAAK,4BAfQ,OAmBZP,EAAgB1G,QACnB2G,EAAe,QAGjBgC,EAAc,CAAEH,SAAS,EAAMC,SAAS,IAvBvB,UAyBN,IAATwC,EAzBe,qBA2Bf5D,GACCA,EAAa8D,MACZ,SAAC1I,GAAD,OACyB,IAAvBA,EAAEgF,UAAUC,SACS,IAArBjF,EAAEgF,UAAUE,OACW,IAAvBlF,EAAEgF,UAAUG,SACW,IAAvBnF,EAAEgF,UAAUI,UAjCD,0CAoCRhB,EAAS,CACdG,QAAS,cACTC,IAAK,yCAtCQ,qBA2CXT,IAAcJ,EAAegF,gBA3ClB,kCA4CKd,IAAMe,KAAN,UACbb,IAAIC,KADS,SAEhB,CACEa,KAAM7E,EACN8E,QAAQ,EACR9B,kBAAuC,aAApB/C,EACnBiD,gBAAqC,WAApBjD,EACjBgD,cAAmC,SAApBhD,EACfsB,OAAQX,IApDC,SA4CPqD,EA5CO,SAuDJvC,EAAkBuC,EAAIhI,KAAKA,MACpCwG,IAAkB,GAClB6B,KACA9B,GAAY,CACV3G,KAAM,UACNsI,QAAQ,wCA5DG,yCA+DKN,IAAMkB,MAAN,UACbhB,IAAIC,KADS,SAEhB,CACEa,KAAM7E,EACN8E,QAAQ,EACR9B,kBAAuC,aAApB/C,EACnBiD,gBAAqC,WAApBjD,EACjBgD,cAAmC,SAApBhD,EACfsB,OAAQX,EACRoE,oBAAqBnD,IAxEZ,QA+DPoC,EA/DO,OA2Eb5C,QAAQC,IAAI2C,EAAIhI,MACZgI,GAAKtC,EAAkBsC,EAAIhI,KAAKA,MACpCwG,IAAkB,GAClB6B,KACA9B,GAAY,CACV3G,KAAM,UACNsI,QAAQ,wCAjFG,2DAqFf9C,QAAQC,IAAI,CAAE4C,WAAW,EAAD,KACxB1B,GAAY,CAAE3G,KAAM,SAAUsI,QAASC,YAAY,EAAD,MAtFnC,QAyFnB3B,IAAkB,GAzFC,2DAAH,wDA4FZwC,GAAmB,SACvBC,GAEA,MAAqB,QAAjBtD,EACKsD,EAAY/I,QAAO,SAAC0I,GAAD,OAAUA,EAAKC,SAAWlD,KAC1CsD,GAuBd,OACE,qCACG3C,IACmB,KAAlBA,GAAS1G,MACTkE,IAAcJ,EAAe0C,aAC3B,sBACE3K,UAAS,gBAAW6K,GAAS1G,KAApB,6CADX,UAGE,sBAAMnE,UAAU,4CAAhB,SACE,cAAC,IAAD,CACEA,UAAU,wCACVhB,MAAM,QACNe,QAAS,kBAAM+K,GAAY,CAAE3G,KAAM,GAAIsI,QAAS,UAGpD,cAAC,IAAD,CAAgBzM,UAAU,cAC1B,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,oCAAf,SACqB,YAAlB6K,GAAS1G,KAAqB,UAAY,UAE7C,qBAAKnE,UAAU,4BAAf,SACG6K,GAAS4B,gBAMpB,sBACEzM,UAAS,sEADX,UAGE,wBACEA,UAAU,eACVD,QAAS,WACP6K,EAAa3C,EAAegF,iBAC5BxC,GAAexB,EAAgBwB,GAC/BL,EAAU,IACVhC,EAAa,IACbI,EAAe,SAEjBrD,UAAWsF,EATb,sBAaA,qBAAKzK,UAAU,8BAAf,SACE,cAACc,EAAA,EAAD,CACEI,QAAS,CACP,CAAEmF,YAAa,IAAKb,UAAW,QAC/B,CAAEa,YAAa,aAAcb,UAAW,QACxC,CAAEa,YAAa,QAASb,UAAW,QACnC,CAAEa,YAAa,GAAIb,UAAW,WAEhCvE,KA1ZO,WACf,IAAMa,EAASyL,GAAiB1D,EAAO2D,aAAavJ,KAAI,SAACoH,EAAK9F,GAAN,OACtD,qBAEEvF,UAAS,+CACPmK,IAAWkB,EAAIiC,qBAAuB,eAH1C,UAME,oBAAItN,UAAU,sBAAd,SAAqCuF,EAAQ,IAC7C,oBAAIvF,UAAU,qDAAd,SACGqL,EAAI8B,OAEP,oBAAInN,UAAU,yCAAd,SACGoL,GAAWC,KAEd,oBAAIrL,UAAU,aAAd,SACE,sBAAKA,UAAU,cAAf,UACE,yBACEA,UAAU,uGACVD,QAAS,WACPkL,IAAY,GACZb,EAAUiB,EAAIiC,qBACdnC,GAAgBE,GAChBjD,EAAaiD,EAAI8B,MACjB3E,EACE6C,EAAIC,kBACA,WACAD,EAAIG,gBACJ,SACAH,EAAIE,cACJ,OACA,QAENtC,EAAgBwC,GAAgBJ,EAAIxB,UAEtC1E,SAAUgF,IAAWkB,EAAIiC,oBAlB3B,UAoBE,cAAC,IAAD,CAAOtN,UAAU,iBACjB,6CAEF,yBACEA,UAAU,mFACVD,QAAS,WACPqK,EAAUiB,EAAIiC,qBACdlF,EAAaiD,EAAI8B,MACjBrC,GAAY,CAAE3G,KAAM,GAAIsI,QAAS,KACjC7B,EAAa3C,EAAe4E,oBAC5B5D,EAAgBwC,GAAgBJ,EAAIxB,UAEtC1E,SACEgF,IAAWkB,EAAIiC,qBACfjF,IAAcJ,EAAe0C,YAXjC,UAcE,cAAC,IAAD,CAAQ3K,UAAU,iBAClB,kDApDDuF,MAuET,OAAIzD,EAAOD,QAAU,EACZC,EAGL,oBAAI9B,UAAU,yDAAd,SACE,oBACEA,UAAU,qDACVyN,QAAS,EAFX,8BA4UErM,YAAY,EACZC,QAAQ,EACRK,SAAS,WACTC,QAAQ,cAMb0G,IAAcJ,EAAe0C,aAC5B,cAAC9L,EAAA,EAAD,CACEI,UAAU,EACVC,MAAOR,IAAOkC,QACdzB,MAAO,WACLyN,KACAhC,EAAa3C,EAAe0C,cAE9BrL,cAAc,EACdF,eAAe,EACfJ,MACE,sBAAKgB,UAAU,4CAAf,UACGqI,IAAcJ,EAAegF,gBAA7B,wBADH,UAOF5N,eAAgBT,IAAU8O,WAC1BnO,QAAS,CAAEP,OAAO,EAAMQ,MAAM,EAAOC,QAAQ,GAlB/C,SAqBE,sBAAKO,UAAU,0BAAf,UACG6K,IAA8B,KAAlBA,GAAS1G,MACpB,sBACEnE,UAAS,gBAAW6K,GAAS1G,KAApB,6CADX,UAGE,sBAAMnE,UAAU,4CAAhB,SACE,cAAC,IAAD,CACEA,UAAU,wCACVhB,MAAM,QACNe,QAAS,kBAAM+K,GAAY,CAAE3G,KAAM,GAAIsI,QAAS,UAGpD,cAAC,IAAD,CAAgBzM,UAAU,cAC1B,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,oCAAf,SACqB,YAAlB6K,GAAS1G,KAAqB,UAAY,UAE7C,qBAAKnE,UAAU,4BAAf,SACG6K,GAAS4B,gBAKlB,sBAAKzM,UAAU,wDAAf,UACE,sBAAKA,UAAU,yCAAf,UACE,sBACEA,UAAS,8DACNuK,EAAYF,QAET,4BADA,wDAHR,UAOE,qBAAKrK,UAAU,gGAAf,SACE,sBAAMA,UAAU,oDAAhB,iBAIF,sBAAKA,UAAU,sCAAf,8BAEE,sBAAMA,UAAU,sBAAhB,uDAMJ,sBACEA,UAAS,8DACPuK,EAAYF,UAAYE,EAAYD,QAChC,uDACA,6BAJR,UAOE,qBAAKtK,UAAU,gGAAf,SACE,sBAAMA,UAAU,oDAAhB,iBAIF,sBAAKA,UAAU,sCAAf,8BAEE,sBAAMA,UAAU,sBAAhB,kDAMN,qBAAKA,UAAU,kEAAf,SACIuK,EAAYF,QAaZnB,GACE,cAACyE,EAAD,CACExF,aAAcA,GACdG,UAAWA,EACXW,gBAAiBA,EACjBC,aAAcA,EACdT,MAAOA,EACPC,SAAUA,EACVS,eAAgBA,KApBpB,cAAC,EAAD,CACEhB,aAAcA,GACdC,aAAcA,EACdE,UAAWA,EACXsC,aAAcA,EACdvC,UAAWA,EACXG,eAAgBA,EAChBD,gBAAiBA,EACjBE,MAAOA,EACPC,SAAUA,cAsBvBsC,IACC,cAACnM,EAAA,EAAD,CACEI,UAAU,EACVC,MAAOR,IAAOkC,QACdzB,MAAO,WACL8L,IAAY,GACZb,EAAU,IACVe,GAAgB,MAChB/C,EAAa,IACbI,EAAe,QACfS,OAAgBhJ,IAElBX,cAAc,EACdF,eAAe,EACfJ,MACE,sBAAKgB,UAAU,4CAAf,UACGsI,EADH,WAIFjJ,eAAgBT,IAAUgP,MAC1BrO,QAAS,CAAEP,OAAO,EAAMQ,MAAM,EAAOC,QAAQ,GAnB/C,SAsBE,sBAAKO,UAAU,0BAAf,UACE,sBAAKA,UAAU,6CAAf,UACE,gCACE,qBAAKA,UAAU,gBAAf,SACE,yBACEA,UAAS,gFACTqE,SAAU,SAACC,GAAD,OAtOL,SAACuJ,GACtB,IAAI/L,EAAS+H,EAAO2D,YAAY/I,QAC9B,SAAC0I,GAAD,OAAUA,EAAKG,sBAAwBO,KACvC,GACF5C,IAAY,GACZb,EAAUtI,EAAOwL,qBACjBnC,GAAgBrJ,GAChBsG,EAAatG,EAAOqL,MACpB3E,EACE1G,EAAOwJ,kBACH,WACAxJ,EAAO0J,gBACP,SACA1J,EAAOyJ,cACP,OACA,QAENtC,EAAgBwC,GAAgB3J,EAAO+H,SAsNrBiE,CAAexJ,EAAEW,OAAOC,QAE1BA,MAAOiF,EACPhF,SAAUgE,GANZ,UAQE,wBAAQjE,MAAM,GAAd,+BACCqI,GAAiB1D,EAAO2D,aAAavJ,KAAI,SAAC8H,EAAMxG,GAAP,OACxC,wBAEEL,MAAO6G,EAAKuB,oBAFd,SAIGvB,EAAKoB,MAHD5H,EAAQwG,EAAKuB,8BAQb,OAAZpC,SAAY,IAAZA,QAAA,EAAAA,GAAcI,oBACb,sBAAKtL,UAAU,kCAAf,UACE,sBAAMA,UAAU,gBAAhB,wBACA,oBAAIA,UAAU,4BAAd,0BAGS,OAAZkL,SAAY,IAAZA,QAAA,EAAAA,GAAcM,kBACb,sBAAKxL,UAAU,kCAAf,UACE,sBAAMA,UAAU,gBAAhB,sBACA,oBAAIA,UAAU,4BAAd,0BAGS,OAAZkL,SAAY,IAAZA,QAAA,EAAAA,GAAcK,gBACb,sBAAKvL,UAAU,kCAAf,UACE,sBAAMA,UAAU,gBAAhB,oBACA,oBAAIA,UAAU,4BAAd,4BAQN,yBACEA,UAAU,gEACVD,QAAS,WACP6K,EAAa3C,EAAe4E,oBAC5B5B,IAAY,GACZT,EAAc,CAAEH,SAAS,EAAMC,SAAS,KAE1CnF,SAAUkD,IAAcJ,EAAe0C,YAPzC,UASE,cAAC,IAAD,CAAQ3K,UAAU,iBAClB,8CAUJ,cAACc,EAAA,EAAD,CACEI,QAAS,CACP,CACEmF,YAAa,cACbb,UAAW,OACXjG,QAAS,OAEX,CAAE8G,YAAa,SAAUb,UAAW,QACpC,CAAEa,YAAa,OAAQb,UAAW,QAClC,CAAEa,YAAa,SAAUb,UAAW,QACpC,CAAEa,YAAa,SAAUb,UAAW,SAEtCvE,KAviBK,WACf,IAAM8M,EAAclE,EAAO2D,YACxB/I,QAAO,SAAC0I,GAAD,OAAUA,EAAKG,sBAAwBnD,KAAQ,GACtDN,OAAO5F,KAAI,SAAC4F,EAAQtE,GAAT,OACV,qBAEEvF,UAAU,yDAFZ,UAIE,oBAAIA,UAAU,wDAAd,SACG6J,EAAOC,OAEV,oBAAI9J,UAAU,OAAd,SACE,sBACEA,UAAS,2CACP6J,EAAOP,UAAUC,OAAS,iBAAmB,gBAFjD,UAKGM,EAAOP,UAAUC,OAChB,cAAC,IAAD,IAEA,cAAC,IAAD,IAEDM,EAAOP,UAAUC,OAAS,OAAS,UAGxC,oBAAIvJ,UAAU,OAAd,SACE,sBACEA,UAAS,2CACP6J,EAAOP,UAAUE,KAAO,iBAAmB,gBAF/C,UAKGK,EAAOP,UAAUE,KAAO,cAAC,IAAD,IAAqB,cAAC,IAAD,IAC7CK,EAAOP,UAAUE,KAAO,OAAS,UAGtC,oBAAIxJ,UAAU,OAAd,SACE,sBACEA,UAAS,2CACP6J,EAAOP,UAAUG,OAAS,iBAAmB,gBAFjD,UAKGI,EAAOP,UAAUG,OAChB,cAAC,IAAD,IAEA,cAAC,IAAD,IAEDI,EAAOP,UAAUG,OAAS,OAAS,UAGxC,oBAAIzJ,UAAU,OAAd,SACE,sBACEA,UAAS,2CACP6J,EAAOP,UAAUI,OAAS,iBAAmB,gBAFjD,UAKGG,EAAOP,UAAUI,OAChB,cAAC,IAAD,IAEA,cAAC,IAAD,IAEDG,EAAOP,UAAUI,OAAS,OAAS,YAvDnCnE,MA6DX,OAAIwI,EAAYlM,QAAU,EACjBkM,EAGL,oBAAI/N,UAAU,yDAAd,SACE,oBACEA,UAAU,qDACVyN,QAAS,EAFX,+CAieIrM,YAAY,EACZC,QAAQ,EACRK,SAAS,cACTC,QAAQ,OACRH,QAAQ,+B,4BG7sBjBuI,K,sBAAAA,E,4BAAAA,E,+BAAAA,M,KAWL,IAwJaiE,EAAmBzG,aAJR,SAAC,GACvB,MAAO,CAAEsC,OADiE,EAAjDA,UAI8B,CACvDoE,sBAD8B1G,EAxJE,SAAC,GAAkC,IAAhCsC,EAA+B,EAA/BA,OAAQoE,EAAuB,EAAvBA,iBAC3C,EAAsC1L,mBAInC,CACD2L,QAAS,EACTC,WAAY,EACZC,YAAa,IAPf,mBAAOC,EAAP,KAAoBC,EAApB,KASA,EAAoC/L,mBAAmBwH,EAASwE,WAAhE,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgClM,qBAAhC,mBAAOsI,EAAP,KAAiBC,EAAjB,KAIA,EAA8BvI,oBAAkB,GAAhD,mBAAOX,EAAP,KAAgB8M,EAAhB,KAEApL,qBAAU,WACHuG,EAAO2D,YAAY3L,QACtBoM,IAGEpE,EAAO2D,YAAY3L,SACrByM,EAAe,CACbJ,QAASrE,EAAO2D,YAAY3L,OAC5BsM,WAAYtE,EAAO2D,YAAY/I,QAAO,SAAC0I,GAAD,OAAUA,EAAKC,UAAQvL,OAC7DuM,YAAavE,EAAO2D,YAAY/I,QAAO,SAAC0I,GAAD,OAAWA,EAAKC,UAAQvL,SAEjE6M,GAAW,MAEZ,CAAC7E,EAAO2D,YAAaS,IAUxB,OAAgB,IAAZrM,EAEA,qBAAK5B,UAAU,kEAAf,8BAOF,eAAC,WAAD,WACE,eAACsH,EAAA,EAAD,WACE,sBAAMtH,UAAU,eAAhB,8BACA,yBACEA,UAAU,OACVD,QAAS,kBAAM0O,EAAc1E,EAASwE,YAFxC,SAIE,cAAC,IAAD,CACEvP,MAAO,WACP6I,MAAOwG,EAAYH,QACnBtG,OAAQ4G,IAAezE,EAASwE,cAGpC,yBACEvO,UAAU,OACVD,QAAS,kBAAM0O,EAAc1E,EAAS4E,eAFxC,SAIE,cAAC,IAAD,CACE3P,MAAO,cACP6I,MAAOwG,EAAYF,WACnBvG,OAAQ4G,IAAezE,EAAS4E,iBAGpC,yBACE3O,UAAU,OACVD,QAAS,kBAAM0O,EAAc1E,EAAS6E,gBAFxC,SAIE,cAAC,IAAD,CACE5P,MAAO,gBACP6I,MAAOwG,EAAYD,YACnBxG,OAAQ4G,IAAezE,EAAS6E,qBAKtC,qBAAK5O,UAAU,mBAAf,SAEE,sBAAKA,UAAU,6BAAf,UACE,cAAC,IAAD,CAAQA,UAAU,4BAClB,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,yBAAd,qCACA,sBAAKA,UAAU,iDAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,sBAAMA,UAAU,0BAAhB,yBACA,sBAAMA,UAAU,mCAAhB,SACG6O,YAAWR,EAAYH,cAG3BM,IAAezE,EAAS6E,eACvB,sBAAK5O,UAAU,qBAAf,UACE,sBAAMA,UAAU,0BAAhB,4BAGA,sBAAMA,UAAU,mCAAhB,SACG6O,YAAWR,EAAYF,iBAI7BK,IAAezE,EAAS4E,cACvB,sBAAK3O,UAAU,qBAAf,UACE,sBAAMA,UAAU,0BAAhB,6BAGA,sBAAMA,UAAU,mCAAhB,SACG6O,YAAWR,EAAYD,6BAUrCvD,GAA8B,KAAlBA,EAAS1G,MACpB,sBACEnE,UAAS,gBAAW6K,EAAS1G,KAApB,6CADX,UAGE,sBAAMnE,UAAU,4CAAhB,SACE,cAAC,IAAD,CACEA,UAAU,wCACVhB,MAAM,QACNe,QAAS,kBAAM+K,EAAY,CAAE3G,KAAM,GAAIsI,QAAS,UAGpD,cAAC,IAAD,CAAgBzM,UAAU,cAC1B,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,oCAAf,SACqB,YAAlB6K,EAAS1G,KAAqB,UAAY,UAE7C,qBAAKnE,UAAU,4BAAf,SAA4C6K,EAAS4B,gBAI3D,qBAAKzM,UAAU,sBAAf,SA9GEwO,IAAezE,EAAS6E,cACnB,cAAC,EAAD,CAAY1E,cAAc,IACxBsE,IAAezE,EAAS4E,aAC1B,cAAC,EAAD,CAAYzE,cAAc,IACrB,cAAC,EAAD,CAAYA,aAAa","file":"static/js/35.fe7c132b.chunk.js","sourcesContent":["/**\n * @description Modal design\n * @done_by Niyongabo\n */\nimport { MdClose } from \"react-icons/md\";\n\nexport enum Themes {\n  default = \"default\",\n  primary = \"primary\",\n  secondary = \"secondary\",\n  danger = \"danger\",\n  success = \"success\",\n  warning = \"warning\",\n}\n\nexport enum ModalMarginTop {\n  none = \"top-0\",\n  small = \"top-28\",\n  medium = \"top-1/3\",\n  large = \"top-1/2\",\n  extra = \"top-2/3\",\n}\n\nexport enum ModalSize {\n  small = \"max-w-sm\",\n  medium = \"max-w-screen-sm\",\n  large = \"max-w-screen-md\",\n  extraLarge = \"max-w-screen-lg\",\n  maxWidth = \"max-w-screen h-full\",\n}\n\ninterface ModalInterface {\n  title?: any;\n  backDrop: boolean;\n  theme: Themes;\n  close: Function;\n  backDropClose: boolean;\n  footer?: any;\n  children: any;\n  widthSizeClass: ModalSize;\n  displayClose: boolean;\n  padding: { title?: boolean; body?: boolean; footer?: boolean };\n  marginTop?: ModalMarginTop;\n}\n\nconst Modal = (props: ModalInterface): JSX.Element => {\n  const {\n    title,\n    backDrop,\n    theme,\n    close,\n    backDropClose,\n    widthSizeClass,\n    displayClose,\n    padding = { title: true, body: true, footer: true },\n  }: ModalInterface = props;\n\n  let themeColor: string;\n\n  switch (theme) {\n    case Themes.primary:\n      themeColor = \"blue-500\";\n      break;\n    case Themes.secondary:\n      themeColor = \"gray-300\";\n      break;\n    case Themes.danger:\n      themeColor = \"red-500\";\n      break;\n    case Themes.success:\n      themeColor = \"green-500\";\n      break;\n    case Themes.warning:\n      themeColor = \"yellow-500\";\n      break;\n    default:\n      themeColor = \"white\";\n      break;\n  }\n  return (\n    <>\n      <div onClick={(): void => backDropClose && close()} className={`animate__animated animate__fadeIn animate__faster modal fixed bg-black bg-opacity-${backDrop === true ? '60' : '0'}`}></div>\n      <div className={`fixed items-center justify-items-center ${props.marginTop === undefined ? ModalMarginTop.none : props.marginTop} left-0 right-0 bottom-0 bg-white rounded shadow-xl self-center ${widthSizeClass} animate__animated ${props.marginTop !== undefined && props.marginTop !== ModalMarginTop.none ? \"animate__fadeInUp\" : \"animate__zoomIn\"} animate__faster`} style={{width: '100%', maxHeight: '99vh', height: `${widthSizeClass === ModalSize.maxWidth ? props.marginTop === undefined ? \"100%\" : \"unset\" : \"fit-content\"}`, overflowY: 'auto', margin: 'auto', zIndex: 99999999}}>\n        <div className={`flex justify-between bg-${themeColor} ${padding.title === true ? \"py-4 px-4\" : \"\" } rounded-t text-${theme === Themes.default || theme === Themes.secondary ? \"black\" : \"white\"}`}>\n          {!title || title === \"\" ? <div></div> : (<h4 className={`text-lg font-bold `}>{title}</h4>)}\n          {displayClose === false ? \"\" : <div className=\"hover:text-red-600 hover:bg-red-100 rounded-full p-1 h-8 w-8\"><MdClose className=\"cursor-pointer font-extrabold text-2xl\" onClick={():void => close()} /></div>}\n        </div>\n        <div\n          className={`space-x-3 ${padding.body === true ? \"py-4 px-4\" : \"\"}`}\n        >\n          <div>{props.children !== \"\" ? props.children : \"\"}</div>\n        </div>\n        {props.footer !== undefined && props.footer !== \"\" ? (\n          <div\n            className={`flex float-right ${\n              padding.footer === true ? \"py-4 px-4\" : \"\"\n            }`}\n          >\n            {props.footer}\n          </div>\n        ) : ( \n          \"\"\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Modal;\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = ({\n  rows,\n  columns,\n  hideColumns = false,\n  pagination = false,\n  search = false,\n  tableSize = \"w-full\",\n  tableClass,\n  tableId = \"myTable\",\n  rounded = false,\n  searchBG = \"bg-gray-200\",\n  thColor = \"blue\",\n  loading = false,\n}) => {\n  const startPage = 1;\n  tableId = tableId === \"myTable\" ? FC_makeID() : tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${tableSize}`}>\n      {/* search box  */}\n      {search && (\n        <div className={`${searchBG} w-full mb-2`}>\n          {search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-transparent\"\n                disabled={loading}\n              />\n\n              {pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-transparent\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <table\n        className={\n          tableClass\n            ? tableClass\n            : `w-full shadow ${\n                rounded && \"sm:rounded-lg\"\n              } table-auto order-table max-w-full`\n        }\n        id={tableId}\n      >\n        {!hideColumns && (\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n            <tr\n              className={`text-left tracking-wide bg-${thColor}-100 border-b-2 border-${thColor}-500 text-${thColor}-600 overflow-hidden`}\n            >\n              {columns.map((column, index) => (\n                <th\n                  key={index}\n                  className={`${column.padding} text-${\n                    column.alignText\n                  } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                  onClick={() =>\n                    column.isSortAllowed && sortThisColumn(tableId, index)\n                  }\n                >\n                  <div className=\"flex items-center gap-1\">\n                    {column.columnTitle}\n                    {column.isSortAllowed && <BiSort />}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n        )}\n        <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n          {rows()}\n        </tbody>\n      </table>\n      {pagination && (\n        <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n          <div>\n            <span className=\"text-xs xs:text-sm text-gray-900\">\n              Showing 1 to {pageSize} of {totalItems - 1} Entries\n            </span>\n          </div>\n          <div>\n            <nav className=\"inline-flex shadow-sm\">\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                    currentPage !== 1 && \"bg-white\"\n                  }`}\n                  aria-label=\"Previous\"\n                  disabled={currentPage === 1 || loading}\n                  onClick={() => setCurrentPage(currentPage - 1)}\n                >\n                  <MdNavigateBefore className=\"h-5 w-5\" />\n                </button>\n              </div>\n              <div>\n                {pages &&\n                  pages.map((page, pageIndex) => (\n                    <button\n                      key={pageIndex}\n                      className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                        page !== currentPage\n                          ? \"bg-white\"\n                          : \"bg-gray-100 cursor-default\"\n                      }`}\n                      disabled={page === currentPage || loading}\n                      onClick={() => setCurrentPage(page)}\n                    >\n                      {page}\n                    </button>\n                  ))}\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                    currentPage !== totalPages && \"bg-white\"\n                  }`}\n                  aria-label=\"Next\"\n                  disabled={currentPage === totalPages || loading}\n                  onClick={() => setCurrentPage(currentPage + 1)}\n                >\n                  <MdNavigateNext className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </nav>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  MdEdit,\n  MdClose,\n  MdErrorOutline,\n  MdHighlightOff,\n} from \"react-icons/md\";\nimport Table from \"../../components/Table/Table\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { StoreState } from \"../../reducers\";\nimport { createAccessRoles, updateAccessRoles } from \"../../actions/access\";\nimport { AccessType } from \"../../reducers/access\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemUserRoleInterface,\n} from \"../../shared/interfaces\";\nimport { TiInputChecked, TiKey } from \"react-icons/ti\";\nimport StepOne from \"./StepOne\";\nimport StepTwo from \"./StepTwo\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\n\nexport enum ModalStateRole {\n  Add_Role_Access,\n  Update_Role_Access,\n  Close_Modal,\n}\n\ninterface AppProps {\n  access: AccessType;\n  createAccessRoles: Function;\n  updateAccessRoles: Function;\n  filterStatus: boolean | \"all\";\n}\n\nconst AccessRole: React.FC<AppProps> = ({\n  access,\n  createAccessRoles,\n  updateAccessRoles,\n  filterStatus,\n}) => {\n  const [roleId, setRoleId] = useState<string>(\"\");\n  const [roleTitle, setRoleTitle] = useState<string>(\"\");\n  const [roleRequirement, setRequirement] = useState<\n    \"none\" | \"district\" | \"school\" | \"room\"\n  >(\"none\");\n  const [stepsStatus, setStepStatus] = useState<{\n    stepOne: boolean;\n    stepTwo: boolean;\n  }>({ stepOne: false, stepTwo: false });\n  const [accessToRole, setAccessToRole] = useState<AccessTaskInterface[]>();\n  const [accessTasks, setAccessTasks] = useState<AccessTaskInterface[] | null>(\n    null\n  );\n  const [openModal, setOpenModal] = useState<ModalStateRole>(\n    ModalStateRole.Close_Modal\n  );\n  const [error, setError] = useState<{ element: string; msg: string }>({\n    element: \"\",\n    msg: \"\",\n  });\n  const [feedBack, setFeedBack] = useState<{\n    type: \"success\" | \"danger\" | \"warning\" | \"\";\n    message: string;\n  }>();\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [viewRole, setViewRole] = useState<boolean>(false);\n  const [roleSelected, setRoleSelected] =\n    useState<SystemUserRoleInterface | null>();\n\n  const whichLevel = (row: SystemUserRoleInterface): string => {\n    if (row.district_required) {\n      return \"District\";\n    } else if (row.room_required) {\n      return \"Room\";\n    } else if (row.school_required) {\n      return \"School\";\n    }\n    return \"None\";\n  };\n\n  const userRows = (): JSX.Element | (false | JSX.Element)[] => {\n    const result = loadCurrentRoles(access.accessRoles).map((row, index) => (\n      <tr\n        key={index}\n        className={`accordion border-b border-grey-light ${\n          roleId === row.system_user_role_id && \"bg-gray-100\"\n        }`}\n      >\n        <td className=\"px-3 py-3 text-left\">{index + 1}</td>\n        <td className=\"text-gray-800 text-base font-medium text-left px-3\">\n          {row.role}\n        </td>\n        <td className=\"text-gray-800 text-base text-left px-3\">\n          {whichLevel(row)}\n        </td>\n        <td className=\"text-right\">\n          <div className=\"inline-flex\">\n            <button\n              className=\"btn bg-gray-300 text-gray-900 hover:bg-gray-600 hover:text-white inline-flex mr-1 focus:outline-none\"\n              onClick={() => {\n                setViewRole(true);\n                setRoleId(row.system_user_role_id);\n                setRoleSelected(row);\n                setRoleTitle(row.role);\n                setRequirement(\n                  row.district_required\n                    ? \"district\"\n                    : row.school_required\n                    ? \"school\"\n                    : row.room_required\n                    ? \"room\"\n                    : \"none\"\n                );\n                setAccessToRole(CustomizeAccess(row.access));\n              }}\n              disabled={roleId === row.system_user_role_id}\n            >\n              <TiKey className=\"h-5 w-5 mr-1\" />\n              <span>Access</span>\n            </button>\n            <button\n              className=\"btn bg-blue-500 text-white hover:bg-blue-700 inline-flex mr-1 focus:outline-none\"\n              onClick={() => {\n                setRoleId(row.system_user_role_id);\n                setRoleTitle(row.role);\n                setFeedBack({ type: \"\", message: \"\" });\n                setOpenModal(ModalStateRole.Update_Role_Access);\n                setAccessToRole(CustomizeAccess(row.access));\n              }}\n              disabled={\n                roleId === row.system_user_role_id &&\n                openModal !== ModalStateRole.Close_Modal\n              }\n            >\n              <MdEdit className=\"h-5 w-5 mr-1\" />\n              <span>Edit</span>\n            </button>\n            {/* <button\n              className=\"btn bg-red-300 text-red-900 hover:bg-red-600 hover:text-white inline-flex mr-1\"\n              onClick={() => {\n                setRoleId(row.system_user_role_id);\n                setFeedBack({ type: \"\", message: \"\" });\n                setRoleTitle(row.role);\n              }}\n              disabled={roleId === row.system_user_role_id}\n            >\n              <MdDelete className=\"h-5 w-5 mr-1\" />\n              <span>Delete</span>\n            </button> */}\n          </div>\n        </td>\n      </tr>\n    ));\n\n    if (result.length >= 1) {\n      return result;\n    } else {\n      return (\n        <tr className=\"accordion border-b border-grey-light hover:bg-gray-100\">\n          <td\n            className=\"text-gray-500 text-sm font-medium text-center px-3\"\n            colSpan={3}\n          >\n            No Data Found\n          </td>\n        </tr>\n      );\n    }\n  };\n\n  const typeRows = (): JSX.Element | (false | JSX.Element)[] => {\n    const roleDetails = access.accessRoles\n      .filter((role) => role.system_user_role_id === roleId)[0]\n      .access.map((access, index) => (\n        <tr\n          key={index}\n          className=\"accordion border-b border-grey-light hover:bg-gray-100\"\n        >\n          <td className=\"text-gray-800 text-xl font-medium text-left px-3 py-2\">\n            {access.task}\n          </td>\n          <td className=\"px-2\">\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.create ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.create ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td className=\"px-2\">\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n              {access.permitted.view ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td className=\"px-2\">\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.update ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.update ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td className=\"px-2\">\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.delete ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.delete ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n        </tr>\n      ));\n\n    if (roleDetails.length >= 1) {\n      return roleDetails;\n    } else {\n      return (\n        <tr className=\"accordion border-b border-grey-light hover:bg-gray-100\">\n          <td\n            className=\"text-gray-500 text-sm font-medium text-center px-3\"\n            colSpan={4}\n          >\n            No Tasks assigned to this Role\n          </td>\n        </tr>\n      );\n    }\n  };\n\n  const CustomizeAccess = (\n    userAccess: AccessTaskInterface[]\n  ): AccessTaskInterface[] => {\n    if (!accessTasks) return [];\n    let newArray: AccessTaskInterface[] = [];\n    let oneAccess: AccessTaskInterface | undefined;\n    accessTasks.forEach((element, index) => {\n      oneAccess = userAccess.find((item) => item.key === element.key);\n      if (oneAccess) {\n        newArray.push(oneAccess);\n      } else {\n        newArray.push(element);\n      }\n    });\n\n    return newArray;\n  };\n\n  useEffect(() => {\n    const loadAccessTasks = async () => {\n      try {\n        const res = await axios.get<\n          {\n            id: string;\n            title: string;\n            key: string;\n            permitted: PermissionInterface;\n          }[]\n        >(`${API.AUTH}/allroleaccess`);\n        if (res) {\n          let data = res.data.map((data) => ({\n            id: data.id,\n            task: data.title,\n            key: data.key,\n            permitted: data.permitted,\n          }));\n          setAccessTasks(data);\n        }\n        // setLoading(false);\n      } catch (error) {\n        console.log({ role_error: error });\n        setFeedBack({ type: \"danger\", message: errorToText(error) });\n      }\n    };\n    loadAccessTasks();\n  }, []);\n\n  const cleanAndCloseModal = (): void => {\n    setStepStatus({ stepOne: false, stepTwo: false });\n    if (openModal !== ModalStateRole.Update_Role_Access) {\n      setRequirement(\"none\");\n      setRoleTitle(\"\");\n      setRoleId(\"\");\n    }\n\n    setLoadingRequest(false);\n    setFeedBack({ type: \"\", message: \"\" });\n    accessTasks && setAccessToRole(accessTasks);\n\n    setError({\n      element: \"\",\n      msg: \"\",\n    });\n    openModal === ModalStateRole.Update_Role_Access &&\n      setOpenModal(ModalStateRole.Close_Modal);\n  };\n\n  const handleSubmit = async (\n    e: React.FormEvent<HTMLFormElement>,\n    step: 1 | 2\n  ) => {\n    e.preventDefault();\n    setFeedBack({ type: \"\", message: \"\" });\n    setError({\n      element: \"\",\n      msg: \"\",\n    });\n    setLoadingRequest(true);\n    if (step === 1) {\n      if (!roleTitle.length) {\n        return setError({\n          element: \"role-title\",\n          msg: \"Role Title is required\",\n        });\n      }\n\n      if (!roleRequirement.length) {\n        setRequirement(\"none\");\n      }\n\n      setStepStatus({ stepOne: true, stepTwo: false });\n    }\n    if (step === 2) {\n      if (\n        accessToRole &&\n        !accessToRole.some(\n          (e) =>\n            e.permitted.create === true ||\n            e.permitted.view === true ||\n            e.permitted.update === true ||\n            e.permitted.delete === true\n        )\n      ) {\n        return setError({\n          element: \"role-access\",\n          msg: \"At least one permission is required\",\n        });\n      }\n\n      try {\n        if (openModal === ModalStateRole.Add_Role_Access) {\n          const res = await axios.post<{ data: SystemUserRoleInterface[] }>(\n            `${API.AUTH}/role`,\n            {\n              role: roleTitle,\n              status: true,\n              district_required: roleRequirement === \"district\" ? true : false,\n              school_required: roleRequirement === \"school\" ? true : false,\n              room_required: roleRequirement === \"room\" ? true : false,\n              access: accessToRole,\n            }\n          );\n          if (res) createAccessRoles(res.data.data);\n          setLoadingRequest(false);\n          cleanAndCloseModal();\n          setFeedBack({\n            type: \"success\",\n            message: `Role has been successfully created.`,\n          });\n        } else {\n          const res = await axios.patch<{ data: SystemUserRoleInterface[] }>(\n            `${API.AUTH}/role`,\n            {\n              role: roleTitle,\n              status: true,\n              district_required: roleRequirement === \"district\" ? true : false,\n              school_required: roleRequirement === \"school\" ? true : false,\n              room_required: roleRequirement === \"room\" ? true : false,\n              access: accessToRole,\n              system_user_role_id: roleId,\n            }\n          );\n          console.log(res.data);\n          if (res) updateAccessRoles(res.data.data);\n          setLoadingRequest(false);\n          cleanAndCloseModal();\n          setFeedBack({\n            type: \"success\",\n            message: `Role has been successfully updated.`,\n          });\n        }\n      } catch (error) {\n        console.log({ role_error: error });\n        setFeedBack({ type: \"danger\", message: errorToText(error) });\n      }\n    }\n    setLoadingRequest(false);\n  };\n\n  const loadCurrentRoles = (\n    accessRoles: SystemUserRoleInterface[]\n  ): SystemUserRoleInterface[] => {\n    if (filterStatus !== \"all\")\n      return accessRoles.filter((role) => role.status === filterStatus);\n    else return accessRoles;\n  };\n\n  const changeViewRole = (role_id: string) => {\n    let result = access.accessRoles.filter(\n      (role) => role.system_user_role_id === role_id\n    )[0];\n    setViewRole(true);\n    setRoleId(result.system_user_role_id);\n    setRoleSelected(result);\n    setRoleTitle(result.role);\n    setRequirement(\n      result.district_required\n        ? \"district\"\n        : result.school_required\n        ? \"school\"\n        : result.room_required\n        ? \"room\"\n        : \"none\"\n    );\n    setAccessToRole(CustomizeAccess(result.access));\n  };\n\n  return (\n    <>\n      {feedBack &&\n        feedBack.type !== \"\" &&\n        openModal === ModalStateRole.Close_Modal && (\n          <div\n            className={`alert-${feedBack.type} flex flex-row items-center relative my-2`}\n          >\n            <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n              <MdClose\n                className=\"h-5 w-5 text-gray-700 hover:font-bold\"\n                title=\"Close\"\n                onClick={() => setFeedBack({ type: \"\", message: \"\" })}\n              />\n            </span>\n            <MdErrorOutline className=\"h-10 w-10\" />\n            <div className=\"alert-content ml-4\">\n              <div className=\"alert-title font-semibold text-lg\">\n                {feedBack.type === \"success\" ? \"Success\" : \"Error\"}\n              </div>\n              <div className=\"alert-description text-sm\">\n                {feedBack.message}\n              </div>\n            </div>\n          </div>\n        )}\n\n      <div\n        className={`w-full bg-white text-right p-2 border border-gray-300 rounded mb-10`}\n      >\n        <button\n          className=\"btn btn-blue\"\n          onClick={() => {\n            setOpenModal(ModalStateRole.Add_Role_Access);\n            accessTasks && setAccessToRole(accessTasks);\n            setRoleId(\"\");\n            setRoleTitle(\"\");\n            setRequirement(\"none\");\n          }}\n          disabled={!accessTasks}\n        >\n          New Role\n        </button>\n        <div className=\"overflow-x-auto w-full mt-2\">\n          <Table\n            columns={[\n              { columnTitle: \"#\", alignText: \"left\" },\n              { columnTitle: \"User Types\", alignText: \"left\" },\n              { columnTitle: \"Level\", alignText: \"left\" },\n              { columnTitle: \"\", alignText: \"center\" },\n            ]}\n            rows={userRows}\n            pagination={true}\n            search={true}\n            searchBG=\"bg-white\"\n            thColor=\"blue\"\n          />\n        </div>\n      </div>\n\n      {/* -----Modal Management----- */}\n      {openModal !== ModalStateRole.Close_Modal && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => {\n            cleanAndCloseModal();\n            setOpenModal(ModalStateRole.Close_Modal);\n          }}\n          displayClose={true}\n          backDropClose={false}\n          title={\n            <div className=\"bg-white text-gray-500 font-bold text-2xl\">\n              {openModal === ModalStateRole.Add_Role_Access\n                ? `Create New `\n                : `Update `}\n              Role\n            </div>\n          }\n          widthSizeClass={ModalSize.extraLarge}\n          padding={{ title: true, body: false, footer: false }}\n        >\n          {/* User Access Select */}\n          <div className=\"h-full bg-gray-100 py-1\">\n            {feedBack && feedBack.type !== \"\" && (\n              <div\n                className={`alert-${feedBack.type} flex flex-row items-center relative mx-3`}\n              >\n                <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n                  <MdClose\n                    className=\"h-5 w-5 text-gray-700 hover:font-bold\"\n                    title=\"Close\"\n                    onClick={() => setFeedBack({ type: \"\", message: \"\" })}\n                  />\n                </span>\n                <MdErrorOutline className=\"h-10 w-10\" />\n                <div className=\"alert-content ml-4\">\n                  <div className=\"alert-title font-semibold text-lg\">\n                    {feedBack.type === \"success\" ? \"Success\" : \"Error\"}\n                  </div>\n                  <div className=\"alert-description text-sm\">\n                    {feedBack.message}\n                  </div>\n                </div>\n              </div>\n            )}\n            <div className=\"grid grid-cols-1 md:grid-cols-3 justify-between gap-3\">\n              <div className=\"bg-white shadow my-3 ml-3 py-2 rounded\">\n                <div\n                  className={`flex row items-center p-3 mb-2 gap-2 cursor-pointer ${\n                    !stepsStatus.stepOne\n                      ? \"text-blue-800 bg-blue-100 border-blue-800 border-l-4\"\n                      : \"text-gray-800 bg-gray-100\"\n                  }`}\n                >\n                  <div className=\"w-10 h-10 bg-white border-2 border-gary-200 rounded-full text-lg text-white flex items-center\">\n                    <span className=\"text-grey-darker text-center w-full text-gray-700\">\n                      1\n                    </span>\n                  </div>\n                  <div className=\"flex flex-col font-semibold text-xl\">\n                    Basic Information\n                    <span className=\"font-normal text-sm\">\n                      Input Role Title & a required field\n                    </span>\n                  </div>\n                </div>\n\n                <div\n                  className={`flex row items-center p-3 mb-2 gap-2 cursor-pointer ${\n                    stepsStatus.stepOne && !stepsStatus.stepTwo\n                      ? \"text-blue-800 bg-blue-100 border-blue-800 border-l-4\"\n                      : \"text-gray-800 bg-gray-100\"\n                  }`}\n                >\n                  <div className=\"w-10 h-10 bg-white border-2 border-gary-200 rounded-full text-lg text-white flex items-center\">\n                    <span className=\"text-grey-darker text-center w-full text-gray-700\">\n                      2\n                    </span>\n                  </div>\n                  <div className=\"flex flex-col font-semibold text-xl\">\n                    Access Permission\n                    <span className=\"font-normal text-sm\">\n                      Give permission to new role\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"md:col-span-2 col-span-1 bg-white shadow my-3 mr-3 py-2 rounded\">\n                {!stepsStatus.stepOne ? (\n                  <StepOne\n                    handleSubmit={handleSubmit}\n                    setRoleTitle={setRoleTitle}\n                    roleTitle={roleTitle}\n                    setOpenModal={setOpenModal}\n                    openModal={openModal}\n                    setRequirement={setRequirement}\n                    roleRequirement={roleRequirement}\n                    error={error}\n                    setError={setError}\n                  />\n                ) : (\n                  accessToRole && (\n                    <StepTwo\n                      handleSubmit={handleSubmit}\n                      roleTitle={roleTitle}\n                      setAccessToRole={setAccessToRole}\n                      accessToRole={accessToRole}\n                      error={error}\n                      setError={setError}\n                      loadingRequest={loadingRequest}\n                    />\n                  )\n                )}\n              </div>\n            </div>\n          </div>\n        </Modal>\n      )}\n\n      {/* -----Modal VIEW Management----- */}\n      {viewRole && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => {\n            setViewRole(false);\n            setRoleId(\"\");\n            setRoleSelected(null);\n            setRoleTitle(\"\");\n            setRequirement(\"none\");\n            setAccessToRole(undefined);\n          }}\n          displayClose={true}\n          backDropClose={false}\n          title={\n            <div className=\"bg-white text-gray-500 font-bold text-2xl\">\n              {roleTitle} Role\n            </div>\n          }\n          widthSizeClass={ModalSize.large}\n          padding={{ title: true, body: false, footer: false }}\n        >\n          {/* User Access Select */}\n          <div className=\"h-full bg-gray-100 py-1\">\n            <div className=\"my-3 flex justify-between items-start px-2\">\n              <div>\n                <div className=\"flex flex-col\">\n                  <select\n                    className={`rounded px-2 py-2 w-full bg-white focus:outline-none border-gray-400 border-2`}\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                      changeViewRole(e.target.value)\n                    }\n                    value={roleId}\n                    disabled={loadingRequest}\n                  >\n                    <option value=\"\">Document Category</option>\n                    {loadCurrentRoles(access.accessRoles).map((item, index) => (\n                      <option\n                        key={index + item.system_user_role_id}\n                        value={item.system_user_role_id}\n                      >\n                        {item.role}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                {roleSelected?.district_required && (\n                  <div className=\"flex items-center text-lg gap-1\">\n                    <span className=\"text-gray-600\">District: </span>\n                    <h1 className=\"font-medium text-gray-900\">Required</h1>\n                  </div>\n                )}\n                {roleSelected?.school_required && (\n                  <div className=\"flex items-center text-lg gap-1\">\n                    <span className=\"text-gray-600\">School: </span>\n                    <h1 className=\"font-medium text-gray-900\">Required</h1>\n                  </div>\n                )}\n                {roleSelected?.room_required && (\n                  <div className=\"flex items-center text-lg gap-1\">\n                    <span className=\"text-gray-600\">Room: </span>\n                    <h1 className=\"font-medium text-gray-900\">Required</h1>\n                  </div>\n                )}\n                {/* {roleSelected?.district_required &&<div className=\"flex items-center text-lg gap-1\">\n                  <span className=\"text-gray-600\">Room: </span>\n                  <h1 className=\"font-medium text-gray-900\">Required</h1>\n                </div>} */}\n              </div>\n              <button\n                className=\"btn bg-blue-500 text-white hover:bg-blue-700 inline-flex mr-1\"\n                onClick={() => {\n                  setOpenModal(ModalStateRole.Update_Role_Access);\n                  setViewRole(false);\n                  setStepStatus({ stepOne: true, stepTwo: false });\n                }}\n                disabled={openModal !== ModalStateRole.Close_Modal}\n              >\n                <MdEdit className=\"h-5 w-5 mr-1\" />\n                <span>Edit</span>\n              </button>\n            </div>\n            {/* <div className=\"flex justify-center\">\n                <h2 className=\"text-2xl font-semibold text-center text-gray-600 flex flex-row items-center\">\n                  <BiRightArrowAlt className=\"w-7 h-7\" />\n                  {this.state.currentaccess.task}\n                </h2>\n              </div> */}\n\n            <Table\n              columns={[\n                {\n                  columnTitle: \"Access Name\",\n                  alignText: \"left\",\n                  padding: \"p-3\",\n                },\n                { columnTitle: \"Create\", alignText: \"left\" },\n                { columnTitle: \"View\", alignText: \"left\" },\n                { columnTitle: \"Update\", alignText: \"left\" },\n                { columnTitle: \"Delete\", alignText: \"left\" },\n              ]}\n              rows={typeRows}\n              pagination={false}\n              search={true}\n              searchBG=\"bg-gray-100\"\n              thColor=\"gray\"\n              tableId=\"tableAccessForm\"\n            />\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = ({ access }: StoreState): { access: AccessType } => {\n  return { access: access };\n};\n\nexport default connect(mapStateToProps, {\n  createAccessRoles,\n  updateAccessRoles,\n})(AccessRole);\n","import React from \"react\";\nimport { ModalStateRole } from \"./AccessRole\";\ninterface AppProps {\n  handleSubmit: (e: React.FormEvent<HTMLFormElement>, step: 1 | 2) => void;\n  setRoleTitle: React.Dispatch<React.SetStateAction<string>>;\n  roleTitle: string;\n  setOpenModal: React.Dispatch<React.SetStateAction<ModalStateRole>>;\n  openModal: ModalStateRole;\n  setRequirement: React.Dispatch<\n    React.SetStateAction<\"none\" | \"district\" | \"school\" | \"room\">\n  >;\n  roleRequirement: \"none\" | \"district\" | \"school\" | \"room\";\n  error: {\n    element: string;\n    msg: string;\n  };\n  setError: React.Dispatch<\n    React.SetStateAction<{\n      element: string;\n      msg: string;\n    }>\n  >;\n}\nconst StepOne: React.FC<AppProps> = ({\n  handleSubmit,\n  openModal,\n  setRoleTitle,\n  roleTitle,\n  roleRequirement,\n  setRequirement,\n  error,\n  setError,\n}) => {\n  return (\n    <div>\n      <form className=\"max-w-xl mx-auto\" onSubmit={(e) => handleSubmit(e, 1)}>\n        <h1 className=\"text-3xl font-semibold mt-3 mb-5 text-center\">\n          Basic Information\n        </h1>\n        <div className=\"-mx-3 md:flex mb-6\">\n          <div className=\"md:w-full px-3\">\n            <label\n              htmlFor=\"role-title\"\n              className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n            >\n              Role\n            </label>\n            <input\n              type=\"text\"\n              className={`text-left input-white w-20 inline-block border-2 ${\n                error.element === \"role-title\"\n                  ? \"border-red-500\"\n                  : \"border-gray-500\"\n              }`}\n              value={roleTitle}\n              placeholder=\"Role title\"\n              onChange={(e) => {\n                setRoleTitle(e.target.value);\n                setError({\n                  element: \"\",\n                  msg: \"\",\n                });\n              }}\n              // disabled={openModal !== ModalStateRole.Update_Role_Access}\n            />\n            <p\n              className={`text-red-700 mt-1 ml-1 text-sm italic ${\n                error.element !== \"role-title\" && \"hidden\"\n              }`}\n            >\n              {error.msg}\n            </p>\n          </div>\n        </div>\n\n        <div className=\"flex flex-col mb-5\">\n          <label>Filed</label>\n          <span className=\"text-gray-500 text-sm\">\n            Required Field for this role\n          </span>\n          <div className=\"grid grid-flow-row grid-cols-4 grid-rows- gap-4\">\n            <label className=\"inline-flex items-center mt-3\">\n              <input\n                type=\"radio\"\n                name=\"field\"\n                className=\"form-radio h-5 w-5 text-gray-600\"\n                onChange={() => {\n                  setRequirement(\"none\");\n                  setError({\n                    element: \"\",\n                    msg: \"\",\n                  });\n                }}\n                checked={roleRequirement === \"none\"}\n              />\n              <span className=\"ml-2 text-gray-700\">None</span>\n            </label>\n            <label className=\"inline-flex items-center mt-3\">\n              <input\n                type=\"radio\"\n                name=\"field\"\n                className=\"form-radio h-5 w-5 text-gray-600\"\n                onChange={() => setRequirement(\"district\")}\n                checked={roleRequirement === \"district\"}\n              />\n              <span className=\"ml-2 text-gray-700\">District</span>\n            </label>\n            <label className=\"inline-flex items-center mt-3\">\n              <input\n                type=\"radio\"\n                name=\"field\"\n                className=\"form-radio h-5 w-5 text-gray-600\"\n                onChange={() => setRequirement(\"school\")}\n                checked={roleRequirement === \"school\"}\n              />\n              <span className=\"ml-2 text-gray-700\">School</span>\n            </label>\n            <label className=\"inline-flex items-center mt-3\">\n              <input\n                type=\"radio\"\n                name=\"field\"\n                className=\"form-radio h-5 w-5 text-gray-600\"\n                onChange={() => setRequirement(\"room\")}\n                checked={roleRequirement === \"room\"}\n              />\n              <span className=\"ml-2 text-gray-700\">Room</span>\n            </label>\n          </div>\n          <p\n            className={`text-red-700 mt-1 ml-1 text-xs italic ${\n              error.element !== \"role-field\" && \"hidden\"\n            }`}\n          >\n            {error.msg}\n          </p>\n        </div>\n        <div className=\"flex justify-end gap-5 mt-4\">\n          <button\n            className=\"btn bg-primary text-white hover:bg-blue-600 focus:outline-none\"\n            type=\"submit\"\n            // disabled\n          >\n            Save & Continue\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default StepOne;\n","import React from \"react\";\nimport {\n  MdArrowForward,\n  MdDelete,\n  MdEdit,\n  MdRemoveRedEye,\n} from \"react-icons/md\";\nimport { SiAddthis } from \"react-icons/si\";\nimport Table from \"../../components/Table/Table\";\nimport { AccessTaskInterface } from \"../../shared/interfaces\";\ninterface AppProps {\n  handleSubmit: (e: React.FormEvent<HTMLFormElement>, step: 1 | 2) => void;\n  roleTitle: string;\n  setAccessToRole: React.Dispatch<\n    React.SetStateAction<AccessTaskInterface[] | undefined>\n  >;\n  accessToRole: AccessTaskInterface[];\n  error: {\n    element: string;\n    msg: string;\n  };\n  setError: React.Dispatch<\n    React.SetStateAction<{\n      element: string;\n      msg: string;\n    }>\n  >;\n  loadingRequest: boolean;\n}\n\nconst StepOne: React.FC<AppProps> = ({\n  handleSubmit,\n  setAccessToRole,\n  accessToRole,\n  roleTitle,\n  error,\n  setError,\n  loadingRequest,\n}) => {\n  const updateFieldChanged = (\n    index: number,\n    target: \"create\" | \"view\" | \"update\" | \"delete\",\n    value: boolean\n  ) => {\n    let newArr: AccessTaskInterface[] = [...accessToRole]; // copying the old datas array\n    switch (target) {\n      case \"create\":\n        newArr[index].permitted.create = value;\n        break;\n      case \"view\":\n        newArr[index].permitted.view = value;\n        break;\n      case \"update\":\n        newArr[index].permitted.update = value;\n        break;\n      default:\n        newArr[index].permitted.delete = value;\n        break;\n    }\n\n    setAccessToRole(newArr);\n  };\n  const formTasks = (): JSX.Element[] => {\n    console.log({ accessToRole });\n    return accessToRole.map((access, index) => (\n      <tr\n        key={access.id + index}\n        className=\"accordion border-b border-grey-light hover:bg-gray-100\"\n      >\n        <td className=\"text-gray-800 text-base font-medium text-left px-3\">\n          {access.task}\n        </td>\n        <td className=\"py-1 px-3\">\n          <input\n            type=\"checkbox\"\n            className=\"form-checkbox h-5 w-5 text-gray-600\"\n            onChange={() => {\n              updateFieldChanged(index, \"create\", !access.permitted.create);\n              setError({ element: \"\", msg: \"\" });\n            }}\n            checked={access.permitted.create}\n          />\n        </td>\n        <td className=\"py-1 px-3\">\n          <input\n            type=\"checkbox\"\n            className=\"form-checkbox h-5 w-5 text-gray-600\"\n            onChange={() => {\n              updateFieldChanged(index, \"view\", !access.permitted.view);\n              setError({ element: \"\", msg: \"\" });\n            }}\n            checked={access.permitted.view}\n          />\n        </td>\n        <td className=\"py-1 px-3\">\n          <input\n            type=\"checkbox\"\n            className=\"form-checkbox h-5 w-5 text-gray-600\"\n            onChange={() => {\n              updateFieldChanged(index, \"update\", !access.permitted.update);\n              setError({ element: \"\", msg: \"\" });\n            }}\n            checked={access.permitted.update}\n          />\n        </td>\n        <td className=\"py-1 px-3\">\n          <input\n            type=\"checkbox\"\n            className=\"form-checkbox h-5 w-5 text-gray-600\"\n            onChange={() => {\n              updateFieldChanged(index, \"delete\", !access.permitted.delete);\n              setError({ element: \"\", msg: \"\" });\n            }}\n            checked={access.permitted.delete}\n          />\n        </td>\n      </tr>\n    ));\n  };\n  return (\n    <div>\n      <form className=\"max-w-xl mx-auto\" onSubmit={(e) => handleSubmit(e, 2)}>\n        <div className=\"mb-5\">\n          <div className=\"mb-5 mt-3\">\n            <h1 className=\"text-3xl font-semibold text-center\">\n              Access Permissions Settings\n            </h1>\n            <div className=\"flex items-center gap-2 mt-1 justify-center\">\n              <MdArrowForward className=\"w-6 h-6\" />\n              <h1 className=\"text-xl font-semibold text-gray-600 text-center\">\n                {roleTitle}\n              </h1>\n            </div>\n          </div>\n          <div className=\"md:flex mb-3\">\n            <div className=\"grid grid-cols-2 grid-rows-2 gap-4\">\n              <div className=\"inline-flex gap-2 items-center\">\n                <SiAddthis className=\"w-12 h-12 text-gray-600\" />\n                <div className=\"flex flex-col\">\n                  <h3 className=\"font-semibold text-xl\">Create</h3>\n                  <span className=\"text-gray-600 text-sm md:pr-1\">\n                    This permission gives the user the ability to create\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"inline-flex gap-2 items-center\">\n                <MdRemoveRedEye className=\"w-12 h-12 text-gray-600\" />\n                <div className=\"flex flex-col\">\n                  <h3 className=\"font-semibold text-xl\">View</h3>\n                  <span className=\"text-gray-600 text-sm md:pr-1\">\n                    This permission gives the user the ability to view\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"inline-flex gap-2 items-center\">\n                <MdEdit className=\"w-12 h-12 text-gray-600\" />\n                <div className=\"flex flex-col\">\n                  <h3 className=\"font-semibold text-xl\">Update</h3>\n                  <span className=\"text-gray-600 text-sm md:pr-1\">\n                    This permission gives the user the ability to update\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"inline-flex gap-2 items-center\">\n                <MdDelete className=\"w-12 h-12 text-gray-600\" />\n                <div className=\"flex flex-col\">\n                  <h3 className=\"font-semibold text-xl\">Delete</h3>\n                  <span className=\"text-gray-600 text-sm md:pr-1\">\n                    This permission gives the user the ability to delete\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <p\n            className={`text-red-700 mt-1 ml-1 text-base italic ${\n              error.element !== \"role-access\" && \"hidden\"\n            }`}\n          >\n            {error.msg}\n          </p>\n\n          <Table\n            columns={[\n              {\n                columnTitle: \"Access Name\",\n                alignText: \"left\",\n                padding: \"p-3\",\n              },\n              { columnTitle: \"Create\", alignText: \"left\" },\n              { columnTitle: \"View\", alignText: \"left\" },\n              { columnTitle: \"Update\", alignText: \"left\" },\n              { columnTitle: \"Delete\", alignText: \"left\" },\n            ]}\n            rows={formTasks}\n            pagination={false}\n            search={true}\n            thColor=\"gray\"\n          />\n\n          <div className=\"flex justify-end gap-5 mt-4\">\n            <button\n              className=\"btn bg-primary text-white hover:bg-blue-600 focus:outline-none\"\n              type=\"submit\"\n              disabled={loadingRequest}\n            >\n              {loadingRequest === true ? \"Savig...\" : \"Complete\"}\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default StepOne;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdClose, MdErrorOutline, MdLock } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { StoreState } from \"../../reducers\";\nimport AccessRole from \"./AccessRole\";\nimport { fetchAccessRoles } from \"../../actions/access\";\nimport { AccessType } from \"../../reducers/access\";\nimport {\n  MainItem,\n  SideNavigation,\n} from \"../../components/Navigation/SideNavigation\";\nimport { toTwoDigit } from \"../../shared/dataTest\";\n\nenum TabTypes {\n  All_Roles = \"All Roles\",\n  Active_Roles = \"Active Roles\",\n  Blocked_Roles = \"Blocked Roles\",\n}\n\ninterface AppProps {\n  access: AccessType;\n  fetchAccessRoles: Function;\n}\n\nconst Index: React.FC<AppProps> = ({ access, fetchAccessRoles }) => {\n  const [labelCounts, setLabelCounts] = useState<{\n    allRole: number;\n    activeRole: number;\n    blockedRole: number;\n  }>({\n    allRole: 0,\n    activeRole: 0,\n    blockedRole: 0,\n  });\n  const [roleStatus, setRoleStatus] = useState<TabTypes>(TabTypes.All_Roles);\n  const [feedBack, setFeedBack] = useState<{\n    type: \"success\" | \"danger\" | \"warning\" | \"\";\n    message: string;\n  }>();\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (!access.accessRoles.length) {\n      fetchAccessRoles();\n    }\n\n    if (access.accessRoles.length) {\n      setLabelCounts({\n        allRole: access.accessRoles.length,\n        activeRole: access.accessRoles.filter((role) => role.status).length,\n        blockedRole: access.accessRoles.filter((role) => !role.status).length,\n      });\n      setLoading(false);\n    }\n  }, [access.accessRoles, fetchAccessRoles]);\n\n  const handleTabs = (): JSX.Element => {\n    if (roleStatus === TabTypes.Blocked_Roles) {\n      return <AccessRole filterStatus={false} />;\n    } else if (roleStatus === TabTypes.Active_Roles) {\n      return <AccessRole filterStatus={true} />;\n    } else return <AccessRole filterStatus=\"all\" />;\n  };\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading roles...\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <SideNavigation>\n        <span className=\"text-sm mt-2\">Filter by Status</span>\n        <section\n          className=\"mt-1\"\n          onClick={() => setRoleStatus(TabTypes.All_Roles)}\n        >\n          <MainItem\n            title={\"All Role\"}\n            count={labelCounts.allRole}\n            active={roleStatus === TabTypes.All_Roles ? true : false}\n          />\n        </section>\n        <section\n          className=\"mt-1\"\n          onClick={() => setRoleStatus(TabTypes.Active_Roles)}\n        >\n          <MainItem\n            title={\"Active Role\"}\n            count={labelCounts.activeRole}\n            active={roleStatus === TabTypes.Active_Roles ? true : false}\n          />\n        </section>\n        <section\n          className=\"mt-1\"\n          onClick={() => setRoleStatus(TabTypes.Blocked_Roles)}\n        >\n          <MainItem\n            title={\"Disabled Role\"}\n            count={labelCounts.blockedRole}\n            active={roleStatus === TabTypes.Blocked_Roles ? true : false}\n          />\n        </section>\n      </SideNavigation>\n      {/* Title */}\n      <div className=\"w-full my-5 px-1\">\n        {/* header title */}\n        <div className=\"flex flex-row items-center\">\n          <MdLock className=\"text-blue-700 w-28 h-28\" />\n          <div className=\"flex flex-col\">\n            <h1 className=\"text-3xl font-semibold\">System Roles Management</h1>\n            <div className=\"flex flex-row items-center mx-2 md:gap-3 gap-2\">\n              <div className=\"flex flex-col mt-1\">\n                <span className=\"text-gray-600 text-base\">All Role(s)</span>\n                <span className=\"text-gray-600 text-3xl font-bold\">\n                  {toTwoDigit(labelCounts.allRole)}\n                </span>\n              </div>\n              {roleStatus !== TabTypes.Blocked_Roles && (\n                <div className=\"flex flex-col mt-1\">\n                  <span className=\"text-gray-600 text-base\">\n                    Active Role(s)\n                  </span>\n                  <span className=\"text-gray-600 text-3xl font-bold\">\n                    {toTwoDigit(labelCounts.activeRole)}\n                  </span>\n                </div>\n              )}\n              {roleStatus !== TabTypes.Active_Roles && (\n                <div className=\"flex flex-col mt-1\">\n                  <span className=\"text-gray-600 text-base\">\n                    Blocked Role(s)\n                  </span>\n                  <span className=\"text-gray-600 text-3xl font-bold\">\n                    {toTwoDigit(labelCounts.blockedRole)}\n                  </span>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n      </div>\n      {/* Feedback */}\n      {feedBack && feedBack.type !== \"\" && (\n        <div\n          className={`alert-${feedBack.type} flex flex-row items-center relative my-2`}\n        >\n          <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n            <MdClose\n              className=\"h-5 w-5 text-gray-700 hover:font-bold\"\n              title=\"Close\"\n              onClick={() => setFeedBack({ type: \"\", message: \"\" })}\n            />\n          </span>\n          <MdErrorOutline className=\"h-10 w-10\" />\n          <div className=\"alert-content ml-4\">\n            <div className=\"alert-title font-semibold text-lg\">\n              {feedBack.type === \"success\" ? \"Success\" : \"Error\"}\n            </div>\n            <div className=\"alert-description text-sm\">{feedBack.message}</div>\n          </div>\n        </div>\n      )}\n      <div className=\"p-2 overflow-x-auto\">{handleTabs()}</div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ access }: StoreState): { access: AccessType } => {\n  return { access: access };\n};\n\nexport const AccessManagement = connect(mapStateToProps, {\n  fetchAccessRoles,\n})(Index);\n"],"sourceRoot":""}
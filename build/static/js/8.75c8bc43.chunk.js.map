{"version":3,"sources":["interfaces/question.ts","utils/search.ts","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","interfaces/candidatesInterfaces.ts","interfaces/events.ts","interfaces/position.ts","containers/Application/ApplicationPositions/SchoolLevelsFilter/SchoolLevelsItem.tsx","containers/Application/ApplicationPositions/SchoolLevelsFilter/SchoolLevelsFilter.tsx","components/Courses/Courses.tsx","utils/question_bank.ts","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","containers/QuestionBank/AddQuestion/UploadQuestion/EditQuestion/EditQuestion.tsx","containers/QuestionBank/AddQuestion/UploadQuestion/UploadedQuestions/UploadedQuestions.tsx","containers/QuestionBank/AddQuestion/UploadQuestion/EditQuestion/QuestionAnswer.tsx","containers/QuestionBank/AddQuestion/UploadQuestion/EditQuestion/HandleInput.tsx","containers/QuestionBank/AddQuestion/UploadQuestion/EditQuestion/QuestionChapters.tsx","containers/QuestionBank/AddQuestion/UploadQuestion/Upload.tsx","containers/QuestionBank/AddQuestion/UploadQuestion/UploadQuestion.tsx"],"names":["questionTypeElementsType","QuestionLanguage","questionTypeElements","key","SingleMultiple","value","MultipleChoice","CalculatedMultipleChoice","TrueFalse","Matching","Numeric","SimpleCalculate","ShortAnswer","QuestionLanguages","Eng","Fr","Kiny","search","objList","text","keys","undefined","filter","product","flag","dataKeys","prop","toString","toLowerCase","indexOf","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","DocumentStatus","Events","ExamEvents","ExamEventTypes","validateDocCategory","requirement","userDocuments","find","item","category_id","category","user_detail_category_id","validateDocSubcategory","result","position_requirement","filterData","category_subcategory_data","category_subcategory_Data_id","_id","required","push","category_subcat_id","user_detail_subcategory_id","subcategory","console","log","returnValidatePosition","requirements","documents","status","SchoolLevelsItem","props","useState","levelsDropDown","setLevelsDropDown","className","onClick","searchLevel","schoolLevel","educationCategoryDetails","education_institute_id","educationCategory","setSearchLevel","initializeItem","education_category_title","description","activateItem","schoolLevels","map","education_institute","itm","educationCate","activateLevelItem","school_level_name","SchoolLevelsFilter","educationCategories","Loading","_UploadQuestion","setLoading","setState","loading","setSelectedEducationCategory","setSelectedSchoolLevel","showFilter","setSchoolLevelFilterFn","filteredCourses","courses","searched","filtered","school_levels","itm1","school_level_id","item2","setUploadingStatus","uploadingStatus","componentDidMount","course","loadCourses","state","searchCourseInput","this","education_categories","loadEducationCategories","loadSchoolLevels","onChange","target","type","placeholder","style","minHeight","searchData","setSelectedCourse","selected_course_id","course_id","course_name","course_code","title","backDrop","theme","Themes","default","close","backDropClose","widthSizeClass","ModalSize","medium","displayClose","padding","Component","UploadQuestion","connect","auth","questionBank","getQuestionType","question_types","type_id","check","id","check_type","element","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","substr","stringify","arr","offset","arguments","v4","options","buf","rnds","random","SelectedKeysEdit","UploadedQuestions","prepareExam","setUploadedQuestions","addExamQuestion","IncrementQuestionBank","redirect","setRedirect","setExam","setSetExam","useEffect","questionTypes","loadQuestionTypes","to","uploadedQuestions","insertedData","selectedCourse","selected","returnToCourse","insertedCount","window","confirm","selected_course","questions","x","addToExam","selectedQuestion","clearUploadedQuestionsStore","selectQuestion","question","QuestionAnswer","addedAnswer","setAddedAnswer","showAddAnswerStatus","setShowAddAnswer","selectedKey","updateMarks","parseInt","marks","setSelectedKey","lang","answer","uuidv4","backup","handleStatus","alert","selectedQL","wholeQuestion","language","addAnswerSingleMultiple","AddAnswer","selectedQuestionType","selectedQuestionItem","selectedLanguage","updateAnswerSingleMultiple","editSingleMultipleStatus","removeAnswerSingleMultiple","HandleInput","Title","languages","questionItems","handleUpdateQuestionDetails","Description","QuestionChapters","chapters","setAddChapter","addedChapters","name","_EditQuestion","QuestionLang","res","actionStatus","msg","PushPopupAlert","PopupAlertTheme","success","danger","updatedQuestion","current","editedAnswerIndex","editedAnswer","newFiltered","removed","answer_id","ans","chapter_id","submitEditedQuestion","a","UpdateQuestion","customNumber","unSelectQuestion","showQuestionChapters","LoadingType","white","onSubmit","Modal","large","Courses","EditQuestion","system","Upload","loadQuestionBank","setQuestions","formError","setFormError","upload_percentage","set_upload_percentage","showQuestionEdit","setShowQuestionEdit","validateExcelFile","file","submitQuestion","preventDefault","size","formData","FormData","append","axios","post","API","QBank","onUploadProgress","progressEvent","number_percentage","loaded","total","data","response","errors","message","files","Math","round","Alert","AlertInterface","width","questionsList"],"mappings":"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","file":"static/js/8.75c8bc43.chunk.js","sourcesContent":["import { course } from \"./course\";\n\n// Multiple question interface\nexport interface question_answer {\n  answer: string;\n  status: boolean;\n}\nexport interface psychometric_question {\n  question_id: string;\n  question_title: string;\n  question_description: string;\n  question_answers: question_answer[]\n}\n\nexport enum questionTypeElementsType {\n  SingleMultiple = \"Single Multiple\",\n  MultipleChoice = \"MultipleChoice\",\n  CalculatedMultipleChoice = \"Calculated multichoice\",\n  TrueFalse = \"true or false\",\n  Matching = \"Matching\",\n  Numeric = \"Numerical\",\n  SimpleCalculate = \"Simple Calculate\",\n  ShortAnswer = \"Short Answer\",\n}\n\nexport const questionTypeElements: { key: questionTypeElementsType; value: string; }[] = [\n  {\n    key: questionTypeElementsType.SingleMultiple,\n    value: \"Single Multiple choice Question\",\n  },\n  {\n    key: questionTypeElementsType.MultipleChoice,\n    value: \"Multiple choice Question\",\n  },\n  {\n    key: questionTypeElementsType.CalculatedMultipleChoice,\n    value: \"Calculated Multiple choice Question\",\n  },\n  {\n    key: questionTypeElementsType.TrueFalse,\n    value: \"True & False Question\",\n  },\n  {\n    key: questionTypeElementsType.Matching,\n    value: \"Matching Question\",\n  },\n  {\n    key: questionTypeElementsType.Numeric,\n    value: \"Numeric Question\",\n  },\n  {\n    key: questionTypeElementsType.SimpleCalculate,\n    value: \"Simple calculation Question\",\n  },\n  {\n    key: questionTypeElementsType.ShortAnswer,\n    value: \"Short answer Question\",\n  },\n];\n\nexport interface questionType {\n  status: number;\n  title: string;\n  element: questionTypeElementsType;\n  description: string;\n  createdAt?: string;\n  updatedAt?: string;\n  id?: string;\n}\n\nexport interface uploadQuestions {\n  course: course;\n  questionsFile: File[];\n}\n\nenum QuestionLanguage {\n  Eng = \"Eng\",\n  Fr = \"Fr\",\n  Kiny = \"Kiny\",\n}\n\nexport interface LanguageInterface { key: QuestionLanguage; value: string }\n\nexport const QuestionLanguages: { key: QuestionLanguage; value: string }[] = [\n  { key: QuestionLanguage.Eng, value: \"English\" },\n  { key: QuestionLanguage.Fr, value: \"French\" },\n  { key: QuestionLanguage.Kiny, value: \"Kiny\" },\n]\n\nexport interface uploadQuestionsResponse {\n  insertedCount: number;\n  insertedData: QuestionInterface[]\n  insertedIds: string[];\n  result: {ok: number, n: number}\n}\n\nexport interface QuestionItemInterface {\n  description: string;\n  language: QuestionLanguage;\n  status: number;\n  title: string;\n  answer: QuestionAnswerInterface[]\n}\n\nexport interface QuestionInterface {\n  id: string;\n  course: string; // Course ID\n  question: QuestionItemInterface[];\n  type: questionTypeElementsType | \"Invalid\";\n  chapters: string[] // CourseChapter: ID\n  customNumber: number;\n  marks: number;\n  answer: QuestionAnswerInterface | QuestionAnswerInterface[];\n}\n\n// export interface QuestionAnswerInterface {\n//   value: string | string[] | number[];\n//   status: boolean | string | string[] | number[];\n// }\nexport interface QuestionAnswerInterface {\n  id: string;\n  value: string;\n  status: boolean;\n}","const search = (objList: any[], text: any, keys: any = null) => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    let dataKeys = keys === null ? product : keys;\n    for (let prop in dataKeys) {\n      flag = false;\n      flag =\n        product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) > -1;\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nexport default search;\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export interface CandidateInterface {\n  n_id: string;\n  fname: string;\n  lname: string;\n  date_of_birth: string;\n  district: string;\n  email: string;\n  phone_number: string;\n  stopped: boolean;\n  user_id: string;\n  // more details\n  application_number: string;\n  cell: string;\n  civil_status: string;\n  country_of_birth: string;\n  date_of_expiry: string;\n  date_of_issue: string;\n  document_type: string;\n  father_names: string;\n  issue_number: string;\n  mother_names: string;\n  photo: string;\n  place_of_birth: string;\n  place_of_issue: string;\n  province: string;\n  sector: string;\n  sex: string;\n  spouse?: any;\n  status: string;\n  village: string;\n  village_id: string;\n  // temporary details\n  active?: boolean;\n  ref?: any;\n  muted?: boolean;\n  room_id?: string;\n  video?: boolean;\n  stream?: any;\n  peer?: any;\n  peer_id?: any;\n  type?: any;\n  id?: string;\n}\n\nexport interface CandidateProctoringInterface {\n  fname: string;\n  lname: string;\n  email: string;\n  stopped: boolean;\n  user_id: string;\n  active: boolean;\n  // others\n  ref?: any;\n  muted?: boolean;\n  peer?: any;\n  peer_id?: any;\n}\n\nexport interface DocumentsCategories {\n  description: string;\n  fields: string[];\n  title: string;\n  user_detail_category_id: string;\n}\n\nexport interface DocumentsCategoriesWithCount {\n  description: string;\n  fields: string[];\n  title: string;\n  user_detail_category_id: string;\n  count: number;\n}\n\nexport interface DocumentSubCategories {\n  category_id: string;\n  description: string;\n  title: string;\n  user_detail_subcategory_id: string;\n}\n// export interface CategorySubcategoryData {\n//   category_id: string;\n//   category_subcategory_id: string;\n//   description: string;\n//   others: {\n//     key: string;\n//     value: string;\n//   }[];\n//   subcategory_id: string;\n//   title: string;\n// }\n\nexport interface CategorySubcategoryData {\n  category_id: string;\n  subcategory_id: string;\n  title: string;\n  description: string;\n  others: {\n    key: string;\n    value: string;\n  }[];\n  category_subcategory_Data_id: string;\n}\n\nexport interface DocumentUser_API {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: string;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  doc_id: string;\n  category_subcategory_data: string;\n}\n\nexport interface DocumentUser {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  doc_id: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport interface SchoolInterface {\n  district_id: string;\n  education_category_id: string;\n  school_name: string;\n  status: boolean;\n  _id: string;\n}\n\nexport enum DocumentStatus {\n  Waiting = \"waiting\",\n  Rejected = \"rejected\",\n  Approved = \"approved\",\n}\n","export enum Events {\n  USER_CONNECTED = \"user-connected\",\n  USER_DISCONNECTED = \"user-disconnected\",\n  JOIN_ROOM = \"join-room\",\n}\n\nexport enum ExamEvents {\n  START_EXAM_CLIENT = \"START_EXAM_CLIENT\",\n  START_EXAM_SERVER = \"START_EXAM_SERVER\",\n\n  STOP_EXAM_CLIENT = \"STOP_EXAM_CLIENT\",\n  STOP_EXAM_SERVER = \"STOP_EXAM_SERVER\",\n\n  CAND_EVENT_CLIENT = \"CAND_EVENT_CLIENT\",\n  CAND_EVENT_SERVER = \"CAND_EVENT_SERVER\",\n\n  CAND_CONTINUE_EXAM_SERVER = \"CAND_CONTINUE_EXAM_SERVER\",\n  CAND_CONTINUE_EXAM_CLIENT = \"CAND_CONTINUE_EXAM_CLIENT\",\n\n  CAND_STOP_EXAM_CLIENT = \"CAND_STOP_EXAM_CLIENT\",\n  CAND_STOP_EXAM_SERVER = \"CAND_STOP_EXAM_SERVER\",\n\n  CAND_RESTART_EXAM_CLIENT = \"CAND_RESTART_EXAM_CLIENT\",\n  CAND_RESTART_EXAM_SERVER = \"CAND_RESTART_EXAM_SERVER\",\n\n  ALL_CAND_RESTART_EXAM_CLIENT = \"ALL_CAND_RESTART_EXAM_CLIENT\",\n  ALL_CAND_RESTART_EXAM_SERVER = \"ALL_CAND_RESTART_EXAM_SERVER\",\n\n  CAND_WARNING_EXAM_CLIENT = \"CAND_WARNING_EXAM_CLIENT\",\n  CAND_WARNING_EXAM_SERVER = \"CAND_WARNING_EXAM_SERVER\",\n\n  CAND_BRODCAST_MSG_CLIENT = \"CAND_BRODCAST_MSG_CLIENT\",\n  CAND_BRODCAST_MSG_SERVER = \"CAND_BRODCAST_MSG_SERVER\",\n\n  CAND_PRIVATE_MSG_CLIENT = \"CAND_PRIVATE_MSG_CLIENT\",\n  CAND_PRIVATE_MSG_SERVER = \"CAND_PRIVATE_MSG_SERVER\",\n\n  CAND_EXAM_EVENT_CLIENT = \"CAND_EXAM_EVENT_CLIENT\",\n  CAND_EXAM_EVENT_SERVER = \"CAND_EXAM_EVENT_SERVER\",\n}\n\nexport enum ExamEventTypes {\n  PASTE_A_TEXT = \"PASTE A TEXT\",\n  MOVE_MOUSE_OUT = \"MOVE MOUSE OUT WINDOW\",\n}\n\nexport interface EventInterface {\n  event_id: string;\n  user_id: string;\n  event_type: string;\n  description: string;\n  room_id: string;\n  done_by?: string;\n  time: string;\n}\n","import { DocumentUser } from \".\";\n\nexport interface PositionAPI {\n  courses: {\n    course_name: string;\n    course_code: string;\n    description: string;\n    school_levels: string[];\n    course_id: string;\n  }[];\n  position_title: string;\n  description: string;\n  school_level_id: {\n    school_level_name: string;\n    description: string;\n    education_institute: string[];\n    courses: [];\n    school_level_id: string;\n  };\n  education_institute_id: {\n    education_category_title: string;\n    school_levels: [];\n    description: string;\n    education_institute_id: string;\n  };\n  requirements: PositionRequirements[];\n  isDeleted: boolean;\n  position_id: string;\n}\n\nexport interface PositionRequirementsOld {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: string[];\n  user_required_docs: {\n    category_id: string;\n    description: string;\n    title: string;\n    user_detail_subcategory_id: string;\n  }[];\n}\n\nexport interface PositionRequirements {\n  category: {\n    description: string;\n    fields: string[];\n    title: string;\n    user_detail_category_id: string;\n  };\n  subcategory: {\n    category_id: string;\n    description: string;\n    title: string;\n    user_detail_subcategory_id: string;\n  };\n  position_requirement: PositionSubcategoryData[];\n  required: boolean;\n}\n\nexport interface PositionSubcategoryData {\n  category_id: string;\n  subcategory_id: string;\n  description: string;\n  required: boolean;\n  title: string;\n  others: { key: string; value: string }[];\n  _id: string;\n  __v?: string;\n}\n\nexport const validateDocCategory = (\n  requirement: PositionRequirements,\n  userDocuments: DocumentUser[]\n) => {\n  if (\n    userDocuments.find(\n      (item) =>\n        item.category_id === requirement.category.user_detail_category_id\n    )?.category_id === undefined\n  ) {\n    return requirement.category.user_detail_category_id;\n  } else {\n    return null;\n  }\n};\n\n// If true, should return null\nexport const validateDocSubcategoryData = (\n  requirement: PositionSubcategoryData,\n  UserData: DocumentUser[]\n): string | null => {\n  let result: string | null = null;\n  // for (let requirement of requirements) {\n  if (\n    UserData.find(\n      (itm) =>\n        itm.category_subcategory_data &&\n        itm.category_subcategory_data.category_subcategory_Data_id ===\n          requirement._id\n    ) === undefined\n  ) {\n    result = requirement.subcategory_id;\n  }\n  // }\n  return result;\n};\n\nexport const validateDocSubcategory = (\n  requirement: PositionRequirements,\n  userDocuments: DocumentUser[]\n) => {\n  let result: {\n    category_subcat_id: string | null;\n    category_id: string | null;\n    user_detail_subcategory_id: string | null;\n  }[] = [];\n  if (requirement.position_requirement.length > 0) {\n    for (let i in requirement.position_requirement) {\n      let filterData = userDocuments.find(\n        (item) =>\n          item.category_subcategory_data &&\n          item.category_subcategory_data.category_subcategory_Data_id ===\n            requirement.position_requirement[i]._id\n      )?.category_subcategory_data;\n      if (\n        (filterData === undefined || filterData === null) &&\n        requirement.position_requirement[i].required === true\n      ) {\n        result.push({\n          category_subcat_id: requirement.position_requirement[i]._id,\n          category_id: requirement.category.user_detail_category_id,\n          user_detail_subcategory_id:\n            requirement.subcategory.user_detail_subcategory_id,\n        });\n      }\n    }\n  }\n  console.log(\"Returned: \", result);\n  return result;\n};\n\nexport const returnValidatePosition = (\n  requirements: PositionRequirements[],\n  documents: DocumentUser[]\n) => {\n  let status = true;\n  for (let i in requirements) {\n    if (requirements[i].position_requirement.length === 0) {\n      if (\n        requirements[i] !== null &&\n        documents !== null &&\n        validateDocCategory(requirements[i], documents) !== null &&\n        validateDocCategory(requirements[i], documents) !== undefined\n      ) {\n        status = false;\n      }\n    } else {\n      if (validateDocSubcategory(requirements[i], documents).length !== 0) {\n        status = false;\n      }\n    }\n  }\n  return status;\n};\n","import {useState} from 'react'\nimport * as Interfaces from '../../../../interfaces/index';\nimport { FiChevronDown, FiChevronRight } from 'react-icons/fi';\nimport { searchItem } from '../ApplicationPositions';\n\ninterface SchoolLevelsItemPropsInterface {\n  educationCategoryDetails: Interfaces.education_category;\n  schoolLevels: Interfaces.school_level[] | null;\n  searchLevel: searchItem | null;\n  setSearchLevel: (educationCategory: Interfaces.education_category | null, schoolLevel: Interfaces.school_level | null) => void;\n}\n\nconst SchoolLevelsItem = (props: SchoolLevelsItemPropsInterface):JSX.Element => {\n  const [levelsDropDown, setLevelsDropDown] = useState<boolean>(false);\n  const initializeItem = (levelsDropDown: boolean, props: any) => { \n    if ((props.searchLevel !== null && props.searchLevel.schoolLevel === null) || (props.searchLevel !== null && props.educationCategoryDetails.education_institute_id !== props.searchLevel.educationCategory.education_institute_id) || props.setSearchLevel === null) {\n      levelsDropDown === false && props.setSearchLevel(null, null); \n      levelsDropDown === false && props.setSearchLevel(props.educationCategoryDetails, null); \n    }\n  }\n  const activateItem = (levelsDropDown: boolean, props: any) => { \n    props.setSearchLevel(null, null); \n    props.setSearchLevel(props.educationCategoryDetails, null); \n  }\n  const activateLevelItem = (educationCate: Interfaces.education_category, item: Interfaces.school_level) => { \n    props.setSearchLevel(null, null); \n    props.setSearchLevel(educationCate, item); \n  }\n  return (\n    <div className=\"flex flex-col\">\n      <div onClick={() => {setLevelsDropDown(!levelsDropDown); initializeItem(levelsDropDown, props)}} className=\"flex flex-row justify-between items-center py-2 px-2 bg-blue-100 rounded cursor-pointer hover:bg-blue-200 mb-2\">\n        <div className=\"flex flex-col pl-1\">\n          <span className=\"uppercase text-blue-600 text-lg font-bold\">{props.educationCategoryDetails.education_category_title}</span>\n          <span className=\"text-xs\">{props.educationCategoryDetails.description}</span>\n        </div>\n        <div className=\"px-1 py-1 rounded-full flex items-center justify-center cursor-pointer text-blue-600 bg-blue-100 hover:bg-white hover:text-blue-800\">\n          {levelsDropDown === false ? <FiChevronRight className=\"text-2xl\" /> : <FiChevronDown className=\"text-2xl\" />}\n        </div>\n      </div>\n      {levelsDropDown === true &&\n      <div className=\"flex flex-col\">\n        <div onClick={() => activateItem(levelsDropDown, props)} className={`flex flex-row justify-between items-center py-2 px-2 bg-blue-50 rounded cursor-pointer hover:bg-blue-50 mb-2 ml-5 border ${props.searchLevel !== null && props.searchLevel.educationCategory !== null && props.searchLevel.educationCategory.education_institute_id === props.educationCategoryDetails.education_institute_id && props.searchLevel.schoolLevel === null ? \"border-blue-500\" : \"border-blue-100\"} hover:border-blue-500`}>\n          <div className=\"flex flex-col pl-1\">\n            <span className=\"text-blue-700 text-sm font-bold\">All levels</span>\n          </div>\n        </div>\n        {console.log(\"Institute: \", props.educationCategoryDetails)}\n        {props.schoolLevels === null ? \"Loading...\" :\n        props.schoolLevels.length === 0 ? \"No levels found\" :\n        props.schoolLevels.map((item, i) => (\n          item.education_institute.find(itm => itm === props.educationCategoryDetails.education_institute_id) && \n          <div onClick={() => activateLevelItem(props.educationCategoryDetails, item)} key={i + 1} className={`flex flex-row justify-between items-center py-2 px-2 bg-blue-50 rounded cursor-pointer hover:bg-blue-50 mb-2 ml-5 border ${props.searchLevel !== null && props.searchLevel.schoolLevel !== null && props.searchLevel.schoolLevel === item && props.searchLevel.educationCategory !== null && props.searchLevel.educationCategory.education_institute_id === props.educationCategoryDetails.education_institute_id ? \"border-blue-500\" : \"border-blue-100\"} hover:border-blue-500`}>\n            <div className=\"flex flex-col pl-1\">\n              <span className=\"text-blue-700 text-sm font-bold\">{item.school_level_name}</span>\n            </div>\n          </div>\n        ))}\n      </div>}\n    </div>\n  )\n}\n\nexport default SchoolLevelsItem\n","import SchoolLevelsItem from './SchoolLevelsItem'\nimport * as Interfaces from '../../../../interfaces/index';\nimport { searchItem } from '../ApplicationPositions';\nimport Loading from '../../../../components/Loading/Loading';\n\ninterface SchoolLevelsFilterPropsInterface {\n  educationCategories: Interfaces.education_category[] | null;\n  schoolLevels: Interfaces.school_level[] | null;\n  searchLevel: searchItem | null;\n  setSearchLevel: (educationCategory: Interfaces.education_category | null, schoolLevel: Interfaces.school_level | null) => void\n  setSchoolLevelFilterFn: (status: boolean) => void;\n}\n\nconst SchoolLevelsFilter = (props: SchoolLevelsFilterPropsInterface) => {\n  return (\n    <div className=\"col-span-12 md:col-span-4 md:static w-full top-2\">\n      <div className=\"bg-white shadow rounded-sm px-2 py-2\">\n        {console.log(props.educationCategories)}\n        {props.educationCategories === null ? <Loading /> :\n        props.educationCategories.length === 0 ? \"No Education categories available\" :\n        props.educationCategories.map((item, i) => (\n          <SchoolLevelsItem \n            key={i + 1} educationCategoryDetails={item} \n            schoolLevels={props.schoolLevels}\n            searchLevel={props.searchLevel}\n            setSearchLevel={props.setSearchLevel}\n            />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default SchoolLevelsFilter\n","import React, { Component, Fragment } from 'react'\nimport { FiFilter } from 'react-icons/fi';\nimport * as Interfaces from \"../../interfaces/index\";\nimport searchData from \"../../utils/search\";\n\nimport { connect } from \"react-redux\";\nimport {\n  Auth, \n  courseStoreInterface,\n  loadCourses,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  QuestionBankStoreInterface,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { course } from '../../interfaces/course';\nimport Loading from '../../components/Loading/Loading';\nimport Modal, { ModalSize, Themes } from '../../components/Modal/Modal';\nimport { FaAngleRight } from 'react-icons/fa';\nimport { searchItem } from '../../containers/Application/ApplicationPositions/ApplicationPositions';\nimport SchoolLevelsFilter from '../../containers/Application/ApplicationPositions/SchoolLevelsFilter/SchoolLevelsFilter';\n\ninterface UploadQuestionState {\n  loading: boolean;\n  searchLevel: searchItem | null;\n  showFilter: boolean;\n  uploadingStatus: boolean;\n  searchCourseInput: string;\n}\ninterface UploadQuestionProps {\n  auth: Auth;\n  course: courseStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  questionBank: QuestionBankStoreInterface;\n  selected_course_id: string | null;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  setSelectedEducationCategory: (\n    education_category: Interfaces.education_category\n  ) => void;\n  setSelectedSchoolLevel: (education_category: Interfaces.school_level) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  setSelectedCourse: (course: course | null) => void;\n}\n\nclass _UploadQuestion extends Component<UploadQuestionProps, UploadQuestionState> {\n  constructor(props: UploadQuestionProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n      loading: false,\n      searchLevel: null,\n      showFilter: false,\n      uploadingStatus: false,\n      searchCourseInput: \"\",\n\t\t};\n\t}\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  }\n\n  setSearchLevel = (\n    educationCategory: Interfaces.education_category | null,\n    schoolLevel: Interfaces.school_level | null\n  ) => {\n    this.setState({\n      searchLevel: {\n        educationCategory: educationCategory,\n        schoolLevel: schoolLevel,\n      },\n    });\n    if (educationCategory) {\n      this.props.setSelectedEducationCategory(educationCategory);\n    }\n    if (schoolLevel) {\n      this.props.setSelectedSchoolLevel(schoolLevel);\n      this.setState({ showFilter: false });\n    }\n  };\n\n  setSchoolLevelFilterFn = (status: boolean) => {\n    this.setState({ showFilter: status });\n  };\n\n  filteredCourses = (courses: course[], searched: searchItem | null): course[] => {\n    let filtered: course[] = courses;\n    if (searched !== null) {\n      if (searched.schoolLevel !== null) {\n        filtered = courses.filter((itm) => {\n          if (itm.school_levels.find(itm1 => itm1 === searched.schoolLevel?.school_level_id)) {\n            let status = false;\n            for (let item2 of itm.school_levels) {\n              if (searched.educationCategory?.school_levels.find(i => i === item2)) {\n                status = true;\n              }\n            }\n            return status === true ? itm : null;\n          } else {\n            return null;\n          }\n        })\n      } else if (searched.educationCategory !== null) {\n        filtered = courses.filter((itm) => {\n          let status = false;\n          for (let item2 of itm.school_levels) {\n            if (searched.educationCategory?.school_levels.find(i => i === item2)) {\n              status = true;\n            }\n          }\n          return status === true ? itm : null;\n        })\n      }\n    }\n    return filtered;\n  }\n\n  setUploadingStatus = (status: boolean) => {\n    this.setState({ uploadingStatus: status});\n  }\n\n  componentDidMount = () => {\n    if (this.props.course.courses === null || this.props.course.courses.length === 0) {\n      this.props.loadCourses(this.setLoading);\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"flex-col\">\n          <div className=\"my-4 grid md:grid-cols-5 gap-2\">\n            <div className={`animate__animated md:col-span-5 md:flex md:flex-col min-h-full bg-white shadow rounded`}>\n              <div className=\"py-2 px-2\">\n                <div className=\"flex flex-row gap-2 mb-2 items-center justify-between\">\n                  <div className=\"flex flex-col\">\n                    <div><span className=\"text-lg text-gray-600 font-bold\">Choose a course</span></div>\n                    <div className=\"flex flex-row items-center\">\n                      {this.state.searchLevel?.educationCategory && <span className=\"bg-blue-50 rounded-full px-2 text-xs text-blue-600 font-bold\">{this.state.searchLevel.educationCategory?.education_category_title}</span>}\n                      {this.state.searchLevel?.schoolLevel && <div className=\"flex flex-row items-center\"><FaAngleRight className=\"\" /><span className=\"bg-blue-50 rounded-full px-2 text-xs text-blue-600 font-bold\">{this.state.searchLevel.schoolLevel?.school_level_name}</span></div>}\n                    </div>\n                  </div>\n                  <div onClick={() => { \n                    this.props.schoolLevels.education_categories === null && this.props.loadEducationCategories(this.setLoading);\n                    this.props.schoolLevels.school_levels === null && this.props.loadSchoolLevels(this.setLoading);\n                    this.setState({ showFilter: true }) }} className=\"btn cursor-pointer bg-blue-50 hover:bg-blue-100 text-blue-600 flex flex-row gap-1 items-center\">\n                    <FiFilter className=\"text-xl\" />\n                    <span>Filter</span>\n                  </div> \n                </div>\n                <div>\n                  <input onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.setState({ searchCourseInput: e.target.value })} type=\"text\" className=\"input-white h-10 text-sm border-2 border-blue-500\" placeholder=\"Search question by title or description\" />\n                </div>\n                <div className=\"mt-4\" style={{minHeight: '500px'}}>\n                  {this.state.uploadingStatus === true ? <div className=\"my-2 flex flex-col gap-2\">\n                    <div className=\"rounded-xl bg-gray-100 h-8\"></div>\n                    <div className=\"rounded-xl bg-gray-100 h-8 w-4/5\"></div>\n                    <div className=\"rounded-xl bg-gray-100 h-8 w-5/6\"></div>\n                    <div className=\"rounded-xl bg-gray-100 h-8\"></div>\n                    <div className=\"rounded-xl bg-gray-100 h-8 w-3/4\"></div>\n                    <div className=\"rounded-xl bg-gray-100 h-8\"></div>\n                  </div> :\n                  this.props.course.courses === null ? <Loading /> :\n                  this.props.course.courses && this.filteredCourses(this.props.course.courses, this.state.searchLevel).length === 0 ? <span className=\"text-gray-400 font-extrabold ml-2 animate__animated animate__shakeX\">No courses available!</span> :\n                  this.props.course.courses && searchData(this.filteredCourses(this.props.course.courses, this.state.searchLevel), this.state.searchCourseInput).map((item, i) => (\n                    <div key={i + 1} \n                    onClick={() => this.props.setSelectedCourse(item)} \n                    className={`rounded border ${this.props.selected_course_id !== null && this.props.selected_course_id === item.course_id ? \"bg-blue-100 border-blue-300 text-blue-600 animate__animated animate__bounceIn\" : \"border-gray-200 hover:bg-blue-100 hover:border-blue-600 text-gray-600\"}  px-2 py-3 flex flex-row gap-3 items-center my-2 cursor-pointer`}>\n                      <span className=\"text-sm\">\n                        <div className={`h-8 w-8 rounded-full flex justify-center items-center text-white ${this.props.selected_course_id !== null && this.props.selected_course_id === item.course_id ? \"bg-blue-600 text-white\" : \"font-bold bg-gray-500\"}`}>{i + 1}</div>\n                      </span>\n                      <div className=\"flex flex-col\">\n                        <span className={`text-md font-bold`}>{item.course_name}</span>\n                        <span className={`text-xs`}>Code: {item.course_code}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.state.showFilter === true &&\n        <Modal\n          title=\"Filter courses by school levels\"\n          backDrop={true}\n          theme={Themes.default}\n          close={() => this.setState({ showFilter: false })}\n          backDropClose={true}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{title: true,}}\n        >\n          <SchoolLevelsFilter \n            educationCategories={this.props.schoolLevels.education_categories}\n            schoolLevels={this.props.schoolLevels.school_levels}\n            searchLevel={this.state.searchLevel}\n            setSearchLevel={this.setSearchLevel}\n            setSchoolLevelFilterFn={this.setSchoolLevelFilterFn}\n          />\n        </Modal>}\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  course,\n  schoolLevels,\n  questionBank,\n}: StoreState): { auth: Auth; course: courseStoreInterface; schoolLevels: schoolLevelsStoreInterface; questionBank: QuestionBankStoreInterface; } => {\n  return { auth: auth, course: course, schoolLevels: schoolLevels, questionBank: questionBank };\n};\n\nconst UploadQuestion = connect(mapStateToProps, {\n  loadCourses,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n})(_UploadQuestion);\n\nexport default UploadQuestion;\n","import { questionType, questionTypeElements, questionTypeElementsType } from \"../interfaces/question\";\n\nexport const getQuestionType = (question_types: questionType[] | null, type_id: string) => {\n  let type: questionTypeElementsType | null = null;\n  if (question_types !== null) {\n    let check = question_types.find(itm => itm.id === type_id);\n    if (check !== undefined) {\n      let check_type = questionTypeElements.find(itm => check && itm.key === check.element);\n      if (check_type !== undefined) {\n        type = check_type.key\n      }\n    }\n  }\n  return type;\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React, { Component, Fragment } from 'react'\nimport { LanguageInterface, QuestionAnswerInterface, QuestionInterface, QuestionItemInterface, QuestionLanguages, questionTypeElementsType } from '../../../../../interfaces/question'\nimport { connect } from \"react-redux\";\nimport {\n  Auth, \n  courseStoreInterface,\n  loadCourses,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  QuestionBankStoreInterface,\n  setUploadedQuestions,\n  questionTypesStoreInterface,\n  loadQuestionTypes,\n  System,\n  PushPopupAlert,\n  UpdateQuestion,\n} from \"../../../../../actions\";\nimport { StoreState } from \"../../../../../reducers\";\nimport { PopupAlertData } from '../../../../../components/Alert/Popup';\nimport Courses from '../../../../../components/Courses/Courses';\nimport { course } from '../../../../../interfaces/course';\nimport Modal, { ModalSize, Themes } from '../../../../../components/Modal/Modal';\nimport QuestionAnswer from './QuestionAnswer';\nimport { MdModeEdit } from 'react-icons/md';\nimport HandleInputProps from './HandleInput'\nimport { HiCheck } from 'react-icons/hi';\nimport Loading from '../../../../../components/Loading/Loading';\nimport { LoadingType } from '../../../../../components/Loading/LoadingV2';\nimport QuestionChapters from './QuestionChapters';\nimport { PopupAlertTheme } from '../../../../../interfaces/popupAlert';\nimport { BiArrowBack } from 'react-icons/bi';\nimport { getQuestionType } from '../../../../../utils/question_bank';\n\ninterface EditQuestionProps {\n  selectedQuestion: QuestionInterface;\n  questionsList: QuestionInterface[];\n  questionTypes: questionTypesStoreInterface;\n  system: System;\n  course: courseStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  unSelectQuestion: () => void;\n  UpdateQuestion: (question: QuestionInterface, callback: (loading: boolean) => void, actionStatus: (loading: boolean, msg: string) => void) => void;\n}\n\ninterface EditQuestionState {\n  loading: boolean;\n  id: string;\n  course: string; // Course ID\n  question: QuestionItemInterface[];\n  type: questionTypeElementsType | \"Invalid\";\n  chapters: string[] // CourseChapter: ID\n  customNumber: number;\n  marks: number;\n  answer: QuestionAnswerInterface | QuestionAnswerInterface[];\n  selectedLanguage: LanguageInterface;\n  showFilter: boolean;\n  selectedKey: SelectedKeysEdit | null;\n  showQuestionChapters: boolean;\n}\n\nexport enum SelectedKeysEdit {\n  Title = \"Title\",\n  Description = \"Description\",\n  QuestionAnswer = \"QuestionAnswer\",\n}\n\nclass _EditQuestion extends Component<EditQuestionProps, EditQuestionState> {\n  constructor(props: EditQuestionProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n      loading: false,\n      id: this.props.selectedQuestion.id,\n      course: this.props.selectedQuestion.course,\n      question: this.props.selectedQuestion.question,\n      type: this.props.selectedQuestion.type,\n      chapters: this.props.selectedQuestion.chapters,\n      customNumber: this.props.selectedQuestion.customNumber,\n      marks: this.props.selectedQuestion.marks,\n      answer: this.props.selectedQuestion.answer,\n      selectedLanguage: QuestionLanguages[0],\n      showFilter: false,\n      selectedKey: null,\n      showQuestionChapters: false,\n\t\t};\n\t}\n\n  QuestionLang = (question: QuestionItemInterface[]) => {\n    let res = question.find(itm => itm.language === this.state.selectedLanguage.key);\n    console.log(\"sel: \", res);\n    return res !== undefined ? res : question[0];\n  }\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  }\n\n  actionStatus = (status: boolean, msg: string) => {\n    this.props.PushPopupAlert({\n      title: status === true ? \"Success!\" : \"Failed!\",\n      description: msg,\n      theme: status === true ? PopupAlertTheme.success : PopupAlertTheme.danger,\n    });\n  }\n\n  handleUpdateQuestionDetails = (question: QuestionItemInterface) => {\n    let updatedQuestion: QuestionItemInterface[] = [];\n    for (let current of this.state.question) {\n      if (question.language === current.language) {\n        updatedQuestion.push(question);\n      } else {\n        updatedQuestion.push(current);\n      }\n    }\n    this.setState({ question: updatedQuestion });\n  }\n\n  updateAnswerSingleMultiple = (question: QuestionItemInterface, editedAnswerIndex: string, editedAnswer: QuestionAnswerInterface) => {\n    let updatedQuestion: QuestionItemInterface[] = [];\n    for (let current of this.state.question) {\n      if (question.language === current.language) {\n        let res: QuestionAnswerInterface[] = [];\n        for (let answer = 0; answer < current.answer.length; answer++) {\n          if (current.answer.find(itm => itm.value === editedAnswerIndex) !== undefined) {\n            if (current.answer[answer].value === editedAnswerIndex) {\n              res.push(editedAnswer);\n            } else {\n              res.push(current.answer[answer])\n            }\n          }\n        }\n        updatedQuestion.push({\n          description: question.description,\n          language: question.language,\n          status: question.status,\n          title: question.title,\n          answer: res\n        })\n      } else {\n        updatedQuestion.push(current);\n      }\n    }\n    this.setState({ question: updatedQuestion });\n  }\n\n  addAnswerSingleMultiple = (question: QuestionItemInterface, addedAnswer: QuestionAnswerInterface) => {\n    let updatedQuestion: QuestionItemInterface[] = [];\n    let newFiltered: QuestionAnswerInterface[] = [];\n    for (let current of this.state.question) {\n      if (question.language === current.language) {\n        newFiltered = current.answer;\n        if (getQuestionType(this.props.questionTypes.questionTypes, this.state.type) === questionTypeElementsType.MultipleChoice) {\n          newFiltered.push(addedAnswer);\n        } \n        if (getQuestionType(this.props.questionTypes.questionTypes, this.state.type) === questionTypeElementsType.SingleMultiple) {\n          if (addedAnswer.status === true && current.answer.filter(itm => itm.status === true).length !== 0) {\n            newFiltered.push({\n              id: addedAnswer.id,\n              value: addedAnswer.value,\n              status: false,\n            });\n          } else {\n            newFiltered.push(addedAnswer);\n          }\n        }\n        updatedQuestion.push({\n          description: question.description,\n          language: question.language,\n          status: question.status,\n          title: question.title,\n          answer: newFiltered\n        })\n      } else {\n        updatedQuestion.push(current);\n      }\n    }\n    this.setState({ question: updatedQuestion });\n  }\n\n  removeAnswerSingleMultiple = (question: QuestionItemInterface[], removed: QuestionAnswerInterface) => {\n    if (window.confirm(\"Are you sure do ypu want to delete?\") === true) {\n      let updatedQuestion: QuestionItemInterface[] = [];\n      for (let current of this.state.question) {\n        let res: QuestionAnswerInterface[] = current.answer.filter(itm => itm.id !== removed.id);\n        updatedQuestion.push({\n          description: current.description,\n          language: current.language,\n          status: current.status,\n          title: current.title,\n          answer: res\n        });\n      }\n      this.setState({ question: updatedQuestion });\n    }\n  }\n\n  editSingleMultipleStatus = (answer_id: string, status: boolean) => {\n    let updatedQuestion: QuestionItemInterface[] = [];\n    for (let current of this.state.question) {\n      let res: QuestionAnswerInterface[] = [];\n      for (let ans of current.answer) {\n        if (ans.status === true) {\n          res.push({\n            id: ans.id,\n            value: ans.value,\n            status: false,\n          });\n        }else if (ans.id === answer_id) {\n          res.push({\n            id: ans.id,\n            value: ans.value,\n            status: status,\n          });\n        }\n        else {\n          res.push(ans);\n        }\n      }\n      updatedQuestion.push({\n        description: current.description,\n        language: current.language,\n        status: current.status,\n        title: current.title,\n        answer: res\n      });\n    }\n    this.setState({ question: updatedQuestion });\n  }\n\n  setAddChapter = (chapter_id: string) => {\n    if (this.state.chapters.find(itm => itm === chapter_id) === undefined) {\n      this.setState({ chapters: [...this.state.chapters, chapter_id] });\n    } else {\n      this.setState({ chapters: this.state.chapters.filter(itm => itm !== chapter_id) });\n    }\n  }\n\n  submitEditedQuestion = async () => {\n    this.setState({ loading: true });\n    await this.props.UpdateQuestion({\n      id: this.state.id,\n      course: this.state.course,\n      question: this.state.question,\n      type: this.state.type,\n      chapters: this.state.chapters,\n      customNumber: this.state.customNumber,\n      marks: this.state.marks,\n      answer: this.state.answer,\n    }, this.setLoading, this.actionStatus);\n    if (this.state.loading === false) {\n      this.props.unSelectQuestion();\n    }\n  }\n\n  componentDidMount = () => {\n    if (this.props.questionTypes.questionTypes === null || this.props.questionTypes.questionTypes.length === 0) {\n      this.props.loadQuestionTypes(this.setLoading);\n    }\n\n    if (this.props.course.courses === null || this.props.course.courses.length === 0) {\n      this.props.loadCourses(this.setLoading);\n    }\n  }\n\n  setSelectedCourse = (course: course | null) => {\n    if (course !== null) {\n      this.setState({ course: course.course_id });\n      this.setState({ showFilter: false });\n      this.setState({ chapters: [] });\n      this.setState({ showQuestionChapters: true });\n    }\n  }\n\n  setSelectedKey = (selectedKey: SelectedKeysEdit | null) => {\n    this.setState({ selectedKey: selectedKey });\n  }\n\n  updateMarks = (marks: number) => {\n    if (marks) {\n      this.setState({ marks: marks });\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        {this.state.loading === true ? \n        <div className=\"bg-white rounded px-4 py-5 mt-4\">\n          <Loading type={LoadingType.white} /> \n        </div>\n        :\n        <div className=\"bg-gray-100 shadow-md pb-2 rounded animate__animated animate__fadeIn animate__fast\">\n          <div className=\"flex flex-col items-center justify-between\">\n            <div className=\"flex flex-row items-center justify-between relative bottom-0 bg-white border-t-4 border-blue-500 w-full py-2 px-2 shadow-md\">\n              <div className=\"flex flex-row items-center gap-2\">\n                <div onClick={() => this.props.unSelectQuestion()} className=\"btn cursor-pointer bg-gray-100 text-gray-500 hover:bg-gray-200 h-full flex flex-row gap-2 items-center\"><BiArrowBack className=\"text-xl\" /> Back to list</div>\n                <div className=\"text-xl font-extrabold text-gray-600\">Edit question</div>\n              </div>\n              <div className=\"flex flex-row items-center gap-2\">\n                <div className=\"flex flex-row items-center justify-end\">\n                  {QuestionLanguages.map((item, i) => (\n                    <div onClick={() => this.setState({ selectedLanguage: item })} key={i + 1}\n                    className={`${this.state.selectedLanguage.key === item.key ? \"text-blue-600 bg-blue-50 rounded font-bold\" : \"text-gray-600\"} text-center text-sm px-3 py-2 cursor-pointer hover:bg-blue-50 hover:text-blue-600 hover:border-blue-600`}>\n                      {item.value}\n                    </div>\n                  ))}\n                </div>\n                <div onClick={() => this.submitEditedQuestion()} className=\"btn cursor-pointer bg-blue-600 text-white\">Save changes</div>\n              </div>\n            </div>\n          </div>\n          <form onSubmit={this.submitEditedQuestion} className=\"px-2 py-2\">\n            <div className=\"flex flex-row items-center justify-between border mb-3 text-sm gap-1 bg-white px-4 py-3 rounded\">\n              <div className=\"flex flex-col\">\n                <label className=\"text-gray-600 font-bold\">Selected course</label>\n                <span className=\"font-bold text-blue-600 flex flex-row items-center gap-2\">\n                  {/* <BsFillCaretRightFill className=\"text-xl\" /> */}\n                  {this.props.course.courses !== null && this.props.course.courses.find(itm => itm.course_id === this.state.course)?.course_code} -\n                  &nbsp;{this.props.course.courses !== null && this.props.course.courses.find(itm => itm.course_id === this.state.course)?.course_name}\n                </span>\n              </div>\n              <div className=\"flex flex-row items-center gap-2\">\n                {this.state.chapters.length === 0 ?\n                <div onClick={() => this.setState({ showQuestionChapters: true })} className={`bg-yellow-100 hover:bg-yellow-700 text-yellow-700 hover:text-white rounded px-3 py-2 cursor-pointer font-bold`}>\n                  Add chapters\n                </div> : \n                <div onClick={() => this.setState({ showQuestionChapters: true })} className=\"bg-blue-50 hover:bg-blue-200 text-blue-600 hover:text-blue-800 rounded px-3 py-2 cursor-pointer font-bold\">\n                  Edit chapters ({this.state.chapters.length})\n                </div>\n                }\n\n                <div onClick={() => this.setState({ showFilter: true })} className=\"bg-gray-100 text-gray-600 rounded-full flex items-center justify-center h-12 w-12 cursor-pointer hover:bg-blue-100 hover:text-blue-600\">\n                  <MdModeEdit className=\"text-3xl\" />\n                </div>\n              </div>\n            </div>\n            <div className=\"flex flex-row items-center justify-between mb-3 text-sm bg-white px-4 py-3 rounded border gap-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"text-gray-600 font-bold flex flex-row items-center justify-between\">\n                  Question title\n                  {this.state.selectedKey !== null && this.state.selectedKey === SelectedKeysEdit.Title &&\n                  <div onClick={() => this.setState({ selectedKey: null })} className=\"bg-blue-100 text-blue-600 rounded-full flex items-center justify-center h-12 w-12 cursor-pointer hover:bg-blue-200 hover:text-blue-700\">\n                    <HiCheck className=\"text-3xl\" />\n                  </div>}\n                </div>\n                {this.state.selectedKey !== SelectedKeysEdit.Title &&\n                <label className=\"text-blue-600 font-bold flex flex-row gap-2 items-center\">\n                  {/* <BsFillCaretRightFill className=\"text-xl\" /> */}\n                  {this.QuestionLang(this.state.question).title}\n                </label>}\n                {this.state.selectedKey !== null && this.state.selectedKey === SelectedKeysEdit.Title &&\n                <HandleInputProps \n                languages={QuestionLanguages} \n                questionItems={this.state.question}\n                selectedKey={this.state.selectedKey}\n                handleUpdateQuestionDetails={this.handleUpdateQuestionDetails} />}\n              </div>\n              {this.state.selectedKey !== SelectedKeysEdit.Title &&\n              <div onClick={() => this.setState({ selectedKey: SelectedKeysEdit.Title })} className=\"bg-gray-100 text-gray-600 rounded-full flex items-center justify-center h-12 w-12 cursor-pointer hover:bg-blue-100 hover:text-blue-600\">\n                <MdModeEdit className=\"text-3xl\" />\n              </div>}\n            </div>\n            <div className=\"flex flex-row items-center justify-between mb-3 text-sm bg-white border px-4 py-3 rounded gap-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"text-gray-600 font-bold flex flex-row items-center justify-between\">\n                  Question details\n                  {this.state.selectedKey !== null && this.state.selectedKey === SelectedKeysEdit.Description &&\n                  <div onClick={() => this.setState({ selectedKey: null })} className=\"bg-blue-100 text-blue-600 rounded-full flex items-center justify-center h-12 w-12 cursor-pointer hover:bg-blue-200 hover:text-blue-700\">\n                    <HiCheck className=\"text-3xl\" />\n                  </div>}\n                </div>\n                {this.state.selectedKey !== SelectedKeysEdit.Description &&\n                <label className=\"text-blue-600 font-bold flex flex-row gap-2 items-center\">\n                  {/* <BsFillCaretRightFill className=\"text-xl\" /> */}\n                  {this.QuestionLang(this.state.question).description}\n                </label>}\n                {this.state.selectedKey !== null && this.state.selectedKey === SelectedKeysEdit.Description &&\n                <HandleInputProps \n                languages={QuestionLanguages} \n                questionItems={this.state.question}\n                selectedKey={this.state.selectedKey}\n                handleUpdateQuestionDetails={this.handleUpdateQuestionDetails} />}\n              </div>\n              {this.state.selectedKey !== SelectedKeysEdit.Description &&\n              <div onClick={() => this.setState({ selectedKey: SelectedKeysEdit.Description })} className=\"bg-gray-100 text-gray-600 rounded-full flex items-center justify-center h-12 w-12 cursor-pointer hover:bg-blue-100 hover:text-blue-600\">\n                <MdModeEdit className=\"text-3xl\" />\n              </div>}\n            </div>\n            \n            <QuestionAnswer \n              selectedQuestionType={getQuestionType(this.props.questionTypes.questionTypes, this.state.type)} \n              selectedQuestionItem={this.QuestionLang(this.state.question)} \n              wholeQuestion={this.state.question} \n              selectedLanguage={this.state.selectedLanguage} \n              updateAnswerSingleMultiple={this.updateAnswerSingleMultiple} \n              addAnswerSingleMultiple={this.addAnswerSingleMultiple}\n              removeAnswerSingleMultiple={this.removeAnswerSingleMultiple} \n              selectedKey={this.state.selectedKey} \n              setSelectedKey={this.setSelectedKey}\n              editSingleMultipleStatus={this.editSingleMultipleStatus} \n              marks={this.state.marks}\n              updateMarks={this.updateMarks}\n              />\n          </form>\n        </div>}\n        {this.state.showFilter === true &&\n        <Modal\n          title=\"Filter courses by school levels\"\n          backDrop={true}\n          theme={Themes.default}\n          close={() => this.setState({ showFilter: false })}\n          backDropClose={true}\n          widthSizeClass={ModalSize.large}\n          displayClose={true}\n          padding={{title: true,}}>\n          <Courses setSelectedCourse={this.setSelectedCourse} selected_course_id={this.state.course} />\n        </Modal>}\n        {this.state.showQuestionChapters === true && \n        <Modal\n          title=\"Question course chapters\"\n          backDrop={true}\n          theme={Themes.default}\n          close={() => this.setState({ showQuestionChapters: false })}\n          backDropClose={true}\n          widthSizeClass={ModalSize.large}\n          displayClose={true}\n          padding={{title: true,}}>\n          {this.props.course.selected_course !== null &&\n            <QuestionChapters \n              selectedCourse={this.props.course.courses && this.props.course.courses.find(itm => itm.course_id === this.state.course)} \n              addedChapters={this.state.chapters} \n              setAddChapter={this.setAddChapter} />}\n              <div className=\"flex flex-row items-center justify-between mt-3 px-2 py-2\">\n                <div className=\"\"></div>\n                <div className=\"btn bg-blue-600 text-white cursor-pointer\" onClick={() => this.setState({ showQuestionChapters: false })}>Done</div>\n              </div>\n        </Modal>}\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  course,\n  schoolLevels,\n  questionBank,\n  questionTypes,\n  system,\n}: StoreState): { auth: Auth; course: courseStoreInterface; schoolLevels: schoolLevelsStoreInterface; questionBank: QuestionBankStoreInterface; questionTypes: questionTypesStoreInterface; system: System; } => {\n  return { auth: auth, course: course, schoolLevels: schoolLevels, questionBank: questionBank, questionTypes: questionTypes, system: system, };\n};\n\nconst EditQuestion = connect(mapStateToProps, {\n  loadCourses,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  setUploadedQuestions,\n  loadQuestionTypes,\n  PushPopupAlert,\n  UpdateQuestion,\n})(_EditQuestion);\n\nexport default EditQuestion;","import React, { useEffect, useState } from 'react'\nimport Loading from '../../../../../components/Loading/Loading'\nimport { connect } from \"react-redux\";\nimport {\n  Auth, \n  courseStoreInterface,\n  loadCourses,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  QuestionBankStoreInterface,\n  setUploadedQuestions,\n  questionTypesStoreInterface,\n  setSelectedCourse,\n  PrepareExamsStoreInterface,\n  addExamQuestion,\n  IncrementQuestionBank,\n} from \"../../../../../actions\";\nimport { StoreState } from \"../../../../../reducers\";\nimport { course } from '../../../../../interfaces/course';\nimport { QuestionInterface, uploadQuestionsResponse } from '../../../../../interfaces/question';\nimport { VscListSelection } from 'react-icons/vsc';\nimport { Redirect } from 'react-router-dom';\n\ninterface UploadedQuestionsProps {\n  questionBank: QuestionBankStoreInterface;\n  setUploadedQuestions: (questions: uploadQuestionsResponse | null) => void;\n  selectedCourse: course;\n  course: courseStoreInterface;\n  selectQuestion: (question: QuestionInterface) => void;\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  setSelectedCourse: (course: course | null) => void;\n  prepareExam: PrepareExamsStoreInterface;\n  addExamQuestion: (question: QuestionInterface) => void;\n  IncrementQuestionBank: (question: QuestionInterface) => void;\n}\n\nconst _UploadedQuestions = (props: UploadedQuestionsProps) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [redirect, setRedirect] = useState<boolean>(false);\n  const [setExam, setSetExam] = useState<boolean>(false);\n  const returnToCourse = () => {\n    if (props.questionBank.uploadedQuestions !== null && props.questionBank.uploadedQuestions.insertedData[0].course !== props.selectedCourse.course_id) {\n      if (props.course.courses) {\n        let selected = props.course.courses.find(itm => props.questionBank.uploadedQuestions && itm.course_id === props.questionBank.uploadedQuestions.insertedData[0].course);\n        if (selected !== undefined) {\n          props.setSelectedCourse(selected);\n        }\n      }\n    }\n  }\n  const clearUploadedQuestionsStore = () => {\n    if (window.confirm(\"Have you completed to modify questions?\")) {\n      if (props.questionBank.uploadedQuestions !== null && props.questionBank.uploadedQuestions.insertedData.length > 0) {\n        for (let selectedQuestion of props.questionBank.uploadedQuestions.insertedData) {\n          props.IncrementQuestionBank(selectedQuestion);\n        }\n        props.setUploadedQuestions(null);\n      }\n      setRedirect(true);\n    }\n  }\n  const addToExam = () => {\n    if (window.confirm(\"Are you sure do you want to add to exam?\") === true) {\n      if (props.questionBank.uploadedQuestions !== null && props.questionBank.uploadedQuestions.insertedData.length > 0) {\n        if (props.course.selected_course !== null) {\n          for (let x of props.prepareExam.questions) {\n            props.addExamQuestion(x);\n          }\n          if (props.prepareExam.questions.length === 0) {\n            for (let itm of props.questionBank.uploadedQuestions.insertedData) {\n              props.addExamQuestion(itm);\n              props.IncrementQuestionBank(itm);\n            }\n          }\n          if (props.questionBank.uploadedQuestions.insertedData.length !== 0) {\n            props.setUploadedQuestions(null);\n            setSetExam(true);\n          }\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (props.questionTypes.questionTypes === null || props.questionTypes.questionTypes.length === 0) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [props]);\n  if (setExam === true) {\n    return <Redirect to=\"/prepare-exam\" />\n  }\n  if (redirect === true) {\n    return <Redirect to=\"/question-bank\" />\n  }\n  return (\n    <div className=\"bg-white animate__animated animate__fadeInLeft animate__fast px-2 py-2 gap-3 mb-2 rounded\">\n      {props.questionBank.uploadedQuestions !== null && props.questionBank.uploadedQuestions.insertedData[0].course !== props.selectedCourse.course_id ? \n      <div className=\"text-center flex flex-col items-center text-gray-500 py-6 rounded bg-gray-100 mt-5\">\n        You have changed course! <br />\n        <div className=\"bg-blue-50 text-blue-600 font-bold rounded-full text-center w-max px-3 border border-blue-200 flex items-center justify-center mb-3\">{props.course.courses !== null && props.course.courses.find(itm => itm.course_id === props.questionBank.uploadedQuestions?.insertedData[0].course)?.course_name}</div>\n        <div onClick={() => returnToCourse()} className=\"btn bg-blue-600 text-white cursor-pointer\">Back to list</div>\n      </div> :\n      <>\n      <div className=\"flex flex-row items-center justify-between\">\n        <div className=\"text-blue-600 font-bold mb-2 flex flex-row items-center gap-2 text-xl\">\n          <VscListSelection className=\"text-2xl\" />\n          <span>Uploaded questions list ({props.questionBank.uploadedQuestions?.insertedCount})</span>\n        </div>\n        <div className=\"flex flex-row items-center gap-2\">\n          <div onClick={() => addToExam()} className=\"btn border bg-blue-50 hover:bg-blue-600 border-blue-600 text-blue-600 hover:text-white mb-2 cursor-pointer\">Make it an exam</div>\n          <div onClick={() => clearUploadedQuestionsStore()} className=\"btn bg-blue-600 text-white mb-2 cursor-pointer\">Continue</div>\n        </div>\n      </div>\n      {loading === true ? <Loading /> :\n      props.questionBank.uploadedQuestions === null ? <div>Please upload questions</div> : props.questionBank.uploadedQuestions.insertedData === null ? <Loading /> :\n      props.questionBank.uploadedQuestions.insertedData.length === 0 ? <div>No questions uploaded!</div> :\n      props.questionBank.uploadedQuestions.insertedData.map((item, i) => (\n        <div onClick={() => props.selectQuestion(item)} key={i + 1}className=\"bg-gray-50 cursor-pointer rounded border border-gray-200 px-3 py-2 hover:bg-blue-50 text-gray-700 hover:text-blue-600 flex flex-row items-center justify-between mb-2 gap-4 hover:border-blue-600 mb-3\">\n          <div className=\"flex flex-row items-center gap-3\">\n            <div className=\"rounded-full bg-blue-100 text-blue-600 h-8 w-8 flex items-center justify-center text-xl font-bold\">{i + 1}</div>\n            <div className=\"flex flex-col truncate\">\n              <span className=\"text-xs text-blue-600 font-bold w-max\">{props.questionTypes.questionTypes && props.questionTypes.questionTypes.find(itm => itm.id && itm.id === item.type)?.title}</span>\n              <span className=\"font-bold\">{item.question[0].title}</span>\n              <span className=\"truncate text-xs\">{item.question[0].description}</span>\n            </div>\n          </div>\n        </div>\n      ))}\n      </>}\n    </div>\n  )\n}\n\n\nconst mapStateToProps = ({\n  auth,\n  course,\n  schoolLevels,\n  questionBank,\n  prepareExam,\n}: StoreState): { auth: Auth; course: courseStoreInterface; schoolLevels: schoolLevelsStoreInterface; questionBank: QuestionBankStoreInterface; prepareExam: PrepareExamsStoreInterface; } => {\n  return { auth: auth, course: course, schoolLevels: schoolLevels, questionBank: questionBank, prepareExam: prepareExam };\n};\n\nconst UploadedQuestions = connect(mapStateToProps, {\n  loadCourses,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  setUploadedQuestions,\n  setSelectedCourse,\n  addExamQuestion,\n  IncrementQuestionBank,\n})(_UploadedQuestions);\n\nexport default UploadedQuestions;\n","import React, { useState } from 'react'\nimport { HiCheck } from 'react-icons/hi';\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im';\nimport { MdBookmark, MdModeEdit } from 'react-icons/md';\nimport { LanguageInterface, QuestionAnswerInterface, QuestionItemInterface, QuestionLanguages, questionTypeElementsType } from '../../../../../interfaces/question';\nimport { SelectedKeysEdit } from './EditQuestion';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FaCheckCircle, FaTimesCircle } from 'react-icons/fa';\nimport { RiShieldCheckFill } from 'react-icons/ri';\n\ninterface QuestionAnswerProps {\n  selectedQuestionType: questionTypeElementsType | null;\n  selectedQuestionItem: QuestionItemInterface;\n  wholeQuestion: QuestionItemInterface[];\n  selectedLanguage: LanguageInterface;\n  updateAnswerSingleMultiple: (question: QuestionItemInterface, editedAnswerIndex: string, editedAnswer: QuestionAnswerInterface) => void;\n  addAnswerSingleMultiple: (question: QuestionItemInterface, addedAnswer: QuestionAnswerInterface) => void;\n  removeAnswerSingleMultiple: (question: QuestionItemInterface[], removedAnswer: QuestionAnswerInterface) => void;\n  selectedKey: SelectedKeysEdit | null;\n  setSelectedKey: (selectedKey: SelectedKeysEdit | null) => void;\n  editSingleMultipleStatus: (answer_id: string, status: boolean) => void;\n  marks: number;\n  updateMarks: (marks: number) => void;\n}\n\nconst QuestionAnswer = (props: QuestionAnswerProps) => {\n  const [addedAnswer, setAddedAnswer] = useState<{lang: LanguageInterface; answer: QuestionAnswerInterface}[]>([]);\n  const [showAddAnswerStatus, setShowAddAnswer] = useState<boolean>(false);\n  const AddAnswer = () => {\n    if (addedAnswer !== null) {\n      if (addedAnswer.length !== QuestionLanguages.length) {\n        alert(\"Please fill question answer!\" + addedAnswer.length);\n      } else {\n        for (let answer of addedAnswer) {\n          let selectedQL = props.wholeQuestion.find(itm => itm.language === answer.lang.key);\n          if (selectedQL !== undefined) {\n            props.addAnswerSingleMultiple(selectedQL, answer.answer);\n          }\n        }\n        setAddedAnswer([]);\n        setShowAddAnswer(false);\n      }\n    }\n  }\n  const handleAnswer = (lang: LanguageInterface, answer: QuestionAnswerInterface) => {\n    if (addedAnswer.find(itm => itm.lang.key === lang.key) === undefined) {\n      setAddedAnswer([...addedAnswer, { lang: lang, answer: answer }]);\n    } else {\n      setAddedAnswer([...addedAnswer.filter(itm => itm.lang.key !== lang.key), { lang: lang, answer: answer }]);\n    }\n  }\n\n  const handleStatus = (status: boolean) => {\n    if (addedAnswer.length > 0) {\n      let backup = [];\n      for (let itm of addedAnswer) {\n        backup.push({\n          lang: itm.lang,\n          answer: { value: itm.answer.value, status: status, id: itm.answer.id }\n        })\n      }\n      setAddedAnswer(backup);\n    }\n  }\n  return (\n    <div className=\"flex flex-col mb-3 text-sm gap-2 bg-white px-2 py-2 rounded\">\n      {showAddAnswerStatus === true && \n        <label className=\"text-gray-600 font-bold\">Add question Answer</label>\n      }\n      \n      {showAddAnswerStatus === false ?\n      <div className=\"flex flex-row items-center gap-3 animate__animated animate__fadeIn animate__fast\">\n        <div onClick={() => setShowAddAnswer(true)} className=\"btn bg-blue-50 text-blue-600 cursor-pointer hover:bg-blue-200 hover:text-blue-800 border border-blue-300 w-32\">\n          Add answer\n        </div>\n        <div className=\"w-full flex flex-row items-center justify-between pr-2 py-1\">\n          <div className=\"text-gray-600 font-bold flex flex-row items-center\">\n            {props.selectedKey !== null && props.selectedKey === SelectedKeysEdit.QuestionAnswer ?\n            \"Edit Question answers\" : \"Question answers\"}\n          </div>\n          <div className=\"flex flex-row gap-2 items-center\">\n            {props.selectedKey !== null && props.selectedKey === SelectedKeysEdit.QuestionAnswer &&\n            <>\n            <div className=\"flex flex-row items-center justify-end gap-2\">\n              <span className=\"font-bold text-gray-600\">Marks</span>\n              <input onChange={(e: React.ChangeEvent<HTMLInputElement>) => props.updateMarks(parseInt(e.target.value))} type=\"number\" placeholder=\"Marks\" value={props.marks} className=\"input-gray-lg h-10\" />\n            </div>\n            <div onClick={() => props.setSelectedKey(null)} className=\"bg-blue-100 text-blue-600 rounded-full flex items-center justify-center h-12 w-12 cursor-pointer hover:bg-blue-200 hover:text-blue-700\">\n              <HiCheck className=\"text-3xl\" />\n            </div>\n            </>}\n            {props.selectedKey !== SelectedKeysEdit.QuestionAnswer &&\n            <>\n            <div className=\"px-4 py-2 rounded-full bg-blue-100 text-blue-600 font-bold\">Marks: {props.marks}</div>\n            <div onClick={() => props.setSelectedKey(SelectedKeysEdit.QuestionAnswer)} className=\"bg-gray-100 text-gray-600 rounded-full flex items-center justify-center h-12 w-12 cursor-pointer hover:bg-blue-100 hover:text-blue-600\">\n              <MdModeEdit className=\"text-3xl\" />\n            </div>\n            </>}\n          </div>\n        </div>\n      </div>\n      :\n      <div className=\"mb-2 gap-3 bg-white rounded animate__animated animate__fadeIn animate__fast\">\n        <div className=\"flex flex-col gap-2\">\n        {QuestionLanguages.map((item, i) => (\n          <div key={i + 1}className=\"flex flex-col gap-2\">\n            <span className=\"font-bold text-blue-600\">{item.value}</span>\n          <input \n            value={addedAnswer.length > 0 ? addedAnswer.find(itm => itm.lang.key === item.key)?.answer.value : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => \n              handleAnswer(\n                item, \n                { \n                  id: addedAnswer.length > 0 ? addedAnswer[0].answer.id : uuidv4(),\n                  value: e.target.value, \n                  status: addedAnswer.length > 0 ? addedAnswer[0].answer.status : false\n                })}\n            type=\"text\" className=\"input-gray-lg\" />\n          </div>\n        ))}\n        </div>\n        <div className=\"flex flex-row mt-3 items-center justify-end gap-2\">\n        <div \n        onClick={() => handleStatus(addedAnswer.length > 0 ? !(addedAnswer[0].answer.status) : false)}\n        className={`flex flex-row items-center gap-2 cursor-pointer ${addedAnswer.length > 0 && addedAnswer[0].answer.status === true ? \"text-blue-600\" : \"text-gray-600\"} hover:text-blue-600`}>\n          {addedAnswer.length > 0 && addedAnswer[0].answer.status === false ?\n          <ImCheckboxUnchecked className=\"text-2xl cursor-pointer\" /> :\n          <ImCheckboxChecked className=\"text-2xl cursor-pointer\" />}\n          <span className=\"font-bold text-xl\">{addedAnswer.length > 0 && addedAnswer[0].answer.status === true ? \"True\" : \"False\"}</span>\n        </div>\n        <div onClick={() => AddAnswer()} className=\"btn bg-blue-600 text-white hover:bg-blue-800 cursor-pointer w-24 text-center\">Add</div>\n        <div onClick={() => setShowAddAnswer(false)} className=\"btn bg-gray-500 text-white hover:bg-gray-700 cursor-pointer w-24 text-center\">Cancel</div>\n      </div>\n      </div>}\n      {showAddAnswerStatus === false &&\n      <div className=\"rounded bg-white px-2 py-2\">{console.log(props.selectedQuestionType)}\n        {(props.selectedQuestionType === questionTypeElementsType.SingleMultiple || \n        props.selectedQuestionType === questionTypeElementsType.MultipleChoice) && \n        props.selectedQuestionItem.answer.map((item, i) => (\n          <div className={`flex flex-row items-center justify-between mb-2 gap-3 ${props.selectedKey !== SelectedKeysEdit.QuestionAnswer ? \"border-b border-gray-300\" : \"\"}`}>\n            {props.selectedKey === SelectedKeysEdit.QuestionAnswer ?\n            <input\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                let check = props.wholeQuestion.find(itm => itm.language === props.selectedLanguage.key);\n                if (check === undefined) {\n                  check = props.wholeQuestion[0];\n                }\n                props.updateAnswerSingleMultiple(\n                  check, item.value, {\n                    value: e.target.value,\n                    status: item.status,\n                    id: item.id,\n                  }\n                )\n              }}\n              key={i + 1}\n              value={`${item.value}`}\n              type=\"text\" \n              className=\"input-gray-lg w-full border-2 border-gray-500\" /> :\n              <div className=\"w-full flex flex-row items-center gap-3 py-2\">\n                {item.status === true ?\n                <RiShieldCheckFill className=\"text-2xl text-blue-600\" /> :\n                <MdBookmark className=\"text-2xl text-gray-500\" />}\n                {item.value}\n              </div>}\n              {props.selectedKey === SelectedKeysEdit.QuestionAnswer ?\n              <div \n                onClick={() => {\n                  let check = props.wholeQuestion.find(itm => itm.language === props.selectedLanguage.key);\n                  if (check === undefined) {\n                    check = props.wholeQuestion[0];\n                  }\n                  props.editSingleMultipleStatus(\n                    item.id, !item.status\n                  )\n                }}\n                className={`flex flex-row items-center gap-2 cursor-pointer ${item.status === true ? \"text-blue-600\" : \"text-gray-600\"} hover:text-blue-600 w-40`}>\n                  {item.status === false ?\n                  <ImCheckboxUnchecked className=\"text-2xl cursor-pointer\" /> :\n                  <ImCheckboxChecked className=\"text-2xl cursor-pointer\" />}\n                  <span className=\"font-bold \">{item.status === true ? \"Correct\" : \"Incorrect\"}</span>\n                </div> :\n                <div className=\"w-28 flex justify-end text-center\">\n                  <div className={`font-bold px-3 py-2 rounded-full w-28 ${item.status === true ? \"text-green-600 bg-white\" : \"text-gray-600 bg-white\"}`}>\n                    {item.status === true ? \n                      <div className=\"flex flex-row gap-2 items-center\">\n                        <FaCheckCircle className=\"text-xl\" /> <span>Correct</span>\n                      </div> : \n                      <div className=\"flex flex-row gap-2 items-center\">\n                        <FaTimesCircle className=\"text-xl\" /> <span>Incorrect</span>\n                      </div>\n                    }\n                  </div>\n                </div>}\n              <div \n              onClick={() => {\n                props.removeAnswerSingleMultiple(props.wholeQuestion, item)\n              }}\n              className=\"btn bg-red-50 text-red-600 hover:bg-red-200 hover:text-red-800 cursor-pointer\">Remove</div>\n          </div>\n        ))\n        }\n      </div>}\n    </div>\n  )\n}\n\nexport default QuestionAnswer\n","import React, { useState } from 'react'\nimport { LanguageInterface, QuestionItemInterface } from '../../../../../interfaces';\nimport { SelectedKeysEdit } from './EditQuestion';\n\ninterface HandleInputProps {\n  languages: LanguageInterface[];\n  questionItems: QuestionItemInterface[];\n  selectedKey: SelectedKeysEdit;\n  handleUpdateQuestionDetails: (question: QuestionItemInterface) => void;\n}\n\ninterface editedQuestionInterface {\n  lang: LanguageInterface;\n  value: string;\n  status: boolean;\n}\n\nconst HandleInput = (props: HandleInputProps) => {\n  if (props.selectedKey === SelectedKeysEdit.Title) {\n  return (\n    <div>\n      {props.languages.map((item, i) => (\n        <div className=\"flex flex-row items-center animate__animated animate__fadeInDown animate__fast\">\n          <span className=\"font-bold w-24 truncate text-blue-600 flex flex-row items-center gap-2\">\n            {item.value}\n          </span>\n          <input \n            key={i + 1}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              let check = props.questionItems.find(itm => itm.language === item.key);\n              if (check === undefined) {\n                check = props.questionItems[0];\n              }\n              props.handleUpdateQuestionDetails({\n                description: check.description,\n                language: check.language,\n                status: check.status,\n                title: e.target.value,\n                answer: check.answer\n              })\n            }}\n            value={props.questionItems.find(itm => itm.language === item.key)?.title}\n            type=\"text\" className=\"input-gray-lg w-full mt-3\" />\n        </div>\n      ))}\n    </div>\n  )} else if (props.selectedKey === SelectedKeysEdit.Description) {\n    return (\n      <div>\n        {props.languages.map((item, i) => (\n          <div className=\"flex flex-row items-center animate__animated animate__fadeInDown animate__fast\">\n            <span className=\"font-bold w-24 truncate text-blue-600 flex flex-row items-center gap-2\">\n              {item.value}\n            </span>\n            <textarea \n              key={i + 1}\n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n                let check = props.questionItems.find(itm => itm.language === item.key);\n                if (check === undefined) {\n                  check = props.questionItems[0];\n                }\n                props.handleUpdateQuestionDetails({\n                  description: e.target.value,\n                  language: check.language,\n                  status: check.status,\n                  title: check.title,\n                  answer: check.answer\n                })\n              }}\n              value={props.questionItems.find(itm => itm.language === item.key)?.description}\n              className=\"input-gray-lg w-full mt-3\"></textarea>\n          </div>\n        ))}\n      </div>\n    )} else {\n      return <div></div>\n    }\n}\n\nexport default HandleInput\n","import React from 'react'\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im'\nimport { course } from '../../../../../interfaces'\n\ninterface QuestionChaptersProps {\n  selectedCourse: course | null | undefined;\n  addedChapters: string[];\n  setAddChapter: (chapter: string) => void;\n}\n\nconst QuestionChapters = (props: QuestionChaptersProps) => {\n  if (props.selectedCourse === undefined || props.selectedCourse === null) {\n    return (\n      <div>\n        <div className=\"text-6xl text-center text-red-800 font-bold rounded bg-red-100 px-3 py-4\">\n          Invalid course selected!\n        </div>\n      </div>\n    )\n  }\n  else if (props.selectedCourse !== undefined && props.selectedCourse !== null && props.selectedCourse.chapters?.length === 0) {\n    return (\n      <div>\n        <div className=\"text-3xl text-center text-yellow-800 font-bold rounded bg-yellow-100 px-3 py-4\">\n          No chapter available for this course!\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"px-2 pb-2\">\n        <div className=\"text-sm text-gray-500 font-bold\">Selected course</div>\n        <div className=\"bg-blue-50 text-blue-600 font-bold rounded px-3 py-2\">\n          {props.selectedCourse.course_code} - {props.selectedCourse.course_name}\n        </div>\n        <div className=\"flex flex-col gap-2 mt-3\">\n          {props.selectedCourse.chapters !== undefined && props.selectedCourse.chapters.length === 0 ? \n          <div>No chapters found!</div>:\n          props.selectedCourse.chapters && props.selectedCourse.chapters.map((item, i) => (\n            <div \n            onClick={() => props.setAddChapter(item.id)}\n            className={`${props.addedChapters.find(itm => itm === item.id) ? \"text-blue-600\" : \"text-gray-600\"} border rounded px-2 py-2 flex flex-row items-center gap-3 hover:border-blue-500 hover:bg-blue-50 hover:text-blue-600 cursor-pointer`}>\n              {props.addedChapters.find(itm => itm === item.id) ? \n              <ImCheckboxChecked className=\"text-2xl cursor-pointer\" /> :\n              <ImCheckboxUnchecked className=\"text-2xl cursor-pointer\" />}\n              <span>{item.name}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default QuestionChapters\n","import axios from 'axios';\nimport React, { Fragment, useEffect, useState } from 'react'\nimport { FiFileText } from 'react-icons/fi';\nimport { IoMdCloudUpload } from 'react-icons/io'\nimport Alert, { AlertInterface } from '../../../../components/Alert/Alert';\nimport Loading from '../../../../components/Loading/Loading';\nimport { course, QuestionInterface, uploadQuestionsResponse } from '../../../../interfaces'\nimport { formErrorInterface } from '../../../../interfaces/form';\nimport { API } from '../../../../utils/api';\nimport { connect } from \"react-redux\";\nimport {\n  Auth, \n  courseStoreInterface,\n  loadCourses,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  QuestionBankStoreInterface,\n  setUploadedQuestions,\n  questionTypesStoreInterface,\n  loadQuestionTypes,\n  loadQuestionBank,\n} from \"../../../../actions\";\nimport { StoreState } from \"../../../../reducers\";\nimport UploadedQuestions from './UploadedQuestions/UploadedQuestions';\nimport EditQuestion from './EditQuestion/EditQuestion';\n\ninterface UploadInterface {\n  selectedCourse: course;\n  questionBank: QuestionBankStoreInterface;\n  course: courseStoreInterface;\n  questionTypes: questionTypesStoreInterface;\n  setUploadingStatus: (status: boolean) => void;\n  setSelectedCourse: (course: course | null) => void;\n  setUploadedQuestions: (questions: uploadQuestionsResponse | null) => void;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  loadQuestionBank: (callback: (loading: boolean) => void) => void;\n}\n\nconst _Upload = (props: UploadInterface) => {\n  const [questions, setQuestions] = useState<File | null>(null);\n  const [formError, setFormError] = useState<formErrorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [upload_percentage, set_upload_percentage] = useState<number>(0);\n  const [showQuestionEdit, setShowQuestionEdit] = useState<{ status: boolean, question: QuestionInterface | null } | null>(null)\n\n  const validateExcelFile = async (file: File) => {\n    if (file.type !== \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" && file.type !== \"application/vnd.ms-excel\" && file.type !== \"text/csv\") {\n      return setFormError({\n        element: \"questions\",\n        msg: \"Invalid file, Please choose excel file or svg file\"\n      });\n    } else {\n      return null;\n    }\n  }\n\n  const submitQuestion = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // Validation\n    setFormError(null);\n    if (questions === null) {\n      return setFormError({\n        element: \"questions\",\n        msg: \"Please select a file\"\n      })\n    } else if (questions.size === 0) {\n      return setFormError({\n        element: \"questions\",\n        msg: \"Invalid file, Please choose a real file\"\n      })\n    } else if (questions.type !== \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" && questions.type !== \"application/vnd.ms-excel\" && questions.type !== \"text/csv\") {\n      return setFormError({\n        element: \"questions\",\n        msg: \"Invalid file, Please choose excel file or svg file\"\n      });\n    } else {\n      setLoading(true);\n      props.setUploadingStatus(true);\n      try {\n        const formData = new FormData();\n        formData.append(\"course\", props.selectedCourse.course_id);\n        formData.append(\"file\", questions);\n        const res = await axios.post(`${API.QBank}/question`, formData, {\n          onUploadProgress: (progressEvent: any) => {\n            let number_percentage = (+progressEvent?.loaded / +progressEvent.total) * 100;\n            set_upload_percentage(number_percentage)\n          },\n        });\n        if (res.status === 201) {\n          props.setUploadedQuestions(res.data);\n        }\n        console.log(\"Questions: \", res);\n      } catch (error: any) {\n        console.log(\"Err: \", {...error});\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.errors) {\n              setFormError({\n                element: \"questions\",\n                msg: error.response.data.errors[0].message\n              });\n            }\n          }\n        }\n      }\n      setLoading(false);\n      props.setUploadingStatus(false);\n    }\n  }\n\n  const selectQuestion = (question: QuestionInterface) => {\n    setShowQuestionEdit({\n      status: true,\n      question: question\n    })\n  }\n\n  const unSelectQuestion = () => {\n    setShowQuestionEdit({\n      status: false,\n      question: null\n    })\n  }\n\n  useEffect(() => {\n    if (props.questionBank.questions === null) {\n      props.loadQuestionBank(setLoading);\n    }\n  }, [props])\n  \n  return (\n    <Fragment>\n      {props.questionBank.uploadedQuestions === null ?\n      <div className=\"\">\n        <div className=\"flex flex-row justify-between items-center rounded px-3 py-2 bg-white animate__animated animate__fadeIn shadow\">\n          <div className=\"flex flex-col\">\n            <span className=\"font-bold text-blue-600 text-lg truncate\">{props.course.selected_course !== null && props.course.selected_course.course_name}</span>\n            <span className=\"text-xs font-bold text-gray-500 truncate\">Course code: {props.course.selected_course && props.course.selected_course.course_code}</span>\n          </div>\n          <div className=\"btn bg-blue-50 text-blue-500 hover:bg-blue-100 hover:text-blue-700  cursor-pointer\">Download template</div>\n        </div>\n        <form onSubmit={submitQuestion}>\n          <div className={`my-2`}>\n            <label className={`w-full flex flex-col items-center px-4 py-6 tracking-wide rounded border border-gray-400 bg-white ${loading === true ? \"cursor-not-allowed hover:bg-gray-100 bg-gray-100 text-gray-400\" : \"cursor-pointer hover:border-blue-600 border-gray-100 text-blue-600 hover:text-blue-700\"}`}>\n              <IoMdCloudUpload className=\"text-4xl\" />\n              <span className=\"mt-2 text-base leading-normal\">Click to select a file</span>\n              {loading === false &&\n              <input onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setFormError(null);\n                if (e.target.files && e.target.files.length > 0 && loading === false) {\n                    setQuestions(e.target.files[0]);\n                    validateExcelFile(e.target.files[0]);\n                }\n              }} type='file' className=\"hidden\" />}\n            </label>\n          </div>\n          {questions !== null && \n          <div className=\"rounded bg-blue-50 px-3 py-2 flex flex-row items-center justify-between gap-2 border border-blue-500\">\n            <div className=\"flex flex-row gap-2 items-center\">\n              <FiFileText className=\"text-5xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-blue-600 truncate\">File: {questions.name}</span>\n                <span className=\"text-gray-500 text-xs truncate\">File type: {questions.type}</span>\n                <span className=\"text-gray-500 text-xs\">Size: {Math.round(questions.size/1024)} Kbs</span>\n              </div>\n            </div>\n            {loading === false && <div onClick={() => {setQuestions(null); setFormError(null)}} className=\"btn text-sm bg-red-50 text-red-600 border border-red-200 cursor-pointer hover:bg-red-100\">Delete</div>}\n          </div>}\n          {formError !== null && formError.element === \"questions\" && \n          <div onClick={() => setFormError(null)} className=\"mt-2\">\n            <Alert \n              title=\"Invalid\"\n              description={formError.msg}\n              theme={AlertInterface.danger}\n            />\n          </div>}\n          {loading === true &&\n          <div className=\"bg-blue-200 h-6 w-full rounded mt-2\">\n            <div className=\"h-full rounded bg-blue-500 flex flex-row items-center justify-between px-2 truncate text-xs text-white font-bold\" style={{width: `${upload_percentage}%`}}>\n              <span className=\"italic\">Uploading, Please wait...</span>\n              <span>{upload_percentage}%</span>\n            </div>\n          </div>}\n          {loading === true ? <div className=\"mt-5\"><Loading /></div> :\n          <div className=\"flex flex-row items-center justify-between my-2\">\n            <div onClick={() => props.setSelectedCourse(null)} className=\"btn cursor-pointer bg-gray-100\">Back</div>\n            <button type=\"submit\" className=\"btn cursor-pointer bg-blue-600 text-white\">Save questions</button>\n          </div>}\n        </form>\n      </div> : \n      showQuestionEdit !== null && showQuestionEdit.status === true && showQuestionEdit.question !== null && props.questionBank.uploadedQuestions?.insertedData ?\n      <EditQuestion \n        selectedQuestion={showQuestionEdit.question} \n        questionsList={props.questionBank.uploadedQuestions.insertedData}\n        unSelectQuestion={unSelectQuestion} \n      /> :\n      <UploadedQuestions \n        selectedCourse={props.selectedCourse} \n        selectQuestion={selectQuestion} \n        questionTypes={props.questionTypes}\n        loadQuestionTypes={props.loadQuestionTypes}\n      />\n      }\n    </Fragment>\n  );\n}\n\n\nconst mapStateToProps = ({\n  auth,\n  course,\n  schoolLevels,\n  questionBank,\n  questionTypes,\n}: StoreState): { auth: Auth; course: courseStoreInterface; schoolLevels: schoolLevelsStoreInterface; questionBank: QuestionBankStoreInterface; questionTypes: questionTypesStoreInterface; } => {\n  return { auth: auth, course: course, schoolLevels: schoolLevels, questionBank: questionBank, questionTypes: questionTypes };\n};\n\nconst Upload = connect(mapStateToProps, {\n  loadCourses,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  setUploadedQuestions,\n  loadQuestionTypes,\n  loadQuestionBank,\n})(_Upload);\n\nexport default Upload;\n","import React, { Component, Fragment } from 'react'\nimport { FiExternalLink, FiFilter } from 'react-icons/fi';\nimport { IoMdCloudUpload } from 'react-icons/io';\nimport { Link } from \"react-router-dom\";\nimport * as Interfaces from \"../../../../interfaces/index\";\nimport searchData from \"../../../../utils/search\";\n\nimport { connect } from \"react-redux\";\nimport {\n  Auth, \n  courseStoreInterface,\n  loadCourses,\n  schoolLevelsStoreInterface,\n  setSelectedCourse,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  QuestionBankStoreInterface,\n} from \"../../../../actions\";\nimport { StoreState } from \"../../../../reducers\";\nimport { course } from '../../../../interfaces/course';\nimport Loading from '../../../../components/Loading/Loading';\nimport Modal, { ModalSize, Themes } from '../../../../components/Modal/Modal';\nimport SchoolLevelsFilter from '../../../Application/ApplicationPositions/SchoolLevelsFilter/SchoolLevelsFilter';\nimport { searchItem } from '../../../Application/ApplicationPositions/ApplicationPositions';\nimport { FaAngleRight } from 'react-icons/fa';\nimport Upload from './Upload';\n\ninterface UploadQuestionState {\n  loading: boolean;\n  searchLevel: searchItem | null;\n  showFilter: boolean;\n  uploadingStatus: boolean;\n  searchCourseInput: string;\n}\ninterface UploadQuestionProps {\n  auth: Auth;\n  course: courseStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  questionBank: QuestionBankStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  setSelectedEducationCategory: (\n    education_category: Interfaces.education_category\n  ) => void;\n  setSelectedSchoolLevel: (education_category: Interfaces.school_level) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  setSelectedCourse: (course: course | null) => void;\n}\n\nclass _UploadQuestion extends Component<UploadQuestionProps, UploadQuestionState> {\n  constructor(props: UploadQuestionProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n      loading: false,\n      searchLevel: null,\n      showFilter: false,\n      uploadingStatus: false,\n      searchCourseInput: \"\",\n\t\t};\n\t}\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  }\n\n  setSearchLevel = (\n    educationCategory: Interfaces.education_category | null,\n    schoolLevel: Interfaces.school_level | null\n  ) => {\n    this.setState({\n      searchLevel: {\n        educationCategory: educationCategory,\n        schoolLevel: schoolLevel,\n      },\n    });\n    if (educationCategory) {\n      this.props.setSelectedEducationCategory(educationCategory);\n    }\n    if (schoolLevel) {\n      this.props.setSelectedSchoolLevel(schoolLevel);\n      this.setState({ showFilter: false });\n    }\n  };\n\n  setSchoolLevelFilterFn = (status: boolean) => {\n    this.setState({ showFilter: status });\n  };\n\n  filteredCourses = (courses: course[], searched: searchItem | null): course[] => {\n    let filtered: course[] = courses;\n    if (searched !== null) {\n      if (searched.schoolLevel !== null) {\n        filtered = courses.filter((itm) => {\n          if (itm.school_levels.find(itm1 => itm1 === searched.schoolLevel?.school_level_id)) {\n            let status = false;\n            for (let item2 of itm.school_levels) {\n              if (searched.educationCategory?.school_levels.find(i => i === item2)) {\n                status = true;\n              }\n            }\n            return status === true ? itm : null;\n          } else {\n            return null;\n          }\n        })\n      } else if (searched.educationCategory !== null) {\n        filtered = courses.filter((itm) => {\n          let status = false;\n          for (let item2 of itm.school_levels) {\n            if (searched.educationCategory?.school_levels.find(i => i === item2)) {\n              status = true;\n            }\n          }\n          return status === true ? itm : null;\n        })\n      }\n    }\n    return filtered;\n  }\n\n  setUploadingStatus = (status: boolean) => {\n    this.setState({ uploadingStatus: status});\n  }\n\n  componentDidMount = () => {\n    if (this.props.course.courses === null || this.props.course.courses.length === 0) {\n      this.props.loadCourses(this.setLoading);\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"\">\n          <div className=\"mt-3 flex flex-row justify-between items-center\">\n            <div className=\"flex flex-row items-center gap-3\">\n              <IoMdCloudUpload className=\"text-gray-600 text-6xl\" />\n              <div className=\"flex flex-col\">\n                <span className=\"text-gray-700 text-3xl font-extrabold\">Upload questions</span>\n                <span className=\"text-gray-600 text-sm\">\n                  Please make sure you have downloaded the format template before writing list of questions<br/>\n                </span>\n              </div>\n            </div>\n            <div className=\"flex flex-row\">\n              <Link to=\"/question-bank\" className=\"btn bg-white text-blue-600 mr-1 flex flex-row items-center gap-2\">\n                <FiExternalLink className=\"text-2xl\" />\n                <span>Question bank</span>\n              </Link>\n            </div>\n          </div>\n          <div className=\"flex-col\">\n            <div className=\"my-4 grid md:grid-cols-5 gap-2\">\n              {this.props.questionBank.uploadedQuestions === null &&\n              <div className={`animate__animated ${this.props.course.selected_course === null ? \"md:col-span-5\" : \"md:col-span-2 transition-all duration-500 ease-in-out\"} md:flex md:flex-col min-h-full bg-white shadow rounded`}>\n                <div className=\"py-2 px-2\">\n                  <div className=\"flex flex-row gap-2 mb-2 items-center justify-between\">\n                    <div className=\"flex flex-col\">\n                      <div><span className=\"text-lg text-gray-600 font-bold\">Choose a course</span></div>\n                      <div className=\"flex flex-row items-center\">\n                        {this.state.searchLevel?.educationCategory && <span className=\"bg-blue-50 rounded-full px-2 text-xs text-blue-600 font-bold\">{this.state.searchLevel.educationCategory?.education_category_title}</span>}\n                        {this.state.searchLevel?.schoolLevel && <div className=\"flex flex-row items-center\"><FaAngleRight className=\"\" /><span className=\"bg-blue-50 rounded-full px-2 text-xs text-blue-600 font-bold\">{this.state.searchLevel.schoolLevel?.school_level_name}</span></div>}\n                      </div>\n                    </div>\n                    <div onClick={() => { \n                      this.props.schoolLevels.education_categories === null && this.props.loadEducationCategories(this.setLoading);\n                      this.props.schoolLevels.school_levels === null && this.props.loadSchoolLevels(this.setLoading);\n                      this.setState({ showFilter: true }) }} className=\"btn cursor-pointer bg-blue-50 hover:bg-blue-100 text-blue-600 flex flex-row gap-1 items-center\">\n                      <FiFilter className=\"text-xl\" />\n                      <span>Filter</span>\n                    </div> \n                  </div>\n                  <div>\n                    <input onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.setState({ searchCourseInput: e.target.value })} type=\"text\" className=\"input-white h-10 text-sm border-2 border-blue-500\" placeholder=\"Search question by title or description\" />\n                  </div>\n                  <div className=\"mt-4\" style={{minHeight: '500px'}}>\n                    {this.state.uploadingStatus === true ? <div className=\"my-2 flex flex-col gap-2\">\n                      <div className=\"rounded-xl bg-gray-100 h-8\"></div>\n                      <div className=\"rounded-xl bg-gray-100 h-8 w-4/5\"></div>\n                      <div className=\"rounded-xl bg-gray-100 h-8 w-5/6\"></div>\n                      <div className=\"rounded-xl bg-gray-100 h-8\"></div>\n                      <div className=\"rounded-xl bg-gray-100 h-8 w-3/4\"></div>\n                      <div className=\"rounded-xl bg-gray-100 h-8\"></div>\n                    </div> :\n                    this.props.course.courses === null ? <Loading /> :\n                    this.props.course.courses && this.filteredCourses(this.props.course.courses, this.state.searchLevel).length === 0 ? <span className=\"text-gray-400 font-extrabold ml-2 animate__animated animate__shakeX\">No courses available!</span> :\n                    this.props.course.courses && searchData(this.filteredCourses(this.props.course.courses, this.state.searchLevel), this.state.searchCourseInput).map((item, i) => (\n                      <div key={i + 1} \n                      onClick={() => this.props.setSelectedCourse(item)} \n                      className={`rounded border ${this.props.course.selected_course !== null && this.props.course.selected_course.course_id === item.course_id ? \"bg-blue-100 border-blue-300 text-blue-600 animate__animated animate__bounceIn\" : \"border-gray-200 hover:bg-blue-100 hover:border-blue-600 text-gray-600\"}  px-2 py-3 flex flex-row gap-3 items-center my-2 cursor-pointer`}>\n                        <span className=\"text-sm\">\n                          <div className={`h-8 w-8 rounded-full flex justify-center items-center text-white ${this.props.course.selected_course !== null && this.props.course.selected_course.course_id === item.course_id ? \"bg-blue-600 text-white\" : \"font-bold bg-gray-500\"}`}>{i + 1}</div>\n                        </span>\n                        <div className=\"flex flex-col\">\n                          <span className={`text-md font-bold`}>{item.course_name}</span>\n                          <span className={`text-xs`}>Code: {item.course_code}</span>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>}\n                {this.props.course.selected_course !== null &&\n                <div className={`${this.props.questionBank.uploadedQuestions === null ? \"md:col-span-3\" : \"md:col-span-5\"} md:flex flex-col min-h-full rounded`}>\n                  <div className=\"\">\n                    <Upload selectedCourse={this.props.course.selected_course} setUploadingStatus={this.setUploadingStatus} setSelectedCourse={this.props.setSelectedCourse} />\n                  </div>\n                </div>}\n            </div>\n          </div>\n        </div>\n        {this.state.showFilter === true &&\n        <Modal\n          title=\"Filter courses by school levels\"\n          backDrop={true}\n          theme={Themes.default}\n          close={() => this.setState({ showFilter: false })}\n          backDropClose={true}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{title: true,}}\n        >\n          <SchoolLevelsFilter \n            educationCategories={this.props.schoolLevels.education_categories}\n            schoolLevels={this.props.schoolLevels.school_levels}\n            searchLevel={this.state.searchLevel}\n            setSearchLevel={this.setSearchLevel}\n            setSchoolLevelFilterFn={this.setSchoolLevelFilterFn}\n          />\n        </Modal>}\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  course,\n  schoolLevels,\n  questionBank,\n}: StoreState): { auth: Auth; course: courseStoreInterface; schoolLevels: schoolLevelsStoreInterface; questionBank: QuestionBankStoreInterface; } => {\n  return { auth: auth, course: course, schoolLevels: schoolLevels, questionBank: questionBank };\n};\n\nexport const UploadQuestion = connect(mapStateToProps, {\n  loadCourses,\n  setSelectedCourse,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n})(_UploadQuestion);\n"],"sourceRoot":""}